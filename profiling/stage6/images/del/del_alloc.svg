<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="758" onload="init(evt)" viewBox="0 0 1200 758" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="741"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="741"> </text>
<g id="frames">
<g>
<title>all (22,971 samples, 100.00%)</title><rect x="10.0" y="707.0" width="1180.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="13.0" y="718.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (13,074 samples, 56.92%)</title><rect x="10.1" y="691.0" width="671.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="13.1" y="702.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (13,074 samples, 56.92%)</title><rect x="10.1" y="675.0" width="671.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.1" y="686.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (13,074 samples, 56.92%)</title><rect x="10.1" y="659.0" width="671.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="13.1" y="670.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (2,061 samples, 8.97%)</title><rect x="10.1" y="643.0" width="105.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.1" y="654.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2,061 samples, 8.97%)</title><rect x="10.1" y="627.0" width="105.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.1" y="638.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (2,061 samples, 8.97%)</title><rect x="10.1" y="611.0" width="105.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="13.1" y="622.0">java/util/con..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (11 samples, 0.05%)</title><rect x="10.1" y="595.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="13.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$128/1729551726.apply (2,050 samples, 8.92%)</title><rect x="10.6" y="595.0" width="105.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="13.6" y="606.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (2,050 samples, 8.92%)</title><rect x="10.6" y="579.0" width="105.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="13.6" y="590.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (2,050 samples, 8.92%)</title><rect x="10.6" y="563.0" width="105.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.6" y="574.0">jdk/internal/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (10 samples, 0.04%)</title><rect x="10.6" y="547.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.6" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (10 samples, 0.04%)</title><rect x="10.6" y="531.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$236/388216554.get$Lambda (5 samples, 0.02%)</title><rect x="10.6" y="515.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="13.6" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$236 (5 samples, 0.02%)</title><rect x="10.6" y="499.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="13.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$237/1895279177.get$Lambda (5 samples, 0.02%)</title><rect x="10.9" y="515.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.9" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$237 (5 samples, 0.02%)</title><rect x="10.9" y="499.0" width="0.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="13.9" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (28 samples, 0.12%)</title><rect x="11.1" y="547.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="14.1" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (28 samples, 0.12%)</title><rect x="11.1" y="531.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="14.1" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (13 samples, 0.06%)</title><rect x="11.1" y="515.0" width="0.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="14.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (15 samples, 0.07%)</title><rect x="11.8" y="515.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="14.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (15 samples, 0.07%)</title><rect x="11.8" y="499.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="14.8" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (15 samples, 0.07%)</title><rect x="11.8" y="483.0" width="0.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="14.8" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (42 samples, 0.18%)</title><rect x="12.6" y="547.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="15.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (42 samples, 0.18%)</title><rect x="12.6" y="531.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="15.6" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (28 samples, 0.12%)</title><rect x="12.6" y="515.0" width="1.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="15.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (14 samples, 0.06%)</title><rect x="14.0" y="515.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="17.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (14 samples, 0.06%)</title><rect x="14.0" y="499.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="17.0" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (14 samples, 0.06%)</title><rect x="14.0" y="483.0" width="0.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="17.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (1,970 samples, 8.58%)</title><rect x="14.7" y="547.0" width="101.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="17.7" y="558.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (1,970 samples, 8.58%)</title><rect x="14.7" y="531.0" width="101.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="17.7" y="542.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (1,970 samples, 8.58%)</title><rect x="14.7" y="515.0" width="101.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="17.7" y="526.0">jdk/internal..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (54 samples, 0.24%)</title><rect x="14.7" y="499.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="17.7" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (54 samples, 0.24%)</title><rect x="14.7" y="483.0" width="2.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="17.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$148/2053429061.get$Lambda (32 samples, 0.14%)</title><rect x="14.7" y="467.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="17.7" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$148 (32 samples, 0.14%)</title><rect x="14.7" y="451.0" width="1.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="17.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$149/2119912657.get$Lambda (14 samples, 0.06%)</title><rect x="16.4" y="467.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="19.4" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$149 (14 samples, 0.06%)</title><rect x="16.4" y="451.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="19.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$209/384755526.get$Lambda (8 samples, 0.03%)</title><rect x="17.1" y="467.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="20.1" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$209 (8 samples, 0.03%)</title><rect x="17.1" y="451.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="20.1" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (1,190 samples, 5.18%)</title><rect x="17.5" y="499.0" width="61.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="20.5" y="510.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (1,190 samples, 5.18%)</title><rect x="17.5" y="483.0" width="61.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="20.5" y="494.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (1,180 samples, 5.14%)</title><rect x="17.5" y="467.0" width="60.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="20.5" y="478.0">java/u..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$209/384755526.apply (1,180 samples, 5.14%)</title><rect x="17.5" y="451.0" width="60.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="20.5" y="462.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (1,180 samples, 5.14%)</title><rect x="17.5" y="435.0" width="60.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="20.5" y="446.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (1,180 samples, 5.14%)</title><rect x="17.5" y="419.0" width="60.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="20.5" y="430.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$149/2119912657.apply (1,180 samples, 5.14%)</title><rect x="17.5" y="403.0" width="60.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="20.5" y="414.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (1,180 samples, 5.14%)</title><rect x="17.5" y="387.0" width="60.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="20.5" y="398.0">jdk/in..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (8 samples, 0.03%)</title><rect x="17.5" y="371.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="20.5" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (8 samples, 0.03%)</title><rect x="17.5" y="355.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="20.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$235/542698874.get$Lambda (8 samples, 0.03%)</title><rect x="17.5" y="339.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="20.5" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$235 (8 samples, 0.03%)</title><rect x="17.5" y="323.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="20.5" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (33 samples, 0.14%)</title><rect x="17.9" y="371.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="20.9" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (33 samples, 0.14%)</title><rect x="17.9" y="355.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="20.9" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (14 samples, 0.06%)</title><rect x="17.9" y="339.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="20.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (15 samples, 0.07%)</title><rect x="18.8" y="339.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="21.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (15 samples, 0.07%)</title><rect x="18.8" y="323.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="21.8" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (15 samples, 0.07%)</title><rect x="18.8" y="307.0" width="0.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="21.8" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (23 samples, 0.10%)</title><rect x="19.6" y="371.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="22.6" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (23 samples, 0.10%)</title><rect x="19.6" y="355.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="22.6" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (14 samples, 0.06%)</title><rect x="19.6" y="339.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="22.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (9 samples, 0.04%)</title><rect x="20.3" y="339.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="23.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (9 samples, 0.04%)</title><rect x="20.3" y="323.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="23.3" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (9 samples, 0.04%)</title><rect x="20.3" y="307.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="23.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (1,116 samples, 4.86%)</title><rect x="20.8" y="371.0" width="57.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="23.8" y="382.0">jdk/in..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (9 samples, 0.04%)</title><rect x="20.8" y="355.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="23.8" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (9 samples, 0.04%)</title><rect x="20.8" y="339.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="23.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$232/1335640103.get$Lambda (6 samples, 0.03%)</title><rect x="20.8" y="323.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="23.8" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$232 (6 samples, 0.03%)</title><rect x="20.8" y="307.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="23.8" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (958 samples, 4.17%)</title><rect x="21.2" y="355.0" width="49.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="24.2" y="366.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (958 samples, 4.17%)</title><rect x="21.2" y="339.0" width="49.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="24.2" y="350.0">java/..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (14 samples, 0.06%)</title><rect x="21.2" y="323.0" width="0.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="24.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$232/1335640103.apply (926 samples, 4.03%)</title><rect x="22.0" y="323.0" width="47.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="25.0" y="334.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (926 samples, 4.03%)</title><rect x="22.0" y="307.0" width="47.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="25.0" y="318.0">jdk/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (7 samples, 0.03%)</title><rect x="22.0" y="291.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="25.0" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7 samples, 0.03%)</title><rect x="22.0" y="275.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="25.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$245/1147499784.get$Lambda (7 samples, 0.03%)</title><rect x="22.0" y="259.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="25.0" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$245 (7 samples, 0.03%)</title><rect x="22.0" y="243.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="25.0" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (20 samples, 0.09%)</title><rect x="22.3" y="291.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="25.3" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (20 samples, 0.09%)</title><rect x="22.3" y="275.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="25.3" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (13 samples, 0.06%)</title><rect x="22.3" y="259.0" width="0.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="25.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (7 samples, 0.03%)</title><rect x="23.0" y="259.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="26.0" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (7 samples, 0.03%)</title><rect x="23.0" y="243.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="26.0" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (7 samples, 0.03%)</title><rect x="23.0" y="227.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="26.0" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (10 samples, 0.04%)</title><rect x="23.4" y="291.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="26.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (16 samples, 0.07%)</title><rect x="23.9" y="291.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="26.9" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (11 samples, 0.05%)</title><rect x="23.9" y="275.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="26.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (5 samples, 0.02%)</title><rect x="24.4" y="275.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="27.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (25 samples, 0.11%)</title><rect x="24.7" y="291.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="27.7" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (25 samples, 0.11%)</title><rect x="24.7" y="275.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="27.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (8 samples, 0.03%)</title><rect x="24.7" y="259.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="27.7" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (8 samples, 0.03%)</title><rect x="24.7" y="243.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="27.7" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (8 samples, 0.03%)</title><rect x="24.7" y="227.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="27.7" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (8 samples, 0.03%)</title><rect x="24.7" y="211.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="27.7" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (17 samples, 0.07%)</title><rect x="25.1" y="259.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="28.1" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (17 samples, 0.07%)</title><rect x="25.1" y="243.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="28.1" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (15 samples, 0.07%)</title><rect x="25.1" y="227.0" width="0.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="28.1" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (848 samples, 3.69%)</title><rect x="26.0" y="291.0" width="43.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="29.0" y="302.0">jdk/..</text>
</g>
<g>
<title>java.lang.StringBuilder (12 samples, 0.05%)</title><rect x="26.0" y="275.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="29.0" y="286.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (99 samples, 0.43%)</title><rect x="26.6" y="275.0" width="5.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="29.6" y="286.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (99 samples, 0.43%)</title><rect x="26.6" y="259.0" width="5.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="29.6" y="270.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (99 samples, 0.43%)</title><rect x="26.6" y="243.0" width="5.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="29.6" y="254.0"></text>
</g>
<g>
<title>byte[] (92 samples, 0.40%)</title><rect x="26.6" y="227.0" width="4.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="29.6" y="238.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.03%)</title><rect x="31.3" y="227.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="34.3" y="238.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (27 samples, 0.12%)</title><rect x="31.7" y="275.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="34.7" y="286.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (27 samples, 0.12%)</title><rect x="31.7" y="259.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="34.7" y="270.0"></text>
</g>
<g>
<title>byte[] (27 samples, 0.12%)</title><rect x="31.7" y="243.0" width="1.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="34.7" y="254.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (80 samples, 0.35%)</title><rect x="33.1" y="275.0" width="4.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="36.1" y="286.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (80 samples, 0.35%)</title><rect x="33.1" y="259.0" width="4.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="36.1" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (80 samples, 0.35%)</title><rect x="33.1" y="243.0" width="4.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="36.1" y="254.0"></text>
</g>
<g>
<title>byte[] (75 samples, 0.33%)</title><rect x="33.1" y="227.0" width="3.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="36.1" y="238.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.02%)</title><rect x="36.9" y="227.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="39.9" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (14 samples, 0.06%)</title><rect x="37.2" y="275.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="40.2" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (14 samples, 0.06%)</title><rect x="37.2" y="259.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="40.2" y="270.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (14 samples, 0.06%)</title><rect x="37.2" y="243.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="40.2" y="254.0"></text>
</g>
<g>
<title>java/util/List.of (10 samples, 0.04%)</title><rect x="37.9" y="275.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="40.9" y="286.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (10 samples, 0.04%)</title><rect x="37.9" y="259.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="40.9" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (511 samples, 2.22%)</title><rect x="38.4" y="275.0" width="26.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="41.4" y="286.0">j..</text>
</g>
<g>
<title>java/util/function/BiPredicate.and (7 samples, 0.03%)</title><rect x="38.4" y="259.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="41.4" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (7 samples, 0.03%)</title><rect x="38.4" y="243.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="41.4" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7 samples, 0.03%)</title><rect x="38.4" y="227.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="41.4" y="238.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$248/471895969.get$Lambda (7 samples, 0.03%)</title><rect x="38.4" y="211.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="41.4" y="222.0"></text>
</g>
<g>
<title>java.util.function.BiPredicate$$Lambda$248 (7 samples, 0.03%)</title><rect x="38.4" y="195.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="41.4" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (233 samples, 1.01%)</title><rect x="38.8" y="259.0" width="11.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="41.8" y="270.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (120 samples, 0.52%)</title><rect x="38.8" y="243.0" width="6.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="41.8" y="254.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (120 samples, 0.52%)</title><rect x="38.8" y="227.0" width="6.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="41.8" y="238.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (120 samples, 0.52%)</title><rect x="38.8" y="211.0" width="6.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="41.8" y="222.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (120 samples, 0.52%)</title><rect x="38.8" y="195.0" width="6.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="41.8" y="206.0"></text>
</g>
<g>
<title>byte[] (116 samples, 0.50%)</title><rect x="38.8" y="179.0" width="5.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="41.8" y="190.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (17 samples, 0.07%)</title><rect x="44.9" y="243.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="47.9" y="254.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (17 samples, 0.07%)</title><rect x="44.9" y="227.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="47.9" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (17 samples, 0.07%)</title><rect x="44.9" y="211.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="47.9" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntryIterator (17 samples, 0.07%)</title><rect x="44.9" y="195.0" width="0.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="47.9" y="206.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.entrySet (18 samples, 0.08%)</title><rect x="45.8" y="243.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="48.8" y="254.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet (11 samples, 0.05%)</title><rect x="45.8" y="227.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="48.8" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.entrySet (7 samples, 0.03%)</title><rect x="46.4" y="227.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="49.4" y="238.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntrySet (7 samples, 0.03%)</title><rect x="46.4" y="211.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="49.4" y="222.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$248/471895969.test (78 samples, 0.34%)</title><rect x="46.7" y="243.0" width="4.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="49.7" y="254.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (78 samples, 0.34%)</title><rect x="46.7" y="227.0" width="4.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="49.7" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$77/1464555023.test (78 samples, 0.34%)</title><rect x="46.7" y="211.0" width="4.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="49.7" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (78 samples, 0.34%)</title><rect x="46.7" y="195.0" width="4.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="49.7" y="206.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$66/254801937.test (78 samples, 0.34%)</title><rect x="46.7" y="179.0" width="4.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="49.7" y="190.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (78 samples, 0.34%)</title><rect x="46.7" y="163.0" width="4.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="49.7" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$65/270056930.test (78 samples, 0.34%)</title><rect x="46.7" y="147.0" width="4.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="49.7" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (78 samples, 0.34%)</title><rect x="46.7" y="131.0" width="4.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="49.7" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (78 samples, 0.34%)</title><rect x="46.7" y="115.0" width="4.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="49.7" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (78 samples, 0.34%)</title><rect x="46.7" y="99.0" width="4.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="49.7" y="110.0"></text>
</g>
<g>
<title>java.lang.String (40 samples, 0.17%)</title><rect x="46.7" y="83.0" width="2.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="49.7" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (38 samples, 0.17%)</title><rect x="48.8" y="83.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="51.8" y="94.0"></text>
</g>
<g>
<title>byte[] (38 samples, 0.17%)</title><rect x="48.8" y="67.0" width="1.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="51.8" y="78.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (271 samples, 1.18%)</title><rect x="50.7" y="259.0" width="14.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="53.7" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (271 samples, 1.18%)</title><rect x="50.7" y="243.0" width="14.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="53.7" y="254.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (271 samples, 1.18%)</title><rect x="50.7" y="227.0" width="14.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="53.7" y="238.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (6 samples, 0.03%)</title><rect x="50.7" y="211.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="53.7" y="222.0"></text>
</g>
<g>
<title>java.util.ArrayList (8 samples, 0.03%)</title><rect x="51.0" y="211.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="54.0" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap (13 samples, 0.06%)</title><rect x="51.5" y="211.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="54.5" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.02%)</title><rect x="52.3" y="211.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="55.3" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.02%)</title><rect x="52.3" y="195.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="55.3" y="206.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$115/937225413.get$Lambda (5 samples, 0.02%)</title><rect x="52.3" y="179.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="55.3" y="190.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$115 (5 samples, 0.02%)</title><rect x="52.3" y="163.0" width="0.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="55.3" y="174.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (8 samples, 0.03%)</title><rect x="52.5" y="211.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="55.5" y="222.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (8 samples, 0.03%)</title><rect x="52.5" y="195.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="55.5" y="206.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (218 samples, 0.95%)</title><rect x="52.9" y="211.0" width="11.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="55.9" y="222.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$115/937225413.accept (218 samples, 0.95%)</title><rect x="52.9" y="195.0" width="11.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="55.9" y="206.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (218 samples, 0.95%)</title><rect x="52.9" y="179.0" width="11.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="55.9" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (40 samples, 0.17%)</title><rect x="52.9" y="163.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="55.9" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (40 samples, 0.17%)</title><rect x="52.9" y="147.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="55.9" y="158.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$118/2131634163.get$Lambda (40 samples, 0.17%)</title><rect x="52.9" y="131.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="55.9" y="142.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$118 (40 samples, 0.17%)</title><rect x="52.9" y="115.0" width="2.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="55.9" y="126.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (17 samples, 0.07%)</title><rect x="55.0" y="163.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="58.0" y="174.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$118/2131634163.accept (17 samples, 0.07%)</title><rect x="55.0" y="147.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="58.0" y="158.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (17 samples, 0.07%)</title><rect x="55.0" y="131.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="58.0" y="142.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (17 samples, 0.07%)</title><rect x="55.0" y="115.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="58.0" y="126.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (17 samples, 0.07%)</title><rect x="55.0" y="99.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="58.0" y="110.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (17 samples, 0.07%)</title><rect x="55.0" y="83.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="58.0" y="94.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (17 samples, 0.07%)</title><rect x="55.0" y="67.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="58.0" y="78.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (17 samples, 0.07%)</title><rect x="55.0" y="51.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="58.0" y="62.0"></text>
</g>
<g>
<title>java.lang.Object[] (17 samples, 0.07%)</title><rect x="55.0" y="35.0" width="0.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="58.0" y="46.0"></text>
</g>
<g>
<title>java/util/List.copyOf (99 samples, 0.43%)</title><rect x="55.9" y="163.0" width="5.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="58.9" y="174.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (99 samples, 0.43%)</title><rect x="55.9" y="147.0" width="5.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="58.9" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (55 samples, 0.24%)</title><rect x="55.9" y="131.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="58.9" y="142.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (55 samples, 0.24%)</title><rect x="55.9" y="115.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="58.9" y="126.0"></text>
</g>
<g>
<title>java.lang.Object[] (55 samples, 0.24%)</title><rect x="55.9" y="99.0" width="2.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="58.9" y="110.0"></text>
</g>
<g>
<title>java/util/List.of (44 samples, 0.19%)</title><rect x="58.7" y="131.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="61.7" y="142.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (44 samples, 0.19%)</title><rect x="58.7" y="115.0" width="2.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="61.7" y="126.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (62 samples, 0.27%)</title><rect x="61.0" y="163.0" width="3.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="64.0" y="174.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (62 samples, 0.27%)</title><rect x="61.0" y="147.0" width="3.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="64.0" y="158.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (10 samples, 0.04%)</title><rect x="64.1" y="211.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="67.1" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap (10 samples, 0.04%)</title><rect x="64.1" y="195.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="67.1" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (21 samples, 0.09%)</title><rect x="64.7" y="275.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="67.7" y="286.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (6 samples, 0.03%)</title><rect x="64.7" y="259.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="67.7" y="270.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.03%)</title><rect x="64.7" y="243.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="67.7" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (15 samples, 0.07%)</title><rect x="65.0" y="259.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="68.0" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (15 samples, 0.07%)</title><rect x="65.0" y="243.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="68.0" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/667821226.invoke (15 samples, 0.07%)</title><rect x="65.0" y="227.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="68.0" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (15 samples, 0.07%)</title><rect x="65.0" y="211.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="68.0" y="222.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (5 samples, 0.02%)</title><rect x="65.0" y="195.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="68.0" y="206.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.02%)</title><rect x="65.0" y="179.0" width="0.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="68.0" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (10 samples, 0.04%)</title><rect x="65.2" y="195.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="68.2" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (10 samples, 0.04%)</title><rect x="65.2" y="179.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="68.2" y="190.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.04%)</title><rect x="65.2" y="163.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="68.2" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (27 samples, 0.12%)</title><rect x="65.7" y="275.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="68.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (27 samples, 0.12%)</title><rect x="65.7" y="259.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="68.7" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (27 samples, 0.12%)</title><rect x="65.7" y="243.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="68.7" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (27 samples, 0.12%)</title><rect x="65.7" y="227.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="68.7" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/667821226.invoke (27 samples, 0.12%)</title><rect x="65.7" y="211.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="68.7" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (27 samples, 0.12%)</title><rect x="65.7" y="195.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="68.7" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (23 samples, 0.10%)</title><rect x="65.9" y="179.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="68.9" y="190.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (23 samples, 0.10%)</title><rect x="65.9" y="163.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="68.9" y="174.0"></text>
</g>
<g>
<title>byte[] (23 samples, 0.10%)</title><rect x="65.9" y="147.0" width="1.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="68.9" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (47 samples, 0.20%)</title><rect x="67.1" y="275.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="70.1" y="286.0"></text>
</g>
<g>
<title>java.util.ArrayList (12 samples, 0.05%)</title><rect x="67.1" y="259.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="70.1" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (14 samples, 0.06%)</title><rect x="67.7" y="259.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="70.7" y="270.0"></text>
</g>
<g>
<title>java.lang.Object[] (14 samples, 0.06%)</title><rect x="67.7" y="243.0" width="0.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="70.7" y="254.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (21 samples, 0.09%)</title><rect x="68.5" y="259.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="71.5" y="270.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (21 samples, 0.09%)</title><rect x="68.5" y="243.0" width="1.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="71.5" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (18 samples, 0.08%)</title><rect x="69.5" y="323.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="72.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (18 samples, 0.08%)</title><rect x="69.5" y="307.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="72.5" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (18 samples, 0.08%)</title><rect x="69.5" y="291.0" width="1.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="72.5" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response (26 samples, 0.11%)</title><rect x="70.5" y="355.0" width="1.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="73.5" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (13 samples, 0.06%)</title><rect x="71.8" y="355.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="74.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (110 samples, 0.48%)</title><rect x="72.5" y="355.0" width="5.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="75.5" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (9 samples, 0.04%)</title><rect x="72.5" y="339.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="75.5" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (9 samples, 0.04%)</title><rect x="72.5" y="323.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="75.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$214/1397508456.get$Lambda (6 samples, 0.03%)</title><rect x="72.5" y="307.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="75.5" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$214 (6 samples, 0.03%)</title><rect x="72.5" y="291.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="75.5" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1HeaderParser (7 samples, 0.03%)</title><rect x="72.9" y="339.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="75.9" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$BodyReader (9 samples, 0.04%)</title><rect x="73.3" y="339.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="76.3" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$HeadersReader (12 samples, 0.05%)</title><rect x="73.7" y="339.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="76.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (36 samples, 0.16%)</title><rect x="74.4" y="339.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="77.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (36 samples, 0.16%)</title><rect x="74.4" y="323.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="77.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (36 samples, 0.16%)</title><rect x="74.4" y="307.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="77.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (36 samples, 0.16%)</title><rect x="74.4" y="291.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="77.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (36 samples, 0.16%)</title><rect x="74.4" y="275.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="77.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (36 samples, 0.16%)</title><rect x="74.4" y="259.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="77.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$199/1509846524.run (36 samples, 0.16%)</title><rect x="74.4" y="243.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="77.4" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (36 samples, 0.16%)</title><rect x="74.4" y="227.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="77.4" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (36 samples, 0.16%)</title><rect x="74.4" y="211.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="77.4" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (12 samples, 0.05%)</title><rect x="74.4" y="195.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="77.4" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (12 samples, 0.05%)</title><rect x="74.4" y="179.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="77.4" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$221/1241815609.get$Lambda (8 samples, 0.03%)</title><rect x="74.6" y="163.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="77.6" y="174.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$221 (8 samples, 0.03%)</title><rect x="74.6" y="147.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="77.6" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (9 samples, 0.04%)</title><rect x="75.0" y="195.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="78.0" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (15 samples, 0.07%)</title><rect x="75.4" y="195.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="78.4" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (15 samples, 0.07%)</title><rect x="75.4" y="179.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="78.4" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (12 samples, 0.05%)</title><rect x="75.6" y="163.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="78.6" y="174.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (12 samples, 0.05%)</title><rect x="75.6" y="147.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="78.6" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.&lt;init&gt; (29 samples, 0.13%)</title><rect x="76.2" y="339.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="79.2" y="350.0"></text>
</g>
<g>
<title>java.util.HashMap (15 samples, 0.07%)</title><rect x="76.4" y="323.0" width="0.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="79.4" y="334.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (10 samples, 0.04%)</title><rect x="77.2" y="323.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="80.2" y="334.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (10 samples, 0.04%)</title><rect x="77.2" y="307.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="80.2" y="318.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.04%)</title><rect x="77.2" y="291.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="80.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.start (8 samples, 0.03%)</title><rect x="77.7" y="339.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="80.7" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (8 samples, 0.03%)</title><rect x="77.7" y="323.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="80.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (10 samples, 0.04%)</title><rect x="78.1" y="467.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="81.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (10 samples, 0.04%)</title><rect x="78.1" y="451.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="81.1" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (10 samples, 0.04%)</title><rect x="78.1" y="435.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="81.1" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (23 samples, 0.10%)</title><rect x="78.6" y="499.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="81.6" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (23 samples, 0.10%)</title><rect x="78.6" y="483.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="81.6" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (8 samples, 0.03%)</title><rect x="78.6" y="467.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="81.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (15 samples, 0.07%)</title><rect x="79.0" y="467.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="82.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (15 samples, 0.07%)</title><rect x="79.0" y="451.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="82.0" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (15 samples, 0.07%)</title><rect x="79.0" y="435.0" width="0.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="82.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (703 samples, 3.06%)</title><rect x="79.8" y="499.0" width="36.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="82.8" y="510.0">jdk..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (18 samples, 0.08%)</title><rect x="79.8" y="483.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="82.8" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (18 samples, 0.08%)</title><rect x="79.8" y="467.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="82.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$205/1250947798.get$Lambda (9 samples, 0.04%)</title><rect x="79.8" y="451.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="82.8" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$205 (9 samples, 0.04%)</title><rect x="79.8" y="435.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="82.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$207/900893826.get$Lambda (9 samples, 0.04%)</title><rect x="80.3" y="451.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="83.3" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$207 (9 samples, 0.04%)</title><rect x="80.3" y="435.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="83.3" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (18 samples, 0.08%)</title><rect x="80.7" y="483.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="83.7" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (18 samples, 0.08%)</title><rect x="80.7" y="467.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="83.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$207/900893826.apply (8 samples, 0.03%)</title><rect x="80.7" y="451.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="83.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$establishExchange$2 (8 samples, 0.03%)</title><rect x="80.7" y="435.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="83.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (8 samples, 0.03%)</title><rect x="80.7" y="419.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="83.7" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (8 samples, 0.03%)</title><rect x="80.7" y="403.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="83.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (10 samples, 0.04%)</title><rect x="81.1" y="451.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="84.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (10 samples, 0.04%)</title><rect x="81.1" y="435.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="84.1" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (10 samples, 0.04%)</title><rect x="81.1" y="419.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="84.1" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (12 samples, 0.05%)</title><rect x="81.7" y="483.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="84.7" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (12 samples, 0.05%)</title><rect x="81.7" y="467.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="84.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (12 samples, 0.05%)</title><rect x="81.7" y="451.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="84.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (12 samples, 0.05%)</title><rect x="81.7" y="435.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="84.7" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (12 samples, 0.05%)</title><rect x="81.7" y="419.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="84.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (655 samples, 2.85%)</title><rect x="82.3" y="483.0" width="33.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="85.3" y="494.0">jd..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.02%)</title><rect x="82.3" y="467.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="85.3" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.02%)</title><rect x="82.3" y="451.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="85.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$154/1584594711.get$Lambda (5 samples, 0.02%)</title><rect x="82.3" y="435.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="85.3" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ExchangeImpl$$Lambda$154 (5 samples, 0.02%)</title><rect x="82.3" y="419.0" width="0.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="85.3" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (613 samples, 2.67%)</title><rect x="82.5" y="467.0" width="31.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="85.5" y="478.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (613 samples, 2.67%)</title><rect x="82.5" y="451.0" width="31.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="85.5" y="462.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (608 samples, 2.65%)</title><rect x="82.5" y="435.0" width="31.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="85.5" y="446.0">ja..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$154/1584594711.apply (608 samples, 2.65%)</title><rect x="82.5" y="419.0" width="31.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="85.5" y="430.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$get$0 (608 samples, 2.65%)</title><rect x="82.5" y="403.0" width="31.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="85.5" y="414.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createExchangeImpl (608 samples, 2.65%)</title><rect x="82.5" y="387.0" width="31.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="85.5" y="398.0">jd..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.03%)</title><rect x="82.5" y="371.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="85.5" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.03%)</title><rect x="82.5" y="355.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="85.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$201/376986198.get$Lambda (6 samples, 0.03%)</title><rect x="82.5" y="339.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="85.5" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ExchangeImpl$$Lambda$201 (6 samples, 0.03%)</title><rect x="82.5" y="323.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="85.5" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (249 samples, 1.08%)</title><rect x="82.8" y="371.0" width="12.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="85.8" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (249 samples, 1.08%)</title><rect x="82.8" y="355.0" width="12.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="85.8" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (249 samples, 1.08%)</title><rect x="82.8" y="339.0" width="12.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="85.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$201/376986198.apply (244 samples, 1.06%)</title><rect x="82.8" y="323.0" width="12.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="85.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$1 (244 samples, 1.06%)</title><rect x="82.8" y="307.0" width="12.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="85.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (244 samples, 1.06%)</title><rect x="82.8" y="291.0" width="12.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="85.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (244 samples, 1.06%)</title><rect x="82.8" y="275.0" width="12.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="85.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getSettingsString (143 samples, 0.62%)</title><rect x="82.8" y="259.0" width="7.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="85.8" y="270.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encodeToString (41 samples, 0.18%)</title><rect x="82.8" y="243.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="85.8" y="254.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.02%)</title><rect x="82.8" y="227.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="85.8" y="238.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (18 samples, 0.08%)</title><rect x="83.1" y="227.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="86.1" y="238.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (18 samples, 0.08%)</title><rect x="83.1" y="211.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="86.1" y="222.0"></text>
</g>
<g>
<title>byte[] (18 samples, 0.08%)</title><rect x="83.1" y="195.0" width="0.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="86.1" y="206.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encode (18 samples, 0.08%)</title><rect x="84.0" y="227.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="87.0" y="238.0"></text>
</g>
<g>
<title>byte[] (18 samples, 0.08%)</title><rect x="84.0" y="211.0" width="0.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="87.0" y="222.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.withoutPadding (7 samples, 0.03%)</title><rect x="84.9" y="243.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="87.9" y="254.0"></text>
</g>
<g>
<title>java.util.Base64$Encoder (7 samples, 0.03%)</title><rect x="84.9" y="227.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="87.9" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getClientSettings (67 samples, 0.29%)</title><rect x="85.3" y="243.0" width="3.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="88.3" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.frame.SettingsFrame (8 samples, 0.03%)</title><rect x="85.3" y="227.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="88.3" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getParameter (49 samples, 0.21%)</title><rect x="85.7" y="227.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="88.7" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getIntegerNetProperty (49 samples, 0.21%)</title><rect x="85.7" y="211.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="88.7" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/896644936.linkToTargetMethod (35 samples, 0.15%)</title><rect x="85.7" y="195.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="88.7" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (35 samples, 0.15%)</title><rect x="85.7" y="179.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="88.7" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$61/1212772528.get$Lambda (35 samples, 0.15%)</title><rect x="85.7" y="163.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="88.7" y="174.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Utils$$Lambda$61 (35 samples, 0.15%)</title><rect x="85.7" y="147.0" width="1.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="88.7" y="158.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (14 samples, 0.06%)</title><rect x="87.5" y="195.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="90.5" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$61/1212772528.run (14 samples, 0.06%)</title><rect x="87.5" y="179.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="90.5" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$getIntegerNetProperty$11 (14 samples, 0.06%)</title><rect x="87.5" y="163.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="90.5" y="174.0"></text>
</g>
<g>
<title>sun/net/NetProperties.getInteger (14 samples, 0.06%)</title><rect x="87.5" y="147.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="90.5" y="158.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (14 samples, 0.06%)</title><rect x="87.5" y="131.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="90.5" y="142.0"></text>
</g>
<g>
<title>java.lang.Integer (14 samples, 0.06%)</title><rect x="87.5" y="115.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="90.5" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (10 samples, 0.04%)</title><rect x="88.2" y="227.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="91.2" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (10 samples, 0.04%)</title><rect x="88.2" y="211.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="91.2" y="222.0"></text>
</g>
<g>
<title>int[] (10 samples, 0.04%)</title><rect x="88.2" y="195.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="91.2" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.toByteArray (28 samples, 0.12%)</title><rect x="88.7" y="243.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="91.7" y="254.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.06%)</title><rect x="88.7" y="227.0" width="0.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="91.7" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (14 samples, 0.06%)</title><rect x="89.5" y="227.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="92.5" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (14 samples, 0.06%)</title><rect x="89.5" y="211.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="92.5" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (14 samples, 0.06%)</title><rect x="89.5" y="195.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="92.5" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (101 samples, 0.44%)</title><rect x="90.2" y="259.0" width="5.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="93.2" y="270.0"></text>
</g>
<g>
<title>java.util.ArrayList (27 samples, 0.12%)</title><rect x="90.2" y="243.0" width="1.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="93.2" y="254.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (33 samples, 0.14%)</title><rect x="91.6" y="243.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="94.6" y="254.0"></text>
</g>
<g>
<title>java.lang.Object[] (33 samples, 0.14%)</title><rect x="91.6" y="227.0" width="1.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="94.6" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (41 samples, 0.18%)</title><rect x="93.3" y="243.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="96.3" y="254.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (41 samples, 0.18%)</title><rect x="93.3" y="227.0" width="2.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="96.3" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (5 samples, 0.02%)</title><rect x="95.4" y="323.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="98.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (5 samples, 0.02%)</title><rect x="95.4" y="307.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="98.4" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (5 samples, 0.02%)</title><rect x="95.4" y="291.0" width="0.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="98.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (353 samples, 1.54%)</title><rect x="95.6" y="371.0" width="18.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="98.6" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange (25 samples, 0.11%)</title><rect x="95.6" y="355.0" width="1.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="98.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (319 samples, 1.39%)</title><rect x="96.9" y="355.0" width="16.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="99.9" y="366.0"></text>
</g>
<g>
<title>java.util.LinkedList (10 samples, 0.04%)</title><rect x="97.1" y="339.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="100.1" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (23 samples, 0.10%)</title><rect x="97.7" y="339.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="100.7" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (23 samples, 0.10%)</title><rect x="97.7" y="323.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="100.7" y="334.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (23 samples, 0.10%)</title><rect x="97.7" y="307.0" width="1.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="100.7" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (7 samples, 0.03%)</title><rect x="98.9" y="339.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="101.9" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (7 samples, 0.03%)</title><rect x="98.9" y="323.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="101.9" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver (18 samples, 0.08%)</title><rect x="99.3" y="339.0" width="0.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="102.3" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher (16 samples, 0.07%)</title><rect x="100.2" y="339.0" width="0.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="103.2" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request (18 samples, 0.08%)</title><rect x="101.0" y="339.0" width="1.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="104.0" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (22 samples, 0.10%)</title><rect x="102.0" y="339.0" width="1.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="105.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (102 samples, 0.44%)</title><rect x="103.1" y="339.0" width="5.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="106.1" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (13 samples, 0.06%)</title><rect x="103.1" y="323.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="106.1" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicBoolean (7 samples, 0.03%)</title><rect x="103.7" y="323.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="106.7" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (8 samples, 0.03%)</title><rect x="104.1" y="323.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="107.1" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (7 samples, 0.03%)</title><rect x="104.9" y="323.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="107.9" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (7 samples, 0.03%)</title><rect x="104.9" y="307.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="107.9" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1TubeSubscriber (11 samples, 0.05%)</title><rect x="105.3" y="323.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="108.3" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (10 samples, 0.04%)</title><rect x="105.9" y="323.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="108.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (38 samples, 0.17%)</title><rect x="106.4" y="323.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="109.4" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (6 samples, 0.03%)</title><rect x="106.4" y="307.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="109.4" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (9 samples, 0.04%)</title><rect x="106.7" y="307.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="109.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.&lt;init&gt; (9 samples, 0.04%)</title><rect x="107.1" y="307.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="110.1" y="318.0"></text>
</g>
<g>
<title>java.lang.Object (9 samples, 0.04%)</title><rect x="107.1" y="291.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="110.1" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (14 samples, 0.06%)</title><rect x="107.6" y="307.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="110.6" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (5 samples, 0.02%)</title><rect x="107.6" y="291.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="110.6" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SchedulableTask (6 samples, 0.03%)</title><rect x="107.9" y="291.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="110.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (49 samples, 0.21%)</title><rect x="108.3" y="339.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="111.3" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher$WriteTask (5 samples, 0.02%)</title><rect x="108.5" y="323.0" width="0.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="111.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (34 samples, 0.15%)</title><rect x="109.1" y="323.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="112.1" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (12 samples, 0.05%)</title><rect x="109.3" y="307.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="112.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.&lt;init&gt; (5 samples, 0.02%)</title><rect x="109.9" y="307.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="112.9" y="318.0"></text>
</g>
<g>
<title>java.lang.Object (5 samples, 0.02%)</title><rect x="109.9" y="291.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="112.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (13 samples, 0.06%)</title><rect x="110.2" y="307.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="113.2" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (5 samples, 0.02%)</title><rect x="110.2" y="291.0" width="0.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="113.2" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (5 samples, 0.02%)</title><rect x="110.6" y="291.0" width="0.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="113.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (13 samples, 0.06%)</title><rect x="110.8" y="339.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="113.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (13 samples, 0.06%)</title><rect x="110.8" y="323.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="113.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (13 samples, 0.06%)</title><rect x="110.8" y="307.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="113.8" y="318.0"></text>
</g>
<g>
<title>java/util/HashMap.get (13 samples, 0.06%)</title><rect x="110.8" y="291.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="113.8" y="302.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (13 samples, 0.06%)</title><rect x="110.8" y="275.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="113.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (13 samples, 0.06%)</title><rect x="110.8" y="259.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="113.8" y="270.0"></text>
</g>
<g>
<title>java.lang.Object[] (13 samples, 0.06%)</title><rect x="110.8" y="243.0" width="0.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="113.8" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (35 samples, 0.15%)</title><rect x="111.5" y="339.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="114.5" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/896644936.linkToTargetMethod (13 samples, 0.06%)</title><rect x="111.5" y="323.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="114.5" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (13 samples, 0.06%)</title><rect x="111.5" y="307.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="114.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$163/1956467138.get$Lambda (13 samples, 0.06%)</title><rect x="111.5" y="291.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="114.5" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl$$Lambda$163 (13 samples, 0.06%)</title><rect x="111.5" y="275.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="114.5" y="286.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (22 samples, 0.10%)</title><rect x="112.2" y="323.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="115.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$163/1956467138.run (22 samples, 0.10%)</title><rect x="112.2" y="307.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="115.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (22 samples, 0.10%)</title><rect x="112.2" y="291.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="115.2" y="302.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress (5 samples, 0.02%)</title><rect x="112.2" y="275.0" width="0.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="115.2" y="286.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (17 samples, 0.07%)</title><rect x="112.4" y="275.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="115.4" y="286.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress$InetSocketAddressHolder (6 samples, 0.03%)</title><rect x="112.4" y="259.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="115.4" y="270.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (11 samples, 0.05%)</title><rect x="112.7" y="259.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="115.7" y="270.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (11 samples, 0.05%)</title><rect x="112.7" y="243.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="115.7" y="254.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (11 samples, 0.05%)</title><rect x="112.7" y="227.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="115.7" y="238.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (11 samples, 0.05%)</title><rect x="112.7" y="211.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="115.7" y="222.0"></text>
</g>
<g>
<title>java.net.InetAddress[] (11 samples, 0.05%)</title><rect x="112.7" y="195.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="115.7" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (9 samples, 0.04%)</title><rect x="113.3" y="355.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="116.3" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (9 samples, 0.04%)</title><rect x="113.3" y="339.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="116.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (5 samples, 0.02%)</title><rect x="113.8" y="435.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="116.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (5 samples, 0.02%)</title><rect x="113.8" y="419.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="116.8" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (5 samples, 0.02%)</title><rect x="113.8" y="403.0" width="0.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="116.8" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (8 samples, 0.03%)</title><rect x="114.0" y="467.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="117.0" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (8 samples, 0.03%)</title><rect x="114.0" y="451.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="117.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (8 samples, 0.03%)</title><rect x="114.0" y="435.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="117.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (8 samples, 0.03%)</title><rect x="114.0" y="419.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="117.0" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (8 samples, 0.03%)</title><rect x="114.0" y="403.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="117.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getConnectionFor (29 samples, 0.13%)</title><rect x="114.4" y="467.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="117.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyFor (18 samples, 0.08%)</title><rect x="114.4" y="451.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="117.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyString (18 samples, 0.08%)</title><rect x="114.4" y="435.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="117.4" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/888960014.linkToTargetMethod (18 samples, 0.08%)</title><rect x="114.4" y="419.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="117.4" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1103745955.invoke (18 samples, 0.08%)</title><rect x="114.4" y="403.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="117.4" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/642648282.invoke (18 samples, 0.08%)</title><rect x="114.4" y="387.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="117.4" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (18 samples, 0.08%)</title><rect x="114.4" y="371.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="117.4" y="382.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (5 samples, 0.02%)</title><rect x="114.4" y="355.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="117.4" y="366.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.02%)</title><rect x="114.4" y="339.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="117.4" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (13 samples, 0.06%)</title><rect x="114.7" y="355.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="117.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (13 samples, 0.06%)</title><rect x="114.7" y="339.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="117.7" y="350.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.06%)</title><rect x="114.7" y="323.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="117.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (11 samples, 0.05%)</title><rect x="115.4" y="451.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="118.4" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (11 samples, 0.05%)</title><rect x="115.4" y="435.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="118.4" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (542 samples, 2.36%)</title><rect x="115.9" y="643.0" width="27.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="118.9" y="654.0">j..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (347 samples, 1.51%)</title><rect x="115.9" y="627.0" width="17.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="118.9" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (344 samples, 1.50%)</title><rect x="115.9" y="611.0" width="17.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="118.9" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (344 samples, 1.50%)</title><rect x="115.9" y="595.0" width="17.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="118.9" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (344 samples, 1.50%)</title><rect x="115.9" y="579.0" width="17.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="118.9" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.take (195 samples, 0.85%)</title><rect x="133.7" y="627.0" width="10.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="136.7" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.take (195 samples, 0.85%)</title><rect x="133.7" y="611.0" width="10.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="136.7" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.awaitNanos (195 samples, 0.85%)</title><rect x="133.7" y="595.0" width="10.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="136.7" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (195 samples, 0.85%)</title><rect x="133.7" y="579.0" width="10.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="136.7" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (195 samples, 0.85%)</title><rect x="133.7" y="563.0" width="10.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="136.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$247/1271722553.run (185 samples, 0.81%)</title><rect x="143.8" y="643.0" width="9.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="146.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (185 samples, 0.81%)</title><rect x="143.8" y="627.0" width="9.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="146.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (185 samples, 0.81%)</title><rect x="143.8" y="611.0" width="9.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="146.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (185 samples, 0.81%)</title><rect x="143.8" y="595.0" width="9.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="146.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (185 samples, 0.81%)</title><rect x="143.8" y="579.0" width="9.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="146.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (185 samples, 0.81%)</title><rect x="143.8" y="563.0" width="9.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="146.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (185 samples, 0.81%)</title><rect x="143.8" y="547.0" width="9.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="146.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (185 samples, 0.81%)</title><rect x="143.8" y="531.0" width="9.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="146.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (185 samples, 0.81%)</title><rect x="143.8" y="515.0" width="9.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="146.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (185 samples, 0.81%)</title><rect x="143.8" y="499.0" width="9.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="146.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (185 samples, 0.81%)</title><rect x="143.8" y="483.0" width="9.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="146.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (170 samples, 0.74%)</title><rect x="143.8" y="467.0" width="8.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="146.8" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (14 samples, 0.06%)</title><rect x="143.8" y="451.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="146.8" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (14 samples, 0.06%)</title><rect x="143.8" y="435.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="146.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$255/1758095350.get$Lambda (9 samples, 0.04%)</title><rect x="143.8" y="419.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="146.8" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$255 (9 samples, 0.04%)</title><rect x="143.8" y="403.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="146.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$277/496276186.get$Lambda (5 samples, 0.02%)</title><rect x="144.2" y="419.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="147.2" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$277 (5 samples, 0.02%)</title><rect x="144.2" y="403.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="147.2" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (156 samples, 0.68%)</title><rect x="144.5" y="451.0" width="8.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="147.5" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (15 samples, 0.07%)</title><rect x="144.5" y="435.0" width="0.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="147.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (141 samples, 0.61%)</title><rect x="145.3" y="435.0" width="7.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="148.3" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (141 samples, 0.61%)</title><rect x="145.3" y="419.0" width="7.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="148.3" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (141 samples, 0.61%)</title><rect x="145.3" y="403.0" width="7.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="148.3" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (57 samples, 0.25%)</title><rect x="145.3" y="387.0" width="2.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="148.3" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (23 samples, 0.10%)</title><rect x="145.3" y="371.0" width="1.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="148.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$267/1020030449.apply (31 samples, 0.13%)</title><rect x="146.4" y="371.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="149.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (31 samples, 0.13%)</title><rect x="146.4" y="355.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="149.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (31 samples, 0.13%)</title><rect x="146.4" y="339.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="149.4" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (12 samples, 0.05%)</title><rect x="146.4" y="323.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="149.4" y="334.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (12 samples, 0.05%)</title><rect x="146.4" y="307.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="149.4" y="318.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (12 samples, 0.05%)</title><rect x="146.4" y="291.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="149.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (19 samples, 0.08%)</title><rect x="147.1" y="323.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="150.1" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (16 samples, 0.07%)</title><rect x="147.2" y="307.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="150.2" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (16 samples, 0.07%)</title><rect x="147.2" y="291.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="150.2" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (11 samples, 0.05%)</title><rect x="147.2" y="275.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="150.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (5 samples, 0.02%)</title><rect x="147.8" y="275.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="150.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (5 samples, 0.02%)</title><rect x="147.8" y="259.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="150.8" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (5 samples, 0.02%)</title><rect x="147.8" y="243.0" width="0.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="150.8" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (84 samples, 0.37%)</title><rect x="148.2" y="387.0" width="4.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="151.2" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (84 samples, 0.37%)</title><rect x="148.2" y="371.0" width="4.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="151.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$235/542698874.apply (84 samples, 0.37%)</title><rect x="148.2" y="355.0" width="4.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="151.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (84 samples, 0.37%)</title><rect x="148.2" y="339.0" width="4.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="151.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (84 samples, 0.37%)</title><rect x="148.2" y="323.0" width="4.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="151.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$148/2053429061.apply (84 samples, 0.37%)</title><rect x="148.2" y="307.0" width="4.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="151.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (84 samples, 0.37%)</title><rect x="148.2" y="291.0" width="4.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="151.2" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (22 samples, 0.10%)</title><rect x="148.2" y="275.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="151.2" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (22 samples, 0.10%)</title><rect x="148.2" y="259.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="151.2" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (16 samples, 0.07%)</title><rect x="148.2" y="243.0" width="0.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="151.2" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (6 samples, 0.03%)</title><rect x="149.1" y="243.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="152.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (6 samples, 0.03%)</title><rect x="149.1" y="227.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="152.1" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (6 samples, 0.03%)</title><rect x="149.1" y="211.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="152.1" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.wrapForUpgrade (27 samples, 0.12%)</title><rect x="149.4" y="275.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="152.4" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.02%)</title><rect x="149.4" y="259.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="152.4" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.02%)</title><rect x="149.4" y="243.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="152.4" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$270/294090489.get$Lambda (5 samples, 0.02%)</title><rect x="149.4" y="227.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="152.4" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$270 (5 samples, 0.02%)</title><rect x="149.4" y="211.0" width="0.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="152.4" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (22 samples, 0.10%)</title><rect x="149.6" y="259.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="152.6" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (22 samples, 0.10%)</title><rect x="149.6" y="243.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="152.6" y="254.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (14 samples, 0.06%)</title><rect x="149.6" y="227.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="152.6" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (8 samples, 0.03%)</title><rect x="150.3" y="227.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="153.3" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (8 samples, 0.03%)</title><rect x="150.3" y="211.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="153.3" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (8 samples, 0.03%)</title><rect x="150.3" y="195.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="153.3" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (34 samples, 0.15%)</title><rect x="150.8" y="275.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="153.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.completeSubscriber (25 samples, 0.11%)</title><rect x="150.8" y="259.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="153.8" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1BodySubscriber$1 (11 samples, 0.05%)</title><rect x="150.8" y="243.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="153.8" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber$1.&lt;init&gt; (14 samples, 0.06%)</title><rect x="151.3" y="243.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="154.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.&lt;init&gt; (14 samples, 0.06%)</title><rect x="151.3" y="227.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="154.3" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (14 samples, 0.06%)</title><rect x="151.3" y="211.0" width="0.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="154.3" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (9 samples, 0.04%)</title><rect x="152.0" y="259.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="155.0" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (7 samples, 0.03%)</title><rect x="152.1" y="243.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="155.1" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (7 samples, 0.03%)</title><rect x="152.1" y="227.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="155.1" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (7 samples, 0.03%)</title><rect x="152.1" y="211.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="155.1" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (7 samples, 0.03%)</title><rect x="152.1" y="195.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="155.1" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (7 samples, 0.03%)</title><rect x="152.1" y="179.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="155.1" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (7 samples, 0.03%)</title><rect x="152.1" y="163.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="155.1" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (15 samples, 0.07%)</title><rect x="152.5" y="467.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="155.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (15 samples, 0.07%)</title><rect x="152.5" y="451.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="155.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (15 samples, 0.07%)</title><rect x="152.5" y="435.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="155.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (15 samples, 0.07%)</title><rect x="152.5" y="419.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="155.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (15 samples, 0.07%)</title><rect x="152.5" y="403.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="155.5" y="414.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (15 samples, 0.07%)</title><rect x="152.5" y="387.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="155.5" y="398.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (6 samples, 0.03%)</title><rect x="152.5" y="371.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="155.5" y="382.0"></text>
</g>
<g>
<title>java.nio.ByteBuffer[] (6 samples, 0.03%)</title><rect x="152.5" y="355.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="155.5" y="366.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (9 samples, 0.04%)</title><rect x="152.8" y="371.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="155.8" y="382.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (9 samples, 0.04%)</title><rect x="152.8" y="355.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="155.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1,248 samples, 5.43%)</title><rect x="153.3" y="643.0" width="64.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="156.3" y="654.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1,248 samples, 5.43%)</title><rect x="153.3" y="627.0" width="64.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="156.3" y="638.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (1,065 samples, 4.64%)</title><rect x="153.3" y="611.0" width="54.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="156.3" y="622.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$199/1509846524.run (1,065 samples, 4.64%)</title><rect x="153.3" y="595.0" width="54.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="156.3" y="606.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (1,065 samples, 4.64%)</title><rect x="153.3" y="579.0" width="54.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="156.3" y="590.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (16 samples, 0.07%)</title><rect x="153.3" y="563.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="156.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (16 samples, 0.07%)</title><rect x="153.3" y="547.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="156.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (16 samples, 0.07%)</title><rect x="153.3" y="531.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="156.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (16 samples, 0.07%)</title><rect x="153.3" y="515.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="156.3" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/623247230.linkToTargetMethod (11 samples, 0.05%)</title><rect x="153.3" y="499.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="156.3" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/773662650.invoke (11 samples, 0.05%)</title><rect x="153.3" y="483.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="156.3" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (11 samples, 0.05%)</title><rect x="153.3" y="467.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="156.3" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (11 samples, 0.05%)</title><rect x="153.3" y="451.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="156.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (11 samples, 0.05%)</title><rect x="153.3" y="435.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="156.3" y="446.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.05%)</title><rect x="153.3" y="419.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="156.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (5 samples, 0.02%)</title><rect x="153.8" y="499.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="156.8" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.02%)</title><rect x="153.8" y="483.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="156.8" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.02%)</title><rect x="153.8" y="467.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="156.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$251/1699824535.get$Lambda (5 samples, 0.02%)</title><rect x="153.8" y="451.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="156.8" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$251 (5 samples, 0.02%)</title><rect x="153.8" y="435.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="156.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (1,049 samples, 4.57%)</title><rect x="154.1" y="563.0" width="53.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="157.1" y="574.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (1,049 samples, 4.57%)</title><rect x="154.1" y="547.0" width="53.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="157.1" y="558.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (1,049 samples, 4.57%)</title><rect x="154.1" y="531.0" width="53.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="157.1" y="542.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (1,049 samples, 4.57%)</title><rect x="154.1" y="515.0" width="53.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="157.1" y="526.0">jdk/i..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (494 samples, 2.15%)</title><rect x="154.1" y="499.0" width="25.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="157.1" y="510.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (494 samples, 2.15%)</title><rect x="154.1" y="483.0" width="25.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="157.1" y="494.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (494 samples, 2.15%)</title><rect x="154.1" y="467.0" width="25.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="157.1" y="478.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (494 samples, 2.15%)</title><rect x="154.1" y="451.0" width="25.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="157.1" y="462.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (494 samples, 2.15%)</title><rect x="154.1" y="435.0" width="25.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="157.1" y="446.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (494 samples, 2.15%)</title><rect x="154.1" y="419.0" width="25.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="157.1" y="430.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (494 samples, 2.15%)</title><rect x="154.1" y="403.0" width="25.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="157.1" y="414.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (486 samples, 2.12%)</title><rect x="154.1" y="387.0" width="25.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="157.1" y="398.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (486 samples, 2.12%)</title><rect x="154.1" y="371.0" width="25.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="157.1" y="382.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (476 samples, 2.07%)</title><rect x="154.1" y="355.0" width="24.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="157.1" y="366.0">j..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (13 samples, 0.06%)</title><rect x="154.1" y="339.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="157.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$270/294090489.apply (9 samples, 0.04%)</title><rect x="154.8" y="339.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="157.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$wrapForUpgrade$10 (9 samples, 0.04%)</title><rect x="154.8" y="323.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="157.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkForUpgradeAsync (9 samples, 0.04%)</title><rect x="154.8" y="307.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="157.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (9 samples, 0.04%)</title><rect x="154.8" y="291.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="157.8" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (9 samples, 0.04%)</title><rect x="154.8" y="275.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="157.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$132/1112562714.apply (432 samples, 1.88%)</title><rect x="155.2" y="339.0" width="22.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="158.2" y="350.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (432 samples, 1.88%)</title><rect x="155.2" y="323.0" width="22.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="158.2" y="334.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (8 samples, 0.03%)</title><rect x="155.2" y="307.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="158.2" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (8 samples, 0.03%)</title><rect x="155.2" y="291.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="158.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$309/980063472.get$Lambda (8 samples, 0.03%)</title><rect x="155.2" y="275.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="158.2" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$309 (8 samples, 0.03%)</title><rect x="155.2" y="259.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="158.2" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (21 samples, 0.09%)</title><rect x="155.6" y="307.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="158.6" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (21 samples, 0.09%)</title><rect x="155.6" y="291.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="158.6" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (13 samples, 0.06%)</title><rect x="155.6" y="275.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="158.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (8 samples, 0.03%)</title><rect x="156.3" y="275.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="159.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (8 samples, 0.03%)</title><rect x="156.3" y="259.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="159.3" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (8 samples, 0.03%)</title><rect x="156.3" y="243.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="159.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (403 samples, 1.75%)</title><rect x="156.7" y="307.0" width="20.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="159.7" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (23 samples, 0.10%)</title><rect x="156.9" y="291.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="159.9" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (23 samples, 0.10%)</title><rect x="156.9" y="275.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="159.9" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (10 samples, 0.04%)</title><rect x="156.9" y="259.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="159.9" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (13 samples, 0.06%)</title><rect x="157.4" y="259.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="160.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (13 samples, 0.06%)</title><rect x="157.4" y="243.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="160.4" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (13 samples, 0.06%)</title><rect x="157.4" y="227.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="160.4" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (377 samples, 1.64%)</title><rect x="158.0" y="291.0" width="19.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="161.0" y="302.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers$$Lambda$120/1352876739.apply (33 samples, 0.14%)</title><rect x="158.0" y="275.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="161.0" y="286.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers.lambda$ofByteArray$12 (33 samples, 0.14%)</title><rect x="158.0" y="259.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="161.0" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.ofByteArray (33 samples, 0.14%)</title><rect x="158.0" y="243.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="161.0" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseSubscribers$ByteArraySubscriber (10 samples, 0.04%)</title><rect x="158.0" y="227.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="161.0" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.&lt;init&gt; (23 samples, 0.10%)</title><rect x="158.6" y="227.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="161.6" y="238.0"></text>
</g>
<g>
<title>java.util.ArrayList (12 samples, 0.05%)</title><rect x="158.6" y="211.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="161.6" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (11 samples, 0.05%)</title><rect x="159.2" y="211.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="162.2" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (344 samples, 1.50%)</title><rect x="159.7" y="275.0" width="17.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="162.7" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (11 samples, 0.05%)</title><rect x="159.7" y="259.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="162.7" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (11 samples, 0.05%)</title><rect x="159.7" y="243.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="162.7" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$300/1036110883.get$Lambda (5 samples, 0.02%)</title><rect x="159.7" y="227.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="162.7" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$300 (5 samples, 0.02%)</title><rect x="159.7" y="211.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="162.7" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$303/559948606.get$Lambda (6 samples, 0.03%)</title><rect x="160.0" y="227.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="163.0" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$303 (6 samples, 0.03%)</title><rect x="160.0" y="211.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="163.0" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/647302181.linkToTargetMethod (12 samples, 0.05%)</title><rect x="160.3" y="259.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="163.3" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1743165624.invokeStatic (12 samples, 0.05%)</title><rect x="160.3" y="243.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="163.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$288/1452226218.get$Lambda (12 samples, 0.05%)</title><rect x="160.3" y="227.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="163.3" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$288 (12 samples, 0.05%)</title><rect x="160.3" y="211.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="163.3" y="222.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (68 samples, 0.30%)</title><rect x="160.9" y="259.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="163.9" y="270.0"></text>
</g>
<g>
<title>java/util/Collection.stream (20 samples, 0.09%)</title><rect x="160.9" y="243.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="163.9" y="254.0"></text>
</g>
<g>
<title>java/util/List.spliterator (6 samples, 0.03%)</title><rect x="160.9" y="227.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="163.9" y="238.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (6 samples, 0.03%)</title><rect x="160.9" y="211.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="163.9" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (14 samples, 0.06%)</title><rect x="161.2" y="227.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="164.2" y="238.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (14 samples, 0.06%)</title><rect x="161.2" y="211.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="164.2" y="222.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (20 samples, 0.09%)</title><rect x="161.9" y="243.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="164.9" y="254.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (20 samples, 0.09%)</title><rect x="161.9" y="227.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="164.9" y="238.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (20 samples, 0.09%)</title><rect x="161.9" y="211.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="164.9" y="222.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (6 samples, 0.03%)</title><rect x="161.9" y="195.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="164.9" y="206.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (6 samples, 0.03%)</title><rect x="161.9" y="179.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="164.9" y="190.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.opWrapSink (6 samples, 0.03%)</title><rect x="161.9" y="163.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="164.9" y="174.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5$1 (6 samples, 0.03%)</title><rect x="161.9" y="147.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="164.9" y="158.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong$$Lambda$285/1678898144.get (7 samples, 0.03%)</title><rect x="162.3" y="195.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="165.3" y="206.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfLong (7 samples, 0.03%)</title><rect x="162.3" y="179.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="165.3" y="190.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (7 samples, 0.03%)</title><rect x="162.6" y="195.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="165.6" y="206.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (7 samples, 0.03%)</title><rect x="162.6" y="179.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="165.6" y="190.0"></text>
</g>
<g>
<title>java/util/OptionalLong.of (7 samples, 0.03%)</title><rect x="162.6" y="163.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="165.6" y="174.0"></text>
</g>
<g>
<title>java.util.OptionalLong (7 samples, 0.03%)</title><rect x="162.6" y="147.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="165.6" y="158.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.mapToLong (28 samples, 0.12%)</title><rect x="163.0" y="243.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="166.0" y="254.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5 (28 samples, 0.12%)</title><rect x="163.0" y="227.0" width="1.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="166.0" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (49 samples, 0.21%)</title><rect x="164.4" y="259.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="167.4" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (24 samples, 0.10%)</title><rect x="164.4" y="243.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="167.4" y="254.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (18 samples, 0.08%)</title><rect x="164.4" y="227.0" width="0.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="167.4" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (6 samples, 0.03%)</title><rect x="165.3" y="227.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="168.3" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (6 samples, 0.03%)</title><rect x="165.3" y="211.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="168.3" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (6 samples, 0.03%)</title><rect x="165.3" y="195.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="168.3" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (25 samples, 0.11%)</title><rect x="165.6" y="243.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="168.6" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (25 samples, 0.11%)</title><rect x="165.6" y="227.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="168.6" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (16 samples, 0.07%)</title><rect x="165.6" y="211.0" width="0.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="168.6" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (9 samples, 0.04%)</title><rect x="166.5" y="211.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="169.5" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (9 samples, 0.04%)</title><rect x="166.5" y="195.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="169.5" y="206.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (9 samples, 0.04%)</title><rect x="166.5" y="179.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="169.5" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$ClientRefCountTracker (8 samples, 0.03%)</title><rect x="166.9" y="259.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="169.9" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$Http1BodySubscriber (12 samples, 0.05%)</title><rect x="167.3" y="259.0" width="0.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="170.3" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (9 samples, 0.04%)</title><rect x="168.0" y="259.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="171.0" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (171 samples, 0.74%)</title><rect x="168.6" y="259.0" width="8.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="171.6" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$288/1452226218.run (171 samples, 0.74%)</title><rect x="168.6" y="243.0" width="8.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="171.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (171 samples, 0.74%)</title><rect x="168.6" y="227.0" width="8.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="171.6" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (16 samples, 0.07%)</title><rect x="168.6" y="211.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="171.6" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (16 samples, 0.07%)</title><rect x="168.6" y="195.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="171.6" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$292/1528731011.get$Lambda (6 samples, 0.03%)</title><rect x="168.8" y="179.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="171.8" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$292 (6 samples, 0.03%)</title><rect x="168.8" y="163.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="171.8" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$295/1644078329.get$Lambda (6 samples, 0.03%)</title><rect x="169.1" y="179.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="172.1" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$295 (6 samples, 0.03%)</title><rect x="169.1" y="163.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="172.1" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (22 samples, 0.10%)</title><rect x="169.4" y="211.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="172.4" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (22 samples, 0.10%)</title><rect x="169.4" y="195.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="172.4" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (11 samples, 0.05%)</title><rect x="169.4" y="179.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="172.4" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (11 samples, 0.05%)</title><rect x="170.0" y="179.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="173.0" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (11 samples, 0.05%)</title><rect x="170.0" y="163.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="173.0" y="174.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (11 samples, 0.05%)</title><rect x="170.0" y="147.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="173.0" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent (11 samples, 0.05%)</title><rect x="170.6" y="211.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="173.6" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.start (10 samples, 0.04%)</title><rect x="171.1" y="211.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="174.1" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (10 samples, 0.04%)</title><rect x="171.1" y="195.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="174.1" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (35 samples, 0.15%)</title><rect x="171.7" y="211.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="174.7" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (35 samples, 0.15%)</title><rect x="171.7" y="195.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="174.7" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (9 samples, 0.04%)</title><rect x="171.7" y="179.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="174.7" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (9 samples, 0.04%)</title><rect x="171.7" y="163.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="174.7" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$297/1321510655.get$Lambda (9 samples, 0.04%)</title><rect x="171.7" y="147.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="174.7" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpConnection$TrailingOperations$$Lambda$297 (9 samples, 0.04%)</title><rect x="171.7" y="131.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="174.7" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (26 samples, 0.11%)</title><rect x="172.1" y="179.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="175.1" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (26 samples, 0.11%)</title><rect x="172.1" y="163.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="175.1" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (26 samples, 0.11%)</title><rect x="172.1" y="147.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="175.1" y="158.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (12 samples, 0.05%)</title><rect x="172.1" y="131.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="175.1" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (14 samples, 0.06%)</title><rect x="172.7" y="131.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="175.7" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (14 samples, 0.06%)</title><rect x="172.7" y="115.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="175.7" y="126.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (14 samples, 0.06%)</title><rect x="172.7" y="99.0" width="0.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="175.7" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (19 samples, 0.08%)</title><rect x="173.5" y="211.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="176.5" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (19 samples, 0.08%)</title><rect x="173.5" y="195.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="176.5" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1357563986.invoke (19 samples, 0.08%)</title><rect x="173.5" y="179.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="176.5" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (19 samples, 0.08%)</title><rect x="173.5" y="163.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="176.5" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (16 samples, 0.07%)</title><rect x="173.6" y="147.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="176.6" y="158.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (16 samples, 0.07%)</title><rect x="173.6" y="131.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="176.6" y="142.0"></text>
</g>
<g>
<title>byte[] (16 samples, 0.07%)</title><rect x="173.6" y="115.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="176.6" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (58 samples, 0.25%)</title><rect x="174.4" y="211.0" width="3.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="177.4" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent$FixedLengthBodyParser (19 samples, 0.08%)</title><rect x="174.4" y="195.0" width="1.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="177.4" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (39 samples, 0.17%)</title><rect x="175.4" y="195.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="178.4" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (39 samples, 0.17%)</title><rect x="175.4" y="179.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="178.4" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1357563986.invoke (39 samples, 0.17%)</title><rect x="175.4" y="163.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="178.4" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (39 samples, 0.17%)</title><rect x="175.4" y="147.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="178.4" y="158.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (10 samples, 0.04%)</title><rect x="175.4" y="131.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="178.4" y="142.0"></text>
</g>
<g>
<title>java.lang.String (10 samples, 0.04%)</title><rect x="175.4" y="115.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="178.4" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (29 samples, 0.13%)</title><rect x="175.9" y="131.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="178.9" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (29 samples, 0.13%)</title><rect x="175.9" y="115.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="178.9" y="126.0"></text>
</g>
<g>
<title>byte[] (29 samples, 0.13%)</title><rect x="175.9" y="99.0" width="1.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="178.9" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$236/388216554.apply (22 samples, 0.10%)</title><rect x="177.4" y="339.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="180.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (22 samples, 0.10%)</title><rect x="177.4" y="323.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="180.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (15 samples, 0.07%)</title><rect x="177.4" y="307.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="180.4" y="318.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (15 samples, 0.07%)</title><rect x="177.4" y="291.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="180.4" y="302.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (15 samples, 0.07%)</title><rect x="177.4" y="275.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="180.4" y="286.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (15 samples, 0.07%)</title><rect x="177.4" y="259.0" width="0.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="180.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (7 samples, 0.03%)</title><rect x="178.2" y="307.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="181.2" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (7 samples, 0.03%)</title><rect x="178.2" y="291.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="181.2" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (10 samples, 0.04%)</title><rect x="178.5" y="355.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="181.5" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (10 samples, 0.04%)</title><rect x="178.5" y="339.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="181.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$237/1895279177.apply (10 samples, 0.04%)</title><rect x="178.5" y="323.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="181.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (10 samples, 0.04%)</title><rect x="178.5" y="307.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="181.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (10 samples, 0.04%)</title><rect x="178.5" y="291.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="181.5" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (10 samples, 0.04%)</title><rect x="178.5" y="275.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="181.5" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$278/649988588.apply (8 samples, 0.03%)</title><rect x="179.1" y="387.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="182.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (8 samples, 0.03%)</title><rect x="179.1" y="371.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="182.1" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Response (8 samples, 0.03%)</title><rect x="179.1" y="355.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="182.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (555 samples, 2.42%)</title><rect x="179.5" y="499.0" width="28.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="182.5" y="510.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (34 samples, 0.15%)</title><rect x="179.5" y="483.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="182.5" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (34 samples, 0.15%)</title><rect x="179.5" y="467.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="182.5" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (34 samples, 0.15%)</title><rect x="179.5" y="451.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="182.5" y="462.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (34 samples, 0.15%)</title><rect x="179.5" y="435.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="182.5" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (34 samples, 0.15%)</title><rect x="179.5" y="419.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="182.5" y="430.0"></text>
</g>
<g>
<title>byte[] (34 samples, 0.15%)</title><rect x="179.5" y="403.0" width="1.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="182.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (28 samples, 0.12%)</title><rect x="181.2" y="483.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="184.2" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (28 samples, 0.12%)</title><rect x="181.2" y="467.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="184.2" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (28 samples, 0.12%)</title><rect x="181.2" y="451.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="184.2" y="462.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (28 samples, 0.12%)</title><rect x="181.2" y="435.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="184.2" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (28 samples, 0.12%)</title><rect x="181.2" y="419.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="184.2" y="430.0"></text>
</g>
<g>
<title>byte[] (28 samples, 0.12%)</title><rect x="181.2" y="403.0" width="1.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="184.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (44 samples, 0.19%)</title><rect x="182.7" y="483.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="185.7" y="494.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (9 samples, 0.04%)</title><rect x="182.7" y="467.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="185.7" y="478.0"></text>
</g>
<g>
<title>java/lang/String.substring (7 samples, 0.03%)</title><rect x="183.1" y="467.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="186.1" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (7 samples, 0.03%)</title><rect x="183.1" y="451.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="186.1" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (7 samples, 0.03%)</title><rect x="183.1" y="435.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="186.1" y="446.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.03%)</title><rect x="183.1" y="419.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="186.1" y="430.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (6 samples, 0.03%)</title><rect x="183.5" y="467.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="186.5" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (6 samples, 0.03%)</title><rect x="183.5" y="451.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="186.5" y="462.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.03%)</title><rect x="183.5" y="435.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="186.5" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (22 samples, 0.10%)</title><rect x="183.8" y="467.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="186.8" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (22 samples, 0.10%)</title><rect x="183.8" y="451.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="186.8" y="462.0"></text>
</g>
<g>
<title>java.lang.String (8 samples, 0.03%)</title><rect x="183.8" y="435.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="186.8" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (14 samples, 0.06%)</title><rect x="184.2" y="435.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="187.2" y="446.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.06%)</title><rect x="184.2" y="419.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="187.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (153 samples, 0.67%)</title><rect x="184.9" y="483.0" width="7.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="187.9" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (153 samples, 0.67%)</title><rect x="184.9" y="467.0" width="7.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="187.9" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (153 samples, 0.67%)</title><rect x="184.9" y="451.0" width="7.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="187.9" y="462.0"></text>
</g>
<g>
<title>java.util.ArrayList (7 samples, 0.03%)</title><rect x="185.1" y="435.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="188.1" y="446.0"></text>
</g>
<g>
<title>java.util.TreeMap (13 samples, 0.06%)</title><rect x="185.5" y="435.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="188.5" y="446.0"></text>
</g>
<g>
<title>java.util.TreeSet (7 samples, 0.03%)</title><rect x="186.1" y="435.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="189.1" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (19 samples, 0.08%)</title><rect x="186.5" y="435.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="189.5" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (19 samples, 0.08%)</title><rect x="186.5" y="419.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="189.5" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$115/937225413.get$Lambda (19 samples, 0.08%)</title><rect x="186.5" y="403.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="189.5" y="414.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$115 (19 samples, 0.08%)</title><rect x="186.5" y="387.0" width="1.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="189.5" y="398.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (8 samples, 0.03%)</title><rect x="187.5" y="435.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="190.5" y="446.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (8 samples, 0.03%)</title><rect x="187.5" y="419.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="190.5" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (82 samples, 0.36%)</title><rect x="187.9" y="435.0" width="4.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="190.9" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$115/937225413.accept (82 samples, 0.36%)</title><rect x="187.9" y="419.0" width="4.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="190.9" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (82 samples, 0.36%)</title><rect x="187.9" y="403.0" width="4.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="190.9" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (14 samples, 0.06%)</title><rect x="187.9" y="387.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="190.9" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (14 samples, 0.06%)</title><rect x="187.9" y="371.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="190.9" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$118/2131634163.get$Lambda (14 samples, 0.06%)</title><rect x="187.9" y="355.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="190.9" y="366.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$118 (14 samples, 0.06%)</title><rect x="187.9" y="339.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="190.9" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (20 samples, 0.09%)</title><rect x="188.6" y="387.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="191.6" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$118/2131634163.accept (20 samples, 0.09%)</title><rect x="188.6" y="371.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="191.6" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (20 samples, 0.09%)</title><rect x="188.6" y="355.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="191.6" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (20 samples, 0.09%)</title><rect x="188.6" y="339.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="191.6" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (20 samples, 0.09%)</title><rect x="188.6" y="323.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="191.6" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (20 samples, 0.09%)</title><rect x="188.6" y="307.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="191.6" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (20 samples, 0.09%)</title><rect x="188.6" y="291.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="191.6" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (20 samples, 0.09%)</title><rect x="188.6" y="275.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="191.6" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (20 samples, 0.09%)</title><rect x="188.6" y="259.0" width="1.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="191.6" y="270.0"></text>
</g>
<g>
<title>java/util/List.copyOf (26 samples, 0.11%)</title><rect x="189.6" y="387.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="192.6" y="398.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (26 samples, 0.11%)</title><rect x="189.6" y="371.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="192.6" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (13 samples, 0.06%)</title><rect x="189.6" y="355.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="192.6" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (13 samples, 0.06%)</title><rect x="189.6" y="339.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="192.6" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (13 samples, 0.06%)</title><rect x="189.6" y="323.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="192.6" y="334.0"></text>
</g>
<g>
<title>java/util/List.of (13 samples, 0.06%)</title><rect x="190.3" y="355.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="193.3" y="366.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (13 samples, 0.06%)</title><rect x="190.3" y="339.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="193.3" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (22 samples, 0.10%)</title><rect x="191.0" y="387.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="194.0" y="398.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (22 samples, 0.10%)</title><rect x="191.0" y="371.0" width="1.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="194.0" y="382.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (13 samples, 0.06%)</title><rect x="192.1" y="435.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="195.1" y="446.0"></text>
</g>
<g>
<title>java.util.TreeMap (13 samples, 0.06%)</title><rect x="192.1" y="419.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="195.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (296 samples, 1.29%)</title><rect x="192.8" y="483.0" width="15.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="195.8" y="494.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (17 samples, 0.07%)</title><rect x="192.8" y="467.0" width="0.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="195.8" y="478.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (20 samples, 0.09%)</title><rect x="193.6" y="467.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="196.6" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (20 samples, 0.09%)</title><rect x="193.6" y="451.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="196.6" y="462.0"></text>
</g>
<g>
<title>byte[] (20 samples, 0.09%)</title><rect x="193.6" y="435.0" width="1.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="196.6" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (45 samples, 0.20%)</title><rect x="194.7" y="467.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="197.7" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (45 samples, 0.20%)</title><rect x="194.7" y="451.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="197.7" y="462.0"></text>
</g>
<g>
<title>java.lang.String (19 samples, 0.08%)</title><rect x="194.7" y="435.0" width="0.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="197.7" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (26 samples, 0.11%)</title><rect x="195.6" y="435.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="198.6" y="446.0"></text>
</g>
<g>
<title>byte[] (26 samples, 0.11%)</title><rect x="195.6" y="419.0" width="1.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="198.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (214 samples, 0.93%)</title><rect x="197.0" y="467.0" width="11.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="200.0" y="478.0"></text>
</g>
<g>
<title>java/lang/String.substring (47 samples, 0.20%)</title><rect x="197.0" y="451.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="200.0" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (47 samples, 0.20%)</title><rect x="197.0" y="435.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="200.0" y="446.0"></text>
</g>
<g>
<title>java.lang.String (25 samples, 0.11%)</title><rect x="197.0" y="419.0" width="1.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="200.0" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (22 samples, 0.10%)</title><rect x="198.3" y="419.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="201.3" y="430.0"></text>
</g>
<g>
<title>byte[] (22 samples, 0.10%)</title><rect x="198.3" y="403.0" width="1.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="201.3" y="414.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (46 samples, 0.20%)</title><rect x="199.4" y="451.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="202.4" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (46 samples, 0.20%)</title><rect x="199.4" y="435.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="202.4" y="446.0"></text>
</g>
<g>
<title>byte[] (23 samples, 0.10%)</title><rect x="199.4" y="419.0" width="1.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="202.4" y="430.0"></text>
</g>
<g>
<title>java.lang.String (23 samples, 0.10%)</title><rect x="200.6" y="419.0" width="1.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="203.6" y="430.0"></text>
</g>
<g>
<title>java/lang/String.trim (32 samples, 0.14%)</title><rect x="201.8" y="451.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="204.8" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (32 samples, 0.14%)</title><rect x="201.8" y="435.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="204.8" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (32 samples, 0.14%)</title><rect x="201.8" y="419.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="204.8" y="430.0"></text>
</g>
<g>
<title>java.lang.String (17 samples, 0.07%)</title><rect x="201.8" y="403.0" width="0.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="204.8" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (15 samples, 0.07%)</title><rect x="202.6" y="403.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="205.6" y="414.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.07%)</title><rect x="202.6" y="387.0" width="0.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="205.6" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (30 samples, 0.13%)</title><rect x="203.4" y="451.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="206.4" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (30 samples, 0.13%)</title><rect x="203.4" y="435.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="206.4" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (30 samples, 0.13%)</title><rect x="203.4" y="419.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="206.4" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (30 samples, 0.13%)</title><rect x="203.4" y="403.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="206.4" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (30 samples, 0.13%)</title><rect x="203.4" y="387.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="206.4" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (30 samples, 0.13%)</title><rect x="203.4" y="371.0" width="1.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="206.4" y="382.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (59 samples, 0.26%)</title><rect x="204.9" y="451.0" width="3.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="207.9" y="462.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (19 samples, 0.08%)</title><rect x="204.9" y="435.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="207.9" y="446.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (19 samples, 0.08%)</title><rect x="204.9" y="419.0" width="1.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="207.9" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (25 samples, 0.11%)</title><rect x="205.9" y="435.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="208.9" y="446.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (25 samples, 0.11%)</title><rect x="205.9" y="419.0" width="1.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="208.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser$$Lambda$282/1262603830.apply (15 samples, 0.07%)</title><rect x="207.2" y="435.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="210.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.lambda$addHeaderFromString$0 (15 samples, 0.07%)</title><rect x="207.2" y="419.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="210.2" y="430.0"></text>
</g>
<g>
<title>java.util.ArrayList (15 samples, 0.07%)</title><rect x="207.2" y="403.0" width="0.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="210.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (183 samples, 0.80%)</title><rect x="208.0" y="611.0" width="9.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="211.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (183 samples, 0.80%)</title><rect x="208.0" y="595.0" width="9.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="211.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (183 samples, 0.80%)</title><rect x="208.0" y="579.0" width="9.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="211.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$199/1509846524.run (183 samples, 0.80%)</title><rect x="208.0" y="563.0" width="9.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="211.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (183 samples, 0.80%)</title><rect x="208.0" y="547.0" width="9.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="211.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (181 samples, 0.79%)</title><rect x="208.0" y="531.0" width="9.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="211.0" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (10 samples, 0.04%)</title><rect x="208.0" y="515.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="211.0" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (10 samples, 0.04%)</title><rect x="208.0" y="499.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="211.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$221/1241815609.get$Lambda (7 samples, 0.03%)</title><rect x="208.1" y="483.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="211.1" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$221 (7 samples, 0.03%)</title><rect x="208.1" y="467.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="211.1" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (8 samples, 0.03%)</title><rect x="208.5" y="515.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="211.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (15 samples, 0.07%)</title><rect x="208.9" y="515.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="211.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (15 samples, 0.07%)</title><rect x="208.9" y="499.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="211.9" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (6 samples, 0.03%)</title><rect x="208.9" y="483.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="211.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (9 samples, 0.04%)</title><rect x="209.2" y="483.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="212.2" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (9 samples, 0.04%)</title><rect x="209.2" y="467.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="212.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (148 samples, 0.64%)</title><rect x="209.7" y="515.0" width="7.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="212.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (148 samples, 0.64%)</title><rect x="209.7" y="499.0" width="7.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="212.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$290/1089333161.run (126 samples, 0.55%)</title><rect x="209.7" y="483.0" width="6.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="212.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (126 samples, 0.55%)</title><rect x="209.7" y="467.0" width="6.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="212.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (126 samples, 0.55%)</title><rect x="209.7" y="451.0" width="6.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="212.7" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (42 samples, 0.18%)</title><rect x="209.7" y="435.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="212.7" y="446.0"></text>
</g>
<g>
<title>java/util/Collection.stream (27 samples, 0.12%)</title><rect x="209.7" y="419.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="212.7" y="430.0"></text>
</g>
<g>
<title>java/util/List.spliterator (10 samples, 0.04%)</title><rect x="209.7" y="403.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="212.7" y="414.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (10 samples, 0.04%)</title><rect x="209.7" y="387.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="212.7" y="398.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (17 samples, 0.07%)</title><rect x="210.2" y="403.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="213.2" y="414.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (17 samples, 0.07%)</title><rect x="210.2" y="387.0" width="0.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="213.2" y="398.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (15 samples, 0.07%)</title><rect x="211.1" y="419.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="214.1" y="430.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (15 samples, 0.07%)</title><rect x="211.1" y="403.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="214.1" y="414.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (15 samples, 0.07%)</title><rect x="211.1" y="387.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="214.1" y="398.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$52/78204644.get (11 samples, 0.05%)</title><rect x="211.1" y="371.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="214.1" y="382.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (11 samples, 0.05%)</title><rect x="211.1" y="355.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="214.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (84 samples, 0.37%)</title><rect x="211.8" y="435.0" width="4.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="214.8" y="446.0"></text>
</g>
<g>
<title>java/time/Instant.now (5 samples, 0.02%)</title><rect x="211.8" y="419.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="214.8" y="430.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (5 samples, 0.02%)</title><rect x="211.8" y="403.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="214.8" y="414.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (5 samples, 0.02%)</title><rect x="211.8" y="387.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="214.8" y="398.0"></text>
</g>
<g>
<title>java/time/Instant.create (5 samples, 0.02%)</title><rect x="211.8" y="371.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="214.8" y="382.0"></text>
</g>
<g>
<title>java.time.Instant (5 samples, 0.02%)</title><rect x="211.8" y="355.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="214.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (79 samples, 0.34%)</title><rect x="212.1" y="419.0" width="4.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="215.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (24 samples, 0.10%)</title><rect x="212.1" y="403.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="215.1" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$ExpiryEntry (16 samples, 0.07%)</title><rect x="212.5" y="387.0" width="0.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="215.5" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (22 samples, 0.10%)</title><rect x="213.3" y="403.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="216.3" y="414.0"></text>
</g>
<g>
<title>java/util/HashMap.get (14 samples, 0.06%)</title><rect x="213.3" y="387.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="216.3" y="398.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (14 samples, 0.06%)</title><rect x="213.3" y="371.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="216.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (14 samples, 0.06%)</title><rect x="213.3" y="355.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="216.3" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (14 samples, 0.06%)</title><rect x="213.3" y="339.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="216.3" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (8 samples, 0.03%)</title><rect x="214.0" y="387.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="217.0" y="398.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (8 samples, 0.03%)</title><rect x="214.0" y="371.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="217.0" y="382.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (8 samples, 0.03%)</title><rect x="214.0" y="355.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="217.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (33 samples, 0.14%)</title><rect x="214.4" y="403.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="217.4" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CleanupTrigger (8 samples, 0.03%)</title><rect x="214.4" y="387.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="217.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (25 samples, 0.11%)</title><rect x="214.9" y="387.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="217.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (10 samples, 0.04%)</title><rect x="214.9" y="371.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="217.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (10 samples, 0.04%)</title><rect x="214.9" y="355.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="217.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (10 samples, 0.04%)</title><rect x="214.9" y="339.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="217.9" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (10 samples, 0.04%)</title><rect x="214.9" y="323.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="217.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (15 samples, 0.07%)</title><rect x="215.4" y="371.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="218.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (15 samples, 0.07%)</title><rect x="215.4" y="355.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="218.4" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (10 samples, 0.04%)</title><rect x="215.4" y="339.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="218.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (5 samples, 0.02%)</title><rect x="215.9" y="339.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="218.9" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (5 samples, 0.02%)</title><rect x="215.9" y="323.0" width="0.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="218.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (22 samples, 0.10%)</title><rect x="216.1" y="483.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="219.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (22 samples, 0.10%)</title><rect x="216.1" y="467.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="219.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (22 samples, 0.10%)</title><rect x="216.1" y="451.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="219.1" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (19 samples, 0.08%)</title><rect x="216.1" y="435.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="219.1" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (19 samples, 0.08%)</title><rect x="216.1" y="419.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="219.1" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (19 samples, 0.08%)</title><rect x="216.1" y="403.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="219.1" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (19 samples, 0.08%)</title><rect x="216.1" y="387.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="219.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$300/1036110883.accept (19 samples, 0.08%)</title><rect x="216.1" y="371.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="219.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (19 samples, 0.08%)</title><rect x="216.1" y="355.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="219.1" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (19 samples, 0.08%)</title><rect x="216.1" y="339.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="219.1" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (19 samples, 0.08%)</title><rect x="216.1" y="323.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="219.1" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (19 samples, 0.08%)</title><rect x="216.1" y="307.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="219.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$309/980063472.apply (19 samples, 0.08%)</title><rect x="216.1" y="291.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="219.1" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (19 samples, 0.08%)</title><rect x="216.1" y="275.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="219.1" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpResponseImpl (19 samples, 0.08%)</title><rect x="216.1" y="259.0" width="1.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="219.1" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$107/2098846329.run (9,038 samples, 39.35%)</title><rect x="217.4" y="643.0" width="464.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="220.4" y="654.0">ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$107/..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$328/1195073115.run (9,038 samples, 39.35%)</title><rect x="217.4" y="627.0" width="464.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="220.4" y="638.0">ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$328/..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$entity$2 (9,038 samples, 39.35%)</title><rect x="217.4" y="611.0" width="464.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="220.4" y="622.0">ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$entit..</text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.MetaRequest (438 samples, 1.91%)</title><rect x="217.4" y="595.0" width="22.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="220.4" y="606.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.delete (7,320 samples, 31.87%)</title><rect x="239.9" y="595.0" width="376.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="242.9" y="606.0">ru/mail/polis/service/shakhmin/HttpService.delete</text>
</g>
<g>
<title>java/lang/String.getBytes (233 samples, 1.01%)</title><rect x="240.0" y="579.0" width="11.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="243.0" y="590.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (233 samples, 1.01%)</title><rect x="240.0" y="563.0" width="11.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="243.0" y="574.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (233 samples, 1.01%)</title><rect x="240.0" y="547.0" width="11.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="243.0" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (233 samples, 1.01%)</title><rect x="240.0" y="531.0" width="11.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="243.0" y="542.0"></text>
</g>
<g>
<title>byte[] (233 samples, 1.01%)</title><rect x="240.0" y="515.0" width="11.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="243.0" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.03%)</title><rect x="251.9" y="579.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="254.9" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.03%)</title><rect x="251.9" y="563.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="254.9" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService$$Lambda$329/2105147641.get$Lambda (6 samples, 0.03%)</title><rect x="251.9" y="547.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="254.9" y="558.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.HttpService$$Lambda$329 (6 samples, 0.03%)</title><rect x="251.9" y="531.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="254.9" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (444 samples, 1.93%)</title><rect x="252.3" y="579.0" width="22.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="255.3" y="590.0">j..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (444 samples, 1.93%)</title><rect x="252.3" y="563.0" width="22.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="255.3" y="574.0">j..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (444 samples, 1.93%)</title><rect x="252.3" y="547.0" width="22.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="255.3" y="558.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (21 samples, 0.09%)</title><rect x="275.1" y="579.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="278.1" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (21 samples, 0.09%)</title><rect x="275.1" y="563.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="278.1" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniExceptionally (17 samples, 0.07%)</title><rect x="275.1" y="547.0" width="0.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="278.1" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (26 samples, 0.11%)</title><rect x="276.1" y="579.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="279.1" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (26 samples, 0.11%)</title><rect x="276.1" y="563.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="279.1" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (15 samples, 0.07%)</title><rect x="276.1" y="547.0" width="0.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="279.1" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (11 samples, 0.05%)</title><rect x="276.9" y="547.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="279.9" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (11 samples, 0.05%)</title><rect x="276.9" y="531.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="279.9" y="542.0"></text>
</g>
<g>
<title>one.nio.http.Response (186 samples, 0.81%)</title><rect x="277.5" y="579.0" width="9.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="280.5" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (837 samples, 3.64%)</title><rect x="287.0" y="579.0" width="43.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="290.0" y="590.0">one/..</text>
</g>
<g>
<title>byte[] (338 samples, 1.47%)</title><rect x="287.0" y="563.0" width="17.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="290.0" y="574.0"></text>
</g>
<g>
<title>java.lang.String[] (298 samples, 1.30%)</title><rect x="304.4" y="563.0" width="15.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="307.4" y="574.0"></text>
</g>
<g>
<title>java.lang.String (201 samples, 0.88%)</title><rect x="319.7" y="563.0" width="10.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="322.7" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.remove (829 samples, 3.61%)</title><rect x="330.0" y="579.0" width="42.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="333.0" y="590.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.remove (829 samples, 3.61%)</title><rect x="330.0" y="563.0" width="42.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="333.0" y="574.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.remove (828 samples, 3.60%)</title><rect x="330.1" y="547.0" width="42.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="333.1" y="558.0">ru/m..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (147 samples, 0.64%)</title><rect x="330.1" y="531.0" width="7.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="333.1" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (147 samples, 0.64%)</title><rect x="330.1" y="515.0" width="7.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="333.1" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Index (57 samples, 0.25%)</title><rect x="330.1" y="499.0" width="2.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="333.1" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Node (90 samples, 0.39%)</title><rect x="333.0" y="499.0" width="4.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="336.0" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Cell.getData (213 samples, 0.93%)</title><rect x="337.6" y="531.0" width="11.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="340.6" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (213 samples, 0.93%)</title><rect x="337.6" y="515.0" width="11.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="340.6" y="526.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (213 samples, 0.93%)</title><rect x="337.6" y="499.0" width="11.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="340.6" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Cell.tombstone (224 samples, 0.98%)</title><rect x="348.6" y="531.0" width="11.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="351.6" y="542.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Cell (224 samples, 0.98%)</title><rect x="348.6" y="515.0" width="11.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="351.6" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.of (244 samples, 1.06%)</title><rect x="360.1" y="531.0" width="12.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="363.1" y="542.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Row (244 samples, 1.06%)</title><rect x="360.1" y="515.0" width="12.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="363.1" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.getResponsesFromReplicas (2,887 samples, 12.57%)</title><rect x="372.6" y="579.0" width="148.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="375.6" y="590.0">ru/mail/polis/servi..</text>
</g>
<g>
<title>java.util.ArrayList (9 samples, 0.04%)</title><rect x="372.6" y="563.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="375.6" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (82 samples, 0.36%)</title><rect x="373.1" y="563.0" width="4.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="376.1" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1000975683.invoke (82 samples, 0.36%)</title><rect x="373.1" y="547.0" width="4.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="376.1" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (82 samples, 0.36%)</title><rect x="373.1" y="531.0" width="4.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="376.1" y="542.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (21 samples, 0.09%)</title><rect x="373.1" y="515.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="376.1" y="526.0"></text>
</g>
<g>
<title>java.lang.String (21 samples, 0.09%)</title><rect x="373.1" y="499.0" width="1.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="376.1" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (61 samples, 0.27%)</title><rect x="374.2" y="515.0" width="3.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="377.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (61 samples, 0.27%)</title><rect x="374.2" y="499.0" width="3.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="377.2" y="510.0"></text>
</g>
<g>
<title>byte[] (60 samples, 0.26%)</title><rect x="374.2" y="483.0" width="3.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="377.2" y="494.0"></text>
</g>
<g>
<title>java/net/URI.create (331 samples, 1.44%)</title><rect x="377.3" y="563.0" width="17.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="380.3" y="574.0"></text>
</g>
<g>
<title>java.net.URI (54 samples, 0.24%)</title><rect x="377.3" y="547.0" width="2.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="380.3" y="558.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (275 samples, 1.20%)</title><rect x="380.2" y="547.0" width="14.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="383.2" y="558.0"></text>
</g>
<g>
<title>java.net.URI$Parser (26 samples, 0.11%)</title><rect x="380.2" y="531.0" width="1.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="383.2" y="542.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (249 samples, 1.08%)</title><rect x="381.5" y="531.0" width="12.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="384.5" y="542.0"></text>
</g>
<g>
<title>java/lang/String.substring (47 samples, 0.20%)</title><rect x="381.5" y="515.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="384.5" y="526.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (47 samples, 0.20%)</title><rect x="381.5" y="499.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="384.5" y="510.0"></text>
</g>
<g>
<title>java.lang.String (17 samples, 0.07%)</title><rect x="381.5" y="483.0" width="0.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="384.5" y="494.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (30 samples, 0.13%)</title><rect x="382.4" y="483.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="385.4" y="494.0"></text>
</g>
<g>
<title>byte[] (30 samples, 0.13%)</title><rect x="382.4" y="467.0" width="1.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="385.4" y="478.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (202 samples, 0.88%)</title><rect x="383.9" y="515.0" width="10.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="386.9" y="526.0"></text>
</g>
<g>
<title>java/lang/String.substring (118 samples, 0.51%)</title><rect x="383.9" y="499.0" width="6.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="386.9" y="510.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (118 samples, 0.51%)</title><rect x="383.9" y="483.0" width="6.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="386.9" y="494.0"></text>
</g>
<g>
<title>java.lang.String (52 samples, 0.23%)</title><rect x="383.9" y="467.0" width="2.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="386.9" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (66 samples, 0.29%)</title><rect x="386.6" y="467.0" width="3.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="389.6" y="478.0"></text>
</g>
<g>
<title>byte[] (66 samples, 0.29%)</title><rect x="386.6" y="451.0" width="3.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="389.6" y="462.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (84 samples, 0.37%)</title><rect x="390.0" y="499.0" width="4.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="393.0" y="510.0"></text>
</g>
<g>
<title>java/lang/String.substring (40 samples, 0.17%)</title><rect x="390.0" y="483.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="393.0" y="494.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (40 samples, 0.17%)</title><rect x="390.0" y="467.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="393.0" y="478.0"></text>
</g>
<g>
<title>java.lang.String (17 samples, 0.07%)</title><rect x="390.0" y="451.0" width="0.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="393.0" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (23 samples, 0.10%)</title><rect x="390.9" y="451.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="393.9" y="462.0"></text>
</g>
<g>
<title>byte[] (23 samples, 0.10%)</title><rect x="390.9" y="435.0" width="1.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="393.9" y="446.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (44 samples, 0.19%)</title><rect x="392.0" y="483.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="395.0" y="494.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (44 samples, 0.19%)</title><rect x="392.0" y="467.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="395.0" y="478.0"></text>
</g>
<g>
<title>java/lang/String.substring (44 samples, 0.19%)</title><rect x="392.0" y="451.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="395.0" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (44 samples, 0.19%)</title><rect x="392.0" y="435.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="395.0" y="446.0"></text>
</g>
<g>
<title>java.lang.String (16 samples, 0.07%)</title><rect x="392.0" y="419.0" width="0.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="395.0" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (28 samples, 0.12%)</title><rect x="392.9" y="419.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="395.9" y="430.0"></text>
</g>
<g>
<title>byte[] (28 samples, 0.12%)</title><rect x="392.9" y="403.0" width="1.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="395.9" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest.newBuilder (82 samples, 0.36%)</title><rect x="394.3" y="563.0" width="4.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="397.3" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestBuilderImpl (29 samples, 0.13%)</title><rect x="394.3" y="547.0" width="1.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="397.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.&lt;init&gt; (53 samples, 0.23%)</title><rect x="395.8" y="547.0" width="2.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="398.8" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (14 samples, 0.06%)</title><rect x="395.8" y="531.0" width="0.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="398.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (39 samples, 0.17%)</title><rect x="396.5" y="531.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="399.5" y="542.0"></text>
</g>
<g>
<title>java.util.TreeMap (39 samples, 0.17%)</title><rect x="396.5" y="515.0" width="2.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="399.5" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (21 samples, 0.09%)</title><rect x="398.5" y="563.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="401.5" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (21 samples, 0.09%)</title><rect x="398.5" y="547.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="401.5" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (21 samples, 0.09%)</title><rect x="398.5" y="531.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="401.5" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (21 samples, 0.09%)</title><rect x="398.5" y="515.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="401.5" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (21 samples, 0.09%)</title><rect x="398.5" y="499.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="401.5" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (21 samples, 0.09%)</title><rect x="398.5" y="483.0" width="1.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="401.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (1,666 samples, 7.25%)</title><rect x="399.6" y="563.0" width="85.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="402.6" y="574.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (1,666 samples, 7.25%)</title><rect x="399.6" y="547.0" width="85.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="402.6" y="558.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (1,666 samples, 7.25%)</title><rect x="399.6" y="531.0" width="85.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="402.6" y="542.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (1,666 samples, 7.25%)</title><rect x="399.6" y="515.0" width="85.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="402.6" y="526.0">jdk/intern..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (10 samples, 0.04%)</title><rect x="399.6" y="499.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="402.6" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (10 samples, 0.04%)</title><rect x="399.6" y="483.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="402.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$138/443747487.get$Lambda (10 samples, 0.04%)</title><rect x="399.6" y="467.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="402.6" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$$Lambda$138 (10 samples, 0.04%)</title><rect x="399.6" y="451.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="402.6" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (42 samples, 0.18%)</title><rect x="400.1" y="499.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="403.1" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (42 samples, 0.18%)</title><rect x="400.1" y="483.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="403.1" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (21 samples, 0.09%)</title><rect x="400.1" y="467.0" width="1.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="403.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (21 samples, 0.09%)</title><rect x="401.2" y="467.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="404.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (21 samples, 0.09%)</title><rect x="401.2" y="451.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="404.2" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (21 samples, 0.09%)</title><rect x="401.2" y="435.0" width="1.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="404.2" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (67 samples, 0.29%)</title><rect x="402.3" y="499.0" width="3.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="405.3" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (67 samples, 0.29%)</title><rect x="402.3" y="483.0" width="3.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="405.3" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (43 samples, 0.19%)</title><rect x="402.3" y="467.0" width="2.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="405.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (24 samples, 0.10%)</title><rect x="404.5" y="467.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="407.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (24 samples, 0.10%)</title><rect x="404.5" y="451.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="407.5" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (24 samples, 0.10%)</title><rect x="404.5" y="435.0" width="1.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="407.5" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl (50 samples, 0.22%)</title><rect x="405.7" y="499.0" width="2.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="408.7" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange (75 samples, 0.33%)</title><rect x="408.3" y="499.0" width="3.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="411.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (841 samples, 3.66%)</title><rect x="412.2" y="499.0" width="43.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="415.2" y="510.0">jdk/..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (84 samples, 0.37%)</title><rect x="412.2" y="483.0" width="4.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="415.2" y="494.0"></text>
</g>
<g>
<title>java/util/Collection.stream (67 samples, 0.29%)</title><rect x="412.2" y="467.0" width="3.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="415.2" y="478.0"></text>
</g>
<g>
<title>java/util/List.spliterator (22 samples, 0.10%)</title><rect x="412.2" y="451.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="415.2" y="462.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (22 samples, 0.10%)</title><rect x="412.2" y="435.0" width="1.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="415.2" y="446.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (45 samples, 0.20%)</title><rect x="413.4" y="451.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="416.4" y="462.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (45 samples, 0.20%)</title><rect x="413.4" y="435.0" width="2.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="416.4" y="446.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (17 samples, 0.07%)</title><rect x="415.7" y="467.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="418.7" y="478.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (17 samples, 0.07%)</title><rect x="415.7" y="451.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="418.7" y="462.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (17 samples, 0.07%)</title><rect x="415.7" y="435.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="418.7" y="446.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$52/78204644.get (17 samples, 0.07%)</title><rect x="415.7" y="419.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="418.7" y="430.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (17 samples, 0.07%)</title><rect x="415.7" y="403.0" width="0.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="418.7" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (335 samples, 1.46%)</title><rect x="416.5" y="483.0" width="17.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="419.5" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (335 samples, 1.46%)</title><rect x="416.5" y="467.0" width="17.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="419.5" y="478.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (13 samples, 0.06%)</title><rect x="416.5" y="451.0" width="0.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="419.5" y="462.0"></text>
</g>
<g>
<title>java.util.ArrayList (20 samples, 0.09%)</title><rect x="417.2" y="451.0" width="1.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="420.2" y="462.0"></text>
</g>
<g>
<title>java.util.TreeMap (42 samples, 0.18%)</title><rect x="418.2" y="451.0" width="2.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="421.2" y="462.0"></text>
</g>
<g>
<title>java.util.TreeSet (11 samples, 0.05%)</title><rect x="420.4" y="451.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="423.4" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (24 samples, 0.10%)</title><rect x="421.0" y="451.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="424.0" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (24 samples, 0.10%)</title><rect x="421.0" y="435.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="424.0" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$115/937225413.get$Lambda (24 samples, 0.10%)</title><rect x="421.0" y="419.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="424.0" y="430.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$115 (24 samples, 0.10%)</title><rect x="421.0" y="403.0" width="1.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="424.0" y="414.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (166 samples, 0.72%)</title><rect x="422.2" y="451.0" width="8.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="425.2" y="462.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (166 samples, 0.72%)</title><rect x="422.2" y="435.0" width="8.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="425.2" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$115/937225413.accept (166 samples, 0.72%)</title><rect x="422.2" y="419.0" width="8.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="425.2" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (166 samples, 0.72%)</title><rect x="422.2" y="403.0" width="8.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="425.2" y="414.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (68 samples, 0.30%)</title><rect x="422.2" y="387.0" width="3.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="425.2" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$118/2131634163.accept (44 samples, 0.19%)</title><rect x="422.2" y="371.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="425.2" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (44 samples, 0.19%)</title><rect x="422.2" y="355.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="425.2" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (44 samples, 0.19%)</title><rect x="422.2" y="339.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="425.2" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (44 samples, 0.19%)</title><rect x="422.2" y="323.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="425.2" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (44 samples, 0.19%)</title><rect x="422.2" y="307.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="425.2" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (44 samples, 0.19%)</title><rect x="422.2" y="291.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="425.2" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (44 samples, 0.19%)</title><rect x="422.2" y="275.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="425.2" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (44 samples, 0.19%)</title><rect x="422.2" y="259.0" width="2.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="425.2" y="270.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (24 samples, 0.10%)</title><rect x="424.4" y="371.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="427.4" y="382.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (24 samples, 0.10%)</title><rect x="424.4" y="355.0" width="1.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="427.4" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (21 samples, 0.09%)</title><rect x="425.7" y="387.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="428.7" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (21 samples, 0.09%)</title><rect x="425.7" y="371.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="428.7" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$118/2131634163.get$Lambda (21 samples, 0.09%)</title><rect x="425.7" y="355.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="428.7" y="366.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$118 (21 samples, 0.09%)</title><rect x="425.7" y="339.0" width="1.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="428.7" y="350.0"></text>
</g>
<g>
<title>java/util/List.copyOf (51 samples, 0.22%)</title><rect x="426.8" y="387.0" width="2.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="429.8" y="398.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (51 samples, 0.22%)</title><rect x="426.8" y="371.0" width="2.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="429.8" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (21 samples, 0.09%)</title><rect x="426.8" y="355.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="429.8" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (21 samples, 0.09%)</title><rect x="426.8" y="339.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="429.8" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (21 samples, 0.09%)</title><rect x="426.8" y="323.0" width="1.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="429.8" y="334.0"></text>
</g>
<g>
<title>java/util/List.of (30 samples, 0.13%)</title><rect x="427.8" y="355.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="430.8" y="366.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (30 samples, 0.13%)</title><rect x="427.8" y="339.0" width="1.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="430.8" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (26 samples, 0.11%)</title><rect x="429.4" y="387.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="432.4" y="398.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (26 samples, 0.11%)</title><rect x="429.4" y="371.0" width="1.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="432.4" y="382.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (29 samples, 0.13%)</title><rect x="430.7" y="451.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="433.7" y="462.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (29 samples, 0.13%)</title><rect x="430.7" y="435.0" width="1.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="433.7" y="446.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (30 samples, 0.13%)</title><rect x="432.2" y="451.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="435.2" y="462.0"></text>
</g>
<g>
<title>java.util.TreeMap (30 samples, 0.13%)</title><rect x="432.2" y="435.0" width="1.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="435.2" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (16 samples, 0.07%)</title><rect x="433.7" y="483.0" width="0.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="436.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (281 samples, 1.22%)</title><rect x="434.6" y="483.0" width="14.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="437.6" y="494.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (281 samples, 1.22%)</title><rect x="434.6" y="467.0" width="14.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="437.6" y="478.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (257 samples, 1.12%)</title><rect x="434.6" y="451.0" width="13.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="437.6" y="462.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (257 samples, 1.12%)</title><rect x="434.6" y="435.0" width="13.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="437.6" y="446.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (257 samples, 1.12%)</title><rect x="434.6" y="419.0" width="13.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="437.6" y="430.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (66 samples, 0.29%)</title><rect x="434.6" y="403.0" width="3.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="437.6" y="414.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (64 samples, 0.28%)</title><rect x="438.0" y="403.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="441.0" y="414.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (64 samples, 0.28%)</title><rect x="438.0" y="387.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="441.0" y="398.0"></text>
</g>
<g>
<title>byte[] (64 samples, 0.28%)</title><rect x="438.0" y="371.0" width="3.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="441.0" y="382.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (127 samples, 0.55%)</title><rect x="441.2" y="403.0" width="6.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="444.2" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (127 samples, 0.55%)</title><rect x="441.2" y="387.0" width="6.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="444.2" y="398.0"></text>
</g>
<g>
<title>java.lang.String (54 samples, 0.24%)</title><rect x="441.2" y="371.0" width="2.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="444.2" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (73 samples, 0.32%)</title><rect x="444.0" y="371.0" width="3.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="447.0" y="382.0"></text>
</g>
<g>
<title>byte[] (73 samples, 0.32%)</title><rect x="444.0" y="355.0" width="3.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="447.0" y="366.0"></text>
</g>
<g>
<title>sun.net.spi.DefaultProxySelector$4 (24 samples, 0.10%)</title><rect x="447.8" y="451.0" width="1.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="450.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (43 samples, 0.19%)</title><rect x="449.0" y="483.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="452.0" y="494.0"></text>
</g>
<g>
<title>java.util.TreeMap (43 samples, 0.19%)</title><rect x="449.0" y="467.0" width="2.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="452.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (82 samples, 0.36%)</title><rect x="451.2" y="483.0" width="4.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="454.2" y="494.0"></text>
</g>
<g>
<title>java.util.ArrayList (24 samples, 0.10%)</title><rect x="451.2" y="467.0" width="1.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="454.2" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (26 samples, 0.11%)</title><rect x="452.4" y="467.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="455.4" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (26 samples, 0.11%)</title><rect x="452.4" y="451.0" width="1.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="455.4" y="462.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (32 samples, 0.14%)</title><rect x="453.8" y="467.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="456.8" y="478.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (32 samples, 0.14%)</title><rect x="453.8" y="451.0" width="1.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="456.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (346 samples, 1.51%)</title><rect x="455.4" y="499.0" width="17.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="458.4" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (14 samples, 0.06%)</title><rect x="455.4" y="483.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="458.4" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange (62 samples, 0.27%)</title><rect x="456.1" y="483.0" width="3.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="459.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.&lt;init&gt; (14 samples, 0.06%)</title><rect x="459.4" y="483.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="462.4" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$ConnectionAborter (14 samples, 0.06%)</title><rect x="459.4" y="467.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="462.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (254 samples, 1.11%)</title><rect x="460.1" y="483.0" width="13.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="463.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (254 samples, 1.11%)</title><rect x="460.1" y="467.0" width="13.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="463.1" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (33 samples, 0.14%)</title><rect x="460.1" y="451.0" width="1.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="463.1" y="462.0"></text>
</g>
<g>
<title>java.util.LinkedList (23 samples, 0.10%)</title><rect x="461.8" y="451.0" width="1.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="464.8" y="462.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (118 samples, 0.51%)</title><rect x="463.0" y="451.0" width="6.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="466.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (118 samples, 0.51%)</title><rect x="463.0" y="435.0" width="6.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="466.0" y="446.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyConstructor (118 samples, 0.51%)</title><rect x="463.0" y="419.0" width="6.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="466.0" y="430.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.copy (118 samples, 0.51%)</title><rect x="463.0" y="403.0" width="6.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="466.0" y="414.0"></text>
</g>
<g>
<title>java.lang.reflect.Constructor (116 samples, 0.50%)</title><rect x="463.0" y="387.0" width="6.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="466.0" y="398.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (44 samples, 0.19%)</title><rect x="469.1" y="451.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="472.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (44 samples, 0.19%)</title><rect x="469.1" y="435.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="472.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor10.newInstance (31 samples, 0.13%)</title><rect x="469.1" y="419.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="472.1" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RedirectFilter (31 samples, 0.13%)</title><rect x="469.1" y="403.0" width="1.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="472.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor8.newInstance (13 samples, 0.06%)</title><rect x="470.7" y="419.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="473.7" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.AuthenticationFilter (13 samples, 0.06%)</title><rect x="470.7" y="403.0" width="0.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="473.7" y="414.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (36 samples, 0.16%)</title><rect x="471.3" y="451.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="474.3" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (36 samples, 0.16%)</title><rect x="471.3" y="435.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="474.3" y="446.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (36 samples, 0.16%)</title><rect x="471.3" y="419.0" width="1.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="474.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (233 samples, 1.01%)</title><rect x="473.2" y="499.0" width="12.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="476.2" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (44 samples, 0.19%)</title><rect x="473.2" y="483.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="476.2" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (25 samples, 0.11%)</title><rect x="473.2" y="467.0" width="1.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="476.2" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (19 samples, 0.08%)</title><rect x="474.5" y="467.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="477.5" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (19 samples, 0.08%)</title><rect x="474.5" y="451.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="477.5" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (19 samples, 0.08%)</title><rect x="474.5" y="435.0" width="1.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="477.5" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (23 samples, 0.10%)</title><rect x="475.5" y="483.0" width="1.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="478.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (166 samples, 0.72%)</title><rect x="476.6" y="483.0" width="8.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="479.6" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (34 samples, 0.15%)</title><rect x="476.6" y="467.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="479.6" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (34 samples, 0.15%)</title><rect x="476.6" y="451.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="479.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$128/1729551726.get$Lambda (12 samples, 0.05%)</title><rect x="476.6" y="435.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="479.6" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$128 (12 samples, 0.05%)</title><rect x="476.6" y="419.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="479.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$132/1112562714.get$Lambda (22 samples, 0.10%)</title><rect x="477.3" y="435.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="480.3" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$132 (22 samples, 0.10%)</title><rect x="477.3" y="419.0" width="1.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="480.3" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (132 samples, 0.57%)</title><rect x="478.4" y="467.0" width="6.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="481.4" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (132 samples, 0.57%)</title><rect x="478.4" y="451.0" width="6.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="481.4" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (73 samples, 0.32%)</title><rect x="478.4" y="435.0" width="3.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="481.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (59 samples, 0.26%)</title><rect x="482.1" y="435.0" width="3.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="485.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (59 samples, 0.26%)</title><rect x="482.1" y="419.0" width="3.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="485.1" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (59 samples, 0.26%)</title><rect x="482.1" y="403.0" width="3.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="485.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (323 samples, 1.41%)</title><rect x="485.2" y="563.0" width="16.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="488.2" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ImmutableHttpRequest (31 samples, 0.13%)</title><rect x="485.2" y="547.0" width="1.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="488.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (292 samples, 1.27%)</title><rect x="486.8" y="547.0" width="15.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="489.8" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (292 samples, 1.27%)</title><rect x="486.8" y="531.0" width="15.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="489.8" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (292 samples, 1.27%)</title><rect x="486.8" y="515.0" width="15.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="489.8" y="526.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (12 samples, 0.05%)</title><rect x="486.8" y="499.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="489.8" y="510.0"></text>
</g>
<g>
<title>java.util.ArrayList (19 samples, 0.08%)</title><rect x="487.4" y="499.0" width="0.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="490.4" y="510.0"></text>
</g>
<g>
<title>java.util.TreeMap (45 samples, 0.20%)</title><rect x="488.3" y="499.0" width="2.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="491.3" y="510.0"></text>
</g>
<g>
<title>java.util.TreeSet (15 samples, 0.07%)</title><rect x="490.7" y="499.0" width="0.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="493.7" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (21 samples, 0.09%)</title><rect x="491.4" y="499.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="494.4" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (21 samples, 0.09%)</title><rect x="491.4" y="483.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="494.4" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$115/937225413.get$Lambda (21 samples, 0.09%)</title><rect x="491.4" y="467.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="494.4" y="478.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$115 (21 samples, 0.09%)</title><rect x="491.4" y="451.0" width="1.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="494.4" y="462.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (15 samples, 0.07%)</title><rect x="492.5" y="499.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="495.5" y="510.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (15 samples, 0.07%)</title><rect x="492.5" y="483.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="495.5" y="494.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (138 samples, 0.60%)</title><rect x="493.3" y="499.0" width="7.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="496.3" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$115/937225413.accept (138 samples, 0.60%)</title><rect x="493.3" y="483.0" width="7.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="496.3" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (138 samples, 0.60%)</title><rect x="493.3" y="467.0" width="7.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="496.3" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (24 samples, 0.10%)</title><rect x="493.3" y="451.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="496.3" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (24 samples, 0.10%)</title><rect x="493.3" y="435.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="496.3" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$118/2131634163.get$Lambda (24 samples, 0.10%)</title><rect x="493.3" y="419.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="496.3" y="430.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$118 (24 samples, 0.10%)</title><rect x="493.3" y="403.0" width="1.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="496.3" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (50 samples, 0.22%)</title><rect x="494.5" y="451.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="497.5" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$118/2131634163.accept (50 samples, 0.22%)</title><rect x="494.5" y="435.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="497.5" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (50 samples, 0.22%)</title><rect x="494.5" y="419.0" width="2.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="497.5" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (50 samples, 0.22%)</title><rect x="494.5" y="403.0" width="2.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="497.5" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (50 samples, 0.22%)</title><rect x="494.5" y="387.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="497.5" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (50 samples, 0.22%)</title><rect x="494.5" y="371.0" width="2.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="497.5" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (50 samples, 0.22%)</title><rect x="494.5" y="355.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="497.5" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (50 samples, 0.22%)</title><rect x="494.5" y="339.0" width="2.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="497.5" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (50 samples, 0.22%)</title><rect x="494.5" y="323.0" width="2.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="497.5" y="334.0"></text>
</g>
<g>
<title>java/util/List.copyOf (34 samples, 0.15%)</title><rect x="497.1" y="451.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="500.1" y="462.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (34 samples, 0.15%)</title><rect x="497.1" y="435.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="500.1" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (16 samples, 0.07%)</title><rect x="497.1" y="419.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="500.1" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (16 samples, 0.07%)</title><rect x="497.1" y="403.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="500.1" y="414.0"></text>
</g>
<g>
<title>java.lang.Object[] (16 samples, 0.07%)</title><rect x="497.1" y="387.0" width="0.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="500.1" y="398.0"></text>
</g>
<g>
<title>java/util/List.of (18 samples, 0.08%)</title><rect x="497.9" y="419.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="500.9" y="430.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (18 samples, 0.08%)</title><rect x="497.9" y="403.0" width="0.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="500.9" y="414.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (30 samples, 0.13%)</title><rect x="498.8" y="451.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="501.8" y="462.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (30 samples, 0.13%)</title><rect x="498.8" y="435.0" width="1.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="501.8" y="446.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (27 samples, 0.12%)</title><rect x="500.4" y="499.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="503.4" y="510.0"></text>
</g>
<g>
<title>java.util.TreeMap (27 samples, 0.12%)</title><rect x="500.4" y="483.0" width="1.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="503.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.setHeader (67 samples, 0.29%)</title><rect x="501.8" y="563.0" width="3.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="504.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.setHeader (67 samples, 0.29%)</title><rect x="501.8" y="547.0" width="3.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="504.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (67 samples, 0.29%)</title><rect x="501.8" y="531.0" width="3.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="504.8" y="542.0"></text>
</g>
<g>
<title>java.util.ArrayList (17 samples, 0.07%)</title><rect x="501.8" y="515.0" width="0.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="504.8" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (15 samples, 0.07%)</title><rect x="502.6" y="515.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="505.6" y="526.0"></text>
</g>
<g>
<title>java.lang.Object[] (15 samples, 0.07%)</title><rect x="502.6" y="499.0" width="0.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="505.6" y="510.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (35 samples, 0.15%)</title><rect x="503.4" y="515.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="506.4" y="526.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (35 samples, 0.15%)</title><rect x="503.4" y="499.0" width="1.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="506.4" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.getFirstResponses (306 samples, 1.33%)</title><rect x="505.2" y="563.0" width="15.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="508.2" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (7 samples, 0.03%)</title><rect x="505.2" y="547.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="508.2" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (6 samples, 0.03%)</title><rect x="505.7" y="547.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="508.7" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1649486608.linkToTargetMethod (12 samples, 0.05%)</title><rect x="506.0" y="547.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="509.0" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/89464641.invokeStatic (12 samples, 0.05%)</title><rect x="506.0" y="531.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="509.0" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService$$Lambda$140/507376197.get$Lambda (12 samples, 0.05%)</title><rect x="506.0" y="515.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="509.0" y="526.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.HttpService$$Lambda$140 (12 samples, 0.05%)</title><rect x="506.0" y="499.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="509.0" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (58 samples, 0.25%)</title><rect x="506.6" y="547.0" width="3.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="509.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (58 samples, 0.25%)</title><rect x="506.6" y="531.0" width="3.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="509.6" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniExceptionally (37 samples, 0.16%)</title><rect x="506.6" y="515.0" width="1.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="509.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (21 samples, 0.09%)</title><rect x="508.5" y="515.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="511.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (21 samples, 0.09%)</title><rect x="508.5" y="499.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="511.5" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (21 samples, 0.09%)</title><rect x="508.5" y="483.0" width="1.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="511.5" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.orTimeout (155 samples, 0.67%)</title><rect x="509.6" y="547.0" width="8.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="512.6" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$Canceller (13 samples, 0.06%)</title><rect x="509.6" y="531.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="512.6" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$Timeout (10 samples, 0.04%)</title><rect x="510.3" y="531.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="513.3" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Delayer.delay (80 samples, 0.35%)</title><rect x="510.8" y="531.0" width="4.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="513.8" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor.schedule (80 samples, 0.35%)</title><rect x="510.8" y="515.0" width="4.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="513.8" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask (63 samples, 0.27%)</title><rect x="510.8" y="499.0" width="3.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="513.8" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$ScheduledFutureTask.&lt;init&gt; (17 samples, 0.07%)</title><rect x="514.0" y="499.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="517.0" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.&lt;init&gt; (17 samples, 0.07%)</title><rect x="514.0" y="483.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="517.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors.callable (17 samples, 0.07%)</title><rect x="514.0" y="467.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="517.0" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.Executors$RunnableAdapter (17 samples, 0.07%)</title><rect x="514.0" y="451.0" width="0.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="517.0" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (52 samples, 0.23%)</title><rect x="514.9" y="531.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="517.9" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (52 samples, 0.23%)</title><rect x="514.9" y="515.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="517.9" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (23 samples, 0.10%)</title><rect x="514.9" y="499.0" width="1.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="517.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (29 samples, 0.13%)</title><rect x="516.1" y="499.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="519.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (29 samples, 0.13%)</title><rect x="516.1" y="483.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="519.1" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (29 samples, 0.13%)</title><rect x="516.1" y="467.0" width="1.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="519.1" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (55 samples, 0.24%)</title><rect x="517.6" y="547.0" width="2.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="520.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (55 samples, 0.24%)</title><rect x="517.6" y="531.0" width="2.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="520.6" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (32 samples, 0.14%)</title><rect x="517.6" y="515.0" width="1.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="520.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (23 samples, 0.10%)</title><rect x="519.2" y="515.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="522.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (23 samples, 0.10%)</title><rect x="519.2" y="499.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="522.2" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (23 samples, 0.10%)</title><rect x="519.2" y="483.0" width="1.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="522.2" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.&lt;init&gt; (10 samples, 0.04%)</title><rect x="520.4" y="547.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="523.4" y="558.0"></text>
</g>
<g>
<title>java.lang.Object[] (8 samples, 0.03%)</title><rect x="520.4" y="531.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="523.4" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.sendResponse (1,659 samples, 7.22%)</title><rect x="520.9" y="579.0" width="85.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="523.9" y="590.0">ru/mail/po..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1,659 samples, 7.22%)</title><rect x="520.9" y="563.0" width="85.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="523.9" y="574.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (1,063 samples, 4.63%)</title><rect x="520.9" y="547.0" width="54.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="523.9" y="558.0">one/n..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (725 samples, 3.16%)</title><rect x="520.9" y="531.0" width="37.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="523.9" y="542.0">one..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (725 samples, 3.16%)</title><rect x="520.9" y="515.0" width="37.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="523.9" y="526.0">one..</text>
</g>
<g>
<title>byte[] (713 samples, 3.10%)</title><rect x="520.9" y="499.0" width="36.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="523.9" y="510.0">byt..</text>
</g>
<g>
<title>byte[] (12 samples, 0.05%)</title><rect x="557.5" y="499.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="560.5" y="510.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (338 samples, 1.47%)</title><rect x="558.2" y="531.0" width="17.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="561.2" y="542.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (338 samples, 1.47%)</title><rect x="558.2" y="515.0" width="17.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="561.2" y="526.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (596 samples, 2.59%)</title><rect x="575.5" y="547.0" width="30.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="578.5" y="558.0">on..</text>
</g>
<g>
<title>java/lang/String.substring (596 samples, 2.59%)</title><rect x="575.5" y="531.0" width="30.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="578.5" y="542.0">ja..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (596 samples, 2.59%)</title><rect x="575.5" y="515.0" width="30.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="578.5" y="526.0">ja..</text>
</g>
<g>
<title>java.lang.String (225 samples, 0.98%)</title><rect x="575.5" y="499.0" width="11.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="578.5" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (371 samples, 1.62%)</title><rect x="587.1" y="499.0" width="19.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="590.1" y="510.0"></text>
</g>
<g>
<title>byte[] (371 samples, 1.62%)</title><rect x="587.1" y="483.0" width="19.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="590.1" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/ConsistentHashImpl.replicas (190 samples, 0.83%)</title><rect x="606.1" y="579.0" width="9.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="609.1" y="590.0"></text>
</g>
<g>
<title>java.util.ArrayList (8 samples, 0.03%)</title><rect x="606.1" y="563.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="609.1" y="574.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (33 samples, 0.14%)</title><rect x="606.5" y="563.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="609.5" y="574.0"></text>
</g>
<g>
<title>java.util.AbstractMap$2$1 (6 samples, 0.03%)</title><rect x="606.5" y="547.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="609.5" y="558.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (27 samples, 0.12%)</title><rect x="606.9" y="547.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="609.9" y="558.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap$AscendingEntrySetView.iterator (15 samples, 0.07%)</title><rect x="606.9" y="531.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="609.9" y="542.0"></text>
</g>
<g>
<title>java.util.TreeMap$NavigableSubMap$SubMapEntryIterator (15 samples, 0.07%)</title><rect x="606.9" y="515.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="609.9" y="526.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap.entrySet (12 samples, 0.05%)</title><rect x="607.6" y="531.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="610.6" y="542.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap$AscendingEntrySetView (12 samples, 0.05%)</title><rect x="607.6" y="515.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="610.6" y="526.0"></text>
</g>
<g>
<title>java/util/AbstractMap.values (11 samples, 0.05%)</title><rect x="608.2" y="563.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="611.2" y="574.0"></text>
</g>
<g>
<title>java.util.AbstractMap$2 (11 samples, 0.05%)</title><rect x="608.2" y="547.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="611.2" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (21 samples, 0.09%)</title><rect x="608.8" y="563.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="611.8" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (21 samples, 0.09%)</title><rect x="608.8" y="547.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="611.8" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (21 samples, 0.09%)</title><rect x="608.8" y="531.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="611.8" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (21 samples, 0.09%)</title><rect x="608.8" y="515.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="611.8" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (21 samples, 0.09%)</title><rect x="608.8" y="499.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="611.8" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (21 samples, 0.09%)</title><rect x="608.8" y="483.0" width="1.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="611.8" y="494.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (18 samples, 0.08%)</title><rect x="610.0" y="563.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="613.0" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (18 samples, 0.08%)</title><rect x="610.0" y="547.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="613.0" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap (18 samples, 0.08%)</title><rect x="610.0" y="531.0" width="0.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="613.0" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/ConsistentHashImpl.firstReplica (97 samples, 0.42%)</title><rect x="610.9" y="563.0" width="5.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="613.9" y="574.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.hashBytes (83 samples, 0.36%)</title><rect x="610.9" y="547.0" width="4.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="613.9" y="558.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.newHasher (50 samples, 0.22%)</title><rect x="610.9" y="531.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="613.9" y="542.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction.newHasher (50 samples, 0.22%)</title><rect x="610.9" y="515.0" width="2.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="613.9" y="526.0"></text>
</g>
<g>
<title>com.google.common.hash.Murmur3_128HashFunction$Murmur3_128Hasher (16 samples, 0.07%)</title><rect x="610.9" y="499.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="613.9" y="510.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.&lt;init&gt; (34 samples, 0.15%)</title><rect x="611.7" y="499.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="614.7" y="510.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.&lt;init&gt; (34 samples, 0.15%)</title><rect x="611.7" y="483.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="614.7" y="494.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.&lt;init&gt; (34 samples, 0.15%)</title><rect x="611.7" y="467.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="614.7" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (34 samples, 0.15%)</title><rect x="611.7" y="451.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="614.7" y="462.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (15 samples, 0.07%)</title><rect x="611.7" y="435.0" width="0.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="614.7" y="446.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (19 samples, 0.08%)</title><rect x="612.5" y="435.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="615.5" y="446.0"></text>
</g>
<g>
<title>byte[] (19 samples, 0.08%)</title><rect x="612.5" y="419.0" width="1.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="615.5" y="430.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.hash (33 samples, 0.14%)</title><rect x="613.5" y="531.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="616.5" y="542.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.makeHash (33 samples, 0.14%)</title><rect x="613.5" y="515.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="616.5" y="526.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.03%)</title><rect x="613.5" y="499.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="616.5" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (25 samples, 0.11%)</title><rect x="613.9" y="499.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="616.9" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (25 samples, 0.11%)</title><rect x="613.9" y="483.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="616.9" y="494.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (25 samples, 0.11%)</title><rect x="613.9" y="467.0" width="1.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="616.9" y="478.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (7 samples, 0.03%)</title><rect x="615.2" y="547.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="618.2" y="558.0"></text>
</g>
<g>
<title>java.lang.Long (7 samples, 0.03%)</title><rect x="615.2" y="531.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="618.2" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.ceilingEntry (7 samples, 0.03%)</title><rect x="615.5" y="547.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="618.5" y="558.0"></text>
</g>
<g>
<title>java/util/TreeMap.exportEntry (7 samples, 0.03%)</title><rect x="615.5" y="531.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="618.5" y="542.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (7 samples, 0.03%)</title><rect x="615.5" y="515.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="618.5" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/MetaRequest.&lt;init&gt; (1,280 samples, 5.57%)</title><rect x="615.9" y="595.0" width="65.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="618.9" y="606.0">ru/mail..</text>
</g>
<g>
<title>java/lang/String.substring (377 samples, 1.64%)</title><rect x="615.9" y="579.0" width="19.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="618.9" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (377 samples, 1.64%)</title><rect x="615.9" y="563.0" width="19.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="618.9" y="574.0"></text>
</g>
<g>
<title>java.lang.String (195 samples, 0.85%)</title><rect x="615.9" y="547.0" width="10.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="618.9" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (182 samples, 0.79%)</title><rect x="625.9" y="547.0" width="9.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="628.9" y="558.0"></text>
</g>
<g>
<title>byte[] (182 samples, 0.79%)</title><rect x="625.9" y="531.0" width="9.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="628.9" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (22 samples, 0.10%)</title><rect x="635.3" y="579.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="638.3" y="590.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (13 samples, 0.06%)</title><rect x="635.3" y="563.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="638.3" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (9 samples, 0.04%)</title><rect x="635.9" y="563.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="638.9" y="574.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.04%)</title><rect x="635.9" y="547.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="638.9" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (434 samples, 1.89%)</title><rect x="636.4" y="579.0" width="22.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="639.4" y="590.0">j..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (434 samples, 1.89%)</title><rect x="636.4" y="563.0" width="22.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="639.4" y="574.0">j..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (434 samples, 1.89%)</title><rect x="636.4" y="547.0" width="22.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="639.4" y="558.0">j..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (447 samples, 1.95%)</title><rect x="658.7" y="579.0" width="23.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="661.7" y="590.0">o..</text>
</g>
<g>
<title>java/lang/String.substring (447 samples, 1.95%)</title><rect x="658.7" y="563.0" width="23.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="661.7" y="574.0">j..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (447 samples, 1.95%)</title><rect x="658.7" y="547.0" width="23.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="661.7" y="558.0">j..</text>
</g>
<g>
<title>java.lang.String (194 samples, 0.84%)</title><rect x="658.7" y="531.0" width="10.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="661.7" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (253 samples, 1.10%)</title><rect x="668.7" y="531.0" width="13.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="671.7" y="542.0"></text>
</g>
<g>
<title>byte[] (253 samples, 1.10%)</title><rect x="668.7" y="515.0" width="13.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="671.7" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (1,861 samples, 8.10%)</title><rect x="681.7" y="691.0" width="95.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="684.7" y="702.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (1,861 samples, 8.10%)</title><rect x="681.7" y="675.0" width="95.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="684.7" y="686.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (1,861 samples, 8.10%)</title><rect x="681.7" y="659.0" width="95.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="684.7" y="670.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (1,861 samples, 8.10%)</title><rect x="681.7" y="643.0" width="95.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="684.7" y="654.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (1,861 samples, 8.10%)</title><rect x="681.7" y="627.0" width="95.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="684.7" y="638.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (1,861 samples, 8.10%)</title><rect x="681.7" y="611.0" width="95.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="684.7" y="622.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (1,861 samples, 8.10%)</title><rect x="681.7" y="595.0" width="95.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="684.7" y="606.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (1,858 samples, 8.09%)</title><rect x="681.8" y="579.0" width="95.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="684.8" y="590.0">java/util/c..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService$$Lambda$140/507376197.accept (318 samples, 1.38%)</title><rect x="681.8" y="563.0" width="16.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="684.8" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.lambda$getFirstResponses$6 (318 samples, 1.38%)</title><rect x="681.8" y="547.0" width="16.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="684.8" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.add (318 samples, 1.38%)</title><rect x="681.8" y="531.0" width="16.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="684.8" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (318 samples, 1.38%)</title><rect x="681.8" y="515.0" width="16.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="684.8" y="526.0"></text>
</g>
<g>
<title>java.lang.Object[] (318 samples, 1.38%)</title><rect x="681.8" y="499.0" width="16.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="684.8" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService$$Lambda$329/2105147641.accept (1,540 samples, 6.70%)</title><rect x="698.1" y="563.0" width="79.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="701.1" y="574.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.lambda$delete$4 (1,540 samples, 6.70%)</title><rect x="698.1" y="547.0" width="79.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="701.1" y="558.0">ru/mail/p..</text>
</g>
<g>
<title>one.nio.http.Response (142 samples, 0.62%)</title><rect x="698.1" y="531.0" width="7.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="701.1" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (602 samples, 2.62%)</title><rect x="705.4" y="531.0" width="31.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="708.4" y="542.0">on..</text>
</g>
<g>
<title>byte[] (250 samples, 1.09%)</title><rect x="705.4" y="515.0" width="12.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="708.4" y="526.0"></text>
</g>
<g>
<title>java.lang.String[] (196 samples, 0.85%)</title><rect x="718.3" y="515.0" width="10.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="721.3" y="526.0"></text>
</g>
<g>
<title>java.lang.String (156 samples, 0.68%)</title><rect x="728.3" y="515.0" width="8.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="731.3" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.sendResponse (796 samples, 3.47%)</title><rect x="736.4" y="531.0" width="40.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="739.4" y="542.0">ru/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (796 samples, 3.47%)</title><rect x="736.4" y="515.0" width="40.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="739.4" y="526.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (796 samples, 3.47%)</title><rect x="736.4" y="499.0" width="40.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="739.4" y="510.0">one..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (554 samples, 2.41%)</title><rect x="736.4" y="483.0" width="28.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="739.4" y="494.0">on..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (554 samples, 2.41%)</title><rect x="736.4" y="467.0" width="28.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="739.4" y="478.0">on..</text>
</g>
<g>
<title>byte[] (550 samples, 2.39%)</title><rect x="736.4" y="451.0" width="28.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="739.4" y="462.0">by..</text>
</g>
<g>
<title>one/nio/net/Session.write (242 samples, 1.05%)</title><rect x="764.8" y="483.0" width="12.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="767.8" y="494.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (242 samples, 1.05%)</title><rect x="764.8" y="467.0" width="12.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="767.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (719 samples, 3.13%)</title><rect x="777.2" y="691.0" width="37.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="780.2" y="702.0">jdk..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (16 samples, 0.07%)</title><rect x="777.2" y="675.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="780.2" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (16 samples, 0.07%)</title><rect x="777.2" y="659.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="780.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$239/516844372.get$Lambda (9 samples, 0.04%)</title><rect x="777.2" y="643.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="780.2" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$239 (9 samples, 0.04%)</title><rect x="777.2" y="627.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="780.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$243/1835273996.get$Lambda (7 samples, 0.03%)</title><rect x="777.7" y="643.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="780.7" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$243 (7 samples, 0.03%)</title><rect x="777.7" y="627.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="780.7" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/896644936.linkToTargetMethod (12 samples, 0.05%)</title><rect x="778.1" y="675.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="781.1" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (12 samples, 0.05%)</title><rect x="778.1" y="659.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="781.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$240/135343777.get$Lambda (12 samples, 0.05%)</title><rect x="778.1" y="643.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="781.1" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$240 (12 samples, 0.05%)</title><rect x="778.1" y="627.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="781.1" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (152 samples, 0.66%)</title><rect x="778.7" y="675.0" width="7.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="781.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$241/404115466.accept (122 samples, 0.53%)</title><rect x="778.7" y="659.0" width="6.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="781.7" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (122 samples, 0.53%)</title><rect x="778.7" y="643.0" width="6.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="781.7" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (122 samples, 0.53%)</title><rect x="778.7" y="627.0" width="6.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="781.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (122 samples, 0.53%)</title><rect x="778.7" y="611.0" width="6.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="781.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (122 samples, 0.53%)</title><rect x="778.7" y="595.0" width="6.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="781.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (122 samples, 0.53%)</title><rect x="778.7" y="579.0" width="6.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="781.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (122 samples, 0.53%)</title><rect x="778.7" y="563.0" width="6.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="781.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (122 samples, 0.53%)</title><rect x="778.7" y="547.0" width="6.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="781.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (122 samples, 0.53%)</title><rect x="778.7" y="531.0" width="6.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="781.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (122 samples, 0.53%)</title><rect x="778.7" y="515.0" width="6.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="781.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$181/1894615385.run (122 samples, 0.53%)</title><rect x="778.7" y="499.0" width="6.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="781.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (122 samples, 0.53%)</title><rect x="778.7" y="483.0" width="6.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="781.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (33 samples, 0.14%)</title><rect x="778.7" y="467.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="781.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (33 samples, 0.14%)</title><rect x="778.7" y="451.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="781.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (33 samples, 0.14%)</title><rect x="778.7" y="435.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="781.7" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offer (14 samples, 0.06%)</title><rect x="778.7" y="419.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="781.7" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (14 samples, 0.06%)</title><rect x="778.7" y="403.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="781.7" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (14 samples, 0.06%)</title><rect x="778.7" y="387.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="781.7" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (14 samples, 0.06%)</title><rect x="778.7" y="371.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="781.7" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (14 samples, 0.06%)</title><rect x="778.7" y="355.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="781.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (19 samples, 0.08%)</title><rect x="779.4" y="419.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="782.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (19 samples, 0.08%)</title><rect x="779.4" y="403.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="782.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (19 samples, 0.08%)</title><rect x="779.4" y="387.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="782.4" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (19 samples, 0.08%)</title><rect x="779.4" y="371.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="782.4" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (19 samples, 0.08%)</title><rect x="779.4" y="355.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="782.4" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (19 samples, 0.08%)</title><rect x="779.4" y="339.0" width="1.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="782.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (8 samples, 0.03%)</title><rect x="780.4" y="467.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="783.4" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (8 samples, 0.03%)</title><rect x="780.4" y="451.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="783.4" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (8 samples, 0.03%)</title><rect x="780.4" y="435.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="783.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$251/1699824535.get$Lambda (8 samples, 0.03%)</title><rect x="780.4" y="419.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="783.4" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$251 (8 samples, 0.03%)</title><rect x="780.4" y="403.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="783.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (81 samples, 0.35%)</title><rect x="780.8" y="467.0" width="4.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="783.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.append (51 samples, 0.22%)</title><rect x="780.8" y="451.0" width="2.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="783.8" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (31 samples, 0.13%)</title><rect x="780.8" y="435.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="783.8" y="446.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (31 samples, 0.13%)</title><rect x="780.8" y="419.0" width="1.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="783.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.listOf (20 samples, 0.09%)</title><rect x="782.4" y="435.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="785.4" y="446.0"></text>
</g>
<g>
<title>java/util/List.of (20 samples, 0.09%)</title><rect x="782.4" y="419.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="785.4" y="430.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (20 samples, 0.09%)</title><rect x="782.4" y="403.0" width="1.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="785.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.getBuffer (30 samples, 0.13%)</title><rect x="783.4" y="451.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="786.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection$$Lambda$172/2114713671.get (30 samples, 0.13%)</title><rect x="783.4" y="435.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="786.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getBuffer (30 samples, 0.13%)</title><rect x="783.4" y="419.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="786.4" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (30 samples, 0.13%)</title><rect x="783.4" y="403.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="786.4" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (30 samples, 0.13%)</title><rect x="783.4" y="387.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="786.4" y="398.0"></text>
</g>
<g>
<title>byte[] (27 samples, 0.12%)</title><rect x="783.6" y="371.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="786.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$244/1205372074.accept (30 samples, 0.13%)</title><rect x="785.0" y="659.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="788.0" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (30 samples, 0.13%)</title><rect x="785.0" y="643.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="788.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$240/135343777.run (30 samples, 0.13%)</title><rect x="785.0" y="627.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="788.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (30 samples, 0.13%)</title><rect x="785.0" y="611.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="788.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (30 samples, 0.13%)</title><rect x="785.0" y="595.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="788.0" y="606.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (30 samples, 0.13%)</title><rect x="785.0" y="579.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="788.0" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (30 samples, 0.13%)</title><rect x="785.0" y="563.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="788.0" y="574.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (30 samples, 0.13%)</title><rect x="785.0" y="547.0" width="1.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="788.0" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (60 samples, 0.26%)</title><rect x="786.5" y="675.0" width="3.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="789.5" y="686.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (60 samples, 0.26%)</title><rect x="786.5" y="659.0" width="3.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="789.5" y="670.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (33 samples, 0.14%)</title><rect x="789.6" y="675.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="792.6" y="686.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (13 samples, 0.06%)</title><rect x="789.6" y="659.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="792.6" y="670.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (13 samples, 0.06%)</title><rect x="789.6" y="643.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="792.6" y="654.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (13 samples, 0.06%)</title><rect x="789.6" y="627.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="792.6" y="638.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (13 samples, 0.06%)</title><rect x="789.6" y="611.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="792.6" y="622.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (13 samples, 0.06%)</title><rect x="789.6" y="595.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="792.6" y="606.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (13 samples, 0.06%)</title><rect x="789.6" y="579.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="792.6" y="590.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2$1 (13 samples, 0.06%)</title><rect x="789.6" y="563.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="792.6" y="574.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps.makeRef (20 samples, 0.09%)</title><rect x="790.2" y="659.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="793.2" y="670.0"></text>
</g>
<g>
<title>java.util.stream.ForEachOps$ForEachOp$OfRef (20 samples, 0.09%)</title><rect x="790.2" y="643.0" width="1.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="793.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (122 samples, 0.53%)</title><rect x="791.3" y="675.0" width="6.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="794.3" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$188/903113097.run (56 samples, 0.24%)</title><rect x="791.3" y="659.0" width="2.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="794.3" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (56 samples, 0.24%)</title><rect x="791.3" y="643.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="794.3" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (56 samples, 0.24%)</title><rect x="791.3" y="627.0" width="2.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="794.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (56 samples, 0.24%)</title><rect x="791.3" y="611.0" width="2.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="794.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (56 samples, 0.24%)</title><rect x="791.3" y="595.0" width="2.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="794.3" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (56 samples, 0.24%)</title><rect x="791.3" y="579.0" width="2.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="794.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$181/1894615385.run (56 samples, 0.24%)</title><rect x="791.3" y="563.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="794.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (56 samples, 0.24%)</title><rect x="791.3" y="547.0" width="2.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="794.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (56 samples, 0.24%)</title><rect x="791.3" y="531.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="794.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (56 samples, 0.24%)</title><rect x="791.3" y="515.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="794.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (37 samples, 0.16%)</title><rect x="791.3" y="499.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="794.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (37 samples, 0.16%)</title><rect x="791.3" y="483.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="794.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (37 samples, 0.16%)</title><rect x="791.3" y="467.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="794.3" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/623247230.linkToTargetMethod (25 samples, 0.11%)</title><rect x="791.3" y="451.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="794.3" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/773662650.invoke (25 samples, 0.11%)</title><rect x="791.3" y="435.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="794.3" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (25 samples, 0.11%)</title><rect x="791.3" y="419.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="794.3" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (25 samples, 0.11%)</title><rect x="791.3" y="403.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="794.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (25 samples, 0.11%)</title><rect x="791.3" y="387.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="794.3" y="398.0"></text>
</g>
<g>
<title>byte[] (25 samples, 0.11%)</title><rect x="791.3" y="371.0" width="1.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="794.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (12 samples, 0.05%)</title><rect x="792.6" y="451.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="795.6" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (12 samples, 0.05%)</title><rect x="792.6" y="435.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="795.6" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (12 samples, 0.05%)</title><rect x="792.6" y="419.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="795.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$251/1699824535.get$Lambda (12 samples, 0.05%)</title><rect x="792.6" y="403.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="795.6" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$251 (12 samples, 0.05%)</title><rect x="792.6" y="387.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="795.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (19 samples, 0.08%)</title><rect x="793.2" y="499.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="796.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (19 samples, 0.08%)</title><rect x="793.2" y="483.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="796.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (19 samples, 0.08%)</title><rect x="793.2" y="467.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="796.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (19 samples, 0.08%)</title><rect x="793.2" y="451.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="796.2" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (19 samples, 0.08%)</title><rect x="793.2" y="435.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="796.2" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (19 samples, 0.08%)</title><rect x="793.2" y="419.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="796.2" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (19 samples, 0.08%)</title><rect x="793.2" y="403.0" width="0.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="796.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$192/1926392655.run (66 samples, 0.29%)</title><rect x="794.1" y="659.0" width="3.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="797.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (66 samples, 0.29%)</title><rect x="794.1" y="643.0" width="3.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="797.1" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (31 samples, 0.13%)</title><rect x="794.1" y="627.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="797.1" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (31 samples, 0.13%)</title><rect x="794.1" y="611.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="797.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$247/1271722553.get$Lambda (31 samples, 0.13%)</title><rect x="794.1" y="595.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="797.1" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$$Lambda$247 (31 samples, 0.13%)</title><rect x="794.1" y="579.0" width="1.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="797.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (35 samples, 0.15%)</title><rect x="795.7" y="627.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="798.7" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (35 samples, 0.15%)</title><rect x="795.7" y="611.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="798.7" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (35 samples, 0.15%)</title><rect x="795.7" y="595.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="798.7" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (35 samples, 0.15%)</title><rect x="795.7" y="579.0" width="1.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="798.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (142 samples, 0.62%)</title><rect x="797.5" y="675.0" width="7.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="800.5" y="686.0"></text>
</g>
<g>
<title>java/time/Instant.now (28 samples, 0.12%)</title><rect x="797.5" y="659.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="800.5" y="670.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (28 samples, 0.12%)</title><rect x="797.5" y="643.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="800.5" y="654.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (28 samples, 0.12%)</title><rect x="797.5" y="627.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="800.5" y="638.0"></text>
</g>
<g>
<title>java/time/Instant.create (28 samples, 0.12%)</title><rect x="797.5" y="611.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="800.5" y="622.0"></text>
</g>
<g>
<title>java.time.Instant (28 samples, 0.12%)</title><rect x="797.5" y="595.0" width="1.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="800.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (114 samples, 0.50%)</title><rect x="799.0" y="659.0" width="5.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="802.0" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (19 samples, 0.08%)</title><rect x="799.0" y="643.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="802.0" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (19 samples, 0.08%)</title><rect x="799.0" y="627.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="802.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$$Lambda$315/928562525.get$Lambda (19 samples, 0.08%)</title><rect x="799.0" y="611.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="802.0" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$$Lambda$315 (19 samples, 0.08%)</title><rect x="799.0" y="595.0" width="1.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="802.0" y="606.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (36 samples, 0.16%)</title><rect x="800.0" y="643.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="803.0" y="654.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (36 samples, 0.16%)</title><rect x="800.0" y="627.0" width="1.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="803.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.nextExpiryDeadline (15 samples, 0.07%)</title><rect x="801.8" y="643.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="804.8" y="654.0"></text>
</g>
<g>
<title>java/util/Optional.of (15 samples, 0.07%)</title><rect x="801.8" y="627.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="804.8" y="638.0"></text>
</g>
<g>
<title>java.util.Optional (15 samples, 0.07%)</title><rect x="801.8" y="611.0" width="0.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="804.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (44 samples, 0.19%)</title><rect x="802.6" y="643.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="805.6" y="654.0"></text>
</g>
<g>
<title>java.util.ArrayList (13 samples, 0.06%)</title><rect x="802.6" y="627.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="805.6" y="638.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (31 samples, 0.13%)</title><rect x="803.2" y="627.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="806.2" y="638.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (31 samples, 0.13%)</title><rect x="803.2" y="611.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="806.2" y="622.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (31 samples, 0.13%)</title><rect x="803.2" y="595.0" width="1.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="806.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.events (121 samples, 0.53%)</title><rect x="804.8" y="675.0" width="6.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="807.8" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (15 samples, 0.07%)</title><rect x="804.8" y="659.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="807.8" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (15 samples, 0.07%)</title><rect x="804.8" y="643.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="807.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment$$Lambda$238/1066786881.get$Lambda (15 samples, 0.07%)</title><rect x="804.8" y="627.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="807.8" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorAttachment$$Lambda$238 (15 samples, 0.07%)</title><rect x="804.8" y="611.0" width="0.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="807.8" y="622.0"></text>
</g>
<g>
<title>java/util/Collection.stream (66 samples, 0.29%)</title><rect x="805.6" y="659.0" width="3.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="808.6" y="670.0"></text>
</g>
<g>
<title>java/util/HashSet.spliterator (24 samples, 0.10%)</title><rect x="805.6" y="643.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="808.6" y="654.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySpliterator (24 samples, 0.10%)</title><rect x="805.6" y="627.0" width="1.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="808.6" y="638.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (42 samples, 0.18%)</title><rect x="806.8" y="643.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="809.8" y="654.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (42 samples, 0.18%)</title><rect x="806.8" y="627.0" width="2.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="809.8" y="638.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (40 samples, 0.17%)</title><rect x="809.0" y="659.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="812.0" y="670.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (40 samples, 0.17%)</title><rect x="809.0" y="643.0" width="2.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="812.0" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (38 samples, 0.17%)</title><rect x="811.1" y="675.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="814.1" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (38 samples, 0.17%)</title><rect x="811.1" y="659.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="814.1" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (38 samples, 0.17%)</title><rect x="811.1" y="643.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="814.1" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (38 samples, 0.17%)</title><rect x="811.1" y="627.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="814.1" y="638.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (17 samples, 0.07%)</title><rect x="811.1" y="611.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="814.1" y="622.0"></text>
</g>
<g>
<title>java.lang.Integer (17 samples, 0.07%)</title><rect x="811.1" y="595.0" width="0.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="814.1" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (21 samples, 0.09%)</title><rect x="811.9" y="611.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="814.9" y="622.0"></text>
</g>
<g>
<title>java/util/HashSet.add (21 samples, 0.09%)</title><rect x="811.9" y="595.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="814.9" y="606.0"></text>
</g>
<g>
<title>java/util/HashMap.put (21 samples, 0.09%)</title><rect x="811.9" y="579.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="814.9" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (21 samples, 0.09%)</title><rect x="811.9" y="563.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="814.9" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (21 samples, 0.09%)</title><rect x="811.9" y="547.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="814.9" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (21 samples, 0.09%)</title><rect x="811.9" y="531.0" width="1.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="814.9" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (16 samples, 0.07%)</title><rect x="813.0" y="675.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="816.0" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (16 samples, 0.07%)</title><rect x="813.0" y="659.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="816.0" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (16 samples, 0.07%)</title><rect x="813.0" y="643.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="816.0" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (16 samples, 0.07%)</title><rect x="813.0" y="627.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="816.0" y="638.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (13 samples, 0.06%)</title><rect x="813.0" y="611.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="816.0" y="622.0"></text>
</g>
<g>
<title>java.lang.Integer (13 samples, 0.06%)</title><rect x="813.0" y="595.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="816.0" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (7 samples, 0.03%)</title><rect x="813.8" y="675.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="816.8" y="686.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (7 samples, 0.03%)</title><rect x="813.8" y="659.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="816.8" y="670.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (7 samples, 0.03%)</title><rect x="813.8" y="643.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="816.8" y="654.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (7 samples, 0.03%)</title><rect x="813.8" y="627.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="816.8" y="638.0"></text>
</g>
<g>
<title>one/nio/server/AcceptorThread.run (131 samples, 0.57%)</title><rect x="814.2" y="691.0" width="6.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="817.2" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.createSession (131 samples, 0.57%)</title><rect x="814.2" y="675.0" width="6.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="817.2" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.createSession (131 samples, 0.57%)</title><rect x="814.2" y="659.0" width="6.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="817.2" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/StorageSession.&lt;init&gt; (129 samples, 0.56%)</title><rect x="814.3" y="643.0" width="6.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="817.3" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.&lt;init&gt; (129 samples, 0.56%)</title><rect x="814.3" y="627.0" width="6.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="817.3" y="638.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.04%)</title><rect x="814.3" y="611.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="817.3" y="622.0"></text>
</g>
<g>
<title>byte[] (120 samples, 0.52%)</title><rect x="814.7" y="611.0" width="6.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="817.7" y="622.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (7,185 samples, 31.28%)</title><rect x="820.9" y="691.0" width="369.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="823.9" y="702.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (104 samples, 0.45%)</title><rect x="820.9" y="675.0" width="5.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="823.9" y="686.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (104 samples, 0.45%)</title><rect x="820.9" y="659.0" width="5.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="823.9" y="670.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (7,081 samples, 30.83%)</title><rect x="826.3" y="675.0" width="363.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="829.3" y="686.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (7,081 samples, 30.83%)</title><rect x="826.3" y="659.0" width="363.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="829.3" y="670.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (7,078 samples, 30.81%)</title><rect x="826.3" y="643.0" width="363.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="829.3" y="654.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (3,427 samples, 14.92%)</title><rect x="826.3" y="627.0" width="176.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="829.3" y="638.0">one/nio/http/HttpSessio..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (3,427 samples, 14.92%)</title><rect x="826.3" y="611.0" width="176.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="829.3" y="622.0">one/nio/http/HttpServer..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (3,212 samples, 13.98%)</title><rect x="826.3" y="595.0" width="165.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="829.3" y="606.0">RequestHandler1_entit..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (356 samples, 1.55%)</title><rect x="826.3" y="579.0" width="18.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="829.3" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (356 samples, 1.55%)</title><rect x="826.3" y="563.0" width="18.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="829.3" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (356 samples, 1.55%)</title><rect x="826.3" y="547.0" width="18.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="829.3" y="558.0"></text>
</g>
<g>
<title>java.lang.String (164 samples, 0.71%)</title><rect x="826.3" y="531.0" width="8.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="829.3" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (192 samples, 0.84%)</title><rect x="834.7" y="531.0" width="9.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="837.7" y="542.0"></text>
</g>
<g>
<title>byte[] (192 samples, 0.84%)</title><rect x="834.7" y="515.0" width="9.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="837.7" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.entity (2,856 samples, 12.43%)</title><rect x="844.5" y="579.0" width="146.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="847.5" y="590.0">ru/mail/polis/serv..</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1265280059.linkToTargetMethod (98 samples, 0.43%)</title><rect x="844.5" y="563.0" width="5.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="847.5" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1440359064.invokeStatic (98 samples, 0.43%)</title><rect x="844.5" y="547.0" width="5.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="847.5" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$328/1195073115.get$Lambda (98 samples, 0.43%)</title><rect x="844.5" y="531.0" width="5.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="847.5" y="542.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$$Lambda$328 (98 samples, 0.43%)</title><rect x="844.5" y="515.0" width="5.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="847.5" y="526.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (105 samples, 0.46%)</title><rect x="849.6" y="563.0" width="5.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="852.6" y="574.0"></text>
</g>
<g>
<title>java/lang/String.substring (105 samples, 0.46%)</title><rect x="849.6" y="547.0" width="5.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="852.6" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (105 samples, 0.46%)</title><rect x="849.6" y="531.0" width="5.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="852.6" y="542.0"></text>
</g>
<g>
<title>java.lang.String (76 samples, 0.33%)</title><rect x="849.6" y="515.0" width="3.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="852.6" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (29 samples, 0.13%)</title><rect x="853.5" y="515.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="856.5" y="526.0"></text>
</g>
<g>
<title>byte[] (29 samples, 0.13%)</title><rect x="853.5" y="499.0" width="1.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="856.5" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.executeAsync (120 samples, 0.52%)</title><rect x="855.0" y="563.0" width="6.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="858.0" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (42 samples, 0.18%)</title><rect x="855.0" y="547.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="858.0" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (42 samples, 0.18%)</title><rect x="855.0" y="531.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="858.0" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$107/2098846329.get$Lambda (42 samples, 0.18%)</title><rect x="855.0" y="515.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="858.0" y="526.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$$Lambda$107 (42 samples, 0.18%)</title><rect x="855.0" y="499.0" width="2.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="858.0" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (78 samples, 0.34%)</title><rect x="857.1" y="547.0" width="4.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="860.1" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (78 samples, 0.34%)</title><rect x="857.1" y="531.0" width="4.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="860.1" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (76 samples, 0.33%)</title><rect x="857.1" y="515.0" width="3.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="860.1" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/ConsistentHashImpl.all (1,505 samples, 6.55%)</title><rect x="861.1" y="563.0" width="77.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="864.1" y="574.0">ru/mail/p..</text>
</g>
<g>
<title>java/util/Set.copyOf (1,505 samples, 6.55%)</title><rect x="861.1" y="547.0" width="77.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="864.1" y="558.0">java/util..</text>
</g>
<g>
<title>java.util.HashSet (84 samples, 0.37%)</title><rect x="861.1" y="531.0" width="4.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="864.1" y="542.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (281 samples, 1.22%)</title><rect x="865.4" y="531.0" width="14.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="868.4" y="542.0"></text>
</g>
<g>
<title>java.lang.Object[] (107 samples, 0.47%)</title><rect x="865.4" y="515.0" width="5.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="868.4" y="526.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (174 samples, 0.76%)</title><rect x="870.9" y="515.0" width="9.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="873.9" y="526.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (123 samples, 0.54%)</title><rect x="870.9" y="499.0" width="6.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="873.9" y="510.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (123 samples, 0.54%)</title><rect x="870.9" y="483.0" width="6.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="873.9" y="494.0"></text>
</g>
<g>
<title>java/util/HashMap.keySet (51 samples, 0.22%)</title><rect x="877.3" y="499.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="880.3" y="510.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySet (51 samples, 0.22%)</title><rect x="877.3" y="483.0" width="2.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="880.3" y="494.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (920 samples, 4.01%)</title><rect x="879.9" y="531.0" width="47.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="882.9" y="542.0">java..</text>
</g>
<g>
<title>java.util.HashMap (145 samples, 0.63%)</title><rect x="879.9" y="515.0" width="7.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="882.9" y="526.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (775 samples, 3.37%)</title><rect x="887.3" y="515.0" width="39.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="890.3" y="526.0">jav..</text>
</g>
<g>
<title>java/util/HashSet.add (626 samples, 2.73%)</title><rect x="887.3" y="499.0" width="32.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="890.3" y="510.0">ja..</text>
</g>
<g>
<title>java/util/HashMap.put (626 samples, 2.73%)</title><rect x="887.3" y="483.0" width="32.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="890.3" y="494.0">ja..</text>
</g>
<g>
<title>java/util/HashMap.putVal (626 samples, 2.73%)</title><rect x="887.3" y="467.0" width="32.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="890.3" y="478.0">ja..</text>
</g>
<g>
<title>java/util/HashMap.newNode (344 samples, 1.50%)</title><rect x="887.3" y="451.0" width="17.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="890.3" y="462.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (344 samples, 1.50%)</title><rect x="887.3" y="435.0" width="17.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="890.3" y="446.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (282 samples, 1.23%)</title><rect x="905.0" y="451.0" width="14.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="908.0" y="462.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (275 samples, 1.20%)</title><rect x="905.0" y="435.0" width="14.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="908.0" y="446.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (7 samples, 0.03%)</title><rect x="919.1" y="435.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="922.1" y="446.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (149 samples, 0.65%)</title><rect x="919.5" y="499.0" width="7.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="922.5" y="510.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (149 samples, 0.65%)</title><rect x="919.5" y="483.0" width="7.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="922.5" y="494.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (149 samples, 0.65%)</title><rect x="919.5" y="467.0" width="7.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="922.5" y="478.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeyIterator (149 samples, 0.65%)</title><rect x="919.5" y="451.0" width="7.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="922.5" y="462.0"></text>
</g>
<g>
<title>java/util/Set.of (220 samples, 0.96%)</title><rect x="927.1" y="531.0" width="11.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="930.1" y="542.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$SetN (83 samples, 0.36%)</title><rect x="927.1" y="515.0" width="4.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="930.1" y="526.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$SetN.&lt;init&gt; (137 samples, 0.60%)</title><rect x="931.4" y="515.0" width="7.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="934.4" y="526.0"></text>
</g>
<g>
<title>java.lang.Object[] (137 samples, 0.60%)</title><rect x="931.4" y="499.0" width="7.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="934.4" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/RF.from (1,028 samples, 4.48%)</title><rect x="938.4" y="563.0" width="52.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="941.4" y="574.0">ru/ma..</text>
</g>
<g>
<title>com/google/common/base/Splitter.on (122 samples, 0.53%)</title><rect x="938.4" y="547.0" width="6.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="941.4" y="558.0"></text>
</g>
<g>
<title>com/google/common/base/CharMatcher.is (46 samples, 0.20%)</title><rect x="938.4" y="531.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="941.4" y="542.0"></text>
</g>
<g>
<title>com.google.common.base.CharMatcher$Is (46 samples, 0.20%)</title><rect x="938.4" y="515.0" width="2.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="941.4" y="526.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.on (76 samples, 0.33%)</title><rect x="940.8" y="531.0" width="3.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="943.8" y="542.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter$1 (76 samples, 0.33%)</title><rect x="940.8" y="515.0" width="3.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="943.8" y="526.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splitToList (844 samples, 3.67%)</title><rect x="944.7" y="547.0" width="43.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="947.7" y="558.0">com/..</text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.hasNext (376 samples, 1.64%)</title><rect x="944.7" y="531.0" width="19.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="947.7" y="542.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.tryToComputeNext (376 samples, 1.64%)</title><rect x="944.7" y="515.0" width="19.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="947.7" y="526.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (376 samples, 1.64%)</title><rect x="944.7" y="499.0" width="19.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="947.7" y="510.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (376 samples, 1.64%)</title><rect x="944.7" y="483.0" width="19.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="947.7" y="494.0"></text>
</g>
<g>
<title>java/lang/String.subSequence (376 samples, 1.64%)</title><rect x="944.7" y="467.0" width="19.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="947.7" y="478.0"></text>
</g>
<g>
<title>java/lang/String.substring (376 samples, 1.64%)</title><rect x="944.7" y="451.0" width="19.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="947.7" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (376 samples, 1.64%)</title><rect x="944.7" y="435.0" width="19.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="947.7" y="446.0"></text>
</g>
<g>
<title>java.lang.String (186 samples, 0.81%)</title><rect x="944.7" y="419.0" width="9.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="947.7" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (190 samples, 0.83%)</title><rect x="954.3" y="419.0" width="9.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="957.3" y="430.0"></text>
</g>
<g>
<title>byte[] (190 samples, 0.83%)</title><rect x="954.3" y="403.0" width="9.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="957.3" y="414.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splittingIterator (184 samples, 0.80%)</title><rect x="964.0" y="531.0" width="9.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="967.0" y="542.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (184 samples, 0.80%)</title><rect x="964.0" y="515.0" width="9.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="967.0" y="526.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (184 samples, 0.80%)</title><rect x="964.0" y="499.0" width="9.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="967.0" y="510.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter$1$1 (184 samples, 0.80%)</title><rect x="964.0" y="483.0" width="9.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="967.0" y="494.0"></text>
</g>
<g>
<title>java.util.ArrayList (90 samples, 0.39%)</title><rect x="973.5" y="531.0" width="4.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="976.5" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (194 samples, 0.84%)</title><rect x="978.1" y="531.0" width="10.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="981.1" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (194 samples, 0.84%)</title><rect x="978.1" y="515.0" width="10.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="981.1" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (194 samples, 0.84%)</title><rect x="978.1" y="499.0" width="10.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="981.1" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (194 samples, 0.84%)</title><rect x="978.1" y="483.0" width="10.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="981.1" y="494.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (194 samples, 0.84%)</title><rect x="978.1" y="467.0" width="10.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="981.1" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (194 samples, 0.84%)</title><rect x="978.1" y="451.0" width="10.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="981.1" y="462.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.topology.RF (62 samples, 0.27%)</title><rect x="988.1" y="547.0" width="3.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="991.1" y="558.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (215 samples, 0.94%)</title><rect x="991.3" y="595.0" width="11.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="994.3" y="606.0"></text>
</g>
<g>
<title>java/lang/String.substring (215 samples, 0.94%)</title><rect x="991.3" y="579.0" width="11.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="994.3" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (215 samples, 0.94%)</title><rect x="991.3" y="563.0" width="11.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="994.3" y="574.0"></text>
</g>
<g>
<title>java.lang.String (114 samples, 0.50%)</title><rect x="991.3" y="547.0" width="5.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="994.3" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (101 samples, 0.44%)</title><rect x="997.1" y="547.0" width="5.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1000.1" y="558.0"></text>
</g>
<g>
<title>byte[] (101 samples, 0.44%)</title><rect x="997.1" y="531.0" width="5.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1000.1" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1,242 samples, 5.41%)</title><rect x="1002.3" y="627.0" width="63.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1005.3" y="638.0">one/nio..</text>
</g>
<g>
<title>one.nio.http.Request (173 samples, 0.75%)</title><rect x="1002.3" y="611.0" width="8.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1005.3" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (302 samples, 1.31%)</title><rect x="1011.2" y="611.0" width="15.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1014.2" y="622.0"></text>
</g>
<g>
<title>java.lang.String[] (296 samples, 1.29%)</title><rect x="1011.2" y="595.0" width="15.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1014.2" y="606.0"></text>
</g>
<g>
<title>java.lang.String[] (6 samples, 0.03%)</title><rect x="1026.4" y="595.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1029.4" y="606.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (767 samples, 3.34%)</title><rect x="1026.7" y="611.0" width="39.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1029.7" y="622.0">one..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (767 samples, 3.34%)</title><rect x="1026.7" y="595.0" width="39.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1029.7" y="606.0">one..</text>
</g>
<g>
<title>char[] (426 samples, 1.85%)</title><rect x="1026.7" y="579.0" width="21.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1029.7" y="590.0">c..</text>
</g>
<g>
<title>char[] (8 samples, 0.03%)</title><rect x="1048.6" y="579.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1051.6" y="590.0"></text>
</g>
<g>
<title>java.lang.String (97 samples, 0.42%)</title><rect x="1049.0" y="579.0" width="5.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1052.0" y="590.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (236 samples, 1.03%)</title><rect x="1054.0" y="579.0" width="12.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1057.0" y="590.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (236 samples, 1.03%)</title><rect x="1054.0" y="563.0" width="12.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1057.0" y="574.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (236 samples, 1.03%)</title><rect x="1054.0" y="547.0" width="12.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1057.0" y="558.0"></text>
</g>
<g>
<title>byte[] (235 samples, 1.02%)</title><rect x="1054.0" y="531.0" width="12.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1057.0" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (49 samples, 0.21%)</title><rect x="1066.1" y="627.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1069.1" y="638.0"></text>
</g>
<g>
<title>byte[] (49 samples, 0.21%)</title><rect x="1066.1" y="611.0" width="2.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1069.1" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (77 samples, 0.34%)</title><rect x="1068.6" y="627.0" width="4.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1071.6" y="638.0"></text>
</g>
<g>
<title>java/lang/String.substring (77 samples, 0.34%)</title><rect x="1068.6" y="611.0" width="4.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1071.6" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (77 samples, 0.34%)</title><rect x="1068.6" y="595.0" width="4.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1071.6" y="606.0"></text>
</g>
<g>
<title>java.lang.String (30 samples, 0.13%)</title><rect x="1068.6" y="579.0" width="1.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1071.6" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (47 samples, 0.20%)</title><rect x="1070.2" y="579.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1073.2" y="590.0"></text>
</g>
<g>
<title>byte[] (47 samples, 0.20%)</title><rect x="1070.2" y="563.0" width="2.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1073.2" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,283 samples, 9.94%)</title><rect x="1072.6" y="627.0" width="117.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1075.6" y="638.0">one/nio/util/U..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,283 samples, 9.94%)</title><rect x="1072.6" y="611.0" width="117.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1075.6" y="622.0">one/nio/util/U..</text>
</g>
<g>
<title>char[] (1,100 samples, 4.79%)</title><rect x="1072.6" y="595.0" width="56.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1075.6" y="606.0">char[]</text>
</g>
<g>
<title>char[] (24 samples, 0.10%)</title><rect x="1129.1" y="595.0" width="1.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1132.1" y="606.0"></text>
</g>
<g>
<title>java.lang.String (429 samples, 1.87%)</title><rect x="1130.3" y="595.0" width="22.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1133.3" y="606.0">j..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (730 samples, 3.18%)</title><rect x="1152.3" y="595.0" width="37.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1155.3" y="606.0">jav..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (730 samples, 3.18%)</title><rect x="1152.3" y="579.0" width="37.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1155.3" y="590.0">jav..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (730 samples, 3.18%)</title><rect x="1152.3" y="563.0" width="37.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1155.3" y="574.0">jav..</text>
</g>
<g>
<title>byte[] (725 samples, 3.16%)</title><rect x="1152.3" y="547.0" width="37.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1155.3" y="558.0">byt..</text>
</g>
<g>
<title>byte[] (5 samples, 0.02%)</title><rect x="1189.6" y="547.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1192.6" y="558.0"></text>
</g>
</g>
</svg>
