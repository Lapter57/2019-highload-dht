<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="870" onload="init(evt)" viewBox="0 0 1200 870" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="853"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="853"> </text>
<g id="frames">
<g>
<title>all (54,977 samples, 100.00%)</title><rect x="10.0" y="819.0" width="1180.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="13.0" y="830.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (28,048 samples, 51.02%)</title><rect x="10.0" y="803.0" width="602.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.0" y="814.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (28,048 samples, 51.02%)</title><rect x="10.0" y="787.0" width="602.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="13.0" y="798.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (28,048 samples, 51.02%)</title><rect x="10.0" y="771.0" width="602.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="13.0" y="782.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (4,707 samples, 8.56%)</title><rect x="10.0" y="755.0" width="101.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="13.0" y="766.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (4,707 samples, 8.56%)</title><rect x="10.0" y="739.0" width="101.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="13.0" y="750.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (4,707 samples, 8.56%)</title><rect x="10.0" y="723.0" width="101.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.0" y="734.0">java/util/co..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (19 samples, 0.03%)</title><rect x="10.0" y="707.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="13.0" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$133/1711595431.apply (4,688 samples, 8.53%)</title><rect x="10.4" y="707.0" width="100.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="13.4" y="718.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (4,688 samples, 8.53%)</title><rect x="10.4" y="691.0" width="100.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.4" y="702.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (4,688 samples, 8.53%)</title><rect x="10.4" y="675.0" width="100.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.4" y="686.0">jdk/internal..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (36 samples, 0.07%)</title><rect x="10.4" y="659.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.4" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (36 samples, 0.07%)</title><rect x="10.4" y="643.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$192/1158665635.get$Lambda (25 samples, 0.05%)</title><rect x="10.4" y="627.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.4" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$192 (25 samples, 0.05%)</title><rect x="10.4" y="611.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="13.4" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (48 samples, 0.09%)</title><rect x="11.2" y="659.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="14.2" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (48 samples, 0.09%)</title><rect x="11.2" y="643.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="14.2" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (23 samples, 0.04%)</title><rect x="11.2" y="627.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="14.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (25 samples, 0.05%)</title><rect x="11.7" y="627.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="14.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (25 samples, 0.05%)</title><rect x="11.7" y="611.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="14.7" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (25 samples, 0.05%)</title><rect x="11.7" y="595.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="14.7" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (103 samples, 0.19%)</title><rect x="12.2" y="659.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="15.2" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (103 samples, 0.19%)</title><rect x="12.2" y="643.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="15.2" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (59 samples, 0.11%)</title><rect x="12.2" y="627.0" width="1.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="15.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (44 samples, 0.08%)</title><rect x="13.5" y="627.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="16.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (44 samples, 0.08%)</title><rect x="13.5" y="611.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="16.5" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (44 samples, 0.08%)</title><rect x="13.5" y="595.0" width="0.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="16.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (4,501 samples, 8.19%)</title><rect x="14.4" y="659.0" width="96.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="17.4" y="670.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (4,501 samples, 8.19%)</title><rect x="14.4" y="643.0" width="96.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="17.4" y="654.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (4,501 samples, 8.19%)</title><rect x="14.4" y="627.0" width="96.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="17.4" y="638.0">jdk/interna..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (60 samples, 0.11%)</title><rect x="14.4" y="611.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="17.4" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (60 samples, 0.11%)</title><rect x="14.4" y="595.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="17.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$137/87340014.get$Lambda (29 samples, 0.05%)</title><rect x="14.4" y="579.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="17.4" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$137 (29 samples, 0.05%)</title><rect x="14.4" y="563.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="17.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$139/1035318298.get$Lambda (12 samples, 0.02%)</title><rect x="15.0" y="579.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="18.0" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$139 (12 samples, 0.02%)</title><rect x="15.0" y="563.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="18.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$174/1093022843.get$Lambda (19 samples, 0.03%)</title><rect x="15.3" y="579.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="18.3" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$174 (19 samples, 0.03%)</title><rect x="15.3" y="563.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="18.3" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (2,810 samples, 5.11%)</title><rect x="15.7" y="611.0" width="60.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="18.7" y="622.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (2,810 samples, 5.11%)</title><rect x="15.7" y="595.0" width="60.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="18.7" y="606.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (2,785 samples, 5.07%)</title><rect x="15.7" y="579.0" width="59.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="18.7" y="590.0">java/u..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$174/1093022843.apply (2,785 samples, 5.07%)</title><rect x="15.7" y="563.0" width="59.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="18.7" y="574.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (2,785 samples, 5.07%)</title><rect x="15.7" y="547.0" width="59.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="18.7" y="558.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (2,785 samples, 5.07%)</title><rect x="15.7" y="531.0" width="59.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="18.7" y="542.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$139/1035318298.apply (2,785 samples, 5.07%)</title><rect x="15.7" y="515.0" width="59.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="18.7" y="526.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (2,785 samples, 5.07%)</title><rect x="15.7" y="499.0" width="59.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="18.7" y="510.0">jdk/in..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (22 samples, 0.04%)</title><rect x="15.7" y="483.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="18.7" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (22 samples, 0.04%)</title><rect x="15.7" y="467.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="18.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$191/2106603000.get$Lambda (22 samples, 0.04%)</title><rect x="15.7" y="451.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="18.7" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$191 (22 samples, 0.04%)</title><rect x="15.7" y="435.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="18.7" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (50 samples, 0.09%)</title><rect x="16.2" y="483.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="19.2" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (50 samples, 0.09%)</title><rect x="16.2" y="467.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="19.2" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (30 samples, 0.05%)</title><rect x="16.2" y="451.0" width="0.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="19.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (16 samples, 0.03%)</title><rect x="16.9" y="451.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="19.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (16 samples, 0.03%)</title><rect x="16.9" y="435.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="19.9" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (16 samples, 0.03%)</title><rect x="16.9" y="419.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="19.9" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (51 samples, 0.09%)</title><rect x="17.3" y="483.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="20.3" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (51 samples, 0.09%)</title><rect x="17.3" y="467.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="20.3" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (27 samples, 0.05%)</title><rect x="17.3" y="451.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="20.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (24 samples, 0.04%)</title><rect x="17.8" y="451.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="20.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (24 samples, 0.04%)</title><rect x="17.8" y="435.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="20.8" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (24 samples, 0.04%)</title><rect x="17.8" y="419.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="20.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (2,662 samples, 4.84%)</title><rect x="18.3" y="483.0" width="57.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="21.3" y="494.0">jdk/in..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (21 samples, 0.04%)</title><rect x="18.3" y="467.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="21.3" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (21 samples, 0.04%)</title><rect x="18.3" y="451.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="21.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$190/1202798011.get$Lambda (14 samples, 0.03%)</title><rect x="18.5" y="435.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="21.5" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$190 (14 samples, 0.03%)</title><rect x="18.5" y="419.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="21.5" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2,282 samples, 4.15%)</title><rect x="18.8" y="467.0" width="49.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="21.8" y="478.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2,282 samples, 4.15%)</title><rect x="18.8" y="451.0" width="49.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="21.8" y="462.0">java..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (23 samples, 0.04%)</title><rect x="18.8" y="435.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="21.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$189/1784125001.apply (2,216 samples, 4.03%)</title><rect x="19.3" y="435.0" width="47.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="22.3" y="446.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (2,216 samples, 4.03%)</title><rect x="19.3" y="419.0" width="47.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="22.3" y="430.0">jdk/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (20 samples, 0.04%)</title><rect x="19.3" y="403.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="22.3" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (20 samples, 0.04%)</title><rect x="19.3" y="387.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="22.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$202/2002698018.get$Lambda (20 samples, 0.04%)</title><rect x="19.3" y="371.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="22.3" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$202 (20 samples, 0.04%)</title><rect x="19.3" y="355.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="22.3" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (57 samples, 0.10%)</title><rect x="19.7" y="403.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="22.7" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (57 samples, 0.10%)</title><rect x="19.7" y="387.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="22.7" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (28 samples, 0.05%)</title><rect x="19.7" y="371.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="22.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (29 samples, 0.05%)</title><rect x="20.3" y="371.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="23.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (29 samples, 0.05%)</title><rect x="20.3" y="355.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="23.3" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (29 samples, 0.05%)</title><rect x="20.3" y="339.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="23.3" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (20 samples, 0.04%)</title><rect x="20.9" y="403.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="23.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (31 samples, 0.06%)</title><rect x="21.4" y="403.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="24.4" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (15 samples, 0.03%)</title><rect x="21.4" y="387.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="24.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (16 samples, 0.03%)</title><rect x="21.7" y="387.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="24.7" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (16 samples, 0.03%)</title><rect x="21.7" y="371.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="24.7" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (16 samples, 0.03%)</title><rect x="21.7" y="355.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="24.7" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (16 samples, 0.03%)</title><rect x="21.7" y="339.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="24.7" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (16 samples, 0.03%)</title><rect x="21.7" y="323.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="24.7" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (16 samples, 0.03%)</title><rect x="21.7" y="307.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="24.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (57 samples, 0.10%)</title><rect x="22.0" y="403.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="25.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (57 samples, 0.10%)</title><rect x="22.0" y="387.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="25.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (25 samples, 0.05%)</title><rect x="22.0" y="371.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="25.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (25 samples, 0.05%)</title><rect x="22.0" y="355.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="25.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (25 samples, 0.05%)</title><rect x="22.0" y="339.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="25.0" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (25 samples, 0.05%)</title><rect x="22.0" y="323.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="25.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (32 samples, 0.06%)</title><rect x="22.6" y="371.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="25.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (32 samples, 0.06%)</title><rect x="22.6" y="355.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="25.6" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (20 samples, 0.04%)</title><rect x="22.6" y="339.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="25.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (12 samples, 0.02%)</title><rect x="23.0" y="339.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="26.0" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (12 samples, 0.02%)</title><rect x="23.0" y="323.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="26.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (2,031 samples, 3.69%)</title><rect x="23.3" y="403.0" width="43.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="26.3" y="414.0">jdk/..</text>
</g>
<g>
<title>java.lang.StringBuilder (20 samples, 0.04%)</title><rect x="23.3" y="387.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="26.3" y="398.0"></text>
</g>
<g>
<title>java/lang/Long.toString (36 samples, 0.07%)</title><rect x="23.7" y="387.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="26.7" y="398.0"></text>
</g>
<g>
<title>byte[] (24 samples, 0.04%)</title><rect x="23.7" y="371.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="26.7" y="382.0"></text>
</g>
<g>
<title>java.lang.String (12 samples, 0.02%)</title><rect x="24.2" y="371.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="27.2" y="382.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (189 samples, 0.34%)</title><rect x="24.5" y="387.0" width="4.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="27.5" y="398.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (189 samples, 0.34%)</title><rect x="24.5" y="371.0" width="4.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="27.5" y="382.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (189 samples, 0.34%)</title><rect x="24.5" y="355.0" width="4.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="27.5" y="366.0"></text>
</g>
<g>
<title>byte[] (189 samples, 0.34%)</title><rect x="24.5" y="339.0" width="4.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="27.5" y="350.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (61 samples, 0.11%)</title><rect x="28.5" y="387.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="31.5" y="398.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (61 samples, 0.11%)</title><rect x="28.5" y="371.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="31.5" y="382.0"></text>
</g>
<g>
<title>byte[] (61 samples, 0.11%)</title><rect x="28.5" y="355.0" width="1.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="31.5" y="366.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (193 samples, 0.35%)</title><rect x="29.8" y="387.0" width="4.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="32.8" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (193 samples, 0.35%)</title><rect x="29.8" y="371.0" width="4.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="32.8" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (193 samples, 0.35%)</title><rect x="29.8" y="355.0" width="4.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="32.8" y="366.0"></text>
</g>
<g>
<title>byte[] (193 samples, 0.35%)</title><rect x="29.8" y="339.0" width="4.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="32.8" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (36 samples, 0.07%)</title><rect x="34.0" y="387.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="37.0" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (36 samples, 0.07%)</title><rect x="34.0" y="371.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="37.0" y="382.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (36 samples, 0.07%)</title><rect x="34.0" y="355.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="37.0" y="366.0"></text>
</g>
<g>
<title>java/util/List.of (14 samples, 0.03%)</title><rect x="34.7" y="387.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="37.7" y="398.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (14 samples, 0.03%)</title><rect x="34.7" y="371.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="37.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (1,237 samples, 2.25%)</title><rect x="35.0" y="387.0" width="26.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="38.0" y="398.0">j..</text>
</g>
<g>
<title>java/util/function/BiPredicate.and (17 samples, 0.03%)</title><rect x="35.0" y="371.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="38.0" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (17 samples, 0.03%)</title><rect x="35.0" y="355.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="38.0" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (17 samples, 0.03%)</title><rect x="35.0" y="339.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="38.0" y="350.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$203/1479694379.get$Lambda (17 samples, 0.03%)</title><rect x="35.0" y="323.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="38.0" y="334.0"></text>
</g>
<g>
<title>java.util.function.BiPredicate$$Lambda$203 (17 samples, 0.03%)</title><rect x="35.0" y="307.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="38.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (586 samples, 1.07%)</title><rect x="35.4" y="371.0" width="12.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="38.4" y="382.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (281 samples, 0.51%)</title><rect x="35.4" y="355.0" width="6.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="38.4" y="366.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (281 samples, 0.51%)</title><rect x="35.4" y="339.0" width="6.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="38.4" y="350.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (281 samples, 0.51%)</title><rect x="35.4" y="323.0" width="6.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="38.4" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (281 samples, 0.51%)</title><rect x="35.4" y="307.0" width="6.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="38.4" y="318.0"></text>
</g>
<g>
<title>byte[] (281 samples, 0.51%)</title><rect x="35.4" y="291.0" width="6.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="38.4" y="302.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (50 samples, 0.09%)</title><rect x="41.4" y="355.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="44.4" y="366.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (50 samples, 0.09%)</title><rect x="41.4" y="339.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="44.4" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (50 samples, 0.09%)</title><rect x="41.4" y="323.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="44.4" y="334.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntryIterator (50 samples, 0.09%)</title><rect x="41.4" y="307.0" width="1.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="44.4" y="318.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.entrySet (35 samples, 0.06%)</title><rect x="42.5" y="355.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="45.5" y="366.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet (14 samples, 0.03%)</title><rect x="42.5" y="339.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="45.5" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.entrySet (21 samples, 0.04%)</title><rect x="42.8" y="339.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="45.8" y="350.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntrySet (21 samples, 0.04%)</title><rect x="42.8" y="323.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="45.8" y="334.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$203/1479694379.test (220 samples, 0.40%)</title><rect x="43.3" y="355.0" width="4.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="46.3" y="366.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (220 samples, 0.40%)</title><rect x="43.3" y="339.0" width="4.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="46.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$77/1464555023.test (220 samples, 0.40%)</title><rect x="43.3" y="323.0" width="4.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="46.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (220 samples, 0.40%)</title><rect x="43.3" y="307.0" width="4.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="46.3" y="318.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$66/254801937.test (220 samples, 0.40%)</title><rect x="43.3" y="291.0" width="4.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="46.3" y="302.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (220 samples, 0.40%)</title><rect x="43.3" y="275.0" width="4.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="46.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$65/270056930.test (220 samples, 0.40%)</title><rect x="43.3" y="259.0" width="4.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="46.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (220 samples, 0.40%)</title><rect x="43.3" y="243.0" width="4.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="46.3" y="254.0"></text>
</g>
<g>
<title>java/lang/String.substring (220 samples, 0.40%)</title><rect x="43.3" y="227.0" width="4.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="46.3" y="238.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (220 samples, 0.40%)</title><rect x="43.3" y="211.0" width="4.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="46.3" y="222.0"></text>
</g>
<g>
<title>java.lang.String (109 samples, 0.20%)</title><rect x="43.3" y="195.0" width="2.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="46.3" y="206.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (111 samples, 0.20%)</title><rect x="45.6" y="195.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="48.6" y="206.0"></text>
</g>
<g>
<title>byte[] (111 samples, 0.20%)</title><rect x="45.6" y="179.0" width="2.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="48.6" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (634 samples, 1.15%)</title><rect x="48.0" y="371.0" width="13.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="51.0" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (634 samples, 1.15%)</title><rect x="48.0" y="355.0" width="13.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="51.0" y="366.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (634 samples, 1.15%)</title><rect x="48.0" y="339.0" width="13.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="51.0" y="350.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (16 samples, 0.03%)</title><rect x="48.0" y="323.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="51.0" y="334.0"></text>
</g>
<g>
<title>java.util.ArrayList (19 samples, 0.03%)</title><rect x="48.3" y="323.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="51.3" y="334.0"></text>
</g>
<g>
<title>java.util.TreeMap (36 samples, 0.07%)</title><rect x="48.7" y="323.0" width="0.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="51.7" y="334.0"></text>
</g>
<g>
<title>java.util.TreeSet (12 samples, 0.02%)</title><rect x="49.5" y="323.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="52.5" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (18 samples, 0.03%)</title><rect x="49.8" y="323.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="52.8" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (18 samples, 0.03%)</title><rect x="49.8" y="307.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="52.8" y="318.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$126/1936481830.get$Lambda (18 samples, 0.03%)</title><rect x="49.8" y="291.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="52.8" y="302.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$126 (18 samples, 0.03%)</title><rect x="49.8" y="275.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="52.8" y="286.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (20 samples, 0.04%)</title><rect x="50.2" y="323.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="53.2" y="334.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (20 samples, 0.04%)</title><rect x="50.2" y="307.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="53.2" y="318.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (489 samples, 0.89%)</title><rect x="50.6" y="323.0" width="10.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="53.6" y="334.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$126/1936481830.accept (489 samples, 0.89%)</title><rect x="50.6" y="307.0" width="10.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="53.6" y="318.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (489 samples, 0.89%)</title><rect x="50.6" y="291.0" width="10.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="53.6" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (96 samples, 0.17%)</title><rect x="50.6" y="275.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="53.6" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (96 samples, 0.17%)</title><rect x="50.6" y="259.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="53.6" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$128/2001978515.get$Lambda (96 samples, 0.17%)</title><rect x="50.6" y="243.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="53.6" y="254.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$128 (96 samples, 0.17%)</title><rect x="50.6" y="227.0" width="2.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="53.6" y="238.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (49 samples, 0.09%)</title><rect x="52.6" y="275.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="55.6" y="286.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$128/2001978515.accept (49 samples, 0.09%)</title><rect x="52.6" y="259.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="55.6" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (49 samples, 0.09%)</title><rect x="52.6" y="243.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="55.6" y="254.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (49 samples, 0.09%)</title><rect x="52.6" y="227.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="55.6" y="238.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (49 samples, 0.09%)</title><rect x="52.6" y="211.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="55.6" y="222.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (49 samples, 0.09%)</title><rect x="52.6" y="195.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="55.6" y="206.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (49 samples, 0.09%)</title><rect x="52.6" y="179.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="55.6" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (49 samples, 0.09%)</title><rect x="52.6" y="163.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="55.6" y="174.0"></text>
</g>
<g>
<title>java.lang.Object[] (49 samples, 0.09%)</title><rect x="52.6" y="147.0" width="1.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="55.6" y="158.0"></text>
</g>
<g>
<title>java/util/List.copyOf (191 samples, 0.35%)</title><rect x="53.7" y="275.0" width="4.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="56.7" y="286.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (191 samples, 0.35%)</title><rect x="53.7" y="259.0" width="4.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="56.7" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (100 samples, 0.18%)</title><rect x="53.7" y="243.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="56.7" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (100 samples, 0.18%)</title><rect x="53.7" y="227.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="56.7" y="238.0"></text>
</g>
<g>
<title>java.lang.Object[] (100 samples, 0.18%)</title><rect x="53.7" y="211.0" width="2.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="56.7" y="222.0"></text>
</g>
<g>
<title>java/util/List.of (91 samples, 0.17%)</title><rect x="55.8" y="243.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="58.8" y="254.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (91 samples, 0.17%)</title><rect x="55.8" y="227.0" width="2.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="58.8" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (153 samples, 0.28%)</title><rect x="57.8" y="275.0" width="3.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="60.8" y="286.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (153 samples, 0.28%)</title><rect x="57.8" y="259.0" width="3.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="60.8" y="270.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (24 samples, 0.04%)</title><rect x="61.1" y="323.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="64.1" y="334.0"></text>
</g>
<g>
<title>java.util.TreeMap (24 samples, 0.04%)</title><rect x="61.1" y="307.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="64.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (70 samples, 0.13%)</title><rect x="61.6" y="387.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="64.6" y="398.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (35 samples, 0.06%)</title><rect x="61.6" y="371.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="64.6" y="382.0"></text>
</g>
<g>
<title>byte[] (17 samples, 0.03%)</title><rect x="61.6" y="355.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="64.6" y="366.0"></text>
</g>
<g>
<title>java.lang.String (18 samples, 0.03%)</title><rect x="62.0" y="355.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="65.0" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (35 samples, 0.06%)</title><rect x="62.3" y="371.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="65.3" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (35 samples, 0.06%)</title><rect x="62.3" y="355.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="65.3" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/667821226.invoke (35 samples, 0.06%)</title><rect x="62.3" y="339.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="65.3" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (35 samples, 0.06%)</title><rect x="62.3" y="323.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="65.3" y="334.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (12 samples, 0.02%)</title><rect x="62.3" y="307.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="65.3" y="318.0"></text>
</g>
<g>
<title>java.lang.String (12 samples, 0.02%)</title><rect x="62.3" y="291.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="65.3" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (23 samples, 0.04%)</title><rect x="62.6" y="307.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="65.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (23 samples, 0.04%)</title><rect x="62.6" y="291.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="65.6" y="302.0"></text>
</g>
<g>
<title>byte[] (23 samples, 0.04%)</title><rect x="62.6" y="275.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="65.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (54 samples, 0.10%)</title><rect x="63.1" y="387.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="66.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (54 samples, 0.10%)</title><rect x="63.1" y="371.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="66.1" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (54 samples, 0.10%)</title><rect x="63.1" y="355.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="66.1" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (54 samples, 0.10%)</title><rect x="63.1" y="339.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="66.1" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/667821226.invoke (54 samples, 0.10%)</title><rect x="63.1" y="323.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="66.1" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (54 samples, 0.10%)</title><rect x="63.1" y="307.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="66.1" y="318.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (23 samples, 0.04%)</title><rect x="63.1" y="291.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="66.1" y="302.0"></text>
</g>
<g>
<title>java.lang.String (23 samples, 0.04%)</title><rect x="63.1" y="275.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="66.1" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (31 samples, 0.06%)</title><rect x="63.6" y="291.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="66.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (31 samples, 0.06%)</title><rect x="63.6" y="275.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="66.6" y="286.0"></text>
</g>
<g>
<title>byte[] (31 samples, 0.06%)</title><rect x="63.6" y="259.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="66.6" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (121 samples, 0.22%)</title><rect x="64.3" y="387.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="67.3" y="398.0"></text>
</g>
<g>
<title>java.util.ArrayList (39 samples, 0.07%)</title><rect x="64.3" y="371.0" width="0.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="67.3" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (34 samples, 0.06%)</title><rect x="65.1" y="371.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="68.1" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (34 samples, 0.06%)</title><rect x="65.1" y="355.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="68.1" y="366.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (48 samples, 0.09%)</title><rect x="65.8" y="371.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="68.8" y="382.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (48 samples, 0.09%)</title><rect x="65.8" y="355.0" width="1.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="68.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (43 samples, 0.08%)</title><rect x="66.9" y="435.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="69.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (43 samples, 0.08%)</title><rect x="66.9" y="419.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="69.9" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (43 samples, 0.08%)</title><rect x="66.9" y="403.0" width="0.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="69.9" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response (54 samples, 0.10%)</title><rect x="67.8" y="467.0" width="1.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="70.8" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (23 samples, 0.04%)</title><rect x="68.9" y="467.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="71.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (282 samples, 0.51%)</title><rect x="69.4" y="467.0" width="6.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="72.4" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (22 samples, 0.04%)</title><rect x="69.4" y="451.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="72.4" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (22 samples, 0.04%)</title><rect x="69.4" y="435.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="72.4" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1HeaderParser (35 samples, 0.06%)</title><rect x="69.9" y="451.0" width="0.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="72.9" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$BodyReader (19 samples, 0.03%)</title><rect x="70.7" y="451.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="73.7" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$HeadersReader (34 samples, 0.06%)</title><rect x="71.1" y="451.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="74.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (74 samples, 0.13%)</title><rect x="71.8" y="451.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="74.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (74 samples, 0.13%)</title><rect x="71.8" y="435.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="74.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (74 samples, 0.13%)</title><rect x="71.8" y="419.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="74.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (74 samples, 0.13%)</title><rect x="71.8" y="403.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="74.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (74 samples, 0.13%)</title><rect x="71.8" y="387.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="74.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (74 samples, 0.13%)</title><rect x="71.8" y="371.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="74.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$166/1615159449.run (74 samples, 0.13%)</title><rect x="71.8" y="355.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="74.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (74 samples, 0.13%)</title><rect x="71.8" y="339.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="74.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (74 samples, 0.13%)</title><rect x="71.8" y="323.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="74.8" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (28 samples, 0.05%)</title><rect x="71.8" y="307.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="74.8" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (28 samples, 0.05%)</title><rect x="71.8" y="291.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="74.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$185/1905563662.get$Lambda (18 samples, 0.03%)</title><rect x="72.0" y="275.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="75.0" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$185 (18 samples, 0.03%)</title><rect x="72.0" y="259.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="75.0" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (21 samples, 0.04%)</title><rect x="72.4" y="307.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="75.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (25 samples, 0.05%)</title><rect x="72.8" y="307.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="75.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (25 samples, 0.05%)</title><rect x="72.8" y="291.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="75.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (17 samples, 0.03%)</title><rect x="73.0" y="275.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="76.0" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (17 samples, 0.03%)</title><rect x="73.0" y="259.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="76.0" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.&lt;init&gt; (76 samples, 0.14%)</title><rect x="73.4" y="451.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="76.4" y="462.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (24 samples, 0.04%)</title><rect x="73.4" y="435.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="76.4" y="446.0"></text>
</g>
<g>
<title>java.util.HashMap (27 samples, 0.05%)</title><rect x="73.9" y="435.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="76.9" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (25 samples, 0.05%)</title><rect x="74.5" y="435.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="77.5" y="446.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (25 samples, 0.05%)</title><rect x="74.5" y="419.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="77.5" y="430.0"></text>
</g>
<g>
<title>byte[] (25 samples, 0.05%)</title><rect x="74.5" y="403.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="77.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.start (22 samples, 0.04%)</title><rect x="75.0" y="451.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="78.0" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (22 samples, 0.04%)</title><rect x="75.0" y="435.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="78.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (25 samples, 0.05%)</title><rect x="75.5" y="579.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="78.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (25 samples, 0.05%)</title><rect x="75.5" y="563.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="78.5" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (25 samples, 0.05%)</title><rect x="75.5" y="547.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="78.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (58 samples, 0.11%)</title><rect x="76.0" y="611.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="79.0" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (58 samples, 0.11%)</title><rect x="76.0" y="595.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="79.0" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (33 samples, 0.06%)</title><rect x="76.0" y="579.0" width="0.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="79.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (25 samples, 0.05%)</title><rect x="76.7" y="579.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="79.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (25 samples, 0.05%)</title><rect x="76.7" y="563.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="79.7" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (25 samples, 0.05%)</title><rect x="76.7" y="547.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="79.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (1,573 samples, 2.86%)</title><rect x="77.3" y="611.0" width="33.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="80.3" y="622.0">jd..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (20 samples, 0.04%)</title><rect x="77.3" y="595.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="80.3" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (20 samples, 0.04%)</title><rect x="77.3" y="579.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="80.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$169/1136125206.get$Lambda (13 samples, 0.02%)</title><rect x="77.3" y="563.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="80.3" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$169 (13 samples, 0.02%)</title><rect x="77.3" y="547.0" width="0.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="80.3" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (35 samples, 0.06%)</title><rect x="77.7" y="595.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="80.7" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (35 samples, 0.06%)</title><rect x="77.7" y="579.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="80.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$172/1143403672.apply (17 samples, 0.03%)</title><rect x="77.7" y="563.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="80.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$establishExchange$2 (17 samples, 0.03%)</title><rect x="77.7" y="547.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="80.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (17 samples, 0.03%)</title><rect x="77.7" y="531.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="80.7" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (17 samples, 0.03%)</title><rect x="77.7" y="515.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="80.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (18 samples, 0.03%)</title><rect x="78.1" y="563.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="81.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (18 samples, 0.03%)</title><rect x="78.1" y="547.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="81.1" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (18 samples, 0.03%)</title><rect x="78.1" y="531.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="81.1" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (21 samples, 0.04%)</title><rect x="78.4" y="595.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="81.4" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (21 samples, 0.04%)</title><rect x="78.4" y="579.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="81.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (21 samples, 0.04%)</title><rect x="78.4" y="563.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="81.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (21 samples, 0.04%)</title><rect x="78.4" y="547.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="81.4" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (21 samples, 0.04%)</title><rect x="78.4" y="531.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="81.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (1,497 samples, 2.72%)</title><rect x="78.9" y="595.0" width="32.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="81.9" y="606.0">jd..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (13 samples, 0.02%)</title><rect x="78.9" y="579.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="81.9" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (13 samples, 0.02%)</title><rect x="78.9" y="563.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="81.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$144/821458659.get$Lambda (13 samples, 0.02%)</title><rect x="78.9" y="547.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="81.9" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ExchangeImpl$$Lambda$144 (13 samples, 0.02%)</title><rect x="78.9" y="531.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="81.9" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (1,421 samples, 2.58%)</title><rect x="79.2" y="579.0" width="30.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="82.2" y="590.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (1,421 samples, 2.58%)</title><rect x="79.2" y="563.0" width="30.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="82.2" y="574.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (1,399 samples, 2.54%)</title><rect x="79.2" y="547.0" width="30.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="82.2" y="558.0">ja..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$144/821458659.apply (1,399 samples, 2.54%)</title><rect x="79.2" y="531.0" width="30.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="82.2" y="542.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$get$0 (1,399 samples, 2.54%)</title><rect x="79.2" y="515.0" width="30.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="82.2" y="526.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createExchangeImpl (1,399 samples, 2.54%)</title><rect x="79.2" y="499.0" width="30.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="82.2" y="510.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (576 samples, 1.05%)</title><rect x="79.2" y="483.0" width="12.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="82.2" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (576 samples, 1.05%)</title><rect x="79.2" y="467.0" width="12.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="82.2" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (576 samples, 1.05%)</title><rect x="79.2" y="451.0" width="12.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="82.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$168/346584917.apply (559 samples, 1.02%)</title><rect x="79.2" y="435.0" width="12.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="82.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$1 (559 samples, 1.02%)</title><rect x="79.2" y="419.0" width="12.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="82.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (559 samples, 1.02%)</title><rect x="79.2" y="403.0" width="12.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="82.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (559 samples, 1.02%)</title><rect x="79.2" y="387.0" width="12.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="82.2" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getSettingsString (378 samples, 0.69%)</title><rect x="79.2" y="371.0" width="8.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="82.2" y="382.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encodeToString (106 samples, 0.19%)</title><rect x="79.2" y="355.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="82.2" y="366.0"></text>
</g>
<g>
<title>java.lang.String (17 samples, 0.03%)</title><rect x="79.2" y="339.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="82.2" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (45 samples, 0.08%)</title><rect x="79.6" y="339.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="82.6" y="350.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (45 samples, 0.08%)</title><rect x="79.6" y="323.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="82.6" y="334.0"></text>
</g>
<g>
<title>byte[] (45 samples, 0.08%)</title><rect x="79.6" y="307.0" width="1.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="82.6" y="318.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encode (44 samples, 0.08%)</title><rect x="80.6" y="339.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="83.6" y="350.0"></text>
</g>
<g>
<title>byte[] (44 samples, 0.08%)</title><rect x="80.6" y="323.0" width="0.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="83.6" y="334.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.withoutPadding (18 samples, 0.03%)</title><rect x="81.5" y="355.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="84.5" y="366.0"></text>
</g>
<g>
<title>java.util.Base64$Encoder (18 samples, 0.03%)</title><rect x="81.5" y="339.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="84.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getClientSettings (183 samples, 0.33%)</title><rect x="81.9" y="355.0" width="3.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="84.9" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.frame.SettingsFrame (22 samples, 0.04%)</title><rect x="81.9" y="339.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="84.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getParameter (131 samples, 0.24%)</title><rect x="82.4" y="339.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="85.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getIntegerNetProperty (131 samples, 0.24%)</title><rect x="82.4" y="323.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="85.4" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/896644936.linkToTargetMethod (92 samples, 0.17%)</title><rect x="82.4" y="307.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="85.4" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (92 samples, 0.17%)</title><rect x="82.4" y="291.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="85.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$61/1212772528.get$Lambda (92 samples, 0.17%)</title><rect x="82.4" y="275.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="85.4" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Utils$$Lambda$61 (92 samples, 0.17%)</title><rect x="82.4" y="259.0" width="1.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="85.4" y="270.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (39 samples, 0.07%)</title><rect x="84.3" y="307.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="87.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$61/1212772528.run (39 samples, 0.07%)</title><rect x="84.3" y="291.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="87.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$getIntegerNetProperty$11 (39 samples, 0.07%)</title><rect x="84.3" y="275.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="87.3" y="286.0"></text>
</g>
<g>
<title>sun/net/NetProperties.getInteger (39 samples, 0.07%)</title><rect x="84.3" y="259.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="87.3" y="270.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (39 samples, 0.07%)</title><rect x="84.3" y="243.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="87.3" y="254.0"></text>
</g>
<g>
<title>java.lang.Integer (39 samples, 0.07%)</title><rect x="84.3" y="227.0" width="0.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="87.3" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (30 samples, 0.05%)</title><rect x="85.2" y="339.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="88.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (30 samples, 0.05%)</title><rect x="85.2" y="323.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="88.2" y="334.0"></text>
</g>
<g>
<title>int[] (30 samples, 0.05%)</title><rect x="85.2" y="307.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="88.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.toByteArray (71 samples, 0.13%)</title><rect x="85.8" y="355.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="88.8" y="366.0"></text>
</g>
<g>
<title>byte[] (35 samples, 0.06%)</title><rect x="85.8" y="339.0" width="0.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="88.8" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (36 samples, 0.07%)</title><rect x="86.6" y="339.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="89.6" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (36 samples, 0.07%)</title><rect x="86.6" y="323.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="89.6" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (36 samples, 0.07%)</title><rect x="86.6" y="307.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="89.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (181 samples, 0.33%)</title><rect x="87.3" y="371.0" width="3.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="90.3" y="382.0"></text>
</g>
<g>
<title>java.util.ArrayList (51 samples, 0.09%)</title><rect x="87.3" y="355.0" width="1.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="90.3" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (55 samples, 0.10%)</title><rect x="88.4" y="355.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="91.4" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (55 samples, 0.10%)</title><rect x="88.4" y="339.0" width="1.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="91.4" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (75 samples, 0.14%)</title><rect x="89.6" y="355.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="92.6" y="366.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (75 samples, 0.14%)</title><rect x="89.6" y="339.0" width="1.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="92.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (17 samples, 0.03%)</title><rect x="91.2" y="435.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="94.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (17 samples, 0.03%)</title><rect x="91.2" y="419.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="94.2" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (17 samples, 0.03%)</title><rect x="91.2" y="403.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="94.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (821 samples, 1.49%)</title><rect x="91.6" y="483.0" width="17.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="94.6" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange (83 samples, 0.15%)</title><rect x="91.6" y="467.0" width="1.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="94.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (709 samples, 1.29%)</title><rect x="93.4" y="467.0" width="15.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="96.4" y="478.0"></text>
</g>
<g>
<title>java.lang.Object (12 samples, 0.02%)</title><rect x="93.4" y="451.0" width="0.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="96.4" y="462.0"></text>
</g>
<g>
<title>java.util.LinkedList (22 samples, 0.04%)</title><rect x="93.6" y="451.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="96.6" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (12 samples, 0.02%)</title><rect x="94.1" y="451.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="97.1" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (36 samples, 0.07%)</title><rect x="94.4" y="451.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="97.4" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (36 samples, 0.07%)</title><rect x="94.4" y="435.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="97.4" y="446.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (36 samples, 0.07%)</title><rect x="94.4" y="419.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="97.4" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (14 samples, 0.03%)</title><rect x="95.1" y="451.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="98.1" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (14 samples, 0.03%)</title><rect x="95.1" y="435.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="98.1" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver (54 samples, 0.10%)</title><rect x="95.4" y="451.0" width="1.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="98.4" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher (43 samples, 0.08%)</title><rect x="96.6" y="451.0" width="0.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="99.6" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request (47 samples, 0.09%)</title><rect x="97.5" y="451.0" width="1.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="100.5" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (40 samples, 0.07%)</title><rect x="98.5" y="451.0" width="0.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="101.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (202 samples, 0.37%)</title><rect x="99.4" y="451.0" width="4.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="102.4" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (12 samples, 0.02%)</title><rect x="99.4" y="435.0" width="0.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="102.4" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (18 samples, 0.03%)</title><rect x="99.9" y="435.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="102.9" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (17 samples, 0.03%)</title><rect x="100.7" y="435.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="103.7" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (17 samples, 0.03%)</title><rect x="100.7" y="419.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="103.7" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1TubeSubscriber (16 samples, 0.03%)</title><rect x="101.0" y="435.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="104.0" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (33 samples, 0.06%)</title><rect x="101.4" y="435.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="104.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (76 samples, 0.14%)</title><rect x="102.1" y="435.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="105.1" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (12 samples, 0.02%)</title><rect x="102.1" y="419.0" width="0.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="105.1" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (24 samples, 0.04%)</title><rect x="102.3" y="419.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="105.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (31 samples, 0.06%)</title><rect x="103.0" y="419.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="106.0" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (15 samples, 0.03%)</title><rect x="103.0" y="403.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="106.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (116 samples, 0.21%)</title><rect x="103.7" y="451.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="106.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (15 samples, 0.03%)</title><rect x="104.3" y="435.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="107.3" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (15 samples, 0.03%)</title><rect x="104.3" y="419.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="107.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (72 samples, 0.13%)</title><rect x="104.7" y="435.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="107.7" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (18 samples, 0.03%)</title><rect x="104.7" y="419.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="107.7" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (23 samples, 0.04%)</title><rect x="105.0" y="419.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="108.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (24 samples, 0.04%)</title><rect x="105.7" y="419.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="108.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (43 samples, 0.08%)</title><rect x="106.2" y="451.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="109.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (43 samples, 0.08%)</title><rect x="106.2" y="435.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="109.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (43 samples, 0.08%)</title><rect x="106.2" y="419.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="109.2" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.get (43 samples, 0.08%)</title><rect x="106.2" y="403.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="109.2" y="414.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (43 samples, 0.08%)</title><rect x="106.2" y="387.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="109.2" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (43 samples, 0.08%)</title><rect x="106.2" y="371.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="109.2" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (43 samples, 0.08%)</title><rect x="106.2" y="355.0" width="0.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="109.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (68 samples, 0.12%)</title><rect x="107.1" y="451.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="110.1" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/896644936.linkToTargetMethod (19 samples, 0.03%)</title><rect x="107.1" y="435.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="110.1" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (19 samples, 0.03%)</title><rect x="107.1" y="419.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="110.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$147/2025473808.get$Lambda (19 samples, 0.03%)</title><rect x="107.1" y="403.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="110.1" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl$$Lambda$147 (19 samples, 0.03%)</title><rect x="107.1" y="387.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="110.1" y="398.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (49 samples, 0.09%)</title><rect x="107.5" y="435.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="110.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$147/2025473808.run (49 samples, 0.09%)</title><rect x="107.5" y="419.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="110.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (49 samples, 0.09%)</title><rect x="107.5" y="403.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="110.5" y="414.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (41 samples, 0.07%)</title><rect x="107.7" y="387.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="110.7" y="398.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress$InetSocketAddressHolder (19 samples, 0.03%)</title><rect x="107.7" y="371.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="110.7" y="382.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (22 samples, 0.04%)</title><rect x="108.1" y="371.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="111.1" y="382.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (22 samples, 0.04%)</title><rect x="108.1" y="355.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="111.1" y="366.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (22 samples, 0.04%)</title><rect x="108.1" y="339.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="111.1" y="350.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (22 samples, 0.04%)</title><rect x="108.1" y="323.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="111.1" y="334.0"></text>
</g>
<g>
<title>java.net.InetAddress[] (21 samples, 0.04%)</title><rect x="108.1" y="307.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="111.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (29 samples, 0.05%)</title><rect x="108.6" y="467.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="111.6" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (29 samples, 0.05%)</title><rect x="108.6" y="451.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="111.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (22 samples, 0.04%)</title><rect x="109.2" y="547.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="112.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (22 samples, 0.04%)</title><rect x="109.2" y="531.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="112.2" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (22 samples, 0.04%)</title><rect x="109.2" y="515.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="112.2" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (17 samples, 0.03%)</title><rect x="109.7" y="579.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="112.7" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (17 samples, 0.03%)</title><rect x="109.7" y="563.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="112.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (17 samples, 0.03%)</title><rect x="109.7" y="547.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="112.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (17 samples, 0.03%)</title><rect x="109.7" y="531.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="112.7" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (17 samples, 0.03%)</title><rect x="109.7" y="515.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="112.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getConnectionFor (46 samples, 0.08%)</title><rect x="110.0" y="579.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="113.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyFor (22 samples, 0.04%)</title><rect x="110.0" y="563.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="113.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyString (22 samples, 0.04%)</title><rect x="110.0" y="547.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="113.0" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1970105444.linkToTargetMethod (22 samples, 0.04%)</title><rect x="110.0" y="531.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="113.0" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/561564308.invoke (22 samples, 0.04%)</title><rect x="110.0" y="515.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="113.0" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1681140543.invoke (22 samples, 0.04%)</title><rect x="110.0" y="499.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="113.0" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (22 samples, 0.04%)</title><rect x="110.0" y="483.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="113.0" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (22 samples, 0.04%)</title><rect x="110.0" y="467.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="113.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (22 samples, 0.04%)</title><rect x="110.0" y="451.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="113.0" y="462.0"></text>
</g>
<g>
<title>byte[] (22 samples, 0.04%)</title><rect x="110.0" y="435.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="113.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (24 samples, 0.04%)</title><rect x="110.5" y="563.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="113.5" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (24 samples, 0.04%)</title><rect x="110.5" y="547.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="113.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (1,671 samples, 3.04%)</title><rect x="111.0" y="755.0" width="35.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="114.0" y="766.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (1,496 samples, 2.72%)</title><rect x="111.0" y="739.0" width="32.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="114.0" y="750.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (1,490 samples, 2.71%)</title><rect x="111.0" y="723.0" width="32.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="114.0" y="734.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (1,490 samples, 2.71%)</title><rect x="111.0" y="707.0" width="32.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="114.0" y="718.0">ja..</text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (1,490 samples, 2.71%)</title><rect x="111.0" y="691.0" width="32.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="114.0" y="702.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.take (175 samples, 0.32%)</title><rect x="143.1" y="739.0" width="3.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="146.1" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.take (175 samples, 0.32%)</title><rect x="143.1" y="723.0" width="3.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="146.1" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.awaitNanos (175 samples, 0.32%)</title><rect x="143.1" y="707.0" width="3.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="146.1" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (175 samples, 0.32%)</title><rect x="143.1" y="691.0" width="3.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="146.1" y="702.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (175 samples, 0.32%)</title><rect x="143.1" y="675.0" width="3.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="146.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$205/1532762392.run (882 samples, 1.60%)</title><rect x="146.9" y="755.0" width="18.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="149.9" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (882 samples, 1.60%)</title><rect x="146.9" y="739.0" width="18.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="149.9" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (882 samples, 1.60%)</title><rect x="146.9" y="723.0" width="18.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="149.9" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (882 samples, 1.60%)</title><rect x="146.9" y="707.0" width="18.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="149.9" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (882 samples, 1.60%)</title><rect x="146.9" y="691.0" width="18.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="149.9" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (882 samples, 1.60%)</title><rect x="146.9" y="675.0" width="18.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="149.9" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (882 samples, 1.60%)</title><rect x="146.9" y="659.0" width="18.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="149.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (882 samples, 1.60%)</title><rect x="146.9" y="643.0" width="18.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="149.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (882 samples, 1.60%)</title><rect x="146.9" y="627.0" width="18.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="149.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (882 samples, 1.60%)</title><rect x="146.9" y="611.0" width="18.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="149.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (882 samples, 1.60%)</title><rect x="146.9" y="595.0" width="18.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="149.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (808 samples, 1.47%)</title><rect x="146.9" y="579.0" width="17.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="149.9" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (61 samples, 0.11%)</title><rect x="146.9" y="563.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="149.9" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (61 samples, 0.11%)</title><rect x="146.9" y="547.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="149.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$209/1904649501.get$Lambda (15 samples, 0.03%)</title><rect x="146.9" y="531.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="149.9" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$209 (15 samples, 0.03%)</title><rect x="146.9" y="515.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="149.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$220/969401326.get$Lambda (25 samples, 0.05%)</title><rect x="147.2" y="531.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="150.2" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$220 (25 samples, 0.05%)</title><rect x="147.2" y="515.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="150.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$221/36607840.get$Lambda (21 samples, 0.04%)</title><rect x="147.8" y="531.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="150.8" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$221 (21 samples, 0.04%)</title><rect x="147.8" y="515.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="150.8" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (747 samples, 1.36%)</title><rect x="148.2" y="563.0" width="16.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="151.2" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (37 samples, 0.07%)</title><rect x="148.2" y="547.0" width="0.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="151.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (710 samples, 1.29%)</title><rect x="149.0" y="547.0" width="15.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="152.0" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (710 samples, 1.29%)</title><rect x="149.0" y="531.0" width="15.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="152.0" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (710 samples, 1.29%)</title><rect x="149.0" y="515.0" width="15.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="152.0" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (122 samples, 0.22%)</title><rect x="149.0" y="499.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="152.0" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (37 samples, 0.07%)</title><rect x="149.0" y="483.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="152.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$217/1211777603.apply (81 samples, 0.15%)</title><rect x="149.8" y="483.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="152.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (81 samples, 0.15%)</title><rect x="149.8" y="467.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="152.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (81 samples, 0.15%)</title><rect x="149.8" y="451.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="152.8" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (22 samples, 0.04%)</title><rect x="149.8" y="435.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="152.8" y="446.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (22 samples, 0.04%)</title><rect x="149.8" y="419.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="152.8" y="430.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (22 samples, 0.04%)</title><rect x="149.8" y="403.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="152.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (59 samples, 0.11%)</title><rect x="150.3" y="435.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="153.3" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (49 samples, 0.09%)</title><rect x="150.5" y="419.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="153.5" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (49 samples, 0.09%)</title><rect x="150.5" y="403.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="153.5" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (33 samples, 0.06%)</title><rect x="150.5" y="387.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="153.5" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (16 samples, 0.03%)</title><rect x="151.2" y="387.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="154.2" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (16 samples, 0.03%)</title><rect x="151.2" y="371.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="154.2" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (16 samples, 0.03%)</title><rect x="151.2" y="355.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="154.2" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (588 samples, 1.07%)</title><rect x="151.6" y="499.0" width="12.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="154.6" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (588 samples, 1.07%)</title><rect x="151.6" y="483.0" width="12.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="154.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$191/2106603000.apply (588 samples, 1.07%)</title><rect x="151.6" y="467.0" width="12.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="154.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (588 samples, 1.07%)</title><rect x="151.6" y="451.0" width="12.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="154.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (588 samples, 1.07%)</title><rect x="151.6" y="435.0" width="12.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="154.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$137/87340014.apply (588 samples, 1.07%)</title><rect x="151.6" y="419.0" width="12.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="154.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (588 samples, 1.07%)</title><rect x="151.6" y="403.0" width="12.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="154.6" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (51 samples, 0.09%)</title><rect x="151.8" y="387.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="154.8" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (51 samples, 0.09%)</title><rect x="151.8" y="371.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="154.8" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (27 samples, 0.05%)</title><rect x="151.8" y="355.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="154.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (24 samples, 0.04%)</title><rect x="152.4" y="355.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="155.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (24 samples, 0.04%)</title><rect x="152.4" y="339.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="155.4" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (24 samples, 0.04%)</title><rect x="152.4" y="323.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="155.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.wrapForUpgrade (49 samples, 0.09%)</title><rect x="152.9" y="387.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="155.9" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (42 samples, 0.08%)</title><rect x="153.0" y="371.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="156.0" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (42 samples, 0.08%)</title><rect x="153.0" y="355.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="156.0" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (29 samples, 0.05%)</title><rect x="153.0" y="339.0" width="0.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="156.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (13 samples, 0.02%)</title><rect x="153.7" y="339.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="156.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (13 samples, 0.02%)</title><rect x="153.7" y="323.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="156.7" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (13 samples, 0.02%)</title><rect x="153.7" y="307.0" width="0.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="156.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (480 samples, 0.87%)</title><rect x="153.9" y="387.0" width="10.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="156.9" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (179 samples, 0.33%)</title><rect x="153.9" y="371.0" width="3.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="156.9" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (179 samples, 0.33%)</title><rect x="153.9" y="355.0" width="3.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="156.9" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptNow (179 samples, 0.33%)</title><rect x="153.9" y="339.0" width="3.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="156.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$210/173873625.accept (72 samples, 0.13%)</title><rect x="153.9" y="323.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="156.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$7 (72 samples, 0.13%)</title><rect x="153.9" y="307.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="156.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.cancelIfFailed (72 samples, 0.13%)</title><rect x="153.9" y="291.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="156.9" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (14 samples, 0.03%)</title><rect x="153.9" y="275.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="156.9" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (14 samples, 0.03%)</title><rect x="153.9" y="259.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="156.9" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$213/63590836.get$Lambda (14 samples, 0.03%)</title><rect x="153.9" y="243.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="156.9" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$213 (14 samples, 0.03%)</title><rect x="153.9" y="227.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="156.9" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (58 samples, 0.11%)</title><rect x="154.2" y="275.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="157.2" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (58 samples, 0.11%)</title><rect x="154.2" y="259.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="157.2" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (30 samples, 0.05%)</title><rect x="154.2" y="243.0" width="0.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="157.2" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (28 samples, 0.05%)</title><rect x="154.9" y="243.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="157.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (28 samples, 0.05%)</title><rect x="154.9" y="227.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="157.9" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (28 samples, 0.05%)</title><rect x="154.9" y="211.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="157.9" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$215/963044283.accept (72 samples, 0.13%)</title><rect x="155.5" y="323.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="158.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$8 (72 samples, 0.13%)</title><rect x="155.5" y="307.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="158.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.requestMoreBody (72 samples, 0.13%)</title><rect x="155.5" y="291.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="158.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.request (72 samples, 0.13%)</title><rect x="155.5" y="275.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="158.5" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.request (72 samples, 0.13%)</title><rect x="155.5" y="259.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="158.5" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (72 samples, 0.13%)</title><rect x="155.5" y="243.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="158.5" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (72 samples, 0.13%)</title><rect x="155.5" y="227.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="158.5" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (72 samples, 0.13%)</title><rect x="155.5" y="211.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="158.5" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (72 samples, 0.13%)</title><rect x="155.5" y="195.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="158.5" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (72 samples, 0.13%)</title><rect x="155.5" y="179.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="158.5" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onComplete (30 samples, 0.05%)</title><rect x="155.5" y="163.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="158.5" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (30 samples, 0.05%)</title><rect x="155.5" y="147.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="158.5" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (15 samples, 0.03%)</title><rect x="155.5" y="131.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="158.5" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (15 samples, 0.03%)</title><rect x="155.8" y="131.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="158.8" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (15 samples, 0.03%)</title><rect x="155.8" y="115.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="158.8" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (15 samples, 0.03%)</title><rect x="155.8" y="99.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="158.8" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (15 samples, 0.03%)</title><rect x="155.8" y="83.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="158.8" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (15 samples, 0.03%)</title><rect x="155.8" y="67.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="158.8" y="78.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (15 samples, 0.03%)</title><rect x="155.8" y="51.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="158.8" y="62.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (42 samples, 0.08%)</title><rect x="156.1" y="163.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="159.1" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (42 samples, 0.08%)</title><rect x="156.1" y="147.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="159.1" y="158.0"></text>
</g>
<g>
<title>java/util/List.of (17 samples, 0.03%)</title><rect x="156.1" y="131.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="159.1" y="142.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (17 samples, 0.03%)</title><rect x="156.1" y="115.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="159.1" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (25 samples, 0.05%)</title><rect x="156.5" y="131.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="159.5" y="142.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (13 samples, 0.02%)</title><rect x="156.5" y="115.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="159.5" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (12 samples, 0.02%)</title><rect x="156.8" y="115.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="159.8" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (12 samples, 0.02%)</title><rect x="156.8" y="99.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="159.8" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (12 samples, 0.02%)</title><rect x="156.8" y="83.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="159.8" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (12 samples, 0.02%)</title><rect x="156.8" y="67.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="159.8" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (12 samples, 0.02%)</title><rect x="156.8" y="51.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="159.8" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (12 samples, 0.02%)</title><rect x="156.8" y="35.0" width="0.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="159.8" y="46.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (35 samples, 0.06%)</title><rect x="157.0" y="323.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="160.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (35 samples, 0.06%)</title><rect x="157.0" y="307.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="160.0" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (35 samples, 0.06%)</title><rect x="157.0" y="291.0" width="0.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="160.0" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.continueRequest (301 samples, 0.55%)</title><rect x="157.8" y="371.0" width="6.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="160.8" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request$FixedContentSubscriber (24 samples, 0.04%)</title><rect x="157.8" y="355.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="160.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.&lt;init&gt; (26 samples, 0.05%)</title><rect x="158.3" y="355.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="161.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.&lt;init&gt; (26 samples, 0.05%)</title><rect x="158.3" y="339.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="161.3" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (26 samples, 0.05%)</title><rect x="158.3" y="323.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="161.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.subscribe (251 samples, 0.46%)</title><rect x="158.8" y="355.0" width="5.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="161.8" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.PullPublisher (16 samples, 0.03%)</title><rect x="158.8" y="339.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="161.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher.subscribe (134 samples, 0.24%)</title><rect x="159.2" y="339.0" width="2.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="162.2" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (20 samples, 0.04%)</title><rect x="159.2" y="323.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="162.2" y="334.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (20 samples, 0.04%)</title><rect x="159.2" y="307.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="162.2" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.PullPublisher$Subscription (22 samples, 0.04%)</title><rect x="159.6" y="323.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="162.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.&lt;init&gt; (92 samples, 0.17%)</title><rect x="160.1" y="323.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="163.1" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (14 samples, 0.03%)</title><rect x="160.3" y="307.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="163.3" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (14 samples, 0.03%)</title><rect x="160.6" y="307.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="163.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (19 samples, 0.03%)</title><rect x="160.9" y="307.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="163.9" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (19 samples, 0.03%)</title><rect x="160.9" y="291.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="163.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (36 samples, 0.07%)</title><rect x="161.3" y="307.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="164.3" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (12 samples, 0.02%)</title><rect x="161.3" y="291.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="164.3" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SchedulableTask (15 samples, 0.03%)</title><rect x="161.6" y="291.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="164.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.copy (101 samples, 0.18%)</title><rect x="162.1" y="339.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="165.1" y="350.0"></text>
</g>
<g>
<title>java.util.ArrayList (21 samples, 0.04%)</title><rect x="162.1" y="323.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="165.1" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (52 samples, 0.09%)</title><rect x="162.5" y="323.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="165.5" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (29 samples, 0.05%)</title><rect x="162.5" y="307.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="165.5" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (23 samples, 0.04%)</title><rect x="163.1" y="307.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="166.1" y="318.0"></text>
</g>
<g>
<title>byte[] (23 samples, 0.04%)</title><rect x="163.1" y="291.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="166.1" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (28 samples, 0.05%)</title><rect x="163.6" y="323.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="166.6" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (28 samples, 0.05%)</title><rect x="163.6" y="307.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="166.6" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (28 samples, 0.05%)</title><rect x="163.6" y="291.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="166.6" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (28 samples, 0.05%)</title><rect x="163.6" y="275.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="166.6" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (28 samples, 0.05%)</title><rect x="163.6" y="259.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="166.6" y="270.0"></text>
</g>
<g>
<title>java.lang.Object[] (28 samples, 0.05%)</title><rect x="163.6" y="243.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="166.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (74 samples, 0.13%)</title><rect x="164.2" y="579.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="167.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (74 samples, 0.13%)</title><rect x="164.2" y="563.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="167.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (74 samples, 0.13%)</title><rect x="164.2" y="547.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="167.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (74 samples, 0.13%)</title><rect x="164.2" y="531.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="167.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (74 samples, 0.13%)</title><rect x="164.2" y="515.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="167.2" y="526.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (74 samples, 0.13%)</title><rect x="164.2" y="499.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="167.2" y="510.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (32 samples, 0.06%)</title><rect x="164.2" y="483.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="167.2" y="494.0"></text>
</g>
<g>
<title>java.nio.ByteBuffer[] (32 samples, 0.06%)</title><rect x="164.2" y="467.0" width="0.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="167.2" y="478.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (42 samples, 0.08%)</title><rect x="164.9" y="483.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="167.9" y="494.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (42 samples, 0.08%)</title><rect x="164.9" y="467.0" width="0.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="167.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (2,814 samples, 5.12%)</title><rect x="165.8" y="755.0" width="60.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="168.8" y="766.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (2,814 samples, 5.12%)</title><rect x="165.8" y="739.0" width="60.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="168.8" y="750.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (2,359 samples, 4.29%)</title><rect x="165.8" y="723.0" width="50.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="168.8" y="734.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$166/1615159449.run (2,359 samples, 4.29%)</title><rect x="165.8" y="707.0" width="50.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="168.8" y="718.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (2,359 samples, 4.29%)</title><rect x="165.8" y="691.0" width="50.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="168.8" y="702.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (50 samples, 0.09%)</title><rect x="165.8" y="675.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="168.8" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (50 samples, 0.09%)</title><rect x="165.8" y="659.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="168.8" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (50 samples, 0.09%)</title><rect x="165.8" y="643.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="168.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (50 samples, 0.09%)</title><rect x="165.8" y="627.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="168.8" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/623247230.linkToTargetMethod (29 samples, 0.05%)</title><rect x="165.8" y="611.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="168.8" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/773662650.invoke (29 samples, 0.05%)</title><rect x="165.8" y="595.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="168.8" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (29 samples, 0.05%)</title><rect x="165.8" y="579.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="168.8" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (29 samples, 0.05%)</title><rect x="165.8" y="563.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="168.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (29 samples, 0.05%)</title><rect x="165.8" y="547.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="168.8" y="558.0"></text>
</g>
<g>
<title>byte[] (29 samples, 0.05%)</title><rect x="165.8" y="531.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="168.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (21 samples, 0.04%)</title><rect x="166.4" y="611.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="169.4" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (21 samples, 0.04%)</title><rect x="166.4" y="595.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="169.4" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (21 samples, 0.04%)</title><rect x="166.4" y="579.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="169.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$206/1914759753.get$Lambda (21 samples, 0.04%)</title><rect x="166.4" y="563.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="169.4" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$206 (21 samples, 0.04%)</title><rect x="166.4" y="547.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="169.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (2,309 samples, 4.20%)</title><rect x="166.9" y="675.0" width="49.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="169.9" y="686.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (2,309 samples, 4.20%)</title><rect x="166.9" y="659.0" width="49.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="169.9" y="670.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (2,309 samples, 4.20%)</title><rect x="166.9" y="643.0" width="49.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="169.9" y="654.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (2,309 samples, 4.20%)</title><rect x="166.9" y="627.0" width="49.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="169.9" y="638.0">jdk/i..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1,059 samples, 1.93%)</title><rect x="166.9" y="611.0" width="22.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="169.9" y="622.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1,059 samples, 1.93%)</title><rect x="166.9" y="595.0" width="22.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="169.9" y="606.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (1,059 samples, 1.93%)</title><rect x="166.9" y="579.0" width="22.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="169.9" y="590.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1,059 samples, 1.93%)</title><rect x="166.9" y="563.0" width="22.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="169.9" y="574.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1,059 samples, 1.93%)</title><rect x="166.9" y="547.0" width="22.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="169.9" y="558.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (1,059 samples, 1.93%)</title><rect x="166.9" y="531.0" width="22.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="169.9" y="542.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (1,059 samples, 1.93%)</title><rect x="166.9" y="515.0" width="22.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="169.9" y="526.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (1,023 samples, 1.86%)</title><rect x="166.9" y="499.0" width="22.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="169.9" y="510.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1,023 samples, 1.86%)</title><rect x="166.9" y="483.0" width="22.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="169.9" y="494.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (1,003 samples, 1.82%)</title><rect x="166.9" y="467.0" width="21.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="169.9" y="478.0">j..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (31 samples, 0.06%)</title><rect x="166.9" y="451.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="169.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$218/709564748.apply (20 samples, 0.04%)</title><rect x="167.6" y="451.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="170.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$wrapForUpgrade$10 (20 samples, 0.04%)</title><rect x="167.6" y="435.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="170.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkForUpgradeAsync (20 samples, 0.04%)</title><rect x="167.6" y="419.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="170.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (20 samples, 0.04%)</title><rect x="167.6" y="403.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="170.6" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (20 samples, 0.04%)</title><rect x="167.6" y="387.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="170.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$134/2113557447.apply (914 samples, 1.66%)</title><rect x="168.0" y="451.0" width="19.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="171.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (914 samples, 1.66%)</title><rect x="168.0" y="435.0" width="19.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="171.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (46 samples, 0.08%)</title><rect x="168.2" y="419.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="171.2" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (46 samples, 0.08%)</title><rect x="168.2" y="403.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="171.2" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (24 samples, 0.04%)</title><rect x="168.2" y="387.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="171.2" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (22 samples, 0.04%)</title><rect x="168.7" y="387.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="171.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (22 samples, 0.04%)</title><rect x="168.7" y="371.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="171.7" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (22 samples, 0.04%)</title><rect x="168.7" y="355.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="171.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (857 samples, 1.56%)</title><rect x="169.2" y="419.0" width="18.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="172.2" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (55 samples, 0.10%)</title><rect x="169.4" y="403.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="172.4" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (55 samples, 0.10%)</title><rect x="169.4" y="387.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="172.4" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (34 samples, 0.06%)</title><rect x="169.4" y="371.0" width="0.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="172.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (21 samples, 0.04%)</title><rect x="170.1" y="371.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="173.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (21 samples, 0.04%)</title><rect x="170.1" y="355.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="173.1" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (21 samples, 0.04%)</title><rect x="170.1" y="339.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="173.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (793 samples, 1.44%)</title><rect x="170.6" y="403.0" width="17.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="173.6" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers$$Lambda$129/1384033106.apply (47 samples, 0.09%)</title><rect x="170.6" y="387.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="173.6" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers.lambda$ofByteArray$12 (47 samples, 0.09%)</title><rect x="170.6" y="371.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="173.6" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.ofByteArray (47 samples, 0.09%)</title><rect x="170.6" y="355.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="173.6" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseSubscribers$ByteArraySubscriber (19 samples, 0.03%)</title><rect x="170.6" y="339.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="173.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.&lt;init&gt; (28 samples, 0.05%)</title><rect x="171.0" y="339.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="174.0" y="350.0"></text>
</g>
<g>
<title>java.util.ArrayList (13 samples, 0.02%)</title><rect x="171.0" y="323.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="174.0" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (15 samples, 0.03%)</title><rect x="171.3" y="323.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="174.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (746 samples, 1.36%)</title><rect x="171.6" y="387.0" width="16.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="174.6" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (21 samples, 0.04%)</title><rect x="171.6" y="371.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="174.6" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (21 samples, 0.04%)</title><rect x="171.6" y="355.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="174.6" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/525165928.linkToTargetMethod (30 samples, 0.05%)</title><rect x="172.0" y="371.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="175.0" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1057221162.invokeStatic (30 samples, 0.05%)</title><rect x="172.0" y="355.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="175.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$232/853075107.get$Lambda (30 samples, 0.05%)</title><rect x="172.0" y="339.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="175.0" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$232 (30 samples, 0.05%)</title><rect x="172.0" y="323.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="175.0" y="334.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (150 samples, 0.27%)</title><rect x="172.7" y="371.0" width="3.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="175.7" y="382.0"></text>
</g>
<g>
<title>java/util/Collection.stream (54 samples, 0.10%)</title><rect x="172.7" y="355.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="175.7" y="366.0"></text>
</g>
<g>
<title>java/util/List.spliterator (20 samples, 0.04%)</title><rect x="172.7" y="339.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="175.7" y="350.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (20 samples, 0.04%)</title><rect x="172.7" y="323.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="175.7" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (34 samples, 0.06%)</title><rect x="173.1" y="339.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="176.1" y="350.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (34 samples, 0.06%)</title><rect x="173.1" y="323.0" width="0.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="176.1" y="334.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (52 samples, 0.09%)</title><rect x="173.9" y="355.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="176.9" y="366.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (52 samples, 0.09%)</title><rect x="173.9" y="339.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="176.9" y="350.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (52 samples, 0.09%)</title><rect x="173.9" y="323.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="176.9" y="334.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (16 samples, 0.03%)</title><rect x="173.9" y="307.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="176.9" y="318.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (16 samples, 0.03%)</title><rect x="173.9" y="291.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="176.9" y="302.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.opWrapSink (16 samples, 0.03%)</title><rect x="173.9" y="275.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="176.9" y="286.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5$1 (16 samples, 0.03%)</title><rect x="173.9" y="259.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="176.9" y="270.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong$$Lambda$229/722914434.get (14 samples, 0.03%)</title><rect x="174.2" y="307.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="177.2" y="318.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfLong (14 samples, 0.03%)</title><rect x="174.2" y="291.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="177.2" y="302.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (22 samples, 0.04%)</title><rect x="174.5" y="307.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="177.5" y="318.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (22 samples, 0.04%)</title><rect x="174.5" y="291.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="177.5" y="302.0"></text>
</g>
<g>
<title>java/util/OptionalLong.of (22 samples, 0.04%)</title><rect x="174.5" y="275.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="177.5" y="286.0"></text>
</g>
<g>
<title>java.util.OptionalLong (22 samples, 0.04%)</title><rect x="174.5" y="259.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="177.5" y="270.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.mapToLong (44 samples, 0.08%)</title><rect x="175.0" y="355.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="178.0" y="366.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5 (44 samples, 0.08%)</title><rect x="175.0" y="339.0" width="0.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="178.0" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (91 samples, 0.17%)</title><rect x="175.9" y="371.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="178.9" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (43 samples, 0.08%)</title><rect x="175.9" y="355.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="178.9" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (25 samples, 0.05%)</title><rect x="175.9" y="339.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="178.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (18 samples, 0.03%)</title><rect x="176.4" y="339.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="179.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (18 samples, 0.03%)</title><rect x="176.4" y="323.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="179.4" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (18 samples, 0.03%)</title><rect x="176.4" y="307.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="179.4" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (48 samples, 0.09%)</title><rect x="176.8" y="355.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="179.8" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (48 samples, 0.09%)</title><rect x="176.8" y="339.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="179.8" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (32 samples, 0.06%)</title><rect x="176.8" y="323.0" width="0.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="179.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (16 samples, 0.03%)</title><rect x="177.5" y="323.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="180.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (16 samples, 0.03%)</title><rect x="177.5" y="307.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="180.5" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (16 samples, 0.03%)</title><rect x="177.5" y="291.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="180.5" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$ClientRefCountTracker (18 samples, 0.03%)</title><rect x="177.9" y="371.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="180.9" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$Http1BodySubscriber (15 samples, 0.03%)</title><rect x="178.3" y="371.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="181.3" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (16 samples, 0.03%)</title><rect x="178.6" y="371.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="181.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.&lt;init&gt; (12 samples, 0.02%)</title><rect x="178.9" y="371.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="181.9" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicBoolean (12 samples, 0.02%)</title><rect x="178.9" y="355.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="181.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (393 samples, 0.71%)</title><rect x="179.2" y="371.0" width="8.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="182.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$232/853075107.run (393 samples, 0.71%)</title><rect x="179.2" y="355.0" width="8.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="182.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (393 samples, 0.71%)</title><rect x="179.2" y="339.0" width="8.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="182.2" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (36 samples, 0.07%)</title><rect x="179.2" y="323.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="182.2" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (36 samples, 0.07%)</title><rect x="179.2" y="307.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="182.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$234/1815637731.get$Lambda (14 samples, 0.03%)</title><rect x="179.3" y="291.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="182.3" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$234 (14 samples, 0.03%)</title><rect x="179.3" y="275.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="182.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$237/952850743.get$Lambda (14 samples, 0.03%)</title><rect x="179.6" y="291.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="182.6" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$237 (14 samples, 0.03%)</title><rect x="179.6" y="275.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="182.6" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (39 samples, 0.07%)</title><rect x="179.9" y="323.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="182.9" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (39 samples, 0.07%)</title><rect x="179.9" y="307.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="182.9" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (22 samples, 0.04%)</title><rect x="179.9" y="291.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="182.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (17 samples, 0.03%)</title><rect x="180.4" y="291.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="183.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (17 samples, 0.03%)</title><rect x="180.4" y="275.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="183.4" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (17 samples, 0.03%)</title><rect x="180.4" y="259.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="183.4" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent (25 samples, 0.05%)</title><rect x="180.8" y="323.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="183.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.start (20 samples, 0.04%)</title><rect x="181.3" y="323.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="184.3" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (20 samples, 0.04%)</title><rect x="181.3" y="307.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="184.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (67 samples, 0.12%)</title><rect x="181.8" y="323.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="184.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (67 samples, 0.12%)</title><rect x="181.8" y="307.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="184.8" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (14 samples, 0.03%)</title><rect x="181.8" y="291.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="184.8" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (14 samples, 0.03%)</title><rect x="181.8" y="275.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="184.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$238/632069876.get$Lambda (14 samples, 0.03%)</title><rect x="181.8" y="259.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="184.8" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpConnection$TrailingOperations$$Lambda$238 (14 samples, 0.03%)</title><rect x="181.8" y="243.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="184.8" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (53 samples, 0.10%)</title><rect x="182.1" y="291.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="185.1" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (53 samples, 0.10%)</title><rect x="182.1" y="275.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="185.1" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (53 samples, 0.10%)</title><rect x="182.1" y="259.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="185.1" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (28 samples, 0.05%)</title><rect x="182.1" y="243.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="185.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (25 samples, 0.05%)</title><rect x="182.7" y="243.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="185.7" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (25 samples, 0.05%)</title><rect x="182.7" y="227.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="185.7" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (25 samples, 0.05%)</title><rect x="182.7" y="211.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="185.7" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (68 samples, 0.12%)</title><rect x="183.2" y="323.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="186.2" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (68 samples, 0.12%)</title><rect x="183.2" y="307.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="186.2" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1357563986.invoke (68 samples, 0.12%)</title><rect x="183.2" y="291.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="186.2" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (68 samples, 0.12%)</title><rect x="183.2" y="275.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="186.2" y="286.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (15 samples, 0.03%)</title><rect x="183.2" y="259.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="186.2" y="270.0"></text>
</g>
<g>
<title>java.lang.String (15 samples, 0.03%)</title><rect x="183.2" y="243.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="186.2" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (53 samples, 0.10%)</title><rect x="183.5" y="259.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="186.5" y="270.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (53 samples, 0.10%)</title><rect x="183.5" y="243.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="186.5" y="254.0"></text>
</g>
<g>
<title>byte[] (53 samples, 0.10%)</title><rect x="183.5" y="227.0" width="1.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="186.5" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (138 samples, 0.25%)</title><rect x="184.6" y="323.0" width="3.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="187.6" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent$FixedLengthBodyParser (55 samples, 0.10%)</title><rect x="184.6" y="307.0" width="1.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="187.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (83 samples, 0.15%)</title><rect x="185.8" y="307.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="188.8" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (83 samples, 0.15%)</title><rect x="185.8" y="291.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="188.8" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1357563986.invoke (83 samples, 0.15%)</title><rect x="185.8" y="275.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="188.8" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (83 samples, 0.15%)</title><rect x="185.8" y="259.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="188.8" y="270.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (24 samples, 0.04%)</title><rect x="185.8" y="243.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="188.8" y="254.0"></text>
</g>
<g>
<title>java.lang.String (24 samples, 0.04%)</title><rect x="185.8" y="227.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="188.8" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (59 samples, 0.11%)</title><rect x="186.3" y="243.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="189.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (59 samples, 0.11%)</title><rect x="186.3" y="227.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="189.3" y="238.0"></text>
</g>
<g>
<title>byte[] (59 samples, 0.11%)</title><rect x="186.3" y="211.0" width="1.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="189.3" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$192/1158665635.apply (38 samples, 0.07%)</title><rect x="187.6" y="451.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="190.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (38 samples, 0.07%)</title><rect x="187.6" y="435.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="190.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (19 samples, 0.03%)</title><rect x="187.6" y="419.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="190.6" y="430.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (19 samples, 0.03%)</title><rect x="187.6" y="403.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="190.6" y="414.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (19 samples, 0.03%)</title><rect x="187.6" y="387.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="190.6" y="398.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (19 samples, 0.03%)</title><rect x="187.6" y="371.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="190.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (19 samples, 0.03%)</title><rect x="188.0" y="419.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="191.0" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (19 samples, 0.03%)</title><rect x="188.0" y="403.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="191.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (20 samples, 0.04%)</title><rect x="188.4" y="467.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="191.4" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (20 samples, 0.04%)</title><rect x="188.4" y="451.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="191.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$193/194868316.apply (20 samples, 0.04%)</title><rect x="188.4" y="435.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="191.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (20 samples, 0.04%)</title><rect x="188.4" y="419.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="191.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (20 samples, 0.04%)</title><rect x="188.4" y="403.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="191.4" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (20 samples, 0.04%)</title><rect x="188.4" y="387.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="191.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$222/1425534080.apply (36 samples, 0.07%)</title><rect x="188.9" y="499.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="191.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (36 samples, 0.07%)</title><rect x="188.9" y="483.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="191.9" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Response (36 samples, 0.07%)</title><rect x="188.9" y="467.0" width="0.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="191.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (1,250 samples, 2.27%)</title><rect x="189.6" y="611.0" width="26.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="192.6" y="622.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (75 samples, 0.14%)</title><rect x="189.6" y="595.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="192.6" y="606.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (75 samples, 0.14%)</title><rect x="189.6" y="579.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="192.6" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (75 samples, 0.14%)</title><rect x="189.6" y="563.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="192.6" y="574.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (75 samples, 0.14%)</title><rect x="189.6" y="547.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="192.6" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (75 samples, 0.14%)</title><rect x="189.6" y="531.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="192.6" y="542.0"></text>
</g>
<g>
<title>byte[] (75 samples, 0.14%)</title><rect x="189.6" y="515.0" width="1.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="192.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (40 samples, 0.07%)</title><rect x="191.2" y="595.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="194.2" y="606.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (40 samples, 0.07%)</title><rect x="191.2" y="579.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="194.2" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (40 samples, 0.07%)</title><rect x="191.2" y="563.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="194.2" y="574.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (40 samples, 0.07%)</title><rect x="191.2" y="547.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="194.2" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (40 samples, 0.07%)</title><rect x="191.2" y="531.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="194.2" y="542.0"></text>
</g>
<g>
<title>byte[] (40 samples, 0.07%)</title><rect x="191.2" y="515.0" width="0.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="194.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (118 samples, 0.21%)</title><rect x="192.1" y="595.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="195.1" y="606.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (20 samples, 0.04%)</title><rect x="192.1" y="579.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="195.1" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (24 samples, 0.04%)</title><rect x="192.5" y="579.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="195.5" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (24 samples, 0.04%)</title><rect x="192.5" y="563.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="195.5" y="574.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (24 samples, 0.04%)</title><rect x="192.5" y="547.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="195.5" y="558.0"></text>
</g>
<g>
<title>byte[] (24 samples, 0.04%)</title><rect x="192.5" y="531.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="195.5" y="542.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (25 samples, 0.05%)</title><rect x="193.0" y="579.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="196.0" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (25 samples, 0.05%)</title><rect x="193.0" y="563.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="196.0" y="574.0"></text>
</g>
<g>
<title>byte[] (25 samples, 0.05%)</title><rect x="193.0" y="547.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="196.0" y="558.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (49 samples, 0.09%)</title><rect x="193.6" y="579.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="196.6" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (49 samples, 0.09%)</title><rect x="193.6" y="563.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="196.6" y="574.0"></text>
</g>
<g>
<title>java.lang.String (18 samples, 0.03%)</title><rect x="193.6" y="547.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="196.6" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (31 samples, 0.06%)</title><rect x="194.0" y="547.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="197.0" y="558.0"></text>
</g>
<g>
<title>byte[] (31 samples, 0.06%)</title><rect x="194.0" y="531.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="197.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (381 samples, 0.69%)</title><rect x="194.6" y="595.0" width="8.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="197.6" y="606.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (381 samples, 0.69%)</title><rect x="194.6" y="579.0" width="8.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="197.6" y="590.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (381 samples, 0.69%)</title><rect x="194.6" y="563.0" width="8.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="197.6" y="574.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (12 samples, 0.02%)</title><rect x="194.6" y="547.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="197.6" y="558.0"></text>
</g>
<g>
<title>java.util.ArrayList (28 samples, 0.05%)</title><rect x="194.9" y="547.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="197.9" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap (39 samples, 0.07%)</title><rect x="195.5" y="547.0" width="0.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="198.5" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (26 samples, 0.05%)</title><rect x="196.5" y="547.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="199.5" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (26 samples, 0.05%)</title><rect x="196.5" y="531.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="199.5" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$126/1936481830.get$Lambda (26 samples, 0.05%)</title><rect x="196.5" y="515.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="199.5" y="526.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$126 (26 samples, 0.05%)</title><rect x="196.5" y="499.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="199.5" y="510.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (22 samples, 0.04%)</title><rect x="197.1" y="547.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="200.1" y="558.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (22 samples, 0.04%)</title><rect x="197.1" y="531.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="200.1" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (216 samples, 0.39%)</title><rect x="197.6" y="547.0" width="4.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="200.6" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$126/1936481830.accept (216 samples, 0.39%)</title><rect x="197.6" y="531.0" width="4.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="200.6" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (216 samples, 0.39%)</title><rect x="197.6" y="515.0" width="4.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="200.6" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (39 samples, 0.07%)</title><rect x="197.6" y="499.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="200.6" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (39 samples, 0.07%)</title><rect x="197.6" y="483.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="200.6" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$128/2001978515.get$Lambda (39 samples, 0.07%)</title><rect x="197.6" y="467.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="200.6" y="478.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$128 (39 samples, 0.07%)</title><rect x="197.6" y="451.0" width="0.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="200.6" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (46 samples, 0.08%)</title><rect x="198.4" y="499.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="201.4" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$128/2001978515.accept (46 samples, 0.08%)</title><rect x="198.4" y="483.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="201.4" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (46 samples, 0.08%)</title><rect x="198.4" y="467.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="201.4" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (46 samples, 0.08%)</title><rect x="198.4" y="451.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="201.4" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (46 samples, 0.08%)</title><rect x="198.4" y="435.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="201.4" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (46 samples, 0.08%)</title><rect x="198.4" y="419.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="201.4" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (46 samples, 0.08%)</title><rect x="198.4" y="403.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="201.4" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (46 samples, 0.08%)</title><rect x="198.4" y="387.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="201.4" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (46 samples, 0.08%)</title><rect x="198.4" y="371.0" width="1.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="201.4" y="382.0"></text>
</g>
<g>
<title>java/util/List.copyOf (73 samples, 0.13%)</title><rect x="199.4" y="499.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="202.4" y="510.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (73 samples, 0.13%)</title><rect x="199.4" y="483.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="202.4" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (41 samples, 0.07%)</title><rect x="199.4" y="467.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="202.4" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (41 samples, 0.07%)</title><rect x="199.4" y="451.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="202.4" y="462.0"></text>
</g>
<g>
<title>java.lang.Object[] (41 samples, 0.07%)</title><rect x="199.4" y="435.0" width="0.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="202.4" y="446.0"></text>
</g>
<g>
<title>java/util/List.of (32 samples, 0.06%)</title><rect x="200.3" y="467.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="203.3" y="478.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (32 samples, 0.06%)</title><rect x="200.3" y="451.0" width="0.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="203.3" y="462.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (58 samples, 0.11%)</title><rect x="201.0" y="499.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="204.0" y="510.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (58 samples, 0.11%)</title><rect x="201.0" y="483.0" width="1.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="204.0" y="494.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (28 samples, 0.05%)</title><rect x="202.2" y="547.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="205.2" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap (28 samples, 0.05%)</title><rect x="202.2" y="531.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="205.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (636 samples, 1.16%)</title><rect x="202.8" y="595.0" width="13.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="205.8" y="606.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (18 samples, 0.03%)</title><rect x="202.8" y="579.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="205.8" y="590.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (52 samples, 0.09%)</title><rect x="203.2" y="579.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="206.2" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (52 samples, 0.09%)</title><rect x="203.2" y="563.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="206.2" y="574.0"></text>
</g>
<g>
<title>byte[] (52 samples, 0.09%)</title><rect x="203.2" y="547.0" width="1.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="206.2" y="558.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (81 samples, 0.15%)</title><rect x="204.3" y="579.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="207.3" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (81 samples, 0.15%)</title><rect x="204.3" y="563.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="207.3" y="574.0"></text>
</g>
<g>
<title>java.lang.String (22 samples, 0.04%)</title><rect x="204.3" y="547.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="207.3" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (59 samples, 0.11%)</title><rect x="204.8" y="547.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="207.8" y="558.0"></text>
</g>
<g>
<title>byte[] (59 samples, 0.11%)</title><rect x="204.8" y="531.0" width="1.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="207.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (485 samples, 0.88%)</title><rect x="206.0" y="579.0" width="10.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="209.0" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (141 samples, 0.26%)</title><rect x="206.0" y="563.0" width="3.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="209.0" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (141 samples, 0.26%)</title><rect x="206.0" y="547.0" width="3.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="209.0" y="558.0"></text>
</g>
<g>
<title>java.lang.String (58 samples, 0.11%)</title><rect x="206.0" y="531.0" width="1.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="209.0" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (83 samples, 0.15%)</title><rect x="207.3" y="531.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="210.3" y="542.0"></text>
</g>
<g>
<title>byte[] (83 samples, 0.15%)</title><rect x="207.3" y="515.0" width="1.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="210.3" y="526.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (78 samples, 0.14%)</title><rect x="209.1" y="563.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="212.1" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (78 samples, 0.14%)</title><rect x="209.1" y="547.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="212.1" y="558.0"></text>
</g>
<g>
<title>byte[] (41 samples, 0.07%)</title><rect x="209.1" y="531.0" width="0.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="212.1" y="542.0"></text>
</g>
<g>
<title>java.lang.String (37 samples, 0.07%)</title><rect x="210.0" y="531.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="213.0" y="542.0"></text>
</g>
<g>
<title>java/lang/String.trim (63 samples, 0.11%)</title><rect x="210.7" y="563.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="213.7" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (63 samples, 0.11%)</title><rect x="210.7" y="547.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="213.7" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (63 samples, 0.11%)</title><rect x="210.7" y="531.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="213.7" y="542.0"></text>
</g>
<g>
<title>java.lang.String (22 samples, 0.04%)</title><rect x="210.7" y="515.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="213.7" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (41 samples, 0.07%)</title><rect x="211.2" y="515.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="214.2" y="526.0"></text>
</g>
<g>
<title>byte[] (41 samples, 0.07%)</title><rect x="211.2" y="499.0" width="0.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="214.2" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (86 samples, 0.16%)</title><rect x="212.1" y="563.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="215.1" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (86 samples, 0.16%)</title><rect x="212.1" y="547.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="215.1" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (86 samples, 0.16%)</title><rect x="212.1" y="531.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="215.1" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (86 samples, 0.16%)</title><rect x="212.1" y="515.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="215.1" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (86 samples, 0.16%)</title><rect x="212.1" y="499.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="215.1" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (86 samples, 0.16%)</title><rect x="212.1" y="483.0" width="1.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="215.1" y="494.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (117 samples, 0.21%)</title><rect x="213.9" y="563.0" width="2.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="216.9" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (41 samples, 0.07%)</title><rect x="213.9" y="547.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="216.9" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (41 samples, 0.07%)</title><rect x="213.9" y="531.0" width="0.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="216.9" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (47 samples, 0.09%)</title><rect x="214.8" y="547.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="217.8" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (47 samples, 0.09%)</title><rect x="214.8" y="531.0" width="1.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="217.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser$$Lambda$226/54037925.apply (29 samples, 0.05%)</title><rect x="215.8" y="547.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="218.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.lambda$addHeaderFromString$0 (29 samples, 0.05%)</title><rect x="215.8" y="531.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="218.8" y="542.0"></text>
</g>
<g>
<title>java.util.ArrayList (29 samples, 0.05%)</title><rect x="215.8" y="515.0" width="0.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="218.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (455 samples, 0.83%)</title><rect x="216.5" y="723.0" width="9.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="219.5" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (455 samples, 0.83%)</title><rect x="216.5" y="707.0" width="9.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="219.5" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (455 samples, 0.83%)</title><rect x="216.5" y="691.0" width="9.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="219.5" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$166/1615159449.run (455 samples, 0.83%)</title><rect x="216.5" y="675.0" width="9.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="219.5" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (455 samples, 0.83%)</title><rect x="216.5" y="659.0" width="9.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="219.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (446 samples, 0.81%)</title><rect x="216.5" y="643.0" width="9.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="219.5" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (32 samples, 0.06%)</title><rect x="216.5" y="627.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="219.5" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (32 samples, 0.06%)</title><rect x="216.5" y="611.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="219.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$184/66712357.get$Lambda (13 samples, 0.02%)</title><rect x="216.5" y="595.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="219.5" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$184 (13 samples, 0.02%)</title><rect x="216.5" y="579.0" width="0.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="219.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$185/1905563662.get$Lambda (19 samples, 0.03%)</title><rect x="216.7" y="595.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="219.7" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$185 (19 samples, 0.03%)</title><rect x="216.7" y="579.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="219.7" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (26 samples, 0.05%)</title><rect x="217.1" y="627.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="220.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (30 samples, 0.05%)</title><rect x="217.7" y="627.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="220.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (30 samples, 0.05%)</title><rect x="217.7" y="611.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="220.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (21 samples, 0.04%)</title><rect x="217.9" y="595.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="220.9" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (21 samples, 0.04%)</title><rect x="217.9" y="579.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="220.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (358 samples, 0.65%)</title><rect x="218.3" y="627.0" width="7.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="221.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (358 samples, 0.65%)</title><rect x="218.3" y="611.0" width="7.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="221.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$233/1245151766.run (283 samples, 0.51%)</title><rect x="218.3" y="595.0" width="6.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="221.3" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (283 samples, 0.51%)</title><rect x="218.3" y="579.0" width="6.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="221.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (283 samples, 0.51%)</title><rect x="218.3" y="563.0" width="6.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="221.3" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (82 samples, 0.15%)</title><rect x="218.3" y="547.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="221.3" y="558.0"></text>
</g>
<g>
<title>java/util/Collection.stream (59 samples, 0.11%)</title><rect x="218.3" y="531.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="221.3" y="542.0"></text>
</g>
<g>
<title>java/util/List.spliterator (20 samples, 0.04%)</title><rect x="218.3" y="515.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="221.3" y="526.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (20 samples, 0.04%)</title><rect x="218.3" y="499.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="221.3" y="510.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (39 samples, 0.07%)</title><rect x="218.8" y="515.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="221.8" y="526.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (39 samples, 0.07%)</title><rect x="218.8" y="499.0" width="0.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="221.8" y="510.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (23 samples, 0.04%)</title><rect x="219.6" y="531.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="222.6" y="542.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (23 samples, 0.04%)</title><rect x="219.6" y="515.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="222.6" y="526.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (23 samples, 0.04%)</title><rect x="219.6" y="499.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="222.6" y="510.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$52/78204644.get (15 samples, 0.03%)</title><rect x="219.6" y="483.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="222.6" y="494.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (15 samples, 0.03%)</title><rect x="219.6" y="467.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="222.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (201 samples, 0.37%)</title><rect x="220.1" y="547.0" width="4.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="223.1" y="558.0"></text>
</g>
<g>
<title>java/time/Instant.now (20 samples, 0.04%)</title><rect x="220.1" y="531.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="223.1" y="542.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (20 samples, 0.04%)</title><rect x="220.1" y="515.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="223.1" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (20 samples, 0.04%)</title><rect x="220.1" y="499.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="223.1" y="510.0"></text>
</g>
<g>
<title>java/time/Instant.create (20 samples, 0.04%)</title><rect x="220.1" y="483.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="223.1" y="494.0"></text>
</g>
<g>
<title>java.time.Instant (20 samples, 0.04%)</title><rect x="220.1" y="467.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="223.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (181 samples, 0.33%)</title><rect x="220.5" y="531.0" width="3.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="223.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (69 samples, 0.13%)</title><rect x="220.5" y="515.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="223.5" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.plus (15 samples, 0.03%)</title><rect x="220.5" y="499.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="223.5" y="510.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (15 samples, 0.03%)</title><rect x="220.5" y="483.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="223.5" y="494.0"></text>
</g>
<g>
<title>java/time/Instant.plus (15 samples, 0.03%)</title><rect x="220.5" y="467.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="223.5" y="478.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (15 samples, 0.03%)</title><rect x="220.5" y="451.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="223.5" y="462.0"></text>
</g>
<g>
<title>java/time/Instant.create (15 samples, 0.03%)</title><rect x="220.5" y="435.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="223.5" y="446.0"></text>
</g>
<g>
<title>java.time.Instant (15 samples, 0.03%)</title><rect x="220.5" y="419.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="223.5" y="430.0"></text>
</g>
<g>
<title>java/time/Instant.truncatedTo (13 samples, 0.02%)</title><rect x="220.9" y="499.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="223.9" y="510.0"></text>
</g>
<g>
<title>java/time/Instant.plusNanos (13 samples, 0.02%)</title><rect x="220.9" y="483.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="223.9" y="494.0"></text>
</g>
<g>
<title>java/time/Instant.plus (13 samples, 0.02%)</title><rect x="220.9" y="467.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="223.9" y="478.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (13 samples, 0.02%)</title><rect x="220.9" y="451.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="223.9" y="462.0"></text>
</g>
<g>
<title>java/time/Instant.create (13 samples, 0.02%)</title><rect x="220.9" y="435.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="223.9" y="446.0"></text>
</g>
<g>
<title>java.time.Instant (13 samples, 0.02%)</title><rect x="220.9" y="419.0" width="0.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="223.9" y="430.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.add (24 samples, 0.04%)</title><rect x="221.1" y="499.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="224.1" y="510.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkBefore (24 samples, 0.04%)</title><rect x="221.1" y="483.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="224.1" y="494.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (24 samples, 0.04%)</title><rect x="221.1" y="467.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="224.1" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$ExpiryEntry (15 samples, 0.03%)</title><rect x="221.7" y="499.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="224.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (46 samples, 0.08%)</title><rect x="222.0" y="515.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="225.0" y="526.0"></text>
</g>
<g>
<title>java/util/HashMap.get (12 samples, 0.02%)</title><rect x="222.0" y="499.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="225.0" y="510.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (12 samples, 0.02%)</title><rect x="222.0" y="483.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="225.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (12 samples, 0.02%)</title><rect x="222.0" y="467.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="225.0" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (12 samples, 0.02%)</title><rect x="222.0" y="451.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="225.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection.cacheKey (23 samples, 0.04%)</title><rect x="222.5" y="499.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="225.5" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CacheKey (23 samples, 0.04%)</title><rect x="222.5" y="483.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="225.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (66 samples, 0.12%)</title><rect x="223.0" y="515.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="226.0" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CleanupTrigger (14 samples, 0.03%)</title><rect x="223.0" y="499.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="226.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (52 samples, 0.09%)</title><rect x="223.3" y="499.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="226.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (17 samples, 0.03%)</title><rect x="223.3" y="483.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="226.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (17 samples, 0.03%)</title><rect x="223.3" y="467.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="226.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (17 samples, 0.03%)</title><rect x="223.3" y="451.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="226.3" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (17 samples, 0.03%)</title><rect x="223.3" y="435.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="226.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (35 samples, 0.06%)</title><rect x="223.7" y="483.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="226.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (35 samples, 0.06%)</title><rect x="223.7" y="467.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="226.7" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (22 samples, 0.04%)</title><rect x="223.7" y="451.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="226.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (13 samples, 0.02%)</title><rect x="224.1" y="451.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="227.1" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (13 samples, 0.02%)</title><rect x="224.1" y="435.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="227.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (75 samples, 0.14%)</title><rect x="224.4" y="595.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="227.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (75 samples, 0.14%)</title><rect x="224.4" y="579.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="227.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (75 samples, 0.14%)</title><rect x="224.4" y="563.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="227.4" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (62 samples, 0.11%)</title><rect x="224.4" y="547.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="227.4" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (62 samples, 0.11%)</title><rect x="224.4" y="531.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="227.4" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (62 samples, 0.11%)</title><rect x="224.4" y="515.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="227.4" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (62 samples, 0.11%)</title><rect x="224.4" y="499.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="227.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$241/404297872.accept (62 samples, 0.11%)</title><rect x="224.4" y="483.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="227.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (62 samples, 0.11%)</title><rect x="224.4" y="467.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="227.4" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (62 samples, 0.11%)</title><rect x="224.4" y="451.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="227.4" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (62 samples, 0.11%)</title><rect x="224.4" y="435.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="227.4" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (62 samples, 0.11%)</title><rect x="224.4" y="419.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="227.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$245/917709507.apply (62 samples, 0.11%)</title><rect x="224.4" y="403.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="227.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (62 samples, 0.11%)</title><rect x="224.4" y="387.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="227.4" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpResponseImpl (62 samples, 0.11%)</title><rect x="224.4" y="371.0" width="1.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="227.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.join (13 samples, 0.02%)</title><rect x="225.8" y="547.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="228.8" y="558.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.02%)</title><rect x="225.8" y="531.0" width="0.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="228.8" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$108/1115154842.run (17,974 samples, 32.69%)</title><rect x="226.2" y="755.0" width="385.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="229.2" y="766.0">ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$entity$1 (17,974 samples, 32.69%)</title><rect x="226.2" y="739.0" width="385.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="229.2" y="750.0">ru/mail/polis/service/shakhmin/ReplicatedHttpServer.l..</text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.MetaRequest (1,837 samples, 3.34%)</title><rect x="226.2" y="723.0" width="39.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="229.2" y="734.0">ru...</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.upsert (10,939 samples, 19.90%)</title><rect x="265.7" y="723.0" width="234.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="268.7" y="734.0">ru/mail/polis/service/shakhmin/..</text>
</g>
<g>
<title>java/lang/String.getBytes (156 samples, 0.28%)</title><rect x="265.7" y="707.0" width="3.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="268.7" y="718.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (156 samples, 0.28%)</title><rect x="265.7" y="691.0" width="3.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="268.7" y="702.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (156 samples, 0.28%)</title><rect x="265.7" y="675.0" width="3.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="268.7" y="686.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (156 samples, 0.28%)</title><rect x="265.7" y="659.0" width="3.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="268.7" y="670.0"></text>
</g>
<g>
<title>byte[] (156 samples, 0.28%)</title><rect x="265.7" y="643.0" width="3.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="268.7" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,157 samples, 2.10%)</title><rect x="269.0" y="707.0" width="24.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="272.0" y="718.0">j..</text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,157 samples, 2.10%)</title><rect x="269.0" y="691.0" width="24.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="272.0" y="702.0">j..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService$$Lambda$110/886817591.get$Lambda (200 samples, 0.36%)</title><rect x="269.0" y="675.0" width="4.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="272.0" y="686.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.HttpService$$Lambda$110 (200 samples, 0.36%)</title><rect x="269.0" y="659.0" width="4.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="272.0" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService$$Lambda$112/1643463642.get$Lambda (203 samples, 0.37%)</title><rect x="273.3" y="675.0" width="4.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="276.3" y="686.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.HttpService$$Lambda$112 (203 samples, 0.37%)</title><rect x="273.3" y="659.0" width="4.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="276.3" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService$$Lambda$114/362305471.get$Lambda (257 samples, 0.47%)</title><rect x="277.7" y="675.0" width="5.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="280.7" y="686.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.HttpService$$Lambda$114 (257 samples, 0.47%)</title><rect x="277.7" y="659.0" width="5.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="280.7" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService$$Lambda$224/599390442.get$Lambda (497 samples, 0.90%)</title><rect x="283.2" y="675.0" width="10.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="286.2" y="686.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.HttpService$$Lambda$224 (497 samples, 0.90%)</title><rect x="283.2" y="659.0" width="10.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="286.2" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (385 samples, 0.70%)</title><rect x="293.8" y="707.0" width="8.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="296.8" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (385 samples, 0.70%)</title><rect x="293.8" y="691.0" width="8.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="296.8" y="702.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (385 samples, 0.70%)</title><rect x="293.8" y="675.0" width="8.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="296.8" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (2,376 samples, 4.32%)</title><rect x="302.1" y="707.0" width="51.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="305.1" y="718.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (2,376 samples, 4.32%)</title><rect x="302.1" y="691.0" width="51.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="305.1" y="702.0">java/..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniExceptionally (1,494 samples, 2.72%)</title><rect x="302.1" y="675.0" width="32.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="305.1" y="686.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (882 samples, 1.60%)</title><rect x="334.2" y="675.0" width="18.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="337.2" y="686.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (882 samples, 1.60%)</title><rect x="334.2" y="659.0" width="18.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="337.2" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.runAsync (1,363 samples, 2.48%)</title><rect x="353.1" y="707.0" width="29.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="356.1" y="718.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncRunStage (1,363 samples, 2.48%)</title><rect x="353.1" y="691.0" width="29.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="356.1" y="702.0">ja..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncRun (503 samples, 0.91%)</title><rect x="353.1" y="675.0" width="10.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="356.1" y="686.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (860 samples, 1.56%)</title><rect x="363.9" y="675.0" width="18.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="366.9" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenComposeAsync (496 samples, 0.90%)</title><rect x="382.3" y="707.0" width="10.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="385.3" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (496 samples, 0.90%)</title><rect x="382.3" y="691.0" width="10.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="385.3" y="702.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (313 samples, 0.57%)</title><rect x="382.3" y="675.0" width="6.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="385.3" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (183 samples, 0.33%)</title><rect x="389.1" y="675.0" width="3.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="392.1" y="686.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (183 samples, 0.33%)</title><rect x="389.1" y="659.0" width="3.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="392.1" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (518 samples, 0.94%)</title><rect x="393.0" y="707.0" width="11.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="396.0" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (518 samples, 0.94%)</title><rect x="393.0" y="691.0" width="11.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="396.0" y="702.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (347 samples, 0.63%)</title><rect x="393.0" y="675.0" width="7.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="396.0" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (171 samples, 0.31%)</title><rect x="400.4" y="675.0" width="3.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="403.4" y="686.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (171 samples, 0.31%)</title><rect x="400.4" y="659.0" width="3.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="403.4" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.handleLocally (572 samples, 1.04%)</title><rect x="404.1" y="707.0" width="12.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="407.1" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (195 samples, 0.35%)</title><rect x="404.1" y="691.0" width="4.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="407.1" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (195 samples, 0.35%)</title><rect x="404.1" y="675.0" width="4.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="407.1" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService$$Lambda$111/1101527014.get$Lambda (195 samples, 0.35%)</title><rect x="404.1" y="659.0" width="4.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="407.1" y="670.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.HttpService$$Lambda$111 (195 samples, 0.35%)</title><rect x="404.1" y="643.0" width="4.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="407.1" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (377 samples, 0.69%)</title><rect x="408.3" y="691.0" width="8.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="411.3" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (377 samples, 0.69%)</title><rect x="408.3" y="675.0" width="8.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="411.3" y="686.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (176 samples, 0.32%)</title><rect x="408.3" y="659.0" width="3.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="411.3" y="670.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (201 samples, 0.37%)</title><rect x="412.1" y="659.0" width="4.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="415.1" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/ConsistentHashImpl.replicas (3,916 samples, 7.12%)</title><rect x="416.4" y="707.0" width="84.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="419.4" y="718.0">ru/mail/po..</text>
</g>
<g>
<title>java.util.ArrayList (173 samples, 0.31%)</title><rect x="416.4" y="691.0" width="3.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="419.4" y="702.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (718 samples, 1.31%)</title><rect x="420.1" y="691.0" width="15.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="423.1" y="702.0"></text>
</g>
<g>
<title>java.util.AbstractMap$2$1 (176 samples, 0.32%)</title><rect x="420.1" y="675.0" width="3.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="423.1" y="686.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (542 samples, 0.99%)</title><rect x="423.9" y="675.0" width="11.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="426.9" y="686.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap$AscendingEntrySetView.iterator (308 samples, 0.56%)</title><rect x="423.9" y="659.0" width="6.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="426.9" y="670.0"></text>
</g>
<g>
<title>java.util.TreeMap$NavigableSubMap$SubMapEntryIterator (308 samples, 0.56%)</title><rect x="423.9" y="643.0" width="6.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="426.9" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap.entrySet (234 samples, 0.43%)</title><rect x="430.5" y="659.0" width="5.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="433.5" y="670.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap$AscendingEntrySetView (234 samples, 0.43%)</title><rect x="430.5" y="643.0" width="5.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="433.5" y="654.0"></text>
</g>
<g>
<title>java/util/AbstractMap.values (113 samples, 0.21%)</title><rect x="435.5" y="691.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="438.5" y="702.0"></text>
</g>
<g>
<title>java.util.AbstractMap$2 (113 samples, 0.21%)</title><rect x="435.5" y="675.0" width="2.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="438.5" y="686.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (421 samples, 0.77%)</title><rect x="437.9" y="691.0" width="9.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="440.9" y="702.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (421 samples, 0.77%)</title><rect x="437.9" y="675.0" width="9.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="440.9" y="686.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (421 samples, 0.77%)</title><rect x="437.9" y="659.0" width="9.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="440.9" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (421 samples, 0.77%)</title><rect x="437.9" y="643.0" width="9.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="440.9" y="654.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (421 samples, 0.77%)</title><rect x="437.9" y="627.0" width="9.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="440.9" y="638.0"></text>
</g>
<g>
<title>java.lang.Object[] (421 samples, 0.77%)</title><rect x="437.9" y="611.0" width="9.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="440.9" y="622.0"></text>
</g>
<g>
<title>java/util/TreeMap$Values.iterator (14 samples, 0.03%)</title><rect x="447.0" y="691.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="450.0" y="702.0"></text>
</g>
<g>
<title>java.util.TreeMap$ValueIterator (14 samples, 0.03%)</title><rect x="447.0" y="675.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="450.0" y="686.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (392 samples, 0.71%)</title><rect x="447.3" y="691.0" width="8.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="450.3" y="702.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (392 samples, 0.71%)</title><rect x="447.3" y="675.0" width="8.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="450.3" y="686.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap (392 samples, 0.71%)</title><rect x="447.3" y="659.0" width="8.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="450.3" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/ConsistentHashImpl.firstReplica (2,085 samples, 3.79%)</title><rect x="455.7" y="691.0" width="44.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="458.7" y="702.0">ru/m..</text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.hashBytes (1,689 samples, 3.07%)</title><rect x="455.7" y="675.0" width="36.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="458.7" y="686.0">com..</text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.newHasher (1,069 samples, 1.94%)</title><rect x="455.7" y="659.0" width="22.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="458.7" y="670.0">c..</text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction.newHasher (1,069 samples, 1.94%)</title><rect x="455.7" y="643.0" width="22.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="458.7" y="654.0">c..</text>
</g>
<g>
<title>com.google.common.hash.Murmur3_128HashFunction$Murmur3_128Hasher (409 samples, 0.74%)</title><rect x="455.7" y="627.0" width="8.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="458.7" y="638.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.&lt;init&gt; (660 samples, 1.20%)</title><rect x="464.5" y="627.0" width="14.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="467.5" y="638.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.&lt;init&gt; (660 samples, 1.20%)</title><rect x="464.5" y="611.0" width="14.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="467.5" y="622.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.&lt;init&gt; (660 samples, 1.20%)</title><rect x="464.5" y="595.0" width="14.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="467.5" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (660 samples, 1.20%)</title><rect x="464.5" y="579.0" width="14.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="467.5" y="590.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (371 samples, 0.67%)</title><rect x="464.5" y="563.0" width="7.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="467.5" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (289 samples, 0.53%)</title><rect x="472.4" y="563.0" width="6.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="475.4" y="574.0"></text>
</g>
<g>
<title>byte[] (289 samples, 0.53%)</title><rect x="472.4" y="547.0" width="6.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="475.4" y="558.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.hash (620 samples, 1.13%)</title><rect x="478.6" y="659.0" width="13.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="481.6" y="670.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.makeHash (620 samples, 1.13%)</title><rect x="478.6" y="643.0" width="13.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="481.6" y="654.0"></text>
</g>
<g>
<title>byte[] (246 samples, 0.45%)</title><rect x="478.6" y="627.0" width="5.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="481.6" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (374 samples, 0.68%)</title><rect x="483.9" y="627.0" width="8.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="486.9" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (374 samples, 0.68%)</title><rect x="483.9" y="611.0" width="8.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="486.9" y="622.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (374 samples, 0.68%)</title><rect x="483.9" y="595.0" width="8.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="486.9" y="606.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (191 samples, 0.35%)</title><rect x="491.9" y="675.0" width="4.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="494.9" y="686.0"></text>
</g>
<g>
<title>java.lang.Long (191 samples, 0.35%)</title><rect x="491.9" y="659.0" width="4.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="494.9" y="670.0"></text>
</g>
<g>
<title>java/util/TreeMap.ceilingEntry (199 samples, 0.36%)</title><rect x="496.0" y="675.0" width="4.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="499.0" y="686.0"></text>
</g>
<g>
<title>java/util/TreeMap.exportEntry (199 samples, 0.36%)</title><rect x="496.0" y="659.0" width="4.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="499.0" y="670.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (199 samples, 0.36%)</title><rect x="496.0" y="643.0" width="4.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="499.0" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/MetaRequest.&lt;init&gt; (5,198 samples, 9.45%)</title><rect x="500.4" y="723.0" width="111.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="503.4" y="734.0">ru/mail/polis..</text>
</g>
<g>
<title>java/lang/String.substring (1,737 samples, 3.16%)</title><rect x="500.4" y="707.0" width="37.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="503.4" y="718.0">jav..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,737 samples, 3.16%)</title><rect x="500.4" y="691.0" width="37.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="503.4" y="702.0">jav..</text>
</g>
<g>
<title>java.lang.String (798 samples, 1.45%)</title><rect x="500.4" y="675.0" width="17.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="503.4" y="686.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (939 samples, 1.71%)</title><rect x="517.6" y="675.0" width="20.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="520.6" y="686.0"></text>
</g>
<g>
<title>byte[] (939 samples, 1.71%)</title><rect x="517.6" y="659.0" width="20.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="520.6" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1,730 samples, 3.15%)</title><rect x="537.7" y="707.0" width="37.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="540.7" y="718.0">jav..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1,730 samples, 3.15%)</title><rect x="537.7" y="691.0" width="37.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="540.7" y="702.0">jav..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1,730 samples, 3.15%)</title><rect x="537.7" y="675.0" width="37.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="540.7" y="686.0">jav..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1,731 samples, 3.15%)</title><rect x="574.9" y="707.0" width="37.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="577.9" y="718.0">one..</text>
</g>
<g>
<title>java/lang/String.substring (1,731 samples, 3.15%)</title><rect x="574.9" y="691.0" width="37.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="577.9" y="702.0">jav..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,731 samples, 3.15%)</title><rect x="574.9" y="675.0" width="37.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="577.9" y="686.0">jav..</text>
</g>
<g>
<title>java.lang.String (768 samples, 1.40%)</title><rect x="574.9" y="659.0" width="16.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="577.9" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (963 samples, 1.75%)</title><rect x="591.3" y="659.0" width="20.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="594.3" y="670.0"></text>
</g>
<g>
<title>byte[] (963 samples, 1.75%)</title><rect x="591.3" y="643.0" width="20.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="594.3" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (4,956 samples, 9.01%)</title><rect x="612.0" y="803.0" width="106.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="615.0" y="814.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (4,956 samples, 9.01%)</title><rect x="612.0" y="787.0" width="106.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="615.0" y="798.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (4,956 samples, 9.01%)</title><rect x="612.0" y="771.0" width="106.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="615.0" y="782.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (4,956 samples, 9.01%)</title><rect x="612.0" y="755.0" width="106.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="615.0" y="766.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (4,956 samples, 9.01%)</title><rect x="612.0" y="739.0" width="106.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="615.0" y="750.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncRun.exec (537 samples, 0.98%)</title><rect x="612.0" y="723.0" width="11.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="615.0" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncRun.run (537 samples, 0.98%)</title><rect x="612.0" y="707.0" width="11.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="615.0" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService$$Lambda$224/599390442.run (537 samples, 0.98%)</title><rect x="612.0" y="691.0" width="11.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="615.0" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.lambda$upsert$8 (537 samples, 0.98%)</title><rect x="612.0" y="675.0" width="11.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="615.0" y="686.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (49 samples, 0.09%)</title><rect x="612.0" y="659.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="615.0" y="670.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (49 samples, 0.09%)</title><rect x="612.0" y="643.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="615.0" y="654.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (49 samples, 0.09%)</title><rect x="612.0" y="627.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="615.0" y="638.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (49 samples, 0.09%)</title><rect x="612.0" y="611.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="615.0" y="622.0"></text>
</g>
<g>
<title>byte[] (49 samples, 0.09%)</title><rect x="612.0" y="595.0" width="1.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="615.0" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (45 samples, 0.08%)</title><rect x="613.1" y="659.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="616.1" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (45 samples, 0.08%)</title><rect x="613.1" y="643.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="616.1" y="654.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (45 samples, 0.08%)</title><rect x="613.1" y="627.0" width="0.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="616.1" y="638.0"></text>
</g>
<g>
<title>one.nio.http.Response (38 samples, 0.07%)</title><rect x="614.0" y="659.0" width="0.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="617.0" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (113 samples, 0.21%)</title><rect x="614.8" y="659.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="617.8" y="670.0"></text>
</g>
<g>
<title>byte[] (50 samples, 0.09%)</title><rect x="614.8" y="643.0" width="1.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="617.8" y="654.0"></text>
</g>
<g>
<title>java.lang.String[] (35 samples, 0.06%)</title><rect x="615.9" y="643.0" width="0.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="618.9" y="654.0"></text>
</g>
<g>
<title>java.lang.String (28 samples, 0.05%)</title><rect x="616.7" y="643.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="619.7" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.upsert (84 samples, 0.15%)</title><rect x="617.3" y="659.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="620.3" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.upsert (84 samples, 0.15%)</title><rect x="617.3" y="643.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="620.3" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.upsert (84 samples, 0.15%)</title><rect x="617.3" y="627.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="620.3" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (18 samples, 0.03%)</title><rect x="617.3" y="611.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="620.3" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (18 samples, 0.03%)</title><rect x="617.3" y="595.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="620.3" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Node (16 samples, 0.03%)</title><rect x="617.3" y="579.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="620.3" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Cell.of (26 samples, 0.05%)</title><rect x="617.7" y="611.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="620.7" y="622.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Cell (26 samples, 0.05%)</title><rect x="617.7" y="595.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="620.7" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.of (40 samples, 0.07%)</title><rect x="618.2" y="611.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="621.2" y="622.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Row (40 samples, 0.07%)</title><rect x="618.2" y="595.0" width="0.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="621.2" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.sendResponse (208 samples, 0.38%)</title><rect x="619.1" y="659.0" width="4.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="622.1" y="670.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (208 samples, 0.38%)</title><rect x="619.1" y="643.0" width="4.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="622.1" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (146 samples, 0.27%)</title><rect x="619.1" y="627.0" width="3.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="622.1" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (101 samples, 0.18%)</title><rect x="619.1" y="611.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="622.1" y="622.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (101 samples, 0.18%)</title><rect x="619.1" y="595.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="622.1" y="606.0"></text>
</g>
<g>
<title>byte[] (101 samples, 0.18%)</title><rect x="619.1" y="579.0" width="2.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="622.1" y="590.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (45 samples, 0.08%)</title><rect x="621.2" y="611.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="624.2" y="622.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (45 samples, 0.08%)</title><rect x="621.2" y="595.0" width="1.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="624.2" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (62 samples, 0.11%)</title><rect x="622.2" y="627.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="625.2" y="638.0"></text>
</g>
<g>
<title>java/lang/String.substring (62 samples, 0.11%)</title><rect x="622.2" y="611.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="625.2" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (62 samples, 0.11%)</title><rect x="622.2" y="595.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="625.2" y="606.0"></text>
</g>
<g>
<title>java.lang.String (23 samples, 0.04%)</title><rect x="622.2" y="579.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="625.2" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (39 samples, 0.07%)</title><rect x="622.7" y="579.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="625.7" y="590.0"></text>
</g>
<g>
<title>byte[] (39 samples, 0.07%)</title><rect x="622.7" y="563.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="625.7" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.exec (147 samples, 0.27%)</title><rect x="623.5" y="723.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="626.5" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (147 samples, 0.27%)</title><rect x="623.5" y="707.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="626.5" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService$$Lambda$111/1101527014.get (147 samples, 0.27%)</title><rect x="623.5" y="691.0" width="3.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="626.5" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.lambda$handleLocally$24 (147 samples, 0.27%)</title><rect x="623.5" y="675.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="626.5" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService$$Lambda$110/886817591.run (147 samples, 0.27%)</title><rect x="623.5" y="659.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="626.5" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.lambda$upsert$10 (147 samples, 0.27%)</title><rect x="623.5" y="643.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="626.5" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.upsertToDao (147 samples, 0.27%)</title><rect x="623.5" y="627.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="626.5" y="638.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (59 samples, 0.11%)</title><rect x="623.5" y="611.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="626.5" y="622.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (59 samples, 0.11%)</title><rect x="623.5" y="595.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="626.5" y="606.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (59 samples, 0.11%)</title><rect x="623.5" y="579.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="626.5" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (59 samples, 0.11%)</title><rect x="623.5" y="563.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="626.5" y="574.0"></text>
</g>
<g>
<title>byte[] (59 samples, 0.11%)</title><rect x="623.5" y="547.0" width="1.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="626.5" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (34 samples, 0.06%)</title><rect x="624.8" y="611.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="627.8" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (34 samples, 0.06%)</title><rect x="624.8" y="595.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="627.8" y="606.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (34 samples, 0.06%)</title><rect x="624.8" y="579.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="627.8" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.upsert (54 samples, 0.10%)</title><rect x="625.5" y="611.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="628.5" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.upsert (54 samples, 0.10%)</title><rect x="625.5" y="595.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="628.5" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.upsert (54 samples, 0.10%)</title><rect x="625.5" y="579.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="628.5" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Cell.of (21 samples, 0.04%)</title><rect x="625.7" y="563.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="628.7" y="574.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Cell (21 samples, 0.04%)</title><rect x="625.7" y="547.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="628.7" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.of (25 samples, 0.05%)</title><rect x="626.2" y="563.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="629.2" y="574.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Row (25 samples, 0.05%)</title><rect x="626.2" y="547.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="629.2" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (4,272 samples, 7.77%)</title><rect x="626.7" y="723.0" width="91.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="629.7" y="734.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (4,105 samples, 7.47%)</title><rect x="626.7" y="707.0" width="88.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="629.7" y="718.0">java/util/..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (18 samples, 0.03%)</title><rect x="626.7" y="691.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="629.7" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService$$Lambda$112/1643463642.apply (4,087 samples, 7.43%)</title><rect x="627.1" y="691.0" width="87.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="630.1" y="702.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.lambda$upsert$11 (4,087 samples, 7.43%)</title><rect x="627.1" y="675.0" width="87.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="630.1" y="686.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.getResponsesFromReplicas (4,087 samples, 7.43%)</title><rect x="627.1" y="659.0" width="87.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="630.1" y="670.0">ru/mail/po..</text>
</g>
<g>
<title>java.util.ArrayList (13 samples, 0.02%)</title><rect x="627.1" y="643.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="630.1" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (118 samples, 0.21%)</title><rect x="627.4" y="643.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="630.4" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1000975683.invoke (118 samples, 0.21%)</title><rect x="627.4" y="627.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="630.4" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (118 samples, 0.21%)</title><rect x="627.4" y="611.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="630.4" y="622.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (34 samples, 0.06%)</title><rect x="627.4" y="595.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="630.4" y="606.0"></text>
</g>
<g>
<title>java.lang.String (34 samples, 0.06%)</title><rect x="627.4" y="579.0" width="0.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="630.4" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (84 samples, 0.15%)</title><rect x="628.1" y="595.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="631.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (84 samples, 0.15%)</title><rect x="628.1" y="579.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="631.1" y="590.0"></text>
</g>
<g>
<title>byte[] (84 samples, 0.15%)</title><rect x="628.1" y="563.0" width="1.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="631.1" y="574.0"></text>
</g>
<g>
<title>java/net/URI.create (436 samples, 0.79%)</title><rect x="629.9" y="643.0" width="9.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="632.9" y="654.0"></text>
</g>
<g>
<title>java.net.URI (92 samples, 0.17%)</title><rect x="629.9" y="627.0" width="2.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="632.9" y="638.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (344 samples, 0.63%)</title><rect x="631.9" y="627.0" width="7.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="634.9" y="638.0"></text>
</g>
<g>
<title>java.net.URI$Parser (28 samples, 0.05%)</title><rect x="631.9" y="611.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="634.9" y="622.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (316 samples, 0.57%)</title><rect x="632.5" y="611.0" width="6.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="635.5" y="622.0"></text>
</g>
<g>
<title>java/lang/String.substring (51 samples, 0.09%)</title><rect x="632.5" y="595.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="635.5" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (51 samples, 0.09%)</title><rect x="632.5" y="579.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="635.5" y="590.0"></text>
</g>
<g>
<title>java.lang.String (24 samples, 0.04%)</title><rect x="632.5" y="563.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="635.5" y="574.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (27 samples, 0.05%)</title><rect x="633.0" y="563.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="636.0" y="574.0"></text>
</g>
<g>
<title>byte[] (27 samples, 0.05%)</title><rect x="633.0" y="547.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="636.0" y="558.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (265 samples, 0.48%)</title><rect x="633.6" y="595.0" width="5.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="636.6" y="606.0"></text>
</g>
<g>
<title>java/lang/String.substring (132 samples, 0.24%)</title><rect x="633.6" y="579.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="636.6" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (132 samples, 0.24%)</title><rect x="633.6" y="563.0" width="2.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="636.6" y="574.0"></text>
</g>
<g>
<title>java.lang.String (48 samples, 0.09%)</title><rect x="633.6" y="547.0" width="1.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="636.6" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (84 samples, 0.15%)</title><rect x="634.6" y="547.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="637.6" y="558.0"></text>
</g>
<g>
<title>byte[] (84 samples, 0.15%)</title><rect x="634.6" y="531.0" width="1.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="637.6" y="542.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (133 samples, 0.24%)</title><rect x="636.4" y="579.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="639.4" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (62 samples, 0.11%)</title><rect x="636.4" y="563.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="639.4" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (62 samples, 0.11%)</title><rect x="636.4" y="547.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="639.4" y="558.0"></text>
</g>
<g>
<title>java.lang.String (26 samples, 0.05%)</title><rect x="636.4" y="531.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="639.4" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (36 samples, 0.07%)</title><rect x="636.9" y="531.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="639.9" y="542.0"></text>
</g>
<g>
<title>byte[] (36 samples, 0.07%)</title><rect x="636.9" y="515.0" width="0.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="639.9" y="526.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (71 samples, 0.13%)</title><rect x="637.7" y="563.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="640.7" y="574.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (71 samples, 0.13%)</title><rect x="637.7" y="547.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="640.7" y="558.0"></text>
</g>
<g>
<title>java/lang/String.substring (71 samples, 0.13%)</title><rect x="637.7" y="531.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="640.7" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (71 samples, 0.13%)</title><rect x="637.7" y="515.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="640.7" y="526.0"></text>
</g>
<g>
<title>java.lang.String (32 samples, 0.06%)</title><rect x="637.7" y="499.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="640.7" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (39 samples, 0.07%)</title><rect x="638.4" y="499.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="641.4" y="510.0"></text>
</g>
<g>
<title>byte[] (39 samples, 0.07%)</title><rect x="638.4" y="483.0" width="0.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="641.4" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest$BodyPublishers.ofByteArray (38 samples, 0.07%)</title><rect x="639.2" y="643.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="642.2" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RequestPublishers$ByteArrayPublisher (38 samples, 0.07%)</title><rect x="639.2" y="627.0" width="0.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="642.2" y="638.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest.newBuilder (118 samples, 0.21%)</title><rect x="640.1" y="643.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="643.1" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestBuilderImpl (40 samples, 0.07%)</title><rect x="640.1" y="627.0" width="0.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="643.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.&lt;init&gt; (78 samples, 0.14%)</title><rect x="640.9" y="627.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="643.9" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (21 samples, 0.04%)</title><rect x="640.9" y="611.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="643.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (57 samples, 0.10%)</title><rect x="641.4" y="611.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="644.4" y="622.0"></text>
</g>
<g>
<title>java.util.TreeMap (57 samples, 0.10%)</title><rect x="641.4" y="595.0" width="1.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="644.4" y="606.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (36 samples, 0.07%)</title><rect x="642.6" y="643.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="645.6" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (36 samples, 0.07%)</title><rect x="642.6" y="627.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="645.6" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (36 samples, 0.07%)</title><rect x="642.6" y="611.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="645.6" y="622.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (36 samples, 0.07%)</title><rect x="642.6" y="595.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="645.6" y="606.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (36 samples, 0.07%)</title><rect x="642.6" y="579.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="645.6" y="590.0"></text>
</g>
<g>
<title>java.lang.Object[] (36 samples, 0.07%)</title><rect x="642.6" y="563.0" width="0.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="645.6" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (20 samples, 0.04%)</title><rect x="643.4" y="643.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="646.4" y="654.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (20 samples, 0.04%)</title><rect x="643.4" y="627.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="646.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (2,204 samples, 4.01%)</title><rect x="643.8" y="643.0" width="47.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="646.8" y="654.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (2,204 samples, 4.01%)</title><rect x="643.8" y="627.0" width="47.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="646.8" y="638.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (2,204 samples, 4.01%)</title><rect x="643.8" y="611.0" width="47.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="646.8" y="622.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (2,204 samples, 4.01%)</title><rect x="643.8" y="595.0" width="47.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="646.8" y="606.0">jdk/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (22 samples, 0.04%)</title><rect x="643.8" y="579.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="646.8" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (22 samples, 0.04%)</title><rect x="643.8" y="563.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="646.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$136/1535178212.get$Lambda (22 samples, 0.04%)</title><rect x="643.8" y="547.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="646.8" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$$Lambda$136 (22 samples, 0.04%)</title><rect x="643.8" y="531.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="646.8" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (85 samples, 0.15%)</title><rect x="644.3" y="579.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="647.3" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (85 samples, 0.15%)</title><rect x="644.3" y="563.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="647.3" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (55 samples, 0.10%)</title><rect x="644.3" y="547.0" width="1.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="647.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (30 samples, 0.05%)</title><rect x="645.4" y="547.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="648.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (30 samples, 0.05%)</title><rect x="645.4" y="531.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="648.4" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (30 samples, 0.05%)</title><rect x="645.4" y="515.0" width="0.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="648.4" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (70 samples, 0.13%)</title><rect x="646.1" y="579.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="649.1" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (70 samples, 0.13%)</title><rect x="646.1" y="563.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="649.1" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (44 samples, 0.08%)</title><rect x="646.1" y="547.0" width="0.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="649.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (26 samples, 0.05%)</title><rect x="647.0" y="547.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="650.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (26 samples, 0.05%)</title><rect x="647.0" y="531.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="650.0" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (26 samples, 0.05%)</title><rect x="647.0" y="515.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="650.0" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl (57 samples, 0.10%)</title><rect x="647.6" y="579.0" width="1.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="650.6" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange (108 samples, 0.20%)</title><rect x="648.8" y="579.0" width="2.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="651.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (1,077 samples, 1.96%)</title><rect x="651.1" y="579.0" width="23.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="654.1" y="590.0">j..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (118 samples, 0.21%)</title><rect x="651.1" y="563.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="654.1" y="574.0"></text>
</g>
<g>
<title>java/util/Collection.stream (98 samples, 0.18%)</title><rect x="651.1" y="547.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="654.1" y="558.0"></text>
</g>
<g>
<title>java/util/List.spliterator (36 samples, 0.07%)</title><rect x="651.1" y="531.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="654.1" y="542.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (36 samples, 0.07%)</title><rect x="651.1" y="515.0" width="0.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="654.1" y="526.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (62 samples, 0.11%)</title><rect x="651.9" y="531.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="654.9" y="542.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (62 samples, 0.11%)</title><rect x="651.9" y="515.0" width="1.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="654.9" y="526.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (20 samples, 0.04%)</title><rect x="653.2" y="547.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="656.2" y="558.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (20 samples, 0.04%)</title><rect x="653.2" y="531.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="656.2" y="542.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (20 samples, 0.04%)</title><rect x="653.2" y="515.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="656.2" y="526.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$52/78204644.get (20 samples, 0.04%)</title><rect x="653.2" y="499.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="656.2" y="510.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (20 samples, 0.04%)</title><rect x="653.2" y="483.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="656.2" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (429 samples, 0.78%)</title><rect x="653.7" y="563.0" width="9.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="656.7" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (429 samples, 0.78%)</title><rect x="653.7" y="547.0" width="9.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="656.7" y="558.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (12 samples, 0.02%)</title><rect x="653.7" y="531.0" width="0.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="656.7" y="542.0"></text>
</g>
<g>
<title>java.util.ArrayList (43 samples, 0.08%)</title><rect x="653.9" y="531.0" width="1.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="656.9" y="542.0"></text>
</g>
<g>
<title>java.util.TreeMap (46 samples, 0.08%)</title><rect x="654.9" y="531.0" width="0.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="657.9" y="542.0"></text>
</g>
<g>
<title>java.util.TreeSet (14 samples, 0.03%)</title><rect x="655.8" y="531.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="658.8" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (39 samples, 0.07%)</title><rect x="656.1" y="531.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="659.1" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (39 samples, 0.07%)</title><rect x="656.1" y="515.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="659.1" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$126/1936481830.get$Lambda (39 samples, 0.07%)</title><rect x="656.1" y="499.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="659.1" y="510.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$126 (39 samples, 0.07%)</title><rect x="656.1" y="483.0" width="0.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="659.1" y="494.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (171 samples, 0.31%)</title><rect x="657.0" y="531.0" width="3.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="660.0" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (171 samples, 0.31%)</title><rect x="657.0" y="515.0" width="3.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="660.0" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$126/1936481830.accept (171 samples, 0.31%)</title><rect x="657.0" y="499.0" width="3.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="660.0" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (171 samples, 0.31%)</title><rect x="657.0" y="483.0" width="3.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="660.0" y="494.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (63 samples, 0.11%)</title><rect x="657.0" y="467.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="660.0" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$128/2001978515.accept (63 samples, 0.11%)</title><rect x="657.0" y="451.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="660.0" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (63 samples, 0.11%)</title><rect x="657.0" y="435.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="660.0" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (63 samples, 0.11%)</title><rect x="657.0" y="419.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="660.0" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (63 samples, 0.11%)</title><rect x="657.0" y="403.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="660.0" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (63 samples, 0.11%)</title><rect x="657.0" y="387.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="660.0" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (63 samples, 0.11%)</title><rect x="657.0" y="371.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="660.0" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (63 samples, 0.11%)</title><rect x="657.0" y="355.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="660.0" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (63 samples, 0.11%)</title><rect x="657.0" y="339.0" width="1.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="660.0" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (22 samples, 0.04%)</title><rect x="658.3" y="467.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="661.3" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (22 samples, 0.04%)</title><rect x="658.3" y="451.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="661.3" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$128/2001978515.get$Lambda (22 samples, 0.04%)</title><rect x="658.3" y="435.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="661.3" y="446.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$128 (22 samples, 0.04%)</title><rect x="658.3" y="419.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="661.3" y="430.0"></text>
</g>
<g>
<title>java/util/List.copyOf (45 samples, 0.08%)</title><rect x="658.8" y="467.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="661.8" y="478.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (45 samples, 0.08%)</title><rect x="658.8" y="451.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="661.8" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (22 samples, 0.04%)</title><rect x="658.8" y="435.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="661.8" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (22 samples, 0.04%)</title><rect x="658.8" y="419.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="661.8" y="430.0"></text>
</g>
<g>
<title>java.lang.Object[] (22 samples, 0.04%)</title><rect x="658.8" y="403.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="661.8" y="414.0"></text>
</g>
<g>
<title>java/util/List.of (23 samples, 0.04%)</title><rect x="659.3" y="435.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="662.3" y="446.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (23 samples, 0.04%)</title><rect x="659.3" y="419.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="662.3" y="430.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (41 samples, 0.07%)</title><rect x="659.8" y="467.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="662.8" y="478.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (41 samples, 0.07%)</title><rect x="659.8" y="451.0" width="0.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="662.8" y="462.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (40 samples, 0.07%)</title><rect x="660.6" y="531.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="663.6" y="542.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (40 samples, 0.07%)</title><rect x="660.6" y="515.0" width="0.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="663.6" y="526.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (64 samples, 0.12%)</title><rect x="661.5" y="531.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="664.5" y="542.0"></text>
</g>
<g>
<title>java.util.TreeMap (64 samples, 0.12%)</title><rect x="661.5" y="515.0" width="1.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="664.5" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (16 samples, 0.03%)</title><rect x="662.9" y="563.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="665.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (346 samples, 0.63%)</title><rect x="663.2" y="563.0" width="7.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="666.2" y="574.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (346 samples, 0.63%)</title><rect x="663.2" y="547.0" width="7.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="666.2" y="558.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (308 samples, 0.56%)</title><rect x="663.2" y="531.0" width="6.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="666.2" y="542.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (308 samples, 0.56%)</title><rect x="663.2" y="515.0" width="6.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="666.2" y="526.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (308 samples, 0.56%)</title><rect x="663.2" y="499.0" width="6.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="666.2" y="510.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (79 samples, 0.14%)</title><rect x="663.2" y="483.0" width="1.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="666.2" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (101 samples, 0.18%)</title><rect x="664.9" y="483.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="667.9" y="494.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (101 samples, 0.18%)</title><rect x="664.9" y="467.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="667.9" y="478.0"></text>
</g>
<g>
<title>byte[] (101 samples, 0.18%)</title><rect x="664.9" y="451.0" width="2.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="667.9" y="462.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (128 samples, 0.23%)</title><rect x="667.1" y="483.0" width="2.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="670.1" y="494.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (128 samples, 0.23%)</title><rect x="667.1" y="467.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="670.1" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (128 samples, 0.23%)</title><rect x="667.1" y="451.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="670.1" y="462.0"></text>
</g>
<g>
<title>byte[] (128 samples, 0.23%)</title><rect x="667.1" y="435.0" width="2.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="670.1" y="446.0"></text>
</g>
<g>
<title>sun.net.spi.DefaultProxySelector$4 (38 samples, 0.07%)</title><rect x="669.8" y="531.0" width="0.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="672.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (61 samples, 0.11%)</title><rect x="670.6" y="563.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="673.6" y="574.0"></text>
</g>
<g>
<title>java.util.TreeMap (61 samples, 0.11%)</title><rect x="670.6" y="547.0" width="1.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="673.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (107 samples, 0.19%)</title><rect x="672.0" y="563.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="675.0" y="574.0"></text>
</g>
<g>
<title>java.util.ArrayList (28 samples, 0.05%)</title><rect x="672.0" y="547.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="675.0" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (31 samples, 0.06%)</title><rect x="672.6" y="547.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="675.6" y="558.0"></text>
</g>
<g>
<title>java.lang.Object[] (31 samples, 0.06%)</title><rect x="672.6" y="531.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="675.6" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (48 samples, 0.09%)</title><rect x="673.2" y="547.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="676.2" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (48 samples, 0.09%)</title><rect x="673.2" y="531.0" width="1.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="676.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (495 samples, 0.90%)</title><rect x="674.3" y="579.0" width="10.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="677.3" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (19 samples, 0.03%)</title><rect x="674.3" y="563.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="677.3" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange (84 samples, 0.15%)</title><rect x="674.7" y="563.0" width="1.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="677.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.&lt;init&gt; (17 samples, 0.03%)</title><rect x="676.5" y="563.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="679.5" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$ConnectionAborter (17 samples, 0.03%)</title><rect x="676.5" y="547.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="679.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (375 samples, 0.68%)</title><rect x="676.8" y="563.0" width="8.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="679.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (375 samples, 0.68%)</title><rect x="676.8" y="547.0" width="8.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="679.8" y="558.0"></text>
</g>
<g>
<title>java.lang.Object[] (30 samples, 0.05%)</title><rect x="676.8" y="531.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="679.8" y="542.0"></text>
</g>
<g>
<title>java.util.LinkedList (44 samples, 0.08%)</title><rect x="677.5" y="531.0" width="0.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="680.5" y="542.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (180 samples, 0.33%)</title><rect x="678.4" y="531.0" width="3.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="681.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (180 samples, 0.33%)</title><rect x="678.4" y="515.0" width="3.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="681.4" y="526.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyConstructor (180 samples, 0.33%)</title><rect x="678.4" y="499.0" width="3.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="681.4" y="510.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.copy (180 samples, 0.33%)</title><rect x="678.4" y="483.0" width="3.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="681.4" y="494.0"></text>
</g>
<g>
<title>java.lang.reflect.Constructor (180 samples, 0.33%)</title><rect x="678.4" y="467.0" width="3.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="681.4" y="478.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (67 samples, 0.12%)</title><rect x="682.3" y="531.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="685.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (67 samples, 0.12%)</title><rect x="682.3" y="515.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="685.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor7.newInstance (19 samples, 0.03%)</title><rect x="682.3" y="499.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="685.3" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.AuthenticationFilter (19 samples, 0.03%)</title><rect x="682.3" y="483.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="685.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor8.newInstance (48 samples, 0.09%)</title><rect x="682.7" y="499.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="685.7" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RedirectFilter (48 samples, 0.09%)</title><rect x="682.7" y="483.0" width="1.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="685.7" y="494.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (54 samples, 0.10%)</title><rect x="683.7" y="531.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="686.7" y="542.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (54 samples, 0.10%)</title><rect x="683.7" y="515.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="686.7" y="526.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (54 samples, 0.10%)</title><rect x="683.7" y="499.0" width="1.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="686.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (290 samples, 0.53%)</title><rect x="684.9" y="579.0" width="6.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="687.9" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (51 samples, 0.09%)</title><rect x="684.9" y="563.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="687.9" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (23 samples, 0.04%)</title><rect x="684.9" y="547.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="687.9" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (28 samples, 0.05%)</title><rect x="685.4" y="547.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="688.4" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (28 samples, 0.05%)</title><rect x="685.4" y="531.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="688.4" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (28 samples, 0.05%)</title><rect x="685.4" y="515.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="688.4" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (33 samples, 0.06%)</title><rect x="686.0" y="563.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="689.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (206 samples, 0.37%)</title><rect x="686.7" y="563.0" width="4.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="689.7" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (34 samples, 0.06%)</title><rect x="686.7" y="547.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="689.7" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (34 samples, 0.06%)</title><rect x="686.7" y="531.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="689.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$133/1711595431.get$Lambda (18 samples, 0.03%)</title><rect x="686.7" y="515.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="689.7" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$133 (18 samples, 0.03%)</title><rect x="686.7" y="499.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="689.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$134/2113557447.get$Lambda (16 samples, 0.03%)</title><rect x="687.1" y="515.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="690.1" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$134 (16 samples, 0.03%)</title><rect x="687.1" y="499.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="690.1" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (172 samples, 0.31%)</title><rect x="687.4" y="547.0" width="3.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="690.4" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (172 samples, 0.31%)</title><rect x="687.4" y="531.0" width="3.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="690.4" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (109 samples, 0.20%)</title><rect x="687.4" y="515.0" width="2.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="690.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (63 samples, 0.11%)</title><rect x="689.7" y="515.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="692.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (63 samples, 0.11%)</title><rect x="689.7" y="499.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="692.7" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (63 samples, 0.11%)</title><rect x="689.7" y="483.0" width="1.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="692.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (517 samples, 0.94%)</title><rect x="691.1" y="643.0" width="11.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="694.1" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ImmutableHttpRequest (50 samples, 0.09%)</title><rect x="691.1" y="627.0" width="1.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="694.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (467 samples, 0.85%)</title><rect x="692.2" y="627.0" width="10.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="695.2" y="638.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (448 samples, 0.81%)</title><rect x="692.2" y="611.0" width="9.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="695.2" y="622.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (448 samples, 0.81%)</title><rect x="692.2" y="595.0" width="9.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="695.2" y="606.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (25 samples, 0.05%)</title><rect x="692.2" y="579.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="695.2" y="590.0"></text>
</g>
<g>
<title>java.util.ArrayList (32 samples, 0.06%)</title><rect x="692.7" y="579.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="695.7" y="590.0"></text>
</g>
<g>
<title>java.util.TreeMap (68 samples, 0.12%)</title><rect x="693.4" y="579.0" width="1.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="696.4" y="590.0"></text>
</g>
<g>
<title>java.util.TreeSet (17 samples, 0.03%)</title><rect x="694.9" y="579.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="697.9" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (38 samples, 0.07%)</title><rect x="695.2" y="579.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="698.2" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (38 samples, 0.07%)</title><rect x="695.2" y="563.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="698.2" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$126/1936481830.get$Lambda (38 samples, 0.07%)</title><rect x="695.2" y="547.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="698.2" y="558.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$126 (38 samples, 0.07%)</title><rect x="695.2" y="531.0" width="0.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="698.2" y="542.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (28 samples, 0.05%)</title><rect x="696.0" y="579.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="699.0" y="590.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (28 samples, 0.05%)</title><rect x="696.0" y="563.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="699.0" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (193 samples, 0.35%)</title><rect x="696.6" y="579.0" width="4.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="699.6" y="590.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$126/1936481830.accept (193 samples, 0.35%)</title><rect x="696.6" y="563.0" width="4.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="699.6" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (193 samples, 0.35%)</title><rect x="696.6" y="547.0" width="4.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="699.6" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (27 samples, 0.05%)</title><rect x="696.6" y="531.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="699.6" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (27 samples, 0.05%)</title><rect x="696.6" y="515.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="699.6" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$128/2001978515.get$Lambda (27 samples, 0.05%)</title><rect x="696.6" y="499.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="699.6" y="510.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$128 (27 samples, 0.05%)</title><rect x="696.6" y="483.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="699.6" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (66 samples, 0.12%)</title><rect x="697.2" y="531.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="700.2" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$128/2001978515.accept (66 samples, 0.12%)</title><rect x="697.2" y="515.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="700.2" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (66 samples, 0.12%)</title><rect x="697.2" y="499.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="700.2" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (66 samples, 0.12%)</title><rect x="697.2" y="483.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="700.2" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (66 samples, 0.12%)</title><rect x="697.2" y="467.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="700.2" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (66 samples, 0.12%)</title><rect x="697.2" y="451.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="700.2" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (66 samples, 0.12%)</title><rect x="697.2" y="435.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="700.2" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (66 samples, 0.12%)</title><rect x="697.2" y="419.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="700.2" y="430.0"></text>
</g>
<g>
<title>java.lang.Object[] (66 samples, 0.12%)</title><rect x="697.2" y="403.0" width="1.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="700.2" y="414.0"></text>
</g>
<g>
<title>java/util/List.copyOf (60 samples, 0.11%)</title><rect x="698.6" y="531.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="701.6" y="542.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (60 samples, 0.11%)</title><rect x="698.6" y="515.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="701.6" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (31 samples, 0.06%)</title><rect x="698.6" y="499.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="701.6" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (31 samples, 0.06%)</title><rect x="698.6" y="483.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="701.6" y="494.0"></text>
</g>
<g>
<title>java.lang.Object[] (31 samples, 0.06%)</title><rect x="698.6" y="467.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="701.6" y="478.0"></text>
</g>
<g>
<title>java/util/List.of (29 samples, 0.05%)</title><rect x="699.3" y="499.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="702.3" y="510.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (29 samples, 0.05%)</title><rect x="699.3" y="483.0" width="0.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="702.3" y="494.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (40 samples, 0.07%)</title><rect x="699.9" y="531.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="702.9" y="542.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (40 samples, 0.07%)</title><rect x="699.9" y="515.0" width="0.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="702.9" y="526.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (47 samples, 0.09%)</title><rect x="700.8" y="579.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="703.8" y="590.0"></text>
</g>
<g>
<title>java.util.TreeMap (47 samples, 0.09%)</title><rect x="700.8" y="563.0" width="1.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="703.8" y="574.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (19 samples, 0.03%)</title><rect x="701.8" y="611.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="704.8" y="622.0"></text>
</g>
<g>
<title>java/util/Optional.of (19 samples, 0.03%)</title><rect x="701.8" y="595.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="704.8" y="606.0"></text>
</g>
<g>
<title>java.util.Optional (19 samples, 0.03%)</title><rect x="701.8" y="579.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="704.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.setHeader (111 samples, 0.20%)</title><rect x="702.2" y="643.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="705.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.setHeader (111 samples, 0.20%)</title><rect x="702.2" y="627.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="705.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (111 samples, 0.20%)</title><rect x="702.2" y="611.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="705.2" y="622.0"></text>
</g>
<g>
<title>java.util.ArrayList (32 samples, 0.06%)</title><rect x="702.2" y="595.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="705.2" y="606.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (30 samples, 0.05%)</title><rect x="702.9" y="595.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="705.9" y="606.0"></text>
</g>
<g>
<title>java.lang.Object[] (30 samples, 0.05%)</title><rect x="702.9" y="579.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="705.9" y="590.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (49 samples, 0.09%)</title><rect x="703.5" y="595.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="706.5" y="606.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (49 samples, 0.09%)</title><rect x="703.5" y="579.0" width="1.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="706.5" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.getFirstResponses (476 samples, 0.87%)</title><rect x="704.6" y="643.0" width="10.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="707.6" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (14 samples, 0.03%)</title><rect x="704.6" y="627.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="707.6" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.CopyOnWriteArrayList (14 samples, 0.03%)</title><rect x="704.9" y="627.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="707.9" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1809201726.linkToTargetMethod (17 samples, 0.03%)</title><rect x="705.3" y="627.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="708.3" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1600727716.invokeStatic (17 samples, 0.03%)</title><rect x="705.3" y="611.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="708.3" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService$$Lambda$142/147332196.get$Lambda (17 samples, 0.03%)</title><rect x="705.3" y="595.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="708.3" y="606.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.HttpService$$Lambda$142 (17 samples, 0.03%)</title><rect x="705.3" y="579.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="708.3" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (73 samples, 0.13%)</title><rect x="705.7" y="627.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="708.7" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (73 samples, 0.13%)</title><rect x="705.7" y="611.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="708.7" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniExceptionally (35 samples, 0.06%)</title><rect x="705.7" y="595.0" width="0.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="708.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (38 samples, 0.07%)</title><rect x="706.4" y="595.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="709.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (38 samples, 0.07%)</title><rect x="706.4" y="579.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="709.4" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (38 samples, 0.07%)</title><rect x="706.4" y="563.0" width="0.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="709.4" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.orTimeout (240 samples, 0.44%)</title><rect x="707.2" y="627.0" width="5.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="710.2" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$Canceller (25 samples, 0.05%)</title><rect x="707.2" y="611.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="710.2" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$Timeout (21 samples, 0.04%)</title><rect x="707.8" y="611.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="710.8" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Delayer.delay (106 samples, 0.19%)</title><rect x="708.2" y="611.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="711.2" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor.schedule (106 samples, 0.19%)</title><rect x="708.2" y="595.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="711.2" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask (73 samples, 0.13%)</title><rect x="708.2" y="579.0" width="1.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="711.2" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$ScheduledFutureTask.&lt;init&gt; (33 samples, 0.06%)</title><rect x="709.8" y="579.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="712.8" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.&lt;init&gt; (33 samples, 0.06%)</title><rect x="709.8" y="563.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="712.8" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors.callable (33 samples, 0.06%)</title><rect x="709.8" y="547.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="712.8" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.Executors$RunnableAdapter (33 samples, 0.06%)</title><rect x="709.8" y="531.0" width="0.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="712.8" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (88 samples, 0.16%)</title><rect x="710.5" y="611.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="713.5" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (88 samples, 0.16%)</title><rect x="710.5" y="595.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="713.5" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (45 samples, 0.08%)</title><rect x="710.5" y="579.0" width="0.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="713.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (43 samples, 0.08%)</title><rect x="711.4" y="579.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="714.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (43 samples, 0.08%)</title><rect x="711.4" y="563.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="714.4" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (43 samples, 0.08%)</title><rect x="711.4" y="547.0" width="1.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="714.4" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (99 samples, 0.18%)</title><rect x="712.4" y="627.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="715.4" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (99 samples, 0.18%)</title><rect x="712.4" y="611.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="715.4" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (46 samples, 0.08%)</title><rect x="712.4" y="595.0" width="1.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="715.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (53 samples, 0.10%)</title><rect x="713.4" y="595.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="716.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (53 samples, 0.10%)</title><rect x="713.4" y="579.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="716.4" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (53 samples, 0.10%)</title><rect x="713.4" y="563.0" width="1.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="716.4" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.&lt;init&gt; (14 samples, 0.03%)</title><rect x="714.5" y="627.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="717.5" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (167 samples, 0.30%)</title><rect x="714.8" y="707.0" width="3.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="717.8" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (167 samples, 0.30%)</title><rect x="714.8" y="691.0" width="3.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="717.8" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService$$Lambda$114/362305471.accept (142 samples, 0.26%)</title><rect x="714.8" y="675.0" width="3.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="717.8" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.lambda$upsert$14 (142 samples, 0.26%)</title><rect x="714.8" y="659.0" width="3.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="717.8" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.handleResponses (142 samples, 0.26%)</title><rect x="714.8" y="643.0" width="3.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="717.8" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService$$Lambda$249/1337300832.get (75 samples, 0.14%)</title><rect x="714.8" y="627.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="717.8" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.lambda$upsert$13 (75 samples, 0.14%)</title><rect x="714.8" y="611.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="717.8" y="622.0"></text>
</g>
<g>
<title>one.nio.http.Response (15 samples, 0.03%)</title><rect x="714.8" y="595.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="717.8" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (60 samples, 0.11%)</title><rect x="715.1" y="595.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="718.1" y="606.0"></text>
</g>
<g>
<title>byte[] (26 samples, 0.05%)</title><rect x="715.1" y="579.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="718.1" y="590.0"></text>
</g>
<g>
<title>java.lang.String[] (16 samples, 0.03%)</title><rect x="715.7" y="579.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="718.7" y="590.0"></text>
</g>
<g>
<title>java.lang.String (18 samples, 0.03%)</title><rect x="716.0" y="579.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="719.0" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.sendResponse (67 samples, 0.12%)</title><rect x="716.4" y="627.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="719.4" y="638.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (67 samples, 0.12%)</title><rect x="716.4" y="611.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="719.4" y="622.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (67 samples, 0.12%)</title><rect x="716.4" y="595.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="719.4" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (52 samples, 0.09%)</title><rect x="716.4" y="579.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="719.4" y="590.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (52 samples, 0.09%)</title><rect x="716.4" y="563.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="719.4" y="574.0"></text>
</g>
<g>
<title>byte[] (52 samples, 0.09%)</title><rect x="716.4" y="547.0" width="1.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="719.4" y="558.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (15 samples, 0.03%)</title><rect x="717.5" y="579.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="720.5" y="590.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (15 samples, 0.03%)</title><rect x="717.5" y="563.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="720.5" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService$$Lambda$142/147332196.accept (25 samples, 0.05%)</title><rect x="717.8" y="675.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="720.8" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.lambda$getFirstResponses$25 (25 samples, 0.05%)</title><rect x="717.8" y="659.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="720.8" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.add (25 samples, 0.05%)</title><rect x="717.8" y="643.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="720.8" y="654.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (25 samples, 0.05%)</title><rect x="717.8" y="627.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="720.8" y="638.0"></text>
</g>
<g>
<title>java.lang.Object[] (25 samples, 0.05%)</title><rect x="717.8" y="611.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="720.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (1,643 samples, 2.99%)</title><rect x="718.4" y="803.0" width="35.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="721.4" y="814.0">jdk..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (38 samples, 0.07%)</title><rect x="718.4" y="787.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="721.4" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (38 samples, 0.07%)</title><rect x="718.4" y="771.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="721.4" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$196/1558914017.get$Lambda (21 samples, 0.04%)</title><rect x="718.4" y="755.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="721.4" y="766.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$196 (21 samples, 0.04%)</title><rect x="718.4" y="739.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="721.4" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/896644936.linkToTargetMethod (34 samples, 0.06%)</title><rect x="719.2" y="787.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="722.2" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (34 samples, 0.06%)</title><rect x="719.2" y="771.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="722.2" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$197/2022555883.get$Lambda (34 samples, 0.06%)</title><rect x="719.2" y="755.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="722.2" y="766.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$197 (34 samples, 0.06%)</title><rect x="719.2" y="739.0" width="0.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="722.2" y="750.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (254 samples, 0.46%)</title><rect x="719.9" y="787.0" width="5.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="722.9" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$198/1799291049.accept (206 samples, 0.37%)</title><rect x="719.9" y="771.0" width="4.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="722.9" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (206 samples, 0.37%)</title><rect x="719.9" y="755.0" width="4.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="722.9" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (206 samples, 0.37%)</title><rect x="719.9" y="739.0" width="4.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="722.9" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (206 samples, 0.37%)</title><rect x="719.9" y="723.0" width="4.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="722.9" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (206 samples, 0.37%)</title><rect x="719.9" y="707.0" width="4.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="722.9" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (206 samples, 0.37%)</title><rect x="719.9" y="691.0" width="4.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="722.9" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (206 samples, 0.37%)</title><rect x="719.9" y="675.0" width="4.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="722.9" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (206 samples, 0.37%)</title><rect x="719.9" y="659.0" width="4.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="722.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (206 samples, 0.37%)</title><rect x="719.9" y="643.0" width="4.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="722.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (206 samples, 0.37%)</title><rect x="719.9" y="627.0" width="4.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="722.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$157/1360780123.run (206 samples, 0.37%)</title><rect x="719.9" y="611.0" width="4.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="722.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (206 samples, 0.37%)</title><rect x="719.9" y="595.0" width="4.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="722.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (65 samples, 0.12%)</title><rect x="719.9" y="579.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="722.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (65 samples, 0.12%)</title><rect x="719.9" y="563.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="722.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (65 samples, 0.12%)</title><rect x="719.9" y="547.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="722.9" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offer (33 samples, 0.06%)</title><rect x="719.9" y="531.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="722.9" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (33 samples, 0.06%)</title><rect x="719.9" y="515.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="722.9" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (33 samples, 0.06%)</title><rect x="719.9" y="499.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="722.9" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (33 samples, 0.06%)</title><rect x="719.9" y="483.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="722.9" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (33 samples, 0.06%)</title><rect x="719.9" y="467.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="722.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (32 samples, 0.06%)</title><rect x="720.6" y="531.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="723.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (32 samples, 0.06%)</title><rect x="720.6" y="515.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="723.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (32 samples, 0.06%)</title><rect x="720.6" y="499.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="723.6" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (32 samples, 0.06%)</title><rect x="720.6" y="483.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="723.6" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (32 samples, 0.06%)</title><rect x="720.6" y="467.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="723.6" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (32 samples, 0.06%)</title><rect x="720.6" y="451.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="723.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (24 samples, 0.04%)</title><rect x="721.3" y="579.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="724.3" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (24 samples, 0.04%)</title><rect x="721.3" y="563.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="724.3" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (24 samples, 0.04%)</title><rect x="721.3" y="547.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="724.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$206/1914759753.get$Lambda (24 samples, 0.04%)</title><rect x="721.3" y="531.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="724.3" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$206 (24 samples, 0.04%)</title><rect x="721.3" y="515.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="724.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (117 samples, 0.21%)</title><rect x="721.8" y="579.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="724.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.append (117 samples, 0.21%)</title><rect x="721.8" y="563.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="724.8" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (84 samples, 0.15%)</title><rect x="721.8" y="547.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="724.8" y="558.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (84 samples, 0.15%)</title><rect x="721.8" y="531.0" width="1.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="724.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.listOf (33 samples, 0.06%)</title><rect x="723.6" y="547.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="726.6" y="558.0"></text>
</g>
<g>
<title>java/util/List.of (33 samples, 0.06%)</title><rect x="723.6" y="531.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="726.6" y="542.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (33 samples, 0.06%)</title><rect x="723.6" y="515.0" width="0.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="726.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$201/1629457336.accept (48 samples, 0.09%)</title><rect x="724.3" y="771.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="727.3" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (48 samples, 0.09%)</title><rect x="724.3" y="755.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="727.3" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$197/2022555883.run (48 samples, 0.09%)</title><rect x="724.3" y="739.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="727.3" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (48 samples, 0.09%)</title><rect x="724.3" y="723.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="727.3" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (48 samples, 0.09%)</title><rect x="724.3" y="707.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="727.3" y="718.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (48 samples, 0.09%)</title><rect x="724.3" y="691.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="727.3" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (48 samples, 0.09%)</title><rect x="724.3" y="675.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="727.3" y="686.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (48 samples, 0.09%)</title><rect x="724.3" y="659.0" width="1.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="727.3" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (232 samples, 0.42%)</title><rect x="725.4" y="787.0" width="5.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="728.4" y="798.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (232 samples, 0.42%)</title><rect x="725.4" y="771.0" width="5.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="728.4" y="782.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (69 samples, 0.13%)</title><rect x="730.4" y="787.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="733.4" y="798.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (38 samples, 0.07%)</title><rect x="730.4" y="771.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="733.4" y="782.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (38 samples, 0.07%)</title><rect x="730.4" y="755.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="733.4" y="766.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (38 samples, 0.07%)</title><rect x="730.4" y="739.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="733.4" y="750.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (38 samples, 0.07%)</title><rect x="730.4" y="723.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="733.4" y="734.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (38 samples, 0.07%)</title><rect x="730.4" y="707.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="733.4" y="718.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (38 samples, 0.07%)</title><rect x="730.4" y="691.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="733.4" y="702.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2$1 (38 samples, 0.07%)</title><rect x="730.4" y="675.0" width="0.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="733.4" y="686.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps.makeRef (31 samples, 0.06%)</title><rect x="731.2" y="771.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="734.2" y="782.0"></text>
</g>
<g>
<title>java.util.stream.ForEachOps$ForEachOp$OfRef (31 samples, 0.06%)</title><rect x="731.2" y="755.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="734.2" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (254 samples, 0.46%)</title><rect x="731.8" y="787.0" width="5.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="734.8" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$159/717507571.run (123 samples, 0.22%)</title><rect x="731.8" y="771.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="734.8" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (123 samples, 0.22%)</title><rect x="731.8" y="755.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="734.8" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (123 samples, 0.22%)</title><rect x="731.8" y="739.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="734.8" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (123 samples, 0.22%)</title><rect x="731.8" y="723.0" width="2.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="734.8" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (123 samples, 0.22%)</title><rect x="731.8" y="707.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="734.8" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (123 samples, 0.22%)</title><rect x="731.8" y="691.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="734.8" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$157/1360780123.run (123 samples, 0.22%)</title><rect x="731.8" y="675.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="734.8" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (123 samples, 0.22%)</title><rect x="731.8" y="659.0" width="2.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="734.8" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (123 samples, 0.22%)</title><rect x="731.8" y="643.0" width="2.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="734.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (123 samples, 0.22%)</title><rect x="731.8" y="627.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="734.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (87 samples, 0.16%)</title><rect x="731.8" y="611.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="734.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (87 samples, 0.16%)</title><rect x="731.8" y="595.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="734.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (87 samples, 0.16%)</title><rect x="731.8" y="579.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="734.8" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/623247230.linkToTargetMethod (58 samples, 0.11%)</title><rect x="731.8" y="563.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="734.8" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/773662650.invoke (58 samples, 0.11%)</title><rect x="731.8" y="547.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="734.8" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (58 samples, 0.11%)</title><rect x="731.8" y="531.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="734.8" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (58 samples, 0.11%)</title><rect x="731.8" y="515.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="734.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (58 samples, 0.11%)</title><rect x="731.8" y="499.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="734.8" y="510.0"></text>
</g>
<g>
<title>byte[] (58 samples, 0.11%)</title><rect x="731.8" y="483.0" width="1.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="734.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (29 samples, 0.05%)</title><rect x="733.1" y="563.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="736.1" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (29 samples, 0.05%)</title><rect x="733.1" y="547.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="736.1" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (29 samples, 0.05%)</title><rect x="733.1" y="531.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="736.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$206/1914759753.get$Lambda (29 samples, 0.05%)</title><rect x="733.1" y="515.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="736.1" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$206 (29 samples, 0.05%)</title><rect x="733.1" y="499.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="736.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (36 samples, 0.07%)</title><rect x="733.7" y="611.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="736.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (36 samples, 0.07%)</title><rect x="733.7" y="595.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="736.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (36 samples, 0.07%)</title><rect x="733.7" y="579.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="736.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (36 samples, 0.07%)</title><rect x="733.7" y="563.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="736.7" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (36 samples, 0.07%)</title><rect x="733.7" y="547.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="736.7" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (36 samples, 0.07%)</title><rect x="733.7" y="531.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="736.7" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (36 samples, 0.07%)</title><rect x="733.7" y="515.0" width="0.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="736.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$161/782771317.run (131 samples, 0.24%)</title><rect x="734.5" y="771.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="737.5" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (131 samples, 0.24%)</title><rect x="734.5" y="755.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="737.5" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (57 samples, 0.10%)</title><rect x="734.5" y="739.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="737.5" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (57 samples, 0.10%)</title><rect x="734.5" y="723.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="737.5" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$205/1532762392.get$Lambda (57 samples, 0.10%)</title><rect x="734.5" y="707.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="737.5" y="718.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$$Lambda$205 (57 samples, 0.10%)</title><rect x="734.5" y="691.0" width="1.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="737.5" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (74 samples, 0.13%)</title><rect x="735.7" y="739.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="738.7" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (74 samples, 0.13%)</title><rect x="735.7" y="723.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="738.7" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (74 samples, 0.13%)</title><rect x="735.7" y="707.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="738.7" y="718.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (74 samples, 0.13%)</title><rect x="735.7" y="691.0" width="1.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="738.7" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (361 samples, 0.66%)</title><rect x="737.3" y="787.0" width="7.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="740.3" y="798.0"></text>
</g>
<g>
<title>java/time/Instant.now (53 samples, 0.10%)</title><rect x="737.3" y="771.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="740.3" y="782.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (53 samples, 0.10%)</title><rect x="737.3" y="755.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="740.3" y="766.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (53 samples, 0.10%)</title><rect x="737.3" y="739.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="740.3" y="750.0"></text>
</g>
<g>
<title>java/time/Instant.create (53 samples, 0.10%)</title><rect x="737.3" y="723.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="740.3" y="734.0"></text>
</g>
<g>
<title>java.time.Instant (53 samples, 0.10%)</title><rect x="737.3" y="707.0" width="1.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="740.3" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (308 samples, 0.56%)</title><rect x="738.4" y="771.0" width="6.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="741.4" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (39 samples, 0.07%)</title><rect x="738.4" y="755.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="741.4" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (39 samples, 0.07%)</title><rect x="738.4" y="739.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="741.4" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$$Lambda$247/693251949.get$Lambda (39 samples, 0.07%)</title><rect x="738.4" y="723.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="741.4" y="734.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$$Lambda$247 (39 samples, 0.07%)</title><rect x="738.4" y="707.0" width="0.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="741.4" y="718.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (84 samples, 0.15%)</title><rect x="739.3" y="755.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="742.3" y="766.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (84 samples, 0.15%)</title><rect x="739.3" y="739.0" width="1.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="742.3" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.nextExpiryDeadline (40 samples, 0.07%)</title><rect x="741.1" y="755.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="744.1" y="766.0"></text>
</g>
<g>
<title>java/util/Optional.of (40 samples, 0.07%)</title><rect x="741.1" y="739.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="744.1" y="750.0"></text>
</g>
<g>
<title>java.util.Optional (40 samples, 0.07%)</title><rect x="741.1" y="723.0" width="0.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="744.1" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (145 samples, 0.26%)</title><rect x="741.9" y="755.0" width="3.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="744.9" y="766.0"></text>
</g>
<g>
<title>java.util.ArrayList (62 samples, 0.11%)</title><rect x="741.9" y="739.0" width="1.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="744.9" y="750.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (83 samples, 0.15%)</title><rect x="743.3" y="739.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="746.3" y="750.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (83 samples, 0.15%)</title><rect x="743.3" y="723.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="746.3" y="734.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (83 samples, 0.15%)</title><rect x="743.3" y="707.0" width="1.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="746.3" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.events (265 samples, 0.48%)</title><rect x="745.0" y="787.0" width="5.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="748.0" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (28 samples, 0.05%)</title><rect x="745.0" y="771.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="748.0" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (28 samples, 0.05%)</title><rect x="745.0" y="755.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="748.0" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment$$Lambda$195/395347517.get$Lambda (28 samples, 0.05%)</title><rect x="745.0" y="739.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="748.0" y="750.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorAttachment$$Lambda$195 (28 samples, 0.05%)</title><rect x="745.0" y="723.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="748.0" y="734.0"></text>
</g>
<g>
<title>java/util/Collection.stream (140 samples, 0.25%)</title><rect x="745.6" y="771.0" width="3.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="748.6" y="782.0"></text>
</g>
<g>
<title>java/util/HashSet.spliterator (58 samples, 0.11%)</title><rect x="745.6" y="755.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="748.6" y="766.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySpliterator (58 samples, 0.11%)</title><rect x="745.6" y="739.0" width="1.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="748.6" y="750.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (82 samples, 0.15%)</title><rect x="746.9" y="755.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="749.9" y="766.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (82 samples, 0.15%)</title><rect x="746.9" y="739.0" width="1.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="749.9" y="750.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (97 samples, 0.18%)</title><rect x="748.6" y="771.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="751.6" y="782.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (97 samples, 0.18%)</title><rect x="748.6" y="755.0" width="2.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="751.6" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (76 samples, 0.14%)</title><rect x="750.7" y="787.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="753.7" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (76 samples, 0.14%)</title><rect x="750.7" y="771.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="753.7" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (76 samples, 0.14%)</title><rect x="750.7" y="755.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="753.7" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (76 samples, 0.14%)</title><rect x="750.7" y="739.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="753.7" y="750.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (37 samples, 0.07%)</title><rect x="750.7" y="723.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="753.7" y="734.0"></text>
</g>
<g>
<title>java.lang.Integer (37 samples, 0.07%)</title><rect x="750.7" y="707.0" width="0.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="753.7" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (39 samples, 0.07%)</title><rect x="751.5" y="723.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="754.5" y="734.0"></text>
</g>
<g>
<title>java/util/HashSet.add (39 samples, 0.07%)</title><rect x="751.5" y="707.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="754.5" y="718.0"></text>
</g>
<g>
<title>java/util/HashMap.put (39 samples, 0.07%)</title><rect x="751.5" y="691.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="754.5" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (39 samples, 0.07%)</title><rect x="751.5" y="675.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="754.5" y="686.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (39 samples, 0.07%)</title><rect x="751.5" y="659.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="754.5" y="670.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (39 samples, 0.07%)</title><rect x="751.5" y="643.0" width="0.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="754.5" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (34 samples, 0.06%)</title><rect x="752.4" y="787.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="755.4" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (34 samples, 0.06%)</title><rect x="752.4" y="771.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="755.4" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (34 samples, 0.06%)</title><rect x="752.4" y="755.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="755.4" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (34 samples, 0.06%)</title><rect x="752.4" y="739.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="755.4" y="750.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (25 samples, 0.05%)</title><rect x="752.4" y="723.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="755.4" y="734.0"></text>
</g>
<g>
<title>java.lang.Integer (25 samples, 0.05%)</title><rect x="752.4" y="707.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="755.4" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (26 samples, 0.05%)</title><rect x="753.1" y="787.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="756.1" y="798.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (26 samples, 0.05%)</title><rect x="753.1" y="771.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="756.1" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (26 samples, 0.05%)</title><rect x="753.1" y="755.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="756.1" y="766.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (26 samples, 0.05%)</title><rect x="753.1" y="739.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="756.1" y="750.0"></text>
</g>
<g>
<title>one/nio/server/AcceptorThread.run (47 samples, 0.09%)</title><rect x="753.6" y="803.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="756.6" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.createSession (47 samples, 0.09%)</title><rect x="753.6" y="787.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="756.6" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.createSession (47 samples, 0.09%)</title><rect x="753.6" y="771.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="756.6" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/StorageSession.&lt;init&gt; (36 samples, 0.07%)</title><rect x="753.9" y="755.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="756.9" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.&lt;init&gt; (36 samples, 0.07%)</title><rect x="753.9" y="739.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="756.9" y="750.0"></text>
</g>
<g>
<title>byte[] (18 samples, 0.03%)</title><rect x="753.9" y="723.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="756.9" y="734.0"></text>
</g>
<g>
<title>byte[] (18 samples, 0.03%)</title><rect x="754.3" y="723.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="757.3" y="734.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (20,283 samples, 36.89%)</title><rect x="754.7" y="803.0" width="435.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="757.7" y="814.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (348 samples, 0.63%)</title><rect x="754.7" y="787.0" width="7.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="757.7" y="798.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (348 samples, 0.63%)</title><rect x="754.7" y="771.0" width="7.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="757.7" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (19,935 samples, 36.26%)</title><rect x="762.1" y="787.0" width="427.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="765.1" y="798.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (19,935 samples, 36.26%)</title><rect x="762.1" y="771.0" width="427.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="765.1" y="782.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (19,923 samples, 36.24%)</title><rect x="762.1" y="755.0" width="427.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="765.1" y="766.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (9,494 samples, 17.27%)</title><rect x="762.1" y="739.0" width="203.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="765.1" y="750.0">one/nio/http/HttpSession.ha..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (9,494 samples, 17.27%)</title><rect x="762.1" y="723.0" width="203.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="765.1" y="734.0">one/nio/http/HttpServer.han..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (8,953 samples, 16.28%)</title><rect x="762.1" y="707.0" width="192.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="765.1" y="718.0">RequestHandler1_entity.ha..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (891 samples, 1.62%)</title><rect x="762.1" y="691.0" width="19.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="765.1" y="702.0"></text>
</g>
<g>
<title>java/lang/String.substring (891 samples, 1.62%)</title><rect x="762.1" y="675.0" width="19.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="765.1" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (891 samples, 1.62%)</title><rect x="762.1" y="659.0" width="19.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="765.1" y="670.0"></text>
</g>
<g>
<title>java.lang.String (451 samples, 0.82%)</title><rect x="762.1" y="643.0" width="9.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="765.1" y="654.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (440 samples, 0.80%)</title><rect x="771.8" y="643.0" width="9.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="774.8" y="654.0"></text>
</g>
<g>
<title>byte[] (440 samples, 0.80%)</title><rect x="771.8" y="627.0" width="9.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="774.8" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.entity (8,062 samples, 14.66%)</title><rect x="781.2" y="691.0" width="173.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="784.2" y="702.0">ru/mail/polis/service/..</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1167829160.linkToTargetMethod (252 samples, 0.46%)</title><rect x="781.2" y="675.0" width="5.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="784.2" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1899887676.invokeStatic (252 samples, 0.46%)</title><rect x="781.2" y="659.0" width="5.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="784.2" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$108/1115154842.get$Lambda (252 samples, 0.46%)</title><rect x="781.2" y="643.0" width="5.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="784.2" y="654.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$$Lambda$108 (252 samples, 0.46%)</title><rect x="781.2" y="627.0" width="5.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="784.2" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (197 samples, 0.36%)</title><rect x="786.7" y="675.0" width="4.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="789.7" y="686.0"></text>
</g>
<g>
<title>java/lang/String.substring (197 samples, 0.36%)</title><rect x="786.7" y="659.0" width="4.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="789.7" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (197 samples, 0.36%)</title><rect x="786.7" y="643.0" width="4.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="789.7" y="654.0"></text>
</g>
<g>
<title>java.lang.String (120 samples, 0.22%)</title><rect x="786.7" y="627.0" width="2.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="789.7" y="638.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (77 samples, 0.14%)</title><rect x="789.2" y="627.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="792.2" y="638.0"></text>
</g>
<g>
<title>byte[] (77 samples, 0.14%)</title><rect x="789.2" y="611.0" width="1.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="792.2" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.executeAsync (235 samples, 0.43%)</title><rect x="790.9" y="675.0" width="5.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="793.9" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (235 samples, 0.43%)</title><rect x="790.9" y="659.0" width="5.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="793.9" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (235 samples, 0.43%)</title><rect x="790.9" y="643.0" width="5.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="793.9" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (234 samples, 0.43%)</title><rect x="790.9" y="627.0" width="5.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="793.9" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/ConsistentHashImpl.all (4,134 samples, 7.52%)</title><rect x="795.9" y="675.0" width="88.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="798.9" y="686.0">ru/mail/po..</text>
</g>
<g>
<title>java/util/Set.copyOf (4,134 samples, 7.52%)</title><rect x="795.9" y="659.0" width="88.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="798.9" y="670.0">java/util/..</text>
</g>
<g>
<title>java.util.HashSet (150 samples, 0.27%)</title><rect x="795.9" y="643.0" width="3.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="798.9" y="654.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (913 samples, 1.66%)</title><rect x="799.1" y="643.0" width="19.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="802.1" y="654.0"></text>
</g>
<g>
<title>java.lang.Object[] (286 samples, 0.52%)</title><rect x="799.1" y="627.0" width="6.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="802.1" y="638.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (627 samples, 1.14%)</title><rect x="805.3" y="627.0" width="13.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="808.3" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (470 samples, 0.85%)</title><rect x="805.3" y="611.0" width="10.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="808.3" y="622.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (470 samples, 0.85%)</title><rect x="805.3" y="595.0" width="10.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="808.3" y="606.0"></text>
</g>
<g>
<title>java/util/HashMap.keySet (157 samples, 0.29%)</title><rect x="815.4" y="611.0" width="3.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="818.4" y="622.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySet (157 samples, 0.29%)</title><rect x="815.4" y="595.0" width="3.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="818.4" y="606.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (2,472 samples, 4.50%)</title><rect x="818.7" y="643.0" width="53.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="821.7" y="654.0">java/..</text>
</g>
<g>
<title>java.util.HashMap (422 samples, 0.77%)</title><rect x="818.7" y="627.0" width="9.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="821.7" y="638.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (2,050 samples, 3.73%)</title><rect x="827.8" y="627.0" width="44.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="830.8" y="638.0">java..</text>
</g>
<g>
<title>java/util/HashSet.add (1,738 samples, 3.16%)</title><rect x="827.8" y="611.0" width="37.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="830.8" y="622.0">jav..</text>
</g>
<g>
<title>java/util/HashMap.put (1,738 samples, 3.16%)</title><rect x="827.8" y="595.0" width="37.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="830.8" y="606.0">jav..</text>
</g>
<g>
<title>java/util/HashMap.putVal (1,738 samples, 3.16%)</title><rect x="827.8" y="579.0" width="37.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="830.8" y="590.0">jav..</text>
</g>
<g>
<title>java/util/HashMap.newNode (816 samples, 1.48%)</title><rect x="827.8" y="563.0" width="17.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="830.8" y="574.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (816 samples, 1.48%)</title><rect x="827.8" y="547.0" width="17.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="830.8" y="558.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (922 samples, 1.68%)</title><rect x="845.3" y="563.0" width="19.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="848.3" y="574.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (922 samples, 1.68%)</title><rect x="845.3" y="547.0" width="19.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="848.3" y="558.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (312 samples, 0.57%)</title><rect x="865.1" y="611.0" width="6.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="868.1" y="622.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (312 samples, 0.57%)</title><rect x="865.1" y="595.0" width="6.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="868.1" y="606.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (312 samples, 0.57%)</title><rect x="865.1" y="579.0" width="6.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="868.1" y="590.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeyIterator (312 samples, 0.57%)</title><rect x="865.1" y="563.0" width="6.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="868.1" y="574.0"></text>
</g>
<g>
<title>java/util/Set.of (599 samples, 1.09%)</title><rect x="871.8" y="643.0" width="12.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="874.8" y="654.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$SetN (218 samples, 0.40%)</title><rect x="871.8" y="627.0" width="4.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="874.8" y="638.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$SetN.&lt;init&gt; (381 samples, 0.69%)</title><rect x="876.5" y="627.0" width="8.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="879.5" y="638.0"></text>
</g>
<g>
<title>java.lang.Object[] (381 samples, 0.69%)</title><rect x="876.5" y="611.0" width="8.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="879.5" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/RF.from (3,244 samples, 5.90%)</title><rect x="884.7" y="675.0" width="69.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="887.7" y="686.0">ru/mail..</text>
</g>
<g>
<title>com/google/common/base/Splitter.on (666 samples, 1.21%)</title><rect x="884.7" y="659.0" width="14.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="887.7" y="670.0"></text>
</g>
<g>
<title>com/google/common/base/CharMatcher.is (146 samples, 0.27%)</title><rect x="884.7" y="643.0" width="3.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="887.7" y="654.0"></text>
</g>
<g>
<title>com.google.common.base.CharMatcher$Is (146 samples, 0.27%)</title><rect x="884.7" y="627.0" width="3.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="887.7" y="638.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.on (520 samples, 0.95%)</title><rect x="887.8" y="643.0" width="11.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="890.8" y="654.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter$1 (219 samples, 0.40%)</title><rect x="887.8" y="627.0" width="4.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="890.8" y="638.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter (301 samples, 0.55%)</title><rect x="892.5" y="627.0" width="6.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="895.5" y="638.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splitToList (2,344 samples, 4.26%)</title><rect x="899.0" y="659.0" width="50.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="902.0" y="670.0">com/g..</text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.hasNext (1,015 samples, 1.85%)</title><rect x="899.0" y="643.0" width="21.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="902.0" y="654.0">c..</text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.tryToComputeNext (1,015 samples, 1.85%)</title><rect x="899.0" y="627.0" width="21.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="902.0" y="638.0">c..</text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (1,015 samples, 1.85%)</title><rect x="899.0" y="611.0" width="21.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="902.0" y="622.0">c..</text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (1,015 samples, 1.85%)</title><rect x="899.0" y="595.0" width="21.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="902.0" y="606.0">c..</text>
</g>
<g>
<title>java/lang/String.subSequence (1,015 samples, 1.85%)</title><rect x="899.0" y="579.0" width="21.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="902.0" y="590.0">j..</text>
</g>
<g>
<title>java/lang/String.substring (1,015 samples, 1.85%)</title><rect x="899.0" y="563.0" width="21.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="902.0" y="574.0">j..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,015 samples, 1.85%)</title><rect x="899.0" y="547.0" width="21.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="902.0" y="558.0">j..</text>
</g>
<g>
<title>java.lang.String (461 samples, 0.84%)</title><rect x="899.0" y="531.0" width="9.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="902.0" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (554 samples, 1.01%)</title><rect x="908.8" y="531.0" width="11.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="911.8" y="542.0"></text>
</g>
<g>
<title>byte[] (554 samples, 1.01%)</title><rect x="908.8" y="515.0" width="11.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="911.8" y="526.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splittingIterator (476 samples, 0.87%)</title><rect x="920.7" y="643.0" width="10.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="923.7" y="654.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (476 samples, 0.87%)</title><rect x="920.7" y="627.0" width="10.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="923.7" y="638.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (476 samples, 0.87%)</title><rect x="920.7" y="611.0" width="10.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="923.7" y="622.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter$1$1 (476 samples, 0.87%)</title><rect x="920.7" y="595.0" width="10.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="923.7" y="606.0"></text>
</g>
<g>
<title>java.util.ArrayList (230 samples, 0.42%)</title><rect x="931.0" y="643.0" width="4.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="934.0" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (437 samples, 0.79%)</title><rect x="935.9" y="643.0" width="9.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="938.9" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (437 samples, 0.79%)</title><rect x="935.9" y="627.0" width="9.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="938.9" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (437 samples, 0.79%)</title><rect x="935.9" y="611.0" width="9.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="938.9" y="622.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (437 samples, 0.79%)</title><rect x="935.9" y="595.0" width="9.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="938.9" y="606.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (437 samples, 0.79%)</title><rect x="935.9" y="579.0" width="9.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="938.9" y="590.0"></text>
</g>
<g>
<title>java.lang.Object[] (437 samples, 0.79%)</title><rect x="935.9" y="563.0" width="9.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="938.9" y="574.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableList (186 samples, 0.34%)</title><rect x="945.3" y="643.0" width="4.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="948.3" y="654.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableRandomAccessList (186 samples, 0.34%)</title><rect x="945.3" y="627.0" width="4.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="948.3" y="638.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.topology.RF (234 samples, 0.43%)</title><rect x="949.3" y="659.0" width="5.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="952.3" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (541 samples, 0.98%)</title><rect x="954.3" y="707.0" width="11.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="957.3" y="718.0"></text>
</g>
<g>
<title>java/lang/String.substring (541 samples, 0.98%)</title><rect x="954.3" y="691.0" width="11.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="957.3" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (541 samples, 0.98%)</title><rect x="954.3" y="675.0" width="11.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="957.3" y="686.0"></text>
</g>
<g>
<title>java.lang.String (230 samples, 0.42%)</title><rect x="954.3" y="659.0" width="4.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="957.3" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (311 samples, 0.57%)</title><rect x="959.2" y="659.0" width="6.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="962.2" y="670.0"></text>
</g>
<g>
<title>byte[] (311 samples, 0.57%)</title><rect x="959.2" y="643.0" width="6.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="962.2" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (3,170 samples, 5.77%)</title><rect x="965.9" y="739.0" width="68.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="968.9" y="750.0">one/nio..</text>
</g>
<g>
<title>one.nio.http.Request (416 samples, 0.76%)</title><rect x="965.9" y="723.0" width="8.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="968.9" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (688 samples, 1.25%)</title><rect x="974.8" y="723.0" width="14.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="977.8" y="734.0"></text>
</g>
<g>
<title>java.lang.String[] (688 samples, 1.25%)</title><rect x="974.8" y="707.0" width="14.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="977.8" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,066 samples, 3.76%)</title><rect x="989.6" y="723.0" width="44.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="992.6" y="734.0">one/..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,066 samples, 3.76%)</title><rect x="989.6" y="707.0" width="44.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="992.6" y="718.0">one/..</text>
</g>
<g>
<title>char[] (1,342 samples, 2.44%)</title><rect x="989.6" y="691.0" width="28.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="992.6" y="702.0">ch..</text>
</g>
<g>
<title>java.lang.String (236 samples, 0.43%)</title><rect x="1018.4" y="691.0" width="5.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1021.4" y="702.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (488 samples, 0.89%)</title><rect x="1023.5" y="691.0" width="10.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1026.5" y="702.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (488 samples, 0.89%)</title><rect x="1023.5" y="675.0" width="10.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1026.5" y="686.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (488 samples, 0.89%)</title><rect x="1023.5" y="659.0" width="10.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1026.5" y="670.0"></text>
</g>
<g>
<title>byte[] (488 samples, 0.89%)</title><rect x="1023.5" y="643.0" width="10.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1026.5" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (282 samples, 0.51%)</title><rect x="1033.9" y="739.0" width="6.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1036.9" y="750.0"></text>
</g>
<g>
<title>byte[] (282 samples, 0.51%)</title><rect x="1033.9" y="723.0" width="6.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1036.9" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (472 samples, 0.86%)</title><rect x="1040.0" y="739.0" width="10.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1043.0" y="750.0"></text>
</g>
<g>
<title>java/lang/String.substring (472 samples, 0.86%)</title><rect x="1040.0" y="723.0" width="10.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1043.0" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (472 samples, 0.86%)</title><rect x="1040.0" y="707.0" width="10.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1043.0" y="718.0"></text>
</g>
<g>
<title>java.lang.String (184 samples, 0.33%)</title><rect x="1040.0" y="691.0" width="3.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1043.0" y="702.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (288 samples, 0.52%)</title><rect x="1043.9" y="691.0" width="6.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1046.9" y="702.0"></text>
</g>
<g>
<title>byte[] (288 samples, 0.52%)</title><rect x="1043.9" y="675.0" width="6.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1046.9" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (6,505 samples, 11.83%)</title><rect x="1050.1" y="739.0" width="139.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1053.1" y="750.0">one/nio/util/Utf8..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (6,505 samples, 11.83%)</title><rect x="1050.1" y="723.0" width="139.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1053.1" y="734.0">one/nio/util/Utf8..</text>
</g>
<g>
<title>char[] (3,474 samples, 6.32%)</title><rect x="1050.1" y="707.0" width="74.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1053.1" y="718.0">char[]</text>
</g>
<g>
<title>java.lang.String (1,120 samples, 2.04%)</title><rect x="1124.7" y="707.0" width="24.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1127.7" y="718.0">j..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,911 samples, 3.48%)</title><rect x="1148.7" y="707.0" width="41.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1151.7" y="718.0">jav..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,911 samples, 3.48%)</title><rect x="1148.7" y="691.0" width="41.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1151.7" y="702.0">jav..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1,911 samples, 3.48%)</title><rect x="1148.7" y="675.0" width="41.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1151.7" y="686.0">jav..</text>
</g>
<g>
<title>byte[] (1,911 samples, 3.48%)</title><rect x="1148.7" y="659.0" width="41.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1151.7" y="670.0">byt..</text>
</g>
<g>
<title>one/nio/net/Session.read (12 samples, 0.02%)</title><rect x="1189.7" y="755.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1192.7" y="766.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (12 samples, 0.02%)</title><rect x="1189.7" y="739.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1192.7" y="750.0"></text>
</g>
</g>
</svg>
