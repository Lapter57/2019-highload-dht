<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="854" onload="init(evt)" viewBox="0 0 1200 854" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="837"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="837"> </text>
<g id="frames">
<g>
<title>all (69,150 samples, 100.00%)</title><rect x="10.0" y="803.0" width="1180.0" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="13.0" y="814.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (39,209 samples, 56.70%)</title><rect x="10.0" y="787.0" width="669.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="13.0" y="798.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (39,209 samples, 56.70%)</title><rect x="10.0" y="771.0" width="669.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="13.0" y="782.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (39,209 samples, 56.70%)</title><rect x="10.0" y="755.0" width="669.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="13.0" y="766.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (5,376 samples, 7.77%)</title><rect x="10.0" y="739.0" width="91.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="13.0" y="750.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (5,376 samples, 7.77%)</title><rect x="10.0" y="723.0" width="91.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="13.0" y="734.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (5,376 samples, 7.77%)</title><rect x="10.0" y="707.0" width="91.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="13.0" y="718.0">java/util/c..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (26 samples, 0.04%)</title><rect x="10.0" y="691.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="13.0" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$128/1729551726.apply (5,350 samples, 7.74%)</title><rect x="10.4" y="691.0" width="91.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="13.4" y="702.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (5,350 samples, 7.74%)</title><rect x="10.4" y="675.0" width="91.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.4" y="686.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (5,350 samples, 7.74%)</title><rect x="10.4" y="659.0" width="91.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="13.4" y="670.0">jdk/interna..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (36 samples, 0.05%)</title><rect x="10.4" y="643.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.4" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (36 samples, 0.05%)</title><rect x="10.4" y="627.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$236/388216554.get$Lambda (23 samples, 0.03%)</title><rect x="10.4" y="611.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.4" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$236 (23 samples, 0.03%)</title><rect x="10.4" y="595.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="13.4" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (57 samples, 0.08%)</title><rect x="11.1" y="643.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="14.1" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (57 samples, 0.08%)</title><rect x="11.1" y="627.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="14.1" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (28 samples, 0.04%)</title><rect x="11.1" y="611.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="14.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (29 samples, 0.04%)</title><rect x="11.5" y="611.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="14.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (29 samples, 0.04%)</title><rect x="11.5" y="595.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="14.5" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (29 samples, 0.04%)</title><rect x="11.5" y="579.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="14.5" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (126 samples, 0.18%)</title><rect x="12.0" y="643.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="15.0" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (126 samples, 0.18%)</title><rect x="12.0" y="627.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="15.0" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (76 samples, 0.11%)</title><rect x="12.0" y="611.0" width="1.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="15.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (50 samples, 0.07%)</title><rect x="13.3" y="611.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="16.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (50 samples, 0.07%)</title><rect x="13.3" y="595.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="16.3" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (50 samples, 0.07%)</title><rect x="13.3" y="579.0" width="0.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="16.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (5,131 samples, 7.42%)</title><rect x="14.2" y="643.0" width="87.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="17.2" y="654.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (5,131 samples, 7.42%)</title><rect x="14.2" y="627.0" width="87.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="17.2" y="638.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (5,131 samples, 7.42%)</title><rect x="14.2" y="611.0" width="87.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="17.2" y="622.0">jdk/intern..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (100 samples, 0.14%)</title><rect x="14.2" y="595.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="17.2" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (100 samples, 0.14%)</title><rect x="14.2" y="579.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="17.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$148/2053429061.get$Lambda (57 samples, 0.08%)</title><rect x="14.2" y="563.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="17.2" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$148 (57 samples, 0.08%)</title><rect x="14.2" y="547.0" width="1.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="17.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$149/2119912657.get$Lambda (21 samples, 0.03%)</title><rect x="15.2" y="563.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="18.2" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$149 (21 samples, 0.03%)</title><rect x="15.2" y="547.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="18.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$209/384755526.get$Lambda (22 samples, 0.03%)</title><rect x="15.5" y="563.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="18.5" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$209 (22 samples, 0.03%)</title><rect x="15.5" y="547.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="18.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (3,150 samples, 4.56%)</title><rect x="15.9" y="595.0" width="53.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="18.9" y="606.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (3,150 samples, 4.56%)</title><rect x="15.9" y="579.0" width="53.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="18.9" y="590.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (3,125 samples, 4.52%)</title><rect x="15.9" y="563.0" width="53.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="18.9" y="574.0">java/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$209/384755526.apply (3,125 samples, 4.52%)</title><rect x="15.9" y="547.0" width="53.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="18.9" y="558.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (3,125 samples, 4.52%)</title><rect x="15.9" y="531.0" width="53.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="18.9" y="542.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (3,125 samples, 4.52%)</title><rect x="15.9" y="515.0" width="53.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="18.9" y="526.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$149/2119912657.apply (3,125 samples, 4.52%)</title><rect x="15.9" y="499.0" width="53.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="18.9" y="510.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (3,125 samples, 4.52%)</title><rect x="15.9" y="483.0" width="53.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="18.9" y="494.0">jdk/i..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (67 samples, 0.10%)</title><rect x="16.1" y="467.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="19.1" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (67 samples, 0.10%)</title><rect x="16.1" y="451.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="19.1" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (31 samples, 0.04%)</title><rect x="16.1" y="435.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="19.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (31 samples, 0.04%)</title><rect x="16.7" y="435.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="19.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (31 samples, 0.04%)</title><rect x="16.7" y="419.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="19.7" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (31 samples, 0.04%)</title><rect x="16.7" y="403.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="19.7" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (61 samples, 0.09%)</title><rect x="17.2" y="467.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="20.2" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (61 samples, 0.09%)</title><rect x="17.2" y="451.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="20.2" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (29 samples, 0.04%)</title><rect x="17.2" y="435.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="20.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (32 samples, 0.05%)</title><rect x="17.7" y="435.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="20.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (32 samples, 0.05%)</title><rect x="17.7" y="419.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="20.7" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (32 samples, 0.05%)</title><rect x="17.7" y="403.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="20.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (2,986 samples, 4.32%)</title><rect x="18.3" y="467.0" width="50.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="21.3" y="478.0">jdk/i..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (24 samples, 0.03%)</title><rect x="18.3" y="451.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="21.3" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (24 samples, 0.03%)</title><rect x="18.3" y="435.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="21.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$232/1335640103.get$Lambda (15 samples, 0.02%)</title><rect x="18.3" y="419.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="21.3" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$232 (15 samples, 0.02%)</title><rect x="18.3" y="403.0" width="0.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="21.3" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2,570 samples, 3.72%)</title><rect x="18.7" y="451.0" width="43.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="21.7" y="462.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2,570 samples, 3.72%)</title><rect x="18.7" y="435.0" width="43.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="21.7" y="446.0">java..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (23 samples, 0.03%)</title><rect x="18.7" y="419.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="21.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$232/1335640103.apply (2,497 samples, 3.61%)</title><rect x="19.1" y="419.0" width="42.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="22.1" y="430.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (2,497 samples, 3.61%)</title><rect x="19.1" y="403.0" width="42.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="22.1" y="414.0">jdk/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (72 samples, 0.10%)</title><rect x="19.3" y="387.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="22.3" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (72 samples, 0.10%)</title><rect x="19.3" y="371.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="22.3" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (37 samples, 0.05%)</title><rect x="19.3" y="355.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="22.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (35 samples, 0.05%)</title><rect x="19.9" y="355.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="22.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (35 samples, 0.05%)</title><rect x="19.9" y="339.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="22.9" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (35 samples, 0.05%)</title><rect x="19.9" y="323.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="22.9" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (24 samples, 0.03%)</title><rect x="20.5" y="387.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="23.5" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (38 samples, 0.05%)</title><rect x="20.9" y="387.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="23.9" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (23 samples, 0.03%)</title><rect x="20.9" y="371.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="23.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (15 samples, 0.02%)</title><rect x="21.3" y="371.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="24.3" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (15 samples, 0.02%)</title><rect x="21.3" y="355.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="24.3" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (15 samples, 0.02%)</title><rect x="21.3" y="339.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="24.3" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (15 samples, 0.02%)</title><rect x="21.3" y="323.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="24.3" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (15 samples, 0.02%)</title><rect x="21.3" y="307.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="24.3" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (15 samples, 0.02%)</title><rect x="21.3" y="291.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="24.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (58 samples, 0.08%)</title><rect x="21.6" y="387.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="24.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (58 samples, 0.08%)</title><rect x="21.6" y="371.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="24.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (16 samples, 0.02%)</title><rect x="21.6" y="355.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="24.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (16 samples, 0.02%)</title><rect x="21.6" y="339.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="24.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (16 samples, 0.02%)</title><rect x="21.6" y="323.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="24.6" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (16 samples, 0.02%)</title><rect x="21.6" y="307.0" width="0.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="24.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (42 samples, 0.06%)</title><rect x="21.8" y="355.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="24.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (42 samples, 0.06%)</title><rect x="21.8" y="339.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="24.8" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (27 samples, 0.04%)</title><rect x="21.8" y="323.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="24.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (15 samples, 0.02%)</title><rect x="22.3" y="323.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="25.3" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (15 samples, 0.02%)</title><rect x="22.3" y="307.0" width="0.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="25.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (2,293 samples, 3.32%)</title><rect x="22.5" y="387.0" width="39.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="25.5" y="398.0">jdk..</text>
</g>
<g>
<title>java.lang.StringBuilder (16 samples, 0.02%)</title><rect x="22.5" y="371.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="25.5" y="382.0"></text>
</g>
<g>
<title>java/lang/Long.toString (42 samples, 0.06%)</title><rect x="22.8" y="371.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="25.8" y="382.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.02%)</title><rect x="22.8" y="355.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="25.8" y="366.0"></text>
</g>
<g>
<title>java.lang.String (27 samples, 0.04%)</title><rect x="23.1" y="355.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="26.1" y="366.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (216 samples, 0.31%)</title><rect x="23.5" y="371.0" width="3.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="26.5" y="382.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (216 samples, 0.31%)</title><rect x="23.5" y="355.0" width="3.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="26.5" y="366.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (216 samples, 0.31%)</title><rect x="23.5" y="339.0" width="3.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="26.5" y="350.0"></text>
</g>
<g>
<title>byte[] (216 samples, 0.31%)</title><rect x="23.5" y="323.0" width="3.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="26.5" y="334.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (68 samples, 0.10%)</title><rect x="27.2" y="371.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="30.2" y="382.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (68 samples, 0.10%)</title><rect x="27.2" y="355.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="30.2" y="366.0"></text>
</g>
<g>
<title>byte[] (68 samples, 0.10%)</title><rect x="27.2" y="339.0" width="1.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="30.2" y="350.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (214 samples, 0.31%)</title><rect x="28.4" y="371.0" width="3.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="31.4" y="382.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (214 samples, 0.31%)</title><rect x="28.4" y="355.0" width="3.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="31.4" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (214 samples, 0.31%)</title><rect x="28.4" y="339.0" width="3.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="31.4" y="350.0"></text>
</g>
<g>
<title>byte[] (214 samples, 0.31%)</title><rect x="28.4" y="323.0" width="3.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="31.4" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (33 samples, 0.05%)</title><rect x="32.0" y="371.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="35.0" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (33 samples, 0.05%)</title><rect x="32.0" y="355.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="35.0" y="366.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (33 samples, 0.05%)</title><rect x="32.0" y="339.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="35.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (1,406 samples, 2.03%)</title><rect x="32.8" y="371.0" width="24.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="35.8" y="382.0">j..</text>
</g>
<g>
<title>java/util/function/BiPredicate.and (19 samples, 0.03%)</title><rect x="32.8" y="355.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="35.8" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (19 samples, 0.03%)</title><rect x="32.8" y="339.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="35.8" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (19 samples, 0.03%)</title><rect x="32.8" y="323.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="35.8" y="334.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$248/471895969.get$Lambda (19 samples, 0.03%)</title><rect x="32.8" y="307.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="35.8" y="318.0"></text>
</g>
<g>
<title>java.util.function.BiPredicate$$Lambda$248 (19 samples, 0.03%)</title><rect x="32.8" y="291.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="35.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (665 samples, 0.96%)</title><rect x="33.1" y="355.0" width="11.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="36.1" y="366.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (363 samples, 0.52%)</title><rect x="33.1" y="339.0" width="6.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="36.1" y="350.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (363 samples, 0.52%)</title><rect x="33.1" y="323.0" width="6.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="36.1" y="334.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (363 samples, 0.52%)</title><rect x="33.1" y="307.0" width="6.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="36.1" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (363 samples, 0.52%)</title><rect x="33.1" y="291.0" width="6.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="36.1" y="302.0"></text>
</g>
<g>
<title>byte[] (363 samples, 0.52%)</title><rect x="33.1" y="275.0" width="6.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="36.1" y="286.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (54 samples, 0.08%)</title><rect x="39.3" y="339.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="42.3" y="350.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (54 samples, 0.08%)</title><rect x="39.3" y="323.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="42.3" y="334.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (54 samples, 0.08%)</title><rect x="39.3" y="307.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="42.3" y="318.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntryIterator (54 samples, 0.08%)</title><rect x="39.3" y="291.0" width="0.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="42.3" y="302.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.entrySet (36 samples, 0.05%)</title><rect x="40.2" y="339.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="43.2" y="350.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet (20 samples, 0.03%)</title><rect x="40.2" y="323.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="43.2" y="334.0"></text>
</g>
<g>
<title>java/util/TreeMap.entrySet (16 samples, 0.02%)</title><rect x="40.6" y="323.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="43.6" y="334.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntrySet (16 samples, 0.02%)</title><rect x="40.6" y="307.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="43.6" y="318.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$248/471895969.test (212 samples, 0.31%)</title><rect x="40.9" y="339.0" width="3.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="43.9" y="350.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (212 samples, 0.31%)</title><rect x="40.9" y="323.0" width="3.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="43.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$77/1464555023.test (212 samples, 0.31%)</title><rect x="40.9" y="307.0" width="3.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="43.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (212 samples, 0.31%)</title><rect x="40.9" y="291.0" width="3.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="43.9" y="302.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$66/254801937.test (212 samples, 0.31%)</title><rect x="40.9" y="275.0" width="3.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="43.9" y="286.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (212 samples, 0.31%)</title><rect x="40.9" y="259.0" width="3.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="43.9" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$65/270056930.test (212 samples, 0.31%)</title><rect x="40.9" y="243.0" width="3.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="43.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (212 samples, 0.31%)</title><rect x="40.9" y="227.0" width="3.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="43.9" y="238.0"></text>
</g>
<g>
<title>java/lang/String.substring (212 samples, 0.31%)</title><rect x="40.9" y="211.0" width="3.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="43.9" y="222.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (212 samples, 0.31%)</title><rect x="40.9" y="195.0" width="3.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="43.9" y="206.0"></text>
</g>
<g>
<title>java.lang.String (100 samples, 0.14%)</title><rect x="40.9" y="179.0" width="1.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="43.9" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (112 samples, 0.16%)</title><rect x="42.6" y="179.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="45.6" y="190.0"></text>
</g>
<g>
<title>byte[] (112 samples, 0.16%)</title><rect x="42.6" y="163.0" width="1.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="45.6" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (722 samples, 1.04%)</title><rect x="44.5" y="355.0" width="12.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="47.5" y="366.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (722 samples, 1.04%)</title><rect x="44.5" y="339.0" width="12.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="47.5" y="350.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (722 samples, 1.04%)</title><rect x="44.5" y="323.0" width="12.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="47.5" y="334.0"></text>
</g>
<g>
<title>java.util.ArrayList (22 samples, 0.03%)</title><rect x="44.7" y="307.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="47.7" y="318.0"></text>
</g>
<g>
<title>java.util.TreeMap (31 samples, 0.04%)</title><rect x="45.1" y="307.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="48.1" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (19 samples, 0.03%)</title><rect x="45.8" y="307.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="48.8" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (19 samples, 0.03%)</title><rect x="45.8" y="291.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="48.8" y="302.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$115/937225413.get$Lambda (19 samples, 0.03%)</title><rect x="45.8" y="275.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="48.8" y="286.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$115 (19 samples, 0.03%)</title><rect x="45.8" y="259.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="48.8" y="270.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (20 samples, 0.03%)</title><rect x="46.1" y="307.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="49.1" y="318.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (20 samples, 0.03%)</title><rect x="46.1" y="291.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="49.1" y="302.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (568 samples, 0.82%)</title><rect x="46.5" y="307.0" width="9.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="49.5" y="318.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$115/937225413.accept (568 samples, 0.82%)</title><rect x="46.5" y="291.0" width="9.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="49.5" y="302.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (568 samples, 0.82%)</title><rect x="46.5" y="275.0" width="9.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="49.5" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (123 samples, 0.18%)</title><rect x="46.5" y="259.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="49.5" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (123 samples, 0.18%)</title><rect x="46.5" y="243.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="49.5" y="254.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$118/2131634163.get$Lambda (123 samples, 0.18%)</title><rect x="46.5" y="227.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="49.5" y="238.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$118 (123 samples, 0.18%)</title><rect x="46.5" y="211.0" width="2.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="49.5" y="222.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (45 samples, 0.07%)</title><rect x="48.6" y="259.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="51.6" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$118/2131634163.accept (45 samples, 0.07%)</title><rect x="48.6" y="243.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="51.6" y="254.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (45 samples, 0.07%)</title><rect x="48.6" y="227.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="51.6" y="238.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (45 samples, 0.07%)</title><rect x="48.6" y="211.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="51.6" y="222.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (45 samples, 0.07%)</title><rect x="48.6" y="195.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="51.6" y="206.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (45 samples, 0.07%)</title><rect x="48.6" y="179.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="51.6" y="190.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (45 samples, 0.07%)</title><rect x="48.6" y="163.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="51.6" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (45 samples, 0.07%)</title><rect x="48.6" y="147.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="51.6" y="158.0"></text>
</g>
<g>
<title>java.lang.Object[] (45 samples, 0.07%)</title><rect x="48.6" y="131.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="51.6" y="142.0"></text>
</g>
<g>
<title>java/util/List.copyOf (216 samples, 0.31%)</title><rect x="49.3" y="259.0" width="3.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="52.3" y="270.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (216 samples, 0.31%)</title><rect x="49.3" y="243.0" width="3.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="52.3" y="254.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (113 samples, 0.16%)</title><rect x="49.3" y="227.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="52.3" y="238.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (113 samples, 0.16%)</title><rect x="49.3" y="211.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="52.3" y="222.0"></text>
</g>
<g>
<title>java.lang.Object[] (113 samples, 0.16%)</title><rect x="49.3" y="195.0" width="2.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="52.3" y="206.0"></text>
</g>
<g>
<title>java/util/List.of (103 samples, 0.15%)</title><rect x="51.3" y="227.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="54.3" y="238.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (103 samples, 0.15%)</title><rect x="51.3" y="211.0" width="1.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="54.3" y="222.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (184 samples, 0.27%)</title><rect x="53.0" y="259.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="56.0" y="270.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (184 samples, 0.27%)</title><rect x="53.0" y="243.0" width="3.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="56.0" y="254.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (37 samples, 0.05%)</title><rect x="56.2" y="307.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="59.2" y="318.0"></text>
</g>
<g>
<title>java.util.TreeMap (37 samples, 0.05%)</title><rect x="56.2" y="291.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="59.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (72 samples, 0.10%)</title><rect x="56.8" y="371.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="59.8" y="382.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (21 samples, 0.03%)</title><rect x="56.8" y="355.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="59.8" y="366.0"></text>
</g>
<g>
<title>byte[] (21 samples, 0.03%)</title><rect x="56.8" y="339.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="59.8" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (51 samples, 0.07%)</title><rect x="57.1" y="355.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="60.1" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (51 samples, 0.07%)</title><rect x="57.1" y="339.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="60.1" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/667821226.invoke (51 samples, 0.07%)</title><rect x="57.1" y="323.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="60.1" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (51 samples, 0.07%)</title><rect x="57.1" y="307.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="60.1" y="318.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (24 samples, 0.03%)</title><rect x="57.1" y="291.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="60.1" y="302.0"></text>
</g>
<g>
<title>java.lang.String (24 samples, 0.03%)</title><rect x="57.1" y="275.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="60.1" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (27 samples, 0.04%)</title><rect x="57.6" y="291.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="60.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (27 samples, 0.04%)</title><rect x="57.6" y="275.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="60.6" y="286.0"></text>
</g>
<g>
<title>byte[] (27 samples, 0.04%)</title><rect x="57.6" y="259.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="60.6" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (67 samples, 0.10%)</title><rect x="58.0" y="371.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="61.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (67 samples, 0.10%)</title><rect x="58.0" y="355.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="61.0" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (67 samples, 0.10%)</title><rect x="58.0" y="339.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="61.0" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (67 samples, 0.10%)</title><rect x="58.0" y="323.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="61.0" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/667821226.invoke (67 samples, 0.10%)</title><rect x="58.0" y="307.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="61.0" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (67 samples, 0.10%)</title><rect x="58.0" y="291.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="61.0" y="302.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (19 samples, 0.03%)</title><rect x="58.0" y="275.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="61.0" y="286.0"></text>
</g>
<g>
<title>java.lang.String (19 samples, 0.03%)</title><rect x="58.0" y="259.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="61.0" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (48 samples, 0.07%)</title><rect x="58.3" y="275.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="61.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (48 samples, 0.07%)</title><rect x="58.3" y="259.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="61.3" y="270.0"></text>
</g>
<g>
<title>byte[] (48 samples, 0.07%)</title><rect x="58.3" y="243.0" width="0.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="61.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (147 samples, 0.21%)</title><rect x="59.2" y="371.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="62.2" y="382.0"></text>
</g>
<g>
<title>java.util.ArrayList (40 samples, 0.06%)</title><rect x="59.2" y="355.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="62.2" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (42 samples, 0.06%)</title><rect x="59.8" y="355.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="62.8" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (42 samples, 0.06%)</title><rect x="59.8" y="339.0" width="0.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="62.8" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (65 samples, 0.09%)</title><rect x="60.6" y="355.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="63.6" y="366.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (65 samples, 0.09%)</title><rect x="60.6" y="339.0" width="1.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="63.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (50 samples, 0.07%)</title><rect x="61.7" y="419.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="64.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (50 samples, 0.07%)</title><rect x="61.7" y="403.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="64.7" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (50 samples, 0.07%)</title><rect x="61.7" y="387.0" width="0.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="64.7" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response (80 samples, 0.12%)</title><rect x="62.5" y="451.0" width="1.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="65.5" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (26 samples, 0.04%)</title><rect x="63.9" y="451.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="66.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (286 samples, 0.41%)</title><rect x="64.3" y="451.0" width="4.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="67.3" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (34 samples, 0.05%)</title><rect x="64.3" y="435.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="67.3" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (34 samples, 0.05%)</title><rect x="64.3" y="419.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="67.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$214/1397508456.get$Lambda (17 samples, 0.02%)</title><rect x="64.3" y="403.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="67.3" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$214 (17 samples, 0.02%)</title><rect x="64.3" y="387.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="67.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$216/1072692812.get$Lambda (17 samples, 0.02%)</title><rect x="64.6" y="403.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="67.6" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$216 (17 samples, 0.02%)</title><rect x="64.6" y="387.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="67.6" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1HeaderParser (26 samples, 0.04%)</title><rect x="64.9" y="435.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="67.9" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$BodyReader (19 samples, 0.03%)</title><rect x="65.4" y="435.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="68.4" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$HeadersReader (26 samples, 0.04%)</title><rect x="65.7" y="435.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="68.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (72 samples, 0.10%)</title><rect x="66.1" y="435.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="69.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (72 samples, 0.10%)</title><rect x="66.1" y="419.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="69.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (72 samples, 0.10%)</title><rect x="66.1" y="403.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="69.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (72 samples, 0.10%)</title><rect x="66.1" y="387.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="69.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (72 samples, 0.10%)</title><rect x="66.1" y="371.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="69.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (72 samples, 0.10%)</title><rect x="66.1" y="355.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="69.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$199/1509846524.run (72 samples, 0.10%)</title><rect x="66.1" y="339.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="69.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (72 samples, 0.10%)</title><rect x="66.1" y="323.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="69.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (72 samples, 0.10%)</title><rect x="66.1" y="307.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="69.1" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (27 samples, 0.04%)</title><rect x="66.1" y="291.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="69.1" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (27 samples, 0.04%)</title><rect x="66.1" y="275.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="69.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$221/1241815609.get$Lambda (15 samples, 0.02%)</title><rect x="66.3" y="259.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="69.3" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$221 (15 samples, 0.02%)</title><rect x="66.3" y="243.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="69.3" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (20 samples, 0.03%)</title><rect x="66.6" y="291.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="69.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (25 samples, 0.04%)</title><rect x="66.9" y="291.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="69.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (25 samples, 0.04%)</title><rect x="66.9" y="275.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="69.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.&lt;init&gt; (81 samples, 0.12%)</title><rect x="67.4" y="435.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="70.4" y="446.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (19 samples, 0.03%)</title><rect x="67.4" y="419.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="70.4" y="430.0"></text>
</g>
<g>
<title>java.util.HashMap (37 samples, 0.05%)</title><rect x="67.7" y="419.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="70.7" y="430.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (25 samples, 0.04%)</title><rect x="68.3" y="419.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="71.3" y="430.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (25 samples, 0.04%)</title><rect x="68.3" y="403.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="71.3" y="414.0"></text>
</g>
<g>
<title>byte[] (25 samples, 0.04%)</title><rect x="68.3" y="387.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="71.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.start (28 samples, 0.04%)</title><rect x="68.7" y="435.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="71.7" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (28 samples, 0.04%)</title><rect x="68.7" y="419.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="71.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (25 samples, 0.04%)</title><rect x="69.2" y="563.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="72.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (25 samples, 0.04%)</title><rect x="69.2" y="547.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="72.2" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (25 samples, 0.04%)</title><rect x="69.2" y="531.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="72.2" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (45 samples, 0.07%)</title><rect x="69.6" y="595.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="72.6" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (45 samples, 0.07%)</title><rect x="69.6" y="579.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="72.6" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (23 samples, 0.03%)</title><rect x="69.6" y="563.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="72.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (22 samples, 0.03%)</title><rect x="70.0" y="563.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="73.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (22 samples, 0.03%)</title><rect x="70.0" y="547.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="73.0" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (22 samples, 0.03%)</title><rect x="70.0" y="531.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="73.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (1,836 samples, 2.66%)</title><rect x="70.4" y="595.0" width="31.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="73.4" y="606.0">jd..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (44 samples, 0.06%)</title><rect x="70.4" y="579.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="73.4" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (44 samples, 0.06%)</title><rect x="70.4" y="563.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="73.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$205/1250947798.get$Lambda (27 samples, 0.04%)</title><rect x="70.4" y="547.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="73.4" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$205 (27 samples, 0.04%)</title><rect x="70.4" y="531.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="73.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$207/900893826.get$Lambda (17 samples, 0.02%)</title><rect x="70.9" y="547.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="73.9" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$207 (17 samples, 0.02%)</title><rect x="70.9" y="531.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="73.9" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (67 samples, 0.10%)</title><rect x="71.2" y="579.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="74.2" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (67 samples, 0.10%)</title><rect x="71.2" y="563.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="74.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$207/900893826.apply (25 samples, 0.04%)</title><rect x="71.2" y="547.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="74.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$establishExchange$2 (25 samples, 0.04%)</title><rect x="71.2" y="531.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="74.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (25 samples, 0.04%)</title><rect x="71.2" y="515.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="74.2" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (25 samples, 0.04%)</title><rect x="71.2" y="499.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="74.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (42 samples, 0.06%)</title><rect x="71.6" y="547.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="74.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (42 samples, 0.06%)</title><rect x="71.6" y="531.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="74.6" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (42 samples, 0.06%)</title><rect x="71.6" y="515.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="74.6" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (26 samples, 0.04%)</title><rect x="72.3" y="579.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="75.3" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (26 samples, 0.04%)</title><rect x="72.3" y="563.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="75.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (26 samples, 0.04%)</title><rect x="72.3" y="547.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="75.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (26 samples, 0.04%)</title><rect x="72.3" y="531.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="75.3" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (26 samples, 0.04%)</title><rect x="72.3" y="515.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="75.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (1,699 samples, 2.46%)</title><rect x="72.7" y="579.0" width="29.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="75.7" y="590.0">jd..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (19 samples, 0.03%)</title><rect x="72.7" y="563.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="75.7" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (19 samples, 0.03%)</title><rect x="72.7" y="547.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="75.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$154/1584594711.get$Lambda (19 samples, 0.03%)</title><rect x="72.7" y="531.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="75.7" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ExchangeImpl$$Lambda$154 (19 samples, 0.03%)</title><rect x="72.7" y="515.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="75.7" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (1,572 samples, 2.27%)</title><rect x="73.1" y="563.0" width="26.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="76.1" y="574.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (1,572 samples, 2.27%)</title><rect x="73.1" y="547.0" width="26.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="76.1" y="558.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (1,548 samples, 2.24%)</title><rect x="73.1" y="531.0" width="26.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="76.1" y="542.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$154/1584594711.apply (1,548 samples, 2.24%)</title><rect x="73.1" y="515.0" width="26.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="76.1" y="526.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$get$0 (1,548 samples, 2.24%)</title><rect x="73.1" y="499.0" width="26.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="76.1" y="510.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createExchangeImpl (1,548 samples, 2.24%)</title><rect x="73.1" y="483.0" width="26.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="76.1" y="494.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (657 samples, 0.95%)</title><rect x="73.3" y="467.0" width="11.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="76.3" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (657 samples, 0.95%)</title><rect x="73.3" y="451.0" width="11.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="76.3" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (657 samples, 0.95%)</title><rect x="73.3" y="435.0" width="11.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="76.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$201/376986198.apply (636 samples, 0.92%)</title><rect x="73.3" y="419.0" width="10.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="76.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$1 (636 samples, 0.92%)</title><rect x="73.3" y="403.0" width="10.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="76.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (636 samples, 0.92%)</title><rect x="73.3" y="387.0" width="10.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="76.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (636 samples, 0.92%)</title><rect x="73.3" y="371.0" width="10.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="76.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getSettingsString (414 samples, 0.60%)</title><rect x="73.3" y="355.0" width="7.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="76.3" y="366.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encodeToString (130 samples, 0.19%)</title><rect x="73.3" y="339.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="76.3" y="350.0"></text>
</g>
<g>
<title>java.lang.String (19 samples, 0.03%)</title><rect x="73.3" y="323.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="76.3" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (56 samples, 0.08%)</title><rect x="73.6" y="323.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="76.6" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (56 samples, 0.08%)</title><rect x="73.6" y="307.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="76.6" y="318.0"></text>
</g>
<g>
<title>byte[] (56 samples, 0.08%)</title><rect x="73.6" y="291.0" width="1.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="76.6" y="302.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encode (55 samples, 0.08%)</title><rect x="74.6" y="323.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="77.6" y="334.0"></text>
</g>
<g>
<title>byte[] (55 samples, 0.08%)</title><rect x="74.6" y="307.0" width="0.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="77.6" y="318.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.withoutPadding (20 samples, 0.03%)</title><rect x="75.5" y="339.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="78.5" y="350.0"></text>
</g>
<g>
<title>java.util.Base64$Encoder (20 samples, 0.03%)</title><rect x="75.5" y="323.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="78.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getClientSettings (183 samples, 0.26%)</title><rect x="75.8" y="339.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="78.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getParameter (130 samples, 0.19%)</title><rect x="76.0" y="323.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="79.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getIntegerNetProperty (130 samples, 0.19%)</title><rect x="76.0" y="307.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="79.0" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/896644936.linkToTargetMethod (90 samples, 0.13%)</title><rect x="76.0" y="291.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="79.0" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (90 samples, 0.13%)</title><rect x="76.0" y="275.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="79.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$61/1212772528.get$Lambda (90 samples, 0.13%)</title><rect x="76.0" y="259.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="79.0" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Utils$$Lambda$61 (90 samples, 0.13%)</title><rect x="76.0" y="243.0" width="1.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="79.0" y="254.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (40 samples, 0.06%)</title><rect x="77.6" y="291.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="80.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$61/1212772528.run (40 samples, 0.06%)</title><rect x="77.6" y="275.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="80.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$getIntegerNetProperty$11 (40 samples, 0.06%)</title><rect x="77.6" y="259.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="80.6" y="270.0"></text>
</g>
<g>
<title>sun/net/NetProperties.getInteger (40 samples, 0.06%)</title><rect x="77.6" y="243.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="80.6" y="254.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (40 samples, 0.06%)</title><rect x="77.6" y="227.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="80.6" y="238.0"></text>
</g>
<g>
<title>java.lang.Integer (40 samples, 0.06%)</title><rect x="77.6" y="211.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="80.6" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (41 samples, 0.06%)</title><rect x="78.3" y="323.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="81.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (41 samples, 0.06%)</title><rect x="78.3" y="307.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="81.3" y="318.0"></text>
</g>
<g>
<title>int[] (41 samples, 0.06%)</title><rect x="78.3" y="291.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="81.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.toByteArray (81 samples, 0.12%)</title><rect x="79.0" y="339.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="82.0" y="350.0"></text>
</g>
<g>
<title>byte[] (42 samples, 0.06%)</title><rect x="79.0" y="323.0" width="0.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="82.0" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (39 samples, 0.06%)</title><rect x="79.7" y="323.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="82.7" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (39 samples, 0.06%)</title><rect x="79.7" y="307.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="82.7" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (39 samples, 0.06%)</title><rect x="79.7" y="291.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="82.7" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (222 samples, 0.32%)</title><rect x="80.3" y="355.0" width="3.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="83.3" y="366.0"></text>
</g>
<g>
<title>java.util.ArrayList (67 samples, 0.10%)</title><rect x="80.3" y="339.0" width="1.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="83.3" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (51 samples, 0.07%)</title><rect x="81.5" y="339.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="84.5" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (51 samples, 0.07%)</title><rect x="81.5" y="323.0" width="0.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="84.5" y="334.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (104 samples, 0.15%)</title><rect x="82.4" y="339.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="85.4" y="350.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (104 samples, 0.15%)</title><rect x="82.4" y="323.0" width="1.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="85.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (21 samples, 0.03%)</title><rect x="84.1" y="419.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="87.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (21 samples, 0.03%)</title><rect x="84.1" y="403.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="87.1" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (21 samples, 0.03%)</title><rect x="84.1" y="387.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="87.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (879 samples, 1.27%)</title><rect x="84.5" y="467.0" width="15.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="87.5" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange (75 samples, 0.11%)</title><rect x="84.5" y="451.0" width="1.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="87.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (779 samples, 1.13%)</title><rect x="85.8" y="451.0" width="13.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="88.8" y="462.0"></text>
</g>
<g>
<title>java.util.LinkedList (15 samples, 0.02%)</title><rect x="85.9" y="435.0" width="0.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="88.9" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (22 samples, 0.03%)</title><rect x="86.1" y="435.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="89.1" y="446.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (37 samples, 0.05%)</title><rect x="86.5" y="435.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="89.5" y="446.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (37 samples, 0.05%)</title><rect x="86.5" y="419.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="89.5" y="430.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (37 samples, 0.05%)</title><rect x="86.5" y="403.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="89.5" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver (55 samples, 0.08%)</title><rect x="87.4" y="435.0" width="0.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="90.4" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher (31 samples, 0.04%)</title><rect x="88.3" y="435.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="91.3" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request (44 samples, 0.06%)</title><rect x="88.9" y="435.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="91.9" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (62 samples, 0.09%)</title><rect x="89.6" y="435.0" width="1.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="92.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (249 samples, 0.36%)</title><rect x="90.7" y="435.0" width="4.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="93.7" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (24 samples, 0.03%)</title><rect x="90.7" y="419.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="93.7" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (24 samples, 0.03%)</title><rect x="91.2" y="419.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="94.2" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (16 samples, 0.02%)</title><rect x="91.8" y="419.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="94.8" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (16 samples, 0.02%)</title><rect x="91.8" y="403.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="94.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$199/1509846524.get$Lambda (16 samples, 0.02%)</title><rect x="91.8" y="387.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="94.8" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$199 (16 samples, 0.02%)</title><rect x="91.8" y="371.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="94.8" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (22 samples, 0.03%)</title><rect x="92.1" y="419.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="95.1" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (22 samples, 0.03%)</title><rect x="92.1" y="403.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="95.1" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1TubeSubscriber (22 samples, 0.03%)</title><rect x="92.4" y="419.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="95.4" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (27 samples, 0.04%)</title><rect x="92.8" y="419.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="95.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (96 samples, 0.14%)</title><rect x="93.3" y="419.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="96.3" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (25 samples, 0.04%)</title><rect x="93.3" y="403.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="96.3" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (22 samples, 0.03%)</title><rect x="93.7" y="403.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="96.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.&lt;init&gt; (16 samples, 0.02%)</title><rect x="94.1" y="403.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="97.1" y="414.0"></text>
</g>
<g>
<title>java.lang.Object (16 samples, 0.02%)</title><rect x="94.1" y="387.0" width="0.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="97.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (33 samples, 0.05%)</title><rect x="94.3" y="403.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="97.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (144 samples, 0.21%)</title><rect x="94.9" y="435.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="97.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (99 samples, 0.14%)</title><rect x="95.7" y="419.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="98.7" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (20 samples, 0.03%)</title><rect x="95.7" y="403.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="98.7" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (27 samples, 0.04%)</title><rect x="96.0" y="403.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="99.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (38 samples, 0.05%)</title><rect x="96.7" y="403.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="99.7" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (15 samples, 0.02%)</title><rect x="96.7" y="387.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="99.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (31 samples, 0.04%)</title><rect x="97.4" y="435.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="100.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (31 samples, 0.04%)</title><rect x="97.4" y="419.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="100.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (31 samples, 0.04%)</title><rect x="97.4" y="403.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="100.4" y="414.0"></text>
</g>
<g>
<title>java/util/HashMap.get (31 samples, 0.04%)</title><rect x="97.4" y="387.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="100.4" y="398.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (31 samples, 0.04%)</title><rect x="97.4" y="371.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="100.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (31 samples, 0.04%)</title><rect x="97.4" y="355.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="100.4" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (31 samples, 0.04%)</title><rect x="97.4" y="339.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="100.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (68 samples, 0.10%)</title><rect x="97.9" y="435.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="100.9" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/896644936.linkToTargetMethod (18 samples, 0.03%)</title><rect x="97.9" y="419.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="100.9" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (18 samples, 0.03%)</title><rect x="97.9" y="403.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="100.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$163/1956467138.get$Lambda (18 samples, 0.03%)</title><rect x="97.9" y="387.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="100.9" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl$$Lambda$163 (18 samples, 0.03%)</title><rect x="97.9" y="371.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="100.9" y="382.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (50 samples, 0.07%)</title><rect x="98.2" y="419.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="101.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$163/1956467138.run (50 samples, 0.07%)</title><rect x="98.2" y="403.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="101.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (50 samples, 0.07%)</title><rect x="98.2" y="387.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="101.2" y="398.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (38 samples, 0.05%)</title><rect x="98.4" y="371.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="101.4" y="382.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress$InetSocketAddressHolder (22 samples, 0.03%)</title><rect x="98.4" y="355.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="101.4" y="366.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (16 samples, 0.02%)</title><rect x="98.8" y="355.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="101.8" y="366.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (16 samples, 0.02%)</title><rect x="98.8" y="339.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="101.8" y="350.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (16 samples, 0.02%)</title><rect x="98.8" y="323.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="101.8" y="334.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (16 samples, 0.02%)</title><rect x="98.8" y="307.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="101.8" y="318.0"></text>
</g>
<g>
<title>java.net.InetAddress[] (16 samples, 0.02%)</title><rect x="98.8" y="291.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="101.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (25 samples, 0.04%)</title><rect x="99.1" y="451.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="102.1" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (25 samples, 0.04%)</title><rect x="99.1" y="435.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="102.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (24 samples, 0.03%)</title><rect x="99.5" y="531.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="102.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (24 samples, 0.03%)</title><rect x="99.5" y="515.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="102.5" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (24 samples, 0.03%)</title><rect x="99.5" y="499.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="102.5" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (32 samples, 0.05%)</title><rect x="99.9" y="563.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="102.9" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (32 samples, 0.05%)</title><rect x="99.9" y="547.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="102.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (32 samples, 0.05%)</title><rect x="99.9" y="531.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="102.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (32 samples, 0.05%)</title><rect x="99.9" y="515.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="102.9" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (32 samples, 0.05%)</title><rect x="99.9" y="499.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="102.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getConnectionFor (76 samples, 0.11%)</title><rect x="100.4" y="563.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="103.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyFor (49 samples, 0.07%)</title><rect x="100.4" y="547.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="103.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyString (49 samples, 0.07%)</title><rect x="100.4" y="531.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="103.4" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/888960014.linkToTargetMethod (49 samples, 0.07%)</title><rect x="100.4" y="515.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="103.4" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1103745955.invoke (49 samples, 0.07%)</title><rect x="100.4" y="499.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="103.4" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/642648282.invoke (49 samples, 0.07%)</title><rect x="100.4" y="483.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="103.4" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (49 samples, 0.07%)</title><rect x="100.4" y="467.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="103.4" y="478.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (25 samples, 0.04%)</title><rect x="100.4" y="451.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="103.4" y="462.0"></text>
</g>
<g>
<title>java.lang.String (25 samples, 0.04%)</title><rect x="100.4" y="435.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="103.4" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (24 samples, 0.03%)</title><rect x="100.9" y="451.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="103.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (24 samples, 0.03%)</title><rect x="100.9" y="435.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="103.9" y="446.0"></text>
</g>
<g>
<title>byte[] (24 samples, 0.03%)</title><rect x="100.9" y="419.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="103.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (27 samples, 0.04%)</title><rect x="101.3" y="547.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="104.3" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (27 samples, 0.04%)</title><rect x="101.3" y="531.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="104.3" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (1,412 samples, 2.04%)</title><rect x="101.7" y="739.0" width="24.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="104.7" y="750.0">j..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (1,215 samples, 1.76%)</title><rect x="101.7" y="723.0" width="20.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="104.7" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (1,214 samples, 1.76%)</title><rect x="101.7" y="707.0" width="20.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="104.7" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (1,214 samples, 1.76%)</title><rect x="101.7" y="691.0" width="20.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="104.7" y="702.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (1,214 samples, 1.76%)</title><rect x="101.7" y="675.0" width="20.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="104.7" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.take (197 samples, 0.28%)</title><rect x="122.5" y="723.0" width="3.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="125.5" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.take (197 samples, 0.28%)</title><rect x="122.5" y="707.0" width="3.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="125.5" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.awaitNanos (197 samples, 0.28%)</title><rect x="122.5" y="691.0" width="3.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="125.5" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (197 samples, 0.28%)</title><rect x="122.5" y="675.0" width="3.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="125.5" y="686.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (197 samples, 0.28%)</title><rect x="122.5" y="659.0" width="3.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="125.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$247/1271722553.run (957 samples, 1.38%)</title><rect x="125.8" y="739.0" width="16.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="128.8" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (957 samples, 1.38%)</title><rect x="125.8" y="723.0" width="16.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="128.8" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (957 samples, 1.38%)</title><rect x="125.8" y="707.0" width="16.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="128.8" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (957 samples, 1.38%)</title><rect x="125.8" y="691.0" width="16.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="128.8" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (957 samples, 1.38%)</title><rect x="125.8" y="675.0" width="16.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="128.8" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (957 samples, 1.38%)</title><rect x="125.8" y="659.0" width="16.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="128.8" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (957 samples, 1.38%)</title><rect x="125.8" y="643.0" width="16.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="128.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (957 samples, 1.38%)</title><rect x="125.8" y="627.0" width="16.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="128.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (957 samples, 1.38%)</title><rect x="125.8" y="611.0" width="16.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="128.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (957 samples, 1.38%)</title><rect x="125.8" y="595.0" width="16.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="128.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (957 samples, 1.38%)</title><rect x="125.8" y="579.0" width="16.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="128.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (879 samples, 1.27%)</title><rect x="125.8" y="563.0" width="15.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="128.8" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (76 samples, 0.11%)</title><rect x="125.8" y="547.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="128.8" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (76 samples, 0.11%)</title><rect x="125.8" y="531.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="128.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$255/1758095350.get$Lambda (16 samples, 0.02%)</title><rect x="125.8" y="515.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="128.8" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$255 (16 samples, 0.02%)</title><rect x="125.8" y="499.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="128.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$275/1824837738.get$Lambda (30 samples, 0.04%)</title><rect x="126.1" y="515.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="129.1" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$275 (30 samples, 0.04%)</title><rect x="126.1" y="499.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="129.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$277/496276186.get$Lambda (30 samples, 0.04%)</title><rect x="126.6" y="515.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="129.6" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$277 (30 samples, 0.04%)</title><rect x="126.6" y="499.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="129.6" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (803 samples, 1.16%)</title><rect x="127.1" y="547.0" width="13.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="130.1" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (33 samples, 0.05%)</title><rect x="127.1" y="531.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="130.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (770 samples, 1.11%)</title><rect x="127.7" y="531.0" width="13.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="130.7" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (770 samples, 1.11%)</title><rect x="127.7" y="515.0" width="13.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="130.7" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (770 samples, 1.11%)</title><rect x="127.7" y="499.0" width="13.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="130.7" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (132 samples, 0.19%)</title><rect x="127.7" y="483.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="130.7" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (48 samples, 0.07%)</title><rect x="127.7" y="467.0" width="0.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="130.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$267/1020030449.apply (79 samples, 0.11%)</title><rect x="128.5" y="467.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="131.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (79 samples, 0.11%)</title><rect x="128.5" y="451.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="131.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (79 samples, 0.11%)</title><rect x="128.5" y="435.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="131.5" y="446.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (17 samples, 0.02%)</title><rect x="128.5" y="419.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="131.5" y="430.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (17 samples, 0.02%)</title><rect x="128.5" y="403.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="131.5" y="414.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (17 samples, 0.02%)</title><rect x="128.5" y="387.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="131.5" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (62 samples, 0.09%)</title><rect x="128.8" y="419.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="131.8" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (50 samples, 0.07%)</title><rect x="129.0" y="403.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="132.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (50 samples, 0.07%)</title><rect x="129.0" y="387.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="132.0" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (24 samples, 0.03%)</title><rect x="129.0" y="371.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="132.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (26 samples, 0.04%)</title><rect x="129.4" y="371.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="132.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (26 samples, 0.04%)</title><rect x="129.4" y="355.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="132.4" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (26 samples, 0.04%)</title><rect x="129.4" y="339.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="132.4" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (638 samples, 0.92%)</title><rect x="129.9" y="483.0" width="10.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="132.9" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (638 samples, 0.92%)</title><rect x="129.9" y="467.0" width="10.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="132.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$235/542698874.apply (638 samples, 0.92%)</title><rect x="129.9" y="451.0" width="10.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="132.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (638 samples, 0.92%)</title><rect x="129.9" y="435.0" width="10.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="132.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (638 samples, 0.92%)</title><rect x="129.9" y="419.0" width="10.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="132.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$148/2053429061.apply (638 samples, 0.92%)</title><rect x="129.9" y="403.0" width="10.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="132.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (638 samples, 0.92%)</title><rect x="129.9" y="387.0" width="10.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="132.9" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (57 samples, 0.08%)</title><rect x="130.1" y="371.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="133.1" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (57 samples, 0.08%)</title><rect x="130.1" y="355.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="133.1" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (33 samples, 0.05%)</title><rect x="130.1" y="339.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="133.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (24 samples, 0.03%)</title><rect x="130.7" y="339.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="133.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (24 samples, 0.03%)</title><rect x="130.7" y="323.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="133.7" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (24 samples, 0.03%)</title><rect x="130.7" y="307.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="133.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.wrapForUpgrade (57 samples, 0.08%)</title><rect x="131.1" y="371.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="134.1" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (45 samples, 0.07%)</title><rect x="131.3" y="355.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="134.3" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (45 samples, 0.07%)</title><rect x="131.3" y="339.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="134.3" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (21 samples, 0.03%)</title><rect x="131.3" y="323.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="134.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (24 samples, 0.03%)</title><rect x="131.7" y="323.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="134.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (24 samples, 0.03%)</title><rect x="131.7" y="307.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="134.7" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (24 samples, 0.03%)</title><rect x="131.7" y="291.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="134.7" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (514 samples, 0.74%)</title><rect x="132.1" y="371.0" width="8.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="135.1" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (177 samples, 0.26%)</title><rect x="132.1" y="355.0" width="3.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="135.1" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (177 samples, 0.26%)</title><rect x="132.1" y="339.0" width="3.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="135.1" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptNow (177 samples, 0.26%)</title><rect x="132.1" y="323.0" width="3.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="135.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$257/1538959368.accept (57 samples, 0.08%)</title><rect x="132.1" y="307.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="135.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$7 (57 samples, 0.08%)</title><rect x="132.1" y="291.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="135.1" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.cancelIfFailed (57 samples, 0.08%)</title><rect x="132.1" y="275.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="135.1" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (21 samples, 0.03%)</title><rect x="132.1" y="259.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="135.1" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (21 samples, 0.03%)</title><rect x="132.1" y="243.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="135.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$260/860239668.get$Lambda (21 samples, 0.03%)</title><rect x="132.1" y="227.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="135.1" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$260 (21 samples, 0.03%)</title><rect x="132.1" y="211.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="135.1" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (36 samples, 0.05%)</title><rect x="132.4" y="259.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="135.4" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (36 samples, 0.05%)</title><rect x="132.4" y="243.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="135.4" y="254.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (19 samples, 0.03%)</title><rect x="132.4" y="227.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="135.4" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (17 samples, 0.02%)</title><rect x="132.7" y="227.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="135.7" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (17 samples, 0.02%)</title><rect x="132.7" y="211.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="135.7" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (17 samples, 0.02%)</title><rect x="132.7" y="195.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="135.7" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$263/580364296.accept (70 samples, 0.10%)</title><rect x="133.0" y="307.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="136.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$8 (70 samples, 0.10%)</title><rect x="133.0" y="291.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="136.0" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.requestMoreBody (70 samples, 0.10%)</title><rect x="133.0" y="275.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="136.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.request (70 samples, 0.10%)</title><rect x="133.0" y="259.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="136.0" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.request (70 samples, 0.10%)</title><rect x="133.0" y="243.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="136.0" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (70 samples, 0.10%)</title><rect x="133.0" y="227.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="136.0" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (70 samples, 0.10%)</title><rect x="133.0" y="211.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="136.0" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (70 samples, 0.10%)</title><rect x="133.0" y="195.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="136.0" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (70 samples, 0.10%)</title><rect x="133.0" y="179.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="136.0" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (70 samples, 0.10%)</title><rect x="133.0" y="163.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="136.0" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onComplete (24 samples, 0.03%)</title><rect x="133.0" y="147.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="136.0" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (24 samples, 0.03%)</title><rect x="133.0" y="131.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="136.0" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (16 samples, 0.02%)</title><rect x="133.2" y="115.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="136.2" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (16 samples, 0.02%)</title><rect x="133.2" y="99.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="136.2" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (16 samples, 0.02%)</title><rect x="133.2" y="83.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="136.2" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (16 samples, 0.02%)</title><rect x="133.2" y="67.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="136.2" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (16 samples, 0.02%)</title><rect x="133.2" y="51.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="136.2" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (16 samples, 0.02%)</title><rect x="133.2" y="35.0" width="0.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="136.2" y="46.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (46 samples, 0.07%)</title><rect x="133.4" y="147.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="136.4" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (46 samples, 0.07%)</title><rect x="133.4" y="131.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="136.4" y="142.0"></text>
</g>
<g>
<title>java/util/List.of (16 samples, 0.02%)</title><rect x="133.4" y="115.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="136.4" y="126.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (16 samples, 0.02%)</title><rect x="133.4" y="99.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="136.4" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (30 samples, 0.04%)</title><rect x="133.7" y="115.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="136.7" y="126.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (17 samples, 0.02%)</title><rect x="133.7" y="99.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="136.7" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (50 samples, 0.07%)</title><rect x="134.2" y="307.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="137.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (50 samples, 0.07%)</title><rect x="134.2" y="291.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="137.2" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (50 samples, 0.07%)</title><rect x="134.2" y="275.0" width="0.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="137.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.continueRequest (337 samples, 0.49%)</title><rect x="135.1" y="355.0" width="5.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="138.1" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request$FixedContentSubscriber (32 samples, 0.05%)</title><rect x="135.1" y="339.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="138.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.&lt;init&gt; (21 samples, 0.03%)</title><rect x="135.6" y="339.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="138.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.&lt;init&gt; (21 samples, 0.03%)</title><rect x="135.6" y="323.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="138.6" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (21 samples, 0.03%)</title><rect x="135.6" y="307.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="138.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.subscribe (284 samples, 0.41%)</title><rect x="136.0" y="339.0" width="4.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="139.0" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.PullPublisher (19 samples, 0.03%)</title><rect x="136.0" y="323.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="139.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher.subscribe (143 samples, 0.21%)</title><rect x="136.3" y="323.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="139.3" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (23 samples, 0.03%)</title><rect x="136.3" y="307.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="139.3" y="318.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (23 samples, 0.03%)</title><rect x="136.3" y="291.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="139.3" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.PullPublisher$Subscription (24 samples, 0.03%)</title><rect x="136.7" y="307.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="139.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.&lt;init&gt; (96 samples, 0.14%)</title><rect x="137.1" y="307.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="140.1" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (27 samples, 0.04%)</title><rect x="137.4" y="291.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="140.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (15 samples, 0.02%)</title><rect x="137.8" y="291.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="140.8" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (15 samples, 0.02%)</title><rect x="137.8" y="275.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="140.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (40 samples, 0.06%)</title><rect x="138.1" y="291.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="141.1" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SchedulableTask (15 samples, 0.02%)</title><rect x="138.2" y="275.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="141.2" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (16 samples, 0.02%)</title><rect x="138.5" y="275.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="141.5" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.copy (122 samples, 0.18%)</title><rect x="138.8" y="323.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="141.8" y="334.0"></text>
</g>
<g>
<title>java.util.ArrayList (17 samples, 0.02%)</title><rect x="138.8" y="307.0" width="0.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="141.8" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (59 samples, 0.09%)</title><rect x="139.0" y="307.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="142.0" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (40 samples, 0.06%)</title><rect x="139.0" y="291.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="142.0" y="302.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (19 samples, 0.03%)</title><rect x="139.7" y="291.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="142.7" y="302.0"></text>
</g>
<g>
<title>byte[] (19 samples, 0.03%)</title><rect x="139.7" y="275.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="142.7" y="286.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (46 samples, 0.07%)</title><rect x="140.0" y="307.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="143.0" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (46 samples, 0.07%)</title><rect x="140.0" y="291.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="143.0" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (46 samples, 0.07%)</title><rect x="140.0" y="275.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="143.0" y="286.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (46 samples, 0.07%)</title><rect x="140.0" y="259.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="143.0" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (46 samples, 0.07%)</title><rect x="140.0" y="243.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="143.0" y="254.0"></text>
</g>
<g>
<title>java.lang.Object[] (46 samples, 0.07%)</title><rect x="140.0" y="227.0" width="0.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="143.0" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (78 samples, 0.11%)</title><rect x="140.8" y="563.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="143.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (78 samples, 0.11%)</title><rect x="140.8" y="547.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="143.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (78 samples, 0.11%)</title><rect x="140.8" y="531.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="143.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (78 samples, 0.11%)</title><rect x="140.8" y="515.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="143.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (78 samples, 0.11%)</title><rect x="140.8" y="499.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="143.8" y="510.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (78 samples, 0.11%)</title><rect x="140.8" y="483.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="143.8" y="494.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (28 samples, 0.04%)</title><rect x="140.8" y="467.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="143.8" y="478.0"></text>
</g>
<g>
<title>java.nio.ByteBuffer[] (28 samples, 0.04%)</title><rect x="140.8" y="451.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="143.8" y="462.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (50 samples, 0.07%)</title><rect x="141.3" y="467.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="144.3" y="478.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (50 samples, 0.07%)</title><rect x="141.3" y="451.0" width="0.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="144.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (3,159 samples, 4.57%)</title><rect x="142.2" y="739.0" width="53.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="145.2" y="750.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (3,159 samples, 4.57%)</title><rect x="142.2" y="723.0" width="53.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="145.2" y="734.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (2,701 samples, 3.91%)</title><rect x="142.2" y="707.0" width="46.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="145.2" y="718.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$199/1509846524.run (2,701 samples, 3.91%)</title><rect x="142.2" y="691.0" width="46.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="145.2" y="702.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (2,701 samples, 3.91%)</title><rect x="142.2" y="675.0" width="46.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="145.2" y="686.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (63 samples, 0.09%)</title><rect x="142.2" y="659.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="145.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (63 samples, 0.09%)</title><rect x="142.2" y="643.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="145.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (63 samples, 0.09%)</title><rect x="142.2" y="627.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="145.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (63 samples, 0.09%)</title><rect x="142.2" y="611.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="145.2" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/623247230.linkToTargetMethod (30 samples, 0.04%)</title><rect x="142.2" y="595.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="145.2" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/773662650.invoke (30 samples, 0.04%)</title><rect x="142.2" y="579.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="145.2" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (30 samples, 0.04%)</title><rect x="142.2" y="563.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="145.2" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (30 samples, 0.04%)</title><rect x="142.2" y="547.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="145.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (30 samples, 0.04%)</title><rect x="142.2" y="531.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="145.2" y="542.0"></text>
</g>
<g>
<title>byte[] (30 samples, 0.04%)</title><rect x="142.2" y="515.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="145.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (33 samples, 0.05%)</title><rect x="142.7" y="595.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="145.7" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (33 samples, 0.05%)</title><rect x="142.7" y="579.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="145.7" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (33 samples, 0.05%)</title><rect x="142.7" y="563.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="145.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$251/1699824535.get$Lambda (33 samples, 0.05%)</title><rect x="142.7" y="547.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="145.7" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$251 (33 samples, 0.05%)</title><rect x="142.7" y="531.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="145.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (2,638 samples, 3.81%)</title><rect x="143.2" y="659.0" width="45.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="146.2" y="670.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (2,638 samples, 3.81%)</title><rect x="143.2" y="643.0" width="45.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="146.2" y="654.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (2,638 samples, 3.81%)</title><rect x="143.2" y="627.0" width="45.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="146.2" y="638.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (2,638 samples, 3.81%)</title><rect x="143.2" y="611.0" width="45.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="146.2" y="622.0">jdk/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1,220 samples, 1.76%)</title><rect x="143.2" y="595.0" width="20.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="146.2" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1,220 samples, 1.76%)</title><rect x="143.2" y="579.0" width="20.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="146.2" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (1,220 samples, 1.76%)</title><rect x="143.2" y="563.0" width="20.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="146.2" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1,220 samples, 1.76%)</title><rect x="143.2" y="547.0" width="20.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="146.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1,220 samples, 1.76%)</title><rect x="143.2" y="531.0" width="20.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="146.2" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (1,220 samples, 1.76%)</title><rect x="143.2" y="515.0" width="20.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="146.2" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (1,220 samples, 1.76%)</title><rect x="143.2" y="499.0" width="20.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="146.2" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (1,188 samples, 1.72%)</title><rect x="143.2" y="483.0" width="20.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="146.2" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1,188 samples, 1.72%)</title><rect x="143.2" y="467.0" width="20.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="146.2" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (1,163 samples, 1.68%)</title><rect x="143.2" y="451.0" width="19.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="146.2" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (26 samples, 0.04%)</title><rect x="143.2" y="435.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="146.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$270/294090489.apply (23 samples, 0.03%)</title><rect x="143.7" y="435.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="146.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$wrapForUpgrade$10 (23 samples, 0.03%)</title><rect x="143.7" y="419.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="146.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkForUpgradeAsync (23 samples, 0.03%)</title><rect x="143.7" y="403.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="146.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (23 samples, 0.03%)</title><rect x="143.7" y="387.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="146.7" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (23 samples, 0.03%)</title><rect x="143.7" y="371.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="146.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$132/1112562714.apply (1,049 samples, 1.52%)</title><rect x="144.1" y="435.0" width="17.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="147.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (1,049 samples, 1.52%)</title><rect x="144.1" y="419.0" width="17.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="147.1" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (17 samples, 0.02%)</title><rect x="144.1" y="403.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="147.1" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (17 samples, 0.02%)</title><rect x="144.1" y="387.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="147.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$309/980063472.get$Lambda (17 samples, 0.02%)</title><rect x="144.1" y="371.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="147.1" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$309 (17 samples, 0.02%)</title><rect x="144.1" y="355.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="147.1" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (53 samples, 0.08%)</title><rect x="144.4" y="403.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="147.4" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (53 samples, 0.08%)</title><rect x="144.4" y="387.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="147.4" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (30 samples, 0.04%)</title><rect x="144.4" y="371.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="147.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (23 samples, 0.03%)</title><rect x="144.9" y="371.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="147.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (23 samples, 0.03%)</title><rect x="144.9" y="355.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="147.9" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (23 samples, 0.03%)</title><rect x="144.9" y="339.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="147.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (979 samples, 1.42%)</title><rect x="145.3" y="403.0" width="16.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="148.3" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (53 samples, 0.08%)</title><rect x="145.5" y="387.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="148.5" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (53 samples, 0.08%)</title><rect x="145.5" y="371.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="148.5" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (26 samples, 0.04%)</title><rect x="145.5" y="355.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="148.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (27 samples, 0.04%)</title><rect x="145.9" y="355.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="148.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (27 samples, 0.04%)</title><rect x="145.9" y="339.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="148.9" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (27 samples, 0.04%)</title><rect x="145.9" y="323.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="148.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (915 samples, 1.32%)</title><rect x="146.4" y="387.0" width="15.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="149.4" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers$$Lambda$120/1352876739.apply (63 samples, 0.09%)</title><rect x="146.4" y="371.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="149.4" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers.lambda$ofByteArray$12 (63 samples, 0.09%)</title><rect x="146.4" y="355.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="149.4" y="366.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.ofByteArray (63 samples, 0.09%)</title><rect x="146.4" y="339.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="149.4" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseSubscribers$ByteArraySubscriber (23 samples, 0.03%)</title><rect x="146.4" y="323.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="149.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.&lt;init&gt; (40 samples, 0.06%)</title><rect x="146.8" y="323.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="149.8" y="334.0"></text>
</g>
<g>
<title>java.util.ArrayList (17 samples, 0.02%)</title><rect x="146.8" y="307.0" width="0.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="149.8" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (23 samples, 0.03%)</title><rect x="147.0" y="307.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="150.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (852 samples, 1.23%)</title><rect x="147.4" y="371.0" width="14.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="150.4" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (27 samples, 0.04%)</title><rect x="147.4" y="355.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="150.4" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (27 samples, 0.04%)</title><rect x="147.4" y="339.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="150.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$300/1036110883.get$Lambda (19 samples, 0.03%)</title><rect x="147.4" y="323.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="150.4" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$300 (19 samples, 0.03%)</title><rect x="147.4" y="307.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="150.4" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/647302181.linkToTargetMethod (39 samples, 0.06%)</title><rect x="147.9" y="355.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="150.9" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1743165624.invokeStatic (39 samples, 0.06%)</title><rect x="147.9" y="339.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="150.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$288/1452226218.get$Lambda (39 samples, 0.06%)</title><rect x="147.9" y="323.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="150.9" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$288 (39 samples, 0.06%)</title><rect x="147.9" y="307.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="150.9" y="318.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (182 samples, 0.26%)</title><rect x="148.6" y="355.0" width="3.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="151.6" y="366.0"></text>
</g>
<g>
<title>java/util/Collection.stream (74 samples, 0.11%)</title><rect x="148.6" y="339.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="151.6" y="350.0"></text>
</g>
<g>
<title>java/util/List.spliterator (31 samples, 0.04%)</title><rect x="148.6" y="323.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="151.6" y="334.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (31 samples, 0.04%)</title><rect x="148.6" y="307.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="151.6" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (43 samples, 0.06%)</title><rect x="149.1" y="323.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="152.1" y="334.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (43 samples, 0.06%)</title><rect x="149.1" y="307.0" width="0.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="152.1" y="318.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (58 samples, 0.08%)</title><rect x="149.8" y="339.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="152.8" y="350.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (58 samples, 0.08%)</title><rect x="149.8" y="323.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="152.8" y="334.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (58 samples, 0.08%)</title><rect x="149.8" y="307.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="152.8" y="318.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (16 samples, 0.02%)</title><rect x="149.8" y="291.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="152.8" y="302.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (16 samples, 0.02%)</title><rect x="149.8" y="275.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="152.8" y="286.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.opWrapSink (16 samples, 0.02%)</title><rect x="149.8" y="259.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="152.8" y="270.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5$1 (16 samples, 0.02%)</title><rect x="149.8" y="243.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="152.8" y="254.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong$$Lambda$285/1678898144.get (19 samples, 0.03%)</title><rect x="150.1" y="291.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="153.1" y="302.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfLong (19 samples, 0.03%)</title><rect x="150.1" y="275.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="153.1" y="286.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (23 samples, 0.03%)</title><rect x="150.4" y="291.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="153.4" y="302.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (23 samples, 0.03%)</title><rect x="150.4" y="275.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="153.4" y="286.0"></text>
</g>
<g>
<title>java/util/OptionalLong.of (23 samples, 0.03%)</title><rect x="150.4" y="259.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="153.4" y="270.0"></text>
</g>
<g>
<title>java.util.OptionalLong (23 samples, 0.03%)</title><rect x="150.4" y="243.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="153.4" y="254.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.mapToLong (50 samples, 0.07%)</title><rect x="150.8" y="339.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="153.8" y="350.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5 (50 samples, 0.07%)</title><rect x="150.8" y="323.0" width="0.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="153.8" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (115 samples, 0.17%)</title><rect x="151.7" y="355.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="154.7" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (57 samples, 0.08%)</title><rect x="151.7" y="339.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="154.7" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (31 samples, 0.04%)</title><rect x="151.7" y="323.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="154.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (26 samples, 0.04%)</title><rect x="152.2" y="323.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="155.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (26 samples, 0.04%)</title><rect x="152.2" y="307.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="155.2" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (26 samples, 0.04%)</title><rect x="152.2" y="291.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="155.2" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (58 samples, 0.08%)</title><rect x="152.6" y="339.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="155.6" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (58 samples, 0.08%)</title><rect x="152.6" y="323.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="155.6" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (40 samples, 0.06%)</title><rect x="152.6" y="307.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="155.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (18 samples, 0.03%)</title><rect x="153.3" y="307.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="156.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (18 samples, 0.03%)</title><rect x="153.3" y="291.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="156.3" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (18 samples, 0.03%)</title><rect x="153.3" y="275.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="156.3" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$Http1BodySubscriber (30 samples, 0.04%)</title><rect x="153.9" y="355.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="156.9" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (29 samples, 0.04%)</title><rect x="154.4" y="355.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="157.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (408 samples, 0.59%)</title><rect x="155.0" y="355.0" width="7.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="158.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$288/1452226218.run (408 samples, 0.59%)</title><rect x="155.0" y="339.0" width="7.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="158.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (408 samples, 0.59%)</title><rect x="155.0" y="323.0" width="7.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="158.0" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (44 samples, 0.06%)</title><rect x="155.0" y="307.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="158.0" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (44 samples, 0.06%)</title><rect x="155.0" y="291.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="158.0" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$292/1528731011.get$Lambda (20 samples, 0.03%)</title><rect x="155.1" y="275.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="158.1" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$292 (20 samples, 0.03%)</title><rect x="155.1" y="259.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="158.1" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$295/1644078329.get$Lambda (16 samples, 0.02%)</title><rect x="155.5" y="275.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="158.5" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$295 (16 samples, 0.02%)</title><rect x="155.5" y="259.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="158.5" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (46 samples, 0.07%)</title><rect x="155.8" y="307.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="158.8" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (46 samples, 0.07%)</title><rect x="155.8" y="291.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="158.8" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (23 samples, 0.03%)</title><rect x="155.8" y="275.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="158.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (23 samples, 0.03%)</title><rect x="156.2" y="275.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="159.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (23 samples, 0.03%)</title><rect x="156.2" y="259.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="159.2" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (23 samples, 0.03%)</title><rect x="156.2" y="243.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="159.2" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent (26 samples, 0.04%)</title><rect x="156.5" y="307.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="159.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.start (23 samples, 0.03%)</title><rect x="157.0" y="307.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="160.0" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (23 samples, 0.03%)</title><rect x="157.0" y="291.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="160.0" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (66 samples, 0.10%)</title><rect x="157.4" y="307.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="160.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (66 samples, 0.10%)</title><rect x="157.4" y="291.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="160.4" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (15 samples, 0.02%)</title><rect x="157.4" y="275.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="160.4" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (15 samples, 0.02%)</title><rect x="157.4" y="259.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="160.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$297/1321510655.get$Lambda (15 samples, 0.02%)</title><rect x="157.4" y="243.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="160.4" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpConnection$TrailingOperations$$Lambda$297 (15 samples, 0.02%)</title><rect x="157.4" y="227.0" width="0.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="160.4" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (51 samples, 0.07%)</title><rect x="157.6" y="275.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="160.6" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (51 samples, 0.07%)</title><rect x="157.6" y="259.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="160.6" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (51 samples, 0.07%)</title><rect x="157.6" y="243.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="160.6" y="254.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (26 samples, 0.04%)</title><rect x="157.6" y="227.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="160.6" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (25 samples, 0.04%)</title><rect x="158.1" y="227.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="161.1" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (25 samples, 0.04%)</title><rect x="158.1" y="211.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="161.1" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (25 samples, 0.04%)</title><rect x="158.1" y="195.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="161.1" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (68 samples, 0.10%)</title><rect x="158.5" y="307.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="161.5" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (68 samples, 0.10%)</title><rect x="158.5" y="291.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="161.5" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1357563986.invoke (68 samples, 0.10%)</title><rect x="158.5" y="275.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="161.5" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (68 samples, 0.10%)</title><rect x="158.5" y="259.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="161.5" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (54 samples, 0.08%)</title><rect x="158.7" y="243.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="161.7" y="254.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (54 samples, 0.08%)</title><rect x="158.7" y="227.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="161.7" y="238.0"></text>
</g>
<g>
<title>byte[] (54 samples, 0.08%)</title><rect x="158.7" y="211.0" width="1.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="161.7" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (135 samples, 0.20%)</title><rect x="159.7" y="307.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="162.7" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent$FixedLengthBodyParser (47 samples, 0.07%)</title><rect x="159.7" y="291.0" width="0.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="162.7" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (88 samples, 0.13%)</title><rect x="160.5" y="291.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="163.5" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (88 samples, 0.13%)</title><rect x="160.5" y="275.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="163.5" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1357563986.invoke (88 samples, 0.13%)</title><rect x="160.5" y="259.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="163.5" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (88 samples, 0.13%)</title><rect x="160.5" y="243.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="163.5" y="254.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (18 samples, 0.03%)</title><rect x="160.5" y="227.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="163.5" y="238.0"></text>
</g>
<g>
<title>java.lang.String (18 samples, 0.03%)</title><rect x="160.5" y="211.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="163.5" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (70 samples, 0.10%)</title><rect x="160.8" y="227.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="163.8" y="238.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (70 samples, 0.10%)</title><rect x="160.8" y="211.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="163.8" y="222.0"></text>
</g>
<g>
<title>byte[] (70 samples, 0.10%)</title><rect x="160.8" y="195.0" width="1.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="163.8" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$236/388216554.apply (65 samples, 0.09%)</title><rect x="162.0" y="435.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="165.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (65 samples, 0.09%)</title><rect x="162.0" y="419.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="165.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (29 samples, 0.04%)</title><rect x="162.0" y="403.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="165.0" y="414.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (29 samples, 0.04%)</title><rect x="162.0" y="387.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="165.0" y="398.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (29 samples, 0.04%)</title><rect x="162.0" y="371.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="165.0" y="382.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (29 samples, 0.04%)</title><rect x="162.0" y="355.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="165.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (36 samples, 0.05%)</title><rect x="162.5" y="403.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="165.5" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (36 samples, 0.05%)</title><rect x="162.5" y="387.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="165.5" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (25 samples, 0.04%)</title><rect x="163.1" y="451.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="166.1" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (25 samples, 0.04%)</title><rect x="163.1" y="435.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="166.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$237/1895279177.apply (25 samples, 0.04%)</title><rect x="163.1" y="419.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="166.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (25 samples, 0.04%)</title><rect x="163.1" y="403.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="166.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (25 samples, 0.04%)</title><rect x="163.1" y="387.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="166.1" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (25 samples, 0.04%)</title><rect x="163.1" y="371.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="166.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$278/649988588.apply (32 samples, 0.05%)</title><rect x="163.5" y="483.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="166.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (32 samples, 0.05%)</title><rect x="163.5" y="467.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="166.5" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Response (32 samples, 0.05%)</title><rect x="163.5" y="451.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="166.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (1,418 samples, 2.05%)</title><rect x="164.1" y="595.0" width="24.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="167.1" y="606.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (92 samples, 0.13%)</title><rect x="164.1" y="579.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="167.1" y="590.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (92 samples, 0.13%)</title><rect x="164.1" y="563.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="167.1" y="574.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (92 samples, 0.13%)</title><rect x="164.1" y="547.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="167.1" y="558.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (92 samples, 0.13%)</title><rect x="164.1" y="531.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="167.1" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (92 samples, 0.13%)</title><rect x="164.1" y="515.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="167.1" y="526.0"></text>
</g>
<g>
<title>byte[] (92 samples, 0.13%)</title><rect x="164.1" y="499.0" width="1.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="167.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (61 samples, 0.09%)</title><rect x="165.6" y="579.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="168.6" y="590.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (61 samples, 0.09%)</title><rect x="165.6" y="563.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="168.6" y="574.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (61 samples, 0.09%)</title><rect x="165.6" y="547.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="168.6" y="558.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (61 samples, 0.09%)</title><rect x="165.6" y="531.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="168.6" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (61 samples, 0.09%)</title><rect x="165.6" y="515.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="168.6" y="526.0"></text>
</g>
<g>
<title>byte[] (61 samples, 0.09%)</title><rect x="165.6" y="499.0" width="1.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="168.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (111 samples, 0.16%)</title><rect x="166.7" y="579.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="169.7" y="590.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (18 samples, 0.03%)</title><rect x="166.7" y="563.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="169.7" y="574.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (20 samples, 0.03%)</title><rect x="167.2" y="563.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="170.2" y="574.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (20 samples, 0.03%)</title><rect x="167.2" y="547.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="170.2" y="558.0"></text>
</g>
<g>
<title>byte[] (20 samples, 0.03%)</title><rect x="167.2" y="531.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="170.2" y="542.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (61 samples, 0.09%)</title><rect x="167.5" y="563.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="170.5" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (61 samples, 0.09%)</title><rect x="167.5" y="547.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="170.5" y="558.0"></text>
</g>
<g>
<title>java.lang.String (23 samples, 0.03%)</title><rect x="167.5" y="531.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="170.5" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (38 samples, 0.05%)</title><rect x="167.9" y="531.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="170.9" y="542.0"></text>
</g>
<g>
<title>byte[] (38 samples, 0.05%)</title><rect x="167.9" y="515.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="170.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (393 samples, 0.57%)</title><rect x="168.6" y="579.0" width="6.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="171.6" y="590.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (393 samples, 0.57%)</title><rect x="168.6" y="563.0" width="6.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="171.6" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (393 samples, 0.57%)</title><rect x="168.6" y="547.0" width="6.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="171.6" y="558.0"></text>
</g>
<g>
<title>java.util.ArrayList (16 samples, 0.02%)</title><rect x="168.8" y="531.0" width="0.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="171.8" y="542.0"></text>
</g>
<g>
<title>java.util.TreeMap (35 samples, 0.05%)</title><rect x="169.0" y="531.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="172.0" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (25 samples, 0.04%)</title><rect x="169.9" y="531.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="172.9" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (25 samples, 0.04%)</title><rect x="169.9" y="515.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="172.9" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$115/937225413.get$Lambda (25 samples, 0.04%)</title><rect x="169.9" y="499.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="172.9" y="510.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$115 (25 samples, 0.04%)</title><rect x="169.9" y="483.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="172.9" y="494.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (23 samples, 0.03%)</title><rect x="170.3" y="531.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="173.3" y="542.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (23 samples, 0.03%)</title><rect x="170.3" y="515.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="173.3" y="526.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (230 samples, 0.33%)</title><rect x="170.7" y="531.0" width="3.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="173.7" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$115/937225413.accept (230 samples, 0.33%)</title><rect x="170.7" y="515.0" width="3.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="173.7" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (230 samples, 0.33%)</title><rect x="170.7" y="499.0" width="3.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="173.7" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (36 samples, 0.05%)</title><rect x="170.7" y="483.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="173.7" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (36 samples, 0.05%)</title><rect x="170.7" y="467.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="173.7" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$118/2131634163.get$Lambda (36 samples, 0.05%)</title><rect x="170.7" y="451.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="173.7" y="462.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$118 (36 samples, 0.05%)</title><rect x="170.7" y="435.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="173.7" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (46 samples, 0.07%)</title><rect x="171.3" y="483.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="174.3" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$118/2131634163.accept (46 samples, 0.07%)</title><rect x="171.3" y="467.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="174.3" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (46 samples, 0.07%)</title><rect x="171.3" y="451.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="174.3" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (46 samples, 0.07%)</title><rect x="171.3" y="435.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="174.3" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (46 samples, 0.07%)</title><rect x="171.3" y="419.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="174.3" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (46 samples, 0.07%)</title><rect x="171.3" y="403.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="174.3" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (46 samples, 0.07%)</title><rect x="171.3" y="387.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="174.3" y="398.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (46 samples, 0.07%)</title><rect x="171.3" y="371.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="174.3" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (46 samples, 0.07%)</title><rect x="171.3" y="355.0" width="0.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="174.3" y="366.0"></text>
</g>
<g>
<title>java/util/List.copyOf (76 samples, 0.11%)</title><rect x="172.1" y="483.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="175.1" y="494.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (76 samples, 0.11%)</title><rect x="172.1" y="467.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="175.1" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (41 samples, 0.06%)</title><rect x="172.1" y="451.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="175.1" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (41 samples, 0.06%)</title><rect x="172.1" y="435.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="175.1" y="446.0"></text>
</g>
<g>
<title>java.lang.Object[] (41 samples, 0.06%)</title><rect x="172.1" y="419.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="175.1" y="430.0"></text>
</g>
<g>
<title>java/util/List.of (35 samples, 0.05%)</title><rect x="172.8" y="451.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="175.8" y="462.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (35 samples, 0.05%)</title><rect x="172.8" y="435.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="175.8" y="446.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (72 samples, 0.10%)</title><rect x="173.4" y="483.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="176.4" y="494.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (72 samples, 0.10%)</title><rect x="173.4" y="467.0" width="1.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="176.4" y="478.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (38 samples, 0.05%)</title><rect x="174.6" y="531.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="177.6" y="542.0"></text>
</g>
<g>
<title>java.util.TreeMap (38 samples, 0.05%)</title><rect x="174.6" y="515.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="177.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (761 samples, 1.10%)</title><rect x="175.3" y="579.0" width="13.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="178.3" y="590.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (38 samples, 0.05%)</title><rect x="175.3" y="563.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="178.3" y="574.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (46 samples, 0.07%)</title><rect x="175.9" y="563.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="178.9" y="574.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (46 samples, 0.07%)</title><rect x="175.9" y="547.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="178.9" y="558.0"></text>
</g>
<g>
<title>byte[] (46 samples, 0.07%)</title><rect x="175.9" y="531.0" width="0.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="178.9" y="542.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (92 samples, 0.13%)</title><rect x="176.7" y="563.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="179.7" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (92 samples, 0.13%)</title><rect x="176.7" y="547.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="179.7" y="558.0"></text>
</g>
<g>
<title>java.lang.String (41 samples, 0.06%)</title><rect x="176.7" y="531.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="179.7" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (51 samples, 0.07%)</title><rect x="177.4" y="531.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="180.4" y="542.0"></text>
</g>
<g>
<title>byte[] (51 samples, 0.07%)</title><rect x="177.4" y="515.0" width="0.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="180.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (585 samples, 0.85%)</title><rect x="178.3" y="563.0" width="10.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="181.3" y="574.0"></text>
</g>
<g>
<title>java/lang/String.substring (167 samples, 0.24%)</title><rect x="178.3" y="547.0" width="2.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="181.3" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (167 samples, 0.24%)</title><rect x="178.3" y="531.0" width="2.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="181.3" y="542.0"></text>
</g>
<g>
<title>java.lang.String (79 samples, 0.11%)</title><rect x="178.3" y="515.0" width="1.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="181.3" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (88 samples, 0.13%)</title><rect x="179.6" y="515.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="182.6" y="526.0"></text>
</g>
<g>
<title>byte[] (88 samples, 0.13%)</title><rect x="179.6" y="499.0" width="1.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="182.6" y="510.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (93 samples, 0.13%)</title><rect x="181.1" y="547.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="184.1" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (93 samples, 0.13%)</title><rect x="181.1" y="531.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="184.1" y="542.0"></text>
</g>
<g>
<title>byte[] (49 samples, 0.07%)</title><rect x="181.1" y="515.0" width="0.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="184.1" y="526.0"></text>
</g>
<g>
<title>java.lang.String (44 samples, 0.06%)</title><rect x="182.0" y="515.0" width="0.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="185.0" y="526.0"></text>
</g>
<g>
<title>java/lang/String.trim (77 samples, 0.11%)</title><rect x="182.7" y="547.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="185.7" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (77 samples, 0.11%)</title><rect x="182.7" y="531.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="185.7" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (77 samples, 0.11%)</title><rect x="182.7" y="515.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="185.7" y="526.0"></text>
</g>
<g>
<title>java.lang.String (32 samples, 0.05%)</title><rect x="182.7" y="499.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="185.7" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (45 samples, 0.07%)</title><rect x="183.3" y="499.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="186.3" y="510.0"></text>
</g>
<g>
<title>byte[] (45 samples, 0.07%)</title><rect x="183.3" y="483.0" width="0.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="186.3" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (81 samples, 0.12%)</title><rect x="184.0" y="547.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="187.0" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (81 samples, 0.12%)</title><rect x="184.0" y="531.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="187.0" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (81 samples, 0.12%)</title><rect x="184.0" y="515.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="187.0" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (81 samples, 0.12%)</title><rect x="184.0" y="499.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="187.0" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (81 samples, 0.12%)</title><rect x="184.0" y="483.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="187.0" y="494.0"></text>
</g>
<g>
<title>java.lang.Object[] (81 samples, 0.12%)</title><rect x="184.0" y="467.0" width="1.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="187.0" y="478.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (167 samples, 0.24%)</title><rect x="185.4" y="547.0" width="2.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="188.4" y="558.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (49 samples, 0.07%)</title><rect x="185.4" y="531.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="188.4" y="542.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (49 samples, 0.07%)</title><rect x="185.4" y="515.0" width="0.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="188.4" y="526.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (71 samples, 0.10%)</title><rect x="186.2" y="531.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="189.2" y="542.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (71 samples, 0.10%)</title><rect x="186.2" y="515.0" width="1.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="189.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser$$Lambda$282/1262603830.apply (47 samples, 0.07%)</title><rect x="187.5" y="531.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="190.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.lambda$addHeaderFromString$0 (47 samples, 0.07%)</title><rect x="187.5" y="515.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="190.5" y="526.0"></text>
</g>
<g>
<title>java.util.ArrayList (47 samples, 0.07%)</title><rect x="187.5" y="499.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="190.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (458 samples, 0.66%)</title><rect x="188.3" y="707.0" width="7.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="191.3" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (458 samples, 0.66%)</title><rect x="188.3" y="691.0" width="7.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="191.3" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (458 samples, 0.66%)</title><rect x="188.3" y="675.0" width="7.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="191.3" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$199/1509846524.run (458 samples, 0.66%)</title><rect x="188.3" y="659.0" width="7.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="191.3" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (458 samples, 0.66%)</title><rect x="188.3" y="643.0" width="7.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="191.3" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (452 samples, 0.65%)</title><rect x="188.3" y="627.0" width="7.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="191.3" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (36 samples, 0.05%)</title><rect x="188.3" y="611.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="191.3" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (36 samples, 0.05%)</title><rect x="188.3" y="595.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="191.3" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$219/1370473129.get$Lambda (15 samples, 0.02%)</title><rect x="188.3" y="579.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="191.3" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$219 (15 samples, 0.02%)</title><rect x="188.3" y="563.0" width="0.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="191.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$221/1241815609.get$Lambda (21 samples, 0.03%)</title><rect x="188.5" y="579.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="191.5" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$221 (21 samples, 0.03%)</title><rect x="188.5" y="563.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="191.5" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (24 samples, 0.03%)</title><rect x="188.9" y="611.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="191.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (29 samples, 0.04%)</title><rect x="189.3" y="611.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="192.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (29 samples, 0.04%)</title><rect x="189.3" y="595.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="192.3" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (23 samples, 0.03%)</title><rect x="189.4" y="579.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="192.4" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (23 samples, 0.03%)</title><rect x="189.4" y="563.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="192.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (363 samples, 0.52%)</title><rect x="189.8" y="611.0" width="6.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="192.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (363 samples, 0.52%)</title><rect x="189.8" y="595.0" width="6.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="192.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$290/1089333161.run (306 samples, 0.44%)</title><rect x="189.8" y="579.0" width="5.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="192.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (306 samples, 0.44%)</title><rect x="189.8" y="563.0" width="5.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="192.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (306 samples, 0.44%)</title><rect x="189.8" y="547.0" width="5.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="192.8" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (95 samples, 0.14%)</title><rect x="189.8" y="531.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="192.8" y="542.0"></text>
</g>
<g>
<title>java/util/Collection.stream (70 samples, 0.10%)</title><rect x="189.8" y="515.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="192.8" y="526.0"></text>
</g>
<g>
<title>java/util/List.spliterator (28 samples, 0.04%)</title><rect x="189.8" y="499.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="192.8" y="510.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (28 samples, 0.04%)</title><rect x="189.8" y="483.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="192.8" y="494.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (42 samples, 0.06%)</title><rect x="190.3" y="499.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="193.3" y="510.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (42 samples, 0.06%)</title><rect x="190.3" y="483.0" width="0.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="193.3" y="494.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (25 samples, 0.04%)</title><rect x="191.0" y="515.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="194.0" y="526.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (25 samples, 0.04%)</title><rect x="191.0" y="499.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="194.0" y="510.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (25 samples, 0.04%)</title><rect x="191.0" y="483.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="194.0" y="494.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$52/78204644.get (16 samples, 0.02%)</title><rect x="191.0" y="467.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="194.0" y="478.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (16 samples, 0.02%)</title><rect x="191.0" y="451.0" width="0.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="194.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (211 samples, 0.31%)</title><rect x="191.4" y="531.0" width="3.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="194.4" y="542.0"></text>
</g>
<g>
<title>java/time/Instant.now (23 samples, 0.03%)</title><rect x="191.4" y="515.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="194.4" y="526.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (23 samples, 0.03%)</title><rect x="191.4" y="499.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="194.4" y="510.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (23 samples, 0.03%)</title><rect x="191.4" y="483.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="194.4" y="494.0"></text>
</g>
<g>
<title>java/time/Instant.create (23 samples, 0.03%)</title><rect x="191.4" y="467.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="194.4" y="478.0"></text>
</g>
<g>
<title>java.time.Instant (23 samples, 0.03%)</title><rect x="191.4" y="451.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="194.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (188 samples, 0.27%)</title><rect x="191.8" y="515.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="194.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (72 samples, 0.10%)</title><rect x="191.8" y="499.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="194.8" y="510.0"></text>
</g>
<g>
<title>java/time/Instant.plus (18 samples, 0.03%)</title><rect x="191.8" y="483.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="194.8" y="494.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (18 samples, 0.03%)</title><rect x="191.8" y="467.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="194.8" y="478.0"></text>
</g>
<g>
<title>java/time/Instant.plus (18 samples, 0.03%)</title><rect x="191.8" y="451.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="194.8" y="462.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (18 samples, 0.03%)</title><rect x="191.8" y="435.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="194.8" y="446.0"></text>
</g>
<g>
<title>java/time/Instant.create (18 samples, 0.03%)</title><rect x="191.8" y="419.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="194.8" y="430.0"></text>
</g>
<g>
<title>java.time.Instant (18 samples, 0.03%)</title><rect x="191.8" y="403.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="194.8" y="414.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (18 samples, 0.03%)</title><rect x="192.3" y="483.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="195.3" y="494.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (18 samples, 0.03%)</title><rect x="192.3" y="467.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="195.3" y="478.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (18 samples, 0.03%)</title><rect x="192.3" y="451.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="195.3" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$ExpiryEntry (21 samples, 0.03%)</title><rect x="192.7" y="483.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="195.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (50 samples, 0.07%)</title><rect x="193.0" y="499.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="196.0" y="510.0"></text>
</g>
<g>
<title>java/util/HashMap.get (20 samples, 0.03%)</title><rect x="193.0" y="483.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="196.0" y="494.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (20 samples, 0.03%)</title><rect x="193.0" y="467.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="196.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (20 samples, 0.03%)</title><rect x="193.0" y="451.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="196.0" y="462.0"></text>
</g>
<g>
<title>java.lang.Object[] (20 samples, 0.03%)</title><rect x="193.0" y="435.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="196.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection.cacheKey (16 samples, 0.02%)</title><rect x="193.6" y="483.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="196.6" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CacheKey (16 samples, 0.02%)</title><rect x="193.6" y="467.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="196.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (66 samples, 0.10%)</title><rect x="193.9" y="499.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="196.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (55 samples, 0.08%)</title><rect x="194.1" y="483.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="197.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (28 samples, 0.04%)</title><rect x="194.1" y="467.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="197.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (28 samples, 0.04%)</title><rect x="194.1" y="451.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="197.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (28 samples, 0.04%)</title><rect x="194.1" y="435.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="197.1" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (28 samples, 0.04%)</title><rect x="194.1" y="419.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="197.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (27 samples, 0.04%)</title><rect x="194.5" y="467.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="197.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (27 samples, 0.04%)</title><rect x="194.5" y="451.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="197.5" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (23 samples, 0.03%)</title><rect x="194.5" y="435.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="197.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (57 samples, 0.08%)</title><rect x="195.0" y="579.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="198.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (57 samples, 0.08%)</title><rect x="195.0" y="563.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="198.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (57 samples, 0.08%)</title><rect x="195.0" y="547.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="198.0" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (42 samples, 0.06%)</title><rect x="195.0" y="531.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="198.0" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (42 samples, 0.06%)</title><rect x="195.0" y="515.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="198.0" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (42 samples, 0.06%)</title><rect x="195.0" y="499.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="198.0" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (42 samples, 0.06%)</title><rect x="195.0" y="483.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="198.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$300/1036110883.accept (42 samples, 0.06%)</title><rect x="195.0" y="467.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="198.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (42 samples, 0.06%)</title><rect x="195.0" y="451.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="198.0" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (42 samples, 0.06%)</title><rect x="195.0" y="435.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="198.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (42 samples, 0.06%)</title><rect x="195.0" y="419.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="198.0" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (42 samples, 0.06%)</title><rect x="195.0" y="403.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="198.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$309/980063472.apply (42 samples, 0.06%)</title><rect x="195.0" y="387.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="198.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (42 samples, 0.06%)</title><rect x="195.0" y="371.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="198.0" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpResponseImpl (42 samples, 0.06%)</title><rect x="195.0" y="355.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="198.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.join (15 samples, 0.02%)</title><rect x="195.7" y="531.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="198.7" y="542.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.02%)</title><rect x="195.7" y="515.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="198.7" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$107/2098846329.run (28,305 samples, 40.93%)</title><rect x="196.1" y="739.0" width="483.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="199.1" y="750.0">ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$107/209..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$106/544362272.run (28,305 samples, 40.93%)</title><rect x="196.1" y="723.0" width="483.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="199.1" y="734.0">ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$106/544..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$entity$1 (28,305 samples, 40.93%)</title><rect x="196.1" y="707.0" width="483.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="199.1" y="718.0">ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$entity$1</text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.MetaRequest (1,912 samples, 2.77%)</title><rect x="196.1" y="691.0" width="32.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="199.1" y="702.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.upsert (21,698 samples, 31.38%)</title><rect x="228.7" y="691.0" width="370.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="231.7" y="702.0">ru/mail/polis/service/shakhmin/HttpService.upsert</text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (15 samples, 0.02%)</title><rect x="228.7" y="675.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="231.7" y="686.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (770 samples, 1.11%)</title><rect x="229.0" y="675.0" width="13.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="232.0" y="686.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (770 samples, 1.11%)</title><rect x="229.0" y="659.0" width="13.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="232.0" y="670.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (770 samples, 1.11%)</title><rect x="229.0" y="643.0" width="13.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="232.0" y="654.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (770 samples, 1.11%)</title><rect x="229.0" y="627.0" width="13.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="232.0" y="638.0"></text>
</g>
<g>
<title>byte[] (770 samples, 1.11%)</title><rect x="229.0" y="611.0" width="13.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="232.0" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (34 samples, 0.05%)</title><rect x="242.1" y="675.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="245.1" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (34 samples, 0.05%)</title><rect x="242.1" y="659.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="245.1" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService$$Lambda$144/252812952.get$Lambda (34 samples, 0.05%)</title><rect x="242.1" y="643.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="245.1" y="654.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.HttpService$$Lambda$144 (34 samples, 0.05%)</title><rect x="242.1" y="627.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="245.1" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1,535 samples, 2.22%)</title><rect x="242.7" y="675.0" width="26.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="245.7" y="686.0">j..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1,535 samples, 2.22%)</title><rect x="242.7" y="659.0" width="26.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="245.7" y="670.0">j..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1,535 samples, 2.22%)</title><rect x="242.7" y="643.0" width="26.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="245.7" y="654.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (75 samples, 0.11%)</title><rect x="268.9" y="675.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="271.9" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (75 samples, 0.11%)</title><rect x="268.9" y="659.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="271.9" y="670.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniExceptionally (46 samples, 0.07%)</title><rect x="268.9" y="643.0" width="0.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="271.9" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (29 samples, 0.04%)</title><rect x="269.7" y="643.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="272.7" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (29 samples, 0.04%)</title><rect x="269.7" y="627.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="272.7" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (80 samples, 0.12%)</title><rect x="270.1" y="675.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="273.1" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (80 samples, 0.12%)</title><rect x="270.1" y="659.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="273.1" y="670.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (54 samples, 0.08%)</title><rect x="270.1" y="643.0" width="1.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="273.1" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (26 samples, 0.04%)</title><rect x="271.1" y="643.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="274.1" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (26 samples, 0.04%)</title><rect x="271.1" y="627.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="274.1" y="638.0"></text>
</g>
<g>
<title>one.nio.http.Response (579 samples, 0.84%)</title><rect x="271.5" y="675.0" width="9.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="274.5" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (3,168 samples, 4.58%)</title><rect x="281.4" y="675.0" width="54.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="284.4" y="686.0">one/n..</text>
</g>
<g>
<title>byte[] (1,167 samples, 1.69%)</title><rect x="281.4" y="659.0" width="19.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="284.4" y="670.0"></text>
</g>
<g>
<title>java.lang.String[] (1,370 samples, 1.98%)</title><rect x="301.3" y="659.0" width="23.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="304.3" y="670.0">j..</text>
</g>
<g>
<title>java.lang.String (631 samples, 0.91%)</title><rect x="324.7" y="659.0" width="10.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="327.7" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.upsert (1,787 samples, 2.58%)</title><rect x="335.5" y="675.0" width="30.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="338.5" y="686.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.upsert (1,787 samples, 2.58%)</title><rect x="335.5" y="659.0" width="30.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="338.5" y="670.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.upsert (1,785 samples, 2.58%)</title><rect x="335.5" y="643.0" width="30.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="338.5" y="654.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Cell.of (948 samples, 1.37%)</title><rect x="335.5" y="627.0" width="16.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="338.5" y="638.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Cell (948 samples, 1.37%)</title><rect x="335.5" y="611.0" width="16.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="338.5" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.of (837 samples, 1.21%)</title><rect x="351.7" y="627.0" width="14.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="354.7" y="638.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Row (837 samples, 1.21%)</title><rect x="351.7" y="611.0" width="14.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="354.7" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.getResponsesFromReplicas (8,021 samples, 11.60%)</title><rect x="365.9" y="675.0" width="136.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="368.9" y="686.0">ru/mail/polis/ser..</text>
</g>
<g>
<title>java.util.ArrayList (31 samples, 0.04%)</title><rect x="365.9" y="659.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="368.9" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (195 samples, 0.28%)</title><rect x="366.5" y="659.0" width="3.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="369.5" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1000975683.invoke (195 samples, 0.28%)</title><rect x="366.5" y="643.0" width="3.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="369.5" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (195 samples, 0.28%)</title><rect x="366.5" y="627.0" width="3.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="369.5" y="638.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (52 samples, 0.08%)</title><rect x="366.5" y="611.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="369.5" y="622.0"></text>
</g>
<g>
<title>java.lang.String (52 samples, 0.08%)</title><rect x="366.5" y="595.0" width="0.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="369.5" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (143 samples, 0.21%)</title><rect x="367.4" y="611.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="370.4" y="622.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (143 samples, 0.21%)</title><rect x="367.4" y="595.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="370.4" y="606.0"></text>
</g>
<g>
<title>byte[] (143 samples, 0.21%)</title><rect x="367.4" y="579.0" width="2.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="370.4" y="590.0"></text>
</g>
<g>
<title>java/net/URI.create (846 samples, 1.22%)</title><rect x="369.8" y="659.0" width="14.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="372.8" y="670.0"></text>
</g>
<g>
<title>java.net.URI (171 samples, 0.25%)</title><rect x="369.8" y="643.0" width="2.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="372.8" y="654.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (675 samples, 0.98%)</title><rect x="372.7" y="643.0" width="11.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="375.7" y="654.0"></text>
</g>
<g>
<title>java.net.URI$Parser (65 samples, 0.09%)</title><rect x="372.7" y="627.0" width="1.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="375.7" y="638.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (610 samples, 0.88%)</title><rect x="373.8" y="627.0" width="10.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="376.8" y="638.0"></text>
</g>
<g>
<title>java/lang/String.substring (102 samples, 0.15%)</title><rect x="373.8" y="611.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="376.8" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (102 samples, 0.15%)</title><rect x="373.8" y="595.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="376.8" y="606.0"></text>
</g>
<g>
<title>java.lang.String (51 samples, 0.07%)</title><rect x="373.8" y="579.0" width="0.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="376.8" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (51 samples, 0.07%)</title><rect x="374.7" y="579.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="377.7" y="590.0"></text>
</g>
<g>
<title>byte[] (51 samples, 0.07%)</title><rect x="374.7" y="563.0" width="0.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="377.7" y="574.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (508 samples, 0.73%)</title><rect x="375.6" y="611.0" width="8.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="378.6" y="622.0"></text>
</g>
<g>
<title>java/lang/String.substring (279 samples, 0.40%)</title><rect x="375.6" y="595.0" width="4.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="378.6" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (279 samples, 0.40%)</title><rect x="375.6" y="579.0" width="4.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="378.6" y="590.0"></text>
</g>
<g>
<title>java.lang.String (105 samples, 0.15%)</title><rect x="375.6" y="563.0" width="1.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="378.6" y="574.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (174 samples, 0.25%)</title><rect x="377.4" y="563.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="380.4" y="574.0"></text>
</g>
<g>
<title>byte[] (174 samples, 0.25%)</title><rect x="377.4" y="547.0" width="2.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="380.4" y="558.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (229 samples, 0.33%)</title><rect x="380.3" y="595.0" width="3.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="383.3" y="606.0"></text>
</g>
<g>
<title>java/lang/String.substring (121 samples, 0.17%)</title><rect x="380.3" y="579.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="383.3" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (121 samples, 0.17%)</title><rect x="380.3" y="563.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="383.3" y="574.0"></text>
</g>
<g>
<title>java.lang.String (57 samples, 0.08%)</title><rect x="380.3" y="547.0" width="1.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="383.3" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (64 samples, 0.09%)</title><rect x="381.3" y="547.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="384.3" y="558.0"></text>
</g>
<g>
<title>byte[] (64 samples, 0.09%)</title><rect x="381.3" y="531.0" width="1.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="384.3" y="542.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (108 samples, 0.16%)</title><rect x="382.4" y="579.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="385.4" y="590.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (108 samples, 0.16%)</title><rect x="382.4" y="563.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="385.4" y="574.0"></text>
</g>
<g>
<title>java/lang/String.substring (108 samples, 0.16%)</title><rect x="382.4" y="547.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="385.4" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (108 samples, 0.16%)</title><rect x="382.4" y="531.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="385.4" y="542.0"></text>
</g>
<g>
<title>java.lang.String (48 samples, 0.07%)</title><rect x="382.4" y="515.0" width="0.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="385.4" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (60 samples, 0.09%)</title><rect x="383.2" y="515.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="386.2" y="526.0"></text>
</g>
<g>
<title>byte[] (60 samples, 0.09%)</title><rect x="383.2" y="499.0" width="1.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="386.2" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest$BodyPublishers.ofByteArray (74 samples, 0.11%)</title><rect x="384.2" y="659.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="387.2" y="670.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RequestPublishers$ByteArrayPublisher (74 samples, 0.11%)</title><rect x="384.2" y="643.0" width="1.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="387.2" y="654.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest.newBuilder (252 samples, 0.36%)</title><rect x="385.5" y="659.0" width="4.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="388.5" y="670.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestBuilderImpl (103 samples, 0.15%)</title><rect x="385.5" y="643.0" width="1.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="388.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.&lt;init&gt; (149 samples, 0.22%)</title><rect x="387.3" y="643.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="390.3" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (34 samples, 0.05%)</title><rect x="387.3" y="627.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="390.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (115 samples, 0.17%)</title><rect x="387.8" y="627.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="390.8" y="638.0"></text>
</g>
<g>
<title>java.util.TreeMap (115 samples, 0.17%)</title><rect x="387.8" y="611.0" width="2.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="390.8" y="622.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (59 samples, 0.09%)</title><rect x="389.8" y="659.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="392.8" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (59 samples, 0.09%)</title><rect x="389.8" y="643.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="392.8" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (59 samples, 0.09%)</title><rect x="389.8" y="627.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="392.8" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (59 samples, 0.09%)</title><rect x="389.8" y="611.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="392.8" y="622.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (59 samples, 0.09%)</title><rect x="389.8" y="595.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="392.8" y="606.0"></text>
</g>
<g>
<title>java.lang.Object[] (59 samples, 0.09%)</title><rect x="389.8" y="579.0" width="1.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="392.8" y="590.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (36 samples, 0.05%)</title><rect x="390.8" y="659.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="393.8" y="670.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (36 samples, 0.05%)</title><rect x="390.8" y="643.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="393.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (4,515 samples, 6.53%)</title><rect x="391.4" y="659.0" width="77.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="394.4" y="670.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (4,515 samples, 6.53%)</title><rect x="391.4" y="643.0" width="77.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="394.4" y="654.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (4,515 samples, 6.53%)</title><rect x="391.4" y="627.0" width="77.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="394.4" y="638.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (4,515 samples, 6.53%)</title><rect x="391.4" y="611.0" width="77.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="394.4" y="622.0">jdk/inter..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (33 samples, 0.05%)</title><rect x="391.4" y="595.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="394.4" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (33 samples, 0.05%)</title><rect x="391.4" y="579.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="394.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$138/443747487.get$Lambda (33 samples, 0.05%)</title><rect x="391.4" y="563.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="394.4" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$$Lambda$138 (33 samples, 0.05%)</title><rect x="391.4" y="547.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="394.4" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (159 samples, 0.23%)</title><rect x="392.0" y="595.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="395.0" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (159 samples, 0.23%)</title><rect x="392.0" y="579.0" width="2.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="395.0" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (91 samples, 0.13%)</title><rect x="392.0" y="563.0" width="1.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="395.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (68 samples, 0.10%)</title><rect x="393.5" y="563.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="396.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (68 samples, 0.10%)</title><rect x="393.5" y="547.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="396.5" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (68 samples, 0.10%)</title><rect x="393.5" y="531.0" width="1.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="396.5" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (133 samples, 0.19%)</title><rect x="394.7" y="595.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="397.7" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (133 samples, 0.19%)</title><rect x="394.7" y="579.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="397.7" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (77 samples, 0.11%)</title><rect x="394.7" y="563.0" width="1.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="397.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (56 samples, 0.08%)</title><rect x="396.0" y="563.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="399.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (56 samples, 0.08%)</title><rect x="396.0" y="547.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="399.0" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (56 samples, 0.08%)</title><rect x="396.0" y="531.0" width="1.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="399.0" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl (127 samples, 0.18%)</title><rect x="397.0" y="595.0" width="2.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="400.0" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange (244 samples, 0.35%)</title><rect x="399.1" y="595.0" width="4.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="402.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (2,315 samples, 3.35%)</title><rect x="403.3" y="595.0" width="39.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="406.3" y="606.0">jdk..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (261 samples, 0.38%)</title><rect x="403.3" y="579.0" width="4.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="406.3" y="590.0"></text>
</g>
<g>
<title>java/util/Collection.stream (215 samples, 0.31%)</title><rect x="403.3" y="563.0" width="3.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="406.3" y="574.0"></text>
</g>
<g>
<title>java/util/List.spliterator (77 samples, 0.11%)</title><rect x="403.3" y="547.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="406.3" y="558.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (77 samples, 0.11%)</title><rect x="403.3" y="531.0" width="1.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="406.3" y="542.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (138 samples, 0.20%)</title><rect x="404.6" y="547.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="407.6" y="558.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (138 samples, 0.20%)</title><rect x="404.6" y="531.0" width="2.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="407.6" y="542.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (46 samples, 0.07%)</title><rect x="407.0" y="563.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="410.0" y="574.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (46 samples, 0.07%)</title><rect x="407.0" y="547.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="410.0" y="558.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (46 samples, 0.07%)</title><rect x="407.0" y="531.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="410.0" y="542.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$52/78204644.get (46 samples, 0.07%)</title><rect x="407.0" y="515.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="410.0" y="526.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (46 samples, 0.07%)</title><rect x="407.0" y="499.0" width="0.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="410.0" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (955 samples, 1.38%)</title><rect x="407.8" y="579.0" width="16.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="410.8" y="590.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (955 samples, 1.38%)</title><rect x="407.8" y="563.0" width="16.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="410.8" y="574.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (33 samples, 0.05%)</title><rect x="407.8" y="547.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="410.8" y="558.0"></text>
</g>
<g>
<title>java.util.ArrayList (49 samples, 0.07%)</title><rect x="408.3" y="547.0" width="0.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="411.3" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap (110 samples, 0.16%)</title><rect x="409.2" y="547.0" width="1.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="412.2" y="558.0"></text>
</g>
<g>
<title>java.util.TreeSet (35 samples, 0.05%)</title><rect x="411.0" y="547.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="414.0" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (78 samples, 0.11%)</title><rect x="411.6" y="547.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="414.6" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (78 samples, 0.11%)</title><rect x="411.6" y="531.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="414.6" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$115/937225413.get$Lambda (78 samples, 0.11%)</title><rect x="411.6" y="515.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="414.6" y="526.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$115 (78 samples, 0.11%)</title><rect x="411.6" y="499.0" width="1.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="414.6" y="510.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (473 samples, 0.68%)</title><rect x="413.0" y="547.0" width="8.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="416.0" y="558.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (473 samples, 0.68%)</title><rect x="413.0" y="531.0" width="8.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="416.0" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$115/937225413.accept (473 samples, 0.68%)</title><rect x="413.0" y="515.0" width="8.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="416.0" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (473 samples, 0.68%)</title><rect x="413.0" y="499.0" width="8.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="416.0" y="510.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (198 samples, 0.29%)</title><rect x="413.0" y="483.0" width="3.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="416.0" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$118/2131634163.accept (120 samples, 0.17%)</title><rect x="413.0" y="467.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="416.0" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (120 samples, 0.17%)</title><rect x="413.0" y="451.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="416.0" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (120 samples, 0.17%)</title><rect x="413.0" y="435.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="416.0" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (120 samples, 0.17%)</title><rect x="413.0" y="419.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="416.0" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (120 samples, 0.17%)</title><rect x="413.0" y="403.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="416.0" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (120 samples, 0.17%)</title><rect x="413.0" y="387.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="416.0" y="398.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (120 samples, 0.17%)</title><rect x="413.0" y="371.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="416.0" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (120 samples, 0.17%)</title><rect x="413.0" y="355.0" width="2.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="416.0" y="366.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (78 samples, 0.11%)</title><rect x="415.0" y="467.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="418.0" y="478.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (78 samples, 0.11%)</title><rect x="415.0" y="451.0" width="1.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="418.0" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (54 samples, 0.08%)</title><rect x="416.3" y="483.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="419.3" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (54 samples, 0.08%)</title><rect x="416.3" y="467.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="419.3" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$118/2131634163.get$Lambda (54 samples, 0.08%)</title><rect x="416.3" y="451.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="419.3" y="462.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$118 (54 samples, 0.08%)</title><rect x="416.3" y="435.0" width="1.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="419.3" y="446.0"></text>
</g>
<g>
<title>java/util/List.copyOf (122 samples, 0.18%)</title><rect x="417.3" y="483.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="420.3" y="494.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (122 samples, 0.18%)</title><rect x="417.3" y="467.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="420.3" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (67 samples, 0.10%)</title><rect x="417.3" y="451.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="420.3" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (67 samples, 0.10%)</title><rect x="417.3" y="435.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="420.3" y="446.0"></text>
</g>
<g>
<title>java.lang.Object[] (67 samples, 0.10%)</title><rect x="417.3" y="419.0" width="1.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="420.3" y="430.0"></text>
</g>
<g>
<title>java/util/List.of (55 samples, 0.08%)</title><rect x="418.4" y="451.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="421.4" y="462.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (55 samples, 0.08%)</title><rect x="418.4" y="435.0" width="0.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="421.4" y="446.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (99 samples, 0.14%)</title><rect x="419.3" y="483.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="422.3" y="494.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (99 samples, 0.14%)</title><rect x="419.3" y="467.0" width="1.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="422.3" y="478.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (75 samples, 0.11%)</title><rect x="421.0" y="547.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="424.0" y="558.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (75 samples, 0.11%)</title><rect x="421.0" y="531.0" width="1.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="424.0" y="542.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (102 samples, 0.15%)</title><rect x="422.3" y="547.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="425.3" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap (102 samples, 0.15%)</title><rect x="422.3" y="531.0" width="1.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="425.3" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (30 samples, 0.04%)</title><rect x="424.0" y="579.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="427.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (759 samples, 1.10%)</title><rect x="424.6" y="579.0" width="12.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="427.6" y="590.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (759 samples, 1.10%)</title><rect x="424.6" y="563.0" width="12.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="427.6" y="574.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (688 samples, 0.99%)</title><rect x="424.6" y="547.0" width="11.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="427.6" y="558.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (688 samples, 0.99%)</title><rect x="424.6" y="531.0" width="11.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="427.6" y="542.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (688 samples, 0.99%)</title><rect x="424.6" y="515.0" width="11.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="427.6" y="526.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (133 samples, 0.19%)</title><rect x="424.6" y="499.0" width="2.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="427.6" y="510.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (214 samples, 0.31%)</title><rect x="426.8" y="499.0" width="3.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="429.8" y="510.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (214 samples, 0.31%)</title><rect x="426.8" y="483.0" width="3.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="429.8" y="494.0"></text>
</g>
<g>
<title>byte[] (214 samples, 0.31%)</title><rect x="426.8" y="467.0" width="3.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="429.8" y="478.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (341 samples, 0.49%)</title><rect x="430.5" y="499.0" width="5.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="433.5" y="510.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (341 samples, 0.49%)</title><rect x="430.5" y="483.0" width="5.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="433.5" y="494.0"></text>
</g>
<g>
<title>java.lang.String (149 samples, 0.22%)</title><rect x="430.5" y="467.0" width="2.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="433.5" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (192 samples, 0.28%)</title><rect x="433.0" y="467.0" width="3.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="436.0" y="478.0"></text>
</g>
<g>
<title>byte[] (192 samples, 0.28%)</title><rect x="433.0" y="451.0" width="3.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="436.0" y="462.0"></text>
</g>
<g>
<title>sun.net.spi.DefaultProxySelector$4 (71 samples, 0.10%)</title><rect x="436.3" y="547.0" width="1.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="439.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (122 samples, 0.18%)</title><rect x="437.5" y="579.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="440.5" y="590.0"></text>
</g>
<g>
<title>java.util.TreeMap (122 samples, 0.18%)</title><rect x="437.5" y="563.0" width="2.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="440.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (188 samples, 0.27%)</title><rect x="439.6" y="579.0" width="3.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="442.6" y="590.0"></text>
</g>
<g>
<title>java.util.ArrayList (53 samples, 0.08%)</title><rect x="439.6" y="563.0" width="0.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="442.6" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (61 samples, 0.09%)</title><rect x="440.5" y="563.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="443.5" y="574.0"></text>
</g>
<g>
<title>java.lang.Object[] (61 samples, 0.09%)</title><rect x="440.5" y="547.0" width="1.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="443.5" y="558.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (74 samples, 0.11%)</title><rect x="441.5" y="563.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="444.5" y="574.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (74 samples, 0.11%)</title><rect x="441.5" y="547.0" width="1.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="444.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (971 samples, 1.40%)</title><rect x="442.8" y="595.0" width="16.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="445.8" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (45 samples, 0.07%)</title><rect x="442.8" y="579.0" width="0.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="445.8" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange (146 samples, 0.21%)</title><rect x="443.6" y="579.0" width="2.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="446.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.&lt;init&gt; (24 samples, 0.03%)</title><rect x="446.1" y="579.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="449.1" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$ConnectionAborter (24 samples, 0.03%)</title><rect x="446.1" y="563.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="449.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (756 samples, 1.09%)</title><rect x="446.5" y="579.0" width="12.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="449.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (756 samples, 1.09%)</title><rect x="446.5" y="563.0" width="12.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="449.5" y="574.0"></text>
</g>
<g>
<title>java.lang.Object[] (77 samples, 0.11%)</title><rect x="446.5" y="547.0" width="1.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="449.5" y="558.0"></text>
</g>
<g>
<title>java.util.LinkedList (75 samples, 0.11%)</title><rect x="447.8" y="547.0" width="1.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="450.8" y="558.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (364 samples, 0.53%)</title><rect x="449.1" y="547.0" width="6.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="452.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (364 samples, 0.53%)</title><rect x="449.1" y="531.0" width="6.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="452.1" y="542.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyConstructor (364 samples, 0.53%)</title><rect x="449.1" y="515.0" width="6.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="452.1" y="526.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.copy (364 samples, 0.53%)</title><rect x="449.1" y="499.0" width="6.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="452.1" y="510.0"></text>
</g>
<g>
<title>java.lang.reflect.Constructor (364 samples, 0.53%)</title><rect x="449.1" y="483.0" width="6.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="452.1" y="494.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (126 samples, 0.18%)</title><rect x="455.3" y="547.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="458.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (126 samples, 0.18%)</title><rect x="455.3" y="531.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="458.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor10.newInstance (81 samples, 0.12%)</title><rect x="455.3" y="515.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="458.3" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RedirectFilter (81 samples, 0.12%)</title><rect x="455.3" y="499.0" width="1.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="458.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor8.newInstance (45 samples, 0.07%)</title><rect x="456.7" y="515.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="459.7" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.AuthenticationFilter (45 samples, 0.07%)</title><rect x="456.7" y="499.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="459.7" y="510.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (114 samples, 0.16%)</title><rect x="457.4" y="547.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="460.4" y="558.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (114 samples, 0.16%)</title><rect x="457.4" y="531.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="460.4" y="542.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (114 samples, 0.16%)</title><rect x="457.4" y="515.0" width="2.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="460.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (533 samples, 0.77%)</title><rect x="459.4" y="595.0" width="9.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="462.4" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (116 samples, 0.17%)</title><rect x="459.4" y="579.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="462.4" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (58 samples, 0.08%)</title><rect x="459.4" y="563.0" width="1.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="462.4" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (58 samples, 0.08%)</title><rect x="460.4" y="563.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="463.4" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (58 samples, 0.08%)</title><rect x="460.4" y="547.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="463.4" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (58 samples, 0.08%)</title><rect x="460.4" y="531.0" width="1.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="463.4" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (68 samples, 0.10%)</title><rect x="461.4" y="579.0" width="1.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="464.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (349 samples, 0.50%)</title><rect x="462.5" y="579.0" width="6.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="465.5" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (60 samples, 0.09%)</title><rect x="462.5" y="563.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="465.5" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (60 samples, 0.09%)</title><rect x="462.5" y="547.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="465.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$128/1729551726.get$Lambda (34 samples, 0.05%)</title><rect x="462.5" y="531.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="465.5" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$128 (34 samples, 0.05%)</title><rect x="462.5" y="515.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="465.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$132/1112562714.get$Lambda (26 samples, 0.04%)</title><rect x="463.1" y="531.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="466.1" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$132 (26 samples, 0.04%)</title><rect x="463.1" y="515.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="466.1" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (289 samples, 0.42%)</title><rect x="463.5" y="563.0" width="5.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="466.5" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (289 samples, 0.42%)</title><rect x="463.5" y="547.0" width="5.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="466.5" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (170 samples, 0.25%)</title><rect x="463.5" y="531.0" width="2.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="466.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (119 samples, 0.17%)</title><rect x="466.4" y="531.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="469.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (119 samples, 0.17%)</title><rect x="466.4" y="515.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="469.4" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (119 samples, 0.17%)</title><rect x="466.4" y="499.0" width="2.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="469.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (937 samples, 1.36%)</title><rect x="468.5" y="659.0" width="16.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="471.5" y="670.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ImmutableHttpRequest (86 samples, 0.12%)</title><rect x="468.5" y="643.0" width="1.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="471.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (851 samples, 1.23%)</title><rect x="469.9" y="643.0" width="14.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="472.9" y="654.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (822 samples, 1.19%)</title><rect x="469.9" y="627.0" width="14.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="472.9" y="638.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (822 samples, 1.19%)</title><rect x="469.9" y="611.0" width="14.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="472.9" y="622.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (28 samples, 0.04%)</title><rect x="469.9" y="595.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="472.9" y="606.0"></text>
</g>
<g>
<title>java.util.ArrayList (49 samples, 0.07%)</title><rect x="470.4" y="595.0" width="0.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="473.4" y="606.0"></text>
</g>
<g>
<title>java.util.TreeMap (102 samples, 0.15%)</title><rect x="471.2" y="595.0" width="1.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="474.2" y="606.0"></text>
</g>
<g>
<title>java.util.TreeSet (48 samples, 0.07%)</title><rect x="473.0" y="595.0" width="0.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="476.0" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (76 samples, 0.11%)</title><rect x="473.8" y="595.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="476.8" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (76 samples, 0.11%)</title><rect x="473.8" y="579.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="476.8" y="590.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$115/937225413.get$Lambda (76 samples, 0.11%)</title><rect x="473.8" y="563.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="476.8" y="574.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$115 (76 samples, 0.11%)</title><rect x="473.8" y="547.0" width="1.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="476.8" y="558.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (70 samples, 0.10%)</title><rect x="475.1" y="595.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="478.1" y="606.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (70 samples, 0.10%)</title><rect x="475.1" y="579.0" width="1.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="478.1" y="590.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (355 samples, 0.51%)</title><rect x="476.3" y="595.0" width="6.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="479.3" y="606.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$115/937225413.accept (355 samples, 0.51%)</title><rect x="476.3" y="579.0" width="6.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="479.3" y="590.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (355 samples, 0.51%)</title><rect x="476.3" y="563.0" width="6.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="479.3" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (42 samples, 0.06%)</title><rect x="476.3" y="547.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="479.3" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (42 samples, 0.06%)</title><rect x="476.3" y="531.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="479.3" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$118/2131634163.get$Lambda (42 samples, 0.06%)</title><rect x="476.3" y="515.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="479.3" y="526.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$118 (42 samples, 0.06%)</title><rect x="476.3" y="499.0" width="0.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="479.3" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (124 samples, 0.18%)</title><rect x="477.0" y="547.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="480.0" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$118/2131634163.accept (124 samples, 0.18%)</title><rect x="477.0" y="531.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="480.0" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (124 samples, 0.18%)</title><rect x="477.0" y="515.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="480.0" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (124 samples, 0.18%)</title><rect x="477.0" y="499.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="480.0" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (124 samples, 0.18%)</title><rect x="477.0" y="483.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="480.0" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (124 samples, 0.18%)</title><rect x="477.0" y="467.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="480.0" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (124 samples, 0.18%)</title><rect x="477.0" y="451.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="480.0" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (124 samples, 0.18%)</title><rect x="477.0" y="435.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="480.0" y="446.0"></text>
</g>
<g>
<title>java.lang.Object[] (124 samples, 0.18%)</title><rect x="477.0" y="419.0" width="2.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="480.0" y="430.0"></text>
</g>
<g>
<title>java/util/List.copyOf (103 samples, 0.15%)</title><rect x="479.1" y="547.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="482.1" y="558.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (103 samples, 0.15%)</title><rect x="479.1" y="531.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="482.1" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (48 samples, 0.07%)</title><rect x="479.1" y="515.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="482.1" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (48 samples, 0.07%)</title><rect x="479.1" y="499.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="482.1" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (48 samples, 0.07%)</title><rect x="479.1" y="483.0" width="0.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="482.1" y="494.0"></text>
</g>
<g>
<title>java/util/List.of (55 samples, 0.08%)</title><rect x="480.0" y="515.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="483.0" y="526.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (55 samples, 0.08%)</title><rect x="480.0" y="499.0" width="0.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="483.0" y="510.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (86 samples, 0.12%)</title><rect x="480.9" y="547.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="483.9" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (86 samples, 0.12%)</title><rect x="480.9" y="531.0" width="1.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="483.9" y="542.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (94 samples, 0.14%)</title><rect x="482.4" y="595.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="485.4" y="606.0"></text>
</g>
<g>
<title>java.util.TreeMap (94 samples, 0.14%)</title><rect x="482.4" y="579.0" width="1.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="485.4" y="590.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (29 samples, 0.04%)</title><rect x="484.0" y="627.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="487.0" y="638.0"></text>
</g>
<g>
<title>java/util/Optional.of (29 samples, 0.04%)</title><rect x="484.0" y="611.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="487.0" y="622.0"></text>
</g>
<g>
<title>java.util.Optional (29 samples, 0.04%)</title><rect x="484.0" y="595.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="487.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.setHeader (213 samples, 0.31%)</title><rect x="484.5" y="659.0" width="3.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="487.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.setHeader (213 samples, 0.31%)</title><rect x="484.5" y="643.0" width="3.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="487.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (213 samples, 0.31%)</title><rect x="484.5" y="627.0" width="3.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="487.5" y="638.0"></text>
</g>
<g>
<title>java.util.ArrayList (52 samples, 0.08%)</title><rect x="484.5" y="611.0" width="0.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="487.5" y="622.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (67 samples, 0.10%)</title><rect x="485.3" y="611.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="488.3" y="622.0"></text>
</g>
<g>
<title>java.lang.Object[] (67 samples, 0.10%)</title><rect x="485.3" y="595.0" width="1.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="488.3" y="606.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (94 samples, 0.14%)</title><rect x="486.5" y="611.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="489.5" y="622.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (94 samples, 0.14%)</title><rect x="486.5" y="595.0" width="1.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="489.5" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.getFirstResponses (863 samples, 1.25%)</title><rect x="488.1" y="659.0" width="14.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="491.1" y="670.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (27 samples, 0.04%)</title><rect x="488.1" y="643.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="491.1" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CopyOnWriteArrayList (21 samples, 0.03%)</title><rect x="488.6" y="643.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="491.6" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (24 samples, 0.03%)</title><rect x="488.9" y="643.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="491.9" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1649486608.linkToTargetMethod (31 samples, 0.04%)</title><rect x="489.3" y="643.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="492.3" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/89464641.invokeStatic (31 samples, 0.04%)</title><rect x="489.3" y="627.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="492.3" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService$$Lambda$140/507376197.get$Lambda (31 samples, 0.04%)</title><rect x="489.3" y="611.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="492.3" y="622.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.HttpService$$Lambda$140 (31 samples, 0.04%)</title><rect x="489.3" y="595.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="492.3" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (145 samples, 0.21%)</title><rect x="489.8" y="643.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="492.8" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (145 samples, 0.21%)</title><rect x="489.8" y="627.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="492.8" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniExceptionally (78 samples, 0.11%)</title><rect x="489.8" y="611.0" width="1.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="492.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (67 samples, 0.10%)</title><rect x="491.2" y="611.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="494.2" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (67 samples, 0.10%)</title><rect x="491.2" y="595.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="494.2" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (67 samples, 0.10%)</title><rect x="491.2" y="579.0" width="1.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="494.2" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.orTimeout (424 samples, 0.61%)</title><rect x="492.3" y="643.0" width="7.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="495.3" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$Canceller (38 samples, 0.05%)</title><rect x="492.3" y="627.0" width="0.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="495.3" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$Timeout (36 samples, 0.05%)</title><rect x="493.0" y="627.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="496.0" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Delayer.delay (196 samples, 0.28%)</title><rect x="493.6" y="627.0" width="3.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="496.6" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor.schedule (196 samples, 0.28%)</title><rect x="493.6" y="611.0" width="3.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="496.6" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask (159 samples, 0.23%)</title><rect x="493.6" y="595.0" width="2.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="496.6" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$ScheduledFutureTask.&lt;init&gt; (37 samples, 0.05%)</title><rect x="496.3" y="595.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="499.3" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.&lt;init&gt; (37 samples, 0.05%)</title><rect x="496.3" y="579.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="499.3" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors.callable (37 samples, 0.05%)</title><rect x="496.3" y="563.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="499.3" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.Executors$RunnableAdapter (37 samples, 0.05%)</title><rect x="496.3" y="547.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="499.3" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (154 samples, 0.22%)</title><rect x="496.9" y="627.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="499.9" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (154 samples, 0.22%)</title><rect x="496.9" y="611.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="499.9" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (91 samples, 0.13%)</title><rect x="496.9" y="595.0" width="1.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="499.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (63 samples, 0.09%)</title><rect x="498.5" y="595.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="501.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (63 samples, 0.09%)</title><rect x="498.5" y="579.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="501.5" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (63 samples, 0.09%)</title><rect x="498.5" y="563.0" width="1.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="501.5" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (151 samples, 0.22%)</title><rect x="499.6" y="643.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="502.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (151 samples, 0.22%)</title><rect x="499.6" y="627.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="502.6" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (87 samples, 0.13%)</title><rect x="499.6" y="611.0" width="1.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="502.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (64 samples, 0.09%)</title><rect x="501.0" y="611.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="504.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (64 samples, 0.09%)</title><rect x="501.0" y="595.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="504.0" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (64 samples, 0.09%)</title><rect x="501.0" y="579.0" width="1.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="504.0" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.&lt;init&gt; (40 samples, 0.06%)</title><rect x="502.1" y="643.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="505.1" y="654.0"></text>
</g>
<g>
<title>java.lang.Object[] (15 samples, 0.02%)</title><rect x="502.1" y="627.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="505.1" y="638.0"></text>
</g>
<g>
<title>java.lang.Object (25 samples, 0.04%)</title><rect x="502.4" y="627.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="505.4" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.sendResponse (5,050 samples, 7.30%)</title><rect x="502.8" y="675.0" width="86.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="505.8" y="686.0">ru/mail/po..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (5,050 samples, 7.30%)</title><rect x="502.8" y="659.0" width="86.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="505.8" y="670.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (2,961 samples, 4.28%)</title><rect x="502.8" y="643.0" width="50.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="505.8" y="654.0">one/n..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2,341 samples, 3.39%)</title><rect x="502.8" y="627.0" width="40.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="505.8" y="638.0">one..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (2,341 samples, 3.39%)</title><rect x="502.8" y="611.0" width="40.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="505.8" y="622.0">one..</text>
</g>
<g>
<title>byte[] (1,187 samples, 1.72%)</title><rect x="502.8" y="595.0" width="20.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="505.8" y="606.0"></text>
</g>
<g>
<title>byte[] (1,154 samples, 1.67%)</title><rect x="523.1" y="595.0" width="19.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="526.1" y="606.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (620 samples, 0.90%)</title><rect x="542.8" y="627.0" width="10.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="545.8" y="638.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (620 samples, 0.90%)</title><rect x="542.8" y="611.0" width="10.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="545.8" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2,089 samples, 3.02%)</title><rect x="553.3" y="643.0" width="35.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="556.3" y="654.0">one..</text>
</g>
<g>
<title>java/lang/String.substring (2,089 samples, 3.02%)</title><rect x="553.3" y="627.0" width="35.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="556.3" y="638.0">jav..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2,089 samples, 3.02%)</title><rect x="553.3" y="611.0" width="35.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="556.3" y="622.0">jav..</text>
</g>
<g>
<title>java.lang.String (828 samples, 1.20%)</title><rect x="553.3" y="595.0" width="14.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="556.3" y="606.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,261 samples, 1.82%)</title><rect x="567.5" y="595.0" width="21.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="570.5" y="606.0">j..</text>
</g>
<g>
<title>byte[] (1,261 samples, 1.82%)</title><rect x="567.5" y="579.0" width="21.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="570.5" y="590.0">b..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/ConsistentHashImpl.replicas (584 samples, 0.84%)</title><rect x="589.0" y="675.0" width="10.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="592.0" y="686.0"></text>
</g>
<g>
<title>java.util.ArrayList (32 samples, 0.05%)</title><rect x="589.0" y="659.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="592.0" y="670.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (105 samples, 0.15%)</title><rect x="589.5" y="659.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="592.5" y="670.0"></text>
</g>
<g>
<title>java.util.AbstractMap$2$1 (31 samples, 0.04%)</title><rect x="589.5" y="643.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="592.5" y="654.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (74 samples, 0.11%)</title><rect x="590.1" y="643.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="593.1" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap$AscendingEntrySetView.iterator (43 samples, 0.06%)</title><rect x="590.1" y="627.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="593.1" y="638.0"></text>
</g>
<g>
<title>java.util.TreeMap$NavigableSubMap$SubMapEntryIterator (43 samples, 0.06%)</title><rect x="590.1" y="611.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="593.1" y="622.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap.entrySet (31 samples, 0.04%)</title><rect x="590.8" y="627.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="593.8" y="638.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap$AscendingEntrySetView (31 samples, 0.04%)</title><rect x="590.8" y="611.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="593.8" y="622.0"></text>
</g>
<g>
<title>java/util/AbstractMap.values (19 samples, 0.03%)</title><rect x="591.3" y="659.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="594.3" y="670.0"></text>
</g>
<g>
<title>java.util.AbstractMap$2 (19 samples, 0.03%)</title><rect x="591.3" y="643.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="594.3" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (67 samples, 0.10%)</title><rect x="591.7" y="659.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="594.7" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (67 samples, 0.10%)</title><rect x="591.7" y="643.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="594.7" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (67 samples, 0.10%)</title><rect x="591.7" y="627.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="594.7" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (67 samples, 0.10%)</title><rect x="591.7" y="611.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="594.7" y="622.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (67 samples, 0.10%)</title><rect x="591.7" y="595.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="594.7" y="606.0"></text>
</g>
<g>
<title>java.lang.Object[] (67 samples, 0.10%)</title><rect x="591.7" y="579.0" width="1.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="594.7" y="590.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (49 samples, 0.07%)</title><rect x="592.8" y="659.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="595.8" y="670.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (49 samples, 0.07%)</title><rect x="592.8" y="643.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="595.8" y="654.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap (49 samples, 0.07%)</title><rect x="592.8" y="627.0" width="0.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="595.8" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/ConsistentHashImpl.firstReplica (310 samples, 0.45%)</title><rect x="593.7" y="659.0" width="5.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="596.7" y="670.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.hashBytes (263 samples, 0.38%)</title><rect x="593.7" y="643.0" width="4.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="596.7" y="654.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.newHasher (159 samples, 0.23%)</title><rect x="593.7" y="627.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="596.7" y="638.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction.newHasher (159 samples, 0.23%)</title><rect x="593.7" y="611.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="596.7" y="622.0"></text>
</g>
<g>
<title>com.google.common.hash.Murmur3_128HashFunction$Murmur3_128Hasher (59 samples, 0.09%)</title><rect x="593.7" y="595.0" width="1.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="596.7" y="606.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.&lt;init&gt; (100 samples, 0.14%)</title><rect x="594.7" y="595.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="597.7" y="606.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.&lt;init&gt; (100 samples, 0.14%)</title><rect x="594.7" y="579.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="597.7" y="590.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.&lt;init&gt; (100 samples, 0.14%)</title><rect x="594.7" y="563.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="597.7" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (100 samples, 0.14%)</title><rect x="594.7" y="547.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="597.7" y="558.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (55 samples, 0.08%)</title><rect x="594.7" y="531.0" width="0.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="597.7" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (45 samples, 0.07%)</title><rect x="595.6" y="531.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="598.6" y="542.0"></text>
</g>
<g>
<title>byte[] (45 samples, 0.07%)</title><rect x="595.6" y="515.0" width="0.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="598.6" y="526.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.hash (104 samples, 0.15%)</title><rect x="596.4" y="627.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="599.4" y="638.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.makeHash (104 samples, 0.15%)</title><rect x="596.4" y="611.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="599.4" y="622.0"></text>
</g>
<g>
<title>byte[] (33 samples, 0.05%)</title><rect x="596.4" y="595.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="599.4" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (64 samples, 0.09%)</title><rect x="597.1" y="595.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="600.1" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (64 samples, 0.09%)</title><rect x="597.1" y="579.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="600.1" y="590.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (64 samples, 0.09%)</title><rect x="597.1" y="563.0" width="1.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="600.1" y="574.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (22 samples, 0.03%)</title><rect x="598.2" y="643.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="601.2" y="654.0"></text>
</g>
<g>
<title>java.lang.Long (22 samples, 0.03%)</title><rect x="598.2" y="627.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="601.2" y="638.0"></text>
</g>
<g>
<title>java/util/TreeMap.ceilingEntry (25 samples, 0.04%)</title><rect x="598.5" y="643.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="601.5" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap.exportEntry (25 samples, 0.04%)</title><rect x="598.5" y="627.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="601.5" y="638.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (25 samples, 0.04%)</title><rect x="598.5" y="611.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="601.5" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/MetaRequest.&lt;init&gt; (4,695 samples, 6.79%)</title><rect x="599.0" y="691.0" width="80.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="602.0" y="702.0">ru/mail/p..</text>
</g>
<g>
<title>java/lang/String.substring (1,659 samples, 2.40%)</title><rect x="599.0" y="675.0" width="28.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="602.0" y="686.0">ja..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,659 samples, 2.40%)</title><rect x="599.0" y="659.0" width="28.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="602.0" y="670.0">ja..</text>
</g>
<g>
<title>java.lang.String (527 samples, 0.76%)</title><rect x="599.0" y="643.0" width="9.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="602.0" y="654.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,132 samples, 1.64%)</title><rect x="608.0" y="643.0" width="19.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="611.0" y="654.0"></text>
</g>
<g>
<title>byte[] (1,132 samples, 1.64%)</title><rect x="608.0" y="627.0" width="19.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="611.0" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1,604 samples, 2.32%)</title><rect x="627.3" y="675.0" width="27.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="630.3" y="686.0">j..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1,604 samples, 2.32%)</title><rect x="627.3" y="659.0" width="27.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="630.3" y="670.0">j..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1,604 samples, 2.32%)</title><rect x="627.3" y="643.0" width="27.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="630.3" y="654.0">j..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1,432 samples, 2.07%)</title><rect x="654.6" y="675.0" width="24.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="657.6" y="686.0">o..</text>
</g>
<g>
<title>java/lang/String.substring (1,432 samples, 2.07%)</title><rect x="654.6" y="659.0" width="24.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="657.6" y="670.0">j..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,432 samples, 2.07%)</title><rect x="654.6" y="643.0" width="24.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="657.6" y="654.0">j..</text>
</g>
<g>
<title>java.lang.String (839 samples, 1.21%)</title><rect x="654.6" y="627.0" width="14.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="657.6" y="638.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (593 samples, 0.86%)</title><rect x="669.0" y="627.0" width="10.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="672.0" y="638.0"></text>
</g>
<g>
<title>byte[] (593 samples, 0.86%)</title><rect x="669.0" y="611.0" width="10.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="672.0" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (4,640 samples, 6.71%)</title><rect x="679.1" y="787.0" width="79.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="682.1" y="798.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (4,640 samples, 6.71%)</title><rect x="679.1" y="771.0" width="79.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="682.1" y="782.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (4,639 samples, 6.71%)</title><rect x="679.1" y="755.0" width="79.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="682.1" y="766.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (4,639 samples, 6.71%)</title><rect x="679.1" y="739.0" width="79.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="682.1" y="750.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (4,639 samples, 6.71%)</title><rect x="679.1" y="723.0" width="79.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="682.1" y="734.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (4,639 samples, 6.71%)</title><rect x="679.1" y="707.0" width="79.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="682.1" y="718.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (4,639 samples, 6.71%)</title><rect x="679.1" y="691.0" width="79.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="682.1" y="702.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (4,633 samples, 6.70%)</title><rect x="679.2" y="675.0" width="79.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="682.2" y="686.0">java/util..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService$$Lambda$140/507376197.accept (1,257 samples, 1.82%)</title><rect x="679.2" y="659.0" width="21.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="682.2" y="670.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.lambda$getFirstResponses$6 (1,257 samples, 1.82%)</title><rect x="679.2" y="643.0" width="21.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="682.2" y="654.0">r..</text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.add (1,257 samples, 1.82%)</title><rect x="679.2" y="627.0" width="21.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="682.2" y="638.0">j..</text>
</g>
<g>
<title>java/util/Arrays.copyOf (1,257 samples, 1.82%)</title><rect x="679.2" y="611.0" width="21.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="682.2" y="622.0">j..</text>
</g>
<g>
<title>java.lang.Object[] (1,257 samples, 1.82%)</title><rect x="679.2" y="595.0" width="21.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="682.2" y="606.0">j..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService$$Lambda$144/252812952.accept (3,376 samples, 4.88%)</title><rect x="700.6" y="659.0" width="57.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="703.6" y="670.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.lambda$upsert$2 (3,376 samples, 4.88%)</title><rect x="700.6" y="643.0" width="57.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="703.6" y="654.0">ru/mai..</text>
</g>
<g>
<title>one.nio.http.Response (498 samples, 0.72%)</title><rect x="700.6" y="627.0" width="8.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="703.6" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1,373 samples, 1.99%)</title><rect x="709.1" y="627.0" width="23.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="712.1" y="638.0">o..</text>
</g>
<g>
<title>byte[] (433 samples, 0.63%)</title><rect x="709.1" y="611.0" width="7.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="712.1" y="622.0"></text>
</g>
<g>
<title>java.lang.String[] (595 samples, 0.86%)</title><rect x="716.5" y="611.0" width="10.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="719.5" y="622.0"></text>
</g>
<g>
<title>java.lang.String (345 samples, 0.50%)</title><rect x="726.7" y="611.0" width="5.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="729.7" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.sendResponse (1,505 samples, 2.18%)</title><rect x="732.6" y="627.0" width="25.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="735.6" y="638.0">r..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1,505 samples, 2.18%)</title><rect x="732.6" y="611.0" width="25.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="735.6" y="622.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (1,505 samples, 2.18%)</title><rect x="732.6" y="595.0" width="25.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="735.6" y="606.0">o..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1,072 samples, 1.55%)</title><rect x="732.6" y="579.0" width="18.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="735.6" y="590.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (1,072 samples, 1.55%)</title><rect x="732.6" y="563.0" width="18.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="735.6" y="574.0"></text>
</g>
<g>
<title>byte[] (548 samples, 0.79%)</title><rect x="732.6" y="547.0" width="9.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="735.6" y="558.0"></text>
</g>
<g>
<title>byte[] (524 samples, 0.76%)</title><rect x="741.9" y="547.0" width="9.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="744.9" y="558.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (433 samples, 0.63%)</title><rect x="750.9" y="579.0" width="7.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="753.9" y="590.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (433 samples, 0.63%)</title><rect x="750.9" y="563.0" width="7.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="753.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (1,935 samples, 2.80%)</title><rect x="758.3" y="787.0" width="33.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="761.3" y="798.0">jd..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (42 samples, 0.06%)</title><rect x="758.3" y="771.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="761.3" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (42 samples, 0.06%)</title><rect x="758.3" y="755.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="761.3" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$239/516844372.get$Lambda (30 samples, 0.04%)</title><rect x="758.3" y="739.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="761.3" y="750.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$239 (30 samples, 0.04%)</title><rect x="758.3" y="723.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="761.3" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/896644936.linkToTargetMethod (53 samples, 0.08%)</title><rect x="759.0" y="771.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="762.0" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (53 samples, 0.08%)</title><rect x="759.0" y="755.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="762.0" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$240/135343777.get$Lambda (53 samples, 0.08%)</title><rect x="759.0" y="739.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="762.0" y="750.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$240 (53 samples, 0.08%)</title><rect x="759.0" y="723.0" width="0.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="762.0" y="734.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (430 samples, 0.62%)</title><rect x="759.9" y="771.0" width="7.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="762.9" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$241/404115466.accept (353 samples, 0.51%)</title><rect x="759.9" y="755.0" width="6.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="762.9" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (353 samples, 0.51%)</title><rect x="759.9" y="739.0" width="6.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="762.9" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (353 samples, 0.51%)</title><rect x="759.9" y="723.0" width="6.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="762.9" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (353 samples, 0.51%)</title><rect x="759.9" y="707.0" width="6.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="762.9" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (353 samples, 0.51%)</title><rect x="759.9" y="691.0" width="6.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="762.9" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (353 samples, 0.51%)</title><rect x="759.9" y="675.0" width="6.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="762.9" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (353 samples, 0.51%)</title><rect x="759.9" y="659.0" width="6.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="762.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (353 samples, 0.51%)</title><rect x="759.9" y="643.0" width="6.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="762.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (353 samples, 0.51%)</title><rect x="759.9" y="627.0" width="6.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="762.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (353 samples, 0.51%)</title><rect x="759.9" y="611.0" width="6.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="762.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$181/1894615385.run (353 samples, 0.51%)</title><rect x="759.9" y="595.0" width="6.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="762.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (353 samples, 0.51%)</title><rect x="759.9" y="579.0" width="6.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="762.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (85 samples, 0.12%)</title><rect x="759.9" y="563.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="762.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (85 samples, 0.12%)</title><rect x="759.9" y="547.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="762.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (85 samples, 0.12%)</title><rect x="759.9" y="531.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="762.9" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offer (45 samples, 0.07%)</title><rect x="759.9" y="515.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="762.9" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (45 samples, 0.07%)</title><rect x="759.9" y="499.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="762.9" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (45 samples, 0.07%)</title><rect x="759.9" y="483.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="762.9" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (45 samples, 0.07%)</title><rect x="759.9" y="467.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="762.9" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (45 samples, 0.07%)</title><rect x="759.9" y="451.0" width="0.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="762.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (40 samples, 0.06%)</title><rect x="760.6" y="515.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="763.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (40 samples, 0.06%)</title><rect x="760.6" y="499.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="763.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (40 samples, 0.06%)</title><rect x="760.6" y="483.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="763.6" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (40 samples, 0.06%)</title><rect x="760.6" y="467.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="763.6" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (40 samples, 0.06%)</title><rect x="760.6" y="451.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="763.6" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (40 samples, 0.06%)</title><rect x="760.6" y="435.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="763.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (29 samples, 0.04%)</title><rect x="761.3" y="563.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="764.3" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (29 samples, 0.04%)</title><rect x="761.3" y="547.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="764.3" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (29 samples, 0.04%)</title><rect x="761.3" y="531.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="764.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$251/1699824535.get$Lambda (29 samples, 0.04%)</title><rect x="761.3" y="515.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="764.3" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$251 (29 samples, 0.04%)</title><rect x="761.3" y="499.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="764.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (239 samples, 0.35%)</title><rect x="761.8" y="563.0" width="4.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="764.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.append (128 samples, 0.19%)</title><rect x="761.8" y="547.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="764.8" y="558.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (90 samples, 0.13%)</title><rect x="761.8" y="531.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="764.8" y="542.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (90 samples, 0.13%)</title><rect x="761.8" y="515.0" width="1.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="764.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.listOf (38 samples, 0.05%)</title><rect x="763.4" y="531.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="766.4" y="542.0"></text>
</g>
<g>
<title>java/util/List.of (38 samples, 0.05%)</title><rect x="763.4" y="515.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="766.4" y="526.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (38 samples, 0.05%)</title><rect x="763.4" y="499.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="766.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.getBuffer (111 samples, 0.16%)</title><rect x="764.0" y="547.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="767.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection$$Lambda$172/2114713671.get (111 samples, 0.16%)</title><rect x="764.0" y="531.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="767.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getBuffer (111 samples, 0.16%)</title><rect x="764.0" y="515.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="767.0" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (111 samples, 0.16%)</title><rect x="764.0" y="499.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="767.0" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (111 samples, 0.16%)</title><rect x="764.0" y="483.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="767.0" y="494.0"></text>
</g>
<g>
<title>byte[] (109 samples, 0.16%)</title><rect x="764.0" y="467.0" width="1.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="767.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$244/1205372074.accept (77 samples, 0.11%)</title><rect x="765.9" y="755.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="768.9" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (77 samples, 0.11%)</title><rect x="765.9" y="739.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="768.9" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$240/135343777.run (77 samples, 0.11%)</title><rect x="765.9" y="723.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="768.9" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (77 samples, 0.11%)</title><rect x="765.9" y="707.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="768.9" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (77 samples, 0.11%)</title><rect x="765.9" y="691.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="768.9" y="702.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (77 samples, 0.11%)</title><rect x="765.9" y="675.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="768.9" y="686.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (77 samples, 0.11%)</title><rect x="765.9" y="659.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="768.9" y="670.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (77 samples, 0.11%)</title><rect x="765.9" y="643.0" width="1.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="768.9" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (122 samples, 0.18%)</title><rect x="767.2" y="771.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="770.2" y="782.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (122 samples, 0.18%)</title><rect x="767.2" y="755.0" width="2.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="770.2" y="766.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (104 samples, 0.15%)</title><rect x="769.3" y="771.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="772.3" y="782.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (54 samples, 0.08%)</title><rect x="769.3" y="755.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="772.3" y="766.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (54 samples, 0.08%)</title><rect x="769.3" y="739.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="772.3" y="750.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (54 samples, 0.08%)</title><rect x="769.3" y="723.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="772.3" y="734.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (54 samples, 0.08%)</title><rect x="769.3" y="707.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="772.3" y="718.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (54 samples, 0.08%)</title><rect x="769.3" y="691.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="772.3" y="702.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (54 samples, 0.08%)</title><rect x="769.3" y="675.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="772.3" y="686.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2$1 (54 samples, 0.08%)</title><rect x="769.3" y="659.0" width="0.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="772.3" y="670.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps.makeRef (50 samples, 0.07%)</title><rect x="770.2" y="755.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="773.2" y="766.0"></text>
</g>
<g>
<title>java.util.stream.ForEachOps$ForEachOp$OfRef (50 samples, 0.07%)</title><rect x="770.2" y="739.0" width="0.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="773.2" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (277 samples, 0.40%)</title><rect x="771.1" y="771.0" width="4.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="774.1" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$188/903113097.run (140 samples, 0.20%)</title><rect x="771.1" y="755.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="774.1" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (140 samples, 0.20%)</title><rect x="771.1" y="739.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="774.1" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (140 samples, 0.20%)</title><rect x="771.1" y="723.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="774.1" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (140 samples, 0.20%)</title><rect x="771.1" y="707.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="774.1" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (140 samples, 0.20%)</title><rect x="771.1" y="691.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="774.1" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (140 samples, 0.20%)</title><rect x="771.1" y="675.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="774.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$181/1894615385.run (140 samples, 0.20%)</title><rect x="771.1" y="659.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="774.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (140 samples, 0.20%)</title><rect x="771.1" y="643.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="774.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (140 samples, 0.20%)</title><rect x="771.1" y="627.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="774.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (140 samples, 0.20%)</title><rect x="771.1" y="611.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="774.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (94 samples, 0.14%)</title><rect x="771.1" y="595.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="774.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (94 samples, 0.14%)</title><rect x="771.1" y="579.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="774.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (94 samples, 0.14%)</title><rect x="771.1" y="563.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="774.1" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/623247230.linkToTargetMethod (66 samples, 0.10%)</title><rect x="771.1" y="547.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="774.1" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/773662650.invoke (66 samples, 0.10%)</title><rect x="771.1" y="531.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="774.1" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (66 samples, 0.10%)</title><rect x="771.1" y="515.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="774.1" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (66 samples, 0.10%)</title><rect x="771.1" y="499.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="774.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (66 samples, 0.10%)</title><rect x="771.1" y="483.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="774.1" y="494.0"></text>
</g>
<g>
<title>byte[] (66 samples, 0.10%)</title><rect x="771.1" y="467.0" width="1.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="774.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (28 samples, 0.04%)</title><rect x="772.2" y="547.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="775.2" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (28 samples, 0.04%)</title><rect x="772.2" y="531.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="775.2" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (28 samples, 0.04%)</title><rect x="772.2" y="515.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="775.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$251/1699824535.get$Lambda (28 samples, 0.04%)</title><rect x="772.2" y="499.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="775.2" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$251 (28 samples, 0.04%)</title><rect x="772.2" y="483.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="775.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (46 samples, 0.07%)</title><rect x="772.7" y="595.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="775.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (46 samples, 0.07%)</title><rect x="772.7" y="579.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="775.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (46 samples, 0.07%)</title><rect x="772.7" y="563.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="775.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (46 samples, 0.07%)</title><rect x="772.7" y="547.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="775.7" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (46 samples, 0.07%)</title><rect x="772.7" y="531.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="775.7" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (46 samples, 0.07%)</title><rect x="772.7" y="515.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="775.7" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (46 samples, 0.07%)</title><rect x="772.7" y="499.0" width="0.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="775.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$192/1926392655.run (137 samples, 0.20%)</title><rect x="773.5" y="755.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="776.5" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (137 samples, 0.20%)</title><rect x="773.5" y="739.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="776.5" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (58 samples, 0.08%)</title><rect x="773.5" y="723.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="776.5" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (58 samples, 0.08%)</title><rect x="773.5" y="707.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="776.5" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$247/1271722553.get$Lambda (58 samples, 0.08%)</title><rect x="773.5" y="691.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="776.5" y="702.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$$Lambda$247 (58 samples, 0.08%)</title><rect x="773.5" y="675.0" width="0.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="776.5" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (79 samples, 0.11%)</title><rect x="774.4" y="723.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="777.4" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (79 samples, 0.11%)</title><rect x="774.4" y="707.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="777.4" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (79 samples, 0.11%)</title><rect x="774.4" y="691.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="777.4" y="702.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (79 samples, 0.11%)</title><rect x="774.4" y="675.0" width="1.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="777.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (414 samples, 0.60%)</title><rect x="775.8" y="771.0" width="7.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="778.8" y="782.0"></text>
</g>
<g>
<title>java/time/Instant.now (60 samples, 0.09%)</title><rect x="775.8" y="755.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="778.8" y="766.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (60 samples, 0.09%)</title><rect x="775.8" y="739.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="778.8" y="750.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (60 samples, 0.09%)</title><rect x="775.8" y="723.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="778.8" y="734.0"></text>
</g>
<g>
<title>java/time/Instant.create (60 samples, 0.09%)</title><rect x="775.8" y="707.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="778.8" y="718.0"></text>
</g>
<g>
<title>java.time.Instant (60 samples, 0.09%)</title><rect x="775.8" y="691.0" width="1.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="778.8" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (354 samples, 0.51%)</title><rect x="776.8" y="755.0" width="6.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="779.8" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (32 samples, 0.05%)</title><rect x="776.8" y="739.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="779.8" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (32 samples, 0.05%)</title><rect x="776.8" y="723.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="779.8" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$$Lambda$315/928562525.get$Lambda (32 samples, 0.05%)</title><rect x="776.8" y="707.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="779.8" y="718.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$$Lambda$315 (32 samples, 0.05%)</title><rect x="776.8" y="691.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="779.8" y="702.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (97 samples, 0.14%)</title><rect x="777.4" y="739.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="780.4" y="750.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (97 samples, 0.14%)</title><rect x="777.4" y="723.0" width="1.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="780.4" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.nextExpiryDeadline (37 samples, 0.05%)</title><rect x="779.0" y="739.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="782.0" y="750.0"></text>
</g>
<g>
<title>java/util/Optional.of (37 samples, 0.05%)</title><rect x="779.0" y="723.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="782.0" y="734.0"></text>
</g>
<g>
<title>java.util.Optional (37 samples, 0.05%)</title><rect x="779.0" y="707.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="782.0" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (188 samples, 0.27%)</title><rect x="779.7" y="739.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="782.7" y="750.0"></text>
</g>
<g>
<title>java.util.ArrayList (82 samples, 0.12%)</title><rect x="779.7" y="723.0" width="1.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="782.7" y="734.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (106 samples, 0.15%)</title><rect x="781.1" y="723.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="784.1" y="734.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (106 samples, 0.15%)</title><rect x="781.1" y="707.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="784.1" y="718.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (106 samples, 0.15%)</title><rect x="781.1" y="691.0" width="1.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="784.1" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.events (323 samples, 0.47%)</title><rect x="782.9" y="771.0" width="5.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="785.9" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (31 samples, 0.04%)</title><rect x="782.9" y="755.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="785.9" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (31 samples, 0.04%)</title><rect x="782.9" y="739.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="785.9" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment$$Lambda$238/1066786881.get$Lambda (31 samples, 0.04%)</title><rect x="782.9" y="723.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="785.9" y="734.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorAttachment$$Lambda$238 (31 samples, 0.04%)</title><rect x="782.9" y="707.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="785.9" y="718.0"></text>
</g>
<g>
<title>java/util/Collection.stream (168 samples, 0.24%)</title><rect x="783.4" y="755.0" width="2.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="786.4" y="766.0"></text>
</g>
<g>
<title>java/util/HashSet.spliterator (69 samples, 0.10%)</title><rect x="783.4" y="739.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="786.4" y="750.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySpliterator (69 samples, 0.10%)</title><rect x="783.4" y="723.0" width="1.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="786.4" y="734.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (99 samples, 0.14%)</title><rect x="784.6" y="739.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="787.6" y="750.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (99 samples, 0.14%)</title><rect x="784.6" y="723.0" width="1.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="787.6" y="734.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (124 samples, 0.18%)</title><rect x="786.3" y="755.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="789.3" y="766.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (124 samples, 0.18%)</title><rect x="786.3" y="739.0" width="2.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="789.3" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (91 samples, 0.13%)</title><rect x="788.4" y="771.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="791.4" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (91 samples, 0.13%)</title><rect x="788.4" y="755.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="791.4" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (91 samples, 0.13%)</title><rect x="788.4" y="739.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="791.4" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (91 samples, 0.13%)</title><rect x="788.4" y="723.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="791.4" y="734.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (39 samples, 0.06%)</title><rect x="788.4" y="707.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="791.4" y="718.0"></text>
</g>
<g>
<title>java.lang.Integer (39 samples, 0.06%)</title><rect x="788.4" y="691.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="791.4" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (52 samples, 0.08%)</title><rect x="789.0" y="707.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="792.0" y="718.0"></text>
</g>
<g>
<title>java/util/HashSet.add (52 samples, 0.08%)</title><rect x="789.0" y="691.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="792.0" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap.put (52 samples, 0.08%)</title><rect x="789.0" y="675.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="792.0" y="686.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (52 samples, 0.08%)</title><rect x="789.0" y="659.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="792.0" y="670.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (52 samples, 0.08%)</title><rect x="789.0" y="643.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="792.0" y="654.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (52 samples, 0.08%)</title><rect x="789.0" y="627.0" width="0.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="792.0" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (31 samples, 0.04%)</title><rect x="789.9" y="771.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="792.9" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (31 samples, 0.04%)</title><rect x="789.9" y="755.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="792.9" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (31 samples, 0.04%)</title><rect x="789.9" y="739.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="792.9" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (31 samples, 0.04%)</title><rect x="789.9" y="723.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="792.9" y="734.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (24 samples, 0.03%)</title><rect x="789.9" y="707.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="792.9" y="718.0"></text>
</g>
<g>
<title>java.lang.Integer (24 samples, 0.03%)</title><rect x="789.9" y="691.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="792.9" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (48 samples, 0.07%)</title><rect x="790.5" y="771.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="793.5" y="782.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (48 samples, 0.07%)</title><rect x="790.5" y="755.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="793.5" y="766.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (48 samples, 0.07%)</title><rect x="790.5" y="739.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="793.5" y="750.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (48 samples, 0.07%)</title><rect x="790.5" y="723.0" width="0.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="793.5" y="734.0"></text>
</g>
<g>
<title>one/nio/server/AcceptorThread.run (61 samples, 0.09%)</title><rect x="791.3" y="787.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="794.3" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.createSession (61 samples, 0.09%)</title><rect x="791.3" y="771.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="794.3" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.createSession (61 samples, 0.09%)</title><rect x="791.3" y="755.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="794.3" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/StorageSession.&lt;init&gt; (59 samples, 0.09%)</title><rect x="791.3" y="739.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="794.3" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.&lt;init&gt; (59 samples, 0.09%)</title><rect x="791.3" y="723.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="794.3" y="734.0"></text>
</g>
<g>
<title>byte[] (52 samples, 0.08%)</title><rect x="791.4" y="707.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="794.4" y="718.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (23,305 samples, 33.70%)</title><rect x="792.3" y="787.0" width="397.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="795.3" y="798.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (396 samples, 0.57%)</title><rect x="792.3" y="771.0" width="6.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="795.3" y="782.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (396 samples, 0.57%)</title><rect x="792.3" y="755.0" width="6.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="795.3" y="766.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (22,909 samples, 33.13%)</title><rect x="799.1" y="771.0" width="390.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="802.1" y="782.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (22,909 samples, 33.13%)</title><rect x="799.1" y="755.0" width="390.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="802.1" y="766.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (22,895 samples, 33.11%)</title><rect x="799.1" y="739.0" width="390.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="802.1" y="750.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (10,739 samples, 15.53%)</title><rect x="799.1" y="723.0" width="183.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="802.1" y="734.0">one/nio/http/HttpSession..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (10,739 samples, 15.53%)</title><rect x="799.1" y="707.0" width="183.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="802.1" y="718.0">one/nio/http/HttpServer...</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (10,200 samples, 14.75%)</title><rect x="799.1" y="691.0" width="174.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="802.1" y="702.0">RequestHandler1_entity..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1,114 samples, 1.61%)</title><rect x="799.1" y="675.0" width="19.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="802.1" y="686.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,114 samples, 1.61%)</title><rect x="799.1" y="659.0" width="19.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="802.1" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,114 samples, 1.61%)</title><rect x="799.1" y="643.0" width="19.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="802.1" y="654.0"></text>
</g>
<g>
<title>java.lang.String (526 samples, 0.76%)</title><rect x="799.1" y="627.0" width="8.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="802.1" y="638.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (588 samples, 0.85%)</title><rect x="808.0" y="627.0" width="10.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="811.0" y="638.0"></text>
</g>
<g>
<title>byte[] (588 samples, 0.85%)</title><rect x="808.0" y="611.0" width="10.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="811.0" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.entity (9,086 samples, 13.14%)</title><rect x="818.1" y="675.0" width="155.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="821.1" y="686.0">ru/mail/polis/servic..</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1265280059.linkToTargetMethod (429 samples, 0.62%)</title><rect x="818.1" y="659.0" width="7.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="821.1" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1440359064.invokeStatic (429 samples, 0.62%)</title><rect x="818.1" y="643.0" width="7.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="821.1" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$106/544362272.get$Lambda (429 samples, 0.62%)</title><rect x="818.1" y="627.0" width="7.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="821.1" y="638.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$$Lambda$106 (429 samples, 0.62%)</title><rect x="818.1" y="611.0" width="7.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="821.1" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (274 samples, 0.40%)</title><rect x="825.4" y="659.0" width="4.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="828.4" y="670.0"></text>
</g>
<g>
<title>java/lang/String.substring (274 samples, 0.40%)</title><rect x="825.4" y="643.0" width="4.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="828.4" y="654.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (274 samples, 0.40%)</title><rect x="825.4" y="627.0" width="4.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="828.4" y="638.0"></text>
</g>
<g>
<title>java.lang.String (170 samples, 0.25%)</title><rect x="825.4" y="611.0" width="2.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="828.4" y="622.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (104 samples, 0.15%)</title><rect x="828.3" y="611.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="831.3" y="622.0"></text>
</g>
<g>
<title>byte[] (104 samples, 0.15%)</title><rect x="828.3" y="595.0" width="1.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="831.3" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.executeAsync (381 samples, 0.55%)</title><rect x="830.1" y="659.0" width="6.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="833.1" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (128 samples, 0.19%)</title><rect x="830.1" y="643.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="833.1" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (128 samples, 0.19%)</title><rect x="830.1" y="627.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="833.1" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$107/2098846329.get$Lambda (128 samples, 0.19%)</title><rect x="830.1" y="611.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="833.1" y="622.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$$Lambda$107 (128 samples, 0.19%)</title><rect x="830.1" y="595.0" width="2.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="833.1" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (253 samples, 0.37%)</title><rect x="832.3" y="643.0" width="4.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="835.3" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (253 samples, 0.37%)</title><rect x="832.3" y="627.0" width="4.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="835.3" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (252 samples, 0.36%)</title><rect x="832.3" y="611.0" width="4.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="835.3" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/ConsistentHashImpl.all (4,899 samples, 7.08%)</title><rect x="836.6" y="659.0" width="83.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="839.6" y="670.0">ru/mail/p..</text>
</g>
<g>
<title>java/util/Set.copyOf (4,899 samples, 7.08%)</title><rect x="836.6" y="643.0" width="83.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="839.6" y="654.0">java/util..</text>
</g>
<g>
<title>java.util.HashSet (204 samples, 0.30%)</title><rect x="836.6" y="627.0" width="3.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="839.6" y="638.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (1,038 samples, 1.50%)</title><rect x="840.1" y="627.0" width="17.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="843.1" y="638.0"></text>
</g>
<g>
<title>java.lang.Object[] (363 samples, 0.52%)</title><rect x="840.1" y="611.0" width="6.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="843.1" y="622.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (675 samples, 0.98%)</title><rect x="846.3" y="611.0" width="11.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="849.3" y="622.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (452 samples, 0.65%)</title><rect x="846.3" y="595.0" width="7.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="849.3" y="606.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (452 samples, 0.65%)</title><rect x="846.3" y="579.0" width="7.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="849.3" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap.keySet (223 samples, 0.32%)</title><rect x="854.0" y="595.0" width="3.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="857.0" y="606.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySet (223 samples, 0.32%)</title><rect x="854.0" y="579.0" width="3.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="857.0" y="590.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (2,960 samples, 4.28%)</title><rect x="857.8" y="627.0" width="50.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="860.8" y="638.0">java/..</text>
</g>
<g>
<title>java.util.HashMap (589 samples, 0.85%)</title><rect x="857.8" y="611.0" width="10.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="860.8" y="622.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (2,371 samples, 3.43%)</title><rect x="867.8" y="611.0" width="40.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="870.8" y="622.0">jav..</text>
</g>
<g>
<title>java/util/HashSet.add (2,061 samples, 2.98%)</title><rect x="867.8" y="595.0" width="35.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="870.8" y="606.0">jav..</text>
</g>
<g>
<title>java/util/HashMap.put (2,061 samples, 2.98%)</title><rect x="867.8" y="579.0" width="35.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="870.8" y="590.0">jav..</text>
</g>
<g>
<title>java/util/HashMap.putVal (2,061 samples, 2.98%)</title><rect x="867.8" y="563.0" width="35.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="870.8" y="574.0">jav..</text>
</g>
<g>
<title>java/util/HashMap.newNode (1,040 samples, 1.50%)</title><rect x="867.8" y="547.0" width="17.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="870.8" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (1,040 samples, 1.50%)</title><rect x="867.8" y="531.0" width="17.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="870.8" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (1,021 samples, 1.48%)</title><rect x="885.6" y="547.0" width="17.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="888.6" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (1,021 samples, 1.48%)</title><rect x="885.6" y="531.0" width="17.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="888.6" y="542.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (310 samples, 0.45%)</title><rect x="903.0" y="595.0" width="5.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="906.0" y="606.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (310 samples, 0.45%)</title><rect x="903.0" y="579.0" width="5.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="906.0" y="590.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (310 samples, 0.45%)</title><rect x="903.0" y="563.0" width="5.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="906.0" y="574.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeyIterator (310 samples, 0.45%)</title><rect x="903.0" y="547.0" width="5.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="906.0" y="558.0"></text>
</g>
<g>
<title>java/util/Set.of (697 samples, 1.01%)</title><rect x="908.3" y="627.0" width="11.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="911.3" y="638.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$SetN (256 samples, 0.37%)</title><rect x="908.3" y="611.0" width="4.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="911.3" y="622.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$SetN.&lt;init&gt; (441 samples, 0.64%)</title><rect x="912.7" y="611.0" width="7.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="915.7" y="622.0"></text>
</g>
<g>
<title>java.lang.Object[] (441 samples, 0.64%)</title><rect x="912.7" y="595.0" width="7.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="915.7" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/RF.from (3,103 samples, 4.49%)</title><rect x="920.2" y="659.0" width="52.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="923.2" y="670.0">ru/ma..</text>
</g>
<g>
<title>com/google/common/base/Splitter.on (334 samples, 0.48%)</title><rect x="920.2" y="643.0" width="5.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="923.2" y="654.0"></text>
</g>
<g>
<title>com/google/common/base/CharMatcher.is (165 samples, 0.24%)</title><rect x="920.2" y="627.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="923.2" y="638.0"></text>
</g>
<g>
<title>com.google.common.base.CharMatcher$Is (165 samples, 0.24%)</title><rect x="920.2" y="611.0" width="2.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="923.2" y="622.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.on (169 samples, 0.24%)</title><rect x="923.0" y="627.0" width="2.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="926.0" y="638.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter$1 (169 samples, 0.24%)</title><rect x="923.0" y="611.0" width="2.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="926.0" y="622.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splitToList (2,549 samples, 3.69%)</title><rect x="925.9" y="643.0" width="43.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="928.9" y="654.0">com/..</text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.hasNext (1,056 samples, 1.53%)</title><rect x="925.9" y="627.0" width="18.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="928.9" y="638.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.tryToComputeNext (1,056 samples, 1.53%)</title><rect x="925.9" y="611.0" width="18.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="928.9" y="622.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (1,056 samples, 1.53%)</title><rect x="925.9" y="595.0" width="18.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="928.9" y="606.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (1,056 samples, 1.53%)</title><rect x="925.9" y="579.0" width="18.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="928.9" y="590.0"></text>
</g>
<g>
<title>java/lang/String.subSequence (1,056 samples, 1.53%)</title><rect x="925.9" y="563.0" width="18.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="928.9" y="574.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,056 samples, 1.53%)</title><rect x="925.9" y="547.0" width="18.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="928.9" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,056 samples, 1.53%)</title><rect x="925.9" y="531.0" width="18.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="928.9" y="542.0"></text>
</g>
<g>
<title>java.lang.String (566 samples, 0.82%)</title><rect x="925.9" y="515.0" width="9.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="928.9" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (490 samples, 0.71%)</title><rect x="935.5" y="515.0" width="8.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="938.5" y="526.0"></text>
</g>
<g>
<title>byte[] (490 samples, 0.71%)</title><rect x="935.5" y="499.0" width="8.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="938.5" y="510.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splittingIterator (575 samples, 0.83%)</title><rect x="943.9" y="627.0" width="9.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="946.9" y="638.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (575 samples, 0.83%)</title><rect x="943.9" y="611.0" width="9.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="946.9" y="622.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (575 samples, 0.83%)</title><rect x="943.9" y="595.0" width="9.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="946.9" y="606.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter$1$1 (575 samples, 0.83%)</title><rect x="943.9" y="579.0" width="9.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="946.9" y="590.0"></text>
</g>
<g>
<title>java.util.ArrayList (254 samples, 0.37%)</title><rect x="953.7" y="627.0" width="4.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="956.7" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (664 samples, 0.96%)</title><rect x="958.0" y="627.0" width="11.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="961.0" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (664 samples, 0.96%)</title><rect x="958.0" y="611.0" width="11.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="961.0" y="622.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (664 samples, 0.96%)</title><rect x="958.0" y="595.0" width="11.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="961.0" y="606.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (664 samples, 0.96%)</title><rect x="958.0" y="579.0" width="11.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="961.0" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (664 samples, 0.96%)</title><rect x="958.0" y="563.0" width="11.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="961.0" y="574.0"></text>
</g>
<g>
<title>java.lang.Object[] (664 samples, 0.96%)</title><rect x="958.0" y="547.0" width="11.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="961.0" y="558.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.topology.RF (220 samples, 0.32%)</title><rect x="969.4" y="643.0" width="3.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="972.4" y="654.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (539 samples, 0.78%)</title><rect x="973.1" y="691.0" width="9.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="976.1" y="702.0"></text>
</g>
<g>
<title>java/lang/String.substring (539 samples, 0.78%)</title><rect x="973.1" y="675.0" width="9.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="976.1" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (539 samples, 0.78%)</title><rect x="973.1" y="659.0" width="9.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="976.1" y="670.0"></text>
</g>
<g>
<title>java.lang.String (243 samples, 0.35%)</title><rect x="973.1" y="643.0" width="4.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="976.1" y="654.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (296 samples, 0.43%)</title><rect x="977.3" y="643.0" width="5.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="980.3" y="654.0"></text>
</g>
<g>
<title>byte[] (296 samples, 0.43%)</title><rect x="977.3" y="627.0" width="5.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="980.3" y="638.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (3,738 samples, 5.41%)</title><rect x="982.3" y="723.0" width="63.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="985.3" y="734.0">one/nio..</text>
</g>
<g>
<title>one.nio.http.Request (411 samples, 0.59%)</title><rect x="982.3" y="707.0" width="7.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="985.3" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (896 samples, 1.30%)</title><rect x="989.3" y="707.0" width="15.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="992.3" y="718.0"></text>
</g>
<g>
<title>java.lang.String[] (896 samples, 1.30%)</title><rect x="989.3" y="691.0" width="15.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="992.3" y="702.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,431 samples, 3.52%)</title><rect x="1004.6" y="707.0" width="41.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1007.6" y="718.0">one..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,431 samples, 3.52%)</title><rect x="1004.6" y="691.0" width="41.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1007.6" y="702.0">one..</text>
</g>
<g>
<title>char[] (1,591 samples, 2.30%)</title><rect x="1004.6" y="675.0" width="27.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1007.6" y="686.0">c..</text>
</g>
<g>
<title>java.lang.String (200 samples, 0.29%)</title><rect x="1031.8" y="675.0" width="3.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1034.8" y="686.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (640 samples, 0.93%)</title><rect x="1035.2" y="675.0" width="10.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1038.2" y="686.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (640 samples, 0.93%)</title><rect x="1035.2" y="659.0" width="10.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1038.2" y="670.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (640 samples, 0.93%)</title><rect x="1035.2" y="643.0" width="10.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1038.2" y="654.0"></text>
</g>
<g>
<title>byte[] (640 samples, 0.93%)</title><rect x="1035.2" y="627.0" width="10.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1038.2" y="638.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (421 samples, 0.61%)</title><rect x="1046.1" y="723.0" width="7.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1049.1" y="734.0"></text>
</g>
<g>
<title>byte[] (421 samples, 0.61%)</title><rect x="1046.1" y="707.0" width="7.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1049.1" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (572 samples, 0.83%)</title><rect x="1053.3" y="723.0" width="9.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1056.3" y="734.0"></text>
</g>
<g>
<title>java/lang/String.substring (572 samples, 0.83%)</title><rect x="1053.3" y="707.0" width="9.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1056.3" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (572 samples, 0.83%)</title><rect x="1053.3" y="691.0" width="9.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1056.3" y="702.0"></text>
</g>
<g>
<title>java.lang.String (251 samples, 0.36%)</title><rect x="1053.3" y="675.0" width="4.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1056.3" y="686.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (321 samples, 0.46%)</title><rect x="1057.6" y="675.0" width="5.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1060.6" y="686.0"></text>
</g>
<g>
<title>byte[] (321 samples, 0.46%)</title><rect x="1057.6" y="659.0" width="5.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1060.6" y="670.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (7,425 samples, 10.74%)</title><rect x="1063.1" y="723.0" width="126.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1066.1" y="734.0">one/nio/util/Utf..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (7,425 samples, 10.74%)</title><rect x="1063.1" y="707.0" width="126.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1066.1" y="718.0">one/nio/util/Utf..</text>
</g>
<g>
<title>char[] (3,864 samples, 5.59%)</title><rect x="1063.1" y="691.0" width="65.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1066.1" y="702.0">char[]</text>
</g>
<g>
<title>java.lang.String (1,167 samples, 1.69%)</title><rect x="1129.0" y="691.0" width="19.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1132.0" y="702.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2,394 samples, 3.46%)</title><rect x="1148.9" y="691.0" width="40.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1151.9" y="702.0">jav..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2,394 samples, 3.46%)</title><rect x="1148.9" y="675.0" width="40.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1151.9" y="686.0">jav..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (2,394 samples, 3.46%)</title><rect x="1148.9" y="659.0" width="40.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1151.9" y="670.0">jav..</text>
</g>
<g>
<title>byte[] (2,394 samples, 3.46%)</title><rect x="1148.9" y="643.0" width="40.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1151.9" y="654.0">byt..</text>
</g>
</g>
</svg>
