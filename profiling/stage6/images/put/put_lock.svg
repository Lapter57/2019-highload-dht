<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="918" onload="init(evt)" viewBox="0 0 1200 918" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="901"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="901"> </text>
<g id="frames">
<g>
<title>all (71,493 samples, 100.00%)</title><rect x="10.0" y="867.0" width="1180.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="13.0" y="878.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (43,176 samples, 60.39%)</title><rect x="10.0" y="851.0" width="712.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="13.0" y="862.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (43,176 samples, 60.39%)</title><rect x="10.0" y="835.0" width="712.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.0" y="846.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (43,176 samples, 60.39%)</title><rect x="10.0" y="819.0" width="712.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.0" y="830.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (16,453 samples, 23.01%)</title><rect x="10.0" y="803.0" width="271.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.0" y="814.0">java/util/concurrent/CompletableFutu..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (16,453 samples, 23.01%)</title><rect x="10.0" y="787.0" width="271.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.0" y="798.0">java/util/concurrent/CompletableFutu..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (16,453 samples, 23.01%)</title><rect x="10.0" y="771.0" width="271.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="13.0" y="782.0">java/util/concurrent/CompletableFutu..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$133/1711595431.apply (16,453 samples, 23.01%)</title><rect x="10.0" y="755.0" width="271.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="13.0" y="766.0">jdk/internal/net/http/MultiExchange$..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (16,453 samples, 23.01%)</title><rect x="10.0" y="739.0" width="271.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="13.0" y="750.0">jdk/internal/net/http/MultiExchange...</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (16,453 samples, 23.01%)</title><rect x="10.0" y="723.0" width="271.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.0" y="734.0">jdk/internal/net/http/MultiExchange...</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (16,414 samples, 22.96%)</title><rect x="10.0" y="707.0" width="270.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="13.0" y="718.0">jdk/internal/net/http/Exchange.respo..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (16,414 samples, 22.96%)</title><rect x="10.0" y="691.0" width="270.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="13.0" y="702.0">jdk/internal/net/http/Exchange.respo..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (16,414 samples, 22.96%)</title><rect x="10.0" y="675.0" width="270.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.0" y="686.0">jdk/internal/net/http/Exchange.respo..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (6,814 samples, 9.53%)</title><rect x="10.0" y="659.0" width="112.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="13.0" y="670.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (6,814 samples, 9.53%)</title><rect x="10.0" y="643.0" width="112.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.0" y="654.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (6,814 samples, 9.53%)</title><rect x="10.0" y="627.0" width="112.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.0" y="638.0">java/util/conc..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$174/1093022843.apply (6,814 samples, 9.53%)</title><rect x="10.0" y="611.0" width="112.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.0" y="622.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (6,814 samples, 9.53%)</title><rect x="10.0" y="595.0" width="112.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.0" y="606.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (6,814 samples, 9.53%)</title><rect x="10.0" y="579.0" width="112.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="13.0" y="590.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$139/1035318298.apply (6,814 samples, 9.53%)</title><rect x="10.0" y="563.0" width="112.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.0" y="574.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (6,814 samples, 9.53%)</title><rect x="10.0" y="547.0" width="112.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="13.0" y="558.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (6,814 samples, 9.53%)</title><rect x="10.0" y="531.0" width="112.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.0" y="542.0">jdk/internal/n..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (6,814 samples, 9.53%)</title><rect x="10.0" y="515.0" width="112.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.0" y="526.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (6,814 samples, 9.53%)</title><rect x="10.0" y="499.0" width="112.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.0" y="510.0">java/util/conc..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$189/1784125001.apply (6,814 samples, 9.53%)</title><rect x="10.0" y="483.0" width="112.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="13.0" y="494.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (6,814 samples, 9.53%)</title><rect x="10.0" y="467.0" width="112.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="13.0" y="478.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (6,814 samples, 9.53%)</title><rect x="10.0" y="451.0" width="112.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="13.0" y="462.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (6,814 samples, 9.53%)</title><rect x="10.0" y="435.0" width="112.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.0" y="446.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (1,931 samples, 2.70%)</title><rect x="10.0" y="419.0" width="31.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.0" y="430.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (1,931 samples, 2.70%)</title><rect x="10.0" y="403.0" width="31.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="13.0" y="414.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (1,931 samples, 2.70%)</title><rect x="10.0" y="387.0" width="31.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="13.0" y="398.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (1,931 samples, 2.70%)</title><rect x="10.0" y="371.0" width="31.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.0" y="382.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (1,931 samples, 2.70%)</title><rect x="10.0" y="355.0" width="31.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.0" y="366.0">jd..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (1,233 samples, 1.72%)</title><rect x="10.0" y="339.0" width="20.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="13.0" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (698 samples, 0.98%)</title><rect x="30.4" y="339.0" width="11.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="33.4" y="350.0"></text>
</g>
<g>
<title>java.lang.Object (698 samples, 0.98%)</title><rect x="30.4" y="323.0" width="11.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="33.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (4,883 samples, 6.83%)</title><rect x="41.9" y="419.0" width="80.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="44.9" y="430.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (4,883 samples, 6.83%)</title><rect x="41.9" y="403.0" width="80.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="44.9" y="414.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (4,883 samples, 6.83%)</title><rect x="41.9" y="387.0" width="80.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="44.9" y="398.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (4,883 samples, 6.83%)</title><rect x="41.9" y="371.0" width="80.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="44.9" y="382.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (4,883 samples, 6.83%)</title><rect x="41.9" y="355.0" width="80.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="44.9" y="366.0">jdk/inter..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (3,896 samples, 5.45%)</title><rect x="41.9" y="339.0" width="64.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="44.9" y="350.0">jdk.int..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (987 samples, 1.38%)</title><rect x="106.2" y="339.0" width="16.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="109.2" y="350.0"></text>
</g>
<g>
<title>java.lang.Object (987 samples, 1.38%)</title><rect x="106.2" y="323.0" width="16.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="109.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (9,600 samples, 13.43%)</title><rect x="122.5" y="659.0" width="158.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="125.5" y="670.0">jdk/internal/net/htt..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (9,600 samples, 13.43%)</title><rect x="122.5" y="643.0" width="158.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="125.5" y="654.0">jdk/internal/net/htt..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (9,590 samples, 13.41%)</title><rect x="122.5" y="627.0" width="158.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="125.5" y="638.0">java/util/concurrent..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (9,590 samples, 13.41%)</title><rect x="122.5" y="611.0" width="158.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="125.5" y="622.0">java/util/concurrent..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (9,590 samples, 13.41%)</title><rect x="122.5" y="595.0" width="158.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="125.5" y="606.0">java/util/concurrent..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$144/821458659.apply (9,590 samples, 13.41%)</title><rect x="122.5" y="579.0" width="158.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="125.5" y="590.0">jdk/internal/net/htt..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$get$0 (9,590 samples, 13.41%)</title><rect x="122.5" y="563.0" width="158.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="125.5" y="574.0">jdk/internal/net/htt..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createExchangeImpl (9,590 samples, 13.41%)</title><rect x="122.5" y="547.0" width="158.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="125.5" y="558.0">jdk/internal/net/htt..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (9,590 samples, 13.41%)</title><rect x="122.5" y="531.0" width="158.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="125.5" y="542.0">jdk/internal/net/htt..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (9,590 samples, 13.41%)</title><rect x="122.5" y="515.0" width="158.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="125.5" y="526.0">jdk/internal/net/htt..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (9,587 samples, 13.41%)</title><rect x="122.5" y="499.0" width="158.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="125.5" y="510.0">jdk/internal/net/htt..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (9,587 samples, 13.41%)</title><rect x="122.5" y="483.0" width="158.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="125.5" y="494.0">jdk/internal/net/htt..</text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool (9,587 samples, 13.41%)</title><rect x="122.5" y="467.0" width="158.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="125.5" y="478.0">jdk.internal.net.htt..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.requestFilters (39 samples, 0.05%)</title><rect x="280.9" y="707.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="283.9" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.request (39 samples, 0.05%)</title><rect x="280.9" y="691.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="283.9" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (37 samples, 0.05%)</title><rect x="280.9" y="675.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="283.9" y="686.0"></text>
</g>
<g>
<title>java.lang.Class (37 samples, 0.05%)</title><rect x="280.9" y="659.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="283.9" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (3,257 samples, 4.56%)</title><rect x="281.6" y="803.0" width="53.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="284.6" y="814.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (3,251 samples, 4.55%)</title><rect x="281.6" y="787.0" width="53.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="284.6" y="798.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (739 samples, 1.03%)</title><rect x="281.6" y="771.0" width="12.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="284.6" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (739 samples, 1.03%)</title><rect x="281.6" y="755.0" width="12.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="284.6" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (739 samples, 1.03%)</title><rect x="281.6" y="739.0" width="12.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="284.6" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (739 samples, 1.03%)</title><rect x="281.6" y="723.0" width="12.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="284.6" y="734.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (739 samples, 1.03%)</title><rect x="281.6" y="707.0" width="12.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="284.6" y="718.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (739 samples, 1.03%)</title><rect x="281.6" y="691.0" width="12.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="284.6" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (2,512 samples, 3.51%)</title><rect x="293.8" y="771.0" width="41.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="296.8" y="782.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (2,512 samples, 3.51%)</title><rect x="293.8" y="755.0" width="41.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="296.8" y="766.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (2,512 samples, 3.51%)</title><rect x="293.8" y="739.0" width="41.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="296.8" y="750.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2,512 samples, 3.51%)</title><rect x="293.8" y="723.0" width="41.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="296.8" y="734.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2,512 samples, 3.51%)</title><rect x="293.8" y="707.0" width="41.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="296.8" y="718.0">jav..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2,512 samples, 3.51%)</title><rect x="293.8" y="691.0" width="41.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="296.8" y="702.0">jdk..</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (2,512 samples, 3.51%)</title><rect x="293.8" y="675.0" width="41.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="296.8" y="686.0">jav..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$205/1532762392.run (57 samples, 0.08%)</title><rect x="335.3" y="803.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="338.3" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (57 samples, 0.08%)</title><rect x="335.3" y="787.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="338.3" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (57 samples, 0.08%)</title><rect x="335.3" y="771.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="338.3" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (57 samples, 0.08%)</title><rect x="335.3" y="755.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="338.3" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (57 samples, 0.08%)</title><rect x="335.3" y="739.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="338.3" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (57 samples, 0.08%)</title><rect x="335.3" y="723.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="338.3" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (57 samples, 0.08%)</title><rect x="335.3" y="707.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="338.3" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (57 samples, 0.08%)</title><rect x="335.3" y="691.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="338.3" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (57 samples, 0.08%)</title><rect x="335.3" y="675.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="338.3" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (57 samples, 0.08%)</title><rect x="335.3" y="659.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="338.3" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (57 samples, 0.08%)</title><rect x="335.3" y="643.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="338.3" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (57 samples, 0.08%)</title><rect x="335.3" y="627.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="338.3" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (57 samples, 0.08%)</title><rect x="335.3" y="611.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="338.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (57 samples, 0.08%)</title><rect x="335.3" y="595.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="338.3" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (57 samples, 0.08%)</title><rect x="335.3" y="579.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="338.3" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (57 samples, 0.08%)</title><rect x="335.3" y="563.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="338.3" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (57 samples, 0.08%)</title><rect x="335.3" y="547.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="338.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$134/2113557447.apply (57 samples, 0.08%)</title><rect x="335.3" y="531.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="338.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (57 samples, 0.08%)</title><rect x="335.3" y="515.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="338.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (57 samples, 0.08%)</title><rect x="335.3" y="499.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="338.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (57 samples, 0.08%)</title><rect x="335.3" y="483.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="338.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (57 samples, 0.08%)</title><rect x="335.3" y="467.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="338.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (57 samples, 0.08%)</title><rect x="335.3" y="451.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="338.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$232/853075107.run (57 samples, 0.08%)</title><rect x="335.3" y="435.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="338.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (57 samples, 0.08%)</title><rect x="335.3" y="419.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="338.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (57 samples, 0.08%)</title><rect x="335.3" y="403.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="338.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (57 samples, 0.08%)</title><rect x="335.3" y="387.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="338.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (57 samples, 0.08%)</title><rect x="335.3" y="371.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="338.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (57 samples, 0.08%)</title><rect x="335.3" y="355.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="338.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (57 samples, 0.08%)</title><rect x="335.3" y="339.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="338.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (57 samples, 0.08%)</title><rect x="335.3" y="323.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="338.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$166/1615159449.run (57 samples, 0.08%)</title><rect x="335.3" y="307.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="338.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (57 samples, 0.08%)</title><rect x="335.3" y="291.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="338.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (57 samples, 0.08%)</title><rect x="335.3" y="275.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="338.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (57 samples, 0.08%)</title><rect x="335.3" y="259.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="338.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (57 samples, 0.08%)</title><rect x="335.3" y="243.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="338.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$233/1245151766.run (57 samples, 0.08%)</title><rect x="335.3" y="227.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="338.3" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (57 samples, 0.08%)</title><rect x="335.3" y="211.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="338.3" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (57 samples, 0.08%)</title><rect x="335.3" y="195.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="338.3" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (57 samples, 0.08%)</title><rect x="335.3" y="179.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="338.3" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (57 samples, 0.08%)</title><rect x="335.3" y="163.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="338.3" y="174.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool (34 samples, 0.05%)</title><rect x="335.3" y="147.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="338.3" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (23 samples, 0.03%)</title><rect x="335.9" y="147.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="338.9" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (23 samples, 0.03%)</title><rect x="335.9" y="131.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="338.9" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (21 samples, 0.03%)</title><rect x="335.9" y="115.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="338.9" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (21 samples, 0.03%)</title><rect x="335.9" y="99.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="338.9" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (21 samples, 0.03%)</title><rect x="335.9" y="83.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="338.9" y="94.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (21 samples, 0.03%)</title><rect x="335.9" y="67.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="338.9" y="78.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (21 samples, 0.03%)</title><rect x="335.9" y="51.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="338.9" y="62.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (19 samples, 0.03%)</title><rect x="335.9" y="35.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="338.9" y="46.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (23,409 samples, 32.74%)</title><rect x="336.3" y="803.0" width="386.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="339.3" y="814.0">jdk/internal/net/http/common/SequentialScheduler$Sche..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (23,409 samples, 32.74%)</title><rect x="336.3" y="787.0" width="386.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="339.3" y="798.0">jdk/internal/net/http/common/SequentialScheduler$Comp..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (6,539 samples, 9.15%)</title><rect x="336.3" y="771.0" width="107.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="339.3" y="782.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$166/1615159449.run (6,539 samples, 9.15%)</title><rect x="336.3" y="755.0" width="107.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="339.3" y="766.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (6,539 samples, 9.15%)</title><rect x="336.3" y="739.0" width="107.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="339.3" y="750.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (6,522 samples, 9.12%)</title><rect x="336.3" y="723.0" width="107.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="339.3" y="734.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (6,522 samples, 9.12%)</title><rect x="336.3" y="707.0" width="107.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="339.3" y="718.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (6,522 samples, 9.12%)</title><rect x="336.3" y="691.0" width="107.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="339.3" y="702.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (6,522 samples, 9.12%)</title><rect x="336.3" y="675.0" width="107.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="339.3" y="686.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (6,522 samples, 9.12%)</title><rect x="336.3" y="659.0" width="107.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="339.3" y="670.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (6,522 samples, 9.12%)</title><rect x="336.3" y="643.0" width="107.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="339.3" y="654.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (6,522 samples, 9.12%)</title><rect x="336.3" y="627.0" width="107.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="339.3" y="638.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (6,522 samples, 9.12%)</title><rect x="336.3" y="611.0" width="107.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="339.3" y="622.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (6,522 samples, 9.12%)</title><rect x="336.3" y="595.0" width="107.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="339.3" y="606.0">jdk/internal/..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (5,639 samples, 7.89%)</title><rect x="336.3" y="579.0" width="93.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="339.3" y="590.0">jdk.interna..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (883 samples, 1.24%)</title><rect x="429.3" y="579.0" width="14.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="432.3" y="590.0"></text>
</g>
<g>
<title>java.lang.Object (883 samples, 1.24%)</title><rect x="429.3" y="563.0" width="14.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="432.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (17 samples, 0.02%)</title><rect x="443.9" y="723.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="446.9" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (17 samples, 0.02%)</title><rect x="443.9" y="707.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="446.9" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (17 samples, 0.02%)</title><rect x="443.9" y="691.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="446.9" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (17 samples, 0.02%)</title><rect x="443.9" y="675.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="446.9" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (17 samples, 0.02%)</title><rect x="443.9" y="659.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="446.9" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (17 samples, 0.02%)</title><rect x="443.9" y="643.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="446.9" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (17 samples, 0.02%)</title><rect x="443.9" y="627.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="446.9" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (17 samples, 0.02%)</title><rect x="443.9" y="611.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="446.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (17 samples, 0.02%)</title><rect x="443.9" y="595.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="446.9" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (17 samples, 0.02%)</title><rect x="443.9" y="579.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="446.9" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (17 samples, 0.02%)</title><rect x="443.9" y="563.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="446.9" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (17 samples, 0.02%)</title><rect x="443.9" y="547.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="446.9" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (17 samples, 0.02%)</title><rect x="443.9" y="531.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="446.9" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (17 samples, 0.02%)</title><rect x="443.9" y="515.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="446.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$192/1158665635.apply (17 samples, 0.02%)</title><rect x="443.9" y="499.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="446.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (17 samples, 0.02%)</title><rect x="443.9" y="483.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="446.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (17 samples, 0.02%)</title><rect x="443.9" y="467.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="446.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.response (17 samples, 0.02%)</title><rect x="443.9" y="451.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="446.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (17 samples, 0.02%)</title><rect x="443.9" y="435.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="446.9" y="446.0"></text>
</g>
<g>
<title>java.lang.Class (17 samples, 0.02%)</title><rect x="443.9" y="419.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="446.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (16,870 samples, 23.60%)</title><rect x="444.2" y="771.0" width="278.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="447.2" y="782.0">jdk/internal/net/http/common/Sequenti..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (16,870 samples, 23.60%)</title><rect x="444.2" y="755.0" width="278.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="447.2" y="766.0">jdk/internal/net/http/common/Sequenti..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (16,870 samples, 23.60%)</title><rect x="444.2" y="739.0" width="278.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="447.2" y="750.0">jdk/internal/net/http/common/Sequenti..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$166/1615159449.run (16,870 samples, 23.60%)</title><rect x="444.2" y="723.0" width="278.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="447.2" y="734.0">jdk/internal/net/http/Http1AsyncRecei..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (16,870 samples, 23.60%)</title><rect x="444.2" y="707.0" width="278.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="447.2" y="718.0">jdk/internal/net/http/Http1AsyncRecei..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (16,870 samples, 23.60%)</title><rect x="444.2" y="691.0" width="278.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="447.2" y="702.0">jdk/internal/net/http/Http1AsyncRecei..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (16,870 samples, 23.60%)</title><rect x="444.2" y="675.0" width="278.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="447.2" y="686.0">jdk/internal/net/http/Http1Response$B..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (16,870 samples, 23.60%)</title><rect x="444.2" y="659.0" width="278.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="447.2" y="670.0">jdk/internal/net/http/ResponseContent..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$233/1245151766.run (16,870 samples, 23.60%)</title><rect x="444.2" y="643.0" width="278.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="447.2" y="654.0">jdk/internal/net/http/Http1Response$$..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (16,870 samples, 23.60%)</title><rect x="444.2" y="627.0" width="278.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="447.2" y="638.0">jdk/internal/net/http/Http1Response.o..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (16,870 samples, 23.60%)</title><rect x="444.2" y="611.0" width="278.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="447.2" y="622.0">jdk/internal/net/http/HttpConnection...</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (16,870 samples, 23.60%)</title><rect x="444.2" y="595.0" width="278.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="447.2" y="606.0">jdk/internal/net/http/ConnectionPool...</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (16,870 samples, 23.60%)</title><rect x="444.2" y="579.0" width="278.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="447.2" y="590.0">jdk/internal/net/http/ConnectionPool...</text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool (9,624 samples, 13.46%)</title><rect x="444.2" y="563.0" width="158.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="447.2" y="574.0">jdk.internal.net.htt..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (7,246 samples, 10.14%)</title><rect x="603.0" y="563.0" width="119.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="606.0" y="574.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (7,246 samples, 10.14%)</title><rect x="603.0" y="547.0" width="119.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="606.0" y="558.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (1,795 samples, 2.51%)</title><rect x="603.0" y="531.0" width="29.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="606.0" y="542.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (1,795 samples, 2.51%)</title><rect x="603.0" y="515.0" width="29.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="606.0" y="526.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (1,795 samples, 2.51%)</title><rect x="603.0" y="499.0" width="29.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="606.0" y="510.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (1,795 samples, 2.51%)</title><rect x="603.0" y="483.0" width="29.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="606.0" y="494.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (1,795 samples, 2.51%)</title><rect x="603.0" y="467.0" width="29.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="606.0" y="478.0">jd..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (1,252 samples, 1.75%)</title><rect x="603.0" y="451.0" width="20.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="606.0" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (543 samples, 0.76%)</title><rect x="623.7" y="451.0" width="9.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="626.7" y="462.0"></text>
</g>
<g>
<title>java.lang.Object (543 samples, 0.76%)</title><rect x="623.7" y="435.0" width="9.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="626.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (5,451 samples, 7.62%)</title><rect x="632.7" y="531.0" width="89.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="635.7" y="542.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (5,451 samples, 7.62%)</title><rect x="632.7" y="515.0" width="89.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="635.7" y="526.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (5,451 samples, 7.62%)</title><rect x="632.7" y="499.0" width="89.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="635.7" y="510.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (5,451 samples, 7.62%)</title><rect x="632.7" y="483.0" width="89.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="635.7" y="494.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (5,451 samples, 7.62%)</title><rect x="632.7" y="467.0" width="89.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="635.7" y="478.0">jdk/intern..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (4,857 samples, 6.79%)</title><rect x="632.7" y="451.0" width="80.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="635.7" y="462.0">jdk.inter..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (594 samples, 0.83%)</title><rect x="712.8" y="451.0" width="9.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="715.8" y="462.0"></text>
</g>
<g>
<title>java.lang.Object (594 samples, 0.83%)</title><rect x="712.8" y="435.0" width="9.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="715.8" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (1,938 samples, 2.71%)</title><rect x="722.6" y="851.0" width="32.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="725.6" y="862.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (1,938 samples, 2.71%)</title><rect x="722.6" y="835.0" width="32.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="725.6" y="846.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (1,938 samples, 2.71%)</title><rect x="722.6" y="819.0" width="32.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="725.6" y="830.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (1,938 samples, 2.71%)</title><rect x="722.6" y="803.0" width="32.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="725.6" y="814.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (1,938 samples, 2.71%)</title><rect x="722.6" y="787.0" width="32.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="725.6" y="798.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncRun.exec (835 samples, 1.17%)</title><rect x="722.6" y="771.0" width="13.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="725.6" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncRun.run (835 samples, 1.17%)</title><rect x="722.6" y="755.0" width="13.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="725.6" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService$$Lambda$224/599390442.run (835 samples, 1.17%)</title><rect x="722.6" y="739.0" width="13.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="725.6" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.lambda$upsert$8 (835 samples, 1.17%)</title><rect x="722.6" y="723.0" width="13.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="725.6" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.upsert (832 samples, 1.16%)</title><rect x="722.6" y="707.0" width="13.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="725.6" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.upsert (832 samples, 1.16%)</title><rect x="722.6" y="691.0" width="13.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="725.6" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.lock (832 samples, 1.16%)</title><rect x="722.6" y="675.0" width="13.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="725.6" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (832 samples, 1.16%)</title><rect x="722.6" y="659.0" width="13.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="725.6" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (832 samples, 1.16%)</title><rect x="722.6" y="643.0" width="13.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="725.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (832 samples, 1.16%)</title><rect x="722.6" y="627.0" width="13.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="725.6" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (832 samples, 1.16%)</title><rect x="722.6" y="611.0" width="13.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="725.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (832 samples, 1.16%)</title><rect x="722.6" y="595.0" width="13.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="725.6" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync (832 samples, 1.16%)</title><rect x="722.6" y="579.0" width="13.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="725.6" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.exec (847 samples, 1.18%)</title><rect x="736.4" y="771.0" width="14.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="739.4" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (847 samples, 1.18%)</title><rect x="736.4" y="755.0" width="14.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="739.4" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService$$Lambda$111/1101527014.get (847 samples, 1.18%)</title><rect x="736.4" y="739.0" width="14.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="739.4" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.lambda$handleLocally$24 (847 samples, 1.18%)</title><rect x="736.4" y="723.0" width="14.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="739.4" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService$$Lambda$110/886817591.run (847 samples, 1.18%)</title><rect x="736.4" y="707.0" width="14.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="739.4" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.lambda$upsert$10 (847 samples, 1.18%)</title><rect x="736.4" y="691.0" width="14.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="739.4" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.upsertToDao (847 samples, 1.18%)</title><rect x="736.4" y="675.0" width="14.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="739.4" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.upsert (847 samples, 1.18%)</title><rect x="736.4" y="659.0" width="14.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="739.4" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.upsert (847 samples, 1.18%)</title><rect x="736.4" y="643.0" width="14.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="739.4" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.lock (847 samples, 1.18%)</title><rect x="736.4" y="627.0" width="14.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="739.4" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (847 samples, 1.18%)</title><rect x="736.4" y="611.0" width="14.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="739.4" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (847 samples, 1.18%)</title><rect x="736.4" y="595.0" width="14.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="739.4" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (847 samples, 1.18%)</title><rect x="736.4" y="579.0" width="14.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="739.4" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (847 samples, 1.18%)</title><rect x="736.4" y="563.0" width="14.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="739.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (847 samples, 1.18%)</title><rect x="736.4" y="547.0" width="14.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="739.4" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync (847 samples, 1.18%)</title><rect x="736.4" y="531.0" width="14.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="739.4" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (256 samples, 0.36%)</title><rect x="750.4" y="771.0" width="4.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="753.4" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (244 samples, 0.34%)</title><rect x="750.4" y="755.0" width="4.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="753.4" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService$$Lambda$112/1643463642.apply (244 samples, 0.34%)</title><rect x="750.4" y="739.0" width="4.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="753.4" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.lambda$upsert$11 (244 samples, 0.34%)</title><rect x="750.4" y="723.0" width="4.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="753.4" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.getResponsesFromReplicas (244 samples, 0.34%)</title><rect x="750.4" y="707.0" width="4.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="753.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (99 samples, 0.14%)</title><rect x="750.4" y="691.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="753.4" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (99 samples, 0.14%)</title><rect x="750.4" y="675.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="753.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (99 samples, 0.14%)</title><rect x="750.4" y="659.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="753.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (99 samples, 0.14%)</title><rect x="750.4" y="643.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="753.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (99 samples, 0.14%)</title><rect x="750.4" y="627.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="753.4" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (99 samples, 0.14%)</title><rect x="750.4" y="611.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="753.4" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (99 samples, 0.14%)</title><rect x="750.4" y="595.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="753.4" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (99 samples, 0.14%)</title><rect x="750.4" y="579.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="753.4" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (77 samples, 0.11%)</title><rect x="750.4" y="563.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="753.4" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (77 samples, 0.11%)</title><rect x="750.4" y="547.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="753.4" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (77 samples, 0.11%)</title><rect x="750.4" y="531.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="753.4" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (77 samples, 0.11%)</title><rect x="750.4" y="515.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="753.4" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (77 samples, 0.11%)</title><rect x="750.4" y="499.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="753.4" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (77 samples, 0.11%)</title><rect x="750.4" y="483.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="753.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (77 samples, 0.11%)</title><rect x="750.4" y="467.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="753.4" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (77 samples, 0.11%)</title><rect x="750.4" y="451.0" width="1.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="753.4" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (22 samples, 0.03%)</title><rect x="751.7" y="563.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="754.7" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (22 samples, 0.03%)</title><rect x="751.7" y="547.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="754.7" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (22 samples, 0.03%)</title><rect x="751.7" y="531.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="754.7" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (22 samples, 0.03%)</title><rect x="751.7" y="515.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="754.7" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (22 samples, 0.03%)</title><rect x="751.7" y="499.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="754.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (22 samples, 0.03%)</title><rect x="751.7" y="483.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="754.7" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (22 samples, 0.03%)</title><rect x="751.7" y="467.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="754.7" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.getFirstResponses (145 samples, 0.20%)</title><rect x="752.0" y="691.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="755.0" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.orTimeout (145 samples, 0.20%)</title><rect x="752.0" y="675.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="755.0" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Delayer.delay (145 samples, 0.20%)</title><rect x="752.0" y="659.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="755.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor.schedule (145 samples, 0.20%)</title><rect x="752.0" y="643.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="755.0" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor.delayedExecute (145 samples, 0.20%)</title><rect x="752.0" y="627.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="755.0" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.add (145 samples, 0.20%)</title><rect x="752.0" y="611.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="755.0" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.add (145 samples, 0.20%)</title><rect x="752.0" y="595.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="755.0" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.offer (145 samples, 0.20%)</title><rect x="752.0" y="579.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="755.0" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (145 samples, 0.20%)</title><rect x="752.0" y="563.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="755.0" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (145 samples, 0.20%)</title><rect x="752.0" y="547.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="755.0" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (145 samples, 0.20%)</title><rect x="752.0" y="531.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="755.0" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (145 samples, 0.20%)</title><rect x="752.0" y="515.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="755.0" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (145 samples, 0.20%)</title><rect x="752.0" y="499.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="755.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (145 samples, 0.20%)</title><rect x="752.0" y="483.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="755.0" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (145 samples, 0.20%)</title><rect x="752.0" y="467.0" width="2.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="755.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (26,364 samples, 36.88%)</title><rect x="754.6" y="851.0" width="435.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="757.6" y="862.0">jdk/internal/net/http/HttpClientImpl$SelectorManager.run</text>
</g>
<g>
<title>java/util/ArrayList.forEach (138 samples, 0.19%)</title><rect x="754.6" y="835.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="757.6" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$198/1799291049.accept (138 samples, 0.19%)</title><rect x="754.6" y="819.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="757.6" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (138 samples, 0.19%)</title><rect x="754.6" y="803.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="757.6" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (138 samples, 0.19%)</title><rect x="754.6" y="787.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="757.6" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (138 samples, 0.19%)</title><rect x="754.6" y="771.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="757.6" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (138 samples, 0.19%)</title><rect x="754.6" y="755.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="757.6" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (138 samples, 0.19%)</title><rect x="754.6" y="739.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="757.6" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (138 samples, 0.19%)</title><rect x="754.6" y="723.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="757.6" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (138 samples, 0.19%)</title><rect x="754.6" y="707.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="757.6" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (138 samples, 0.19%)</title><rect x="754.6" y="691.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="757.6" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (138 samples, 0.19%)</title><rect x="754.6" y="675.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="757.6" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$157/1360780123.run (138 samples, 0.19%)</title><rect x="754.6" y="659.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="757.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (138 samples, 0.19%)</title><rect x="754.6" y="643.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="757.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (137 samples, 0.19%)</title><rect x="754.6" y="627.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="757.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (137 samples, 0.19%)</title><rect x="754.6" y="611.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="757.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (137 samples, 0.19%)</title><rect x="754.6" y="595.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="757.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (137 samples, 0.19%)</title><rect x="754.6" y="579.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="757.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (137 samples, 0.19%)</title><rect x="754.6" y="563.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="757.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (137 samples, 0.19%)</title><rect x="754.6" y="547.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="757.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (137 samples, 0.19%)</title><rect x="754.6" y="531.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="757.6" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (137 samples, 0.19%)</title><rect x="754.6" y="515.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="757.6" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (136 samples, 0.19%)</title><rect x="754.6" y="499.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="757.6" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (136 samples, 0.19%)</title><rect x="754.6" y="483.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="757.6" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (136 samples, 0.19%)</title><rect x="754.6" y="467.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="757.6" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (136 samples, 0.19%)</title><rect x="754.6" y="451.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="757.6" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (136 samples, 0.19%)</title><rect x="754.6" y="435.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="757.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (136 samples, 0.19%)</title><rect x="754.6" y="419.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="757.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (136 samples, 0.19%)</title><rect x="754.6" y="403.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="757.6" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (136 samples, 0.19%)</title><rect x="754.6" y="387.0" width="2.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="757.6" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (14,452 samples, 20.21%)</title><rect x="756.9" y="835.0" width="238.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="759.9" y="846.0">jdk.internal.net.http.HttpClient..</text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (298 samples, 0.42%)</title><rect x="995.4" y="835.0" width="4.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="998.4" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$159/717507571.run (118 samples, 0.17%)</title><rect x="995.4" y="819.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="998.4" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (118 samples, 0.17%)</title><rect x="995.4" y="803.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="998.4" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (118 samples, 0.17%)</title><rect x="995.4" y="787.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="998.4" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (118 samples, 0.17%)</title><rect x="995.4" y="771.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="998.4" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (118 samples, 0.17%)</title><rect x="995.4" y="755.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="998.4" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (118 samples, 0.17%)</title><rect x="995.4" y="739.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="998.4" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$157/1360780123.run (118 samples, 0.17%)</title><rect x="995.4" y="723.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="998.4" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (118 samples, 0.17%)</title><rect x="995.4" y="707.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="998.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (118 samples, 0.17%)</title><rect x="995.4" y="691.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="998.4" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (118 samples, 0.17%)</title><rect x="995.4" y="675.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="998.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (118 samples, 0.17%)</title><rect x="995.4" y="659.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="998.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (118 samples, 0.17%)</title><rect x="995.4" y="643.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="998.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (118 samples, 0.17%)</title><rect x="995.4" y="627.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="998.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (118 samples, 0.17%)</title><rect x="995.4" y="611.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="998.4" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (118 samples, 0.17%)</title><rect x="995.4" y="595.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="998.4" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (118 samples, 0.17%)</title><rect x="995.4" y="579.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="998.4" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (116 samples, 0.16%)</title><rect x="995.4" y="563.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="998.4" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (116 samples, 0.16%)</title><rect x="995.4" y="547.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="998.4" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (116 samples, 0.16%)</title><rect x="995.4" y="531.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="998.4" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (116 samples, 0.16%)</title><rect x="995.4" y="515.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="998.4" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (116 samples, 0.16%)</title><rect x="995.4" y="499.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="998.4" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (116 samples, 0.16%)</title><rect x="995.4" y="483.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="998.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (116 samples, 0.16%)</title><rect x="995.4" y="467.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="998.4" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (116 samples, 0.16%)</title><rect x="995.4" y="451.0" width="1.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="998.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$161/782771317.run (180 samples, 0.25%)</title><rect x="997.4" y="819.0" width="2.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1000.4" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (180 samples, 0.25%)</title><rect x="997.4" y="803.0" width="2.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1000.4" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (180 samples, 0.25%)</title><rect x="997.4" y="787.0" width="2.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1000.4" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (180 samples, 0.25%)</title><rect x="997.4" y="771.0" width="2.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1000.4" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (180 samples, 0.25%)</title><rect x="997.4" y="755.0" width="2.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1000.4" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (176 samples, 0.25%)</title><rect x="997.4" y="739.0" width="2.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1000.4" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (176 samples, 0.25%)</title><rect x="997.4" y="723.0" width="2.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1000.4" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (176 samples, 0.25%)</title><rect x="997.4" y="707.0" width="2.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1000.4" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (176 samples, 0.25%)</title><rect x="997.4" y="691.0" width="2.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1000.4" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (176 samples, 0.25%)</title><rect x="997.4" y="675.0" width="2.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1000.4" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (176 samples, 0.25%)</title><rect x="997.4" y="659.0" width="2.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1000.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (176 samples, 0.25%)</title><rect x="997.4" y="643.0" width="2.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1000.4" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (176 samples, 0.25%)</title><rect x="997.4" y="627.0" width="2.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1000.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (10,973 samples, 15.35%)</title><rect x="1000.3" y="835.0" width="181.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1003.3" y="846.0">jdk/internal/net/http/C..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (10,973 samples, 15.35%)</title><rect x="1000.3" y="819.0" width="181.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1003.3" y="830.0">jdk/internal/net/http/C..</text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool (10,973 samples, 15.35%)</title><rect x="1000.3" y="803.0" width="181.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1003.3" y="814.0">jdk.internal.net.http.C..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (481 samples, 0.67%)</title><rect x="1181.5" y="835.0" width="7.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1184.5" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (481 samples, 0.67%)</title><rect x="1181.5" y="819.0" width="7.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1184.5" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (481 samples, 0.67%)</title><rect x="1181.5" y="803.0" width="7.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1184.5" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (481 samples, 0.67%)</title><rect x="1181.5" y="787.0" width="7.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1184.5" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (481 samples, 0.67%)</title><rect x="1181.5" y="771.0" width="7.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1184.5" y="782.0"></text>
</g>
<g>
<title>java.lang.Object (481 samples, 0.67%)</title><rect x="1181.5" y="755.0" width="7.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1184.5" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (22 samples, 0.03%)</title><rect x="1189.4" y="835.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1192.4" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (22 samples, 0.03%)</title><rect x="1189.4" y="819.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1192.4" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (22 samples, 0.03%)</title><rect x="1189.4" y="803.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1192.4" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (22 samples, 0.03%)</title><rect x="1189.4" y="787.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1192.4" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (22 samples, 0.03%)</title><rect x="1189.4" y="771.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1192.4" y="782.0"></text>
</g>
<g>
<title>java.lang.Object (22 samples, 0.03%)</title><rect x="1189.4" y="755.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1192.4" y="766.0"></text>
</g>
</g>
</svg>
