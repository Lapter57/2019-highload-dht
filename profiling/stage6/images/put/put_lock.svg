<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="918" onload="init(evt)" viewBox="0 0 1200 918" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="901"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="901"> </text>
<g id="frames">
<g>
<title>all (38,842 samples, 100.00%)</title><rect x="10.0" y="867.0" width="1180.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="13.0" y="878.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (25,138 samples, 64.72%)</title><rect x="10.0" y="851.0" width="763.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="13.0" y="862.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (25,138 samples, 64.72%)</title><rect x="10.0" y="835.0" width="763.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="13.0" y="846.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (25,138 samples, 64.72%)</title><rect x="10.0" y="819.0" width="763.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.0" y="830.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (9,929 samples, 25.56%)</title><rect x="10.0" y="803.0" width="301.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="13.0" y="814.0">java/util/concurrent/CompletableFuture$As..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (9,929 samples, 25.56%)</title><rect x="10.0" y="787.0" width="301.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.0" y="798.0">java/util/concurrent/CompletableFuture.po..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (9,929 samples, 25.56%)</title><rect x="10.0" y="771.0" width="301.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.0" y="782.0">java/util/concurrent/CompletableFuture$Un..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$128/1729551726.apply (9,929 samples, 25.56%)</title><rect x="10.0" y="755.0" width="301.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.0" y="766.0">jdk/internal/net/http/MultiExchange$$Lamb..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (9,929 samples, 25.56%)</title><rect x="10.0" y="739.0" width="301.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.0" y="750.0">jdk/internal/net/http/MultiExchange.lambd..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (9,929 samples, 25.56%)</title><rect x="10.0" y="723.0" width="301.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.0" y="734.0">jdk/internal/net/http/MultiExchange.respo..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (9,879 samples, 25.43%)</title><rect x="10.0" y="707.0" width="300.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="13.0" y="718.0">jdk/internal/net/http/Exchange.responseA..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (9,879 samples, 25.43%)</title><rect x="10.0" y="691.0" width="300.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="13.0" y="702.0">jdk/internal/net/http/Exchange.responseA..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (9,879 samples, 25.43%)</title><rect x="10.0" y="675.0" width="300.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="13.0" y="686.0">jdk/internal/net/http/Exchange.responseA..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (9,205 samples, 23.70%)</title><rect x="10.0" y="659.0" width="279.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="13.0" y="670.0">java/util/concurrent/CompletableFutur..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (9,205 samples, 23.70%)</title><rect x="10.0" y="643.0" width="279.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.0" y="654.0">java/util/concurrent/CompletableFutur..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (9,205 samples, 23.70%)</title><rect x="10.0" y="627.0" width="279.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="13.0" y="638.0">java/util/concurrent/CompletableFutur..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$209/384755526.apply (9,205 samples, 23.70%)</title><rect x="10.0" y="611.0" width="279.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="13.0" y="622.0">jdk/internal/net/http/Exchange$$Lambd..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (9,205 samples, 23.70%)</title><rect x="10.0" y="595.0" width="279.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="13.0" y="606.0">jdk/internal/net/http/Exchange.lambda..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (9,205 samples, 23.70%)</title><rect x="10.0" y="579.0" width="279.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="13.0" y="590.0">jdk/internal/net/http/Exchange.checkF..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$149/2119912657.apply (9,205 samples, 23.70%)</title><rect x="10.0" y="563.0" width="279.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="13.0" y="574.0">jdk/internal/net/http/Exchange$$Lambd..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (9,205 samples, 23.70%)</title><rect x="10.0" y="547.0" width="279.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="13.0" y="558.0">jdk/internal/net/http/Exchange.lambda..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (9,205 samples, 23.70%)</title><rect x="10.0" y="531.0" width="279.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="13.0" y="542.0">jdk/internal/net/http/Http1Exchange.s..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (9,205 samples, 23.70%)</title><rect x="10.0" y="515.0" width="279.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.0" y="526.0">java/util/concurrent/CompletableFutur..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (9,205 samples, 23.70%)</title><rect x="10.0" y="499.0" width="279.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.0" y="510.0">java/util/concurrent/CompletableFutur..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$232/1335640103.apply (9,205 samples, 23.70%)</title><rect x="10.0" y="483.0" width="279.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.0" y="494.0">jdk/internal/net/http/Http1Exchange$$..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (9,205 samples, 23.70%)</title><rect x="10.0" y="467.0" width="279.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.0" y="478.0">jdk/internal/net/http/Http1Exchange.l..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (9,205 samples, 23.70%)</title><rect x="10.0" y="451.0" width="279.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.0" y="462.0">jdk/internal/net/http/Http1Exchange.c..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (9,205 samples, 23.70%)</title><rect x="10.0" y="435.0" width="279.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.0" y="446.0">jdk/internal/net/http/SocketTube.conn..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (2,050 samples, 5.28%)</title><rect x="10.0" y="419.0" width="62.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.0" y="430.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (2,050 samples, 5.28%)</title><rect x="10.0" y="403.0" width="62.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.0" y="414.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (2,050 samples, 5.28%)</title><rect x="10.0" y="387.0" width="62.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.0" y="398.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (2,050 samples, 5.28%)</title><rect x="10.0" y="371.0" width="62.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.0" y="382.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (2,050 samples, 5.28%)</title><rect x="10.0" y="355.0" width="62.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="13.0" y="366.0">jdk/in..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (1,587 samples, 4.09%)</title><rect x="10.0" y="339.0" width="48.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="13.0" y="350.0">jdk...</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (463 samples, 1.19%)</title><rect x="58.2" y="339.0" width="14.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="61.2" y="350.0"></text>
</g>
<g>
<title>java.lang.Object (463 samples, 1.19%)</title><rect x="58.2" y="323.0" width="14.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="61.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (7,155 samples, 18.42%)</title><rect x="72.3" y="419.0" width="217.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="75.3" y="430.0">jdk/internal/net/http/SocketT..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (7,155 samples, 18.42%)</title><rect x="72.3" y="403.0" width="217.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="75.3" y="414.0">jdk/internal/net/http/SocketT..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (7,155 samples, 18.42%)</title><rect x="72.3" y="387.0" width="217.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="75.3" y="398.0">jdk/internal/net/http/SocketT..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (7,155 samples, 18.42%)</title><rect x="72.3" y="371.0" width="217.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="75.3" y="382.0">jdk/internal/net/http/HttpCli..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (7,155 samples, 18.42%)</title><rect x="72.3" y="355.0" width="217.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="75.3" y="366.0">jdk/internal/net/http/HttpCli..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (6,235 samples, 16.05%)</title><rect x="72.3" y="339.0" width="189.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="75.3" y="350.0">jdk.internal.net.http.Htt..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (920 samples, 2.37%)</title><rect x="261.7" y="339.0" width="27.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="264.7" y="350.0">s..</text>
</g>
<g>
<title>java.lang.Object (920 samples, 2.37%)</title><rect x="261.7" y="323.0" width="27.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="264.7" y="334.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (674 samples, 1.74%)</title><rect x="289.6" y="659.0" width="20.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="292.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (674 samples, 1.74%)</title><rect x="289.6" y="643.0" width="20.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="292.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (618 samples, 1.59%)</title><rect x="289.6" y="627.0" width="18.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="292.6" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (618 samples, 1.59%)</title><rect x="289.6" y="611.0" width="18.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="292.6" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (618 samples, 1.59%)</title><rect x="289.6" y="595.0" width="18.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="292.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$154/1584594711.apply (618 samples, 1.59%)</title><rect x="289.6" y="579.0" width="18.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="292.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$get$0 (618 samples, 1.59%)</title><rect x="289.6" y="563.0" width="18.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="292.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createExchangeImpl (618 samples, 1.59%)</title><rect x="289.6" y="547.0" width="18.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="292.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (618 samples, 1.59%)</title><rect x="289.6" y="531.0" width="18.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="292.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (618 samples, 1.59%)</title><rect x="289.6" y="515.0" width="18.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="292.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (618 samples, 1.59%)</title><rect x="289.6" y="499.0" width="18.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="292.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (618 samples, 1.59%)</title><rect x="289.6" y="483.0" width="18.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="292.6" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool (618 samples, 1.59%)</title><rect x="289.6" y="467.0" width="18.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="292.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getConnectionFor (56 samples, 0.14%)</title><rect x="308.4" y="627.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="311.4" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http2ClientImpl (56 samples, 0.14%)</title><rect x="308.4" y="611.0" width="1.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="311.4" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.requestFilters (50 samples, 0.13%)</title><rect x="310.1" y="707.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="313.1" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.request (50 samples, 0.13%)</title><rect x="310.1" y="691.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="313.1" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (44 samples, 0.11%)</title><rect x="310.3" y="675.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="313.3" y="686.0"></text>
</g>
<g>
<title>java.lang.Class (44 samples, 0.11%)</title><rect x="310.3" y="659.0" width="1.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="313.3" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (2,827 samples, 7.28%)</title><rect x="311.6" y="803.0" width="85.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="314.6" y="814.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (2,825 samples, 7.27%)</title><rect x="311.6" y="787.0" width="85.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="314.6" y="798.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (421 samples, 1.08%)</title><rect x="311.6" y="771.0" width="12.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="314.6" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (421 samples, 1.08%)</title><rect x="311.6" y="755.0" width="12.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="314.6" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (421 samples, 1.08%)</title><rect x="311.6" y="739.0" width="12.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="314.6" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (421 samples, 1.08%)</title><rect x="311.6" y="723.0" width="12.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="314.6" y="734.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (421 samples, 1.08%)</title><rect x="311.6" y="707.0" width="12.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="314.6" y="718.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (421 samples, 1.08%)</title><rect x="311.6" y="691.0" width="12.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="314.6" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (2,404 samples, 6.19%)</title><rect x="324.4" y="771.0" width="73.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="327.4" y="782.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (2,404 samples, 6.19%)</title><rect x="324.4" y="755.0" width="73.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="327.4" y="766.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (2,404 samples, 6.19%)</title><rect x="324.4" y="739.0" width="73.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="327.4" y="750.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2,404 samples, 6.19%)</title><rect x="324.4" y="723.0" width="73.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="327.4" y="734.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2,404 samples, 6.19%)</title><rect x="324.4" y="707.0" width="73.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="327.4" y="718.0">java/uti..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2,404 samples, 6.19%)</title><rect x="324.4" y="691.0" width="73.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="327.4" y="702.0">jdk/inte..</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (2,404 samples, 6.19%)</title><rect x="324.4" y="675.0" width="73.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="327.4" y="686.0">java.uti..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$247/1271722553.run (13 samples, 0.03%)</title><rect x="397.5" y="803.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="400.5" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (13 samples, 0.03%)</title><rect x="397.5" y="787.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="400.5" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (13 samples, 0.03%)</title><rect x="397.5" y="771.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="400.5" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (13 samples, 0.03%)</title><rect x="397.5" y="755.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="400.5" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (13 samples, 0.03%)</title><rect x="397.5" y="739.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="400.5" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (13 samples, 0.03%)</title><rect x="397.5" y="723.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="400.5" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (13 samples, 0.03%)</title><rect x="397.5" y="707.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="400.5" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (13 samples, 0.03%)</title><rect x="397.5" y="691.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="400.5" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (13 samples, 0.03%)</title><rect x="397.5" y="675.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="400.5" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (13 samples, 0.03%)</title><rect x="397.5" y="659.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="400.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (13 samples, 0.03%)</title><rect x="397.5" y="643.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="400.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (13 samples, 0.03%)</title><rect x="397.5" y="627.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="400.5" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (13 samples, 0.03%)</title><rect x="397.5" y="611.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="400.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (13 samples, 0.03%)</title><rect x="397.5" y="595.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="400.5" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (13 samples, 0.03%)</title><rect x="397.5" y="579.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="400.5" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (13 samples, 0.03%)</title><rect x="397.5" y="563.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="400.5" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (13 samples, 0.03%)</title><rect x="397.5" y="547.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="400.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$132/1112562714.apply (13 samples, 0.03%)</title><rect x="397.5" y="531.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="400.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (13 samples, 0.03%)</title><rect x="397.5" y="515.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="400.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (13 samples, 0.03%)</title><rect x="397.5" y="499.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="400.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (13 samples, 0.03%)</title><rect x="397.5" y="483.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="400.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (13 samples, 0.03%)</title><rect x="397.5" y="467.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="400.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (13 samples, 0.03%)</title><rect x="397.5" y="451.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="400.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$288/1452226218.run (13 samples, 0.03%)</title><rect x="397.5" y="435.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="400.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (13 samples, 0.03%)</title><rect x="397.5" y="419.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="400.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (13 samples, 0.03%)</title><rect x="397.5" y="403.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="400.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (13 samples, 0.03%)</title><rect x="397.5" y="387.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="400.5" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (13 samples, 0.03%)</title><rect x="397.5" y="371.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="400.5" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (13 samples, 0.03%)</title><rect x="397.5" y="355.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="400.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (13 samples, 0.03%)</title><rect x="397.5" y="339.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="400.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (13 samples, 0.03%)</title><rect x="397.5" y="323.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="400.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$199/1509846524.run (13 samples, 0.03%)</title><rect x="397.5" y="307.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="400.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (13 samples, 0.03%)</title><rect x="397.5" y="291.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="400.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (13 samples, 0.03%)</title><rect x="397.5" y="275.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="400.5" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (13 samples, 0.03%)</title><rect x="397.5" y="259.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="400.5" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (13 samples, 0.03%)</title><rect x="397.5" y="243.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="400.5" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$290/1089333161.run (13 samples, 0.03%)</title><rect x="397.5" y="227.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="400.5" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (13 samples, 0.03%)</title><rect x="397.5" y="211.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="400.5" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (13 samples, 0.03%)</title><rect x="397.5" y="195.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="400.5" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (13 samples, 0.03%)</title><rect x="397.5" y="179.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="400.5" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (13 samples, 0.03%)</title><rect x="397.5" y="163.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="400.5" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (11 samples, 0.03%)</title><rect x="397.6" y="147.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="400.6" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (11 samples, 0.03%)</title><rect x="397.6" y="131.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="400.6" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (10 samples, 0.03%)</title><rect x="397.6" y="115.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="400.6" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (10 samples, 0.03%)</title><rect x="397.6" y="99.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="400.6" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (10 samples, 0.03%)</title><rect x="397.6" y="83.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="400.6" y="94.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (10 samples, 0.03%)</title><rect x="397.6" y="67.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="400.6" y="78.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (10 samples, 0.03%)</title><rect x="397.6" y="51.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="400.6" y="62.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (10 samples, 0.03%)</title><rect x="397.6" y="35.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="400.6" y="46.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (11,347 samples, 29.21%)</title><rect x="397.9" y="803.0" width="344.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="400.9" y="814.0">jdk/internal/net/http/common/SequentialSchedule..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (11,347 samples, 29.21%)</title><rect x="397.9" y="787.0" width="344.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="400.9" y="798.0">jdk/internal/net/http/common/SequentialSchedule..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (5,002 samples, 12.88%)</title><rect x="397.9" y="771.0" width="152.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="400.9" y="782.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$199/1509846524.run (5,002 samples, 12.88%)</title><rect x="397.9" y="755.0" width="152.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="400.9" y="766.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (5,002 samples, 12.88%)</title><rect x="397.9" y="739.0" width="152.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="400.9" y="750.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (4,932 samples, 12.70%)</title><rect x="397.9" y="723.0" width="149.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="400.9" y="734.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (4,932 samples, 12.70%)</title><rect x="397.9" y="707.0" width="149.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="400.9" y="718.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (4,932 samples, 12.70%)</title><rect x="397.9" y="691.0" width="149.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="400.9" y="702.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (4,932 samples, 12.70%)</title><rect x="397.9" y="675.0" width="149.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="400.9" y="686.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (4,932 samples, 12.70%)</title><rect x="397.9" y="659.0" width="149.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="400.9" y="670.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (4,932 samples, 12.70%)</title><rect x="397.9" y="643.0" width="149.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="400.9" y="654.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (4,932 samples, 12.70%)</title><rect x="397.9" y="627.0" width="149.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="400.9" y="638.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (4,932 samples, 12.70%)</title><rect x="397.9" y="611.0" width="149.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="400.9" y="622.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (4,932 samples, 12.70%)</title><rect x="397.9" y="595.0" width="149.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="400.9" y="606.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (4,341 samples, 11.18%)</title><rect x="397.9" y="579.0" width="131.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="400.9" y="590.0">jdk.internal.net..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (591 samples, 1.52%)</title><rect x="529.8" y="579.0" width="17.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="532.8" y="590.0"></text>
</g>
<g>
<title>java.lang.Object (591 samples, 1.52%)</title><rect x="529.8" y="563.0" width="17.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="532.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (70 samples, 0.18%)</title><rect x="547.7" y="723.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="550.7" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (70 samples, 0.18%)</title><rect x="547.7" y="707.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="550.7" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (70 samples, 0.18%)</title><rect x="547.7" y="691.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="550.7" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (70 samples, 0.18%)</title><rect x="547.7" y="675.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="550.7" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (70 samples, 0.18%)</title><rect x="547.7" y="659.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="550.7" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (70 samples, 0.18%)</title><rect x="547.7" y="643.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="550.7" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (70 samples, 0.18%)</title><rect x="547.7" y="627.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="550.7" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (70 samples, 0.18%)</title><rect x="547.7" y="611.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="550.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (70 samples, 0.18%)</title><rect x="547.7" y="595.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="550.7" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (70 samples, 0.18%)</title><rect x="547.7" y="579.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="550.7" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (70 samples, 0.18%)</title><rect x="547.7" y="563.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="550.7" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (70 samples, 0.18%)</title><rect x="547.7" y="547.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="550.7" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (70 samples, 0.18%)</title><rect x="547.7" y="531.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="550.7" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (70 samples, 0.18%)</title><rect x="547.7" y="515.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="550.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$236/388216554.apply (70 samples, 0.18%)</title><rect x="547.7" y="499.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="550.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (70 samples, 0.18%)</title><rect x="547.7" y="483.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="550.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (70 samples, 0.18%)</title><rect x="547.7" y="467.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="550.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.response (70 samples, 0.18%)</title><rect x="547.7" y="451.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="550.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (70 samples, 0.18%)</title><rect x="547.7" y="435.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="550.7" y="446.0"></text>
</g>
<g>
<title>java.lang.Class (70 samples, 0.18%)</title><rect x="547.7" y="419.0" width="2.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="550.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (6,345 samples, 16.34%)</title><rect x="549.9" y="771.0" width="192.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="552.9" y="782.0">jdk/internal/net/http/com..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (6,345 samples, 16.34%)</title><rect x="549.9" y="755.0" width="192.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="552.9" y="766.0">jdk/internal/net/http/com..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (6,345 samples, 16.34%)</title><rect x="549.9" y="739.0" width="192.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="552.9" y="750.0">jdk/internal/net/http/com..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$199/1509846524.run (6,345 samples, 16.34%)</title><rect x="549.9" y="723.0" width="192.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="552.9" y="734.0">jdk/internal/net/http/Htt..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (6,345 samples, 16.34%)</title><rect x="549.9" y="707.0" width="192.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="552.9" y="718.0">jdk/internal/net/http/Htt..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (6,344 samples, 16.33%)</title><rect x="549.9" y="691.0" width="192.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="552.9" y="702.0">jdk/internal/net/http/Htt..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (6,344 samples, 16.33%)</title><rect x="549.9" y="675.0" width="192.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="552.9" y="686.0">jdk/internal/net/http/Htt..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (6,344 samples, 16.33%)</title><rect x="549.9" y="659.0" width="192.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="552.9" y="670.0">jdk/internal/net/http/Res..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$290/1089333161.run (6,344 samples, 16.33%)</title><rect x="549.9" y="643.0" width="192.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="552.9" y="654.0">jdk/internal/net/http/Htt..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (6,344 samples, 16.33%)</title><rect x="549.9" y="627.0" width="192.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="552.9" y="638.0">jdk/internal/net/http/Htt..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (6,344 samples, 16.33%)</title><rect x="549.9" y="611.0" width="192.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="552.9" y="622.0">jdk/internal/net/http/Htt..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (6,344 samples, 16.33%)</title><rect x="549.9" y="595.0" width="192.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="552.9" y="606.0">jdk/internal/net/http/Con..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (6,344 samples, 16.33%)</title><rect x="549.9" y="579.0" width="192.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="552.9" y="590.0">jdk/internal/net/http/Con..</text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool (1,291 samples, 3.32%)</title><rect x="549.9" y="563.0" width="39.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="552.9" y="574.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (5,053 samples, 13.01%)</title><rect x="589.1" y="563.0" width="153.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="592.1" y="574.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (5,053 samples, 13.01%)</title><rect x="589.1" y="547.0" width="153.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="592.1" y="558.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (1,078 samples, 2.78%)</title><rect x="589.1" y="531.0" width="32.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="592.1" y="542.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (1,078 samples, 2.78%)</title><rect x="589.1" y="515.0" width="32.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="592.1" y="526.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (1,078 samples, 2.78%)</title><rect x="589.1" y="499.0" width="32.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="592.1" y="510.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (1,078 samples, 2.78%)</title><rect x="589.1" y="483.0" width="32.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="592.1" y="494.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (1,078 samples, 2.78%)</title><rect x="589.1" y="467.0" width="32.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="592.1" y="478.0">jd..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (724 samples, 1.86%)</title><rect x="589.1" y="451.0" width="22.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="592.1" y="462.0">j..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (354 samples, 0.91%)</title><rect x="611.1" y="451.0" width="10.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="614.1" y="462.0"></text>
</g>
<g>
<title>java.lang.Object (354 samples, 0.91%)</title><rect x="611.1" y="435.0" width="10.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="614.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (3,975 samples, 10.23%)</title><rect x="621.8" y="531.0" width="120.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="624.8" y="542.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (3,975 samples, 10.23%)</title><rect x="621.8" y="515.0" width="120.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="624.8" y="526.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (3,975 samples, 10.23%)</title><rect x="621.8" y="499.0" width="120.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="624.8" y="510.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (3,975 samples, 10.23%)</title><rect x="621.8" y="483.0" width="120.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="624.8" y="494.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (3,975 samples, 10.23%)</title><rect x="621.8" y="467.0" width="120.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="624.8" y="478.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (3,443 samples, 8.86%)</title><rect x="621.8" y="451.0" width="104.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="624.8" y="462.0">jdk.internal..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (532 samples, 1.37%)</title><rect x="726.4" y="451.0" width="16.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="729.4" y="462.0"></text>
</g>
<g>
<title>java.lang.Object (532 samples, 1.37%)</title><rect x="726.4" y="435.0" width="16.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="729.4" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$107/2098846329.run (1,022 samples, 2.63%)</title><rect x="742.6" y="803.0" width="31.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="745.6" y="814.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$106/544362272.run (1,022 samples, 2.63%)</title><rect x="742.6" y="787.0" width="31.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="745.6" y="798.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$entity$1 (1,022 samples, 2.63%)</title><rect x="742.6" y="771.0" width="31.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="745.6" y="782.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.upsert (1,022 samples, 2.63%)</title><rect x="742.6" y="755.0" width="31.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="745.6" y="766.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.upsert (791 samples, 2.04%)</title><rect x="742.6" y="739.0" width="24.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="745.6" y="750.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.upsert (791 samples, 2.04%)</title><rect x="742.6" y="723.0" width="24.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="745.6" y="734.0">r..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.lock (791 samples, 2.04%)</title><rect x="742.6" y="707.0" width="24.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="745.6" y="718.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (791 samples, 2.04%)</title><rect x="742.6" y="691.0" width="24.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="745.6" y="702.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (791 samples, 2.04%)</title><rect x="742.6" y="675.0" width="24.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="745.6" y="686.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (791 samples, 2.04%)</title><rect x="742.6" y="659.0" width="24.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="745.6" y="670.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (791 samples, 2.04%)</title><rect x="742.6" y="643.0" width="24.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="745.6" y="654.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (791 samples, 2.04%)</title><rect x="742.6" y="627.0" width="24.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="745.6" y="638.0">j..</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync (791 samples, 2.04%)</title><rect x="742.6" y="611.0" width="24.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="745.6" y="622.0">j..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.getResponsesFromReplicas (143 samples, 0.37%)</title><rect x="766.7" y="739.0" width="4.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="769.7" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (72 samples, 0.19%)</title><rect x="766.7" y="723.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="769.7" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (72 samples, 0.19%)</title><rect x="766.7" y="707.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="769.7" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (72 samples, 0.19%)</title><rect x="766.7" y="691.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="769.7" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (72 samples, 0.19%)</title><rect x="766.7" y="675.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="769.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (72 samples, 0.19%)</title><rect x="766.7" y="659.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="769.7" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (72 samples, 0.19%)</title><rect x="766.7" y="643.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="769.7" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (72 samples, 0.19%)</title><rect x="766.7" y="627.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="769.7" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (72 samples, 0.19%)</title><rect x="766.7" y="611.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="769.7" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (19 samples, 0.05%)</title><rect x="766.7" y="595.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="769.7" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (19 samples, 0.05%)</title><rect x="766.7" y="579.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="769.7" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (19 samples, 0.05%)</title><rect x="766.7" y="563.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="769.7" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (19 samples, 0.05%)</title><rect x="766.7" y="547.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="769.7" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (19 samples, 0.05%)</title><rect x="766.7" y="531.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="769.7" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (19 samples, 0.05%)</title><rect x="766.7" y="515.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="769.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (19 samples, 0.05%)</title><rect x="766.7" y="499.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="769.7" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (19 samples, 0.05%)</title><rect x="766.7" y="483.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="769.7" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (53 samples, 0.14%)</title><rect x="767.2" y="595.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="770.2" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (53 samples, 0.14%)</title><rect x="767.2" y="579.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="770.2" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (53 samples, 0.14%)</title><rect x="767.2" y="563.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="770.2" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (53 samples, 0.14%)</title><rect x="767.2" y="547.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="770.2" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (53 samples, 0.14%)</title><rect x="767.2" y="531.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="770.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (53 samples, 0.14%)</title><rect x="767.2" y="515.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="770.2" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (53 samples, 0.14%)</title><rect x="767.2" y="499.0" width="1.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="770.2" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.getFirstResponses (71 samples, 0.18%)</title><rect x="768.8" y="723.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="771.8" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.orTimeout (71 samples, 0.18%)</title><rect x="768.8" y="707.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="771.8" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Delayer.delay (71 samples, 0.18%)</title><rect x="768.8" y="691.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="771.8" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor.schedule (71 samples, 0.18%)</title><rect x="768.8" y="675.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="771.8" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor.delayedExecute (71 samples, 0.18%)</title><rect x="768.8" y="659.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="771.8" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.add (71 samples, 0.18%)</title><rect x="768.8" y="643.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="771.8" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.add (71 samples, 0.18%)</title><rect x="768.8" y="627.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="771.8" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.offer (71 samples, 0.18%)</title><rect x="768.8" y="611.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="771.8" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (71 samples, 0.18%)</title><rect x="768.8" y="595.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="771.8" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (71 samples, 0.18%)</title><rect x="768.8" y="579.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="771.8" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (71 samples, 0.18%)</title><rect x="768.8" y="563.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="771.8" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (71 samples, 0.18%)</title><rect x="768.8" y="547.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="771.8" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (71 samples, 0.18%)</title><rect x="768.8" y="531.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="771.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (71 samples, 0.18%)</title><rect x="768.8" y="515.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="771.8" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (71 samples, 0.18%)</title><rect x="768.8" y="499.0" width="2.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="771.8" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.sendResponse (88 samples, 0.23%)</title><rect x="771.0" y="739.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="774.0" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (88 samples, 0.23%)</title><rect x="771.0" y="723.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="774.0" y="734.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.StorageSession (88 samples, 0.23%)</title><rect x="771.0" y="707.0" width="2.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="774.0" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (43 samples, 0.11%)</title><rect x="773.7" y="851.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="776.7" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (43 samples, 0.11%)</title><rect x="773.7" y="835.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="776.7" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (43 samples, 0.11%)</title><rect x="773.7" y="819.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="776.7" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (43 samples, 0.11%)</title><rect x="773.7" y="803.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="776.7" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (43 samples, 0.11%)</title><rect x="773.7" y="787.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="776.7" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (43 samples, 0.11%)</title><rect x="773.7" y="771.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="776.7" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (43 samples, 0.11%)</title><rect x="773.7" y="755.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="776.7" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (41 samples, 0.11%)</title><rect x="773.7" y="739.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="776.7" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (41 samples, 0.11%)</title><rect x="773.7" y="723.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="776.7" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (41 samples, 0.11%)</title><rect x="773.7" y="707.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="776.7" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (41 samples, 0.11%)</title><rect x="773.7" y="691.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="776.7" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Canceller.accept (41 samples, 0.11%)</title><rect x="773.7" y="675.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="776.7" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Canceller.accept (41 samples, 0.11%)</title><rect x="773.7" y="659.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="776.7" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$ScheduledFutureTask.cancel (41 samples, 0.11%)</title><rect x="773.7" y="643.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="776.7" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.remove (41 samples, 0.11%)</title><rect x="773.7" y="627.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="776.7" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.remove (41 samples, 0.11%)</title><rect x="773.7" y="611.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="776.7" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (41 samples, 0.11%)</title><rect x="773.7" y="595.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="776.7" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (41 samples, 0.11%)</title><rect x="773.7" y="579.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="776.7" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (41 samples, 0.11%)</title><rect x="773.7" y="563.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="776.7" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (41 samples, 0.11%)</title><rect x="773.7" y="547.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="776.7" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (41 samples, 0.11%)</title><rect x="773.7" y="531.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="776.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (41 samples, 0.11%)</title><rect x="773.7" y="515.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="776.7" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (41 samples, 0.11%)</title><rect x="773.7" y="499.0" width="1.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="776.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (13,586 samples, 34.98%)</title><rect x="775.0" y="851.0" width="412.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="778.0" y="862.0">jdk/internal/net/http/HttpClientImpl$SelectorManager.run</text>
</g>
<g>
<title>java/util/ArrayList.forEach (68 samples, 0.18%)</title><rect x="775.0" y="835.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="778.0" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$241/404115466.accept (68 samples, 0.18%)</title><rect x="775.0" y="819.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="778.0" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (68 samples, 0.18%)</title><rect x="775.0" y="803.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="778.0" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (68 samples, 0.18%)</title><rect x="775.0" y="787.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="778.0" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (68 samples, 0.18%)</title><rect x="775.0" y="771.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="778.0" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (68 samples, 0.18%)</title><rect x="775.0" y="755.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="778.0" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (68 samples, 0.18%)</title><rect x="775.0" y="739.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="778.0" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (68 samples, 0.18%)</title><rect x="775.0" y="723.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="778.0" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (68 samples, 0.18%)</title><rect x="775.0" y="707.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="778.0" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (68 samples, 0.18%)</title><rect x="775.0" y="691.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="778.0" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (68 samples, 0.18%)</title><rect x="775.0" y="675.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="778.0" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$181/1894615385.run (68 samples, 0.18%)</title><rect x="775.0" y="659.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="778.0" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (68 samples, 0.18%)</title><rect x="775.0" y="643.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="778.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (67 samples, 0.17%)</title><rect x="775.0" y="627.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="778.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (67 samples, 0.17%)</title><rect x="775.0" y="611.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="778.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (67 samples, 0.17%)</title><rect x="775.0" y="595.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="778.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (67 samples, 0.17%)</title><rect x="775.0" y="579.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="778.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (67 samples, 0.17%)</title><rect x="775.0" y="563.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="778.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (67 samples, 0.17%)</title><rect x="775.0" y="547.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="778.0" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (67 samples, 0.17%)</title><rect x="775.0" y="531.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="778.0" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (67 samples, 0.17%)</title><rect x="775.0" y="515.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="778.0" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (67 samples, 0.17%)</title><rect x="775.0" y="499.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="778.0" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (67 samples, 0.17%)</title><rect x="775.0" y="483.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="778.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (67 samples, 0.17%)</title><rect x="775.0" y="467.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="778.0" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (67 samples, 0.17%)</title><rect x="775.0" y="451.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="778.0" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (67 samples, 0.17%)</title><rect x="775.0" y="435.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="778.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (67 samples, 0.17%)</title><rect x="775.0" y="419.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="778.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (67 samples, 0.17%)</title><rect x="775.0" y="403.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="778.0" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (67 samples, 0.17%)</title><rect x="775.0" y="387.0" width="2.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="778.0" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (12,527 samples, 32.25%)</title><rect x="777.1" y="835.0" width="380.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="780.1" y="846.0">jdk.internal.net.http.HttpClientImpl$SelectorManager</text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (225 samples, 0.58%)</title><rect x="1157.6" y="835.0" width="6.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1160.6" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$188/903113097.run (79 samples, 0.20%)</title><rect x="1157.6" y="819.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1160.6" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (79 samples, 0.20%)</title><rect x="1157.6" y="803.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1160.6" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (79 samples, 0.20%)</title><rect x="1157.6" y="787.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1160.6" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (79 samples, 0.20%)</title><rect x="1157.6" y="771.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1160.6" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (79 samples, 0.20%)</title><rect x="1157.6" y="755.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1160.6" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (79 samples, 0.20%)</title><rect x="1157.6" y="739.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1160.6" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$181/1894615385.run (79 samples, 0.20%)</title><rect x="1157.6" y="723.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1160.6" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (79 samples, 0.20%)</title><rect x="1157.6" y="707.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1160.6" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (79 samples, 0.20%)</title><rect x="1157.6" y="691.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1160.6" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (79 samples, 0.20%)</title><rect x="1157.6" y="675.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1160.6" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (79 samples, 0.20%)</title><rect x="1157.6" y="659.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1160.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (79 samples, 0.20%)</title><rect x="1157.6" y="643.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1160.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (79 samples, 0.20%)</title><rect x="1157.6" y="627.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1160.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (79 samples, 0.20%)</title><rect x="1157.6" y="611.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1160.6" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (79 samples, 0.20%)</title><rect x="1157.6" y="595.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1160.6" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (79 samples, 0.20%)</title><rect x="1157.6" y="579.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1160.6" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (62 samples, 0.16%)</title><rect x="1157.6" y="563.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1160.6" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (62 samples, 0.16%)</title><rect x="1157.6" y="547.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1160.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (62 samples, 0.16%)</title><rect x="1157.6" y="531.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1160.6" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (62 samples, 0.16%)</title><rect x="1157.6" y="515.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1160.6" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (62 samples, 0.16%)</title><rect x="1157.6" y="499.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1160.6" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (62 samples, 0.16%)</title><rect x="1157.6" y="483.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1160.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (62 samples, 0.16%)</title><rect x="1157.6" y="467.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1160.6" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (62 samples, 0.16%)</title><rect x="1157.6" y="451.0" width="1.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1160.6" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (17 samples, 0.04%)</title><rect x="1159.5" y="563.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1162.5" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (17 samples, 0.04%)</title><rect x="1159.5" y="547.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1162.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (17 samples, 0.04%)</title><rect x="1159.5" y="531.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1162.5" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (17 samples, 0.04%)</title><rect x="1159.5" y="515.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1162.5" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (17 samples, 0.04%)</title><rect x="1159.5" y="499.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1162.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (17 samples, 0.04%)</title><rect x="1159.5" y="483.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1162.5" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (17 samples, 0.04%)</title><rect x="1159.5" y="467.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1162.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$192/1926392655.run (146 samples, 0.38%)</title><rect x="1160.0" y="819.0" width="4.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1163.0" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (146 samples, 0.38%)</title><rect x="1160.0" y="803.0" width="4.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1163.0" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (146 samples, 0.38%)</title><rect x="1160.0" y="787.0" width="4.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1163.0" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (146 samples, 0.38%)</title><rect x="1160.0" y="771.0" width="4.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1163.0" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (146 samples, 0.38%)</title><rect x="1160.0" y="755.0" width="4.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1163.0" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (130 samples, 0.33%)</title><rect x="1160.0" y="739.0" width="4.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1163.0" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (130 samples, 0.33%)</title><rect x="1160.0" y="723.0" width="4.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1163.0" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (130 samples, 0.33%)</title><rect x="1160.0" y="707.0" width="4.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1163.0" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (130 samples, 0.33%)</title><rect x="1160.0" y="691.0" width="4.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1163.0" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (130 samples, 0.33%)</title><rect x="1160.0" y="675.0" width="4.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1163.0" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (130 samples, 0.33%)</title><rect x="1160.0" y="659.0" width="4.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1163.0" y="670.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (130 samples, 0.33%)</title><rect x="1160.0" y="643.0" width="4.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1163.0" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (130 samples, 0.33%)</title><rect x="1160.0" y="627.0" width="4.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1163.0" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (16 samples, 0.04%)</title><rect x="1164.0" y="739.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1167.0" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (16 samples, 0.04%)</title><rect x="1164.0" y="723.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1167.0" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (16 samples, 0.04%)</title><rect x="1164.0" y="707.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1167.0" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (16 samples, 0.04%)</title><rect x="1164.0" y="691.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1167.0" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (16 samples, 0.04%)</title><rect x="1164.0" y="675.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1167.0" y="686.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (16 samples, 0.04%)</title><rect x="1164.0" y="659.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1167.0" y="670.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (16 samples, 0.04%)</title><rect x="1164.0" y="643.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1167.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (439 samples, 1.13%)</title><rect x="1164.5" y="835.0" width="13.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1167.5" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (439 samples, 1.13%)</title><rect x="1164.5" y="819.0" width="13.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1167.5" y="830.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool (439 samples, 1.13%)</title><rect x="1164.5" y="803.0" width="13.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1167.5" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (319 samples, 0.82%)</title><rect x="1177.8" y="835.0" width="9.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1180.8" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (319 samples, 0.82%)</title><rect x="1177.8" y="819.0" width="9.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1180.8" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (319 samples, 0.82%)</title><rect x="1177.8" y="803.0" width="9.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1180.8" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (319 samples, 0.82%)</title><rect x="1177.8" y="787.0" width="9.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1180.8" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (319 samples, 0.82%)</title><rect x="1177.8" y="771.0" width="9.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1180.8" y="782.0"></text>
</g>
<g>
<title>java.lang.Object (319 samples, 0.82%)</title><rect x="1177.8" y="755.0" width="9.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1180.8" y="766.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (75 samples, 0.19%)</title><rect x="1187.7" y="851.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1190.7" y="862.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (75 samples, 0.19%)</title><rect x="1187.7" y="835.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1190.7" y="846.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (75 samples, 0.19%)</title><rect x="1187.7" y="819.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1190.7" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (75 samples, 0.19%)</title><rect x="1187.7" y="803.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1190.7" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (75 samples, 0.19%)</title><rect x="1187.7" y="787.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1190.7" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (75 samples, 0.19%)</title><rect x="1187.7" y="771.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1190.7" y="782.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (75 samples, 0.19%)</title><rect x="1187.7" y="755.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1190.7" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.entity (75 samples, 0.19%)</title><rect x="1187.7" y="739.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1190.7" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.executeAsync (75 samples, 0.19%)</title><rect x="1187.7" y="723.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1190.7" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (75 samples, 0.19%)</title><rect x="1187.7" y="707.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1190.7" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (75 samples, 0.19%)</title><rect x="1187.7" y="691.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1190.7" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (75 samples, 0.19%)</title><rect x="1187.7" y="675.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1190.7" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (75 samples, 0.19%)</title><rect x="1187.7" y="659.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1190.7" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (75 samples, 0.19%)</title><rect x="1187.7" y="643.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1190.7" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (75 samples, 0.19%)</title><rect x="1187.7" y="627.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1190.7" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (75 samples, 0.19%)</title><rect x="1187.7" y="611.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1190.7" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (75 samples, 0.19%)</title><rect x="1187.7" y="595.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1190.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (75 samples, 0.19%)</title><rect x="1187.7" y="579.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1190.7" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (75 samples, 0.19%)</title><rect x="1187.7" y="563.0" width="2.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1190.7" y="574.0"></text>
</g>
</g>
</svg>
