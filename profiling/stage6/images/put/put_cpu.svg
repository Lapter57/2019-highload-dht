<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1526" onload="init(evt)" viewBox="0 0 1200 1526" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1509"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1509"> </text>
<g id="frames">
<g>
<title>all (4,347 samples, 100.00%)</title><rect x="10.0" y="1475.0" width="1180.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="13.0" y="1486.0">all</text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.02%)</title><rect x="10.0" y="1459.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="13.0" y="1470.0"></text>
</g>
<g>
<title>InstanceKlass::klass_holder() const (1 samples, 0.02%)</title><rect x="10.3" y="1459.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="13.3" y="1470.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (1 samples, 0.02%)</title><rect x="10.5" y="1459.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="13.5" y="1470.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.02%)</title><rect x="10.5" y="1443.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="13.5" y="1454.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (8 samples, 0.18%)</title><rect x="10.8" y="1459.0" width="2.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="13.8" y="1470.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.02%)</title><rect x="10.8" y="1443.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="13.8" y="1454.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (5 samples, 0.12%)</title><rect x="11.1" y="1443.0" width="1.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="14.1" y="1454.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (4 samples, 0.09%)</title><rect x="11.4" y="1427.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="14.4" y="1438.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (4 samples, 0.09%)</title><rect x="11.4" y="1411.0" width="1.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="14.4" y="1422.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_in_new_tlab(Klass*, HeapWord*, unsigned long, unsigned long, Thread*) (1 samples, 0.02%)</title><rect x="11.4" y="1395.0" width="0.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="14.4" y="1406.0"></text>
</g>
<g>
<title>LeakProfiler::is_running() (1 samples, 0.02%)</title><rect x="11.4" y="1379.0" width="0.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="14.4" y="1390.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (2 samples, 0.05%)</title><rect x="11.6" y="1395.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="14.6" y="1406.0"></text>
</g>
<g>
<title>G1Allocator::unsafe_max_tlab_alloc() (1 samples, 0.02%)</title><rect x="11.6" y="1379.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="14.6" y="1390.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.02%)</title><rect x="11.9" y="1379.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="14.9" y="1390.0"></text>
</g>
<g>
<title>ThreadHeapSampler::enabled() (1 samples, 0.02%)</title><rect x="12.2" y="1395.0" width="0.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="15.2" y="1406.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.05%)</title><rect x="12.4" y="1443.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="15.4" y="1454.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.05%)</title><rect x="12.4" y="1427.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="15.4" y="1438.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.05%)</title><rect x="12.4" y="1411.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="15.4" y="1422.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (2 samples, 0.05%)</title><rect x="12.4" y="1395.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="15.4" y="1406.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.02%)</title><rect x="12.4" y="1379.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="15.4" y="1390.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (1 samples, 0.02%)</title><rect x="12.4" y="1363.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="15.4" y="1374.0"></text>
</g>
<g>
<title>MutatorAllocRegion::retire(bool) (1 samples, 0.02%)</title><rect x="12.4" y="1347.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="15.4" y="1358.0"></text>
</g>
<g>
<title>G1SurvivorRegions::length() const (1 samples, 0.02%)</title><rect x="12.4" y="1331.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="15.4" y="1342.0"></text>
</g>
<g>
<title>G1CollectedHeap::max_tlab_size() const (1 samples, 0.02%)</title><rect x="12.7" y="1379.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="15.7" y="1390.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (3 samples, 0.07%)</title><rect x="13.0" y="1459.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="16.0" y="1470.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (3 samples, 0.07%)</title><rect x="13.0" y="1443.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="16.0" y="1454.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.05%)</title><rect x="13.3" y="1427.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="16.3" y="1438.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.05%)</title><rect x="13.3" y="1411.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="16.3" y="1422.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.02%)</title><rect x="13.3" y="1395.0" width="0.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="16.3" y="1406.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.02%)</title><rect x="13.5" y="1395.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="16.5" y="1406.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (1 samples, 0.02%)</title><rect x="13.5" y="1379.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="16.5" y="1390.0"></text>
</g>
<g>
<title>CollectedHeap::fill_with_dummy_object(HeapWord*, HeapWord*, bool) (1 samples, 0.02%)</title><rect x="13.5" y="1363.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="16.5" y="1374.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.02%)</title><rect x="13.5" y="1347.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="16.5" y="1358.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (9 samples, 0.21%)</title><rect x="13.8" y="1459.0" width="2.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="16.8" y="1470.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (9 samples, 0.21%)</title><rect x="13.8" y="1443.0" width="2.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="16.8" y="1454.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (9 samples, 0.21%)</title><rect x="13.8" y="1427.0" width="2.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="16.8" y="1438.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (9 samples, 0.21%)</title><rect x="13.8" y="1411.0" width="2.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="16.8" y="1422.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_in_new_tlab(Klass*, HeapWord*, unsigned long, unsigned long, Thread*) (1 samples, 0.02%)</title><rect x="13.8" y="1395.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="16.8" y="1406.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.02%)</title><rect x="14.1" y="1395.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="17.1" y="1406.0"></text>
</g>
<g>
<title>G1CollectedHeap::unsafe_max_tlab_alloc(Thread*) const (1 samples, 0.02%)</title><rect x="14.3" y="1395.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="17.3" y="1406.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (4 samples, 0.09%)</title><rect x="14.6" y="1395.0" width="1.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="17.6" y="1406.0"></text>
</g>
<g>
<title>G1Allocator::unsafe_max_tlab_alloc() (2 samples, 0.05%)</title><rect x="14.6" y="1379.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="17.6" y="1390.0"></text>
</g>
<g>
<title>G1CollectedHeap::max_tlab_size() const (1 samples, 0.02%)</title><rect x="15.2" y="1379.0" width="0.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="18.2" y="1390.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (1 samples, 0.02%)</title><rect x="15.4" y="1379.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="18.4" y="1390.0"></text>
</g>
<g>
<title>CollectedHeap::fill_with_dummy_object(HeapWord*, HeapWord*, bool) (1 samples, 0.02%)</title><rect x="15.4" y="1363.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="18.4" y="1374.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.02%)</title><rect x="15.4" y="1347.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="18.4" y="1358.0"></text>
</g>
<g>
<title>__memset_avx2_unaligned_erms (2 samples, 0.05%)</title><rect x="15.7" y="1395.0" width="0.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="18.7" y="1406.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (55 samples, 1.27%)</title><rect x="16.2" y="1459.0" width="15.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="19.2" y="1470.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.05%)</title><rect x="16.5" y="1443.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="19.5" y="1454.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (52 samples, 1.20%)</title><rect x="17.1" y="1443.0" width="14.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="20.1" y="1454.0"></text>
</g>
<g>
<title>JavaThread::is_lock_owned(unsigned char*) const (1 samples, 0.02%)</title><rect x="17.1" y="1427.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="20.1" y="1438.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (36 samples, 0.83%)</title><rect x="17.3" y="1427.0" width="9.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="20.3" y="1438.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.75] (19 samples, 0.44%)</title><rect x="17.6" y="1411.0" width="5.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="20.6" y="1422.0"></text>
</g>
<g>
<title>SpinPause (16 samples, 0.37%)</title><rect x="22.8" y="1411.0" width="4.3" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="25.8" y="1422.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.97] (15 samples, 0.35%)</title><rect x="27.1" y="1427.0" width="4.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="30.1" y="1438.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (13 samples, 0.30%)</title><rect x="27.6" y="1411.0" width="3.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="30.6" y="1422.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.75] (6 samples, 0.14%)</title><rect x="27.9" y="1395.0" width="1.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="30.9" y="1406.0"></text>
</g>
<g>
<title>SpinPause (2 samples, 0.05%)</title><rect x="29.5" y="1395.0" width="0.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="32.5" y="1406.0"></text>
</g>
<g>
<title>__lll_unlock_wake (3 samples, 0.07%)</title><rect x="30.1" y="1395.0" width="0.8" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="33.1" y="1406.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="30.6" y="1379.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="33.6" y="1390.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="30.6" y="1363.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="33.6" y="1374.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.02%)</title><rect x="30.6" y="1347.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="33.6" y="1358.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.02%)</title><rect x="30.6" y="1331.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="33.6" y="1342.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.02%)</title><rect x="30.6" y="1315.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="33.6" y="1326.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) (1 samples, 0.02%)</title><rect x="30.9" y="1395.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="33.9" y="1406.0"></text>
</g>
<g>
<title>to_abstime(timespec*, long, bool) (1 samples, 0.02%)</title><rect x="30.9" y="1379.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="33.9" y="1390.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.02%)</title><rect x="31.2" y="1459.0" width="0.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="34.2" y="1470.0"></text>
</g>
<g>
<title>[not_walkable] (4 samples, 0.09%)</title><rect x="31.4" y="1459.0" width="1.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="34.4" y="1470.0"></text>
</g>
<g>
<title>[not_walkable_Java] (16 samples, 0.37%)</title><rect x="32.5" y="1459.0" width="4.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="35.5" y="1470.0"></text>
</g>
<g>
<title>CardTableBarrierSet::on_slowpath_allocation_exit(JavaThread*, oopDesc*) (1 samples, 0.02%)</title><rect x="32.5" y="1443.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="35.5" y="1454.0"></text>
</g>
<g>
<title>G1BarrierSet::invalidate(MemRegion) (1 samples, 0.02%)</title><rect x="32.8" y="1443.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="35.8" y="1454.0"></text>
</g>
<g>
<title>G1BarrierSetRuntime::write_ref_array_post_entry(HeapWord*, unsigned long) (1 samples, 0.02%)</title><rect x="33.1" y="1443.0" width="0.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="36.1" y="1454.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (4 samples, 0.09%)</title><rect x="33.3" y="1443.0" width="1.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="36.3" y="1454.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (4 samples, 0.09%)</title><rect x="33.3" y="1427.0" width="1.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="36.3" y="1438.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (3 samples, 0.07%)</title><rect x="33.3" y="1411.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="36.3" y="1422.0"></text>
</g>
<g>
<title>CodeBlob::is_zombie() const (3 samples, 0.07%)</title><rect x="33.3" y="1395.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="36.3" y="1406.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.02%)</title><rect x="34.2" y="1411.0" width="0.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="37.2" y="1422.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (1 samples, 0.02%)</title><rect x="34.2" y="1395.0" width="0.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="37.2" y="1406.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.02%)</title><rect x="34.2" y="1379.0" width="0.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="37.2" y="1390.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.02%)</title><rect x="34.2" y="1363.0" width="0.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="37.2" y="1374.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.05%)</title><rect x="34.4" y="1443.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="37.4" y="1454.0"></text>
</g>
<g>
<title>CardTableBarrierSet::on_slowpath_allocation_exit(JavaThread*, oopDesc*) (1 samples, 0.02%)</title><rect x="34.7" y="1427.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="37.7" y="1438.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.07%)</title><rect x="35.0" y="1443.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="38.0" y="1454.0"></text>
</g>
<g>
<title>SharedRuntime::on_slowpath_allocation_exit(JavaThread*) (2 samples, 0.05%)</title><rect x="35.8" y="1443.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="38.8" y="1454.0"></text>
</g>
<g>
<title>__GI___clock_gettime (2 samples, 0.05%)</title><rect x="36.3" y="1443.0" width="0.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="39.3" y="1454.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.05%)</title><rect x="36.3" y="1427.0" width="0.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="39.3" y="1438.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.37%)</title><rect x="36.9" y="1459.0" width="4.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="39.9" y="1470.0"></text>
</g>
<g>
<title>__GI___clock_gettime (1 samples, 0.02%)</title><rect x="36.9" y="1443.0" width="0.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="39.9" y="1454.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (13 samples, 0.30%)</title><rect x="37.1" y="1443.0" width="3.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="40.1" y="1454.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.23%)</title><rect x="38.0" y="1427.0" width="2.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="41.0" y="1438.0"></text>
</g>
<g>
<title>do_syscall_64 (10 samples, 0.23%)</title><rect x="38.0" y="1411.0" width="2.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="41.0" y="1422.0"></text>
</g>
<g>
<title>__x64_sys_futex (10 samples, 0.23%)</title><rect x="38.0" y="1395.0" width="2.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="41.0" y="1406.0"></text>
</g>
<g>
<title>do_futex (9 samples, 0.21%)</title><rect x="38.0" y="1379.0" width="2.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="41.0" y="1390.0"></text>
</g>
<g>
<title>futex_wait (9 samples, 0.21%)</title><rect x="38.0" y="1363.0" width="2.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="41.0" y="1374.0"></text>
</g>
<g>
<title>futex_wait_queue_me (5 samples, 0.12%)</title><rect x="38.2" y="1347.0" width="1.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="41.2" y="1358.0"></text>
</g>
<g>
<title>plist_add (1 samples, 0.02%)</title><rect x="38.5" y="1331.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="41.5" y="1342.0"></text>
</g>
<g>
<title>schedule (3 samples, 0.07%)</title><rect x="38.8" y="1331.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="41.8" y="1342.0"></text>
</g>
<g>
<title>__sched_text_start (3 samples, 0.07%)</title><rect x="38.8" y="1315.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="41.8" y="1326.0"></text>
</g>
<g>
<title>finish_task_switch (3 samples, 0.07%)</title><rect x="38.8" y="1299.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="41.8" y="1310.0"></text>
</g>
<g>
<title>hrtimer_cancel (3 samples, 0.07%)</title><rect x="39.6" y="1347.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="42.6" y="1358.0"></text>
</g>
<g>
<title>hrtimer_try_to_cancel (1 samples, 0.02%)</title><rect x="40.1" y="1331.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="43.1" y="1342.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="40.1" y="1315.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="43.1" y="1326.0"></text>
</g>
<g>
<title>get_timespec64 (1 samples, 0.02%)</title><rect x="40.4" y="1379.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="43.4" y="1390.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.02%)</title><rect x="40.7" y="1443.0" width="0.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="43.7" y="1454.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="40.7" y="1427.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="43.7" y="1438.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="40.7" y="1411.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="43.7" y="1422.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.02%)</title><rect x="40.7" y="1395.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="43.7" y="1406.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.02%)</title><rect x="40.7" y="1379.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="43.7" y="1390.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.02%)</title><rect x="40.7" y="1363.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="43.7" y="1374.0"></text>
</g>
<g>
<title>futex_wait_setup (1 samples, 0.02%)</title><rect x="40.7" y="1347.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="43.7" y="1358.0"></text>
</g>
<g>
<title>get_futex_value_locked (1 samples, 0.02%)</title><rect x="40.7" y="1331.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="43.7" y="1342.0"></text>
</g>
<g>
<title>do_futex_wait.constprop.0 (1 samples, 0.02%)</title><rect x="40.9" y="1443.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="43.9" y="1454.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="40.9" y="1427.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="43.9" y="1438.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="40.9" y="1411.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="43.9" y="1422.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.02%)</title><rect x="40.9" y="1395.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="43.9" y="1406.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.02%)</title><rect x="40.9" y="1379.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="43.9" y="1390.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.02%)</title><rect x="40.9" y="1363.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="43.9" y="1374.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.02%)</title><rect x="40.9" y="1347.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="43.9" y="1358.0"></text>
</g>
<g>
<title>[unknown_Java] (46 samples, 1.06%)</title><rect x="41.2" y="1459.0" width="12.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="44.2" y="1470.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.02%)</title><rect x="49.6" y="1443.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="52.6" y="1454.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.07%)</title><rect x="49.9" y="1443.0" width="0.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="52.9" y="1454.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.02%)</title><rect x="49.9" y="1427.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="52.9" y="1438.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.02%)</title><rect x="50.2" y="1427.0" width="0.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="53.2" y="1438.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (1 samples, 0.02%)</title><rect x="50.4" y="1427.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="53.4" y="1438.0"></text>
</g>
<g>
<title>__pthread_cond_signal (9 samples, 0.21%)</title><rect x="50.7" y="1443.0" width="2.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="53.7" y="1454.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.18%)</title><rect x="51.0" y="1427.0" width="2.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="54.0" y="1438.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.18%)</title><rect x="51.0" y="1411.0" width="2.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="54.0" y="1422.0"></text>
</g>
<g>
<title>__x64_sys_futex (7 samples, 0.16%)</title><rect x="51.3" y="1395.0" width="1.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="54.3" y="1406.0"></text>
</g>
<g>
<title>do_futex (7 samples, 0.16%)</title><rect x="51.3" y="1379.0" width="1.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="54.3" y="1390.0"></text>
</g>
<g>
<title>futex_wake (7 samples, 0.16%)</title><rect x="51.3" y="1363.0" width="1.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="54.3" y="1374.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="51.3" y="1347.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="54.3" y="1358.0"></text>
</g>
<g>
<title>wake_up_q (6 samples, 0.14%)</title><rect x="51.5" y="1347.0" width="1.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="54.5" y="1358.0"></text>
</g>
<g>
<title>try_to_wake_up (6 samples, 0.14%)</title><rect x="51.5" y="1331.0" width="1.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="54.5" y="1342.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (6 samples, 0.14%)</title><rect x="51.5" y="1315.0" width="1.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="54.5" y="1326.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (2 samples, 0.05%)</title><rect x="53.2" y="1443.0" width="0.5" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="56.2" y="1454.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (1 samples, 0.02%)</title><rect x="53.7" y="1459.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="56.7" y="1470.0"></text>
</g>
<g>
<title>java/lang/Thread.run (2,505 samples, 57.63%)</title><rect x="54.0" y="1459.0" width="680.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="57.0" y="1470.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (2,505 samples, 57.63%)</title><rect x="54.0" y="1443.0" width="680.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="57.0" y="1454.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (2,505 samples, 57.63%)</title><rect x="54.0" y="1427.0" width="680.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="57.0" y="1438.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>itable stub (2 samples, 0.05%)</title><rect x="54.0" y="1411.0" width="0.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="57.0" y="1422.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (401 samples, 9.22%)</title><rect x="54.5" y="1411.0" width="108.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="57.5" y="1422.0">java/util/con..</text>
</g>
<g>
<title>itable stub (2 samples, 0.05%)</title><rect x="55.1" y="1395.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="58.1" y="1406.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (396 samples, 9.11%)</title><rect x="55.6" y="1395.0" width="107.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="58.6" y="1406.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (396 samples, 9.11%)</title><rect x="55.6" y="1379.0" width="107.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="58.6" y="1390.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2 samples, 0.05%)</title><rect x="57.0" y="1363.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="60.0" y="1374.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (2 samples, 0.05%)</title><rect x="57.0" y="1347.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="60.0" y="1358.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (2 samples, 0.05%)</title><rect x="57.0" y="1331.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="60.0" y="1342.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.weakCompareAndSet (2 samples, 0.05%)</title><rect x="57.0" y="1315.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="60.0" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$128/1729551726.apply (389 samples, 8.95%)</title><rect x="57.5" y="1363.0" width="105.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="60.5" y="1374.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (389 samples, 8.95%)</title><rect x="57.5" y="1347.0" width="105.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="60.5" y="1358.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (389 samples, 8.95%)</title><rect x="57.5" y="1331.0" width="105.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="60.5" y="1342.0">jdk/internal/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (3 samples, 0.07%)</title><rect x="57.5" y="1315.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="60.5" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (3 samples, 0.07%)</title><rect x="57.5" y="1299.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="60.5" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.&lt;init&gt; (1 samples, 0.02%)</title><rect x="57.5" y="1283.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="60.5" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (1 samples, 0.02%)</title><rect x="57.5" y="1267.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="60.5" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (1 samples, 0.02%)</title><rect x="57.8" y="1283.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="60.8" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.tryPushStack (1 samples, 0.02%)</title><rect x="57.8" y="1267.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="60.8" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="58.0" y="1283.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="61.0" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="58.0" y="1267.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="61.0" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (380 samples, 8.74%)</title><rect x="58.3" y="1315.0" width="103.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="61.3" y="1326.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (380 samples, 8.74%)</title><rect x="58.3" y="1299.0" width="103.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="61.3" y="1310.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (380 samples, 8.74%)</title><rect x="58.3" y="1283.0" width="103.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="61.3" y="1294.0">jdk/internal..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (205 samples, 4.72%)</title><rect x="58.6" y="1267.0" width="55.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="61.6" y="1278.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (205 samples, 4.72%)</title><rect x="58.6" y="1251.0" width="55.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="61.6" y="1262.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (204 samples, 4.69%)</title><rect x="58.6" y="1235.0" width="55.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="61.6" y="1246.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (4 samples, 0.09%)</title><rect x="58.6" y="1219.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="61.6" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (4 samples, 0.09%)</title><rect x="58.6" y="1203.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="61.6" y="1214.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.02%)</title><rect x="58.9" y="1187.0" width="0.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="61.9" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$209/384755526.apply (2 samples, 0.05%)</title><rect x="59.1" y="1187.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="62.1" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$209/384755526.apply (200 samples, 4.60%)</title><rect x="59.7" y="1219.0" width="54.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="62.7" y="1230.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (200 samples, 4.60%)</title><rect x="59.7" y="1203.0" width="54.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="62.7" y="1214.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (200 samples, 4.60%)</title><rect x="59.7" y="1187.0" width="54.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="62.7" y="1198.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$149/2119912657.apply (200 samples, 4.60%)</title><rect x="59.7" y="1171.0" width="54.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="62.7" y="1182.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (200 samples, 4.60%)</title><rect x="59.7" y="1155.0" width="54.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="62.7" y="1166.0">jdk/i..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (2 samples, 0.05%)</title><rect x="59.7" y="1139.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="62.7" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (2 samples, 0.05%)</title><rect x="59.7" y="1123.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="62.7" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (2 samples, 0.05%)</title><rect x="59.7" y="1107.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="62.7" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$235/542698874.apply (2 samples, 0.05%)</title><rect x="59.7" y="1091.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="62.7" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (2 samples, 0.05%)</title><rect x="59.7" y="1075.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="62.7" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (2 samples, 0.05%)</title><rect x="59.7" y="1059.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="62.7" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$148/2053429061.apply (2 samples, 0.05%)</title><rect x="59.7" y="1043.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="62.7" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (2 samples, 0.05%)</title><rect x="59.7" y="1027.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="62.7" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (2 samples, 0.05%)</title><rect x="59.7" y="1011.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="62.7" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (2 samples, 0.05%)</title><rect x="59.7" y="995.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="62.7" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (2 samples, 0.05%)</title><rect x="59.7" y="979.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="62.7" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptNow (2 samples, 0.05%)</title><rect x="59.7" y="963.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="62.7" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$263/580364296.accept (2 samples, 0.05%)</title><rect x="59.7" y="947.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="62.7" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$8 (2 samples, 0.05%)</title><rect x="59.7" y="931.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="62.7" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.requestMoreBody (2 samples, 0.05%)</title><rect x="59.7" y="915.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="62.7" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.request (2 samples, 0.05%)</title><rect x="59.7" y="899.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="62.7" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.request (2 samples, 0.05%)</title><rect x="59.7" y="883.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="62.7" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.05%)</title><rect x="59.7" y="867.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="62.7" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.05%)</title><rect x="59.7" y="851.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="62.7" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (2 samples, 0.05%)</title><rect x="59.7" y="835.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="62.7" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (2 samples, 0.05%)</title><rect x="59.7" y="819.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="62.7" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (2 samples, 0.05%)</title><rect x="59.7" y="803.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="62.7" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (2 samples, 0.05%)</title><rect x="59.7" y="787.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="62.7" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (2 samples, 0.05%)</title><rect x="59.7" y="771.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="62.7" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (2 samples, 0.05%)</title><rect x="59.7" y="755.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="62.7" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (2 samples, 0.05%)</title><rect x="59.7" y="739.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="62.7" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.05%)</title><rect x="59.7" y="723.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="62.7" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.05%)</title><rect x="59.7" y="707.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="62.7" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (2 samples, 0.05%)</title><rect x="59.7" y="691.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="62.7" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (2 samples, 0.05%)</title><rect x="59.7" y="675.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="62.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (2 samples, 0.05%)</title><rect x="59.7" y="659.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="62.7" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (2 samples, 0.05%)</title><rect x="59.7" y="643.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="62.7" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (2 samples, 0.05%)</title><rect x="59.7" y="627.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="62.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (2 samples, 0.05%)</title><rect x="59.7" y="611.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="62.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (2 samples, 0.05%)</title><rect x="59.7" y="595.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="62.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (2 samples, 0.05%)</title><rect x="59.7" y="579.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="62.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (2 samples, 0.05%)</title><rect x="59.7" y="563.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="62.7" y="574.0"></text>
</g>
<g>
<title>java/nio/channels/SocketChannel.write (2 samples, 0.05%)</title><rect x="59.7" y="547.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="62.7" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (2 samples, 0.05%)</title><rect x="59.7" y="531.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="62.7" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (2 samples, 0.05%)</title><rect x="59.7" y="515.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="62.7" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (2 samples, 0.05%)</title><rect x="59.7" y="499.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="62.7" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.writev (2 samples, 0.05%)</title><rect x="59.7" y="483.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="62.7" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (2 samples, 0.05%)</title><rect x="59.7" y="467.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="62.7" y="478.0"></text>
</g>
<g>
<title>.annobin_writev.c (2 samples, 0.05%)</title><rect x="59.7" y="451.0" width="0.5" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="62.7" y="462.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="59.9" y="435.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="62.9" y="446.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="59.9" y="419.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="62.9" y="430.0"></text>
</g>
<g>
<title>do_writev (1 samples, 0.02%)</title><rect x="59.9" y="403.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="62.9" y="414.0"></text>
</g>
<g>
<title>vfs_writev (1 samples, 0.02%)</title><rect x="59.9" y="387.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="62.9" y="398.0"></text>
</g>
<g>
<title>do_iter_write (1 samples, 0.02%)</title><rect x="59.9" y="371.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="62.9" y="382.0"></text>
</g>
<g>
<title>do_iter_readv_writev (1 samples, 0.02%)</title><rect x="59.9" y="355.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="62.9" y="366.0"></text>
</g>
<g>
<title>sock_write_iter (1 samples, 0.02%)</title><rect x="59.9" y="339.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="62.9" y="350.0"></text>
</g>
<g>
<title>sock_sendmsg (1 samples, 0.02%)</title><rect x="59.9" y="323.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="62.9" y="334.0"></text>
</g>
<g>
<title>tcp_sendmsg (1 samples, 0.02%)</title><rect x="59.9" y="307.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="62.9" y="318.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (1 samples, 0.02%)</title><rect x="59.9" y="291.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="62.9" y="302.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (1 samples, 0.02%)</title><rect x="59.9" y="275.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="62.9" y="286.0"></text>
</g>
<g>
<title>tcp_write_xmit (1 samples, 0.02%)</title><rect x="59.9" y="259.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="62.9" y="270.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (1 samples, 0.02%)</title><rect x="59.9" y="243.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="62.9" y="254.0"></text>
</g>
<g>
<title>__ip_queue_xmit (1 samples, 0.02%)</title><rect x="59.9" y="227.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="62.9" y="238.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.02%)</title><rect x="59.9" y="211.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="62.9" y="222.0"></text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="59.9" y="195.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="62.9" y="206.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="59.9" y="179.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="62.9" y="190.0"></text>
</g>
<g>
<title>do_softirq.part.0 (1 samples, 0.02%)</title><rect x="59.9" y="163.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="62.9" y="174.0"></text>
</g>
<g>
<title>do_softirq_own_stack (1 samples, 0.02%)</title><rect x="59.9" y="147.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="62.9" y="158.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="59.9" y="131.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="62.9" y="142.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.02%)</title><rect x="59.9" y="115.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="62.9" y="126.0"></text>
</g>
<g>
<title>process_backlog (1 samples, 0.02%)</title><rect x="59.9" y="99.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="62.9" y="110.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (1 samples, 0.02%)</title><rect x="59.9" y="83.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="62.9" y="94.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.02%)</title><rect x="59.9" y="67.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="62.9" y="78.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.02%)</title><rect x="59.9" y="51.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="62.9" y="62.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (1 samples, 0.02%)</title><rect x="59.9" y="35.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="62.9" y="46.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2 samples, 0.05%)</title><rect x="60.2" y="1139.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="63.2" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2 samples, 0.05%)</title><rect x="60.2" y="1123.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="63.2" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.&lt;init&gt; (1 samples, 0.02%)</title><rect x="60.2" y="1107.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="63.2" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (1 samples, 0.02%)</title><rect x="60.2" y="1091.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="63.2" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="60.5" y="1107.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="63.5" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="60.5" y="1091.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="63.5" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (196 samples, 4.51%)</title><rect x="60.8" y="1139.0" width="53.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="63.8" y="1150.0">jdk/i..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (166 samples, 3.82%)</title><rect x="60.8" y="1123.0" width="45.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="63.8" y="1134.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (166 samples, 3.82%)</title><rect x="60.8" y="1107.0" width="45.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="63.8" y="1118.0">java..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$232/1335640103.apply (164 samples, 3.77%)</title><rect x="61.0" y="1091.0" width="44.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="64.0" y="1102.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (163 samples, 3.75%)</title><rect x="61.3" y="1075.0" width="44.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="64.3" y="1086.0">jdk/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1 samples, 0.02%)</title><rect x="61.3" y="1059.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="64.3" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.02%)</title><rect x="61.3" y="1043.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="64.3" y="1054.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.02%)</title><rect x="61.3" y="1027.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="64.3" y="1038.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.02%)</title><rect x="61.3" y="1011.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="64.3" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1 samples, 0.02%)</title><rect x="61.6" y="1059.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="64.6" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.02%)</title><rect x="61.6" y="1043.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="64.6" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="61.6" y="1027.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="64.6" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="61.6" y="1011.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="64.6" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (8 samples, 0.18%)</title><rect x="61.8" y="1059.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="64.8" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (8 samples, 0.18%)</title><rect x="61.8" y="1043.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="64.8" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (3 samples, 0.07%)</title><rect x="61.8" y="1027.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="64.8" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (3 samples, 0.07%)</title><rect x="61.8" y="1011.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="64.8" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (3 samples, 0.07%)</title><rect x="61.8" y="995.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="64.8" y="1006.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.02%)</title><rect x="61.8" y="979.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="64.8" y="990.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (2 samples, 0.05%)</title><rect x="62.1" y="979.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="65.1" y="990.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.set (2 samples, 0.05%)</title><rect x="62.1" y="963.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="65.1" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (5 samples, 0.12%)</title><rect x="62.7" y="1027.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="65.7" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (5 samples, 0.12%)</title><rect x="62.7" y="1011.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="65.7" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1 samples, 0.02%)</title><rect x="62.7" y="995.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="65.7" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1 samples, 0.02%)</title><rect x="62.7" y="979.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="65.7" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (4 samples, 0.09%)</title><rect x="62.9" y="995.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="65.9" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (4 samples, 0.09%)</title><rect x="62.9" y="979.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="65.9" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (4 samples, 0.09%)</title><rect x="62.9" y="963.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="65.9" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (4 samples, 0.09%)</title><rect x="62.9" y="947.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="65.9" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (3 samples, 0.07%)</title><rect x="62.9" y="931.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="65.9" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (3 samples, 0.07%)</title><rect x="62.9" y="915.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="65.9" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (3 samples, 0.07%)</title><rect x="62.9" y="899.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="65.9" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (3 samples, 0.07%)</title><rect x="62.9" y="883.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="65.9" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (3 samples, 0.07%)</title><rect x="62.9" y="867.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="65.9" y="878.0"></text>
</g>
<g>
<title>java/nio/channels/SocketChannel.write (3 samples, 0.07%)</title><rect x="62.9" y="851.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="65.9" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (3 samples, 0.07%)</title><rect x="62.9" y="835.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="65.9" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (3 samples, 0.07%)</title><rect x="62.9" y="819.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="65.9" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (3 samples, 0.07%)</title><rect x="62.9" y="803.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="65.9" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.writev (3 samples, 0.07%)</title><rect x="62.9" y="787.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="65.9" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (3 samples, 0.07%)</title><rect x="62.9" y="771.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="65.9" y="782.0"></text>
</g>
<g>
<title>.annobin_writev.c (3 samples, 0.07%)</title><rect x="62.9" y="755.0" width="0.8" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="65.9" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.07%)</title><rect x="62.9" y="739.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="65.9" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.07%)</title><rect x="62.9" y="723.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="65.9" y="734.0"></text>
</g>
<g>
<title>do_writev (3 samples, 0.07%)</title><rect x="62.9" y="707.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="65.9" y="718.0"></text>
</g>
<g>
<title>vfs_writev (3 samples, 0.07%)</title><rect x="62.9" y="691.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="65.9" y="702.0"></text>
</g>
<g>
<title>do_iter_write (3 samples, 0.07%)</title><rect x="62.9" y="675.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="65.9" y="686.0"></text>
</g>
<g>
<title>do_iter_readv_writev (3 samples, 0.07%)</title><rect x="62.9" y="659.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="65.9" y="670.0"></text>
</g>
<g>
<title>sock_write_iter (3 samples, 0.07%)</title><rect x="62.9" y="643.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="65.9" y="654.0"></text>
</g>
<g>
<title>sock_sendmsg (3 samples, 0.07%)</title><rect x="62.9" y="627.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="65.9" y="638.0"></text>
</g>
<g>
<title>tcp_sendmsg (3 samples, 0.07%)</title><rect x="62.9" y="611.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="65.9" y="622.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (3 samples, 0.07%)</title><rect x="62.9" y="595.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="65.9" y="606.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (3 samples, 0.07%)</title><rect x="62.9" y="579.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="65.9" y="590.0"></text>
</g>
<g>
<title>tcp_write_xmit (3 samples, 0.07%)</title><rect x="62.9" y="563.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="65.9" y="574.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (3 samples, 0.07%)</title><rect x="62.9" y="547.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="65.9" y="558.0"></text>
</g>
<g>
<title>__ip_queue_xmit (2 samples, 0.05%)</title><rect x="62.9" y="531.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="65.9" y="542.0"></text>
</g>
<g>
<title>ip_output (2 samples, 0.05%)</title><rect x="62.9" y="515.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="65.9" y="526.0"></text>
</g>
<g>
<title>ip_finish_output2 (2 samples, 0.05%)</title><rect x="62.9" y="499.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="65.9" y="510.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.05%)</title><rect x="62.9" y="483.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="65.9" y="494.0"></text>
</g>
<g>
<title>do_softirq.part.0 (2 samples, 0.05%)</title><rect x="62.9" y="467.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="65.9" y="478.0"></text>
</g>
<g>
<title>do_softirq_own_stack (2 samples, 0.05%)</title><rect x="62.9" y="451.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="65.9" y="462.0"></text>
</g>
<g>
<title>__softirqentry_text_start (2 samples, 0.05%)</title><rect x="62.9" y="435.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="65.9" y="446.0"></text>
</g>
<g>
<title>net_rx_action (2 samples, 0.05%)</title><rect x="62.9" y="419.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="65.9" y="430.0"></text>
</g>
<g>
<title>process_backlog (2 samples, 0.05%)</title><rect x="62.9" y="403.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="65.9" y="414.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (2 samples, 0.05%)</title><rect x="62.9" y="387.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="65.9" y="398.0"></text>
</g>
<g>
<title>ip_rcv (2 samples, 0.05%)</title><rect x="62.9" y="371.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="65.9" y="382.0"></text>
</g>
<g>
<title>ip_local_deliver (2 samples, 0.05%)</title><rect x="62.9" y="355.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="65.9" y="366.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (2 samples, 0.05%)</title><rect x="62.9" y="339.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="65.9" y="350.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (2 samples, 0.05%)</title><rect x="62.9" y="323.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="65.9" y="334.0"></text>
</g>
<g>
<title>tcp_v4_rcv (2 samples, 0.05%)</title><rect x="62.9" y="307.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="65.9" y="318.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (2 samples, 0.05%)</title><rect x="62.9" y="291.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="65.9" y="302.0"></text>
</g>
<g>
<title>tcp_rcv_established (2 samples, 0.05%)</title><rect x="62.9" y="275.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="65.9" y="286.0"></text>
</g>
<g>
<title>sock_def_readable (2 samples, 0.05%)</title><rect x="62.9" y="259.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="65.9" y="270.0"></text>
</g>
<g>
<title>__wake_up_common_lock (2 samples, 0.05%)</title><rect x="62.9" y="243.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="65.9" y="254.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.05%)</title><rect x="62.9" y="227.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="65.9" y="238.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (1 samples, 0.02%)</title><rect x="63.5" y="531.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="66.5" y="542.0"></text>
</g>
<g>
<title>__list_del_entry_valid (1 samples, 0.02%)</title><rect x="63.5" y="515.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="66.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.tryDecrement (1 samples, 0.02%)</title><rect x="63.7" y="931.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="66.7" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.decreaseAndGet (1 samples, 0.02%)</title><rect x="63.7" y="915.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="66.7" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (52 samples, 1.20%)</title><rect x="64.0" y="1059.0" width="14.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="67.0" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (52 samples, 1.20%)</title><rect x="64.0" y="1043.0" width="14.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="67.0" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (10 samples, 0.23%)</title><rect x="64.0" y="1027.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="67.0" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (7 samples, 0.16%)</title><rect x="64.8" y="1011.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="67.8" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (7 samples, 0.16%)</title><rect x="64.8" y="995.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="67.8" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (6 samples, 0.14%)</title><rect x="64.8" y="979.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="67.8" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (6 samples, 0.14%)</title><rect x="64.8" y="963.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="67.8" y="974.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.02%)</title><rect x="65.1" y="947.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="68.1" y="958.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.02%)</title><rect x="65.1" y="931.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="68.1" y="942.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (4 samples, 0.09%)</title><rect x="65.4" y="947.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="68.4" y="958.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (3 samples, 0.07%)</title><rect x="65.6" y="931.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="68.6" y="942.0"></text>
</g>
<g>
<title>__libc_write (3 samples, 0.07%)</title><rect x="65.6" y="915.0" width="0.9" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="68.6" y="926.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.05%)</title><rect x="65.9" y="899.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="68.9" y="910.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.05%)</title><rect x="65.9" y="883.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="68.9" y="894.0"></text>
</g>
<g>
<title>__x64_sys_write (1 samples, 0.02%)</title><rect x="65.9" y="867.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="68.9" y="878.0"></text>
</g>
<g>
<title>ksys_write (1 samples, 0.02%)</title><rect x="66.2" y="867.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="69.2" y="878.0"></text>
</g>
<g>
<title>vfs_write (1 samples, 0.02%)</title><rect x="66.2" y="851.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="69.2" y="862.0"></text>
</g>
<g>
<title>new_sync_write (1 samples, 0.02%)</title><rect x="66.2" y="835.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="69.2" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.&lt;init&gt; (1 samples, 0.02%)</title><rect x="66.5" y="979.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="69.5" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (42 samples, 0.97%)</title><rect x="66.7" y="1027.0" width="11.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="69.7" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (42 samples, 0.97%)</title><rect x="66.7" y="1011.0" width="11.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="69.7" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (40 samples, 0.92%)</title><rect x="66.7" y="995.0" width="10.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="69.7" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (39 samples, 0.90%)</title><rect x="66.7" y="979.0" width="10.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="69.7" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (39 samples, 0.90%)</title><rect x="66.7" y="963.0" width="10.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="69.7" y="974.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3 samples, 0.07%)</title><rect x="67.3" y="947.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="70.3" y="958.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3 samples, 0.07%)</title><rect x="67.3" y="931.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="70.3" y="942.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (3 samples, 0.07%)</title><rect x="67.3" y="915.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="70.3" y="926.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (3 samples, 0.07%)</title><rect x="67.3" y="899.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="70.3" y="910.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.02%)</title><rect x="67.8" y="883.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="70.8" y="894.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (1 samples, 0.02%)</title><rect x="67.8" y="867.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="70.8" y="878.0"></text>
</g>
<g>
<title>os::PlatformEvent::unpark() (1 samples, 0.02%)</title><rect x="67.8" y="851.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="70.8" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (34 samples, 0.78%)</title><rect x="68.1" y="947.0" width="9.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="71.1" y="958.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (33 samples, 0.76%)</title><rect x="68.4" y="931.0" width="8.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="71.4" y="942.0"></text>
</g>
<g>
<title>__libc_write (32 samples, 0.74%)</title><rect x="68.6" y="915.0" width="8.7" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="71.6" y="926.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (30 samples, 0.69%)</title><rect x="69.2" y="899.0" width="8.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="72.2" y="910.0"></text>
</g>
<g>
<title>do_syscall_64 (30 samples, 0.69%)</title><rect x="69.2" y="883.0" width="8.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="72.2" y="894.0"></text>
</g>
<g>
<title>ksys_write (27 samples, 0.62%)</title><rect x="70.0" y="867.0" width="7.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="73.0" y="878.0"></text>
</g>
<g>
<title>__fdget_pos (2 samples, 0.05%)</title><rect x="70.3" y="851.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="73.3" y="862.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.05%)</title><rect x="70.3" y="835.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="73.3" y="846.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.05%)</title><rect x="70.3" y="819.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="73.3" y="830.0"></text>
</g>
<g>
<title>vfs_write (24 samples, 0.55%)</title><rect x="70.8" y="851.0" width="6.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="73.8" y="862.0"></text>
</g>
<g>
<title>new_sync_write (21 samples, 0.48%)</title><rect x="70.8" y="835.0" width="5.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="73.8" y="846.0"></text>
</g>
<g>
<title>pipe_write (20 samples, 0.46%)</title><rect x="71.1" y="819.0" width="5.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="74.1" y="830.0"></text>
</g>
<g>
<title>__sb_start_write (1 samples, 0.02%)</title><rect x="71.1" y="803.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="74.1" y="814.0"></text>
</g>
<g>
<title>__wake_up_common_lock (11 samples, 0.25%)</title><rect x="71.3" y="803.0" width="3.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="74.3" y="814.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (11 samples, 0.25%)</title><rect x="71.3" y="787.0" width="3.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="74.3" y="798.0"></text>
</g>
<g>
<title>copy_page_from_iter (3 samples, 0.07%)</title><rect x="74.3" y="803.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="77.3" y="814.0"></text>
</g>
<g>
<title>copyin (1 samples, 0.02%)</title><rect x="74.9" y="787.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="77.9" y="798.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (1 samples, 0.02%)</title><rect x="74.9" y="771.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="77.9" y="782.0"></text>
</g>
<g>
<title>file_update_time (3 samples, 0.07%)</title><rect x="75.1" y="803.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="78.1" y="814.0"></text>
</g>
<g>
<title>__mnt_want_write (1 samples, 0.02%)</title><rect x="75.1" y="787.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="78.1" y="798.0"></text>
</g>
<g>
<title>current_time (1 samples, 0.02%)</title><rect x="75.4" y="787.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="78.4" y="798.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (1 samples, 0.02%)</title><rect x="75.4" y="771.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="78.4" y="782.0"></text>
</g>
<g>
<title>generic_update_time (1 samples, 0.02%)</title><rect x="75.7" y="787.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="78.7" y="798.0"></text>
</g>
<g>
<title>mutex_lock (2 samples, 0.05%)</title><rect x="76.0" y="803.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="79.0" y="814.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.02%)</title><rect x="76.2" y="787.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="79.2" y="798.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="76.2" y="771.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="79.2" y="782.0"></text>
</g>
<g>
<title>security_file_permission (3 samples, 0.07%)</title><rect x="76.5" y="835.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="79.5" y="846.0"></text>
</g>
<g>
<title>file_has_perm (2 samples, 0.05%)</title><rect x="76.5" y="819.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="79.5" y="830.0"></text>
</g>
<g>
<title>avc_has_perm (2 samples, 0.05%)</title><rect x="76.5" y="803.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="79.5" y="814.0"></text>
</g>
<g>
<title>selinux_file_permission (1 samples, 0.02%)</title><rect x="77.0" y="819.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="80.0" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.isStopped (1 samples, 0.02%)</title><rect x="77.3" y="979.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="80.3" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicInteger.get (1 samples, 0.02%)</title><rect x="77.3" y="963.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="80.3" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (2 samples, 0.05%)</title><rect x="77.6" y="995.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="80.6" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (101 samples, 2.32%)</title><rect x="78.1" y="1059.0" width="27.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="81.1" y="1070.0">j..</text>
</g>
<g>
<title>java/lang/Long.toString (1 samples, 0.02%)</title><rect x="78.1" y="1043.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="81.1" y="1054.0"></text>
</g>
<g>
<title>java/lang/Long.getChars (1 samples, 0.02%)</title><rect x="78.1" y="1027.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="81.1" y="1038.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (1 samples, 0.02%)</title><rect x="78.4" y="1043.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="81.4" y="1054.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (1 samples, 0.02%)</title><rect x="78.4" y="1027.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="81.4" y="1038.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.02%)</title><rect x="78.7" y="1043.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="81.7" y="1054.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.02%)</title><rect x="78.7" y="1027.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="81.7" y="1038.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.02%)</title><rect x="78.7" y="1011.0" width="0.2" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="81.7" y="1022.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.05%)</title><rect x="78.9" y="1043.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="81.9" y="1054.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.05%)</title><rect x="78.9" y="1027.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="81.9" y="1038.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.05%)</title><rect x="78.9" y="1011.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="81.9" y="1022.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.05%)</title><rect x="78.9" y="995.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="81.9" y="1006.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.05%)</title><rect x="78.9" y="979.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="81.9" y="990.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.05%)</title><rect x="78.9" y="963.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="81.9" y="974.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.05%)</title><rect x="78.9" y="947.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="81.9" y="958.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (2 samples, 0.05%)</title><rect x="78.9" y="931.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="81.9" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (72 samples, 1.66%)</title><rect x="79.5" y="1043.0" width="19.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="82.5" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectCookies (1 samples, 0.02%)</title><rect x="79.5" y="1027.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="82.5" y="1038.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (1 samples, 0.02%)</title><rect x="79.5" y="1011.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="82.5" y="1022.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (1 samples, 0.02%)</title><rect x="79.5" y="995.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="82.5" y="1006.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (1 samples, 0.02%)</title><rect x="79.5" y="979.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="82.5" y="990.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (1 samples, 0.02%)</title><rect x="79.5" y="963.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="82.5" y="974.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (1 samples, 0.02%)</title><rect x="79.5" y="947.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="82.5" y="958.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.02%)</title><rect x="79.5" y="931.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="82.5" y="942.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.02%)</title><rect x="79.5" y="915.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="82.5" y="926.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.02%)</title><rect x="79.5" y="899.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="82.5" y="910.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (1 samples, 0.02%)</title><rect x="79.5" y="883.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="82.5" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (43 samples, 0.99%)</title><rect x="79.8" y="1027.0" width="11.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="82.8" y="1038.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (8 samples, 0.18%)</title><rect x="80.8" y="1011.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="83.8" y="1022.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (5 samples, 0.12%)</title><rect x="80.8" y="995.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="83.8" y="1006.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.02%)</title><rect x="82.2" y="995.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="85.2" y="1006.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.05%)</title><rect x="82.5" y="995.0" width="0.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="85.5" y="1006.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.hasNext (2 samples, 0.05%)</title><rect x="83.0" y="1011.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="86.0" y="1022.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (8 samples, 0.18%)</title><rect x="83.6" y="1011.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="86.6" y="1022.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (8 samples, 0.18%)</title><rect x="83.6" y="995.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="86.6" y="1006.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry.&lt;init&gt; (3 samples, 0.07%)</title><rect x="83.6" y="979.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="86.6" y="990.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntryIterator.next (5 samples, 0.12%)</title><rect x="84.4" y="979.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="87.4" y="990.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntryIterator.next (5 samples, 0.12%)</title><rect x="84.4" y="963.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="87.4" y="974.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.nextEntry (5 samples, 0.12%)</title><rect x="84.4" y="947.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="87.4" y="958.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (3 samples, 0.07%)</title><rect x="84.9" y="931.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="87.9" y="942.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (9 samples, 0.21%)</title><rect x="85.7" y="1011.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="88.7" y="1022.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (9 samples, 0.21%)</title><rect x="85.7" y="995.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="88.7" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.02%)</title><rect x="85.7" y="979.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="88.7" y="990.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (8 samples, 0.18%)</title><rect x="86.0" y="979.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="89.0" y="990.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntryIterator.&lt;init&gt; (7 samples, 0.16%)</title><rect x="86.3" y="963.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="89.3" y="974.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.&lt;init&gt; (6 samples, 0.14%)</title><rect x="86.5" y="947.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="89.5" y="958.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.02%)</title><rect x="87.1" y="931.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="90.1" y="942.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.07%)</title><rect x="87.4" y="931.0" width="0.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="90.4" y="942.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$248/471895969.test (12 samples, 0.28%)</title><rect x="88.2" y="1011.0" width="3.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="91.2" y="1022.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (12 samples, 0.28%)</title><rect x="88.2" y="995.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="91.2" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$$Lambda$194/1679023824.test (2 samples, 0.05%)</title><rect x="88.2" y="979.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="91.2" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.lambda$static$0 (2 samples, 0.05%)</title><rect x="88.2" y="963.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="91.2" y="974.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.05%)</title><rect x="88.2" y="947.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="91.2" y="958.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.05%)</title><rect x="88.2" y="931.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="91.2" y="942.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.05%)</title><rect x="88.2" y="915.0" width="0.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="91.2" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$77/1464555023.test (10 samples, 0.23%)</title><rect x="88.7" y="979.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="91.7" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (10 samples, 0.23%)</title><rect x="88.7" y="963.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="91.7" y="974.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$66/254801937.test (10 samples, 0.23%)</title><rect x="88.7" y="947.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="91.7" y="958.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (10 samples, 0.23%)</title><rect x="88.7" y="931.0" width="2.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="91.7" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$65/270056930.test (10 samples, 0.23%)</title><rect x="88.7" y="915.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="91.7" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (10 samples, 0.23%)</title><rect x="88.7" y="899.0" width="2.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="91.7" y="910.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (4 samples, 0.09%)</title><rect x="88.7" y="883.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="91.7" y="894.0"></text>
</g>
<g>
<title>java/lang/String.length (3 samples, 0.07%)</title><rect x="88.7" y="867.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="91.7" y="878.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.02%)</title><rect x="89.3" y="851.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="92.3" y="862.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.02%)</title><rect x="89.5" y="867.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="92.5" y="878.0"></text>
</g>
<g>
<title>java/lang/String.substring (6 samples, 0.14%)</title><rect x="89.8" y="883.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="92.8" y="894.0"></text>
</g>
<g>
<title>java/lang/String.checkBoundsBeginEnd (1 samples, 0.02%)</title><rect x="89.8" y="867.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="92.8" y="878.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 0.12%)</title><rect x="90.1" y="867.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="93.1" y="878.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.02%)</title><rect x="90.1" y="851.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="93.1" y="862.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4 samples, 0.09%)</title><rect x="90.3" y="851.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="93.3" y="862.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.07%)</title><rect x="90.6" y="835.0" width="0.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="93.6" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (28 samples, 0.64%)</title><rect x="91.4" y="1027.0" width="7.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="94.4" y="1038.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (28 samples, 0.64%)</title><rect x="91.4" y="1011.0" width="7.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="94.4" y="1022.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (28 samples, 0.64%)</title><rect x="91.4" y="995.0" width="7.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="94.4" y="1006.0"></text>
</g>
<g>
<title>java/util/AbstractMap.isEmpty (4 samples, 0.09%)</title><rect x="91.7" y="979.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="94.7" y="990.0"></text>
</g>
<g>
<title>java/util/TreeMap.size (4 samples, 0.09%)</title><rect x="91.7" y="963.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="94.7" y="974.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.07%)</title><rect x="91.7" y="947.0" width="0.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="94.7" y="958.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (1 samples, 0.02%)</title><rect x="92.5" y="947.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="95.5" y="958.0"></text>
</g>
<g>
<title>java/util/TreeMap.&lt;init&gt; (3 samples, 0.07%)</title><rect x="92.8" y="979.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="95.8" y="990.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (20 samples, 0.46%)</title><rect x="93.6" y="979.0" width="5.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="96.6" y="990.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$115/937225413.accept (20 samples, 0.46%)</title><rect x="93.6" y="963.0" width="5.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="96.6" y="974.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (20 samples, 0.46%)</title><rect x="93.6" y="947.0" width="5.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="96.6" y="958.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (1 samples, 0.02%)</title><rect x="93.9" y="931.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="96.9" y="942.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (1 samples, 0.02%)</title><rect x="93.9" y="915.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="96.9" y="926.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$ListItr.&lt;init&gt; (1 samples, 0.02%)</title><rect x="93.9" y="899.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="96.9" y="910.0"></text>
</g>
<g>
<title>java/lang/String.trim (7 samples, 0.16%)</title><rect x="94.1" y="931.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="97.1" y="942.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (7 samples, 0.16%)</title><rect x="94.1" y="915.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="97.1" y="926.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.09%)</title><rect x="95.0" y="899.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="98.0" y="910.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.05%)</title><rect x="95.0" y="883.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="98.0" y="894.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (2 samples, 0.05%)</title><rect x="95.0" y="867.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="98.0" y="878.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.05%)</title><rect x="95.0" y="851.0" width="0.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="98.0" y="862.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.05%)</title><rect x="95.5" y="883.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="98.5" y="894.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.05%)</title><rect x="96.1" y="931.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="99.1" y="942.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.05%)</title><rect x="96.1" y="915.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="99.1" y="926.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$118/2131634163.get$Lambda (2 samples, 0.05%)</title><rect x="96.1" y="899.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="99.1" y="910.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$118/2131634163.&lt;init&gt; (2 samples, 0.05%)</title><rect x="96.1" y="883.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="99.1" y="894.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (2 samples, 0.05%)</title><rect x="96.6" y="931.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="99.6" y="942.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$118/2131634163.accept (2 samples, 0.05%)</title><rect x="96.6" y="915.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="99.6" y="926.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (2 samples, 0.05%)</title><rect x="96.6" y="899.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="99.6" y="910.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.05%)</title><rect x="96.6" y="883.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="99.6" y="894.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.05%)</title><rect x="96.6" y="867.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="99.6" y="878.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.05%)</title><rect x="96.6" y="851.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="99.6" y="862.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.05%)</title><rect x="96.6" y="835.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="99.6" y="846.0"></text>
</g>
<g>
<title>jint_disjoint_arraycopy (2 samples, 0.05%)</title><rect x="96.6" y="819.0" width="0.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="99.6" y="830.0"></text>
</g>
<g>
<title>java/util/List.copyOf (1 samples, 0.02%)</title><rect x="97.1" y="931.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="100.1" y="942.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (1 samples, 0.02%)</title><rect x="97.1" y="915.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="100.1" y="926.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (1 samples, 0.02%)</title><rect x="97.1" y="899.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="100.1" y="910.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.02%)</title><rect x="97.1" y="883.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="100.1" y="894.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (6 samples, 0.14%)</title><rect x="97.4" y="931.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="100.4" y="942.0"></text>
</g>
<g>
<title>java/util/TreeMap$Entry.&lt;init&gt; (2 samples, 0.05%)</title><rect x="97.7" y="915.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="100.7" y="926.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (2 samples, 0.05%)</title><rect x="98.2" y="915.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="101.2" y="926.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.05%)</title><rect x="98.2" y="899.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="101.2" y="910.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.05%)</title><rect x="98.2" y="883.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="101.2" y="894.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.02%)</title><rect x="98.5" y="867.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="101.5" y="878.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.02%)</title><rect x="98.5" y="851.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="101.5" y="862.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.02%)</title><rect x="98.5" y="835.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="101.5" y="846.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (1 samples, 0.02%)</title><rect x="98.5" y="819.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="101.5" y="830.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (1 samples, 0.02%)</title><rect x="98.8" y="915.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="101.8" y="926.0"></text>
</g>
<g>
<title>java/util/TreeMap.rotateRight (1 samples, 0.02%)</title><rect x="98.8" y="899.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="101.8" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (3 samples, 0.07%)</title><rect x="99.0" y="1043.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="102.0" y="1054.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.07%)</title><rect x="99.0" y="1027.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="102.0" y="1038.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (3 samples, 0.07%)</title><rect x="99.0" y="1011.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="102.0" y="1022.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/667821226.invoke (3 samples, 0.07%)</title><rect x="99.0" y="995.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="102.0" y="1006.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.07%)</title><rect x="99.0" y="979.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="102.0" y="990.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (1 samples, 0.02%)</title><rect x="99.0" y="963.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="102.0" y="974.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.mixLen (1 samples, 0.02%)</title><rect x="99.3" y="963.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="102.3" y="974.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.checkOverflow (1 samples, 0.02%)</title><rect x="99.3" y="947.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="102.3" y="958.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.02%)</title><rect x="99.3" y="931.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="102.3" y="942.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (1 samples, 0.02%)</title><rect x="99.6" y="963.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="102.6" y="974.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.02%)</title><rect x="99.6" y="947.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="102.6" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (10 samples, 0.23%)</title><rect x="99.9" y="1043.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="102.9" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (9 samples, 0.21%)</title><rect x="100.1" y="1027.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="103.1" y="1038.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.02%)</title><rect x="100.4" y="1011.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="103.4" y="1022.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (1 samples, 0.02%)</title><rect x="100.4" y="995.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="103.4" y="1006.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.14%)</title><rect x="100.7" y="1011.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="103.7" y="1022.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (6 samples, 0.14%)</title><rect x="100.7" y="995.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="103.7" y="1006.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/667821226.invoke (5 samples, 0.12%)</title><rect x="100.7" y="979.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="103.7" y="990.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.07%)</title><rect x="100.9" y="963.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="103.9" y="974.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (1 samples, 0.02%)</title><rect x="101.2" y="947.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="104.2" y="958.0"></text>
</g>
<g>
<title>java/lang/String.toString (1 samples, 0.02%)</title><rect x="101.2" y="931.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="104.2" y="942.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (1 samples, 0.02%)</title><rect x="101.5" y="947.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="104.5" y="958.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1852584274.invoke (1 samples, 0.02%)</title><rect x="101.8" y="963.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="104.8" y="974.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="101.8" y="947.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="104.8" y="958.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (1 samples, 0.02%)</title><rect x="101.8" y="931.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="104.8" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (1 samples, 0.02%)</title><rect x="101.8" y="915.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="104.8" y="926.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="102.0" y="979.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="105.0" y="990.0"></text>
</g>
<g>
<title>java/net/URI.getRawQuery (1 samples, 0.02%)</title><rect x="102.3" y="1011.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="105.3" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (11 samples, 0.25%)</title><rect x="102.6" y="1043.0" width="3.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="105.6" y="1054.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (11 samples, 0.25%)</title><rect x="102.6" y="1027.0" width="3.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="105.6" y="1038.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.02%)</title><rect x="103.9" y="1011.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="106.9" y="1022.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.02%)</title><rect x="103.9" y="995.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="106.9" y="1006.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.02%)</title><rect x="103.9" y="979.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="106.9" y="990.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.02%)</title><rect x="103.9" y="963.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="106.9" y="974.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.02%)</title><rect x="103.9" y="947.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="106.9" y="958.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (3 samples, 0.07%)</title><rect x="104.2" y="1011.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="107.2" y="1022.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (3 samples, 0.07%)</title><rect x="104.2" y="995.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="107.2" y="1006.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (3 samples, 0.07%)</title><rect x="104.2" y="979.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="107.2" y="990.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (3 samples, 0.07%)</title><rect x="104.2" y="963.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="107.2" y="974.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.getChar (2 samples, 0.05%)</title><rect x="104.5" y="947.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="107.5" y="958.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (2 samples, 0.05%)</title><rect x="105.0" y="1011.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="108.0" y="1022.0"></text>
</g>
<g>
<title>java/util/TreeMap.rotateLeft (1 samples, 0.02%)</title><rect x="105.3" y="995.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="108.3" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$234/1504599646.apply (1 samples, 0.02%)</title><rect x="105.6" y="1091.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="108.6" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (30 samples, 0.69%)</title><rect x="105.8" y="1123.0" width="8.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="108.8" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (14 samples, 0.32%)</title><rect x="105.8" y="1107.0" width="3.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="108.8" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (14 samples, 0.32%)</title><rect x="105.8" y="1091.0" width="3.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="108.8" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (14 samples, 0.32%)</title><rect x="105.8" y="1075.0" width="3.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="108.8" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (2 samples, 0.05%)</title><rect x="105.8" y="1059.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="108.8" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (2 samples, 0.05%)</title><rect x="105.8" y="1043.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="108.8" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (12 samples, 0.28%)</title><rect x="106.4" y="1059.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="109.4" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (12 samples, 0.28%)</title><rect x="106.4" y="1043.0" width="3.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="109.4" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (1 samples, 0.02%)</title><rect x="106.4" y="1027.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="109.4" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (8 samples, 0.18%)</title><rect x="106.6" y="1027.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="109.6" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$199/1509846524.run (8 samples, 0.18%)</title><rect x="106.6" y="1011.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="109.6" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (8 samples, 0.18%)</title><rect x="106.6" y="995.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="109.6" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (1 samples, 0.02%)</title><rect x="106.6" y="979.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="109.6" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (7 samples, 0.16%)</title><rect x="106.9" y="979.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="109.9" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (3 samples, 0.07%)</title><rect x="106.9" y="963.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="109.9" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (3 samples, 0.07%)</title><rect x="106.9" y="947.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="109.9" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (3 samples, 0.07%)</title><rect x="106.9" y="931.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="109.9" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (4 samples, 0.09%)</title><rect x="107.7" y="963.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="110.7" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (4 samples, 0.09%)</title><rect x="107.7" y="947.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="110.7" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$290/1089333161.run (4 samples, 0.09%)</title><rect x="107.7" y="931.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="110.7" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (4 samples, 0.09%)</title><rect x="107.7" y="915.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="110.7" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (4 samples, 0.09%)</title><rect x="107.7" y="899.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="110.7" y="910.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (2 samples, 0.05%)</title><rect x="107.7" y="883.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="110.7" y="894.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (1 samples, 0.02%)</title><rect x="108.0" y="867.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="111.0" y="878.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1 samples, 0.02%)</title><rect x="108.0" y="851.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="111.0" y="862.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.sourceSpliterator (1 samples, 0.02%)</title><rect x="108.0" y="835.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="111.0" y="846.0"></text>
</g>
<g>
<title>java/util/stream/StreamOpFlag.combineOpFlags (1 samples, 0.02%)</title><rect x="108.0" y="819.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="111.0" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.isOpen (2 samples, 0.05%)</title><rect x="108.3" y="883.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="111.3" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection.connected (2 samples, 0.05%)</title><rect x="108.3" y="867.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="111.3" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (3 samples, 0.07%)</title><rect x="108.8" y="1027.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="111.8" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (2 samples, 0.05%)</title><rect x="109.1" y="1011.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="112.1" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (1 samples, 0.02%)</title><rect x="109.1" y="995.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="112.1" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (1 samples, 0.02%)</title><rect x="109.1" y="979.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="112.1" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (1 samples, 0.02%)</title><rect x="109.1" y="963.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="112.1" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (1 samples, 0.02%)</title><rect x="109.1" y="947.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="112.1" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (1 samples, 0.02%)</title><rect x="109.1" y="931.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="112.1" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (1 samples, 0.02%)</title><rect x="109.1" y="915.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="112.1" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (1 samples, 0.02%)</title><rect x="109.1" y="899.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="112.1" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (1 samples, 0.02%)</title><rect x="109.1" y="883.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="112.1" y="894.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.02%)</title><rect x="109.1" y="867.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="112.1" y="878.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.weakCompareAndSet (1 samples, 0.02%)</title><rect x="109.1" y="851.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="112.1" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (1 samples, 0.02%)</title><rect x="109.4" y="995.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="112.4" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicInteger.compareAndSet (1 samples, 0.02%)</title><rect x="109.4" y="979.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="112.4" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.&lt;init&gt; (16 samples, 0.37%)</title><rect x="109.6" y="1107.0" width="4.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="112.6" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1 samples, 0.02%)</title><rect x="113.4" y="1091.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="116.4" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.02%)</title><rect x="113.7" y="1091.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="116.7" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="114.0" y="1235.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="117.0" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="114.0" y="1219.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="117.0" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.&lt;init&gt; (1 samples, 0.02%)</title><rect x="114.0" y="1203.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="117.0" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.incrementAndGet (1 samples, 0.02%)</title><rect x="114.0" y="1187.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="117.0" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (1 samples, 0.02%)</title><rect x="114.2" y="1267.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="117.2" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (173 samples, 3.98%)</title><rect x="114.5" y="1267.0" width="47.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="117.5" y="1278.0">jdk/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1 samples, 0.02%)</title><rect x="114.5" y="1251.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="117.5" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1 samples, 0.02%)</title><rect x="114.5" y="1235.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="117.5" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.&lt;init&gt; (1 samples, 0.02%)</title><rect x="114.5" y="1219.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="117.5" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (1 samples, 0.02%)</title><rect x="114.5" y="1203.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="117.5" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (6 samples, 0.14%)</title><rect x="114.8" y="1251.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="117.8" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (6 samples, 0.14%)</title><rect x="114.8" y="1235.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="117.8" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (1 samples, 0.02%)</title><rect x="114.8" y="1219.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="117.8" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$205/1250947798.accept (1 samples, 0.02%)</title><rect x="114.8" y="1203.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="117.8" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$establishExchange$1 (1 samples, 0.02%)</title><rect x="114.8" y="1187.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="117.8" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (5 samples, 0.12%)</title><rect x="115.1" y="1219.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="118.1" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (5 samples, 0.12%)</title><rect x="115.1" y="1203.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="118.1" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (166 samples, 3.82%)</title><rect x="116.4" y="1251.0" width="45.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="119.4" y="1262.0">jdk/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (153 samples, 3.52%)</title><rect x="116.7" y="1235.0" width="41.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="119.7" y="1246.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (153 samples, 3.52%)</title><rect x="116.7" y="1219.0" width="41.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="119.7" y="1230.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (152 samples, 3.50%)</title><rect x="116.7" y="1203.0" width="41.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="119.7" y="1214.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (3 samples, 0.07%)</title><rect x="116.7" y="1187.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="119.7" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (3 samples, 0.07%)</title><rect x="116.7" y="1171.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="119.7" y="1182.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.05%)</title><rect x="116.7" y="1155.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="119.7" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$154/1584594711.apply (1 samples, 0.02%)</title><rect x="117.2" y="1155.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="120.2" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$154/1584594711.apply (149 samples, 3.43%)</title><rect x="117.5" y="1187.0" width="40.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="120.5" y="1198.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$get$0 (149 samples, 3.43%)</title><rect x="117.5" y="1171.0" width="40.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="120.5" y="1182.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createExchangeImpl (149 samples, 3.43%)</title><rect x="117.5" y="1155.0" width="40.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="120.5" y="1166.0">jdk..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (62 samples, 1.43%)</title><rect x="118.0" y="1139.0" width="16.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="121.0" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (62 samples, 1.43%)</title><rect x="118.0" y="1123.0" width="16.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="121.0" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (62 samples, 1.43%)</title><rect x="118.0" y="1107.0" width="16.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="121.0" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.&lt;init&gt; (1 samples, 0.02%)</title><rect x="118.0" y="1091.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="121.0" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$201/376986198.apply (59 samples, 1.36%)</title><rect x="118.3" y="1091.0" width="16.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="121.3" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$1 (59 samples, 1.36%)</title><rect x="118.3" y="1075.0" width="16.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="121.3" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (59 samples, 1.36%)</title><rect x="118.3" y="1059.0" width="16.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="121.3" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (59 samples, 1.36%)</title><rect x="118.3" y="1043.0" width="16.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="121.3" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getSettingsString (48 samples, 1.10%)</title><rect x="118.3" y="1027.0" width="13.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="121.3" y="1038.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encodeToString (3 samples, 0.07%)</title><rect x="118.3" y="1011.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="121.3" y="1022.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encode (3 samples, 0.07%)</title><rect x="118.3" y="995.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="121.3" y="1006.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encode0 (3 samples, 0.07%)</title><rect x="118.3" y="979.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="121.3" y="990.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encodeBlock (3 samples, 0.07%)</title><rect x="118.3" y="963.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="121.3" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getClientSettings (42 samples, 0.97%)</title><rect x="119.1" y="1011.0" width="11.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="122.1" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getParameter (41 samples, 0.94%)</title><rect x="119.4" y="995.0" width="11.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="122.4" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getIntegerNetProperty (41 samples, 0.94%)</title><rect x="119.4" y="979.0" width="11.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="122.4" y="990.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/896644936.linkToTargetMethod (1 samples, 0.02%)</title><rect x="119.7" y="963.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="122.7" y="974.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="119.7" y="947.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="122.7" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$61/1212772528.get$Lambda (1 samples, 0.02%)</title><rect x="119.7" y="931.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="122.7" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$61/1212772528.&lt;init&gt; (1 samples, 0.02%)</title><rect x="119.7" y="915.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="122.7" y="926.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (39 samples, 0.90%)</title><rect x="119.9" y="963.0" width="10.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="122.9" y="974.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 0.02%)</title><rect x="120.8" y="947.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="123.8" y="958.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (28 samples, 0.64%)</title><rect x="121.0" y="947.0" width="7.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="124.0" y="958.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (3 samples, 0.07%)</title><rect x="121.3" y="931.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="124.3" y="942.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.269] (1 samples, 0.02%)</title><rect x="121.8" y="915.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="124.8" y="926.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (3 samples, 0.07%)</title><rect x="122.1" y="931.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="125.1" y="942.0"></text>
</g>
<g>
<title>JavaCallArguments::parameters() (1 samples, 0.02%)</title><rect x="122.4" y="915.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="125.4" y="926.0"></text>
</g>
<g>
<title>os::stack_shadow_pages_available(Thread*, methodHandle const&amp;, unsigned char*) (1 samples, 0.02%)</title><rect x="122.7" y="915.0" width="0.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="125.7" y="926.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (2 samples, 0.05%)</title><rect x="122.9" y="931.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="125.9" y="942.0"></text>
</g>
<g>
<title>PcDescContainer::find_pc_desc_internal(unsigned char*, bool, PcDescSearch const&amp;) (1 samples, 0.02%)</title><rect x="123.5" y="931.0" width="0.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="126.5" y="942.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.05%)</title><rect x="123.7" y="931.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="126.7" y="942.0"></text>
</g>
<g>
<title>frame::is_interpreted_frame() const (1 samples, 0.02%)</title><rect x="124.3" y="931.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="127.3" y="942.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (3 samples, 0.07%)</title><rect x="124.6" y="931.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="127.6" y="942.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (3 samples, 0.07%)</title><rect x="124.6" y="915.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="127.6" y="926.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (3 samples, 0.07%)</title><rect x="124.6" y="899.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="127.6" y="910.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.02%)</title><rect x="125.1" y="883.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="128.1" y="894.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (12 samples, 0.28%)</title><rect x="125.4" y="931.0" width="3.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="128.4" y="942.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (1 samples, 0.02%)</title><rect x="126.2" y="915.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="129.2" y="926.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="126.2" y="899.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="129.2" y="910.0"></text>
</g>
<g>
<title>do_IRQ (1 samples, 0.02%)</title><rect x="126.2" y="883.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="129.2" y="894.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="126.2" y="867.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="129.2" y="878.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="126.2" y="851.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="129.2" y="862.0"></text>
</g>
<g>
<title>PcDescContainer::find_pc_desc_internal(unsigned char*, bool, PcDescSearch const&amp;) (6 samples, 0.14%)</title><rect x="126.5" y="915.0" width="1.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="129.5" y="926.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (2 samples, 0.05%)</title><rect x="128.1" y="915.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="131.1" y="926.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (2 samples, 0.05%)</title><rect x="128.1" y="899.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="131.1" y="910.0"></text>
</g>
<g>
<title>call_stub (2 samples, 0.05%)</title><rect x="128.6" y="947.0" width="0.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="131.6" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$61/1212772528.run (5 samples, 0.12%)</title><rect x="129.2" y="947.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="132.2" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$getIntegerNetProperty$11 (5 samples, 0.12%)</title><rect x="129.2" y="931.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="132.2" y="942.0"></text>
</g>
<g>
<title>sun/net/NetProperties.getInteger (5 samples, 0.12%)</title><rect x="129.2" y="915.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="132.2" y="926.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (1 samples, 0.02%)</title><rect x="129.2" y="899.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="132.2" y="910.0"></text>
</g>
<g>
<title>java/lang/System.getProperty (3 samples, 0.07%)</title><rect x="129.4" y="899.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="132.4" y="910.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (3 samples, 0.07%)</title><rect x="129.4" y="883.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="132.4" y="894.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (2 samples, 0.05%)</title><rect x="129.7" y="867.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="132.7" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (1 samples, 0.02%)</title><rect x="130.0" y="851.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="133.0" y="862.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (1 samples, 0.02%)</title><rect x="130.3" y="899.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="133.3" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.toByteArray (3 samples, 0.07%)</title><rect x="130.5" y="1011.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="133.5" y="1022.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.02%)</title><rect x="130.5" y="995.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="133.5" y="1006.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.02%)</title><rect x="130.5" y="979.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="133.5" y="990.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="130.5" y="963.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="133.5" y="974.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="130.5" y="947.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="133.5" y="958.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.02%)</title><rect x="130.5" y="931.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="133.5" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.length (2 samples, 0.05%)</title><rect x="130.8" y="995.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="133.8" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (11 samples, 0.25%)</title><rect x="131.3" y="1027.0" width="3.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="134.3" y="1038.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (11 samples, 0.25%)</title><rect x="131.3" y="1011.0" width="3.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="134.3" y="1022.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (6 samples, 0.14%)</title><rect x="132.7" y="995.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="135.7" y="1006.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (6 samples, 0.14%)</title><rect x="132.7" y="979.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="135.7" y="990.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (6 samples, 0.14%)</title><rect x="132.7" y="963.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="135.7" y="974.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (6 samples, 0.14%)</title><rect x="132.7" y="947.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="135.7" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$309/980063472.apply (2 samples, 0.05%)</title><rect x="134.3" y="1091.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="137.3" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (2 samples, 0.05%)</title><rect x="134.3" y="1075.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="137.3" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpResponseImpl.&lt;init&gt; (2 samples, 0.05%)</title><rect x="134.3" y="1059.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="137.3" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (85 samples, 1.96%)</title><rect x="134.9" y="1139.0" width="23.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="137.9" y="1150.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (85 samples, 1.96%)</title><rect x="134.9" y="1123.0" width="23.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="137.9" y="1134.0">j..</text>
</g>
<g>
<title>java/util/LinkedList.add (1 samples, 0.02%)</title><rect x="135.4" y="1107.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="138.4" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (4 samples, 0.09%)</title><rect x="135.7" y="1107.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="138.7" y="1118.0"></text>
</g>
<g>
<title>java/util/logging/Logger.isLoggable (1 samples, 0.02%)</title><rect x="136.2" y="1091.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="139.2" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (1 samples, 0.02%)</title><rect x="136.5" y="1091.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="139.5" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (3 samples, 0.07%)</title><rect x="136.8" y="1107.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="139.8" y="1118.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.07%)</title><rect x="136.8" y="1091.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="139.8" y="1102.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.07%)</title><rect x="136.8" y="1075.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="139.8" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$199/1509846524.get$Lambda (3 samples, 0.07%)</title><rect x="136.8" y="1059.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="139.8" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$199/1509846524.&lt;init&gt; (3 samples, 0.07%)</title><rect x="136.8" y="1043.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="139.8" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (3 samples, 0.07%)</title><rect x="137.6" y="1107.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="140.6" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (20 samples, 0.46%)</title><rect x="138.4" y="1107.0" width="5.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="141.4" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (17 samples, 0.39%)</title><rect x="138.4" y="1091.0" width="4.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="141.4" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.&lt;init&gt; (1 samples, 0.02%)</title><rect x="139.8" y="1075.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="142.8" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (11 samples, 0.25%)</title><rect x="140.0" y="1075.0" width="3.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="143.0" y="1086.0"></text>
</g>
<g>
<title>java/util/HashMap.get (4 samples, 0.09%)</title><rect x="140.3" y="1059.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="143.3" y="1070.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.05%)</title><rect x="140.3" y="1043.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="143.3" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.equals (2 samples, 0.05%)</title><rect x="140.3" y="1027.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="143.3" y="1038.0"></text>
</g>
<g>
<title>java/util/Objects.equals (1 samples, 0.02%)</title><rect x="140.6" y="1011.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="143.6" y="1022.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.equals (1 samples, 0.02%)</title><rect x="140.6" y="995.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="143.6" y="1006.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress$InetSocketAddressHolder.equals (1 samples, 0.02%)</title><rect x="140.6" y="979.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="143.6" y="990.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 0.05%)</title><rect x="140.8" y="1043.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="143.8" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (1 samples, 0.02%)</title><rect x="141.1" y="1027.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="144.1" y="1038.0"></text>
</g>
<g>
<title>java/util/Objects.hash (1 samples, 0.02%)</title><rect x="141.1" y="1011.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="144.1" y="1022.0"></text>
</g>
<g>
<title>java/util/Arrays.hashCode (1 samples, 0.02%)</title><rect x="141.1" y="995.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="144.1" y="1006.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.hashCode (1 samples, 0.02%)</title><rect x="141.1" y="979.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="144.1" y="990.0"></text>
</g>
<g>
<title>java/util/LinkedList.removeFirst (2 samples, 0.05%)</title><rect x="141.4" y="1059.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="144.4" y="1070.0"></text>
</g>
<g>
<title>java/util/LinkedList.unlinkFirst (2 samples, 0.05%)</title><rect x="141.4" y="1043.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="144.4" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.remove (4 samples, 0.09%)</title><rect x="141.9" y="1059.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="144.9" y="1070.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.remove (1 samples, 0.02%)</title><rect x="142.7" y="1043.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="145.7" y="1054.0"></text>
</g>
<g>
<title>java/util/LinkedList.unlink (1 samples, 0.02%)</title><rect x="142.7" y="1027.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="145.7" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.isOpen (3 samples, 0.07%)</title><rect x="143.0" y="1091.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="146.0" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection.connected (3 samples, 0.07%)</title><rect x="143.0" y="1075.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="146.0" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (52 samples, 1.20%)</title><rect x="143.8" y="1107.0" width="14.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="146.8" y="1118.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (49 samples, 1.13%)</title><rect x="144.4" y="1091.0" width="13.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="147.4" y="1102.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (3 samples, 0.07%)</title><rect x="145.2" y="1075.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="148.2" y="1086.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (1 samples, 0.02%)</title><rect x="146.0" y="1075.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="149.0" y="1086.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (28 samples, 0.64%)</title><rect x="146.3" y="1075.0" width="7.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="149.3" y="1086.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;5292148ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)0, 5292148ul&gt;::oop_access_barrier(void*, oopDesc*) (1 samples, 0.02%)</title><rect x="146.5" y="1059.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="149.5" y="1070.0"></text>
</g>
<g>
<title>CompilationPolicy::compile_if_required(methodHandle const&amp;, Thread*) (1 samples, 0.02%)</title><rect x="146.8" y="1059.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="149.8" y="1070.0"></text>
</g>
<g>
<title>CompiledMethod::is_compiled() const (2 samples, 0.05%)</title><rect x="147.1" y="1059.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="150.1" y="1070.0"></text>
</g>
<g>
<title>GrowableArray&lt;Metadata*&gt;::append(Metadata* const&amp;) (1 samples, 0.02%)</title><rect x="147.6" y="1059.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="150.6" y="1070.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 0.02%)</title><rect x="147.9" y="1059.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="150.9" y="1070.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.269] (1 samples, 0.02%)</title><rect x="147.9" y="1043.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="150.9" y="1054.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (2 samples, 0.05%)</title><rect x="148.2" y="1059.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="151.2" y="1070.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (8 samples, 0.18%)</title><rect x="148.7" y="1059.0" width="2.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="151.7" y="1070.0"></text>
</g>
<g>
<title>AbstractInterpreter::size_top_interpreter_activation(Method*) (1 samples, 0.02%)</title><rect x="148.7" y="1043.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="151.7" y="1054.0"></text>
</g>
<g>
<title>HandleMark::~HandleMark() (1 samples, 0.02%)</title><rect x="149.0" y="1043.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="152.0" y="1054.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_block(Thread*) (1 samples, 0.02%)</title><rect x="149.3" y="1043.0" width="0.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="152.3" y="1054.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (2 samples, 0.05%)</title><rect x="149.5" y="1043.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="152.5" y="1054.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_block(Thread*) (1 samples, 0.02%)</title><rect x="149.8" y="1027.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="152.8" y="1038.0"></text>
</g>
<g>
<title>JavaThread::can_call_java() const (1 samples, 0.02%)</title><rect x="150.1" y="1043.0" width="0.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="153.1" y="1054.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.02%)</title><rect x="150.3" y="1043.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="153.3" y="1054.0"></text>
</g>
<g>
<title>os::stack_shadow_pages_available(Thread*, methodHandle const&amp;, unsigned char*) (1 samples, 0.02%)</title><rect x="150.6" y="1043.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="153.6" y="1054.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.02%)</title><rect x="150.9" y="1059.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="153.9" y="1070.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (1 samples, 0.02%)</title><rect x="151.2" y="1059.0" width="0.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="154.2" y="1070.0"></text>
</g>
<g>
<title>RegisterMap::RegisterMap(JavaThread*, bool) (1 samples, 0.02%)</title><rect x="151.4" y="1059.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="154.4" y="1070.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.209] (1 samples, 0.02%)</title><rect x="151.7" y="1059.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="154.7" y="1070.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (3 samples, 0.07%)</title><rect x="152.0" y="1059.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="155.0" y="1070.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (3 samples, 0.07%)</title><rect x="152.0" y="1043.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="155.0" y="1054.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.02%)</title><rect x="152.2" y="1027.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="155.2" y="1038.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (1 samples, 0.02%)</title><rect x="152.5" y="1027.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="155.5" y="1038.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (4 samples, 0.09%)</title><rect x="152.8" y="1059.0" width="1.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="155.8" y="1070.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (1 samples, 0.02%)</title><rect x="152.8" y="1043.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="155.8" y="1054.0"></text>
</g>
<g>
<title>Klass::is_subclass_of(Klass const*) const (1 samples, 0.02%)</title><rect x="152.8" y="1027.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="155.8" y="1038.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (3 samples, 0.07%)</title><rect x="153.1" y="1043.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="156.1" y="1054.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (2 samples, 0.05%)</title><rect x="153.3" y="1027.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="156.3" y="1038.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (2 samples, 0.05%)</title><rect x="153.3" y="1011.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="156.3" y="1022.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (2 samples, 0.05%)</title><rect x="153.3" y="995.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="156.3" y="1006.0"></text>
</g>
<g>
<title>_init (1 samples, 0.02%)</title><rect x="153.9" y="1075.0" width="0.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="156.9" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$163/1956467138.run (10 samples, 0.23%)</title><rect x="154.1" y="1075.0" width="2.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="157.1" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (10 samples, 0.23%)</title><rect x="154.1" y="1059.0" width="2.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="157.1" y="1070.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (10 samples, 0.23%)</title><rect x="154.1" y="1043.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="157.1" y="1054.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (9 samples, 0.21%)</title><rect x="154.1" y="1027.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="157.1" y="1038.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (9 samples, 0.21%)</title><rect x="154.1" y="1011.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="157.1" y="1022.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (7 samples, 0.16%)</title><rect x="154.7" y="995.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="157.7" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.02%)</title><rect x="154.7" y="979.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="157.7" y="990.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (6 samples, 0.14%)</title><rect x="155.0" y="979.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="158.0" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (2 samples, 0.05%)</title><rect x="155.0" y="963.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="158.0" y="974.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.02%)</title><rect x="155.0" y="947.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="158.0" y="958.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.02%)</title><rect x="155.2" y="947.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="158.2" y="958.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.02%)</title><rect x="155.2" y="931.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="158.2" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListSet.iterator (4 samples, 0.09%)</title><rect x="155.5" y="963.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="158.5" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$KeySet.iterator (3 samples, 0.07%)</title><rect x="155.8" y="947.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="158.8" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$KeyIterator.&lt;init&gt; (3 samples, 0.07%)</title><rect x="155.8" y="931.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="158.8" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Iter.&lt;init&gt; (1 samples, 0.02%)</title><rect x="156.3" y="915.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="159.3" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Iter.advance (1 samples, 0.02%)</title><rect x="156.3" y="899.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="159.3" y="910.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress$InetSocketAddressHolder.&lt;init&gt; (1 samples, 0.02%)</title><rect x="156.6" y="1027.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="159.6" y="1038.0"></text>
</g>
<g>
<title>os::os_exception_wrapper(void (*)(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*), JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.02%)</title><rect x="156.9" y="1075.0" width="0.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="159.9" y="1086.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (1 samples, 0.02%)</title><rect x="157.1" y="1075.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="160.1" y="1086.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (1 samples, 0.02%)</title><rect x="157.4" y="1075.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="160.4" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.proxy (1 samples, 0.02%)</title><rect x="157.7" y="1091.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="160.7" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="157.9" y="1203.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="160.9" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="157.9" y="1187.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="160.9" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2 samples, 0.05%)</title><rect x="158.2" y="1235.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="161.2" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2 samples, 0.05%)</title><rect x="158.2" y="1219.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="161.2" y="1230.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.05%)</title><rect x="158.2" y="1203.0" width="0.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="161.2" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.version (2 samples, 0.05%)</title><rect x="158.8" y="1235.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="161.8" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.version (2 samples, 0.05%)</title><rect x="158.8" y="1219.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="161.8" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (2 samples, 0.05%)</title><rect x="158.8" y="1203.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="161.8" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getConnectionFor (8 samples, 0.18%)</title><rect x="159.3" y="1235.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="162.3" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (2 samples, 0.05%)</title><rect x="159.3" y="1219.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="162.3" y="1230.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.05%)</title><rect x="159.3" y="1203.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="162.3" y="1214.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.02%)</title><rect x="159.3" y="1187.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="162.3" y="1198.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="159.3" y="1171.0" width="0.3" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="162.3" y="1182.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.02%)</title><rect x="159.6" y="1187.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="162.6" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyFor (6 samples, 0.14%)</title><rect x="159.8" y="1219.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="162.8" y="1230.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (3 samples, 0.07%)</title><rect x="159.8" y="1203.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="162.8" y="1214.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.05%)</title><rect x="160.1" y="1187.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="163.1" y="1198.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.05%)</title><rect x="160.1" y="1171.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="163.1" y="1182.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.02%)</title><rect x="160.4" y="1155.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="163.4" y="1166.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.02%)</title><rect x="160.4" y="1139.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="163.4" y="1150.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (1 samples, 0.02%)</title><rect x="160.4" y="1123.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="163.4" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyString (3 samples, 0.07%)</title><rect x="160.7" y="1203.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="163.7" y="1214.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/888960014.linkToTargetMethod (3 samples, 0.07%)</title><rect x="160.7" y="1187.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="163.7" y="1198.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1103745955.invoke (3 samples, 0.07%)</title><rect x="160.7" y="1171.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="163.7" y="1182.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="160.7" y="1155.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="163.7" y="1166.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.mixLen (1 samples, 0.02%)</title><rect x="160.7" y="1139.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="163.7" y="1150.0"></text>
</g>
<g>
<title>java/lang/Integer.stringSize (1 samples, 0.02%)</title><rect x="160.7" y="1123.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="163.7" y="1134.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/642648282.invoke (2 samples, 0.05%)</title><rect x="160.9" y="1155.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="163.9" y="1166.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.05%)</title><rect x="160.9" y="1139.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="163.9" y="1150.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (2 samples, 0.05%)</title><rect x="160.9" y="1123.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="163.9" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.02%)</title><rect x="160.9" y="1107.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="163.9" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.02%)</title><rect x="160.9" y="1091.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="163.9" y="1102.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.02%)</title><rect x="161.2" y="1107.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="164.2" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.timeout (1 samples, 0.02%)</title><rect x="161.5" y="1315.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="164.5" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.requestFilters (5 samples, 0.12%)</title><rect x="161.7" y="1315.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="164.7" y="1326.0"></text>
</g>
<g>
<title>java/util/AbstractSequentialList.iterator (2 samples, 0.05%)</title><rect x="161.7" y="1299.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="164.7" y="1310.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (2 samples, 0.05%)</title><rect x="161.7" y="1283.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="164.7" y="1294.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (2 samples, 0.05%)</title><rect x="161.7" y="1267.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="164.7" y="1278.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.&lt;init&gt; (2 samples, 0.05%)</title><rect x="161.7" y="1251.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="164.7" y="1262.0"></text>
</g>
<g>
<title>java/util/LinkedList.node (2 samples, 0.05%)</title><rect x="161.7" y="1235.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="164.7" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.request (2 samples, 0.05%)</title><rect x="162.3" y="1299.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="165.3" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (1 samples, 0.02%)</title><rect x="162.6" y="1283.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="165.6" y="1294.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.get (1 samples, 0.02%)</title><rect x="162.6" y="1267.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="165.6" y="1278.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.hash (1 samples, 0.02%)</title><rect x="162.6" y="1251.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="165.6" y="1262.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (1 samples, 0.02%)</title><rect x="162.6" y="1235.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="165.6" y="1246.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.02%)</title><rect x="162.6" y="1219.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="165.6" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RedirectFilter.request (1 samples, 0.02%)</title><rect x="162.8" y="1299.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="165.8" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$135/145822461.get (1 samples, 0.02%)</title><rect x="163.1" y="1395.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="166.1" y="1406.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.lock (4 samples, 0.09%)</title><rect x="163.4" y="1411.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="166.4" y="1422.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (4 samples, 0.09%)</title><rect x="163.4" y="1395.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="166.4" y="1406.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.tryAcquire (4 samples, 0.09%)</title><rect x="163.4" y="1379.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="166.4" y="1390.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (4 samples, 0.09%)</title><rect x="163.4" y="1363.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="166.4" y="1374.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (4 samples, 0.09%)</title><rect x="163.4" y="1347.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="166.4" y="1358.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (4 samples, 0.09%)</title><rect x="163.4" y="1331.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="166.4" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (3 samples, 0.07%)</title><rect x="164.5" y="1411.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="167.5" y="1422.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.07%)</title><rect x="164.5" y="1395.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="167.5" y="1406.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.tryRelease (3 samples, 0.07%)</title><rect x="164.5" y="1379.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="167.5" y="1390.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.setState (3 samples, 0.07%)</title><rect x="164.5" y="1363.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="167.5" y="1374.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (545 samples, 12.54%)</title><rect x="165.3" y="1411.0" width="147.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="168.3" y="1422.0">java/util/concurren..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (509 samples, 11.71%)</title><rect x="167.4" y="1395.0" width="138.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="170.4" y="1406.0">java/util/concurr..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.dequeue (1 samples, 0.02%)</title><rect x="168.0" y="1379.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="171.0" y="1390.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (377 samples, 8.67%)</title><rect x="168.3" y="1379.0" width="102.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="171.3" y="1390.0">java/util/co..</text>
</g>
<g>
<title>java/lang/Thread.interrupted (10 samples, 0.23%)</title><rect x="168.3" y="1363.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="171.3" y="1374.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (2 samples, 0.05%)</title><rect x="171.0" y="1363.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="174.0" y="1374.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (12 samples, 0.28%)</title><rect x="171.5" y="1363.0" width="3.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="174.5" y="1374.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.setHead (1 samples, 0.02%)</title><rect x="172.1" y="1347.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="175.1" y="1358.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.shouldParkAfterFailedAcquire (2 samples, 0.05%)</title><rect x="172.3" y="1347.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="175.3" y="1358.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (2 samples, 0.05%)</title><rect x="172.9" y="1347.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="175.9" y="1358.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (2 samples, 0.05%)</title><rect x="172.9" y="1331.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="175.9" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (2 samples, 0.05%)</title><rect x="172.9" y="1315.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="175.9" y="1326.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (2 samples, 0.05%)</title><rect x="172.9" y="1299.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="175.9" y="1310.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (2 samples, 0.05%)</title><rect x="172.9" y="1283.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="175.9" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquire (5 samples, 0.12%)</title><rect x="173.4" y="1347.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="176.4" y="1358.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (51 samples, 1.17%)</title><rect x="174.8" y="1363.0" width="13.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="177.8" y="1374.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (51 samples, 1.17%)</title><rect x="174.8" y="1347.0" width="13.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="177.8" y="1358.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (47 samples, 1.08%)</title><rect x="175.0" y="1331.0" width="12.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="178.0" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (47 samples, 1.08%)</title><rect x="175.0" y="1315.0" width="12.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="178.0" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (47 samples, 1.08%)</title><rect x="175.0" y="1299.0" width="12.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="178.0" y="1310.0"></text>
</g>
<g>
<title>Unsafe_Unpark (3 samples, 0.07%)</title><rect x="175.0" y="1283.0" width="0.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="178.0" y="1294.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.02%)</title><rect x="175.0" y="1267.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="178.0" y="1278.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_lock (1 samples, 0.02%)</title><rect x="175.3" y="1267.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="178.3" y="1278.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.02%)</title><rect x="175.6" y="1267.0" width="0.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="178.6" y="1278.0"></text>
</g>
<g>
<title>__pthread_cond_signal (44 samples, 1.01%)</title><rect x="175.9" y="1283.0" width="11.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="178.9" y="1294.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (35 samples, 0.81%)</title><rect x="178.3" y="1267.0" width="9.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="181.3" y="1278.0"></text>
</g>
<g>
<title>do_syscall_64 (35 samples, 0.81%)</title><rect x="178.3" y="1251.0" width="9.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="181.3" y="1262.0"></text>
</g>
<g>
<title>__x64_sys_futex (33 samples, 0.76%)</title><rect x="178.8" y="1235.0" width="9.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="181.8" y="1246.0"></text>
</g>
<g>
<title>do_futex (33 samples, 0.76%)</title><rect x="178.8" y="1219.0" width="9.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="181.8" y="1230.0"></text>
</g>
<g>
<title>futex_wake (33 samples, 0.76%)</title><rect x="178.8" y="1203.0" width="9.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="181.8" y="1214.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.02%)</title><rect x="179.1" y="1187.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="182.1" y="1198.0"></text>
</g>
<g>
<title>mark_wake_futex (6 samples, 0.14%)</title><rect x="179.4" y="1187.0" width="1.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="182.4" y="1198.0"></text>
</g>
<g>
<title>__unqueue_futex (1 samples, 0.02%)</title><rect x="180.7" y="1171.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="183.7" y="1182.0"></text>
</g>
<g>
<title>plist_del (1 samples, 0.02%)</title><rect x="180.7" y="1155.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="183.7" y="1166.0"></text>
</g>
<g>
<title>wake_up_q (25 samples, 0.58%)</title><rect x="181.0" y="1187.0" width="6.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="184.0" y="1198.0"></text>
</g>
<g>
<title>try_to_wake_up (25 samples, 0.58%)</title><rect x="181.0" y="1171.0" width="6.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="184.0" y="1182.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (24 samples, 0.55%)</title><rect x="181.3" y="1155.0" width="6.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="184.3" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (3 samples, 0.07%)</title><rect x="187.8" y="1331.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="190.8" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.isOnSyncQueue (1 samples, 0.02%)</title><rect x="188.6" y="1363.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="191.6" y="1374.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (301 samples, 6.92%)</title><rect x="188.9" y="1363.0" width="81.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="191.9" y="1374.0">java/util..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (300 samples, 6.90%)</title><rect x="189.2" y="1347.0" width="81.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="192.2" y="1358.0">jdk/inter..</text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.02%)</title><rect x="190.0" y="1331.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="193.0" y="1342.0"></text>
</g>
<g>
<title>Unsafe_Park (120 samples, 2.76%)</title><rect x="190.2" y="1331.0" width="32.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="193.2" y="1342.0">Un..</text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.02%)</title><rect x="191.1" y="1315.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="194.1" y="1326.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.02%)</title><rect x="191.3" y="1315.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="194.3" y="1326.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (30 samples, 0.69%)</title><rect x="191.6" y="1315.0" width="8.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="194.6" y="1326.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (8 samples, 0.18%)</title><rect x="194.9" y="1299.0" width="2.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="197.9" y="1310.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="196.8" y="1283.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="199.8" y="1294.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="196.8" y="1267.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="199.8" y="1278.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="196.8" y="1251.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="199.8" y="1262.0"></text>
</g>
<g>
<title>Monitor::unlock() (3 samples, 0.07%)</title><rect x="197.0" y="1299.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="200.0" y="1310.0"></text>
</g>
<g>
<title>__tls_get_addr (7 samples, 0.16%)</title><rect x="197.8" y="1299.0" width="1.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="200.8" y="1310.0"></text>
</g>
<g>
<title>Thread::is_interrupted(Thread*, bool) (1 samples, 0.02%)</title><rect x="199.7" y="1315.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="202.7" y="1326.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (7 samples, 0.16%)</title><rect x="200.0" y="1315.0" width="1.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="203.0" y="1326.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.229] (3 samples, 0.07%)</title><rect x="201.9" y="1315.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="204.9" y="1326.0"></text>
</g>
<g>
<title>__lll_unlock_wake (63 samples, 1.45%)</title><rect x="202.7" y="1315.0" width="17.1" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="205.7" y="1326.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (28 samples, 0.64%)</title><rect x="212.2" y="1299.0" width="7.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="215.2" y="1310.0"></text>
</g>
<g>
<title>do_syscall_64 (28 samples, 0.64%)</title><rect x="212.2" y="1283.0" width="7.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="215.2" y="1294.0"></text>
</g>
<g>
<title>__x64_sys_futex (14 samples, 0.32%)</title><rect x="216.0" y="1267.0" width="3.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="219.0" y="1278.0"></text>
</g>
<g>
<title>do_futex (13 samples, 0.30%)</title><rect x="216.3" y="1251.0" width="3.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="219.3" y="1262.0"></text>
</g>
<g>
<title>futex_wake (12 samples, 0.28%)</title><rect x="216.6" y="1235.0" width="3.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="219.6" y="1246.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="217.9" y="1219.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="220.9" y="1230.0"></text>
</g>
<g>
<title>get_futex_key (5 samples, 0.12%)</title><rect x="218.2" y="1219.0" width="1.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="221.2" y="1230.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.0 (2 samples, 0.05%)</title><rect x="219.0" y="1203.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="222.0" y="1214.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.02%)</title><rect x="219.6" y="1219.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="222.6" y="1230.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.02%)</title><rect x="219.8" y="1315.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="222.8" y="1326.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (3 samples, 0.07%)</title><rect x="220.1" y="1315.0" width="0.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="223.1" y="1326.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.02%)</title><rect x="220.9" y="1315.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="223.9" y="1326.0"></text>
</g>
<g>
<title>_init (2 samples, 0.05%)</title><rect x="221.2" y="1315.0" width="0.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="224.2" y="1326.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (2 samples, 0.05%)</title><rect x="221.7" y="1315.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="224.7" y="1326.0"></text>
</g>
<g>
<title>pthread_mutex_trylock (2 samples, 0.05%)</title><rect x="222.3" y="1315.0" width="0.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="225.3" y="1326.0"></text>
</g>
<g>
<title>[unknown] (175 samples, 4.03%)</title><rect x="222.8" y="1331.0" width="47.5" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="225.8" y="1342.0">[unk..</text>
</g>
<g>
<title>.annobin_pthread_cond_wait.c (1 samples, 0.02%)</title><rect x="222.8" y="1315.0" width="0.3" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="225.8" y="1326.0"></text>
</g>
<g>
<title>__condvar_dec_grefs (2 samples, 0.05%)</title><rect x="223.1" y="1315.0" width="0.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="226.1" y="1326.0"></text>
</g>
<g>
<title>__pthread_cond_wait (164 samples, 3.77%)</title><rect x="223.6" y="1315.0" width="44.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="226.6" y="1326.0">__pt..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (122 samples, 2.81%)</title><rect x="235.0" y="1299.0" width="33.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="238.0" y="1310.0">en..</text>
</g>
<g>
<title>do_syscall_64 (122 samples, 2.81%)</title><rect x="235.0" y="1283.0" width="33.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="238.0" y="1294.0">do..</text>
</g>
<g>
<title>__x64_sys_futex (110 samples, 2.53%)</title><rect x="238.3" y="1267.0" width="29.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="241.3" y="1278.0">__..</text>
</g>
<g>
<title>do_futex (106 samples, 2.44%)</title><rect x="239.4" y="1251.0" width="28.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="242.4" y="1262.0">do..</text>
</g>
<g>
<title>futex_wait (104 samples, 2.39%)</title><rect x="239.9" y="1235.0" width="28.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="242.9" y="1246.0">fu..</text>
</g>
<g>
<title>futex_wait_queue_me (64 samples, 1.47%)</title><rect x="244.5" y="1219.0" width="17.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="247.5" y="1230.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.02%)</title><rect x="246.7" y="1203.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="249.7" y="1214.0"></text>
</g>
<g>
<title>plist_add (3 samples, 0.07%)</title><rect x="247.0" y="1203.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="250.0" y="1214.0"></text>
</g>
<g>
<title>schedule (52 samples, 1.20%)</title><rect x="247.8" y="1203.0" width="14.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="250.8" y="1214.0"></text>
</g>
<g>
<title>__sched_text_start (48 samples, 1.10%)</title><rect x="248.9" y="1187.0" width="13.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="251.9" y="1198.0"></text>
</g>
<g>
<title>finish_task_switch (40 samples, 0.92%)</title><rect x="251.0" y="1171.0" width="10.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="254.0" y="1182.0"></text>
</g>
<g>
<title>futex_wait_setup (23 samples, 0.53%)</title><rect x="261.9" y="1219.0" width="6.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="264.9" y="1230.0"></text>
</g>
<g>
<title>get_futex_key (3 samples, 0.07%)</title><rect x="265.2" y="1203.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="268.2" y="1214.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.0 (1 samples, 0.02%)</title><rect x="265.7" y="1187.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="268.7" y="1198.0"></text>
</g>
<g>
<title>get_futex_value_locked (8 samples, 0.18%)</title><rect x="266.0" y="1203.0" width="2.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="269.0" y="1214.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (4 samples, 0.09%)</title><rect x="268.2" y="1315.0" width="1.0" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="271.2" y="1326.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (1 samples, 0.02%)</title><rect x="269.2" y="1315.0" width="0.3" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="272.2" y="1326.0"></text>
</g>
<g>
<title>pthread_mutex_trylock (3 samples, 0.07%)</title><rect x="269.5" y="1315.0" width="0.8" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="272.5" y="1326.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="270.1" y="1299.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="273.1" y="1310.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="270.1" y="1283.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="273.1" y="1294.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="270.1" y="1267.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="273.1" y="1278.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.02%)</title><rect x="270.3" y="1331.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="273.3" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (20 samples, 0.46%)</title><rect x="270.6" y="1379.0" width="5.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="273.6" y="1390.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (20 samples, 0.46%)</title><rect x="270.6" y="1363.0" width="5.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="273.6" y="1374.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (11 samples, 0.25%)</title><rect x="271.7" y="1347.0" width="3.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="274.7" y="1358.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (6 samples, 0.14%)</title><rect x="272.2" y="1331.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="275.2" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (6 samples, 0.14%)</title><rect x="272.2" y="1315.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="275.2" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.setBlocker (4 samples, 0.09%)</title><rect x="272.2" y="1299.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="275.2" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.05%)</title><rect x="273.3" y="1299.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="276.3" y="1310.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.02%)</title><rect x="273.3" y="1283.0" width="0.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="276.3" y="1294.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.02%)</title><rect x="273.3" y="1267.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="276.3" y="1278.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.02%)</title><rect x="273.3" y="1251.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="276.3" y="1262.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="273.6" y="1283.0" width="0.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="276.6" y="1294.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.02%)</title><rect x="273.6" y="1267.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="276.6" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.setHead (3 samples, 0.07%)</title><rect x="273.9" y="1331.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="276.9" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (5 samples, 0.12%)</title><rect x="274.7" y="1347.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="277.7" y="1358.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (3 samples, 0.07%)</title><rect x="275.2" y="1331.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="278.2" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.setExclusiveOwnerThread (1 samples, 0.02%)</title><rect x="275.2" y="1315.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="278.2" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (2 samples, 0.05%)</title><rect x="275.5" y="1315.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="278.5" y="1326.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (2 samples, 0.05%)</title><rect x="275.5" y="1299.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="278.5" y="1310.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (2 samples, 0.05%)</title><rect x="275.5" y="1283.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="278.5" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (109 samples, 2.51%)</title><rect x="276.0" y="1379.0" width="29.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="279.0" y="1390.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (109 samples, 2.51%)</title><rect x="276.0" y="1363.0" width="29.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="279.0" y="1374.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (109 samples, 2.51%)</title><rect x="276.0" y="1347.0" width="29.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="279.0" y="1358.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (109 samples, 2.51%)</title><rect x="276.0" y="1331.0" width="29.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="279.0" y="1342.0">ja..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (109 samples, 2.51%)</title><rect x="276.0" y="1315.0" width="29.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="279.0" y="1326.0">jd..</text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.229] (1 samples, 0.02%)</title><rect x="276.3" y="1299.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="279.3" y="1310.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.02%)</title><rect x="276.6" y="1299.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="279.6" y="1310.0"></text>
</g>
<g>
<title>Unsafe_Unpark (25 samples, 0.58%)</title><rect x="276.8" y="1299.0" width="6.8" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="279.8" y="1310.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.02%)</title><rect x="276.8" y="1283.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="279.8" y="1294.0"></text>
</g>
<g>
<title>Parker::unpark() (1 samples, 0.02%)</title><rect x="277.1" y="1283.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="280.1" y="1294.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.229] (5 samples, 0.12%)</title><rect x="277.4" y="1283.0" width="1.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="280.4" y="1294.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="278.2" y="1267.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="281.2" y="1278.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="278.2" y="1251.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="281.2" y="1262.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="278.2" y="1235.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="281.2" y="1246.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="278.2" y="1219.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="281.2" y="1230.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="278.2" y="1203.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="281.2" y="1214.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="278.2" y="1187.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="281.2" y="1198.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="278.5" y="1267.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="281.5" y="1278.0"></text>
</g>
<g>
<title>do_IRQ (1 samples, 0.02%)</title><rect x="278.5" y="1251.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="281.5" y="1262.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="278.5" y="1235.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="281.5" y="1246.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="278.5" y="1219.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="281.5" y="1230.0"></text>
</g>
<g>
<title>blk_done_softirq (1 samples, 0.02%)</title><rect x="278.5" y="1203.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="281.5" y="1214.0"></text>
</g>
<g>
<title>scsi_io_completion (1 samples, 0.02%)</title><rect x="278.5" y="1187.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="281.5" y="1198.0"></text>
</g>
<g>
<title>scsi_end_request (1 samples, 0.02%)</title><rect x="278.5" y="1171.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="281.5" y="1182.0"></text>
</g>
<g>
<title>blk_update_request (1 samples, 0.02%)</title><rect x="278.5" y="1155.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="281.5" y="1166.0"></text>
</g>
<g>
<title>ext4_end_bio (1 samples, 0.02%)</title><rect x="278.5" y="1139.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="281.5" y="1150.0"></text>
</g>
<g>
<title>ext4_finish_bio (1 samples, 0.02%)</title><rect x="278.5" y="1123.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="281.5" y="1134.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (2 samples, 0.05%)</title><rect x="278.7" y="1283.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="281.7" y="1294.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (4 samples, 0.09%)</title><rect x="279.3" y="1283.0" width="1.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="282.3" y="1294.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.02%)</title><rect x="280.4" y="1283.0" width="0.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="283.4" y="1294.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_lock (5 samples, 0.12%)</title><rect x="280.6" y="1283.0" width="1.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="283.6" y="1294.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.02%)</title><rect x="282.0" y="1283.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="285.0" y="1294.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (5 samples, 0.12%)</title><rect x="282.3" y="1283.0" width="1.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="285.3" y="1294.0"></text>
</g>
<g>
<title>__pthread_cond_signal (81 samples, 1.86%)</title><rect x="283.6" y="1299.0" width="22.0" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="286.6" y="1310.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (68 samples, 1.56%)</title><rect x="287.2" y="1283.0" width="18.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="290.2" y="1294.0"></text>
</g>
<g>
<title>do_syscall_64 (68 samples, 1.56%)</title><rect x="287.2" y="1267.0" width="18.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="290.2" y="1278.0"></text>
</g>
<g>
<title>__x64_sys_futex (65 samples, 1.50%)</title><rect x="288.0" y="1251.0" width="17.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="291.0" y="1262.0"></text>
</g>
<g>
<title>do_futex (64 samples, 1.47%)</title><rect x="288.2" y="1235.0" width="17.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="291.2" y="1246.0"></text>
</g>
<g>
<title>futex_wake (64 samples, 1.47%)</title><rect x="288.2" y="1219.0" width="17.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="291.2" y="1230.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="288.2" y="1203.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="291.2" y="1214.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.02%)</title><rect x="288.5" y="1203.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="291.5" y="1214.0"></text>
</g>
<g>
<title>__unqueue_futex (1 samples, 0.02%)</title><rect x="288.5" y="1187.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="291.5" y="1198.0"></text>
</g>
<g>
<title>plist_del (1 samples, 0.02%)</title><rect x="288.5" y="1171.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="291.5" y="1182.0"></text>
</g>
<g>
<title>wake_q_add_safe (1 samples, 0.02%)</title><rect x="288.8" y="1203.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="291.8" y="1214.0"></text>
</g>
<g>
<title>wake_up_q (61 samples, 1.40%)</title><rect x="289.1" y="1203.0" width="16.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="292.1" y="1214.0"></text>
</g>
<g>
<title>try_to_wake_up (61 samples, 1.40%)</title><rect x="289.1" y="1187.0" width="16.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="292.1" y="1198.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (61 samples, 1.40%)</title><rect x="289.1" y="1171.0" width="16.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="292.1" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.take (28 samples, 0.64%)</title><rect x="305.6" y="1395.0" width="7.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="308.6" y="1406.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.take (28 samples, 0.64%)</title><rect x="305.6" y="1379.0" width="7.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="308.6" y="1390.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.awaitNanos (24 samples, 0.55%)</title><rect x="306.7" y="1363.0" width="6.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="309.7" y="1374.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (1 samples, 0.02%)</title><rect x="306.7" y="1347.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="309.7" y="1358.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (1 samples, 0.02%)</title><rect x="306.7" y="1331.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="309.7" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.isOnSyncQueue (1 samples, 0.02%)</title><rect x="307.0" y="1347.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="310.0" y="1358.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.findNodeFromTail (1 samples, 0.02%)</title><rect x="307.0" y="1331.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="310.0" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkNanos (22 samples, 0.51%)</title><rect x="307.2" y="1347.0" width="6.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="310.2" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (22 samples, 0.51%)</title><rect x="307.2" y="1331.0" width="6.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="310.2" y="1342.0"></text>
</g>
<g>
<title>Unsafe_Park (9 samples, 0.21%)</title><rect x="307.2" y="1315.0" width="2.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="310.2" y="1326.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (1 samples, 0.02%)</title><rect x="307.2" y="1299.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="310.2" y="1310.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (4 samples, 0.09%)</title><rect x="307.5" y="1299.0" width="1.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="310.5" y="1310.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.05%)</title><rect x="307.8" y="1283.0" width="0.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="310.8" y="1294.0"></text>
</g>
<g>
<title>to_abstime(timespec*, long, bool) (1 samples, 0.02%)</title><rect x="308.3" y="1283.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="311.3" y="1294.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.02%)</title><rect x="308.6" y="1299.0" width="0.3" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="311.6" y="1310.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.02%)</title><rect x="308.9" y="1299.0" width="0.2" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="311.9" y="1310.0"></text>
</g>
<g>
<title>_init (1 samples, 0.02%)</title><rect x="309.1" y="1299.0" width="0.3" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="312.1" y="1310.0"></text>
</g>
<g>
<title>pthread_mutex_trylock (1 samples, 0.02%)</title><rect x="309.4" y="1299.0" width="0.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="312.4" y="1310.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.28%)</title><rect x="309.7" y="1315.0" width="3.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="312.7" y="1326.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (11 samples, 0.25%)</title><rect x="309.7" y="1299.0" width="3.0" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="312.7" y="1310.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.23%)</title><rect x="310.0" y="1283.0" width="2.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="313.0" y="1294.0"></text>
</g>
<g>
<title>do_syscall_64 (10 samples, 0.23%)</title><rect x="310.0" y="1267.0" width="2.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="313.0" y="1278.0"></text>
</g>
<g>
<title>__x64_sys_futex (9 samples, 0.21%)</title><rect x="310.2" y="1251.0" width="2.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="313.2" y="1262.0"></text>
</g>
<g>
<title>do_futex (9 samples, 0.21%)</title><rect x="310.2" y="1235.0" width="2.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="313.2" y="1246.0"></text>
</g>
<g>
<title>futex_wait (9 samples, 0.21%)</title><rect x="310.2" y="1219.0" width="2.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="313.2" y="1230.0"></text>
</g>
<g>
<title>__hrtimer_init (1 samples, 0.02%)</title><rect x="310.5" y="1203.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="313.5" y="1214.0"></text>
</g>
<g>
<title>futex_wait_queue_me (5 samples, 0.12%)</title><rect x="310.8" y="1203.0" width="1.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="313.8" y="1214.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (1 samples, 0.02%)</title><rect x="311.0" y="1187.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="314.0" y="1198.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="311.0" y="1171.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="314.0" y="1182.0"></text>
</g>
<g>
<title>schedule (3 samples, 0.07%)</title><rect x="311.3" y="1187.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="314.3" y="1198.0"></text>
</g>
<g>
<title>__sched_text_start (3 samples, 0.07%)</title><rect x="311.3" y="1171.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="314.3" y="1182.0"></text>
</g>
<g>
<title>finish_task_switch (3 samples, 0.07%)</title><rect x="311.3" y="1155.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="314.3" y="1166.0"></text>
</g>
<g>
<title>futex_wait_setup (1 samples, 0.02%)</title><rect x="312.1" y="1203.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="315.1" y="1214.0"></text>
</g>
<g>
<title>hrtimer_cancel (1 samples, 0.02%)</title><rect x="312.4" y="1203.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="315.4" y="1214.0"></text>
</g>
<g>
<title>hrtimer_try_to_cancel (1 samples, 0.02%)</title><rect x="312.4" y="1187.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="315.4" y="1198.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="312.4" y="1171.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="315.4" y="1182.0"></text>
</g>
<g>
<title>pthread_mutex_trylock (1 samples, 0.02%)</title><rect x="312.7" y="1299.0" width="0.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="315.7" y="1310.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.02%)</title><rect x="312.9" y="1315.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="315.9" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$247/1271722553.run (532 samples, 12.24%)</title><rect x="313.2" y="1411.0" width="144.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="316.2" y="1422.0">jdk/internal/net/h..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (529 samples, 12.17%)</title><rect x="314.0" y="1395.0" width="143.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="317.0" y="1406.0">jdk/internal/net/h..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (528 samples, 12.15%)</title><rect x="314.3" y="1379.0" width="143.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="317.3" y="1390.0">jdk/internal/net/h..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (518 samples, 11.92%)</title><rect x="316.7" y="1363.0" width="140.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="319.7" y="1374.0">jdk/internal/net/h..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (518 samples, 11.92%)</title><rect x="316.7" y="1347.0" width="140.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="319.7" y="1358.0">jdk/internal/net/h..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (518 samples, 11.92%)</title><rect x="316.7" y="1331.0" width="140.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="319.7" y="1342.0">jdk/internal/net/h..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (518 samples, 11.92%)</title><rect x="316.7" y="1315.0" width="140.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="319.7" y="1326.0">jdk/internal/net/h..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$98/505021446.getAsBoolean (1 samples, 0.02%)</title><rect x="316.7" y="1299.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="319.7" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.isSelectorThread (1 samples, 0.02%)</title><rect x="316.7" y="1283.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="319.7" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (517 samples, 11.89%)</title><rect x="317.0" y="1299.0" width="140.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="320.0" y="1310.0">jdk/internal/net/h..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (517 samples, 11.89%)</title><rect x="317.0" y="1283.0" width="140.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="320.0" y="1294.0">jdk/internal/net/h..</text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (2 samples, 0.05%)</title><rect x="317.0" y="1267.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="320.0" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (2 samples, 0.05%)</title><rect x="317.0" y="1251.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="320.0" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (2 samples, 0.05%)</title><rect x="317.0" y="1235.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="320.0" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (2 samples, 0.05%)</title><rect x="317.0" y="1219.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="320.0" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (2 samples, 0.05%)</title><rect x="317.0" y="1203.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="320.0" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (2 samples, 0.05%)</title><rect x="317.0" y="1187.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="320.0" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (2 samples, 0.05%)</title><rect x="317.0" y="1171.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="320.0" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (2 samples, 0.05%)</title><rect x="317.0" y="1155.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="320.0" y="1166.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.02%)</title><rect x="317.0" y="1139.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="320.0" y="1150.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.weakCompareAndSet (1 samples, 0.02%)</title><rect x="317.0" y="1123.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="320.0" y="1134.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="317.0" y="1107.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="320.0" y="1118.0"></text>
</g>
<g>
<title>do_IRQ (1 samples, 0.02%)</title><rect x="317.0" y="1091.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="320.0" y="1102.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="317.0" y="1075.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="320.0" y="1086.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="317.0" y="1059.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="320.0" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (1 samples, 0.02%)</title><rect x="317.3" y="1139.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="320.3" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (515 samples, 11.85%)</title><rect x="317.6" y="1267.0" width="139.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="320.6" y="1278.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (515 samples, 11.85%)</title><rect x="317.6" y="1251.0" width="139.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="320.6" y="1262.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (63 samples, 1.45%)</title><rect x="318.1" y="1235.0" width="17.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="321.1" y="1246.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="318.6" y="1219.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="321.6" y="1230.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="318.6" y="1203.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="321.6" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$275/1824837738.get$Lambda (1 samples, 0.02%)</title><rect x="318.6" y="1187.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="321.6" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (50 samples, 1.15%)</title><rect x="318.9" y="1219.0" width="13.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="321.9" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (49 samples, 1.13%)</title><rect x="319.2" y="1203.0" width="13.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="322.2" y="1214.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.05%)</title><rect x="319.2" y="1187.0" width="0.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="322.2" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (47 samples, 1.08%)</title><rect x="319.7" y="1187.0" width="12.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="322.7" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (44 samples, 1.01%)</title><rect x="320.5" y="1171.0" width="12.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="323.5" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (7 samples, 0.16%)</title><rect x="321.4" y="1155.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="324.4" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1 samples, 0.02%)</title><rect x="321.4" y="1139.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="324.4" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (1 samples, 0.02%)</title><rect x="321.4" y="1123.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="324.4" y="1134.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.02%)</title><rect x="321.4" y="1107.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="324.4" y="1118.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.weakCompareAndSet (1 samples, 0.02%)</title><rect x="321.4" y="1091.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="324.4" y="1102.0"></text>
</g>
<g>
<title>java/util/function/Function$$Lambda$33/433287555.apply (1 samples, 0.02%)</title><rect x="321.6" y="1139.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="324.6" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$267/1020030449.apply (4 samples, 0.09%)</title><rect x="321.9" y="1139.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="324.9" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (4 samples, 0.09%)</title><rect x="321.9" y="1123.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="324.9" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (4 samples, 0.09%)</title><rect x="321.9" y="1107.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="324.9" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (2 samples, 0.05%)</title><rect x="322.4" y="1091.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="325.4" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (2 samples, 0.05%)</title><rect x="322.4" y="1075.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="325.4" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (2 samples, 0.05%)</title><rect x="322.4" y="1059.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="325.4" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (2 samples, 0.05%)</title><rect x="322.4" y="1043.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="325.4" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$201/376986198.apply (1 samples, 0.02%)</title><rect x="322.4" y="1027.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="325.4" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$1 (1 samples, 0.02%)</title><rect x="322.4" y="1011.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="325.4" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (1 samples, 0.02%)</title><rect x="322.4" y="995.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="325.4" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (1 samples, 0.02%)</title><rect x="322.4" y="979.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="325.4" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getSettingsString (1 samples, 0.02%)</title><rect x="322.4" y="963.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="325.4" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getClientSettings (1 samples, 0.02%)</title><rect x="322.4" y="947.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="325.4" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getParameter (1 samples, 0.02%)</title><rect x="322.4" y="931.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="325.4" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getIntegerNetProperty (1 samples, 0.02%)</title><rect x="322.4" y="915.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="325.4" y="926.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/896644936.linkToTargetMethod (1 samples, 0.02%)</title><rect x="322.4" y="899.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="325.4" y="910.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="322.4" y="883.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="325.4" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$61/1212772528.get$Lambda (1 samples, 0.02%)</title><rect x="322.4" y="867.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="325.4" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$61/1212772528.&lt;init&gt; (1 samples, 0.02%)</title><rect x="322.4" y="851.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="325.4" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$309/980063472.apply (1 samples, 0.02%)</title><rect x="322.7" y="1027.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="325.7" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (1 samples, 0.02%)</title><rect x="322.7" y="1011.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="325.7" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpResponseImpl.&lt;init&gt; (1 samples, 0.02%)</title><rect x="322.7" y="995.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="325.7" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$132/1112562714.apply (1 samples, 0.02%)</title><rect x="323.0" y="1139.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="326.0" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (1 samples, 0.02%)</title><rect x="323.0" y="1123.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="326.0" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (1 samples, 0.02%)</title><rect x="323.0" y="1107.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="326.0" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (1 samples, 0.02%)</title><rect x="323.0" y="1091.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="326.0" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (1 samples, 0.02%)</title><rect x="323.0" y="1075.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="326.0" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1 samples, 0.02%)</title><rect x="323.0" y="1059.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="326.0" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$288/1452226218.run (1 samples, 0.02%)</title><rect x="323.0" y="1043.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="326.0" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (1 samples, 0.02%)</title><rect x="323.0" y="1027.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="326.0" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (1 samples, 0.02%)</title><rect x="323.0" y="1011.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="326.0" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.02%)</title><rect x="323.0" y="995.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="326.0" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.02%)</title><rect x="323.0" y="979.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="326.0" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1 samples, 0.02%)</title><rect x="323.0" y="963.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="326.0" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1 samples, 0.02%)</title><rect x="323.0" y="947.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="326.0" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (1 samples, 0.02%)</title><rect x="323.0" y="931.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="326.0" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$199/1509846524.run (1 samples, 0.02%)</title><rect x="323.0" y="915.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="326.0" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (1 samples, 0.02%)</title><rect x="323.0" y="899.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="326.0" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (1 samples, 0.02%)</title><rect x="323.0" y="883.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="326.0" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (1 samples, 0.02%)</title><rect x="323.0" y="867.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="326.0" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (1 samples, 0.02%)</title><rect x="323.0" y="851.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="326.0" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$290/1089333161.run (1 samples, 0.02%)</title><rect x="323.0" y="835.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="326.0" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (1 samples, 0.02%)</title><rect x="323.0" y="819.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="326.0" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (1 samples, 0.02%)</title><rect x="323.0" y="803.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="326.0" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (1 samples, 0.02%)</title><rect x="323.0" y="787.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="326.0" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (1 samples, 0.02%)</title><rect x="323.0" y="771.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="326.0" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (1 samples, 0.02%)</title><rect x="323.0" y="755.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="326.0" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (1 samples, 0.02%)</title><rect x="323.0" y="739.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="326.0" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (1 samples, 0.02%)</title><rect x="323.0" y="723.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="326.0" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (1 samples, 0.02%)</title><rect x="323.0" y="707.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="326.0" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (1 samples, 0.02%)</title><rect x="323.0" y="691.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="326.0" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (1 samples, 0.02%)</title><rect x="323.0" y="675.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="326.0" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (1 samples, 0.02%)</title><rect x="323.0" y="659.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="326.0" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (1 samples, 0.02%)</title><rect x="323.0" y="643.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="326.0" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (1 samples, 0.02%)</title><rect x="323.0" y="627.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="326.0" y="638.0"></text>
</g>
<g>
<title>__libc_write (1 samples, 0.02%)</title><rect x="323.0" y="611.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="326.0" y="622.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="323.0" y="595.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="326.0" y="606.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="323.0" y="579.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="326.0" y="590.0"></text>
</g>
<g>
<title>ksys_write (1 samples, 0.02%)</title><rect x="323.0" y="563.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="326.0" y="574.0"></text>
</g>
<g>
<title>vfs_write (1 samples, 0.02%)</title><rect x="323.0" y="547.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="326.0" y="558.0"></text>
</g>
<g>
<title>new_sync_write (1 samples, 0.02%)</title><rect x="323.0" y="531.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="326.0" y="542.0"></text>
</g>
<g>
<title>pipe_write (1 samples, 0.02%)</title><rect x="323.0" y="515.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="326.0" y="526.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.02%)</title><rect x="323.0" y="499.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="326.0" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (31 samples, 0.71%)</title><rect x="323.3" y="1155.0" width="8.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="326.3" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (31 samples, 0.71%)</title><rect x="323.3" y="1139.0" width="8.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="326.3" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2 samples, 0.05%)</title><rect x="323.3" y="1123.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="326.3" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (2 samples, 0.05%)</title><rect x="323.3" y="1107.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="326.3" y="1118.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.05%)</title><rect x="323.3" y="1091.0" width="0.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="326.3" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$235/542698874.apply (29 samples, 0.67%)</title><rect x="323.8" y="1123.0" width="7.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="326.8" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (29 samples, 0.67%)</title><rect x="323.8" y="1107.0" width="7.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="326.8" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (29 samples, 0.67%)</title><rect x="323.8" y="1091.0" width="7.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="326.8" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$148/2053429061.apply (14 samples, 0.32%)</title><rect x="323.8" y="1075.0" width="3.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="326.8" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (14 samples, 0.32%)</title><rect x="323.8" y="1059.0" width="3.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="326.8" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2 samples, 0.05%)</title><rect x="323.8" y="1043.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="326.8" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2 samples, 0.05%)</title><rect x="323.8" y="1027.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="326.8" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.&lt;init&gt; (1 samples, 0.02%)</title><rect x="324.1" y="1011.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="327.1" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (1 samples, 0.02%)</title><rect x="324.1" y="995.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="327.1" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (12 samples, 0.28%)</title><rect x="324.3" y="1043.0" width="3.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="327.3" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (7 samples, 0.16%)</title><rect x="324.3" y="1027.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="327.3" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (7 samples, 0.16%)</title><rect x="324.3" y="1011.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="327.3" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptNow (7 samples, 0.16%)</title><rect x="324.3" y="995.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="327.3" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$263/580364296.accept (7 samples, 0.16%)</title><rect x="324.3" y="979.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="327.3" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$8 (7 samples, 0.16%)</title><rect x="324.3" y="963.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="327.3" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.requestMoreBody (7 samples, 0.16%)</title><rect x="324.3" y="947.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="327.3" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.request (7 samples, 0.16%)</title><rect x="324.3" y="931.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="327.3" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.request (7 samples, 0.16%)</title><rect x="324.3" y="915.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="327.3" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (7 samples, 0.16%)</title><rect x="324.3" y="899.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="327.3" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (7 samples, 0.16%)</title><rect x="324.3" y="883.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="327.3" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicInteger.compareAndSet (2 samples, 0.05%)</title><rect x="324.3" y="867.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="327.3" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (5 samples, 0.12%)</title><rect x="324.9" y="867.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="327.9" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (5 samples, 0.12%)</title><rect x="324.9" y="851.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="327.9" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (5 samples, 0.12%)</title><rect x="324.9" y="835.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="327.9" y="846.0"></text>
</g>
<g>
<title>java/util/ArrayList$Itr.next (1 samples, 0.02%)</title><rect x="324.9" y="819.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="327.9" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (2 samples, 0.05%)</title><rect x="325.2" y="819.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="328.2" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (2 samples, 0.05%)</title><rect x="325.2" y="803.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="328.2" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (2 samples, 0.05%)</title><rect x="325.2" y="787.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="328.2" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (2 samples, 0.05%)</title><rect x="325.2" y="771.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="328.2" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (2 samples, 0.05%)</title><rect x="325.2" y="755.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="328.2" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (2 samples, 0.05%)</title><rect x="325.2" y="739.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="328.2" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (2 samples, 0.05%)</title><rect x="325.2" y="723.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="328.2" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (1 samples, 0.02%)</title><rect x="325.4" y="707.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="328.4" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (1 samples, 0.02%)</title><rect x="325.4" y="691.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="328.4" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.tryDecrement (2 samples, 0.05%)</title><rect x="325.7" y="819.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="328.7" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.decreaseAndGet (1 samples, 0.02%)</title><rect x="325.7" y="803.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="328.7" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.02%)</title><rect x="326.0" y="803.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="329.0" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.continueRequest (5 samples, 0.12%)</title><rect x="326.2" y="1027.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="329.2" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.subscribe (5 samples, 0.12%)</title><rect x="326.2" y="1011.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="329.2" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.copy (5 samples, 0.12%)</title><rect x="326.2" y="995.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="329.2" y="1006.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2 samples, 0.05%)</title><rect x="326.2" y="979.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="329.2" y="990.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.05%)</title><rect x="326.2" y="963.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="329.2" y="974.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.05%)</title><rect x="326.2" y="947.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="329.2" y="958.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.05%)</title><rect x="326.2" y="931.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="329.2" y="942.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (2 samples, 0.05%)</title><rect x="326.2" y="915.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="329.2" y="926.0"></text>
</g>
<g>
<title>register_finalizer Runtime1 stub (2 samples, 0.05%)</title><rect x="326.2" y="899.0" width="0.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="329.2" y="910.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3 samples, 0.07%)</title><rect x="326.8" y="979.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="329.8" y="990.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3 samples, 0.07%)</title><rect x="326.8" y="963.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="329.8" y="974.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (3 samples, 0.07%)</title><rect x="326.8" y="947.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="329.8" y="958.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (3 samples, 0.07%)</title><rect x="326.8" y="931.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="329.8" y="942.0"></text>
</g>
<g>
<title>java/util/ArrayList.newCapacity (1 samples, 0.02%)</title><rect x="326.8" y="915.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="329.8" y="926.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.05%)</title><rect x="327.1" y="915.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="330.1" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$149/2119912657.apply (15 samples, 0.35%)</title><rect x="327.6" y="1075.0" width="4.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="330.6" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (15 samples, 0.35%)</title><rect x="327.6" y="1059.0" width="4.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="330.6" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (15 samples, 0.35%)</title><rect x="327.6" y="1043.0" width="4.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="330.6" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (15 samples, 0.35%)</title><rect x="327.6" y="1027.0" width="4.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="330.6" y="1038.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="327.9" y="1011.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="330.9" y="1022.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="327.9" y="995.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="330.9" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.&lt;init&gt; (11 samples, 0.25%)</title><rect x="328.1" y="1011.0" width="3.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="331.1" y="1022.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.02%)</title><rect x="330.6" y="995.0" width="0.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="333.6" y="1006.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="330.6" y="979.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="333.6" y="990.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="330.6" y="963.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="333.6" y="974.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.02%)</title><rect x="330.6" y="947.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="333.6" y="958.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.02%)</title><rect x="330.6" y="931.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="333.6" y="942.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.02%)</title><rect x="330.6" y="915.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="333.6" y="926.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.02%)</title><rect x="330.6" y="899.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="333.6" y="910.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.02%)</title><rect x="330.6" y="883.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="333.6" y="894.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="330.6" y="867.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="333.6" y="878.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.02%)</title><rect x="330.9" y="995.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="333.9" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (2 samples, 0.05%)</title><rect x="331.1" y="1011.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="334.1" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (2 samples, 0.05%)</title><rect x="331.1" y="995.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="334.1" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.createHttpLogger (2 samples, 0.05%)</title><rect x="331.1" y="979.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="334.1" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.levelEnabledFor (1 samples, 0.02%)</title><rect x="331.4" y="963.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="334.4" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.tryFire (1 samples, 0.02%)</title><rect x="331.7" y="1155.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="334.7" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (2 samples, 0.05%)</title><rect x="331.9" y="1155.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="334.9" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (2 samples, 0.05%)</title><rect x="331.9" y="1139.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="334.9" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2 samples, 0.05%)</title><rect x="331.9" y="1123.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="334.9" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (2 samples, 0.05%)</title><rect x="331.9" y="1107.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="334.9" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (2 samples, 0.05%)</title><rect x="331.9" y="1091.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="334.9" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (2 samples, 0.05%)</title><rect x="331.9" y="1075.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="334.9" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (2 samples, 0.05%)</title><rect x="331.9" y="1059.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="334.9" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.05%)</title><rect x="331.9" y="1043.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="334.9" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.05%)</title><rect x="331.9" y="1027.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="334.9" y="1038.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 0.05%)</title><rect x="331.9" y="1011.0" width="0.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="334.9" y="1022.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.05%)</title><rect x="331.9" y="995.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="334.9" y="1006.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.05%)</title><rect x="331.9" y="979.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="334.9" y="990.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.05%)</title><rect x="331.9" y="963.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="334.9" y="974.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.05%)</title><rect x="331.9" y="947.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="334.9" y="958.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.05%)</title><rect x="331.9" y="931.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="334.9" y="942.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.05%)</title><rect x="331.9" y="915.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="334.9" y="926.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.02%)</title><rect x="332.2" y="899.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="335.2" y="910.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="332.2" y="883.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="335.2" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.pollFirst (6 samples, 0.14%)</title><rect x="332.5" y="1219.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="335.5" y="1230.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.02%)</title><rect x="333.0" y="1203.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="336.0" y="1214.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.02%)</title><rect x="333.0" y="1187.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="336.0" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.unlink (3 samples, 0.07%)</title><rect x="333.3" y="1203.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="336.3" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.skipDeletedPredecessors (1 samples, 0.02%)</title><rect x="333.6" y="1187.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="336.6" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.unlinkLast (1 samples, 0.02%)</title><rect x="333.8" y="1187.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="336.8" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (4 samples, 0.09%)</title><rect x="334.1" y="1219.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="337.1" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$275/1824837738.run (3 samples, 0.07%)</title><rect x="334.1" y="1203.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="337.1" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.requestMoreBody (2 samples, 0.05%)</title><rect x="334.4" y="1187.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="337.4" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.request (2 samples, 0.05%)</title><rect x="334.4" y="1171.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="337.4" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.request (1 samples, 0.02%)</title><rect x="334.7" y="1155.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="337.7" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.02%)</title><rect x="334.7" y="1139.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="337.7" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.02%)</title><rect x="334.7" y="1123.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="337.7" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1 samples, 0.02%)</title><rect x="334.7" y="1107.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="337.7" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$98/505021446.getAsBoolean (1 samples, 0.02%)</title><rect x="334.9" y="1203.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="337.9" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.isSelectorThread (1 samples, 0.02%)</title><rect x="334.9" y="1187.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="337.9" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.hasOutgoing (3 samples, 0.07%)</title><rect x="335.2" y="1235.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="338.2" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (3 samples, 0.07%)</title><rect x="335.2" y="1219.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="338.2" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (3 samples, 0.07%)</title><rect x="335.2" y="1203.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="338.2" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (447 samples, 10.28%)</title><rect x="336.0" y="1235.0" width="121.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="339.0" y="1246.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (447 samples, 10.28%)</title><rect x="336.0" y="1219.0" width="121.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="339.0" y="1230.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (447 samples, 10.28%)</title><rect x="336.0" y="1203.0" width="121.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="339.0" y="1214.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (447 samples, 10.28%)</title><rect x="336.0" y="1187.0" width="121.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="339.0" y="1198.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$274/1744778345.run (5 samples, 0.12%)</title><rect x="337.4" y="1171.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="340.4" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (5 samples, 0.12%)</title><rect x="337.4" y="1155.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="340.4" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (5 samples, 0.12%)</title><rect x="337.4" y="1139.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="340.4" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (1 samples, 0.02%)</title><rect x="338.5" y="1123.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="341.5" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (435 samples, 10.01%)</title><rect x="338.7" y="1171.0" width="118.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="341.7" y="1182.0">jdk/internal/n..</text>
</g>
<g>
<title>java/nio/channels/SocketChannel.write (429 samples, 9.87%)</title><rect x="339.0" y="1155.0" width="116.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="342.0" y="1166.0">java/nio/chann..</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (429 samples, 9.87%)</title><rect x="339.0" y="1139.0" width="116.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="342.0" y="1150.0">sun/nio/ch/Soc..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.02%)</title><rect x="339.0" y="1123.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="342.0" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.02%)</title><rect x="339.0" y="1107.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="342.0" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (1 samples, 0.02%)</title><rect x="339.0" y="1091.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="342.0" y="1102.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$ListItr.next (1 samples, 0.02%)</title><rect x="339.0" y="1075.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="342.0" y="1086.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (428 samples, 9.85%)</title><rect x="339.3" y="1123.0" width="116.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="342.3" y="1134.0">sun/nio/ch/IOU..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (428 samples, 9.85%)</title><rect x="339.3" y="1107.0" width="116.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="342.3" y="1118.0">sun/nio/ch/IOU..</text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (1 samples, 0.02%)</title><rect x="339.8" y="1091.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="342.8" y="1102.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (1 samples, 0.02%)</title><rect x="339.8" y="1075.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="342.8" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (1 samples, 0.02%)</title><rect x="339.8" y="1059.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="342.8" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (1 samples, 0.02%)</title><rect x="339.8" y="1043.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="342.8" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (1 samples, 0.02%)</title><rect x="339.8" y="1027.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="342.8" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitiveArray (1 samples, 0.02%)</title><rect x="339.8" y="1011.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="342.8" y="1022.0"></text>
</g>
<g>
<title>java/lang/Class.getComponentType (1 samples, 0.02%)</title><rect x="339.8" y="995.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="342.8" y="1006.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.flip (4 samples, 0.09%)</title><rect x="340.1" y="1091.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="343.1" y="1102.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.flip (4 samples, 0.09%)</title><rect x="340.1" y="1075.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="343.1" y="1086.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.flip (4 samples, 0.09%)</title><rect x="340.1" y="1059.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="343.1" y="1070.0"></text>
</g>
<g>
<title>java/nio/Buffer.flip (4 samples, 0.09%)</title><rect x="340.1" y="1043.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="343.1" y="1054.0"></text>
</g>
<g>
<title>sun/nio/ch/IOVecWrapper.setBuffer (1 samples, 0.02%)</title><rect x="341.2" y="1091.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="344.2" y="1102.0"></text>
</g>
<g>
<title>jshort_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="341.2" y="1075.0" width="0.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="344.2" y="1086.0"></text>
</g>
<g>
<title>sun/nio/ch/IOVecWrapper.setShadow (1 samples, 0.02%)</title><rect x="341.4" y="1091.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="344.4" y="1102.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="341.4" y="1075.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="344.4" y="1086.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="341.4" y="1059.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="344.4" y="1070.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="341.4" y="1043.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="344.4" y="1054.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="341.4" y="1027.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="344.4" y="1038.0"></text>
</g>
<g>
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="341.4" y="1011.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="344.4" y="1022.0"></text>
</g>
<g>
<title>call_timer_fn (1 samples, 0.02%)</title><rect x="341.4" y="995.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="344.4" y="1006.0"></text>
</g>
<g>
<title>tcp_delack_timer (1 samples, 0.02%)</title><rect x="341.4" y="979.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="344.4" y="990.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="341.4" y="963.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="344.4" y="974.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.writev (407 samples, 9.36%)</title><rect x="341.7" y="1091.0" width="110.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="344.7" y="1102.0">sun/nio/ch/So..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (407 samples, 9.36%)</title><rect x="341.7" y="1075.0" width="110.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="344.7" y="1086.0">sun/nio/ch/Fi..</text>
</g>
<g>
<title>.annobin_writev.c (401 samples, 9.22%)</title><rect x="343.1" y="1059.0" width="108.8" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="346.1" y="1070.0">.annobin_writ..</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (4 samples, 0.09%)</title><rect x="348.5" y="1043.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="351.5" y="1054.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="349.6" y="1043.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="352.6" y="1054.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="349.6" y="1027.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="352.6" y="1038.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="349.6" y="1011.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="352.6" y="1022.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="349.6" y="995.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="352.6" y="1006.0"></text>
</g>
<g>
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="349.6" y="979.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="352.6" y="990.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (376 samples, 8.65%)</title><rect x="349.9" y="1043.0" width="102.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="352.9" y="1054.0">entry_SYSCAL..</text>
</g>
<g>
<title>do_syscall_64 (376 samples, 8.65%)</title><rect x="349.9" y="1027.0" width="102.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="352.9" y="1038.0">do_syscall_64</text>
</g>
<g>
<title>do_writev (369 samples, 8.49%)</title><rect x="350.9" y="1011.0" width="100.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="353.9" y="1022.0">do_writev</text>
</g>
<g>
<title>__fdget_pos (2 samples, 0.05%)</title><rect x="351.2" y="995.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="354.2" y="1006.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.05%)</title><rect x="351.2" y="979.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="354.2" y="990.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.02%)</title><rect x="351.5" y="963.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="354.5" y="974.0"></text>
</g>
<g>
<title>fput (1 samples, 0.02%)</title><rect x="351.8" y="995.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="354.8" y="1006.0"></text>
</g>
<g>
<title>vfs_writev (365 samples, 8.40%)</title><rect x="352.0" y="995.0" width="99.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="355.0" y="1006.0">vfs_writev</text>
</g>
<g>
<title>do_iter_write (362 samples, 8.33%)</title><rect x="352.0" y="979.0" width="98.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="355.0" y="990.0">do_iter_write</text>
</g>
<g>
<title>__fsnotify_parent (1 samples, 0.02%)</title><rect x="352.3" y="963.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="355.3" y="974.0"></text>
</g>
<g>
<title>do_iter_readv_writev (349 samples, 8.03%)</title><rect x="352.6" y="963.0" width="94.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="355.6" y="974.0">do_iter_rea..</text>
</g>
<g>
<title>sock_write_iter (346 samples, 7.96%)</title><rect x="353.4" y="947.0" width="93.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="356.4" y="958.0">sock_write_..</text>
</g>
<g>
<title>sock_sendmsg (345 samples, 7.94%)</title><rect x="353.7" y="931.0" width="93.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="356.7" y="942.0">sock_sendmsg</text>
</g>
<g>
<title>security_socket_sendmsg (4 samples, 0.09%)</title><rect x="353.9" y="915.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="356.9" y="926.0"></text>
</g>
<g>
<title>selinux_socket_sendmsg (1 samples, 0.02%)</title><rect x="354.2" y="899.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="357.2" y="910.0"></text>
</g>
<g>
<title>sock_has_perm (2 samples, 0.05%)</title><rect x="354.5" y="899.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="357.5" y="910.0"></text>
</g>
<g>
<title>tcp_sendmsg (340 samples, 7.82%)</title><rect x="355.0" y="915.0" width="92.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="358.0" y="926.0">tcp_sendmsg</text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.02%)</title><rect x="355.3" y="899.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="358.3" y="910.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.02%)</title><rect x="355.3" y="883.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="358.3" y="894.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.02%)</title><rect x="355.6" y="899.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="358.6" y="910.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.02%)</title><rect x="355.6" y="883.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="358.6" y="894.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (337 samples, 7.75%)</title><rect x="355.8" y="899.0" width="91.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="358.8" y="910.0">tcp_sendmsg..</text>
</g>
<g>
<title>__check_object_size (1 samples, 0.02%)</title><rect x="357.5" y="883.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="360.5" y="894.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.02%)</title><rect x="357.5" y="867.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="360.5" y="878.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (299 samples, 6.88%)</title><rect x="357.7" y="883.0" width="81.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="360.7" y="894.0">__tcp_pus..</text>
</g>
<g>
<title>tcp_write_xmit (299 samples, 6.88%)</title><rect x="357.7" y="867.0" width="81.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="360.7" y="878.0">tcp_write..</text>
</g>
<g>
<title>__tcp_transmit_skb (276 samples, 6.35%)</title><rect x="359.1" y="851.0" width="74.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="362.1" y="862.0">__tcp_tr..</text>
</g>
<g>
<title>__ip_queue_xmit (266 samples, 6.12%)</title><rect x="360.2" y="835.0" width="72.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="363.2" y="846.0">__ip_que..</text>
</g>
<g>
<title>__sk_dst_check (3 samples, 0.07%)</title><rect x="360.4" y="819.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="363.4" y="830.0"></text>
</g>
<g>
<title>ipv4_dst_check (2 samples, 0.05%)</title><rect x="360.7" y="803.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="363.7" y="814.0"></text>
</g>
<g>
<title>ip_local_out (73 samples, 1.68%)</title><rect x="361.3" y="819.0" width="19.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="364.3" y="830.0"></text>
</g>
<g>
<title>__ip_local_out (73 samples, 1.68%)</title><rect x="361.3" y="803.0" width="19.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="364.3" y="814.0"></text>
</g>
<g>
<title>nf_hook_slow (72 samples, 1.66%)</title><rect x="361.5" y="787.0" width="19.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="364.5" y="798.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="361.8" y="771.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="364.8" y="782.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (19 samples, 0.44%)</title><rect x="362.1" y="771.0" width="5.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="365.1" y="782.0"></text>
</g>
<g>
<title>iptable_filter_hook	[iptable_filter] (2 samples, 0.05%)</title><rect x="367.2" y="771.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="370.2" y="782.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (7 samples, 0.16%)</title><rect x="367.8" y="771.0" width="1.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="370.8" y="782.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (3 samples, 0.07%)</title><rect x="368.9" y="755.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="371.9" y="766.0"></text>
</g>
<g>
<title>iptable_raw_hook	[iptable_raw] (6 samples, 0.14%)</title><rect x="369.7" y="771.0" width="1.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="372.7" y="782.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag	[nf_defrag_ipv4] (3 samples, 0.07%)</title><rect x="371.3" y="771.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="374.3" y="782.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (28 samples, 0.64%)</title><rect x="372.1" y="771.0" width="7.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="375.1" y="782.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get	[nf_conntrack] (8 samples, 0.18%)</title><rect x="372.7" y="755.0" width="2.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="375.7" y="766.0"></text>
</g>
<g>
<title>get_l4proto	[nf_conntrack] (1 samples, 0.02%)</title><rect x="374.8" y="755.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="377.8" y="766.0"></text>
</g>
<g>
<title>hash_conntrack_raw	[nf_conntrack] (1 samples, 0.02%)</title><rect x="375.1" y="755.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="378.1" y="766.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet	[nf_conntrack] (13 samples, 0.30%)</title><rect x="375.4" y="755.0" width="3.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="378.4" y="766.0"></text>
</g>
<g>
<title>__nf_ct_refresh_acct	[nf_conntrack] (1 samples, 0.02%)</title><rect x="378.6" y="739.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="381.6" y="750.0"></text>
</g>
<g>
<title>nf_ct_get_tuple	[nf_conntrack] (3 samples, 0.07%)</title><rect x="378.9" y="755.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="381.9" y="766.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn	[nf_nat] (4 samples, 0.09%)</title><rect x="379.7" y="771.0" width="1.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="382.7" y="782.0"></text>
</g>
<g>
<title>nf_nat_packet	[nf_nat] (2 samples, 0.05%)</title><rect x="380.3" y="755.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="383.3" y="766.0"></text>
</g>
<g>
<title>selinux_ipv4_output (1 samples, 0.02%)</title><rect x="380.8" y="771.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="383.8" y="782.0"></text>
</g>
<g>
<title>ip_output (189 samples, 4.35%)</title><rect x="381.1" y="819.0" width="51.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="384.1" y="830.0">ip_ou..</text>
</g>
<g>
<title>ip_finish_output2 (171 samples, 3.93%)</title><rect x="381.3" y="803.0" width="46.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="384.3" y="814.0">ip_f..</text>
</g>
<g>
<title>__dev_queue_xmit (17 samples, 0.39%)</title><rect x="382.2" y="787.0" width="4.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="385.2" y="798.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (13 samples, 0.30%)</title><rect x="382.7" y="771.0" width="3.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="385.7" y="782.0"></text>
</g>
<g>
<title>loopback_xmit (13 samples, 0.30%)</title><rect x="382.7" y="755.0" width="3.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="385.7" y="766.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.02%)</title><rect x="382.7" y="739.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="385.7" y="750.0"></text>
</g>
<g>
<title>netif_rx (9 samples, 0.21%)</title><rect x="383.0" y="739.0" width="2.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="386.0" y="750.0"></text>
</g>
<g>
<title>netif_rx_internal (9 samples, 0.21%)</title><rect x="383.0" y="723.0" width="2.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="386.0" y="734.0"></text>
</g>
<g>
<title>enqueue_to_backlog (5 samples, 0.12%)</title><rect x="384.1" y="707.0" width="1.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="387.1" y="718.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (2 samples, 0.05%)</title><rect x="385.4" y="739.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="388.4" y="750.0"></text>
</g>
<g>
<title>tcp_wfree (1 samples, 0.02%)</title><rect x="386.0" y="739.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="389.0" y="750.0"></text>
</g>
<g>
<title>validate_xmit_skb (2 samples, 0.05%)</title><rect x="386.2" y="771.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="389.2" y="782.0"></text>
</g>
<g>
<title>skb_csum_hwoffload_help (1 samples, 0.02%)</title><rect x="386.5" y="755.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="389.5" y="766.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (151 samples, 3.47%)</title><rect x="386.8" y="787.0" width="41.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="389.8" y="798.0">__l..</text>
</g>
<g>
<title>do_softirq.part.0 (150 samples, 3.45%)</title><rect x="387.0" y="771.0" width="40.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="390.0" y="782.0">do_..</text>
</g>
<g>
<title>do_softirq_own_stack (145 samples, 3.34%)</title><rect x="388.4" y="755.0" width="39.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="391.4" y="766.0">do_..</text>
</g>
<g>
<title>__softirqentry_text_start (145 samples, 3.34%)</title><rect x="388.4" y="739.0" width="39.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="391.4" y="750.0">__s..</text>
</g>
<g>
<title>net_rx_action (142 samples, 3.27%)</title><rect x="389.2" y="723.0" width="38.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="392.2" y="734.0">net..</text>
</g>
<g>
<title>__kfree_skb_flush (2 samples, 0.05%)</title><rect x="390.3" y="707.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="393.3" y="718.0"></text>
</g>
<g>
<title>process_backlog (136 samples, 3.13%)</title><rect x="390.8" y="707.0" width="37.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="393.8" y="718.0">pro..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (131 samples, 3.01%)</title><rect x="392.2" y="691.0" width="35.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="395.2" y="702.0">__n..</text>
</g>
<g>
<title>__netif_receive_skb_core (3 samples, 0.07%)</title><rect x="392.2" y="675.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="395.2" y="686.0"></text>
</g>
<g>
<title>ip_rcv (128 samples, 2.94%)</title><rect x="393.0" y="675.0" width="34.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="396.0" y="686.0">ip..</text>
</g>
<g>
<title>ip_local_deliver (97 samples, 2.23%)</title><rect x="393.6" y="659.0" width="26.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="396.6" y="670.0">i..</text>
</g>
<g>
<title>ip_local_deliver_finish (78 samples, 1.79%)</title><rect x="394.1" y="643.0" width="21.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="397.1" y="654.0">i..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (78 samples, 1.79%)</title><rect x="394.1" y="627.0" width="21.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="397.1" y="638.0">i..</text>
</g>
<g>
<title>tcp_v4_rcv (77 samples, 1.77%)</title><rect x="394.4" y="611.0" width="20.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="397.4" y="622.0"></text>
</g>
<g>
<title>__inet_lookup_established (9 samples, 0.21%)</title><rect x="395.2" y="595.0" width="2.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="398.2" y="606.0"></text>
</g>
<g>
<title>inet_ehashfn (2 samples, 0.05%)</title><rect x="397.1" y="579.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="400.1" y="590.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (4 samples, 0.09%)</title><rect x="397.6" y="595.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="400.6" y="606.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (3 samples, 0.07%)</title><rect x="397.9" y="579.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="400.9" y="590.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (3 samples, 0.07%)</title><rect x="397.9" y="563.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="400.9" y="574.0"></text>
</g>
<g>
<title>tcp_add_backlog (1 samples, 0.02%)</title><rect x="398.7" y="595.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="401.7" y="606.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (60 samples, 1.38%)</title><rect x="399.0" y="595.0" width="16.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="402.0" y="606.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.02%)</title><rect x="399.0" y="579.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="402.0" y="590.0"></text>
</g>
<g>
<title>tcp_rcv_established (59 samples, 1.36%)</title><rect x="399.3" y="579.0" width="16.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="402.3" y="590.0"></text>
</g>
<g>
<title>sk_reset_timer (4 samples, 0.09%)</title><rect x="399.5" y="563.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="402.5" y="574.0"></text>
</g>
<g>
<title>mod_timer (3 samples, 0.07%)</title><rect x="399.8" y="547.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="402.8" y="558.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="399.8" y="531.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="402.8" y="542.0"></text>
</g>
<g>
<title>lock_timer_base (2 samples, 0.05%)</title><rect x="400.1" y="531.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="403.1" y="542.0"></text>
</g>
<g>
<title>sock_def_readable (50 samples, 1.15%)</title><rect x="400.6" y="563.0" width="13.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="403.6" y="574.0"></text>
</g>
<g>
<title>__wake_up_common_lock (48 samples, 1.10%)</title><rect x="401.2" y="547.0" width="13.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="404.2" y="558.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (48 samples, 1.10%)</title><rect x="401.2" y="531.0" width="13.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="404.2" y="542.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.02%)</title><rect x="414.2" y="563.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="417.2" y="574.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.02%)</title><rect x="414.2" y="547.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="417.2" y="558.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.02%)</title><rect x="414.2" y="531.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="417.2" y="542.0"></text>
</g>
<g>
<title>tcp_queue_rcv (2 samples, 0.05%)</title><rect x="414.5" y="563.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="417.5" y="574.0"></text>
</g>
<g>
<title>tcp_try_coalesce (1 samples, 0.02%)</title><rect x="414.7" y="547.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="417.7" y="558.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (1 samples, 0.02%)</title><rect x="415.0" y="563.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="418.0" y="574.0"></text>
</g>
<g>
<title>nf_hook_slow (17 samples, 0.39%)</title><rect x="415.3" y="643.0" width="4.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="418.3" y="654.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (12 samples, 0.28%)</title><rect x="415.3" y="627.0" width="3.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="418.3" y="638.0"></text>
</g>
<g>
<title>conntrack_mt	[xt_conntrack] (2 samples, 0.05%)</title><rect x="417.7" y="611.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="420.7" y="622.0"></text>
</g>
<g>
<title>conntrack_mt_v3	[xt_conntrack] (1 samples, 0.02%)</title><rect x="418.3" y="611.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="421.3" y="622.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (1 samples, 0.02%)</title><rect x="418.5" y="627.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="421.5" y="638.0"></text>
</g>
<g>
<title>iptable_security_hook	[iptable_security] (1 samples, 0.02%)</title><rect x="418.8" y="627.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="421.8" y="638.0"></text>
</g>
<g>
<title>nf_confirm	[nf_conntrack] (1 samples, 0.02%)</title><rect x="419.1" y="627.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="422.1" y="638.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events	[nf_conntrack] (1 samples, 0.02%)</title><rect x="419.1" y="611.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="422.1" y="622.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn	[nf_nat] (1 samples, 0.02%)</title><rect x="419.3" y="627.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="422.3" y="638.0"></text>
</g>
<g>
<title>nf_nat_packet	[nf_nat] (1 samples, 0.02%)</title><rect x="419.6" y="627.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="422.6" y="638.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (1 samples, 0.02%)</title><rect x="419.9" y="659.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="422.9" y="670.0"></text>
</g>
<g>
<title>nf_hook_slow (28 samples, 0.64%)</title><rect x="420.2" y="659.0" width="7.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="423.2" y="670.0"></text>
</g>
<g>
<title>ip_sabotage_in	[br_netfilter] (1 samples, 0.02%)</title><rect x="421.2" y="643.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="424.2" y="654.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (19 samples, 0.44%)</title><rect x="421.5" y="643.0" width="5.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="424.5" y="654.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (1 samples, 0.02%)</title><rect x="426.7" y="643.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="429.7" y="654.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag	[nf_defrag_ipv4] (2 samples, 0.05%)</title><rect x="426.9" y="643.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="429.9" y="654.0"></text>
</g>
<g>
<title>ipv4_conntrack_in	[nf_conntrack] (1 samples, 0.02%)</title><rect x="427.5" y="643.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="430.5" y="654.0"></text>
</g>
<g>
<title>ip_finish_output (5 samples, 0.12%)</title><rect x="427.8" y="803.0" width="1.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="430.8" y="814.0"></text>
</g>
<g>
<title>ipv4_mtu (3 samples, 0.07%)</title><rect x="428.3" y="787.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="431.3" y="798.0"></text>
</g>
<g>
<title>nf_hook_slow (12 samples, 0.28%)</title><rect x="429.1" y="803.0" width="3.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="432.1" y="814.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (5 samples, 0.12%)</title><rect x="429.1" y="787.0" width="1.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="432.1" y="798.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (1 samples, 0.02%)</title><rect x="430.5" y="787.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="433.5" y="798.0"></text>
</g>
<g>
<title>nf_nat_ipv4_out	[nf_nat] (1 samples, 0.02%)</title><rect x="430.7" y="787.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="433.7" y="798.0"></text>
</g>
<g>
<title>selinux_ip_postroute (4 samples, 0.09%)</title><rect x="431.0" y="787.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="434.0" y="798.0"></text>
</g>
<g>
<title>selinux_peerlbl_enabled (2 samples, 0.05%)</title><rect x="431.6" y="771.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="434.6" y="782.0"></text>
</g>
<g>
<title>netlbl_enabled (1 samples, 0.02%)</title><rect x="431.8" y="755.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="434.8" y="766.0"></text>
</g>
<g>
<title>selinux_ipv4_postroute (1 samples, 0.02%)</title><rect x="432.1" y="787.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="435.1" y="798.0"></text>
</g>
<g>
<title>__tcp_select_window (1 samples, 0.02%)</title><rect x="432.4" y="835.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="435.4" y="846.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (1 samples, 0.02%)</title><rect x="432.7" y="835.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="435.7" y="846.0"></text>
</g>
<g>
<title>tcp_established_options (1 samples, 0.02%)</title><rect x="432.9" y="835.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="435.9" y="846.0"></text>
</g>
<g>
<title>tcp_options_write (1 samples, 0.02%)</title><rect x="433.2" y="835.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="436.2" y="846.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (2 samples, 0.05%)</title><rect x="433.5" y="835.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="436.5" y="846.0"></text>
</g>
<g>
<title>__list_add_valid (1 samples, 0.02%)</title><rect x="433.7" y="819.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="436.7" y="830.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.02%)</title><rect x="434.0" y="851.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="437.0" y="862.0"></text>
</g>
<g>
<title>tcp_chrono_stop (1 samples, 0.02%)</title><rect x="434.3" y="851.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="437.3" y="862.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (7 samples, 0.16%)</title><rect x="434.6" y="851.0" width="1.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="437.6" y="862.0"></text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.07%)</title><rect x="434.8" y="835.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="437.8" y="846.0"></text>
</g>
<g>
<title>mod_timer (3 samples, 0.07%)</title><rect x="434.8" y="819.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="437.8" y="830.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.05%)</title><rect x="435.1" y="803.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="438.1" y="814.0"></text>
</g>
<g>
<title>tcp_rearm_rto (3 samples, 0.07%)</title><rect x="435.6" y="835.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="438.6" y="846.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (8 samples, 0.18%)</title><rect x="436.5" y="851.0" width="2.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="439.5" y="862.0"></text>
</g>
<g>
<title>jiffies_to_usecs (2 samples, 0.05%)</title><rect x="437.0" y="835.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="440.0" y="846.0"></text>
</g>
<g>
<title>sk_reset_timer (4 samples, 0.09%)</title><rect x="437.5" y="835.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="440.5" y="846.0"></text>
</g>
<g>
<title>mod_timer (4 samples, 0.09%)</title><rect x="437.5" y="819.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="440.5" y="830.0"></text>
</g>
<g>
<title>lock_timer_base (2 samples, 0.05%)</title><rect x="438.1" y="803.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="441.1" y="814.0"></text>
</g>
<g>
<title>tcp_small_queue_check.isra.0 (1 samples, 0.02%)</title><rect x="438.6" y="851.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="441.6" y="862.0"></text>
</g>
<g>
<title>_copy_from_iter_full (1 samples, 0.02%)</title><rect x="438.9" y="883.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="441.9" y="894.0"></text>
</g>
<g>
<title>copyin (1 samples, 0.02%)</title><rect x="438.9" y="867.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="441.9" y="878.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (1 samples, 0.02%)</title><rect x="438.9" y="851.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="441.9" y="862.0"></text>
</g>
<g>
<title>sk_page_frag_refill (1 samples, 0.02%)</title><rect x="439.2" y="883.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="442.2" y="894.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (19 samples, 0.44%)</title><rect x="439.4" y="883.0" width="5.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="442.4" y="894.0"></text>
</g>
<g>
<title>__alloc_skb (15 samples, 0.35%)</title><rect x="439.7" y="867.0" width="4.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="442.7" y="878.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (9 samples, 0.21%)</title><rect x="439.7" y="851.0" width="2.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="442.7" y="862.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (8 samples, 0.18%)</title><rect x="440.0" y="835.0" width="2.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="443.0" y="846.0"></text>
</g>
<g>
<title>__slab_alloc (1 samples, 0.02%)</title><rect x="441.3" y="819.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="444.3" y="830.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.02%)</title><rect x="441.6" y="819.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="444.6" y="830.0"></text>
</g>
<g>
<title>kmalloc_slab (1 samples, 0.02%)</title><rect x="441.9" y="819.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="444.9" y="830.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (5 samples, 0.12%)</title><rect x="442.2" y="851.0" width="1.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="445.2" y="862.0"></text>
</g>
<g>
<title>__slab_alloc (1 samples, 0.02%)</title><rect x="443.2" y="835.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="446.2" y="846.0"></text>
</g>
<g>
<title>ksize (1 samples, 0.02%)</title><rect x="443.5" y="851.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="446.5" y="862.0"></text>
</g>
<g>
<title>sk_forced_mem_schedule (3 samples, 0.07%)</title><rect x="443.8" y="867.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="446.8" y="878.0"></text>
</g>
<g>
<title>skb_entail (3 samples, 0.07%)</title><rect x="444.6" y="883.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="447.6" y="894.0"></text>
</g>
<g>
<title>tcp_chrono_start (1 samples, 0.02%)</title><rect x="445.1" y="867.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="448.1" y="878.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (1 samples, 0.02%)</title><rect x="445.4" y="883.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="448.4" y="894.0"></text>
</g>
<g>
<title>tcp_send_mss (5 samples, 0.12%)</title><rect x="445.7" y="883.0" width="1.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="448.7" y="894.0"></text>
</g>
<g>
<title>tcp_current_mss (5 samples, 0.12%)</title><rect x="445.7" y="867.0" width="1.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="448.7" y="878.0"></text>
</g>
<g>
<title>ipv4_mtu (3 samples, 0.07%)</title><rect x="446.0" y="851.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="449.0" y="862.0"></text>
</g>
<g>
<title>tcp_established_options (1 samples, 0.02%)</title><rect x="446.8" y="851.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="449.8" y="862.0"></text>
</g>
<g>
<title>tcp_tx_timestamp (1 samples, 0.02%)</title><rect x="447.0" y="883.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="450.0" y="894.0"></text>
</g>
<g>
<title>security_file_permission (11 samples, 0.25%)</title><rect x="447.3" y="963.0" width="3.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="450.3" y="974.0"></text>
</g>
<g>
<title>file_has_perm (2 samples, 0.05%)</title><rect x="447.9" y="947.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="450.9" y="958.0"></text>
</g>
<g>
<title>avc_has_perm (2 samples, 0.05%)</title><rect x="447.9" y="931.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="450.9" y="942.0"></text>
</g>
<g>
<title>selinux_file_permission (7 samples, 0.16%)</title><rect x="448.4" y="947.0" width="1.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="451.4" y="958.0"></text>
</g>
<g>
<title>__inode_security_revalidate (4 samples, 0.09%)</title><rect x="449.2" y="931.0" width="1.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="452.2" y="942.0"></text>
</g>
<g>
<title>import_iovec (3 samples, 0.07%)</title><rect x="450.3" y="979.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="453.3" y="990.0"></text>
</g>
<g>
<title>rw_copy_check_uvector (3 samples, 0.07%)</title><rect x="450.3" y="963.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="453.3" y="974.0"></text>
</g>
<g>
<title>__check_object_size (1 samples, 0.02%)</title><rect x="450.6" y="947.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="453.6" y="958.0"></text>
</g>
<g>
<title>_copy_from_user (1 samples, 0.02%)</title><rect x="450.8" y="947.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="453.8" y="958.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.02%)</title><rect x="450.8" y="931.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="453.8" y="942.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (3 samples, 0.07%)</title><rect x="451.1" y="1011.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="454.1" y="1022.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="451.7" y="995.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="454.7" y="1006.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.02%)</title><rect x="451.7" y="979.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="454.7" y="990.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="451.7" y="963.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="454.7" y="974.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.02%)</title><rect x="451.9" y="1059.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="454.9" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (12 samples, 0.28%)</title><rect x="452.2" y="1091.0" width="3.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="455.2" y="1102.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (7 samples, 0.16%)</title><rect x="452.7" y="1075.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="455.7" y="1086.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (6 samples, 0.14%)</title><rect x="453.0" y="1059.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="456.0" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (3 samples, 0.07%)</title><rect x="454.6" y="1075.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="457.6" y="1086.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (3 samples, 0.07%)</title><rect x="454.6" y="1059.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="457.6" y="1070.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (3 samples, 0.07%)</title><rect x="454.6" y="1043.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="457.6" y="1054.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (3 samples, 0.07%)</title><rect x="454.6" y="1027.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="457.6" y="1038.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (2 samples, 0.05%)</title><rect x="454.9" y="1011.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="457.9" y="1022.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (5 samples, 0.12%)</title><rect x="455.5" y="1155.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="458.5" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.remaining (2 samples, 0.05%)</title><rect x="456.8" y="1171.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="459.8" y="1182.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (1 samples, 0.02%)</title><rect x="456.8" y="1155.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="459.8" y="1166.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$ListItr.&lt;init&gt; (1 samples, 0.02%)</title><rect x="456.8" y="1139.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="459.8" y="1150.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$ListItr.next (1 samples, 0.02%)</title><rect x="457.1" y="1155.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="460.1" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.debugState (1 samples, 0.02%)</title><rect x="457.4" y="1363.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="460.4" y="1374.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (499 samples, 11.48%)</title><rect x="457.6" y="1411.0" width="135.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="460.6" y="1422.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (495 samples, 11.39%)</title><rect x="458.7" y="1395.0" width="134.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="461.7" y="1406.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (1 samples, 0.02%)</title><rect x="459.3" y="1379.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="462.3" y="1390.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (8 samples, 0.18%)</title><rect x="459.5" y="1379.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="462.5" y="1390.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (3 samples, 0.07%)</title><rect x="460.3" y="1363.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="463.3" y="1374.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (3 samples, 0.07%)</title><rect x="460.3" y="1347.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="463.3" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (3 samples, 0.07%)</title><rect x="460.3" y="1331.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="463.3" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (3 samples, 0.07%)</title><rect x="460.3" y="1315.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="463.3" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (3 samples, 0.07%)</title><rect x="460.3" y="1299.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="463.3" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (3 samples, 0.07%)</title><rect x="460.3" y="1283.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="463.3" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (3 samples, 0.07%)</title><rect x="460.3" y="1267.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="463.3" y="1278.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (2 samples, 0.05%)</title><rect x="460.3" y="1251.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="463.3" y="1262.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.weakCompareAndSet (2 samples, 0.05%)</title><rect x="460.3" y="1235.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="463.3" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (1 samples, 0.02%)</title><rect x="460.9" y="1251.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="463.9" y="1262.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (1 samples, 0.02%)</title><rect x="460.9" y="1235.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="463.9" y="1246.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.set (1 samples, 0.02%)</title><rect x="460.9" y="1219.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="463.9" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (2 samples, 0.05%)</title><rect x="461.2" y="1363.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="464.2" y="1374.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (224 samples, 5.15%)</title><rect x="461.7" y="1379.0" width="60.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="464.7" y="1390.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$199/1509846524.run (224 samples, 5.15%)</title><rect x="461.7" y="1363.0" width="60.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="464.7" y="1374.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (224 samples, 5.15%)</title><rect x="461.7" y="1347.0" width="60.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="464.7" y="1358.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (39 samples, 0.90%)</title><rect x="462.2" y="1331.0" width="10.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="465.2" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (39 samples, 0.90%)</title><rect x="462.2" y="1315.0" width="10.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="465.2" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (39 samples, 0.90%)</title><rect x="462.2" y="1299.0" width="10.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="465.2" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (39 samples, 0.90%)</title><rect x="462.2" y="1283.0" width="10.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="465.2" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (38 samples, 0.87%)</title><rect x="462.5" y="1267.0" width="10.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="465.5" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (38 samples, 0.87%)</title><rect x="462.5" y="1251.0" width="10.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="465.5" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (36 samples, 0.83%)</title><rect x="462.8" y="1235.0" width="9.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="465.8" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (36 samples, 0.83%)</title><rect x="462.8" y="1219.0" width="9.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="465.8" y="1230.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.05%)</title><rect x="463.1" y="1203.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="466.1" y="1214.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (2 samples, 0.05%)</title><rect x="463.1" y="1187.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="466.1" y="1198.0"></text>
</g>
<g>
<title>ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*) (1 samples, 0.02%)</title><rect x="463.1" y="1171.0" width="0.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="466.1" y="1182.0"></text>
</g>
<g>
<title>os::PlatformEvent::unpark() (1 samples, 0.02%)</title><rect x="463.3" y="1171.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="466.3" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (33 samples, 0.76%)</title><rect x="463.6" y="1203.0" width="9.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="466.6" y="1214.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.05%)</title><rect x="463.9" y="1187.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="466.9" y="1198.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (30 samples, 0.69%)</title><rect x="464.4" y="1187.0" width="8.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="467.4" y="1198.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (30 samples, 0.69%)</title><rect x="464.4" y="1171.0" width="8.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="467.4" y="1182.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_IOUtil_write1 (1 samples, 0.02%)</title><rect x="464.4" y="1155.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="467.4" y="1166.0"></text>
</g>
<g>
<title>__libc_write (28 samples, 0.64%)</title><rect x="464.7" y="1155.0" width="7.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="467.7" y="1166.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (21 samples, 0.48%)</title><rect x="466.6" y="1139.0" width="5.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="469.6" y="1150.0"></text>
</g>
<g>
<title>do_syscall_64 (21 samples, 0.48%)</title><rect x="466.6" y="1123.0" width="5.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="469.6" y="1134.0"></text>
</g>
<g>
<title>ksys_write (18 samples, 0.41%)</title><rect x="467.4" y="1107.0" width="4.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="470.4" y="1118.0"></text>
</g>
<g>
<title>__fdget_pos (1 samples, 0.02%)</title><rect x="467.4" y="1091.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="470.4" y="1102.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.02%)</title><rect x="467.4" y="1075.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="470.4" y="1086.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.02%)</title><rect x="467.4" y="1059.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="470.4" y="1070.0"></text>
</g>
<g>
<title>vfs_write (17 samples, 0.39%)</title><rect x="467.7" y="1091.0" width="4.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="470.7" y="1102.0"></text>
</g>
<g>
<title>__fsnotify_parent (2 samples, 0.05%)</title><rect x="467.7" y="1075.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="470.7" y="1086.0"></text>
</g>
<g>
<title>new_sync_write (14 samples, 0.32%)</title><rect x="468.2" y="1075.0" width="3.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="471.2" y="1086.0"></text>
</g>
<g>
<title>pipe_write (14 samples, 0.32%)</title><rect x="468.2" y="1059.0" width="3.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="471.2" y="1070.0"></text>
</g>
<g>
<title>__wake_up_common_lock (12 samples, 0.28%)</title><rect x="468.2" y="1043.0" width="3.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="471.2" y="1054.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="468.2" y="1027.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="471.2" y="1038.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (11 samples, 0.25%)</title><rect x="468.5" y="1027.0" width="3.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="471.5" y="1038.0"></text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.02%)</title><rect x="471.5" y="1043.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="474.5" y="1054.0"></text>
</g>
<g>
<title>copy_page_from_iter (1 samples, 0.02%)</title><rect x="471.7" y="1043.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="474.7" y="1054.0"></text>
</g>
<g>
<title>copyin (1 samples, 0.02%)</title><rect x="471.7" y="1027.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="474.7" y="1038.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.02%)</title><rect x="471.7" y="1011.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="474.7" y="1022.0"></text>
</g>
<g>
<title>security_file_permission (1 samples, 0.02%)</title><rect x="472.0" y="1075.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="475.0" y="1086.0"></text>
</g>
<g>
<title>file_has_perm (1 samples, 0.02%)</title><rect x="472.0" y="1059.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="475.0" y="1070.0"></text>
</g>
<g>
<title>avc_has_perm (1 samples, 0.02%)</title><rect x="472.0" y="1043.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="475.0" y="1054.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.02%)</title><rect x="472.3" y="1155.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="475.3" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (1 samples, 0.02%)</title><rect x="472.6" y="1235.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="475.6" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (1 samples, 0.02%)</title><rect x="472.6" y="1219.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="475.6" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (1 samples, 0.02%)</title><rect x="472.8" y="1331.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="475.8" y="1342.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="472.8" y="1315.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="475.8" y="1326.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="472.8" y="1299.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="475.8" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$221/1241815609.get$Lambda (1 samples, 0.02%)</title><rect x="472.8" y="1283.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="475.8" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$221/1241815609.&lt;init&gt; (1 samples, 0.02%)</title><rect x="472.8" y="1267.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="475.8" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (182 samples, 4.19%)</title><rect x="473.1" y="1331.0" width="49.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="476.1" y="1342.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (181 samples, 4.16%)</title><rect x="473.4" y="1315.0" width="49.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="476.4" y="1326.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (181 samples, 4.16%)</title><rect x="473.4" y="1299.0" width="49.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="476.4" y="1310.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (181 samples, 4.16%)</title><rect x="473.4" y="1283.0" width="49.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="476.4" y="1294.0">jdk/i..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (92 samples, 2.12%)</title><rect x="473.6" y="1267.0" width="25.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="476.6" y="1278.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeValue (2 samples, 0.05%)</title><rect x="473.6" y="1251.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="476.6" y="1262.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (2 samples, 0.05%)</title><rect x="473.6" y="1235.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="476.6" y="1246.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (2 samples, 0.05%)</title><rect x="473.6" y="1219.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="476.6" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (90 samples, 2.07%)</title><rect x="474.2" y="1251.0" width="24.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="477.2" y="1262.0">j..</text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (3 samples, 0.07%)</title><rect x="474.2" y="1235.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="477.2" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (87 samples, 2.00%)</title><rect x="475.0" y="1235.0" width="23.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="478.0" y="1246.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (87 samples, 2.00%)</title><rect x="475.0" y="1219.0" width="23.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="478.0" y="1230.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (8 samples, 0.18%)</title><rect x="475.0" y="1203.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="478.0" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (8 samples, 0.18%)</title><rect x="475.0" y="1187.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="478.0" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (3 samples, 0.07%)</title><rect x="475.0" y="1171.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="478.0" y="1182.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LIL_V (1 samples, 0.02%)</title><rect x="475.3" y="1155.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="478.3" y="1166.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$Array.setRelease (1 samples, 0.02%)</title><rect x="475.3" y="1139.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="478.3" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (1 samples, 0.02%)</title><rect x="475.5" y="1155.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="478.5" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (5 samples, 0.12%)</title><rect x="475.8" y="1171.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="478.8" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (2 samples, 0.05%)</title><rect x="476.1" y="1155.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="479.1" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.tryFire (1 samples, 0.02%)</title><rect x="476.6" y="1155.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="479.6" y="1166.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.02%)</title><rect x="476.9" y="1155.0" width="0.3" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="479.9" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (1 samples, 0.02%)</title><rect x="477.2" y="1203.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="480.2" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (78 samples, 1.79%)</title><rect x="477.4" y="1203.0" width="21.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="480.4" y="1214.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (78 samples, 1.79%)</title><rect x="477.4" y="1187.0" width="21.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="480.4" y="1198.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (78 samples, 1.79%)</title><rect x="477.4" y="1171.0" width="21.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="480.4" y="1182.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeValue (1 samples, 0.02%)</title><rect x="477.4" y="1155.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="480.4" y="1166.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.02%)</title><rect x="477.4" y="1139.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="480.4" y="1150.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.02%)</title><rect x="477.4" y="1123.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="480.4" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (69 samples, 1.59%)</title><rect x="477.7" y="1155.0" width="18.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="480.7" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (69 samples, 1.59%)</title><rect x="477.7" y="1139.0" width="18.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="480.7" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (63 samples, 1.45%)</title><rect x="477.7" y="1123.0" width="17.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="480.7" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeRelay (1 samples, 0.02%)</title><rect x="478.0" y="1107.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="481.0" y="1118.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.02%)</title><rect x="478.0" y="1091.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="481.0" y="1102.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.02%)</title><rect x="478.0" y="1075.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="481.0" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$132/1112562714.apply (52 samples, 1.20%)</title><rect x="478.3" y="1107.0" width="14.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="481.3" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (52 samples, 1.20%)</title><rect x="478.3" y="1091.0" width="14.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="481.3" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (2 samples, 0.05%)</title><rect x="478.5" y="1075.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="481.5" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (2 samples, 0.05%)</title><rect x="478.5" y="1059.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="481.5" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (2 samples, 0.05%)</title><rect x="478.5" y="1043.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="481.5" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$201/376986198.apply (2 samples, 0.05%)</title><rect x="478.5" y="1027.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="481.5" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$1 (2 samples, 0.05%)</title><rect x="478.5" y="1011.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="481.5" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (2 samples, 0.05%)</title><rect x="478.5" y="995.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="481.5" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (2 samples, 0.05%)</title><rect x="478.5" y="979.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="481.5" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getSettingsString (2 samples, 0.05%)</title><rect x="478.5" y="963.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="481.5" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getClientSettings (2 samples, 0.05%)</title><rect x="478.5" y="947.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="481.5" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getParameter (2 samples, 0.05%)</title><rect x="478.5" y="931.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="481.5" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getIntegerNetProperty (2 samples, 0.05%)</title><rect x="478.5" y="915.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="481.5" y="926.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/896644936.linkToTargetMethod (2 samples, 0.05%)</title><rect x="478.5" y="899.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="481.5" y="910.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.05%)</title><rect x="478.5" y="883.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="481.5" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$61/1212772528.get$Lambda (2 samples, 0.05%)</title><rect x="478.5" y="867.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="481.5" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$61/1212772528.&lt;init&gt; (2 samples, 0.05%)</title><rect x="478.5" y="851.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="481.5" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (49 samples, 1.13%)</title><rect x="479.1" y="1075.0" width="13.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="482.1" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (49 samples, 1.13%)</title><rect x="479.1" y="1059.0" width="13.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="482.1" y="1070.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers$$Lambda$120/1352876739.apply (4 samples, 0.09%)</title><rect x="479.3" y="1043.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="482.3" y="1054.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers.lambda$ofByteArray$12 (4 samples, 0.09%)</title><rect x="479.3" y="1027.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="482.3" y="1038.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.ofByteArray (3 samples, 0.07%)</title><rect x="479.6" y="1011.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="482.6" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.&lt;init&gt; (2 samples, 0.05%)</title><rect x="479.9" y="995.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="482.9" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (43 samples, 0.99%)</title><rect x="480.4" y="1043.0" width="11.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="483.4" y="1054.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (10 samples, 0.23%)</title><rect x="480.4" y="1027.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="483.4" y="1038.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (1 samples, 0.02%)</title><rect x="480.4" y="1011.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="483.4" y="1022.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (1 samples, 0.02%)</title><rect x="480.4" y="995.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="483.4" y="1006.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (1 samples, 0.02%)</title><rect x="480.4" y="979.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="483.4" y="990.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (1 samples, 0.02%)</title><rect x="480.4" y="963.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="483.4" y="974.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (1 samples, 0.02%)</title><rect x="480.4" y="947.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="483.4" y="958.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.02%)</title><rect x="480.4" y="931.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="483.4" y="942.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.02%)</title><rect x="480.4" y="915.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="483.4" y="926.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.02%)</title><rect x="480.4" y="899.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="483.4" y="910.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (9 samples, 0.21%)</title><rect x="480.7" y="1011.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="483.7" y="1022.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (9 samples, 0.21%)</title><rect x="480.7" y="995.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="483.7" y="1006.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (9 samples, 0.21%)</title><rect x="480.7" y="979.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="483.7" y="990.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (9 samples, 0.21%)</title><rect x="480.7" y="963.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="483.7" y="974.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (4 samples, 0.09%)</title><rect x="480.7" y="947.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="483.7" y="958.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySpliterator.forEachRemaining (1 samples, 0.02%)</title><rect x="480.7" y="931.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="483.7" y="942.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (1 samples, 0.02%)</title><rect x="480.7" y="915.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="483.7" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment$$Lambda$238/1066786881.test (1 samples, 0.02%)</title><rect x="480.7" y="899.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="483.7" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.lambda$events$0 (1 samples, 0.02%)</title><rect x="480.7" y="883.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="483.7" y="894.0"></text>
</g>
<g>
<title>java/util/Spliterator.getExactSizeIfKnown (2 samples, 0.05%)</title><rect x="481.0" y="931.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="484.0" y="942.0"></text>
</g>
<g>
<title>java/util/HashMap$HashMapSpliterator.estimateSize (1 samples, 0.02%)</title><rect x="481.2" y="915.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="484.2" y="926.0"></text>
</g>
<g>
<title>java/lang/CharacterData.of (1 samples, 0.02%)</title><rect x="481.2" y="899.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="484.2" y="910.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (1 samples, 0.02%)</title><rect x="481.5" y="931.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="484.5" y="942.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (1 samples, 0.02%)</title><rect x="481.5" y="915.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="484.5" y="926.0"></text>
</g>
<g>
<title>java/util/AbstractList$RandomAccessSpliterator.tryAdvance (1 samples, 0.02%)</title><rect x="481.5" y="899.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="484.5" y="910.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5$1.accept (1 samples, 0.02%)</title><rect x="481.5" y="883.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="484.5" y="894.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$283/655349163.applyAsLong (1 samples, 0.02%)</title><rect x="481.5" y="867.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="484.5" y="878.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (1 samples, 0.02%)</title><rect x="481.5" y="851.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="484.5" y="862.0"></text>
</g>
<g>
<title>java/lang/Long.parseLong (1 samples, 0.02%)</title><rect x="481.5" y="835.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="484.5" y="846.0"></text>
</g>
<g>
<title>java/lang/Character.digit (1 samples, 0.02%)</title><rect x="481.5" y="819.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="484.5" y="830.0"></text>
</g>
<g>
<title>java/lang/Character.digit (1 samples, 0.02%)</title><rect x="481.5" y="803.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="484.5" y="814.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.digit (1 samples, 0.02%)</title><rect x="481.5" y="787.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="484.5" y="798.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (5 samples, 0.12%)</title><rect x="481.8" y="947.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="484.8" y="958.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (3 samples, 0.07%)</title><rect x="481.8" y="931.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="484.8" y="942.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.&lt;init&gt; (3 samples, 0.07%)</title><rect x="481.8" y="915.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="484.8" y="926.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.&lt;init&gt; (3 samples, 0.07%)</title><rect x="481.8" y="899.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="484.8" y="910.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.opWrapSink (2 samples, 0.05%)</title><rect x="482.6" y="931.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="485.6" y="942.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5$1.&lt;init&gt; (2 samples, 0.05%)</title><rect x="482.6" y="915.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="485.6" y="926.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.&lt;init&gt; (2 samples, 0.05%)</title><rect x="482.6" y="899.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="485.6" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.fixupContentLen (1 samples, 0.02%)</title><rect x="483.1" y="1027.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="486.1" y="1038.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.02%)</title><rect x="483.1" y="1011.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="486.1" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.02%)</title><rect x="483.1" y="995.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="486.1" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.02%)</title><rect x="483.1" y="979.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="486.1" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (28 samples, 0.64%)</title><rect x="483.4" y="1027.0" width="7.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="486.4" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$288/1452226218.run (28 samples, 0.64%)</title><rect x="483.4" y="1011.0" width="7.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="486.4" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (27 samples, 0.62%)</title><rect x="483.7" y="995.0" width="7.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="486.7" y="1006.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="484.0" y="979.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="487.0" y="990.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="484.0" y="963.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="487.0" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$292/1528731011.get$Lambda (1 samples, 0.02%)</title><rect x="484.0" y="947.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="487.0" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$292/1528731011.&lt;init&gt; (1 samples, 0.02%)</title><rect x="484.0" y="931.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="487.0" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1 samples, 0.02%)</title><rect x="484.2" y="979.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="487.2" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.02%)</title><rect x="484.2" y="963.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="487.2" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="484.2" y="947.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="487.2" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="484.2" y="931.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="487.2" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (3 samples, 0.07%)</title><rect x="484.5" y="979.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="487.5" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (3 samples, 0.07%)</title><rect x="484.5" y="963.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="487.5" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (3 samples, 0.07%)</title><rect x="484.5" y="947.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="487.5" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicInteger.compareAndSet (2 samples, 0.05%)</title><rect x="484.8" y="931.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="487.8" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (6 samples, 0.14%)</title><rect x="485.3" y="979.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="488.3" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (6 samples, 0.14%)</title><rect x="485.3" y="963.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="488.3" y="974.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.put (6 samples, 0.14%)</title><rect x="485.3" y="947.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="488.3" y="958.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.hash (6 samples, 0.14%)</title><rect x="485.3" y="931.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="488.3" y="942.0"></text>
</g>
<g>
<title>java/lang/System.identityHashCode (6 samples, 0.14%)</title><rect x="485.3" y="915.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="488.3" y="926.0"></text>
</g>
<g>
<title>JVM_IHashCode (2 samples, 0.05%)</title><rect x="485.6" y="899.0" width="0.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="488.6" y="910.0"></text>
</g>
<g>
<title>Java_java_lang_System_identityHashCode (2 samples, 0.05%)</title><rect x="486.1" y="899.0" width="0.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="489.1" y="910.0"></text>
</g>
<g>
<title>_init (1 samples, 0.02%)</title><rect x="486.7" y="899.0" width="0.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="489.7" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (13 samples, 0.30%)</title><rect x="486.9" y="979.0" width="3.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="489.9" y="990.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.07%)</title><rect x="487.5" y="963.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="490.5" y="974.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1357563986.invoke (3 samples, 0.07%)</title><rect x="487.5" y="947.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="490.5" y="958.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.07%)</title><rect x="487.5" y="931.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="490.5" y="942.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.mixLen (1 samples, 0.02%)</title><rect x="487.5" y="915.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="490.5" y="926.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (2 samples, 0.05%)</title><rect x="487.8" y="915.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="490.8" y="926.0"></text>
</g>
<g>
<title>java/lang/System.identityHashCode (1 samples, 0.02%)</title><rect x="488.0" y="899.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="491.0" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.dbgString (8 samples, 0.18%)</title><rect x="488.3" y="963.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="491.3" y="974.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (7 samples, 0.16%)</title><rect x="488.6" y="947.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="491.6" y="958.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/352462511.invoke (7 samples, 0.16%)</title><rect x="488.6" y="931.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="491.6" y="942.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/344898752.invoke (7 samples, 0.16%)</title><rect x="488.6" y="915.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="491.6" y="926.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.09%)</title><rect x="488.6" y="899.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="491.6" y="910.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (2 samples, 0.05%)</title><rect x="488.8" y="883.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="491.8" y="894.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="489.4" y="883.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="492.4" y="894.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/875918262.invoke (3 samples, 0.07%)</title><rect x="489.7" y="899.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="492.7" y="910.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.07%)</title><rect x="489.7" y="883.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="492.7" y="894.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (1 samples, 0.02%)</title><rect x="490.2" y="867.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="493.2" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (2 samples, 0.05%)</title><rect x="490.5" y="979.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="493.5" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (2 samples, 0.05%)</title><rect x="490.5" y="963.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="493.5" y="974.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="490.5" y="947.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="493.5" y="958.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="490.5" y="931.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="493.5" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser$$Lambda$293/1334659778.get$Lambda (1 samples, 0.02%)</title><rect x="490.5" y="915.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="493.5" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser$$Lambda$293/1334659778.&lt;init&gt; (1 samples, 0.02%)</title><rect x="490.5" y="899.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="493.5" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (1 samples, 0.02%)</title><rect x="490.7" y="947.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="493.7" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (1 samples, 0.02%)</title><rect x="490.7" y="931.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="493.7" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.createHttpLogger (1 samples, 0.02%)</title><rect x="490.7" y="915.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="493.7" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.levelEnabledFor (1 samples, 0.02%)</title><rect x="490.7" y="899.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="493.7" y="910.0"></text>
</g>
<g>
<title>sun/util/logging/internal/LoggingProviderImpl$JULWrapper.isLoggable (1 samples, 0.02%)</title><rect x="490.7" y="883.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="493.7" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.&lt;init&gt; (4 samples, 0.09%)</title><rect x="491.0" y="1027.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="494.0" y="1038.0"></text>
</g>
<g>
<title>java/util/stream/StreamOpFlag.getMask (2 samples, 0.05%)</title><rect x="491.6" y="1011.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="494.6" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseInfoImpl.&lt;init&gt; (1 samples, 0.02%)</title><rect x="492.1" y="1043.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="495.1" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$236/388216554.apply (9 samples, 0.21%)</title><rect x="492.4" y="1107.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="495.4" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (8 samples, 0.18%)</title><rect x="492.6" y="1091.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="495.6" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (8 samples, 0.18%)</title><rect x="492.6" y="1075.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="495.6" y="1086.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.next (1 samples, 0.02%)</title><rect x="492.9" y="1059.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="495.9" y="1070.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.previous (1 samples, 0.02%)</title><rect x="492.9" y="1043.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="495.9" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.response (5 samples, 0.12%)</title><rect x="493.2" y="1059.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="496.2" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (5 samples, 0.12%)</title><rect x="493.2" y="1043.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="496.2" y="1054.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.get (3 samples, 0.07%)</title><rect x="493.2" y="1027.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="496.2" y="1038.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (1 samples, 0.02%)</title><rect x="493.2" y="1011.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="496.2" y="1022.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.hash (2 samples, 0.05%)</title><rect x="493.5" y="1011.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="496.5" y="1022.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (2 samples, 0.05%)</title><rect x="493.5" y="995.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="496.5" y="1006.0"></text>
</g>
<g>
<title>JVM_IHashCode (2 samples, 0.05%)</title><rect x="493.5" y="979.0" width="0.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="496.5" y="990.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (1 samples, 0.02%)</title><rect x="493.7" y="963.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="496.7" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.client (2 samples, 0.05%)</title><rect x="494.0" y="1027.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="497.0" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RedirectFilter.response (1 samples, 0.02%)</title><rect x="494.5" y="1059.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="497.5" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RedirectFilter.handleResponse (1 samples, 0.02%)</title><rect x="494.5" y="1043.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="497.5" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Response.statusCode (1 samples, 0.02%)</title><rect x="494.5" y="1027.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="497.5" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (3 samples, 0.07%)</title><rect x="494.8" y="1123.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="497.8" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (3 samples, 0.07%)</title><rect x="494.8" y="1107.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="497.8" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$237/1895279177.apply (1 samples, 0.02%)</title><rect x="495.4" y="1091.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="498.4" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (1 samples, 0.02%)</title><rect x="495.4" y="1075.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="498.4" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.cancelTimer (1 samples, 0.02%)</title><rect x="495.4" y="1059.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="498.4" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.tryFire (3 samples, 0.07%)</title><rect x="495.6" y="1123.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="498.6" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (3 samples, 0.07%)</title><rect x="495.6" y="1107.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="498.6" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$278/649988588.apply (8 samples, 0.18%)</title><rect x="496.4" y="1155.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="499.4" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (8 samples, 0.18%)</title><rect x="496.4" y="1139.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="499.4" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.unsubscribe (1 samples, 0.02%)</title><rect x="497.3" y="1123.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="500.3" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.headers (1 samples, 0.02%)</title><rect x="497.5" y="1123.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="500.5" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Response.&lt;init&gt; (3 samples, 0.07%)</title><rect x="497.8" y="1123.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="500.8" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.05%)</title><rect x="497.8" y="1107.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="500.8" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.05%)</title><rect x="497.8" y="1091.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="500.8" y="1102.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.05%)</title><rect x="497.8" y="1075.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="500.8" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Response.&lt;init&gt; (1 samples, 0.02%)</title><rect x="498.3" y="1107.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="501.3" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (86 samples, 1.98%)</title><rect x="498.6" y="1267.0" width="23.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="501.6" y="1278.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.maybeStartHeaders (2 samples, 0.05%)</title><rect x="498.9" y="1251.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="501.9" y="1262.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (1 samples, 0.02%)</title><rect x="498.9" y="1235.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="501.9" y="1246.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.02%)</title><rect x="499.2" y="1235.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="502.2" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (11 samples, 0.25%)</title><rect x="499.4" y="1251.0" width="3.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="502.4" y="1262.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (5 samples, 0.12%)</title><rect x="501.1" y="1235.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="504.1" y="1246.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (5 samples, 0.12%)</title><rect x="501.1" y="1219.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="504.1" y="1230.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.02%)</title><rect x="502.1" y="1203.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="505.1" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (7 samples, 0.16%)</title><rect x="502.4" y="1251.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="505.4" y="1262.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (5 samples, 0.12%)</title><rect x="502.7" y="1235.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="505.7" y="1246.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (5 samples, 0.12%)</title><rect x="502.7" y="1219.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="505.7" y="1230.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (4 samples, 0.09%)</title><rect x="503.0" y="1203.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="506.0" y="1214.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.05%)</title><rect x="503.5" y="1187.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="506.5" y="1198.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.02%)</title><rect x="504.0" y="1235.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="507.0" y="1246.0"></text>
</g>
<g>
<title>java/nio/Buffer.nextGetIndex (1 samples, 0.02%)</title><rect x="504.0" y="1219.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="507.0" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (12 samples, 0.28%)</title><rect x="504.3" y="1251.0" width="3.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="507.3" y="1262.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (7 samples, 0.16%)</title><rect x="504.6" y="1235.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="507.6" y="1246.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (7 samples, 0.16%)</title><rect x="504.6" y="1219.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="507.6" y="1230.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.05%)</title><rect x="505.9" y="1203.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="508.9" y="1214.0"></text>
</g>
<g>
<title>java/lang/String.coder (2 samples, 0.05%)</title><rect x="505.9" y="1187.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="508.9" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (2 samples, 0.05%)</title><rect x="505.9" y="1171.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="508.9" y="1182.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.07%)</title><rect x="506.5" y="1235.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="509.5" y="1246.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.07%)</title><rect x="506.5" y="1219.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="509.5" y="1230.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.02%)</title><rect x="506.5" y="1203.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="509.5" y="1214.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="506.5" y="1187.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="509.5" y="1198.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="506.5" y="1171.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="509.5" y="1182.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="506.5" y="1155.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="509.5" y="1166.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.05%)</title><rect x="506.8" y="1203.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="509.8" y="1214.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.02%)</title><rect x="507.3" y="1235.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="510.3" y="1246.0"></text>
</g>
<g>
<title>java/nio/Buffer.nextGetIndex (1 samples, 0.02%)</title><rect x="507.3" y="1219.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="510.3" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (23 samples, 0.53%)</title><rect x="507.6" y="1251.0" width="6.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="510.6" y="1262.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (19 samples, 0.44%)</title><rect x="508.7" y="1235.0" width="5.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="511.7" y="1246.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (19 samples, 0.44%)</title><rect x="508.7" y="1219.0" width="5.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="511.7" y="1230.0"></text>
</g>
<g>
<title>java/util/AbstractMap.isEmpty (6 samples, 0.14%)</title><rect x="508.7" y="1203.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="511.7" y="1214.0"></text>
</g>
<g>
<title>java/util/TreeMap.size (6 samples, 0.14%)</title><rect x="508.7" y="1187.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="511.7" y="1198.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.05%)</title><rect x="508.9" y="1171.0" width="0.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="511.9" y="1182.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (3 samples, 0.07%)</title><rect x="509.5" y="1171.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="512.5" y="1182.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (13 samples, 0.30%)</title><rect x="510.3" y="1203.0" width="3.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="513.3" y="1214.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$115/937225413.accept (12 samples, 0.28%)</title><rect x="510.6" y="1187.0" width="3.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="513.6" y="1198.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (12 samples, 0.28%)</title><rect x="510.6" y="1171.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="513.6" y="1182.0"></text>
</g>
<g>
<title>java/lang/String.trim (8 samples, 0.18%)</title><rect x="510.6" y="1155.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="513.6" y="1166.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (8 samples, 0.18%)</title><rect x="510.6" y="1139.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="513.6" y="1150.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (6 samples, 0.14%)</title><rect x="511.1" y="1123.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="514.1" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (5 samples, 0.12%)</title><rect x="511.1" y="1107.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="514.1" y="1118.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (4 samples, 0.09%)</title><rect x="511.4" y="1091.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="514.4" y="1102.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.05%)</title><rect x="511.4" y="1075.0" width="0.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="514.4" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$62/938545229.test (2 samples, 0.05%)</title><rect x="511.9" y="1075.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="514.9" y="1086.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.02%)</title><rect x="512.5" y="1107.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="515.5" y="1118.0"></text>
</g>
<g>
<title>java/util/List.copyOf (1 samples, 0.02%)</title><rect x="512.7" y="1155.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="515.7" y="1166.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (1 samples, 0.02%)</title><rect x="512.7" y="1139.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="515.7" y="1150.0"></text>
</g>
<g>
<title>java/util/List.of (1 samples, 0.02%)</title><rect x="512.7" y="1123.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="515.7" y="1134.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$ListN.&lt;init&gt; (1 samples, 0.02%)</title><rect x="512.7" y="1107.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="515.7" y="1118.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (3 samples, 0.07%)</title><rect x="513.0" y="1155.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="516.0" y="1166.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (1 samples, 0.02%)</title><rect x="513.3" y="1139.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="516.3" y="1150.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.02%)</title><rect x="513.3" y="1123.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="516.3" y="1134.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.02%)</title><rect x="513.3" y="1107.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="516.3" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.02%)</title><rect x="513.3" y="1091.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="516.3" y="1102.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (1 samples, 0.02%)</title><rect x="513.5" y="1139.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="516.5" y="1150.0"></text>
</g>
<g>
<title>java/util/TreeMap.rotateRight (1 samples, 0.02%)</title><rect x="513.5" y="1123.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="516.5" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrLF (1 samples, 0.02%)</title><rect x="513.8" y="1251.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="516.8" y="1262.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="513.8" y="1235.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="516.8" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (29 samples, 0.67%)</title><rect x="514.1" y="1251.0" width="7.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="517.1" y="1262.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1 samples, 0.02%)</title><rect x="514.6" y="1235.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="517.6" y="1246.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.02%)</title><rect x="514.6" y="1219.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="517.6" y="1230.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.02%)</title><rect x="514.6" y="1203.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="517.6" y="1214.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="514.9" y="1235.0" width="0.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="517.9" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (25 samples, 0.58%)</title><rect x="515.2" y="1235.0" width="6.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="518.2" y="1246.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.02%)</title><rect x="515.4" y="1219.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="518.4" y="1230.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.02%)</title><rect x="515.4" y="1203.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="518.4" y="1214.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.02%)</title><rect x="515.4" y="1187.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="518.4" y="1198.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.02%)</title><rect x="515.7" y="1219.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="518.7" y="1230.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.02%)</title><rect x="515.7" y="1203.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="518.7" y="1214.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.02%)</title><rect x="515.7" y="1187.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="518.7" y="1198.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (7 samples, 0.16%)</title><rect x="516.0" y="1219.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="519.0" y="1230.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.02%)</title><rect x="516.0" y="1203.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="519.0" y="1214.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="516.0" y="1187.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="519.0" y="1198.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (6 samples, 0.14%)</title><rect x="516.3" y="1203.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="519.3" y="1214.0"></text>
</g>
<g>
<title>java/lang/String.trim (7 samples, 0.16%)</title><rect x="517.9" y="1219.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="520.9" y="1230.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (4 samples, 0.09%)</title><rect x="518.7" y="1203.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="521.7" y="1214.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="519.5" y="1187.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="522.5" y="1198.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.05%)</title><rect x="519.8" y="1219.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="522.8" y="1230.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.05%)</title><rect x="519.8" y="1203.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="522.8" y="1214.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.02%)</title><rect x="520.1" y="1187.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="523.1" y="1198.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.02%)</title><rect x="520.1" y="1171.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="523.1" y="1182.0"></text>
</g>
<g>
<title>java/util/ArrayList.newCapacity (1 samples, 0.02%)</title><rect x="520.1" y="1155.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="523.1" y="1166.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (6 samples, 0.14%)</title><rect x="520.3" y="1219.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="523.3" y="1230.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.02%)</title><rect x="520.3" y="1203.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="523.3" y="1214.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (1 samples, 0.02%)</title><rect x="520.6" y="1203.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="523.6" y="1214.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (3 samples, 0.07%)</title><rect x="520.9" y="1203.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="523.9" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser$$Lambda$282/1262603830.apply (1 samples, 0.02%)</title><rect x="521.7" y="1203.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="524.7" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.lambda$addHeaderFromString$0 (1 samples, 0.02%)</title><rect x="521.7" y="1187.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="524.7" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$214/1397508456.accept (2 samples, 0.05%)</title><rect x="522.0" y="1267.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="525.0" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.advance (2 samples, 0.05%)</title><rect x="522.0" y="1251.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="525.0" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.unsubscribe (1 samples, 0.02%)</title><rect x="522.2" y="1235.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="525.2" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (260 samples, 5.98%)</title><rect x="522.5" y="1379.0" width="70.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="525.5" y="1390.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (259 samples, 5.96%)</title><rect x="522.8" y="1363.0" width="70.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="525.8" y="1374.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (257 samples, 5.91%)</title><rect x="523.3" y="1347.0" width="69.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="526.3" y="1358.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$199/1509846524.run (257 samples, 5.91%)</title><rect x="523.3" y="1331.0" width="69.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="526.3" y="1342.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (257 samples, 5.91%)</title><rect x="523.3" y="1315.0" width="69.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="526.3" y="1326.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (255 samples, 5.87%)</title><rect x="523.3" y="1299.0" width="69.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="526.3" y="1310.0">jdk/int..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="523.3" y="1283.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="526.3" y="1294.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="523.3" y="1267.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="526.3" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$221/1241815609.get$Lambda (1 samples, 0.02%)</title><rect x="523.3" y="1251.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="526.3" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$221/1241815609.&lt;init&gt; (1 samples, 0.02%)</title><rect x="523.3" y="1235.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="526.3" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (9 samples, 0.21%)</title><rect x="523.6" y="1283.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="526.6" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (6 samples, 0.14%)</title><rect x="524.4" y="1267.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="527.4" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (3 samples, 0.07%)</title><rect x="525.2" y="1251.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="528.2" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.&lt;init&gt; (1 samples, 0.02%)</title><rect x="525.8" y="1235.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="528.8" y="1246.0"></text>
</g>
<g>
<title>java/lang/Number.&lt;init&gt; (1 samples, 0.02%)</title><rect x="525.8" y="1219.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="528.8" y="1230.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.02%)</title><rect x="525.8" y="1203.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="528.8" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (245 samples, 5.64%)</title><rect x="526.0" y="1283.0" width="66.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="529.0" y="1294.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (245 samples, 5.64%)</title><rect x="526.0" y="1267.0" width="66.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="529.0" y="1278.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$290/1089333161.run (151 samples, 3.47%)</title><rect x="526.0" y="1251.0" width="41.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="529.0" y="1262.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (151 samples, 3.47%)</title><rect x="526.0" y="1235.0" width="41.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="529.0" y="1246.0">jdk..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (1 samples, 0.02%)</title><rect x="526.0" y="1219.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="529.0" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.clear (1 samples, 0.02%)</title><rect x="526.3" y="1219.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="529.3" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (149 samples, 3.43%)</title><rect x="526.6" y="1219.0" width="40.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="529.6" y="1230.0">jdk..</text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.02%)</title><rect x="526.6" y="1203.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="529.6" y="1214.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (4 samples, 0.09%)</title><rect x="526.8" y="1203.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="529.8" y="1214.0"></text>
</g>
<g>
<title>java/util/Collection.stream (2 samples, 0.05%)</title><rect x="526.8" y="1187.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="529.8" y="1198.0"></text>
</g>
<g>
<title>java/util/List.spliterator (1 samples, 0.02%)</title><rect x="526.8" y="1171.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="529.8" y="1182.0"></text>
</g>
<g>
<title>java/util/AbstractList$RandomAccessSpliterator.&lt;init&gt; (1 samples, 0.02%)</title><rect x="526.8" y="1155.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="529.8" y="1166.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.02%)</title><rect x="526.8" y="1139.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="529.8" y="1150.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (1 samples, 0.02%)</title><rect x="527.1" y="1171.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="530.1" y="1182.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$Head.&lt;init&gt; (1 samples, 0.02%)</title><rect x="527.1" y="1155.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="530.1" y="1166.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.&lt;init&gt; (1 samples, 0.02%)</title><rect x="527.1" y="1139.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="530.1" y="1150.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.&lt;init&gt; (1 samples, 0.02%)</title><rect x="527.1" y="1123.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="530.1" y="1134.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (2 samples, 0.05%)</title><rect x="527.4" y="1187.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="530.4" y="1198.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (2 samples, 0.05%)</title><rect x="527.4" y="1171.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="530.4" y="1182.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (2 samples, 0.05%)</title><rect x="527.4" y="1155.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="530.4" y="1166.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (2 samples, 0.05%)</title><rect x="527.4" y="1139.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="530.4" y="1150.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (2 samples, 0.05%)</title><rect x="527.4" y="1123.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="530.4" y="1134.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (1 samples, 0.02%)</title><rect x="527.4" y="1107.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="530.4" y="1118.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.&lt;init&gt; (1 samples, 0.02%)</title><rect x="527.4" y="1091.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="530.4" y="1102.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.&lt;init&gt; (1 samples, 0.02%)</title><rect x="527.4" y="1075.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="530.4" y="1086.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.opWrapSink (1 samples, 0.02%)</title><rect x="527.7" y="1107.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="530.7" y="1118.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5$1.&lt;init&gt; (1 samples, 0.02%)</title><rect x="527.7" y="1091.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="530.7" y="1102.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.&lt;init&gt; (1 samples, 0.02%)</title><rect x="527.7" y="1075.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="530.7" y="1086.0"></text>
</g>
<g>
<title>java/util/Optional.map (2 samples, 0.05%)</title><rect x="527.9" y="1203.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="530.9" y="1214.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (1 samples, 0.02%)</title><rect x="528.2" y="1187.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="531.2" y="1198.0"></text>
</g>
<g>
<title>java/util/Optional.of (1 samples, 0.02%)</title><rect x="528.2" y="1171.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="531.2" y="1182.0"></text>
</g>
<g>
<title>java/util/Optional.&lt;init&gt; (1 samples, 0.02%)</title><rect x="528.2" y="1155.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="531.2" y="1166.0"></text>
</g>
<g>
<title>java/util/Objects.requireNonNull (1 samples, 0.02%)</title><rect x="528.2" y="1139.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="531.2" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (139 samples, 3.20%)</title><rect x="528.5" y="1203.0" width="37.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="531.5" y="1214.0">jdk..</text>
</g>
<g>
<title>java/time/Instant.now (3 samples, 0.07%)</title><rect x="528.5" y="1187.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="531.5" y="1198.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (3 samples, 0.07%)</title><rect x="528.5" y="1171.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="531.5" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (3 samples, 0.07%)</title><rect x="528.5" y="1155.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="531.5" y="1166.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (3 samples, 0.07%)</title><rect x="528.5" y="1139.0" width="0.8" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="531.5" y="1150.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (2 samples, 0.05%)</title><rect x="528.7" y="1123.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="531.7" y="1134.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.05%)</title><rect x="528.7" y="1107.0" width="0.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="531.7" y="1118.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.05%)</title><rect x="528.7" y="1091.0" width="0.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="531.7" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (136 samples, 3.13%)</title><rect x="529.3" y="1187.0" width="36.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="532.3" y="1198.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (73 samples, 1.68%)</title><rect x="529.3" y="1171.0" width="19.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="532.3" y="1182.0"></text>
</g>
<g>
<title>java/time/Instant.plus (31 samples, 0.71%)</title><rect x="532.5" y="1155.0" width="8.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="535.5" y="1166.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (26 samples, 0.60%)</title><rect x="533.9" y="1139.0" width="7.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="536.9" y="1150.0"></text>
</g>
<g>
<title>java/time/Instant.plus (26 samples, 0.60%)</title><rect x="533.9" y="1123.0" width="7.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="536.9" y="1134.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (4 samples, 0.09%)</title><rect x="539.9" y="1107.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="542.9" y="1118.0"></text>
</g>
<g>
<title>java/time/Instant.create (4 samples, 0.09%)</title><rect x="539.9" y="1091.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="542.9" y="1102.0"></text>
</g>
<g>
<title>java/time/Instant.truncatedTo (4 samples, 0.09%)</title><rect x="541.0" y="1155.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="544.0" y="1166.0"></text>
</g>
<g>
<title>java/time/Instant.plusNanos (3 samples, 0.07%)</title><rect x="541.2" y="1139.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="544.2" y="1150.0"></text>
</g>
<g>
<title>java/time/Instant.plus (3 samples, 0.07%)</title><rect x="541.2" y="1123.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="544.2" y="1134.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (3 samples, 0.07%)</title><rect x="541.2" y="1107.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="544.2" y="1118.0"></text>
</g>
<g>
<title>java/lang/Math.floorMod (1 samples, 0.02%)</title><rect x="541.2" y="1091.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="544.2" y="1102.0"></text>
</g>
<g>
<title>java/time/Instant.create (2 samples, 0.05%)</title><rect x="541.5" y="1091.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="544.5" y="1102.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (1 samples, 0.02%)</title><rect x="542.0" y="1155.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="545.0" y="1166.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (1 samples, 0.02%)</title><rect x="542.0" y="1139.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="545.0" y="1150.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.&lt;init&gt; (1 samples, 0.02%)</title><rect x="542.0" y="1123.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="545.0" y="1134.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.add (4 samples, 0.09%)</title><rect x="542.3" y="1155.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="545.3" y="1166.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkBefore (4 samples, 0.09%)</title><rect x="542.3" y="1139.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="545.3" y="1150.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.previous (1 samples, 0.02%)</title><rect x="543.4" y="1155.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="546.4" y="1166.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (20 samples, 0.46%)</title><rect x="543.7" y="1155.0" width="5.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="546.7" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (2 samples, 0.05%)</title><rect x="549.1" y="1171.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="552.1" y="1182.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.05%)</title><rect x="549.1" y="1155.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="552.1" y="1166.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 0.05%)</title><rect x="549.1" y="1139.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="552.1" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (2 samples, 0.05%)</title><rect x="549.1" y="1123.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="552.1" y="1134.0"></text>
</g>
<g>
<title>java/util/Objects.hash (1 samples, 0.02%)</title><rect x="549.4" y="1107.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="552.4" y="1118.0"></text>
</g>
<g>
<title>java/util/Arrays.hashCode (1 samples, 0.02%)</title><rect x="549.4" y="1091.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="552.4" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (61 samples, 1.40%)</title><rect x="549.6" y="1171.0" width="16.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="552.6" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (61 samples, 1.40%)</title><rect x="549.6" y="1155.0" width="16.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="552.6" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (7 samples, 0.16%)</title><rect x="549.6" y="1139.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="552.6" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (1 samples, 0.02%)</title><rect x="549.6" y="1123.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="552.6" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (6 samples, 0.14%)</title><rect x="549.9" y="1123.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="552.9" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (6 samples, 0.14%)</title><rect x="549.9" y="1107.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="552.9" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (3 samples, 0.07%)</title><rect x="549.9" y="1091.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="552.9" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (3 samples, 0.07%)</title><rect x="549.9" y="1075.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="552.9" y="1086.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.02%)</title><rect x="550.2" y="1059.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="553.2" y="1070.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.02%)</title><rect x="550.2" y="1043.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="553.2" y="1054.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (1 samples, 0.02%)</title><rect x="550.5" y="1059.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="553.5" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (1 samples, 0.02%)</title><rect x="550.5" y="1043.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="553.5" y="1054.0"></text>
</g>
<g>
<title>__libc_write (1 samples, 0.02%)</title><rect x="550.5" y="1027.0" width="0.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="553.5" y="1038.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="550.5" y="1011.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="553.5" y="1022.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="550.5" y="995.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="553.5" y="1006.0"></text>
</g>
<g>
<title>ksys_write (1 samples, 0.02%)</title><rect x="550.5" y="979.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="553.5" y="990.0"></text>
</g>
<g>
<title>vfs_write (1 samples, 0.02%)</title><rect x="550.5" y="963.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="553.5" y="974.0"></text>
</g>
<g>
<title>new_sync_write (1 samples, 0.02%)</title><rect x="550.5" y="947.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="553.5" y="958.0"></text>
</g>
<g>
<title>pipe_write (1 samples, 0.02%)</title><rect x="550.5" y="931.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="553.5" y="942.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.02%)</title><rect x="550.5" y="915.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="553.5" y="926.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="550.5" y="899.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="553.5" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription (3 samples, 0.07%)</title><rect x="550.7" y="1091.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="553.7" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (54 samples, 1.24%)</title><rect x="551.5" y="1139.0" width="14.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="554.5" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (54 samples, 1.24%)</title><rect x="551.5" y="1123.0" width="14.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="554.5" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (50 samples, 1.15%)</title><rect x="551.8" y="1107.0" width="13.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="554.8" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (49 samples, 1.13%)</title><rect x="551.8" y="1091.0" width="13.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="554.8" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (49 samples, 1.13%)</title><rect x="551.8" y="1075.0" width="13.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="554.8" y="1086.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.05%)</title><rect x="552.4" y="1059.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="555.4" y="1070.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.02%)</title><rect x="552.6" y="1043.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="555.6" y="1054.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.02%)</title><rect x="552.6" y="1027.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="555.6" y="1038.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.02%)</title><rect x="552.6" y="1011.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="555.6" y="1022.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.02%)</title><rect x="552.6" y="995.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="555.6" y="1006.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (1 samples, 0.02%)</title><rect x="552.6" y="979.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="555.6" y="990.0"></text>
</g>
<g>
<title>ObjectMonitor::exit(bool, Thread*) [clone .part.84] (1 samples, 0.02%)</title><rect x="552.6" y="963.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="555.6" y="974.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (45 samples, 1.04%)</title><rect x="552.9" y="1059.0" width="12.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="555.9" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (42 samples, 0.97%)</title><rect x="553.7" y="1043.0" width="11.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="556.7" y="1054.0"></text>
</g>
<g>
<title>__libc_write (41 samples, 0.94%)</title><rect x="553.7" y="1027.0" width="11.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="556.7" y="1038.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (31 samples, 0.71%)</title><rect x="556.4" y="1011.0" width="8.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="559.4" y="1022.0"></text>
</g>
<g>
<title>do_syscall_64 (31 samples, 0.71%)</title><rect x="556.4" y="995.0" width="8.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="559.4" y="1006.0"></text>
</g>
<g>
<title>ksys_write (29 samples, 0.67%)</title><rect x="557.0" y="979.0" width="7.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="560.0" y="990.0"></text>
</g>
<g>
<title>__fdget_pos (1 samples, 0.02%)</title><rect x="557.2" y="963.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="560.2" y="974.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.02%)</title><rect x="557.2" y="947.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="560.2" y="958.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.02%)</title><rect x="557.2" y="931.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="560.2" y="942.0"></text>
</g>
<g>
<title>fput (1 samples, 0.02%)</title><rect x="557.5" y="963.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="560.5" y="974.0"></text>
</g>
<g>
<title>vfs_write (26 samples, 0.60%)</title><rect x="557.8" y="963.0" width="7.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="560.8" y="974.0"></text>
</g>
<g>
<title>__fsnotify_parent (1 samples, 0.02%)</title><rect x="558.1" y="947.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="561.1" y="958.0"></text>
</g>
<g>
<title>new_sync_write (18 samples, 0.41%)</title><rect x="558.3" y="947.0" width="4.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="561.3" y="958.0"></text>
</g>
<g>
<title>pipe_write (18 samples, 0.41%)</title><rect x="558.3" y="931.0" width="4.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="561.3" y="942.0"></text>
</g>
<g>
<title>__wake_up_common_lock (14 samples, 0.32%)</title><rect x="558.6" y="915.0" width="3.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="561.6" y="926.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (14 samples, 0.32%)</title><rect x="558.6" y="899.0" width="3.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="561.6" y="910.0"></text>
</g>
<g>
<title>mutex_lock (2 samples, 0.05%)</title><rect x="562.4" y="915.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="565.4" y="926.0"></text>
</g>
<g>
<title>mutex_unlock (1 samples, 0.02%)</title><rect x="562.9" y="915.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="565.9" y="926.0"></text>
</g>
<g>
<title>security_file_permission (6 samples, 0.14%)</title><rect x="563.2" y="947.0" width="1.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="566.2" y="958.0"></text>
</g>
<g>
<title>file_has_perm (4 samples, 0.09%)</title><rect x="563.2" y="931.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="566.2" y="942.0"></text>
</g>
<g>
<title>avc_has_perm (3 samples, 0.07%)</title><rect x="563.5" y="915.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="566.5" y="926.0"></text>
</g>
<g>
<title>selinux_file_permission (2 samples, 0.05%)</title><rect x="564.3" y="931.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="567.3" y="942.0"></text>
</g>
<g>
<title>_init (1 samples, 0.02%)</title><rect x="564.8" y="1027.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="567.8" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.isStopped (1 samples, 0.02%)</title><rect x="565.1" y="1091.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="568.1" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicInteger.get (1 samples, 0.02%)</title><rect x="565.1" y="1075.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="568.1" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (3 samples, 0.07%)</title><rect x="565.4" y="1107.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="568.4" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.isOpen (3 samples, 0.07%)</title><rect x="566.2" y="1203.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="569.2" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection.connected (2 samples, 0.05%)</title><rect x="566.5" y="1187.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="569.5" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$292/1528731011.accept (8 samples, 0.18%)</title><rect x="567.0" y="1251.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="570.0" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$1 (8 samples, 0.18%)</title><rect x="567.0" y="1235.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="570.0" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onComplete (8 samples, 0.18%)</title><rect x="567.0" y="1219.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="570.0" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (8 samples, 0.18%)</title><rect x="567.0" y="1203.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="570.0" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (8 samples, 0.18%)</title><rect x="567.0" y="1187.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="570.0" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (8 samples, 0.18%)</title><rect x="567.0" y="1171.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="570.0" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (8 samples, 0.18%)</title><rect x="567.0" y="1155.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="570.0" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2 samples, 0.05%)</title><rect x="567.0" y="1139.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="570.0" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (2 samples, 0.05%)</title><rect x="567.0" y="1123.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="570.0" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2 samples, 0.05%)</title><rect x="567.0" y="1107.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="570.0" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (2 samples, 0.05%)</title><rect x="567.0" y="1091.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="570.0" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (2 samples, 0.05%)</title><rect x="567.0" y="1075.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="570.0" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (2 samples, 0.05%)</title><rect x="567.0" y="1059.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="570.0" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (2 samples, 0.05%)</title><rect x="567.0" y="1043.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="570.0" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (2 samples, 0.05%)</title><rect x="567.0" y="1027.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="570.0" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.enq (2 samples, 0.05%)</title><rect x="567.0" y="1011.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="570.0" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetTail (2 samples, 0.05%)</title><rect x="567.0" y="995.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="570.0" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$297/1321510655.accept (1 samples, 0.02%)</title><rect x="567.3" y="979.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="570.3" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$295/1644078329.accept (1 samples, 0.02%)</title><rect x="567.6" y="1139.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="570.6" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$2 (1 samples, 0.02%)</title><rect x="567.6" y="1123.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="570.6" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$ClientRefCountTracker.tryRelease (1 samples, 0.02%)</title><rect x="567.6" y="1107.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="570.6" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.unreference (1 samples, 0.02%)</title><rect x="567.6" y="1091.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="570.6" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.decrementAndGet (1 samples, 0.02%)</title><rect x="567.6" y="1075.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="570.6" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$297/1321510655.accept (5 samples, 0.12%)</title><rect x="567.8" y="1139.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="570.8" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.lambda$add$0 (2 samples, 0.05%)</title><rect x="568.6" y="1123.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="571.6" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.remove (2 samples, 0.05%)</title><rect x="568.6" y="1107.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="571.6" y="1118.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.remove (2 samples, 0.05%)</title><rect x="568.6" y="1091.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="571.6" y="1102.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.closeDeletion (2 samples, 0.05%)</title><rect x="568.6" y="1075.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="571.6" y="1086.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.hash (2 samples, 0.05%)</title><rect x="568.6" y="1059.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="571.6" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (85 samples, 1.96%)</title><rect x="569.2" y="1251.0" width="23.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="572.2" y="1262.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (85 samples, 1.96%)</title><rect x="569.2" y="1235.0" width="23.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="572.2" y="1246.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (82 samples, 1.89%)</title><rect x="569.7" y="1219.0" width="22.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="572.7" y="1230.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (82 samples, 1.89%)</title><rect x="569.7" y="1203.0" width="22.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="572.7" y="1214.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (82 samples, 1.89%)</title><rect x="569.7" y="1187.0" width="22.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="572.7" y="1198.0">j..</text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.02%)</title><rect x="569.7" y="1171.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="572.7" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (81 samples, 1.86%)</title><rect x="570.0" y="1171.0" width="22.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="573.0" y="1182.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (81 samples, 1.86%)</title><rect x="570.0" y="1155.0" width="22.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="573.0" y="1166.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (3 samples, 0.07%)</title><rect x="570.0" y="1139.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="573.0" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (3 samples, 0.07%)</title><rect x="570.0" y="1123.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="573.0" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (3 samples, 0.07%)</title><rect x="570.0" y="1107.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="573.0" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (3 samples, 0.07%)</title><rect x="570.0" y="1091.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="573.0" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (3 samples, 0.07%)</title><rect x="570.0" y="1075.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="573.0" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (3 samples, 0.07%)</title><rect x="570.0" y="1059.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="573.0" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (3 samples, 0.07%)</title><rect x="570.0" y="1043.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="573.0" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (3 samples, 0.07%)</title><rect x="570.0" y="1027.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="573.0" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.enq (3 samples, 0.07%)</title><rect x="570.0" y="1011.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="573.0" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetTail (3 samples, 0.07%)</title><rect x="570.0" y="995.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="573.0" y="1006.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.05%)</title><rect x="570.0" y="979.0" width="0.5" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="573.0" y="990.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="570.3" y="963.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="573.3" y="974.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="570.3" y="947.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="573.3" y="958.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="570.3" y="931.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="573.3" y="942.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="570.3" y="915.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="573.3" y="926.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="570.3" y="899.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="573.3" y="910.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="570.3" y="883.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="573.3" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$300/1036110883.accept (1 samples, 0.02%)</title><rect x="570.5" y="979.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="573.5" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$300/1036110883.accept (78 samples, 1.79%)</title><rect x="570.8" y="1139.0" width="21.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="573.8" y="1150.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (78 samples, 1.79%)</title><rect x="570.8" y="1123.0" width="21.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="573.8" y="1134.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (78 samples, 1.79%)</title><rect x="570.8" y="1107.0" width="21.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="573.8" y="1118.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeValue (4 samples, 0.09%)</title><rect x="570.8" y="1091.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="573.8" y="1102.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (4 samples, 0.09%)</title><rect x="570.8" y="1075.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="573.8" y="1086.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (4 samples, 0.09%)</title><rect x="570.8" y="1059.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="573.8" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (74 samples, 1.70%)</title><rect x="571.9" y="1091.0" width="20.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="574.9" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (3 samples, 0.07%)</title><rect x="572.2" y="1075.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="575.2" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$309/980063472.apply (2 samples, 0.05%)</title><rect x="572.4" y="1059.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="575.4" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (2 samples, 0.05%)</title><rect x="572.4" y="1043.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="575.4" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpResponseImpl.&lt;init&gt; (2 samples, 0.05%)</title><rect x="572.4" y="1027.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="575.4" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Response.getSSLSession (1 samples, 0.02%)</title><rect x="572.7" y="1011.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="575.7" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.tryFire (1 samples, 0.02%)</title><rect x="573.0" y="1075.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="576.0" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeRelay (1 samples, 0.02%)</title><rect x="573.0" y="1059.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="576.0" y="1070.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.02%)</title><rect x="573.0" y="1043.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="576.0" y="1054.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.02%)</title><rect x="573.0" y="1027.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="576.0" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (68 samples, 1.56%)</title><rect x="573.3" y="1075.0" width="18.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="576.3" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (68 samples, 1.56%)</title><rect x="573.3" y="1059.0" width="18.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="576.3" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (65 samples, 1.50%)</title><rect x="573.3" y="1043.0" width="17.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="576.3" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (58 samples, 1.33%)</title><rect x="573.8" y="1027.0" width="15.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="576.8" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (58 samples, 1.33%)</title><rect x="573.8" y="1011.0" width="15.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="576.8" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (58 samples, 1.33%)</title><rect x="573.8" y="995.0" width="15.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="576.8" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (58 samples, 1.33%)</title><rect x="573.8" y="979.0" width="15.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="576.8" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (56 samples, 1.29%)</title><rect x="574.3" y="963.0" width="15.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="577.3" y="974.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (56 samples, 1.29%)</title><rect x="574.3" y="947.0" width="15.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="577.3" y="958.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.02%)</title><rect x="574.3" y="931.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="577.3" y="942.0"></text>
</g>
<g>
<title>Unsafe_Unpark (8 samples, 0.18%)</title><rect x="574.6" y="931.0" width="2.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="577.6" y="942.0"></text>
</g>
<g>
<title>Parker::unpark() (1 samples, 0.02%)</title><rect x="574.9" y="915.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="577.9" y="926.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.02%)</title><rect x="575.2" y="915.0" width="0.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="578.2" y="926.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.229] (1 samples, 0.02%)</title><rect x="575.4" y="915.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="578.4" y="926.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.02%)</title><rect x="575.7" y="915.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="578.7" y="926.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_lock (1 samples, 0.02%)</title><rect x="576.0" y="915.0" width="0.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="579.0" y="926.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (1 samples, 0.02%)</title><rect x="576.2" y="915.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="579.2" y="926.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.02%)</title><rect x="576.5" y="915.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="579.5" y="926.0"></text>
</g>
<g>
<title>__pthread_cond_signal (47 samples, 1.08%)</title><rect x="576.8" y="931.0" width="12.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="579.8" y="942.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="580.0" y="915.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="583.0" y="926.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="580.0" y="899.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="583.0" y="910.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="580.0" y="883.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="583.0" y="894.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="580.0" y="867.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="583.0" y="878.0"></text>
</g>
<g>
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="580.0" y="851.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="583.0" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (34 samples, 0.78%)</title><rect x="580.3" y="915.0" width="9.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="583.3" y="926.0"></text>
</g>
<g>
<title>do_syscall_64 (34 samples, 0.78%)</title><rect x="580.3" y="899.0" width="9.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="583.3" y="910.0"></text>
</g>
<g>
<title>__x64_sys_futex (28 samples, 0.64%)</title><rect x="580.9" y="883.0" width="7.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="583.9" y="894.0"></text>
</g>
<g>
<title>do_futex (27 samples, 0.62%)</title><rect x="581.1" y="867.0" width="7.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="584.1" y="878.0"></text>
</g>
<g>
<title>futex_wake (26 samples, 0.60%)</title><rect x="581.4" y="851.0" width="7.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="584.4" y="862.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.02%)</title><rect x="581.9" y="835.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="584.9" y="846.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.0 (1 samples, 0.02%)</title><rect x="581.9" y="819.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="584.9" y="830.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.02%)</title><rect x="582.2" y="835.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="585.2" y="846.0"></text>
</g>
<g>
<title>wake_up_q (22 samples, 0.51%)</title><rect x="582.5" y="835.0" width="6.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="585.5" y="846.0"></text>
</g>
<g>
<title>try_to_wake_up (22 samples, 0.51%)</title><rect x="582.5" y="819.0" width="6.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="585.5" y="830.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (22 samples, 0.51%)</title><rect x="582.5" y="803.0" width="6.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="585.5" y="814.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (4 samples, 0.09%)</title><rect x="588.5" y="883.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="591.5" y="894.0"></text>
</g>
<g>
<title>schedule (3 samples, 0.07%)</title><rect x="588.7" y="867.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="591.7" y="878.0"></text>
</g>
<g>
<title>__sched_text_start (2 samples, 0.05%)</title><rect x="589.0" y="851.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="592.0" y="862.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.05%)</title><rect x="589.0" y="835.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="592.0" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (5 samples, 0.12%)</title><rect x="589.5" y="1027.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="592.5" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (5 samples, 0.12%)</title><rect x="589.5" y="1011.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="592.5" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (5 samples, 0.12%)</title><rect x="589.5" y="995.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="592.5" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (4 samples, 0.09%)</title><rect x="589.5" y="979.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="592.5" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (4 samples, 0.09%)</title><rect x="589.5" y="963.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="592.5" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (4 samples, 0.09%)</title><rect x="589.5" y="947.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="592.5" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (4 samples, 0.09%)</title><rect x="589.5" y="931.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="592.5" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.enq (4 samples, 0.09%)</title><rect x="589.5" y="915.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="592.5" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetTail (4 samples, 0.09%)</title><rect x="589.5" y="899.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="592.5" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$303/559948606.accept (2 samples, 0.05%)</title><rect x="589.8" y="883.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="592.8" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$138/443747487.accept (1 samples, 0.02%)</title><rect x="590.4" y="883.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="593.4" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.02%)</title><rect x="590.6" y="979.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="593.6" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.02%)</title><rect x="590.6" y="963.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="593.6" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$306/99915046.accept (2 samples, 0.05%)</title><rect x="590.9" y="1043.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="593.9" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$readBodyAsync$0 (2 samples, 0.05%)</title><rect x="590.9" y="1027.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="593.9" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.completed (1 samples, 0.02%)</title><rect x="591.2" y="1011.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="594.2" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$138/443747487.accept (1 samples, 0.02%)</title><rect x="591.4" y="1043.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="594.4" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.lambda$sendAsync$0 (1 samples, 0.02%)</title><rect x="591.4" y="1027.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="594.4" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.unreference (1 samples, 0.02%)</title><rect x="591.4" y="1011.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="594.4" y="1022.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.02%)</title><rect x="591.7" y="1075.0" width="0.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="594.7" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getCompletionCause (1 samples, 0.02%)</title><rect x="592.0" y="1219.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="595.0" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onSubscribe (1 samples, 0.02%)</title><rect x="592.3" y="1251.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="595.3" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onSubscribe (1 samples, 0.02%)</title><rect x="592.3" y="1235.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="595.3" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.request (1 samples, 0.02%)</title><rect x="592.3" y="1219.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="595.3" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.increase (1 samples, 0.02%)</title><rect x="592.3" y="1203.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="595.3" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.getAndAccumulate (1 samples, 0.02%)</title><rect x="592.3" y="1187.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="595.3" y="1198.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (1 samples, 0.02%)</title><rect x="592.3" y="1171.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="595.3" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.hasDemand (1 samples, 0.02%)</title><rect x="592.5" y="1299.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="595.5" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (1 samples, 0.02%)</title><rect x="592.8" y="1299.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="595.8" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (1 samples, 0.02%)</title><rect x="592.8" y="1283.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="595.8" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (1 samples, 0.02%)</title><rect x="592.8" y="1267.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="595.8" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (1 samples, 0.02%)</title><rect x="592.8" y="1251.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="595.8" y="1262.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$107/2098846329.run (519 samples, 11.94%)</title><rect x="593.1" y="1411.0" width="140.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="596.1" y="1422.0">ru/mail/polis/serv..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$106/544362272.run (514 samples, 11.82%)</title><rect x="594.4" y="1395.0" width="139.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="597.4" y="1406.0">ru/mail/polis/ser..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$entity$1 (514 samples, 11.82%)</title><rect x="594.4" y="1379.0" width="139.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="597.4" y="1390.0">ru/mail/polis/ser..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.upsert (499 samples, 11.48%)</title><rect x="594.4" y="1363.0" width="135.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="597.4" y="1374.0">ru/mail/polis/ser..</text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.processRemaining (3 samples, 0.07%)</title><rect x="598.0" y="1347.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="601.0" y="1358.0"></text>
</g>
<g>
<title>java/lang/Long.compare (1 samples, 0.02%)</title><rect x="598.8" y="1347.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="601.8" y="1358.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.02%)</title><rect x="599.0" y="1347.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="602.0" y="1358.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.02%)</title><rect x="599.3" y="1347.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="602.3" y="1358.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.07%)</title><rect x="599.6" y="1347.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="602.6" y="1358.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.07%)</title><rect x="599.6" y="1331.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="602.6" y="1342.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.07%)</title><rect x="599.6" y="1315.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="602.6" y="1326.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.07%)</title><rect x="599.6" y="1299.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="602.6" y="1310.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="599.9" y="1283.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="602.9" y="1294.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.02%)</title><rect x="599.9" y="1267.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="602.9" y="1278.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.02%)</title><rect x="599.9" y="1251.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="602.9" y="1262.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.02%)</title><rect x="599.9" y="1235.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="602.9" y="1246.0"></text>
</g>
<g>
<title>oop_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="600.1" y="1283.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="603.1" y="1294.0"></text>
</g>
<g>
<title>java/util/ArrayList$Itr.next (2 samples, 0.05%)</title><rect x="600.4" y="1347.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="603.4" y="1358.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.02%)</title><rect x="601.0" y="1347.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="604.0" y="1358.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (1 samples, 0.02%)</title><rect x="601.2" y="1347.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="604.2" y="1358.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (1 samples, 0.02%)</title><rect x="601.5" y="1347.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="604.5" y="1358.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (1 samples, 0.02%)</title><rect x="601.5" y="1331.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="604.5" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (1 samples, 0.02%)</title><rect x="601.5" y="1315.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="604.5" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.tryPushStack (1 samples, 0.02%)</title><rect x="601.5" y="1299.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="604.5" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (1 samples, 0.02%)</title><rect x="601.8" y="1347.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="604.8" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (2 samples, 0.05%)</title><rect x="602.0" y="1347.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="605.0" y="1358.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.upsert (62 samples, 1.43%)</title><rect x="602.6" y="1347.0" width="16.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="605.6" y="1358.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.upsert (62 samples, 1.43%)</title><rect x="602.6" y="1331.0" width="16.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="605.6" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.lock (4 samples, 0.09%)</title><rect x="603.1" y="1315.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="606.1" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (4 samples, 0.09%)</title><rect x="603.1" y="1299.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="606.1" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquire (4 samples, 0.09%)</title><rect x="603.1" y="1283.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="606.1" y="1294.0"></text>
</g>
<g>
<title>_new_instance_Java (1 samples, 0.02%)</title><rect x="603.1" y="1267.0" width="0.3" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="606.1" y="1278.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (3 samples, 0.07%)</title><rect x="603.4" y="1267.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="606.4" y="1278.0"></text>
</g>
<g>
<title>gettimeofday (3 samples, 0.07%)</title><rect x="603.4" y="1251.0" width="0.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="606.4" y="1262.0"></text>
</g>
<g>
<title>[vdso] (3 samples, 0.07%)</title><rect x="603.4" y="1235.0" width="0.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="606.4" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.unlock (1 samples, 0.02%)</title><rect x="604.2" y="1315.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="607.2" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.02%)</title><rect x="604.2" y="1299.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="607.2" y="1310.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.upsert (52 samples, 1.20%)</title><rect x="604.5" y="1315.0" width="14.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="607.5" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (52 samples, 1.20%)</title><rect x="604.5" y="1299.0" width="14.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="607.5" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (52 samples, 1.20%)</title><rect x="604.5" y="1283.0" width="14.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="607.5" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (33 samples, 0.76%)</title><rect x="609.6" y="1267.0" width="9.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="612.6" y="1278.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (33 samples, 0.76%)</title><rect x="609.6" y="1251.0" width="9.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="612.6" y="1262.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (17 samples, 0.39%)</title><rect x="614.0" y="1235.0" width="4.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="617.0" y="1246.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.02%)</title><rect x="614.8" y="1219.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="617.8" y="1230.0"></text>
</g>
<g>
<title>vectorizedMismatch (1 samples, 0.02%)</title><rect x="614.8" y="1203.0" width="0.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="617.8" y="1214.0"></text>
</g>
<g>
<title>java/nio/Buffer.remaining (1 samples, 0.02%)</title><rect x="615.1" y="1219.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="618.1" y="1230.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (12 samples, 0.28%)</title><rect x="615.3" y="1219.0" width="3.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="618.3" y="1230.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (6 samples, 0.14%)</title><rect x="617.0" y="1203.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="620.0" y="1214.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (2 samples, 0.05%)</title><rect x="617.2" y="1187.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="620.2" y="1198.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.ix (3 samples, 0.07%)</title><rect x="617.8" y="1187.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="620.8" y="1198.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.setToFlush (3 samples, 0.07%)</title><rect x="618.6" y="1315.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="621.6" y="1326.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getSizeOfFlushedRow (3 samples, 0.07%)</title><rect x="618.6" y="1299.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="621.6" y="1310.0"></text>
</g>
<g>
<title>java/nio/Buffer.remaining (3 samples, 0.07%)</title><rect x="618.6" y="1283.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="621.6" y="1294.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.getResponsesFromReplicas (189 samples, 4.35%)</title><rect x="619.4" y="1347.0" width="51.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="622.4" y="1358.0">ru/ma..</text>
</g>
<g>
<title>java/net/URI.create (28 samples, 0.64%)</title><rect x="619.4" y="1331.0" width="7.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="622.4" y="1342.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (27 samples, 0.62%)</title><rect x="619.7" y="1315.0" width="7.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="622.7" y="1326.0"></text>
</g>
<g>
<title>java/net/URI$Parser.&lt;init&gt; (1 samples, 0.02%)</title><rect x="619.7" y="1299.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="622.7" y="1310.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (1 samples, 0.02%)</title><rect x="619.7" y="1283.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="622.7" y="1294.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (26 samples, 0.60%)</title><rect x="620.0" y="1299.0" width="7.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="623.0" y="1310.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChars (1 samples, 0.02%)</title><rect x="620.0" y="1283.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="623.0" y="1294.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (1 samples, 0.02%)</title><rect x="620.0" y="1267.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="623.0" y="1278.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.02%)</title><rect x="620.0" y="1251.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="623.0" y="1262.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (24 samples, 0.55%)</title><rect x="620.2" y="1283.0" width="6.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="623.2" y="1294.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.02%)</title><rect x="620.2" y="1267.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="623.2" y="1278.0"></text>
</g>
<g>
<title>java/lang/String.checkBoundsBeginEnd (1 samples, 0.02%)</title><rect x="620.2" y="1251.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="623.2" y="1262.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChars (2 samples, 0.05%)</title><rect x="620.5" y="1267.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="623.5" y="1278.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (2 samples, 0.05%)</title><rect x="620.5" y="1251.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="623.5" y="1262.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (18 samples, 0.41%)</title><rect x="621.0" y="1267.0" width="4.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="624.0" y="1278.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.05%)</title><rect x="622.1" y="1251.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="625.1" y="1262.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.05%)</title><rect x="622.1" y="1235.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="625.1" y="1246.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.02%)</title><rect x="622.4" y="1219.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="625.4" y="1230.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (6 samples, 0.14%)</title><rect x="622.7" y="1251.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="625.7" y="1262.0"></text>
</g>
<g>
<title>java/net/URI$Parser.at (1 samples, 0.02%)</title><rect x="622.7" y="1235.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="625.7" y="1246.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (4 samples, 0.09%)</title><rect x="622.9" y="1235.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="625.9" y="1246.0"></text>
</g>
<g>
<title>java/net/URI$Parser.at (1 samples, 0.02%)</title><rect x="623.2" y="1219.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="626.2" y="1230.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.02%)</title><rect x="623.2" y="1203.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="626.2" y="1214.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (1 samples, 0.02%)</title><rect x="623.2" y="1187.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="626.2" y="1198.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (2 samples, 0.05%)</title><rect x="623.5" y="1219.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="626.5" y="1230.0"></text>
</g>
<g>
<title>java/net/URI.match (1 samples, 0.02%)</title><rect x="623.8" y="1203.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="626.8" y="1214.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.02%)</title><rect x="623.8" y="1187.0" width="0.2" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="626.8" y="1198.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (1 samples, 0.02%)</title><rect x="624.0" y="1235.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="627.0" y="1246.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (4 samples, 0.09%)</title><rect x="624.3" y="1251.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="627.3" y="1262.0"></text>
</g>
<g>
<title>java/lang/String.charAt (3 samples, 0.07%)</title><rect x="624.6" y="1235.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="627.6" y="1246.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.02%)</title><rect x="624.8" y="1219.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="627.8" y="1230.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (1 samples, 0.02%)</title><rect x="625.1" y="1219.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="628.1" y="1230.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.05%)</title><rect x="625.4" y="1251.0" width="0.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="628.4" y="1262.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (3 samples, 0.07%)</title><rect x="625.9" y="1267.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="628.9" y="1278.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.02%)</title><rect x="626.5" y="1251.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="629.5" y="1262.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (1 samples, 0.02%)</title><rect x="626.7" y="1283.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="629.7" y="1294.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest.newBuilder (4 samples, 0.09%)</title><rect x="627.0" y="1331.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="630.0" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.&lt;init&gt; (4 samples, 0.09%)</title><rect x="627.0" y="1315.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="630.0" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkURI (3 samples, 0.07%)</title><rect x="627.3" y="1299.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="630.3" y="1310.0"></text>
</g>
<g>
<title>java/lang/String.equals (3 samples, 0.07%)</title><rect x="627.3" y="1283.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="630.3" y="1294.0"></text>
</g>
<g>
<title>java/util/ArrayList$Itr.hasNext (1 samples, 0.02%)</title><rect x="628.1" y="1331.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="631.1" y="1342.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (1 samples, 0.02%)</title><rect x="628.4" y="1331.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="631.4" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (119 samples, 2.74%)</title><rect x="628.6" y="1331.0" width="32.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="631.6" y="1342.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (119 samples, 2.74%)</title><rect x="628.6" y="1315.0" width="32.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="631.6" y="1326.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (119 samples, 2.74%)</title><rect x="628.6" y="1299.0" width="32.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="631.6" y="1310.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (119 samples, 2.74%)</title><rect x="628.6" y="1283.0" width="32.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="631.6" y="1294.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (1 samples, 0.02%)</title><rect x="628.6" y="1267.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="631.6" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.02%)</title><rect x="628.6" y="1251.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="631.6" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.&lt;init&gt; (1 samples, 0.02%)</title><rect x="628.6" y="1235.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="631.6" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (1 samples, 0.02%)</title><rect x="628.6" y="1219.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="631.6" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (73 samples, 1.68%)</title><rect x="628.9" y="1267.0" width="19.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="631.9" y="1278.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (6 samples, 0.14%)</title><rect x="629.5" y="1251.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="632.5" y="1262.0"></text>
</g>
<g>
<title>java/util/Collection.stream (1 samples, 0.02%)</title><rect x="629.5" y="1235.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="632.5" y="1246.0"></text>
</g>
<g>
<title>java/util/List.spliterator (1 samples, 0.02%)</title><rect x="629.5" y="1219.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="632.5" y="1230.0"></text>
</g>
<g>
<title>java/util/AbstractList$RandomAccessSpliterator.&lt;init&gt; (1 samples, 0.02%)</title><rect x="629.5" y="1203.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="632.5" y="1214.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (5 samples, 0.12%)</title><rect x="629.7" y="1235.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="632.7" y="1246.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (5 samples, 0.12%)</title><rect x="629.7" y="1219.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="632.7" y="1230.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.sourceSpliterator (3 samples, 0.07%)</title><rect x="629.7" y="1203.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="632.7" y="1214.0"></text>
</g>
<g>
<title>java/util/stream/StreamOpFlag.combineOpFlags (1 samples, 0.02%)</title><rect x="630.3" y="1187.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="633.3" y="1198.0"></text>
</g>
<g>
<title>java/util/stream/StreamOpFlag.getMask (1 samples, 0.02%)</title><rect x="630.3" y="1171.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="633.3" y="1182.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (2 samples, 0.05%)</title><rect x="630.5" y="1203.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="633.5" y="1214.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (2 samples, 0.05%)</title><rect x="630.5" y="1187.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="633.5" y="1198.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (2 samples, 0.05%)</title><rect x="630.5" y="1171.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="633.5" y="1182.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySpliterator.forEachRemaining (2 samples, 0.05%)</title><rect x="630.5" y="1155.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="633.5" y="1166.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (1 samples, 0.02%)</title><rect x="630.8" y="1139.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="633.8" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment$$Lambda$238/1066786881.test (1 samples, 0.02%)</title><rect x="630.8" y="1123.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="633.8" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.lambda$events$0 (1 samples, 0.02%)</title><rect x="630.8" y="1107.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="633.8" y="1118.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (10 samples, 0.23%)</title><rect x="631.1" y="1251.0" width="2.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="634.1" y="1262.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (9 samples, 0.21%)</title><rect x="631.4" y="1235.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="634.4" y="1246.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (8 samples, 0.18%)</title><rect x="631.6" y="1219.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="634.6" y="1230.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (8 samples, 0.18%)</title><rect x="631.6" y="1203.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="634.6" y="1214.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$115/937225413.accept (8 samples, 0.18%)</title><rect x="631.6" y="1187.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="634.6" y="1198.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (7 samples, 0.16%)</title><rect x="631.9" y="1171.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="634.9" y="1182.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (6 samples, 0.14%)</title><rect x="631.9" y="1155.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="634.9" y="1166.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$118/2131634163.accept (6 samples, 0.14%)</title><rect x="631.9" y="1139.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="634.9" y="1150.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (6 samples, 0.14%)</title><rect x="631.9" y="1123.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="634.9" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.trim (3 samples, 0.07%)</title><rect x="631.9" y="1107.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="634.9" y="1118.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (3 samples, 0.07%)</title><rect x="631.9" y="1091.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="634.9" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$64/1610702581.test (3 samples, 0.07%)</title><rect x="632.7" y="1107.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="635.7" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$2 (3 samples, 0.07%)</title><rect x="632.7" y="1091.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="635.7" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$63/1433666880.test (1 samples, 0.02%)</title><rect x="632.7" y="1075.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="635.7" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.isValidName (2 samples, 0.05%)</title><rect x="633.0" y="1075.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="636.0" y="1086.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.02%)</title><rect x="633.0" y="1059.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="636.0" y="1070.0"></text>
</g>
<g>
<title>java/lang/String.isEmpty (1 samples, 0.02%)</title><rect x="633.3" y="1059.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="636.3" y="1070.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="633.5" y="1155.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="636.5" y="1166.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="633.5" y="1139.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="636.5" y="1150.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$118/2131634163.get$Lambda (1 samples, 0.02%)</title><rect x="633.5" y="1123.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="636.5" y="1134.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$118/2131634163.&lt;init&gt; (1 samples, 0.02%)</title><rect x="633.5" y="1107.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="636.5" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkURI (2 samples, 0.05%)</title><rect x="633.8" y="1251.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="636.8" y="1262.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.02%)</title><rect x="634.1" y="1235.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="637.1" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (48 samples, 1.10%)</title><rect x="634.3" y="1251.0" width="13.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="637.3" y="1262.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (48 samples, 1.10%)</title><rect x="634.3" y="1235.0" width="13.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="637.3" y="1246.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (48 samples, 1.10%)</title><rect x="634.3" y="1219.0" width="13.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="637.3" y="1230.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.02%)</title><rect x="634.3" y="1203.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="637.3" y="1214.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (21 samples, 0.48%)</title><rect x="634.6" y="1203.0" width="5.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="637.6" y="1214.0"></text>
</g>
<g>
<title>Handle::Handle(Thread*, oopDesc*) (1 samples, 0.02%)</title><rect x="635.4" y="1187.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="638.4" y="1198.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.02%)</title><rect x="635.7" y="1187.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="638.7" y="1198.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 0.02%)</title><rect x="636.0" y="1187.0" width="0.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="639.0" y="1198.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.269] (1 samples, 0.02%)</title><rect x="636.0" y="1171.0" width="0.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="639.0" y="1182.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (6 samples, 0.14%)</title><rect x="636.2" y="1187.0" width="1.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="639.2" y="1198.0"></text>
</g>
<g>
<title>JavaCallArguments::parameters() (1 samples, 0.02%)</title><rect x="636.8" y="1171.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="639.8" y="1182.0"></text>
</g>
<g>
<title>JavaThread::can_call_java() const (1 samples, 0.02%)</title><rect x="637.1" y="1171.0" width="0.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="640.1" y="1182.0"></text>
</g>
<g>
<title>ThreadShadow::clear_pending_exception() (1 samples, 0.02%)</title><rect x="637.3" y="1171.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="640.3" y="1182.0"></text>
</g>
<g>
<title>os::stack_shadow_pages_available(Thread*, methodHandle const&amp;, unsigned char*) (1 samples, 0.02%)</title><rect x="637.6" y="1171.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="640.6" y="1182.0"></text>
</g>
<g>
<title>AbstractInterpreter::size_top_interpreter_activation(Method*) (1 samples, 0.02%)</title><rect x="637.6" y="1155.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="640.6" y="1166.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (2 samples, 0.05%)</title><rect x="637.9" y="1187.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="640.9" y="1198.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.02%)</title><rect x="638.4" y="1187.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="641.4" y="1198.0"></text>
</g>
<g>
<title>os::stack_shadow_pages_available(Thread*, methodHandle const&amp;, unsigned char*) (1 samples, 0.02%)</title><rect x="638.7" y="1187.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="641.7" y="1198.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (2 samples, 0.05%)</title><rect x="639.0" y="1187.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="642.0" y="1198.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.02%)</title><rect x="639.2" y="1171.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="642.2" y="1182.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.02%)</title><rect x="639.2" y="1155.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="642.2" y="1166.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (3 samples, 0.07%)</title><rect x="639.5" y="1187.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="642.5" y="1198.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (2 samples, 0.05%)</title><rect x="639.5" y="1171.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="642.5" y="1182.0"></text>
</g>
<g>
<title>Klass::is_subclass_of(Klass const*) const (1 samples, 0.02%)</title><rect x="639.8" y="1155.0" width="0.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="642.8" y="1166.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.02%)</title><rect x="640.0" y="1171.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="643.0" y="1182.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (1 samples, 0.02%)</title><rect x="640.0" y="1155.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="643.0" y="1166.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.02%)</title><rect x="640.0" y="1139.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="643.0" y="1150.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.02%)</title><rect x="640.0" y="1123.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="643.0" y="1134.0"></text>
</g>
<g>
<title>Java_java_security_AccessController_doPrivileged__Ljava_security_PrivilegedAction_2 (3 samples, 0.07%)</title><rect x="640.3" y="1203.0" width="0.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="643.3" y="1214.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.209] (1 samples, 0.02%)</title><rect x="641.1" y="1203.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="644.1" y="1214.0"></text>
</g>
<g>
<title>call_stub (2 samples, 0.05%)</title><rect x="641.4" y="1203.0" width="0.5" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="644.4" y="1214.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (1 samples, 0.02%)</title><rect x="641.9" y="1203.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="644.9" y="1214.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (19 samples, 0.44%)</title><rect x="642.2" y="1203.0" width="5.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="645.2" y="1214.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (16 samples, 0.37%)</title><rect x="643.0" y="1187.0" width="4.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="646.0" y="1198.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (8 samples, 0.18%)</title><rect x="643.8" y="1171.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="646.8" y="1182.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.02%)</title><rect x="643.8" y="1155.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="646.8" y="1166.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (7 samples, 0.16%)</title><rect x="644.1" y="1155.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="647.1" y="1166.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (3 samples, 0.07%)</title><rect x="644.4" y="1139.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="647.4" y="1150.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.07%)</title><rect x="645.2" y="1139.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="648.2" y="1150.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (2 samples, 0.05%)</title><rect x="645.2" y="1123.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="648.2" y="1134.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (2 samples, 0.05%)</title><rect x="645.2" y="1107.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="648.2" y="1118.0"></text>
</g>
<g>
<title>java/lang/CharacterData.of (2 samples, 0.05%)</title><rect x="645.2" y="1091.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="648.2" y="1102.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.02%)</title><rect x="645.7" y="1123.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="648.7" y="1134.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.02%)</title><rect x="645.7" y="1107.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="648.7" y="1118.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="645.7" y="1091.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="648.7" y="1102.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="645.7" y="1075.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="648.7" y="1086.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="645.7" y="1059.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="648.7" y="1070.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="645.7" y="1043.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="648.7" y="1054.0"></text>
</g>
<g>
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="645.7" y="1027.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="648.7" y="1038.0"></text>
</g>
<g>
<title>call_timer_fn (1 samples, 0.02%)</title><rect x="645.7" y="1011.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="648.7" y="1022.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.02%)</title><rect x="645.7" y="995.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="648.7" y="1006.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="645.7" y="979.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="648.7" y="990.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.02%)</title><rect x="646.0" y="1171.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="649.0" y="1182.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.02%)</title><rect x="646.0" y="1155.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="649.0" y="1166.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.02%)</title><rect x="646.0" y="1139.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="649.0" y="1150.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.02%)</title><rect x="646.0" y="1123.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="649.0" y="1134.0"></text>
</g>
<g>
<title>sun/net/NetProperties.get (4 samples, 0.09%)</title><rect x="646.3" y="1171.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="649.3" y="1182.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (4 samples, 0.09%)</title><rect x="646.3" y="1155.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="649.3" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (4 samples, 0.09%)</title><rect x="646.3" y="1139.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="649.3" y="1150.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.05%)</title><rect x="646.6" y="1123.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="649.6" y="1134.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (2 samples, 0.05%)</title><rect x="646.6" y="1107.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="649.6" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.spread (1 samples, 0.02%)</title><rect x="647.1" y="1123.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="650.1" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.timeout (1 samples, 0.02%)</title><rect x="647.4" y="1251.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="650.4" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (4 samples, 0.09%)</title><rect x="647.6" y="1251.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="650.6" y="1262.0"></text>
</g>
<g>
<title>java/util/TreeMap.&lt;init&gt; (3 samples, 0.07%)</title><rect x="647.9" y="1235.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="650.9" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (14 samples, 0.32%)</title><rect x="648.7" y="1267.0" width="3.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="651.7" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.&lt;init&gt; (1 samples, 0.02%)</title><rect x="649.5" y="1251.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="652.5" y="1262.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="649.5" y="1235.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="652.5" y="1246.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="649.5" y="1219.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="652.5" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$125/1199316342.get$Lambda (1 samples, 0.02%)</title><rect x="649.5" y="1203.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="652.5" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$125/1199316342.&lt;init&gt; (1 samples, 0.02%)</title><rect x="649.5" y="1187.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="652.5" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (10 samples, 0.23%)</title><rect x="649.8" y="1251.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="652.8" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (9 samples, 0.21%)</title><rect x="650.1" y="1235.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="653.1" y="1246.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (2 samples, 0.05%)</title><rect x="650.1" y="1219.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="653.1" y="1230.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor0 (2 samples, 0.05%)</title><rect x="650.1" y="1203.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="653.1" y="1214.0"></text>
</g>
<g>
<title>java/lang/Class.privateGetDeclaredConstructors (1 samples, 0.02%)</title><rect x="650.4" y="1187.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="653.4" y="1198.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (5 samples, 0.12%)</title><rect x="650.6" y="1219.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="653.6" y="1230.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.checkAccess (4 samples, 0.09%)</title><rect x="650.6" y="1203.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="653.6" y="1214.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.verifyAccess (4 samples, 0.09%)</title><rect x="650.6" y="1187.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="653.6" y="1198.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.slowVerifyAccess (4 samples, 0.09%)</title><rect x="650.6" y="1171.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="653.6" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/reflect/Reflection.verifyMemberAccess (2 samples, 0.05%)</title><rect x="651.2" y="1155.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="654.2" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/reflect/Reflection.isSameClassPackage (1 samples, 0.02%)</title><rect x="651.2" y="1139.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="654.2" y="1150.0"></text>
</g>
<g>
<title>java/lang/Class.getPackageName (1 samples, 0.02%)</title><rect x="651.2" y="1123.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="654.2" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/reflect/Reflection.verifyModuleAccess (1 samples, 0.02%)</title><rect x="651.4" y="1139.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="654.4" y="1150.0"></text>
</g>
<g>
<title>java/lang/Class.getModule (1 samples, 0.02%)</title><rect x="651.4" y="1123.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="654.4" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (1 samples, 0.02%)</title><rect x="651.7" y="1203.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="654.7" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor10.newInstance (1 samples, 0.02%)</title><rect x="651.7" y="1187.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="654.7" y="1198.0"></text>
</g>
<g>
<title>java/util/AbstractSequentialList.iterator (1 samples, 0.02%)</title><rect x="652.0" y="1219.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="655.0" y="1230.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (1 samples, 0.02%)</title><rect x="652.0" y="1203.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="655.0" y="1214.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (1 samples, 0.02%)</title><rect x="652.0" y="1187.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="655.0" y="1198.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.&lt;init&gt; (1 samples, 0.02%)</title><rect x="652.0" y="1171.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="655.0" y="1182.0"></text>
</g>
<g>
<title>java/util/LinkedList.&lt;init&gt; (1 samples, 0.02%)</title><rect x="652.3" y="1219.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="655.3" y="1230.0"></text>
</g>
<g>
<title>java/util/AbstractSequentialList.&lt;init&gt; (1 samples, 0.02%)</title><rect x="652.3" y="1203.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="655.3" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (31 samples, 0.71%)</title><rect x="652.5" y="1267.0" width="8.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="655.5" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (30 samples, 0.69%)</title><rect x="652.5" y="1251.0" width="8.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="655.5" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.&lt;init&gt; (1 samples, 0.02%)</title><rect x="652.5" y="1235.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="655.5" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (29 samples, 0.67%)</title><rect x="652.8" y="1235.0" width="7.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="655.8" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (27 samples, 0.62%)</title><rect x="653.3" y="1219.0" width="7.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="656.3" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (24 samples, 0.55%)</title><rect x="653.6" y="1203.0" width="6.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="656.6" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (24 samples, 0.55%)</title><rect x="653.6" y="1187.0" width="6.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="656.6" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (24 samples, 0.55%)</title><rect x="653.6" y="1171.0" width="6.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="656.6" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (24 samples, 0.55%)</title><rect x="653.6" y="1155.0" width="6.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="656.6" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (24 samples, 0.55%)</title><rect x="653.6" y="1139.0" width="6.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="656.6" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (24 samples, 0.55%)</title><rect x="653.6" y="1123.0" width="6.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="656.6" y="1134.0"></text>
</g>
<g>
<title>Unsafe_Unpark (8 samples, 0.18%)</title><rect x="653.6" y="1107.0" width="2.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="656.6" y="1118.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.229] (2 samples, 0.05%)</title><rect x="653.9" y="1091.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="656.9" y="1102.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (3 samples, 0.07%)</title><rect x="654.4" y="1091.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="657.4" y="1102.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.02%)</title><rect x="655.2" y="1091.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="658.2" y="1102.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (1 samples, 0.02%)</title><rect x="655.5" y="1091.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="658.5" y="1102.0"></text>
</g>
<g>
<title>__pthread_cond_signal (16 samples, 0.37%)</title><rect x="655.8" y="1107.0" width="4.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="658.8" y="1118.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (13 samples, 0.30%)</title><rect x="656.6" y="1091.0" width="3.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="659.6" y="1102.0"></text>
</g>
<g>
<title>do_syscall_64 (13 samples, 0.30%)</title><rect x="656.6" y="1075.0" width="3.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="659.6" y="1086.0"></text>
</g>
<g>
<title>__x64_sys_futex (13 samples, 0.30%)</title><rect x="656.6" y="1059.0" width="3.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="659.6" y="1070.0"></text>
</g>
<g>
<title>do_futex (13 samples, 0.30%)</title><rect x="656.6" y="1043.0" width="3.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="659.6" y="1054.0"></text>
</g>
<g>
<title>futex_wake (13 samples, 0.30%)</title><rect x="656.6" y="1027.0" width="3.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="659.6" y="1038.0"></text>
</g>
<g>
<title>wake_up_q (13 samples, 0.30%)</title><rect x="656.6" y="1011.0" width="3.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="659.6" y="1022.0"></text>
</g>
<g>
<title>try_to_wake_up (13 samples, 0.30%)</title><rect x="656.6" y="995.0" width="3.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="659.6" y="1006.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (13 samples, 0.30%)</title><rect x="656.6" y="979.0" width="3.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="659.6" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.02%)</title><rect x="660.1" y="1203.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="663.1" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.02%)</title><rect x="660.1" y="1187.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="663.1" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.02%)</title><rect x="660.4" y="1203.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="663.4" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.02%)</title><rect x="660.4" y="1187.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="663.4" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (1 samples, 0.02%)</title><rect x="660.4" y="1171.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="663.4" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (1 samples, 0.02%)</title><rect x="660.4" y="1155.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="663.4" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.&lt;init&gt; (1 samples, 0.02%)</title><rect x="660.7" y="1251.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="663.7" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.incrementAndGet (1 samples, 0.02%)</title><rect x="660.7" y="1235.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="663.7" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (10 samples, 0.23%)</title><rect x="660.9" y="1331.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="663.9" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (9 samples, 0.21%)</title><rect x="661.2" y="1315.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="664.2" y="1326.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (8 samples, 0.18%)</title><rect x="661.2" y="1299.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="664.2" y="1310.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (8 samples, 0.18%)</title><rect x="661.2" y="1283.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="664.2" y="1294.0"></text>
</g>
<g>
<title>java/util/AbstractMap.isEmpty (1 samples, 0.02%)</title><rect x="661.2" y="1267.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="664.2" y="1278.0"></text>
</g>
<g>
<title>java/util/TreeMap.size (1 samples, 0.02%)</title><rect x="661.2" y="1251.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="664.2" y="1262.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (1 samples, 0.02%)</title><rect x="661.2" y="1235.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="664.2" y="1246.0"></text>
</g>
<g>
<title>java/util/TreeMap.&lt;init&gt; (1 samples, 0.02%)</title><rect x="661.5" y="1267.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="664.5" y="1278.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (6 samples, 0.14%)</title><rect x="661.8" y="1267.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="664.8" y="1278.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$115/937225413.accept (6 samples, 0.14%)</title><rect x="661.8" y="1251.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="664.8" y="1262.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (6 samples, 0.14%)</title><rect x="661.8" y="1235.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="664.8" y="1246.0"></text>
</g>
<g>
<title>java/lang/String.trim (1 samples, 0.02%)</title><rect x="661.8" y="1219.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="664.8" y="1230.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (1 samples, 0.02%)</title><rect x="661.8" y="1203.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="664.8" y="1214.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.02%)</title><rect x="661.8" y="1187.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="664.8" y="1198.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.02%)</title><rect x="661.8" y="1171.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="664.8" y="1182.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.02%)</title><rect x="661.8" y="1155.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="664.8" y="1166.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.02%)</title><rect x="661.8" y="1139.0" width="0.2" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="664.8" y="1150.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (3 samples, 0.07%)</title><rect x="662.0" y="1219.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="665.0" y="1230.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$118/2131634163.accept (2 samples, 0.05%)</title><rect x="662.3" y="1203.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="665.3" y="1214.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (2 samples, 0.05%)</title><rect x="662.3" y="1187.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="665.3" y="1198.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.02%)</title><rect x="662.3" y="1171.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="665.3" y="1182.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.02%)</title><rect x="662.3" y="1155.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="665.3" y="1166.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.02%)</title><rect x="662.3" y="1139.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="665.3" y="1150.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.02%)</title><rect x="662.3" y="1123.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="665.3" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$63/1433666880.test (1 samples, 0.02%)</title><rect x="662.6" y="1171.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="665.6" y="1182.0"></text>
</g>
<g>
<title>java/util/List.copyOf (2 samples, 0.05%)</title><rect x="662.8" y="1219.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="665.8" y="1230.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (2 samples, 0.05%)</title><rect x="662.8" y="1203.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="665.8" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.map (1 samples, 0.02%)</title><rect x="663.4" y="1299.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="666.4" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.setHeader (8 samples, 0.18%)</title><rect x="663.7" y="1331.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="666.7" y="1342.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (2 samples, 0.05%)</title><rect x="663.7" y="1315.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="666.7" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.setHeader (6 samples, 0.14%)</title><rect x="664.2" y="1315.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="667.2" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkNameAndValue (5 samples, 0.12%)</title><rect x="664.2" y="1299.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="667.2" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$63/1433666880.test (3 samples, 0.07%)</title><rect x="664.2" y="1283.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="667.2" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$1 (2 samples, 0.05%)</title><rect x="664.5" y="1267.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="667.5" y="1278.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.contains (2 samples, 0.05%)</title><rect x="664.5" y="1251.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="667.5" y="1262.0"></text>
</g>
<g>
<title>java/util/TreeSet.contains (2 samples, 0.05%)</title><rect x="664.5" y="1235.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="667.5" y="1246.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (2 samples, 0.05%)</title><rect x="664.5" y="1219.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="667.5" y="1230.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (2 samples, 0.05%)</title><rect x="664.5" y="1203.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="667.5" y="1214.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (2 samples, 0.05%)</title><rect x="664.5" y="1187.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="667.5" y="1198.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.05%)</title><rect x="664.5" y="1171.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="667.5" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.isValidName (1 samples, 0.02%)</title><rect x="665.0" y="1283.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="668.0" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.isValidValue (1 samples, 0.02%)</title><rect x="665.3" y="1283.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="668.3" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (1 samples, 0.02%)</title><rect x="665.6" y="1299.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="668.6" y="1310.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1 samples, 0.02%)</title><rect x="665.6" y="1283.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="668.6" y="1294.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (1 samples, 0.02%)</title><rect x="665.6" y="1267.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="668.6" y="1278.0"></text>
</g>
<g>
<title>java/util/TreeMap.rotateRight (1 samples, 0.02%)</title><rect x="665.6" y="1251.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="668.6" y="1262.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.getFirstResponses (18 samples, 0.41%)</title><rect x="665.8" y="1331.0" width="4.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="668.8" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.orTimeout (15 samples, 0.35%)</title><rect x="665.8" y="1315.0" width="4.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="668.8" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Delayer.delay (12 samples, 0.28%)</title><rect x="666.1" y="1299.0" width="3.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="669.1" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor.schedule (12 samples, 0.28%)</title><rect x="666.1" y="1283.0" width="3.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="669.1" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor.delayedExecute (12 samples, 0.28%)</title><rect x="666.1" y="1267.0" width="3.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="669.1" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.add (12 samples, 0.28%)</title><rect x="666.1" y="1251.0" width="3.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="669.1" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.add (12 samples, 0.28%)</title><rect x="666.1" y="1235.0" width="3.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="669.1" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.offer (12 samples, 0.28%)</title><rect x="666.1" y="1219.0" width="3.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="669.1" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (12 samples, 0.28%)</title><rect x="666.1" y="1203.0" width="3.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="669.1" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (12 samples, 0.28%)</title><rect x="666.1" y="1187.0" width="3.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="669.1" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (12 samples, 0.28%)</title><rect x="666.1" y="1171.0" width="3.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="669.1" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (12 samples, 0.28%)</title><rect x="666.1" y="1155.0" width="3.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="669.1" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (12 samples, 0.28%)</title><rect x="666.1" y="1139.0" width="3.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="669.1" y="1150.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.02%)</title><rect x="666.1" y="1123.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="669.1" y="1134.0"></text>
</g>
<g>
<title>java_lang_Thread::park_event(oopDesc*) (1 samples, 0.02%)</title><rect x="666.1" y="1107.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="669.1" y="1118.0"></text>
</g>
<g>
<title>__pthread_cond_signal (11 samples, 0.25%)</title><rect x="666.4" y="1123.0" width="3.0" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="669.4" y="1134.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.21%)</title><rect x="666.9" y="1107.0" width="2.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="669.9" y="1118.0"></text>
</g>
<g>
<title>do_syscall_64 (9 samples, 0.21%)</title><rect x="666.9" y="1091.0" width="2.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="669.9" y="1102.0"></text>
</g>
<g>
<title>__x64_sys_futex (9 samples, 0.21%)</title><rect x="666.9" y="1075.0" width="2.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="669.9" y="1086.0"></text>
</g>
<g>
<title>do_futex (8 samples, 0.18%)</title><rect x="667.2" y="1059.0" width="2.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="670.2" y="1070.0"></text>
</g>
<g>
<title>futex_wake (8 samples, 0.18%)</title><rect x="667.2" y="1043.0" width="2.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="670.2" y="1054.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.02%)</title><rect x="667.2" y="1027.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="670.2" y="1038.0"></text>
</g>
<g>
<title>wake_up_q (7 samples, 0.16%)</title><rect x="667.5" y="1027.0" width="1.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="670.5" y="1038.0"></text>
</g>
<g>
<title>try_to_wake_up (7 samples, 0.16%)</title><rect x="667.5" y="1011.0" width="1.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="670.5" y="1022.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (7 samples, 0.16%)</title><rect x="667.5" y="995.0" width="1.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="670.5" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Timeout.&lt;init&gt; (1 samples, 0.02%)</title><rect x="669.4" y="1299.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="672.4" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1 samples, 0.02%)</title><rect x="669.6" y="1299.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="672.6" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.&lt;init&gt; (3 samples, 0.07%)</title><rect x="669.9" y="1315.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="672.9" y="1326.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="670.4" y="1299.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="673.4" y="1310.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="670.4" y="1283.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="673.4" y="1294.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="670.4" y="1267.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="673.4" y="1278.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="670.4" y="1251.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="673.4" y="1262.0"></text>
</g>
<g>
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="670.4" y="1235.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="673.4" y="1246.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.sendResponse (211 samples, 4.85%)</title><rect x="670.7" y="1347.0" width="57.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="673.7" y="1358.0">ru/mai..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (211 samples, 4.85%)</title><rect x="670.7" y="1331.0" width="57.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="673.7" y="1342.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (210 samples, 4.83%)</title><rect x="671.0" y="1315.0" width="57.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="674.0" y="1326.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (6 samples, 0.14%)</title><rect x="671.0" y="1299.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="674.0" y="1310.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="671.3" y="1283.0" width="0.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="674.3" y="1294.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (4 samples, 0.09%)</title><rect x="671.5" y="1283.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="674.5" y="1294.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (2 samples, 0.05%)</title><rect x="671.5" y="1267.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="674.5" y="1278.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.02%)</title><rect x="671.8" y="1251.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="674.8" y="1262.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.05%)</title><rect x="672.1" y="1267.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="675.1" y="1278.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.05%)</title><rect x="672.1" y="1251.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="675.1" y="1262.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.02%)</title><rect x="672.3" y="1235.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="675.3" y="1246.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.02%)</title><rect x="672.3" y="1219.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="675.3" y="1230.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (204 samples, 4.69%)</title><rect x="672.6" y="1299.0" width="55.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="675.6" y="1310.0">one/n..</text>
</g>
<g>
<title>one/nio/net/Session.write (204 samples, 4.69%)</title><rect x="672.6" y="1283.0" width="55.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="675.6" y="1294.0">one/n..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (203 samples, 4.67%)</title><rect x="672.6" y="1267.0" width="55.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="675.6" y="1278.0">one/n..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (203 samples, 4.67%)</title><rect x="672.6" y="1251.0" width="55.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="675.6" y="1262.0">one/n..</text>
</g>
<g>
<title>.annobin_send.c (193 samples, 4.44%)</title><rect x="673.7" y="1235.0" width="52.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="676.7" y="1246.0">.anno..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (188 samples, 4.32%)</title><rect x="675.1" y="1219.0" width="51.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="678.1" y="1230.0">entry..</text>
</g>
<g>
<title>do_syscall_64 (188 samples, 4.32%)</title><rect x="675.1" y="1203.0" width="51.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="678.1" y="1214.0">do_sy..</text>
</g>
<g>
<title>__x64_sys_sendto (186 samples, 4.28%)</title><rect x="675.6" y="1187.0" width="50.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="678.6" y="1198.0">__x64..</text>
</g>
<g>
<title>__sys_sendto (186 samples, 4.28%)</title><rect x="675.6" y="1171.0" width="50.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="678.6" y="1182.0">__sys..</text>
</g>
<g>
<title>sock_sendmsg (175 samples, 4.03%)</title><rect x="675.9" y="1155.0" width="47.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="678.9" y="1166.0">sock..</text>
</g>
<g>
<title>security_socket_sendmsg (2 samples, 0.05%)</title><rect x="676.1" y="1139.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="679.1" y="1150.0"></text>
</g>
<g>
<title>sock_has_perm (2 samples, 0.05%)</title><rect x="676.1" y="1123.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="679.1" y="1134.0"></text>
</g>
<g>
<title>tcp_sendmsg (172 samples, 3.96%)</title><rect x="676.7" y="1139.0" width="46.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="679.7" y="1150.0">tcp_..</text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.02%)</title><rect x="676.7" y="1123.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="679.7" y="1134.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.02%)</title><rect x="676.7" y="1107.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="679.7" y="1118.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.02%)</title><rect x="677.0" y="1123.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="680.0" y="1134.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.02%)</title><rect x="677.0" y="1107.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="680.0" y="1118.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (170 samples, 3.91%)</title><rect x="677.2" y="1123.0" width="46.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="680.2" y="1134.0">tcp_..</text>
</g>
<g>
<title>__check_object_size (2 samples, 0.05%)</title><rect x="677.5" y="1107.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="680.5" y="1118.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.02%)</title><rect x="677.8" y="1091.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="680.8" y="1102.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (153 samples, 3.52%)</title><rect x="678.0" y="1107.0" width="41.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="681.0" y="1118.0">__t..</text>
</g>
<g>
<title>tcp_write_xmit (152 samples, 3.50%)</title><rect x="678.3" y="1091.0" width="41.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="681.3" y="1102.0">tcp..</text>
</g>
<g>
<title>__tcp_transmit_skb (141 samples, 3.24%)</title><rect x="678.9" y="1075.0" width="38.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="681.9" y="1086.0">__t..</text>
</g>
<g>
<title>__ip_queue_xmit (132 samples, 3.04%)</title><rect x="679.4" y="1059.0" width="35.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="682.4" y="1070.0">__i..</text>
</g>
<g>
<title>ip_copy_addrs (1 samples, 0.02%)</title><rect x="679.4" y="1043.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="682.4" y="1054.0"></text>
</g>
<g>
<title>ip_local_out (39 samples, 0.90%)</title><rect x="679.7" y="1043.0" width="10.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="682.7" y="1054.0"></text>
</g>
<g>
<title>__ip_local_out (39 samples, 0.90%)</title><rect x="679.7" y="1027.0" width="10.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="682.7" y="1038.0"></text>
</g>
<g>
<title>ip_send_check (1 samples, 0.02%)</title><rect x="680.2" y="1011.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="683.2" y="1022.0"></text>
</g>
<g>
<title>nf_hook_slow (36 samples, 0.83%)</title><rect x="680.5" y="1011.0" width="9.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="683.5" y="1022.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (13 samples, 0.30%)</title><rect x="681.0" y="995.0" width="3.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="684.0" y="1006.0"></text>
</g>
<g>
<title>iptable_filter_hook	[iptable_filter] (2 samples, 0.05%)</title><rect x="684.6" y="995.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="687.6" y="1006.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (3 samples, 0.07%)</title><rect x="685.1" y="995.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="688.1" y="1006.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (3 samples, 0.07%)</title><rect x="685.1" y="979.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="688.1" y="990.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="685.6" y="963.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="688.6" y="974.0"></text>
</g>
<g>
<title>iptable_raw_hook	[iptable_raw] (1 samples, 0.02%)</title><rect x="685.9" y="995.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="688.9" y="1006.0"></text>
</g>
<g>
<title>iptable_security_hook	[iptable_security] (2 samples, 0.05%)</title><rect x="686.2" y="995.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="689.2" y="1006.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag	[nf_defrag_ipv4] (2 samples, 0.05%)</title><rect x="686.7" y="995.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="689.7" y="1006.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (10 samples, 0.23%)</title><rect x="687.3" y="995.0" width="2.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="690.3" y="1006.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get	[nf_conntrack] (3 samples, 0.07%)</title><rect x="687.5" y="979.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="690.5" y="990.0"></text>
</g>
<g>
<title>get_l4proto	[nf_conntrack] (1 samples, 0.02%)</title><rect x="688.4" y="979.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="691.4" y="990.0"></text>
</g>
<g>
<title>hash_conntrack_raw	[nf_conntrack] (1 samples, 0.02%)</title><rect x="688.6" y="979.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="691.6" y="990.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet	[nf_conntrack] (4 samples, 0.09%)</title><rect x="688.9" y="979.0" width="1.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="691.9" y="990.0"></text>
</g>
<g>
<title>nf_ct_seq_offset	[nf_conntrack] (2 samples, 0.05%)</title><rect x="689.4" y="963.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="692.4" y="974.0"></text>
</g>
<g>
<title>selinux_ipv4_output (1 samples, 0.02%)</title><rect x="690.0" y="995.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="693.0" y="1006.0"></text>
</g>
<g>
<title>ip_output (92 samples, 2.12%)</title><rect x="690.3" y="1043.0" width="24.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="693.3" y="1054.0">i..</text>
</g>
<g>
<title>ip_finish_output2 (83 samples, 1.91%)</title><rect x="690.5" y="1027.0" width="22.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="693.5" y="1038.0">i..</text>
</g>
<g>
<title>__dev_queue_xmit (9 samples, 0.21%)</title><rect x="691.1" y="1011.0" width="2.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="694.1" y="1022.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="691.6" y="995.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="694.6" y="1006.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (6 samples, 0.14%)</title><rect x="691.9" y="995.0" width="1.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="694.9" y="1006.0"></text>
</g>
<g>
<title>loopback_xmit (5 samples, 0.12%)</title><rect x="692.2" y="979.0" width="1.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="695.2" y="990.0"></text>
</g>
<g>
<title>netif_rx (3 samples, 0.07%)</title><rect x="692.2" y="963.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="695.2" y="974.0"></text>
</g>
<g>
<title>netif_rx_internal (3 samples, 0.07%)</title><rect x="692.2" y="947.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="695.2" y="958.0"></text>
</g>
<g>
<title>ktime_get_with_offset (3 samples, 0.07%)</title><rect x="692.2" y="931.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="695.2" y="942.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (1 samples, 0.02%)</title><rect x="693.0" y="963.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="696.0" y="974.0"></text>
</g>
<g>
<title>tcp_wfree (1 samples, 0.02%)</title><rect x="693.2" y="963.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="696.2" y="974.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (72 samples, 1.66%)</title><rect x="693.5" y="1011.0" width="19.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="696.5" y="1022.0"></text>
</g>
<g>
<title>do_softirq.part.0 (72 samples, 1.66%)</title><rect x="693.5" y="995.0" width="19.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="696.5" y="1006.0"></text>
</g>
<g>
<title>do_softirq_own_stack (70 samples, 1.61%)</title><rect x="694.1" y="979.0" width="19.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="697.1" y="990.0"></text>
</g>
<g>
<title>__softirqentry_text_start (70 samples, 1.61%)</title><rect x="694.1" y="963.0" width="19.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="697.1" y="974.0"></text>
</g>
<g>
<title>net_rx_action (68 samples, 1.56%)</title><rect x="694.6" y="947.0" width="18.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="697.6" y="958.0"></text>
</g>
<g>
<title>__kfree_skb_flush (1 samples, 0.02%)</title><rect x="695.4" y="931.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="698.4" y="942.0"></text>
</g>
<g>
<title>process_backlog (64 samples, 1.47%)</title><rect x="695.7" y="931.0" width="17.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="698.7" y="942.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (62 samples, 1.43%)</title><rect x="696.2" y="915.0" width="16.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="699.2" y="926.0"></text>
</g>
<g>
<title>ip_rcv (62 samples, 1.43%)</title><rect x="696.2" y="899.0" width="16.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="699.2" y="910.0"></text>
</g>
<g>
<title>ip_local_deliver (42 samples, 0.97%)</title><rect x="696.5" y="883.0" width="11.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="699.5" y="894.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (34 samples, 0.78%)</title><rect x="696.5" y="867.0" width="9.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="699.5" y="878.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (34 samples, 0.78%)</title><rect x="696.5" y="851.0" width="9.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="699.5" y="862.0"></text>
</g>
<g>
<title>raw_local_deliver (2 samples, 0.05%)</title><rect x="696.5" y="835.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="699.5" y="846.0"></text>
</g>
<g>
<title>tcp_v4_rcv (32 samples, 0.74%)</title><rect x="697.0" y="835.0" width="8.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="700.0" y="846.0"></text>
</g>
<g>
<title>__inet_lookup_established (4 samples, 0.09%)</title><rect x="697.9" y="819.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="700.9" y="830.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (25 samples, 0.58%)</title><rect x="698.9" y="819.0" width="6.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="701.9" y="830.0"></text>
</g>
<g>
<title>tcp_rcv_established (25 samples, 0.58%)</title><rect x="698.9" y="803.0" width="6.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="701.9" y="814.0"></text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.07%)</title><rect x="699.8" y="787.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="702.8" y="798.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.05%)</title><rect x="700.0" y="771.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="703.0" y="782.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="700.3" y="755.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="703.3" y="766.0"></text>
</g>
<g>
<title>sock_def_readable (16 samples, 0.37%)</title><rect x="700.6" y="787.0" width="4.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="703.6" y="798.0"></text>
</g>
<g>
<title>__wake_up_common_lock (16 samples, 0.37%)</title><rect x="700.6" y="771.0" width="4.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="703.6" y="782.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="700.6" y="755.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="703.6" y="766.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (15 samples, 0.35%)</title><rect x="700.8" y="755.0" width="4.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="703.8" y="766.0"></text>
</g>
<g>
<title>tcp_event_data_recv (3 samples, 0.07%)</title><rect x="704.9" y="787.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="707.9" y="798.0"></text>
</g>
<g>
<title>nf_hook_slow (8 samples, 0.18%)</title><rect x="705.7" y="867.0" width="2.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="708.7" y="878.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (7 samples, 0.16%)</title><rect x="706.0" y="851.0" width="1.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="709.0" y="862.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="707.4" y="835.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="710.4" y="846.0"></text>
</g>
<g>
<title>conntrack_mt	[xt_conntrack] (1 samples, 0.02%)</title><rect x="707.6" y="835.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="710.6" y="846.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (1 samples, 0.02%)</title><rect x="707.9" y="883.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="710.9" y="894.0"></text>
</g>
<g>
<title>nf_hook_slow (18 samples, 0.41%)</title><rect x="708.2" y="883.0" width="4.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="711.2" y="894.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (13 samples, 0.30%)</title><rect x="708.7" y="867.0" width="3.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="711.7" y="878.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag	[nf_defrag_ipv4] (1 samples, 0.02%)</title><rect x="712.2" y="867.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="715.2" y="878.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (1 samples, 0.02%)</title><rect x="712.5" y="867.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="715.5" y="878.0"></text>
</g>
<g>
<title>nf_nat_ipv4_in	[nf_nat] (1 samples, 0.02%)</title><rect x="712.8" y="867.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="715.8" y="878.0"></text>
</g>
<g>
<title>ip_finish_output (2 samples, 0.05%)</title><rect x="713.1" y="1027.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="716.1" y="1038.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.02%)</title><rect x="713.3" y="1011.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="716.3" y="1022.0"></text>
</g>
<g>
<title>nf_hook_slow (6 samples, 0.14%)</title><rect x="713.6" y="1027.0" width="1.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="716.6" y="1038.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (3 samples, 0.07%)</title><rect x="713.6" y="1011.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="716.6" y="1022.0"></text>
</g>
<g>
<title>nf_confirm	[nf_conntrack] (1 samples, 0.02%)</title><rect x="714.4" y="1011.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="717.4" y="1022.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events	[nf_conntrack] (1 samples, 0.02%)</title><rect x="714.4" y="995.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="717.4" y="1006.0"></text>
</g>
<g>
<title>selinux_ip_postroute (2 samples, 0.05%)</title><rect x="714.7" y="1011.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="717.7" y="1022.0"></text>
</g>
<g>
<title>__skb_clone (2 samples, 0.05%)</title><rect x="715.2" y="1059.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="718.2" y="1070.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (1 samples, 0.02%)</title><rect x="715.8" y="1059.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="718.8" y="1070.0"></text>
</g>
<g>
<title>tcp_rate_skb_sent (1 samples, 0.02%)</title><rect x="716.0" y="1059.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="719.0" y="1070.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (1 samples, 0.02%)</title><rect x="716.3" y="1059.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="719.3" y="1070.0"></text>
</g>
<g>
<title>tcp_v4_send_check (2 samples, 0.05%)</title><rect x="716.6" y="1059.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="719.6" y="1070.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (7 samples, 0.16%)</title><rect x="717.1" y="1075.0" width="1.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="720.1" y="1086.0"></text>
</g>
<g>
<title>sk_reset_timer (5 samples, 0.12%)</title><rect x="717.1" y="1059.0" width="1.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="720.1" y="1070.0"></text>
</g>
<g>
<title>mod_timer (5 samples, 0.12%)</title><rect x="717.1" y="1043.0" width="1.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="720.1" y="1054.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (5 samples, 0.12%)</title><rect x="717.1" y="1027.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="720.1" y="1038.0"></text>
</g>
<g>
<title>tcp_rearm_rto (2 samples, 0.05%)</title><rect x="718.5" y="1059.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="721.5" y="1070.0"></text>
</g>
<g>
<title>rb_first (1 samples, 0.02%)</title><rect x="718.8" y="1043.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="721.8" y="1054.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (2 samples, 0.05%)</title><rect x="719.0" y="1075.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="722.0" y="1086.0"></text>
</g>
<g>
<title>rb_first (1 samples, 0.02%)</title><rect x="719.0" y="1059.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="722.0" y="1070.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.02%)</title><rect x="719.3" y="1059.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="722.3" y="1070.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.02%)</title><rect x="719.3" y="1043.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="722.3" y="1054.0"></text>
</g>
<g>
<title>_copy_from_iter_full (2 samples, 0.05%)</title><rect x="719.6" y="1107.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="722.6" y="1118.0"></text>
</g>
<g>
<title>iov_iter_advance (2 samples, 0.05%)</title><rect x="719.6" y="1091.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="722.6" y="1102.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (8 samples, 0.18%)</title><rect x="720.1" y="1107.0" width="2.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="723.1" y="1118.0"></text>
</g>
<g>
<title>__alloc_skb (8 samples, 0.18%)</title><rect x="720.1" y="1091.0" width="2.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="723.1" y="1102.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (7 samples, 0.16%)</title><rect x="720.1" y="1075.0" width="1.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="723.1" y="1086.0"></text>
</g>
<g>
<title>__slab_alloc (1 samples, 0.02%)</title><rect x="721.5" y="1059.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="724.5" y="1070.0"></text>
</g>
<g>
<title>should_failslab (1 samples, 0.02%)</title><rect x="721.7" y="1059.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="724.7" y="1070.0"></text>
</g>
<g>
<title>ksize (1 samples, 0.02%)</title><rect x="722.0" y="1075.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="725.0" y="1086.0"></text>
</g>
<g>
<title>skb_entail (1 samples, 0.02%)</title><rect x="722.3" y="1107.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="725.3" y="1118.0"></text>
</g>
<g>
<title>tcp_send_mss (3 samples, 0.07%)</title><rect x="722.6" y="1107.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="725.6" y="1118.0"></text>
</g>
<g>
<title>tcp_current_mss (2 samples, 0.05%)</title><rect x="722.8" y="1091.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="725.8" y="1102.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.02%)</title><rect x="723.1" y="1075.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="726.1" y="1086.0"></text>
</g>
<g>
<title>sockfd_lookup_light (10 samples, 0.23%)</title><rect x="723.4" y="1155.0" width="2.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="726.4" y="1166.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.02%)</title><rect x="723.4" y="1139.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="726.4" y="1150.0"></text>
</g>
<g>
<title>__fget_light (9 samples, 0.21%)</title><rect x="723.6" y="1139.0" width="2.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="726.6" y="1150.0"></text>
</g>
<g>
<title>__fget (5 samples, 0.12%)</title><rect x="724.7" y="1123.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="727.7" y="1134.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.05%)</title><rect x="726.1" y="1235.0" width="0.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="729.1" y="1246.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.09%)</title><rect x="726.6" y="1235.0" width="1.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="729.6" y="1246.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.09%)</title><rect x="726.6" y="1219.0" width="1.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="729.6" y="1230.0"></text>
</g>
<g>
<title>.annobin_send.c (1 samples, 0.02%)</title><rect x="726.6" y="1203.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="729.6" y="1214.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (3 samples, 0.07%)</title><rect x="726.9" y="1203.0" width="0.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="729.9" y="1214.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (3 samples, 0.07%)</title><rect x="726.9" y="1187.0" width="0.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="729.9" y="1198.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.02%)</title><rect x="727.7" y="1267.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="730.7" y="1278.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.02%)</title><rect x="727.7" y="1251.0" width="0.3" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="730.7" y="1262.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.02%)</title><rect x="727.7" y="1235.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="730.7" y="1246.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/ConsistentHashImpl.replicas (7 samples, 0.16%)</title><rect x="728.0" y="1347.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="731.0" y="1358.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (1 samples, 0.02%)</title><rect x="728.0" y="1331.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="731.0" y="1342.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (1 samples, 0.02%)</title><rect x="728.0" y="1315.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="731.0" y="1326.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap.&lt;init&gt; (1 samples, 0.02%)</title><rect x="728.0" y="1299.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="731.0" y="1310.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap.&lt;init&gt; (1 samples, 0.02%)</title><rect x="728.0" y="1283.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="731.0" y="1294.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/ConsistentHashImpl.firstReplica (6 samples, 0.14%)</title><rect x="728.3" y="1331.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="731.3" y="1342.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.hashBytes (5 samples, 0.12%)</title><rect x="728.3" y="1315.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="731.3" y="1326.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.newHasher (2 samples, 0.05%)</title><rect x="728.3" y="1299.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="731.3" y="1310.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction.newHasher (2 samples, 0.05%)</title><rect x="728.3" y="1283.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="731.3" y="1294.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.&lt;init&gt; (2 samples, 0.05%)</title><rect x="728.3" y="1267.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="731.3" y="1278.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.&lt;init&gt; (2 samples, 0.05%)</title><rect x="728.3" y="1251.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="731.3" y="1262.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.&lt;init&gt; (2 samples, 0.05%)</title><rect x="728.3" y="1235.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="731.3" y="1246.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2 samples, 0.05%)</title><rect x="728.3" y="1219.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="731.3" y="1230.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.05%)</title><rect x="728.3" y="1203.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="731.3" y="1214.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.hash (2 samples, 0.05%)</title><rect x="728.8" y="1299.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="731.8" y="1310.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.makeHash (2 samples, 0.05%)</title><rect x="728.8" y="1283.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="731.8" y="1294.0"></text>
</g>
<g>
<title>com/google/common/hash/HashCode.fromBytesNoCopy (2 samples, 0.05%)</title><rect x="728.8" y="1267.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="731.8" y="1278.0"></text>
</g>
<g>
<title>com/google/common/hash/HashCode$BytesHashCode.&lt;init&gt; (2 samples, 0.05%)</title><rect x="728.8" y="1251.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="731.8" y="1262.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="729.1" y="1235.0" width="0.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="732.1" y="1246.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.putBytes (1 samples, 0.02%)</title><rect x="729.3" y="1299.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="732.3" y="1310.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.order (1 samples, 0.02%)</title><rect x="729.3" y="1283.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="732.3" y="1294.0"></text>
</g>
<g>
<title>java/util/TreeMap.ceilingEntry (1 samples, 0.02%)</title><rect x="729.6" y="1315.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="732.6" y="1326.0"></text>
</g>
<g>
<title>java/util/TreeMap.getCeilingEntry (1 samples, 0.02%)</title><rect x="729.6" y="1299.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="732.6" y="1310.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/MetaRequest.&lt;init&gt; (15 samples, 0.35%)</title><rect x="729.9" y="1363.0" width="4.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="732.9" y="1374.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.02%)</title><rect x="730.4" y="1347.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="733.4" y="1358.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.02%)</title><rect x="730.4" y="1331.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="733.4" y="1342.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.02%)</title><rect x="730.4" y="1315.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="733.4" y="1326.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (12 samples, 0.28%)</title><rect x="730.7" y="1347.0" width="3.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="733.7" y="1358.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.05%)</title><rect x="731.0" y="1331.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="734.0" y="1342.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.05%)</title><rect x="731.0" y="1315.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="734.0" y="1326.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.02%)</title><rect x="731.2" y="1299.0" width="0.3" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="734.2" y="1310.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (2 samples, 0.05%)</title><rect x="731.5" y="1331.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="734.5" y="1342.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.02%)</title><rect x="731.8" y="1315.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="734.8" y="1326.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.02%)</title><rect x="731.8" y="1299.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="734.8" y="1310.0"></text>
</g>
<g>
<title>java/lang/String.substring (5 samples, 0.12%)</title><rect x="732.1" y="1331.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="735.1" y="1342.0"></text>
</g>
<g>
<title>java/lang/String.checkBoundsBeginEnd (1 samples, 0.02%)</title><rect x="732.1" y="1315.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="735.1" y="1326.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.07%)</title><rect x="732.3" y="1315.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="735.3" y="1326.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.05%)</title><rect x="732.6" y="1299.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="735.6" y="1310.0"></text>
</g>
<g>
<title>_new_instance_Java (1 samples, 0.02%)</title><rect x="732.9" y="1283.0" width="0.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="735.9" y="1294.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.02%)</title><rect x="733.1" y="1315.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="736.1" y="1326.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (2 samples, 0.05%)</title><rect x="733.4" y="1331.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="736.4" y="1342.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.05%)</title><rect x="733.4" y="1315.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="736.4" y="1326.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.05%)</title><rect x="733.4" y="1299.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="736.4" y="1310.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.05%)</title><rect x="733.4" y="1283.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="736.4" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (366 samples, 8.42%)</title><rect x="734.0" y="1459.0" width="99.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="737.0" y="1470.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (366 samples, 8.42%)</title><rect x="734.0" y="1443.0" width="99.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="737.0" y="1454.0">java/util/co..</text>
</g>
<g>
<title>gettimeofday (1 samples, 0.02%)</title><rect x="736.1" y="1427.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="739.1" y="1438.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (223 samples, 5.13%)</title><rect x="736.4" y="1427.0" width="60.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="739.4" y="1438.0">java/u..</text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LILL_Z (3 samples, 0.07%)</title><rect x="737.2" y="1411.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="740.2" y="1422.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$Array.compareAndSet (3 samples, 0.07%)</title><rect x="737.2" y="1395.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="740.2" y="1406.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LI_L (1 samples, 0.02%)</title><rect x="738.0" y="1411.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="741.0" y="1422.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (215 samples, 4.95%)</title><rect x="738.3" y="1411.0" width="58.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="741.3" y="1422.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.nextLocalTask (2 samples, 0.05%)</title><rect x="738.3" y="1395.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="741.3" y="1406.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LIL_L (1 samples, 0.02%)</title><rect x="738.6" y="1379.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="741.6" y="1390.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$Array.getAndSet (1 samples, 0.02%)</title><rect x="738.6" y="1363.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="741.6" y="1374.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.poll (4 samples, 0.09%)</title><rect x="738.8" y="1395.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="741.8" y="1406.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LILL_Z (2 samples, 0.05%)</title><rect x="739.4" y="1379.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="742.4" y="1390.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$Array.compareAndSet (1 samples, 0.02%)</title><rect x="739.7" y="1363.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="742.7" y="1374.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (209 samples, 4.81%)</title><rect x="739.9" y="1395.0" width="56.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="742.9" y="1406.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (209 samples, 4.81%)</title><rect x="739.9" y="1379.0" width="56.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="742.9" y="1390.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (209 samples, 4.81%)</title><rect x="739.9" y="1363.0" width="56.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="742.9" y="1374.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (62 samples, 1.43%)</title><rect x="740.2" y="1347.0" width="16.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="743.2" y="1358.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (62 samples, 1.43%)</title><rect x="740.2" y="1331.0" width="16.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="743.2" y="1342.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.02%)</title><rect x="740.2" y="1315.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="743.2" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (61 samples, 1.40%)</title><rect x="740.5" y="1315.0" width="16.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="743.5" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (60 samples, 1.38%)</title><rect x="740.7" y="1299.0" width="16.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="743.7" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Canceller.accept (5 samples, 0.12%)</title><rect x="740.7" y="1283.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="743.7" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Canceller.accept (5 samples, 0.12%)</title><rect x="740.7" y="1267.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="743.7" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$ScheduledFutureTask.cancel (5 samples, 0.12%)</title><rect x="740.7" y="1251.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="743.7" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.remove (4 samples, 0.09%)</title><rect x="741.0" y="1235.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="744.0" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.remove (4 samples, 0.09%)</title><rect x="741.0" y="1219.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="744.0" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.siftDown (1 samples, 0.02%)</title><rect x="741.0" y="1203.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="744.0" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (3 samples, 0.07%)</title><rect x="741.3" y="1203.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="744.3" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.05%)</title><rect x="741.6" y="1187.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="744.6" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (2 samples, 0.05%)</title><rect x="741.6" y="1171.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="744.6" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.&lt;init&gt; (2 samples, 0.05%)</title><rect x="741.6" y="1155.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="744.6" y="1166.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (2 samples, 0.05%)</title><rect x="741.6" y="1139.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="744.6" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (55 samples, 1.27%)</title><rect x="742.1" y="1283.0" width="14.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="745.1" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (49 samples, 1.13%)</title><rect x="742.4" y="1267.0" width="13.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="745.4" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (49 samples, 1.13%)</title><rect x="742.4" y="1251.0" width="13.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="745.4" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (49 samples, 1.13%)</title><rect x="742.4" y="1235.0" width="13.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="745.4" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (49 samples, 1.13%)</title><rect x="742.4" y="1219.0" width="13.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="745.4" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (48 samples, 1.10%)</title><rect x="742.6" y="1203.0" width="13.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="745.6" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (48 samples, 1.10%)</title><rect x="742.6" y="1187.0" width="13.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="745.6" y="1198.0"></text>
</g>
<g>
<title>Unsafe_Unpark (5 samples, 0.12%)</title><rect x="742.9" y="1171.0" width="1.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="745.9" y="1182.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.02%)</title><rect x="742.9" y="1155.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="745.9" y="1166.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.02%)</title><rect x="743.2" y="1155.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="746.2" y="1166.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_lock (1 samples, 0.02%)</title><rect x="743.5" y="1155.0" width="0.2" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="746.5" y="1166.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (2 samples, 0.05%)</title><rect x="743.7" y="1155.0" width="0.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="746.7" y="1166.0"></text>
</g>
<g>
<title>__pthread_cond_signal (41 samples, 0.94%)</title><rect x="744.3" y="1171.0" width="11.1" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="747.3" y="1182.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (38 samples, 0.87%)</title><rect x="745.1" y="1155.0" width="10.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="748.1" y="1166.0"></text>
</g>
<g>
<title>do_syscall_64 (38 samples, 0.87%)</title><rect x="745.1" y="1139.0" width="10.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="748.1" y="1150.0"></text>
</g>
<g>
<title>__x64_sys_futex (33 samples, 0.76%)</title><rect x="746.4" y="1123.0" width="9.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="749.4" y="1134.0"></text>
</g>
<g>
<title>do_futex (33 samples, 0.76%)</title><rect x="746.4" y="1107.0" width="9.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="749.4" y="1118.0"></text>
</g>
<g>
<title>futex_wake (32 samples, 0.74%)</title><rect x="746.7" y="1091.0" width="8.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="749.7" y="1102.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="747.5" y="1075.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="750.5" y="1086.0"></text>
</g>
<g>
<title>mark_wake_futex (2 samples, 0.05%)</title><rect x="747.8" y="1075.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="750.8" y="1086.0"></text>
</g>
<g>
<title>__unqueue_futex (1 samples, 0.02%)</title><rect x="748.1" y="1059.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="751.1" y="1070.0"></text>
</g>
<g>
<title>plist_del (1 samples, 0.02%)</title><rect x="748.1" y="1043.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="751.1" y="1054.0"></text>
</g>
<g>
<title>wake_up_q (26 samples, 0.60%)</title><rect x="748.3" y="1075.0" width="7.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="751.3" y="1086.0"></text>
</g>
<g>
<title>try_to_wake_up (26 samples, 0.60%)</title><rect x="748.3" y="1059.0" width="7.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="751.3" y="1070.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (25 samples, 0.58%)</title><rect x="748.6" y="1043.0" width="6.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="751.6" y="1054.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="755.4" y="1171.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="758.4" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (5 samples, 0.12%)</title><rect x="755.7" y="1267.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="758.7" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (5 samples, 0.12%)</title><rect x="755.7" y="1251.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="758.7" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (5 samples, 0.12%)</title><rect x="755.7" y="1235.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="758.7" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (4 samples, 0.09%)</title><rect x="755.7" y="1219.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="758.7" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (4 samples, 0.09%)</title><rect x="755.7" y="1203.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="758.7" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (4 samples, 0.09%)</title><rect x="755.7" y="1187.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="758.7" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (4 samples, 0.09%)</title><rect x="755.7" y="1171.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="758.7" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.enq (4 samples, 0.09%)</title><rect x="755.7" y="1155.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="758.7" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetTail (4 samples, 0.09%)</title><rect x="755.7" y="1139.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="758.7" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (1 samples, 0.02%)</title><rect x="756.5" y="1123.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="759.5" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.02%)</title><rect x="756.8" y="1219.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="759.8" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.02%)</title><rect x="756.8" y="1203.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="759.8" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (1 samples, 0.02%)</title><rect x="756.8" y="1187.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="759.8" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (1 samples, 0.02%)</title><rect x="756.8" y="1171.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="759.8" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (1 samples, 0.02%)</title><rect x="756.8" y="1155.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="759.8" y="1166.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.02%)</title><rect x="756.8" y="1139.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="759.8" y="1150.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (1 samples, 0.02%)</title><rect x="756.8" y="1123.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="759.8" y="1134.0"></text>
</g>
<g>
<title>java/util/Objects.requireNonNull (1 samples, 0.02%)</title><rect x="756.8" y="1107.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="759.8" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (146 samples, 3.36%)</title><rect x="757.0" y="1347.0" width="39.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="760.0" y="1358.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (6 samples, 0.14%)</title><rect x="757.0" y="1331.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="760.0" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (6 samples, 0.14%)</title><rect x="757.0" y="1315.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="760.0" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (6 samples, 0.14%)</title><rect x="757.0" y="1299.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="760.0" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (6 samples, 0.14%)</title><rect x="757.0" y="1283.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="760.0" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (6 samples, 0.14%)</title><rect x="757.0" y="1267.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="760.0" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (6 samples, 0.14%)</title><rect x="757.0" y="1251.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="760.0" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (6 samples, 0.14%)</title><rect x="757.0" y="1235.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="760.0" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (6 samples, 0.14%)</title><rect x="757.0" y="1219.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="760.0" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.enq (6 samples, 0.14%)</title><rect x="757.0" y="1203.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="760.0" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetTail (6 samples, 0.14%)</title><rect x="757.0" y="1187.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="760.0" y="1198.0"></text>
</g>
<g>
<title>itable stub (4 samples, 0.09%)</title><rect x="757.3" y="1171.0" width="1.1" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="760.3" y="1182.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService$$Lambda$140/507376197.accept (1 samples, 0.02%)</title><rect x="758.4" y="1171.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="761.4" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$139/2122885846.accept (1 samples, 0.02%)</title><rect x="758.7" y="1331.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="761.7" y="1342.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService$$Lambda$140/507376197.accept (17 samples, 0.39%)</title><rect x="758.9" y="1331.0" width="4.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="761.9" y="1342.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.lambda$getFirstResponses$6 (17 samples, 0.39%)</title><rect x="758.9" y="1315.0" width="4.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="761.9" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (12 samples, 0.28%)</title><rect x="759.2" y="1299.0" width="3.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="762.2" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (12 samples, 0.28%)</title><rect x="759.2" y="1283.0" width="3.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="762.2" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (12 samples, 0.28%)</title><rect x="759.2" y="1267.0" width="3.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="762.2" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (12 samples, 0.28%)</title><rect x="759.2" y="1251.0" width="3.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="762.2" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (12 samples, 0.28%)</title><rect x="759.2" y="1235.0" width="3.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="762.2" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (12 samples, 0.28%)</title><rect x="759.2" y="1219.0" width="3.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="762.2" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (12 samples, 0.28%)</title><rect x="759.2" y="1203.0" width="3.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="762.2" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (12 samples, 0.28%)</title><rect x="759.2" y="1187.0" width="3.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="762.2" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (12 samples, 0.28%)</title><rect x="759.2" y="1171.0" width="3.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="762.2" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (12 samples, 0.28%)</title><rect x="759.2" y="1155.0" width="3.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="762.2" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (12 samples, 0.28%)</title><rect x="759.2" y="1139.0" width="3.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="762.2" y="1150.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.05%)</title><rect x="759.2" y="1123.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="762.2" y="1134.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.02%)</title><rect x="759.5" y="1107.0" width="0.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="762.5" y="1118.0"></text>
</g>
<g>
<title>__pthread_cond_signal (10 samples, 0.23%)</title><rect x="759.7" y="1123.0" width="2.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="762.7" y="1134.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.14%)</title><rect x="760.8" y="1107.0" width="1.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="763.8" y="1118.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.14%)</title><rect x="760.8" y="1091.0" width="1.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="763.8" y="1102.0"></text>
</g>
<g>
<title>__x64_sys_futex (6 samples, 0.14%)</title><rect x="760.8" y="1075.0" width="1.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="763.8" y="1086.0"></text>
</g>
<g>
<title>do_futex (6 samples, 0.14%)</title><rect x="760.8" y="1059.0" width="1.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="763.8" y="1070.0"></text>
</g>
<g>
<title>futex_wake (6 samples, 0.14%)</title><rect x="760.8" y="1043.0" width="1.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="763.8" y="1054.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="760.8" y="1027.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="763.8" y="1038.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.02%)</title><rect x="761.1" y="1027.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="764.1" y="1038.0"></text>
</g>
<g>
<title>wake_up_q (4 samples, 0.09%)</title><rect x="761.4" y="1027.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="764.4" y="1038.0"></text>
</g>
<g>
<title>try_to_wake_up (4 samples, 0.09%)</title><rect x="761.4" y="1011.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="764.4" y="1022.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.09%)</title><rect x="761.4" y="995.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="764.4" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.add (4 samples, 0.09%)</title><rect x="762.5" y="1299.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="765.5" y="1310.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.02%)</title><rect x="763.3" y="1283.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="766.3" y="1294.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService$$Lambda$144/252812952.accept (122 samples, 2.81%)</title><rect x="763.5" y="1331.0" width="33.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="766.5" y="1342.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.lambda$upsert$2 (122 samples, 2.81%)</title><rect x="763.5" y="1315.0" width="33.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="766.5" y="1326.0">ru..</text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList$COWIterator.next (2 samples, 0.05%)</title><rect x="763.5" y="1299.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="766.5" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.iterator (2 samples, 0.05%)</title><rect x="764.1" y="1299.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="767.1" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList$COWIterator.&lt;init&gt; (2 samples, 0.05%)</title><rect x="764.1" y="1283.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="767.1" y="1294.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="764.4" y="1267.0" width="0.2" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="767.4" y="1278.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.sendResponse (118 samples, 2.71%)</title><rect x="764.6" y="1299.0" width="32.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="767.6" y="1310.0">ru..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (118 samples, 2.71%)</title><rect x="764.6" y="1283.0" width="32.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="767.6" y="1294.0">on..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.05%)</title><rect x="764.9" y="1267.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="767.9" y="1278.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.05%)</title><rect x="764.9" y="1251.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="767.9" y="1262.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.05%)</title><rect x="764.9" y="1235.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="767.9" y="1246.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (114 samples, 2.62%)</title><rect x="765.4" y="1267.0" width="31.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="768.4" y="1278.0">on..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.02%)</title><rect x="765.4" y="1251.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="768.4" y="1262.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.02%)</title><rect x="765.4" y="1235.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="768.4" y="1246.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.02%)</title><rect x="765.4" y="1219.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="768.4" y="1230.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.02%)</title><rect x="765.4" y="1203.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="768.4" y="1214.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (113 samples, 2.60%)</title><rect x="765.7" y="1251.0" width="30.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="768.7" y="1262.0">on..</text>
</g>
<g>
<title>one/nio/net/Session.write (113 samples, 2.60%)</title><rect x="765.7" y="1235.0" width="30.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="768.7" y="1246.0">on..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (112 samples, 2.58%)</title><rect x="765.7" y="1219.0" width="30.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="768.7" y="1230.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (112 samples, 2.58%)</title><rect x="765.7" y="1203.0" width="30.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="768.7" y="1214.0">on..</text>
</g>
<g>
<title>.annobin_send.c (109 samples, 2.51%)</title><rect x="765.7" y="1187.0" width="29.6" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="768.7" y="1198.0">.a..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (103 samples, 2.37%)</title><rect x="767.3" y="1171.0" width="28.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="770.3" y="1182.0">e..</text>
</g>
<g>
<title>do_syscall_64 (103 samples, 2.37%)</title><rect x="767.3" y="1155.0" width="28.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="770.3" y="1166.0">d..</text>
</g>
<g>
<title>__x64_sys_sendto (102 samples, 2.35%)</title><rect x="767.6" y="1139.0" width="27.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="770.6" y="1150.0">_..</text>
</g>
<g>
<title>__sys_sendto (101 samples, 2.32%)</title><rect x="767.9" y="1123.0" width="27.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="770.9" y="1134.0">_..</text>
</g>
<g>
<title>sock_sendmsg (97 samples, 2.23%)</title><rect x="767.9" y="1107.0" width="26.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="770.9" y="1118.0">s..</text>
</g>
<g>
<title>security_socket_sendmsg (2 samples, 0.05%)</title><rect x="767.9" y="1091.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="770.9" y="1102.0"></text>
</g>
<g>
<title>sock_has_perm (2 samples, 0.05%)</title><rect x="767.9" y="1075.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="770.9" y="1086.0"></text>
</g>
<g>
<title>tcp_sendmsg (95 samples, 2.19%)</title><rect x="768.4" y="1091.0" width="25.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="771.4" y="1102.0">t..</text>
</g>
<g>
<title>tcp_sendmsg_locked (95 samples, 2.19%)</title><rect x="768.4" y="1075.0" width="25.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="771.4" y="1086.0">t..</text>
</g>
<g>
<title>__tcp_push_pending_frames (91 samples, 2.09%)</title><rect x="768.4" y="1059.0" width="24.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="771.4" y="1070.0">_..</text>
</g>
<g>
<title>tcp_write_xmit (91 samples, 2.09%)</title><rect x="768.4" y="1043.0" width="24.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="771.4" y="1054.0">t..</text>
</g>
<g>
<title>__tcp_transmit_skb (82 samples, 1.89%)</title><rect x="769.0" y="1027.0" width="22.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="772.0" y="1038.0">_..</text>
</g>
<g>
<title>__ip_queue_xmit (78 samples, 1.79%)</title><rect x="769.5" y="1011.0" width="21.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="772.5" y="1022.0">_..</text>
</g>
<g>
<title>ip_local_out (18 samples, 0.41%)</title><rect x="769.8" y="995.0" width="4.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="772.8" y="1006.0"></text>
</g>
<g>
<title>__ip_local_out (18 samples, 0.41%)</title><rect x="769.8" y="979.0" width="4.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="772.8" y="990.0"></text>
</g>
<g>
<title>nf_hook_slow (17 samples, 0.39%)</title><rect x="770.1" y="963.0" width="4.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="773.1" y="974.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (3 samples, 0.07%)</title><rect x="770.6" y="947.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="773.6" y="958.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag	[nf_defrag_ipv4] (2 samples, 0.05%)</title><rect x="771.4" y="947.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="774.4" y="958.0"></text>
</g>
<g>
<title>ipv4_conntrack_local	[nf_conntrack] (1 samples, 0.02%)</title><rect x="772.0" y="947.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="775.0" y="958.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (6 samples, 0.14%)</title><rect x="772.2" y="947.0" width="1.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="775.2" y="958.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get	[nf_conntrack] (2 samples, 0.05%)</title><rect x="772.2" y="931.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="775.2" y="942.0"></text>
</g>
<g>
<title>get_l4proto	[nf_conntrack] (1 samples, 0.02%)</title><rect x="772.8" y="931.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="775.8" y="942.0"></text>
</g>
<g>
<title>hash_conntrack_raw	[nf_conntrack] (1 samples, 0.02%)</title><rect x="773.1" y="931.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="776.1" y="942.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet	[nf_conntrack] (1 samples, 0.02%)</title><rect x="773.3" y="931.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="776.3" y="942.0"></text>
</g>
<g>
<title>nf_ct_get_tuple	[nf_conntrack] (1 samples, 0.02%)</title><rect x="773.6" y="931.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="776.6" y="942.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn	[nf_nat] (3 samples, 0.07%)</title><rect x="773.9" y="947.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="776.9" y="958.0"></text>
</g>
<g>
<title>nf_nat_inet_fn	[nf_nat] (2 samples, 0.05%)</title><rect x="774.1" y="931.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="777.1" y="942.0"></text>
</g>
<g>
<title>ip_output (59 samples, 1.36%)</title><rect x="774.7" y="995.0" width="16.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="777.7" y="1006.0"></text>
</g>
<g>
<title>ip_finish_output2 (56 samples, 1.29%)</title><rect x="775.0" y="979.0" width="15.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="778.0" y="990.0"></text>
</g>
<g>
<title>__dev_queue_xmit (6 samples, 0.14%)</title><rect x="775.0" y="963.0" width="1.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="778.0" y="974.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (5 samples, 0.12%)</title><rect x="775.0" y="947.0" width="1.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="778.0" y="958.0"></text>
</g>
<g>
<title>loopback_xmit (5 samples, 0.12%)</title><rect x="775.0" y="931.0" width="1.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="778.0" y="942.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.02%)</title><rect x="775.2" y="915.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="778.2" y="926.0"></text>
</g>
<g>
<title>netif_rx (3 samples, 0.07%)</title><rect x="775.5" y="915.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="778.5" y="926.0"></text>
</g>
<g>
<title>netif_rx_internal (3 samples, 0.07%)</title><rect x="775.5" y="899.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="778.5" y="910.0"></text>
</g>
<g>
<title>enqueue_to_backlog (1 samples, 0.02%)</title><rect x="775.5" y="883.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="778.5" y="894.0"></text>
</g>
<g>
<title>ktime_get_with_offset (2 samples, 0.05%)</title><rect x="775.8" y="883.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="778.8" y="894.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.02%)</title><rect x="776.0" y="867.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="779.0" y="878.0"></text>
</g>
<g>
<title>validate_xmit_skb (1 samples, 0.02%)</title><rect x="776.3" y="947.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="779.3" y="958.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (50 samples, 1.15%)</title><rect x="776.6" y="963.0" width="13.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="779.6" y="974.0"></text>
</g>
<g>
<title>do_softirq.part.0 (50 samples, 1.15%)</title><rect x="776.6" y="947.0" width="13.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="779.6" y="958.0"></text>
</g>
<g>
<title>do_softirq_own_stack (49 samples, 1.13%)</title><rect x="776.9" y="931.0" width="13.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="779.9" y="942.0"></text>
</g>
<g>
<title>__softirqentry_text_start (49 samples, 1.13%)</title><rect x="776.9" y="915.0" width="13.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="779.9" y="926.0"></text>
</g>
<g>
<title>net_rx_action (47 samples, 1.08%)</title><rect x="777.4" y="899.0" width="12.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="780.4" y="910.0"></text>
</g>
<g>
<title>process_backlog (46 samples, 1.06%)</title><rect x="777.7" y="883.0" width="12.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="780.7" y="894.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (46 samples, 1.06%)</title><rect x="777.7" y="867.0" width="12.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="780.7" y="878.0"></text>
</g>
<g>
<title>ip_rcv (46 samples, 1.06%)</title><rect x="777.7" y="851.0" width="12.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="780.7" y="862.0"></text>
</g>
<g>
<title>ip_local_deliver (35 samples, 0.81%)</title><rect x="778.2" y="835.0" width="9.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="781.2" y="846.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (29 samples, 0.67%)</title><rect x="778.5" y="819.0" width="7.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="781.5" y="830.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (29 samples, 0.67%)</title><rect x="778.5" y="803.0" width="7.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="781.5" y="814.0"></text>
</g>
<g>
<title>tcp_v4_rcv (28 samples, 0.64%)</title><rect x="778.8" y="787.0" width="7.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="781.8" y="798.0"></text>
</g>
<g>
<title>__inet_lookup_established (2 samples, 0.05%)</title><rect x="779.0" y="771.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="782.0" y="782.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (25 samples, 0.58%)</title><rect x="779.6" y="771.0" width="6.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="782.6" y="782.0"></text>
</g>
<g>
<title>tcp_rcv_established (25 samples, 0.58%)</title><rect x="779.6" y="755.0" width="6.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="782.6" y="766.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="779.6" y="739.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="782.6" y="750.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (2 samples, 0.05%)</title><rect x="779.8" y="739.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="782.8" y="750.0"></text>
</g>
<g>
<title>__ip_queue_xmit (2 samples, 0.05%)</title><rect x="779.8" y="723.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="782.8" y="734.0"></text>
</g>
<g>
<title>ip_local_out (1 samples, 0.02%)</title><rect x="779.8" y="707.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="782.8" y="718.0"></text>
</g>
<g>
<title>__ip_local_out (1 samples, 0.02%)</title><rect x="779.8" y="691.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="782.8" y="702.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.02%)</title><rect x="779.8" y="675.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="782.8" y="686.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.02%)</title><rect x="780.1" y="707.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="783.1" y="718.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.02%)</title><rect x="780.1" y="691.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="783.1" y="702.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (1 samples, 0.02%)</title><rect x="780.1" y="675.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="783.1" y="686.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.05%)</title><rect x="780.4" y="739.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="783.4" y="750.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.05%)</title><rect x="780.4" y="723.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="783.4" y="734.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.05%)</title><rect x="780.4" y="707.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="783.4" y="718.0"></text>
</g>
<g>
<title>tcp_ack (6 samples, 0.14%)</title><rect x="780.9" y="739.0" width="1.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="783.9" y="750.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.02%)</title><rect x="781.5" y="723.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="784.5" y="734.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.02%)</title><rect x="781.5" y="707.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="784.5" y="718.0"></text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.02%)</title><rect x="781.7" y="723.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="784.7" y="734.0"></text>
</g>
<g>
<title>tcp_rack_advance (1 samples, 0.02%)</title><rect x="782.0" y="723.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="785.0" y="734.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.02%)</title><rect x="782.3" y="723.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="785.3" y="734.0"></text>
</g>
<g>
<title>tcp_data_queue (14 samples, 0.32%)</title><rect x="782.6" y="739.0" width="3.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="785.6" y="750.0"></text>
</g>
<g>
<title>dst_release (1 samples, 0.02%)</title><rect x="782.6" y="723.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="785.6" y="734.0"></text>
</g>
<g>
<title>sock_def_readable (13 samples, 0.30%)</title><rect x="782.8" y="723.0" width="3.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="785.8" y="734.0"></text>
</g>
<g>
<title>__wake_up_common_lock (11 samples, 0.25%)</title><rect x="783.4" y="707.0" width="3.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="786.4" y="718.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (11 samples, 0.25%)</title><rect x="783.4" y="691.0" width="3.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="786.4" y="702.0"></text>
</g>
<g>
<title>nf_hook_slow (5 samples, 0.12%)</title><rect x="786.4" y="819.0" width="1.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="789.4" y="830.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (3 samples, 0.07%)</title><rect x="786.4" y="803.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="789.4" y="814.0"></text>
</g>
<g>
<title>iptable_filter_hook	[iptable_filter] (1 samples, 0.02%)</title><rect x="787.2" y="803.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="790.2" y="814.0"></text>
</g>
<g>
<title>nf_nat_packet	[nf_nat] (1 samples, 0.02%)</title><rect x="787.4" y="803.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="790.4" y="814.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (1 samples, 0.02%)</title><rect x="787.7" y="835.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="790.7" y="846.0"></text>
</g>
<g>
<title>nf_hook_slow (8 samples, 0.18%)</title><rect x="788.0" y="835.0" width="2.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="791.0" y="846.0"></text>
</g>
<g>
<title>ip_sabotage_in	[br_netfilter] (1 samples, 0.02%)</title><rect x="788.0" y="819.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="791.0" y="830.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (5 samples, 0.12%)</title><rect x="788.3" y="819.0" width="1.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="791.3" y="830.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (2 samples, 0.05%)</title><rect x="789.6" y="819.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="792.6" y="830.0"></text>
</g>
<g>
<title>nf_hook_slow (2 samples, 0.05%)</title><rect x="790.2" y="979.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="793.2" y="990.0"></text>
</g>
<g>
<title>ipv4_confirm	[nf_conntrack] (1 samples, 0.02%)</title><rect x="790.2" y="963.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="793.2" y="974.0"></text>
</g>
<g>
<title>nf_confirm	[nf_conntrack] (1 samples, 0.02%)</title><rect x="790.4" y="963.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="793.4" y="974.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events	[nf_conntrack] (1 samples, 0.02%)</title><rect x="790.4" y="947.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="793.4" y="958.0"></text>
</g>
<g>
<title>skb_push (1 samples, 0.02%)</title><rect x="790.7" y="1011.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="793.7" y="1022.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (1 samples, 0.02%)</title><rect x="791.0" y="1011.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="794.0" y="1022.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (3 samples, 0.07%)</title><rect x="791.2" y="1027.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="794.2" y="1038.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.05%)</title><rect x="791.5" y="1011.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="794.5" y="1022.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.05%)</title><rect x="791.5" y="995.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="794.5" y="1006.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="791.8" y="979.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="794.8" y="990.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (3 samples, 0.07%)</title><rect x="792.1" y="1027.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="795.1" y="1038.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.02%)</title><rect x="792.3" y="1011.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="795.3" y="1022.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.02%)</title><rect x="792.6" y="1011.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="795.6" y="1022.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.02%)</title><rect x="792.6" y="995.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="795.6" y="1006.0"></text>
</g>
<g>
<title>tcp_small_queue_check.isra.0 (1 samples, 0.02%)</title><rect x="792.9" y="1027.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="795.9" y="1038.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (2 samples, 0.05%)</title><rect x="793.1" y="1059.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="796.1" y="1070.0"></text>
</g>
<g>
<title>__alloc_skb (2 samples, 0.05%)</title><rect x="793.1" y="1043.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="796.1" y="1054.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (1 samples, 0.02%)</title><rect x="793.1" y="1027.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="796.1" y="1038.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.02%)</title><rect x="793.1" y="1011.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="796.1" y="1022.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.02%)</title><rect x="793.4" y="1027.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="796.4" y="1038.0"></text>
</g>
<g>
<title>tcp_push (1 samples, 0.02%)</title><rect x="793.7" y="1059.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="796.7" y="1070.0"></text>
</g>
<g>
<title>tcp_send_mss (1 samples, 0.02%)</title><rect x="794.0" y="1059.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="797.0" y="1070.0"></text>
</g>
<g>
<title>tcp_current_mss (1 samples, 0.02%)</title><rect x="794.0" y="1043.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="797.0" y="1054.0"></text>
</g>
<g>
<title>sockfd_lookup_light (4 samples, 0.09%)</title><rect x="794.2" y="1107.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="797.2" y="1118.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.07%)</title><rect x="794.5" y="1091.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="797.5" y="1102.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.07%)</title><rect x="794.5" y="1075.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="797.5" y="1086.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.07%)</title><rect x="795.3" y="1187.0" width="0.8" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="798.3" y="1198.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.07%)</title><rect x="795.3" y="1171.0" width="0.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="798.3" y="1182.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.05%)</title><rect x="795.3" y="1155.0" width="0.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="798.3" y="1166.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.02%)</title><rect x="795.3" y="1139.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="798.3" y="1150.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.02%)</title><rect x="795.6" y="1139.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="798.6" y="1150.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.02%)</title><rect x="795.6" y="1123.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="798.6" y="1134.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.02%)</title><rect x="795.9" y="1155.0" width="0.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="798.9" y="1166.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.02%)</title><rect x="796.1" y="1219.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="799.1" y="1230.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.02%)</title><rect x="796.1" y="1203.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="799.1" y="1214.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.02%)</title><rect x="796.1" y="1187.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="799.1" y="1198.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.02%)</title><rect x="796.4" y="1267.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="799.4" y="1278.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.02%)</title><rect x="796.4" y="1251.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="799.4" y="1262.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.02%)</title><rect x="796.4" y="1235.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="799.4" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (1 samples, 0.02%)</title><rect x="796.7" y="1411.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="799.7" y="1422.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.02%)</title><rect x="796.7" y="1395.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="799.7" y="1406.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.02%)</title><rect x="796.7" y="1379.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="799.7" y="1390.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.02%)</title><rect x="796.7" y="1363.0" width="0.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="799.7" y="1374.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="796.7" y="1347.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="799.7" y="1358.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="796.7" y="1331.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="799.7" y="1342.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.02%)</title><rect x="796.7" y="1315.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="799.7" y="1326.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.02%)</title><rect x="796.7" y="1299.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="799.7" y="1310.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.02%)</title><rect x="796.7" y="1283.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="799.7" y="1294.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.02%)</title><rect x="796.7" y="1267.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="799.7" y="1278.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.02%)</title><rect x="796.7" y="1251.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="799.7" y="1262.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="796.7" y="1235.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="799.7" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (74 samples, 1.70%)</title><rect x="796.9" y="1427.0" width="20.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="799.9" y="1438.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (74 samples, 1.70%)</title><rect x="796.9" y="1411.0" width="20.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="799.9" y="1422.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (1 samples, 0.02%)</title><rect x="796.9" y="1395.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="799.9" y="1406.0"></text>
</g>
<g>
<title>Unsafe_Park (30 samples, 0.69%)</title><rect x="797.2" y="1395.0" width="8.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="800.2" y="1406.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (9 samples, 0.21%)</title><rect x="797.2" y="1379.0" width="2.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="800.2" y="1390.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.02%)</title><rect x="798.8" y="1363.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="801.8" y="1374.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.02%)</title><rect x="799.1" y="1363.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="802.1" y="1374.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="799.4" y="1363.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="802.4" y="1374.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="799.4" y="1347.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="802.4" y="1358.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="799.4" y="1331.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="802.4" y="1342.0"></text>
</g>
<g>
<title>__lll_unlock_wake (18 samples, 0.41%)</title><rect x="799.7" y="1379.0" width="4.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="802.7" y="1390.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.16%)</title><rect x="802.6" y="1363.0" width="1.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="805.6" y="1374.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.16%)</title><rect x="802.6" y="1347.0" width="1.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="805.6" y="1358.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.09%)</title><rect x="803.5" y="1331.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="806.5" y="1342.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.07%)</title><rect x="803.7" y="1315.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="806.7" y="1326.0"></text>
</g>
<g>
<title>futex_wake (3 samples, 0.07%)</title><rect x="803.7" y="1299.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="806.7" y="1310.0"></text>
</g>
<g>
<title>get_futex_key (2 samples, 0.05%)</title><rect x="804.0" y="1283.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="807.0" y="1294.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.0 (1 samples, 0.02%)</title><rect x="804.3" y="1267.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="807.3" y="1278.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.02%)</title><rect x="804.5" y="1379.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="807.5" y="1390.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (2 samples, 0.05%)</title><rect x="804.8" y="1379.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="807.8" y="1390.0"></text>
</g>
<g>
<title>[unknown] (43 samples, 0.99%)</title><rect x="805.4" y="1395.0" width="11.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="808.4" y="1406.0"></text>
</g>
<g>
<title>__condvar_dec_grefs (2 samples, 0.05%)</title><rect x="805.4" y="1379.0" width="0.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="808.4" y="1390.0"></text>
</g>
<g>
<title>__pthread_cond_wait (36 samples, 0.83%)</title><rect x="805.9" y="1379.0" width="9.8" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="808.9" y="1390.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (24 samples, 0.55%)</title><rect x="809.2" y="1363.0" width="6.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="812.2" y="1374.0"></text>
</g>
<g>
<title>do_syscall_64 (24 samples, 0.55%)</title><rect x="809.2" y="1347.0" width="6.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="812.2" y="1358.0"></text>
</g>
<g>
<title>__x64_sys_futex (23 samples, 0.53%)</title><rect x="809.4" y="1331.0" width="6.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="812.4" y="1342.0"></text>
</g>
<g>
<title>do_futex (23 samples, 0.53%)</title><rect x="809.4" y="1315.0" width="6.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="812.4" y="1326.0"></text>
</g>
<g>
<title>futex_wait (22 samples, 0.51%)</title><rect x="809.7" y="1299.0" width="6.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="812.7" y="1310.0"></text>
</g>
<g>
<title>futex_wait_queue_me (14 samples, 0.32%)</title><rect x="810.5" y="1283.0" width="3.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="813.5" y="1294.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.02%)</title><rect x="811.1" y="1267.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="814.1" y="1278.0"></text>
</g>
<g>
<title>schedule (11 samples, 0.25%)</title><rect x="811.3" y="1267.0" width="3.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="814.3" y="1278.0"></text>
</g>
<g>
<title>__sched_text_start (11 samples, 0.25%)</title><rect x="811.3" y="1251.0" width="3.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="814.3" y="1262.0"></text>
</g>
<g>
<title>finish_task_switch (9 samples, 0.21%)</title><rect x="811.9" y="1235.0" width="2.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="814.9" y="1246.0"></text>
</g>
<g>
<title>futex_wait_setup (5 samples, 0.12%)</title><rect x="814.3" y="1283.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="817.3" y="1294.0"></text>
</g>
<g>
<title>get_futex_key (2 samples, 0.05%)</title><rect x="814.9" y="1267.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="817.9" y="1278.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.0 (1 samples, 0.02%)</title><rect x="815.1" y="1251.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="818.1" y="1262.0"></text>
</g>
<g>
<title>get_futex_value_locked (1 samples, 0.02%)</title><rect x="815.4" y="1267.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="818.4" y="1278.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (4 samples, 0.09%)</title><rect x="815.7" y="1379.0" width="1.1" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="818.7" y="1390.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (1 samples, 0.02%)</title><rect x="816.8" y="1379.0" width="0.2" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="819.8" y="1390.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkUntil (59 samples, 1.36%)</title><rect x="817.0" y="1427.0" width="16.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="820.0" y="1438.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (59 samples, 1.36%)</title><rect x="817.0" y="1411.0" width="16.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="820.0" y="1422.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (1 samples, 0.02%)</title><rect x="817.3" y="1395.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="820.3" y="1406.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.229] (1 samples, 0.02%)</title><rect x="817.6" y="1395.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="820.6" y="1406.0"></text>
</g>
<g>
<title>Unsafe_Park (13 samples, 0.30%)</title><rect x="817.8" y="1395.0" width="3.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="820.8" y="1406.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (1 samples, 0.02%)</title><rect x="818.1" y="1379.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="821.1" y="1390.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (6 samples, 0.14%)</title><rect x="818.4" y="1379.0" width="1.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="821.4" y="1390.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.02%)</title><rect x="818.9" y="1363.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="821.9" y="1374.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="819.2" y="1363.0" width="0.3" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="822.2" y="1374.0"></text>
</g>
<g>
<title>to_abstime(timespec*, long, bool) (2 samples, 0.05%)</title><rect x="819.5" y="1363.0" width="0.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="822.5" y="1374.0"></text>
</g>
<g>
<title>__lll_unlock_wake (4 samples, 0.09%)</title><rect x="820.0" y="1379.0" width="1.1" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="823.0" y="1390.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.05%)</title><rect x="820.6" y="1363.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="823.6" y="1374.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.05%)</title><rect x="820.6" y="1347.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="823.6" y="1358.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.02%)</title><rect x="820.8" y="1331.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="823.8" y="1342.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (1 samples, 0.02%)</title><rect x="821.1" y="1379.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="824.1" y="1390.0"></text>
</g>
<g>
<title>[unknown] (43 samples, 0.99%)</title><rect x="821.4" y="1395.0" width="11.6" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="824.4" y="1406.0"></text>
</g>
<g>
<title>__pthread_cleanup_push (1 samples, 0.02%)</title><rect x="821.4" y="1379.0" width="0.2" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="824.4" y="1390.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (41 samples, 0.94%)</title><rect x="821.6" y="1379.0" width="11.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="824.6" y="1390.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (33 samples, 0.76%)</title><rect x="823.8" y="1363.0" width="9.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="826.8" y="1374.0"></text>
</g>
<g>
<title>do_syscall_64 (33 samples, 0.76%)</title><rect x="823.8" y="1347.0" width="9.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="826.8" y="1358.0"></text>
</g>
<g>
<title>__x64_sys_futex (31 samples, 0.71%)</title><rect x="824.4" y="1331.0" width="8.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="827.4" y="1342.0"></text>
</g>
<g>
<title>do_futex (27 samples, 0.62%)</title><rect x="824.4" y="1315.0" width="7.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="827.4" y="1326.0"></text>
</g>
<g>
<title>futex_wait (26 samples, 0.60%)</title><rect x="824.6" y="1299.0" width="7.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="827.6" y="1310.0"></text>
</g>
<g>
<title>__hrtimer_init (2 samples, 0.05%)</title><rect x="825.7" y="1283.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="828.7" y="1294.0"></text>
</g>
<g>
<title>futex_wait_queue_me (15 samples, 0.35%)</title><rect x="826.3" y="1283.0" width="4.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="829.3" y="1294.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (3 samples, 0.07%)</title><rect x="827.1" y="1267.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="830.1" y="1278.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.07%)</title><rect x="827.1" y="1251.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="830.1" y="1262.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="827.6" y="1235.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="830.6" y="1246.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="827.6" y="1219.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="830.6" y="1230.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="827.6" y="1203.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="830.6" y="1214.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="827.6" y="1187.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="830.6" y="1198.0"></text>
</g>
<g>
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="827.6" y="1171.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="830.6" y="1182.0"></text>
</g>
<g>
<title>call_timer_fn (1 samples, 0.02%)</title><rect x="827.6" y="1155.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="830.6" y="1166.0"></text>
</g>
<g>
<title>tcp_write_timer (1 samples, 0.02%)</title><rect x="827.6" y="1139.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="830.6" y="1150.0"></text>
</g>
<g>
<title>tcp_write_timer_handler (1 samples, 0.02%)</title><rect x="827.6" y="1123.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="830.6" y="1134.0"></text>
</g>
<g>
<title>schedule (9 samples, 0.21%)</title><rect x="827.9" y="1267.0" width="2.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="830.9" y="1278.0"></text>
</g>
<g>
<title>__sched_text_start (6 samples, 0.14%)</title><rect x="828.7" y="1251.0" width="1.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="831.7" y="1262.0"></text>
</g>
<g>
<title>finish_task_switch (5 samples, 0.12%)</title><rect x="829.0" y="1235.0" width="1.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="832.0" y="1246.0"></text>
</g>
<g>
<title>futex_wait_setup (2 samples, 0.05%)</title><rect x="830.3" y="1283.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="833.3" y="1294.0"></text>
</g>
<g>
<title>get_futex_key (2 samples, 0.05%)</title><rect x="830.3" y="1267.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="833.3" y="1278.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.0 (2 samples, 0.05%)</title><rect x="830.3" y="1251.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="833.3" y="1262.0"></text>
</g>
<g>
<title>hrtimer_cancel (3 samples, 0.07%)</title><rect x="830.9" y="1283.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="833.9" y="1294.0"></text>
</g>
<g>
<title>hrtimer_try_to_cancel (3 samples, 0.07%)</title><rect x="830.9" y="1267.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="833.9" y="1278.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.05%)</title><rect x="830.9" y="1251.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="833.9" y="1262.0"></text>
</g>
<g>
<title>hrtimer_active (1 samples, 0.02%)</title><rect x="831.4" y="1251.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="834.4" y="1262.0"></text>
</g>
<g>
<title>get_timespec64 (4 samples, 0.09%)</title><rect x="831.7" y="1315.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="834.7" y="1326.0"></text>
</g>
<g>
<title>_copy_from_user (3 samples, 0.07%)</title><rect x="832.0" y="1299.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="835.0" y="1310.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (1 samples, 0.02%)</title><rect x="832.5" y="1283.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="835.5" y="1294.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.02%)</title><rect x="832.8" y="1379.0" width="0.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="835.8" y="1390.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.02%)</title><rect x="833.0" y="1427.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="836.0" y="1438.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.02%)</title><rect x="833.0" y="1411.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="836.0" y="1422.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.02%)</title><rect x="833.0" y="1395.0" width="0.3" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="836.0" y="1406.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (584 samples, 13.43%)</title><rect x="833.3" y="1459.0" width="158.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="836.3" y="1470.0">jdk/internal/net/htt..</text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.keyFor (7 samples, 0.16%)</title><rect x="834.1" y="1443.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="837.1" y="1454.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.findKey (7 samples, 0.16%)</title><rect x="834.1" y="1427.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="837.1" y="1438.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.02%)</title><rect x="836.0" y="1443.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="839.0" y="1454.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.02%)</title><rect x="836.0" y="1427.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="839.0" y="1438.0"></text>
</g>
<g>
<title>java/util/ArrayList.clear (2 samples, 0.05%)</title><rect x="836.3" y="1443.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="839.3" y="1454.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (228 samples, 5.24%)</title><rect x="836.8" y="1443.0" width="61.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="839.8" y="1454.0">java/u..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$241/404115466.accept (223 samples, 5.13%)</title><rect x="836.8" y="1427.0" width="60.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="839.8" y="1438.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (223 samples, 5.13%)</title><rect x="836.8" y="1411.0" width="60.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="839.8" y="1422.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (223 samples, 5.13%)</title><rect x="836.8" y="1395.0" width="60.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="839.8" y="1406.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (223 samples, 5.13%)</title><rect x="836.8" y="1379.0" width="60.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="839.8" y="1390.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (223 samples, 5.13%)</title><rect x="836.8" y="1363.0" width="60.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="839.8" y="1374.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (1 samples, 0.02%)</title><rect x="836.8" y="1347.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="839.8" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (1 samples, 0.02%)</title><rect x="836.8" y="1331.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="839.8" y="1342.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectionKey.isValid (1 samples, 0.02%)</title><rect x="836.8" y="1315.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="839.8" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (222 samples, 5.11%)</title><rect x="837.1" y="1347.0" width="60.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="840.1" y="1358.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (222 samples, 5.11%)</title><rect x="837.1" y="1331.0" width="60.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="840.1" y="1342.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (222 samples, 5.11%)</title><rect x="837.1" y="1315.0" width="60.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="840.1" y="1326.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (222 samples, 5.11%)</title><rect x="837.1" y="1299.0" width="60.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="840.1" y="1310.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (222 samples, 5.11%)</title><rect x="837.1" y="1283.0" width="60.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="840.1" y="1294.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$181/1894615385.run (220 samples, 5.06%)</title><rect x="837.7" y="1267.0" width="59.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="840.7" y="1278.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (220 samples, 5.06%)</title><rect x="837.7" y="1251.0" width="59.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="840.7" y="1262.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (42 samples, 0.97%)</title><rect x="837.7" y="1235.0" width="11.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="840.7" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (42 samples, 0.97%)</title><rect x="837.7" y="1219.0" width="11.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="840.7" y="1230.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (2 samples, 0.05%)</title><rect x="837.9" y="1203.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="840.9" y="1214.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$List12.size (1 samples, 0.02%)</title><rect x="837.9" y="1187.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="840.9" y="1198.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$ListItr.&lt;init&gt; (1 samples, 0.02%)</title><rect x="838.2" y="1187.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="841.2" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (39 samples, 0.90%)</title><rect x="838.5" y="1203.0" width="10.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="841.5" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (38 samples, 0.87%)</title><rect x="838.7" y="1187.0" width="10.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="841.7" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (38 samples, 0.87%)</title><rect x="838.7" y="1171.0" width="10.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="841.7" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (37 samples, 0.85%)</title><rect x="839.0" y="1155.0" width="10.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="842.0" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (37 samples, 0.85%)</title><rect x="839.0" y="1139.0" width="10.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="842.0" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (37 samples, 0.85%)</title><rect x="839.0" y="1123.0" width="10.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="842.0" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue$Node.&lt;init&gt; (1 samples, 0.02%)</title><rect x="839.0" y="1107.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="842.0" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (28 samples, 0.64%)</title><rect x="839.3" y="1107.0" width="7.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="842.3" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (28 samples, 0.64%)</title><rect x="839.3" y="1091.0" width="7.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="842.3" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (28 samples, 0.64%)</title><rect x="839.3" y="1075.0" width="7.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="842.3" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (28 samples, 0.64%)</title><rect x="839.3" y="1059.0" width="7.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="842.3" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (28 samples, 0.64%)</title><rect x="839.3" y="1043.0" width="7.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="842.3" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (28 samples, 0.64%)</title><rect x="839.3" y="1027.0" width="7.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="842.3" y="1038.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.02%)</title><rect x="839.3" y="1011.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="842.3" y="1022.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.02%)</title><rect x="839.3" y="995.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="842.3" y="1006.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="839.3" y="979.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="842.3" y="990.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="839.3" y="963.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="842.3" y="974.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="839.3" y="947.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="842.3" y="958.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="839.3" y="931.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="842.3" y="942.0"></text>
</g>
<g>
<title>rcu_core (1 samples, 0.02%)</title><rect x="839.3" y="915.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="842.3" y="926.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="839.3" y="899.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="842.3" y="910.0"></text>
</g>
<g>
<title>__pthread_cond_signal (27 samples, 0.62%)</title><rect x="839.6" y="1011.0" width="7.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="842.6" y="1022.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (24 samples, 0.55%)</title><rect x="840.4" y="995.0" width="6.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="843.4" y="1006.0"></text>
</g>
<g>
<title>do_syscall_64 (24 samples, 0.55%)</title><rect x="840.4" y="979.0" width="6.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="843.4" y="990.0"></text>
</g>
<g>
<title>__x64_sys_futex (22 samples, 0.51%)</title><rect x="840.9" y="963.0" width="6.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="843.9" y="974.0"></text>
</g>
<g>
<title>do_futex (22 samples, 0.51%)</title><rect x="840.9" y="947.0" width="6.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="843.9" y="958.0"></text>
</g>
<g>
<title>futex_wake (22 samples, 0.51%)</title><rect x="840.9" y="931.0" width="6.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="843.9" y="942.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.02%)</title><rect x="841.5" y="915.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="844.5" y="926.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.0 (1 samples, 0.02%)</title><rect x="841.5" y="899.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="844.5" y="910.0"></text>
</g>
<g>
<title>wake_up_q (19 samples, 0.44%)</title><rect x="841.7" y="915.0" width="5.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="844.7" y="926.0"></text>
</g>
<g>
<title>try_to_wake_up (19 samples, 0.44%)</title><rect x="841.7" y="899.0" width="5.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="844.7" y="910.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (18 samples, 0.41%)</title><rect x="842.0" y="883.0" width="4.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="845.0" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (2 samples, 0.05%)</title><rect x="846.9" y="1107.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="849.9" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (2 samples, 0.05%)</title><rect x="846.9" y="1091.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="849.9" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (6 samples, 0.14%)</title><rect x="847.4" y="1107.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="850.4" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (6 samples, 0.14%)</title><rect x="847.4" y="1091.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="850.4" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (2 samples, 0.05%)</title><rect x="848.0" y="1075.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="851.0" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetTail (2 samples, 0.05%)</title><rect x="848.0" y="1059.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="851.0" y="1070.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (2 samples, 0.05%)</title><rect x="848.0" y="1043.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="851.0" y="1054.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.02%)</title><rect x="848.2" y="1027.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="851.2" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (2 samples, 0.05%)</title><rect x="848.5" y="1075.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="851.5" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (2 samples, 0.05%)</title><rect x="848.5" y="1059.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="851.5" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (2 samples, 0.05%)</title><rect x="849.1" y="1235.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="852.1" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (1 samples, 0.02%)</title><rect x="849.6" y="1235.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="852.6" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (1 samples, 0.02%)</title><rect x="849.6" y="1219.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="852.6" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (174 samples, 4.00%)</title><rect x="849.9" y="1235.0" width="47.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="852.9" y="1246.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.append (5 samples, 0.12%)</title><rect x="850.1" y="1219.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="853.1" y="1230.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.05%)</title><rect x="850.1" y="1203.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="853.1" y="1214.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (2 samples, 0.05%)</title><rect x="850.1" y="1187.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="853.1" y="1198.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (3 samples, 0.07%)</title><rect x="850.7" y="1203.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="853.7" y="1214.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (3 samples, 0.07%)</title><rect x="850.7" y="1187.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="853.7" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (2 samples, 0.05%)</title><rect x="851.0" y="1171.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="854.0" y="1182.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (168 samples, 3.86%)</title><rect x="851.5" y="1219.0" width="45.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="854.5" y="1230.0">sun/..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.02%)</title><rect x="851.5" y="1203.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="854.5" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.02%)</title><rect x="851.5" y="1187.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="854.5" y="1198.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (167 samples, 3.84%)</title><rect x="851.8" y="1203.0" width="45.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="854.8" y="1214.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (167 samples, 3.84%)</title><rect x="851.8" y="1187.0" width="45.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="854.8" y="1198.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (159 samples, 3.66%)</title><rect x="852.0" y="1171.0" width="43.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="855.0" y="1182.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (159 samples, 3.66%)</title><rect x="852.0" y="1155.0" width="43.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="855.0" y="1166.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (159 samples, 3.66%)</title><rect x="852.0" y="1139.0" width="43.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="855.0" y="1150.0">sun/..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_read0 (1 samples, 0.02%)</title><rect x="852.3" y="1123.0" width="0.3" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="855.3" y="1134.0"></text>
</g>
<g>
<title>__libc_read (155 samples, 3.57%)</title><rect x="852.6" y="1123.0" width="42.1" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="855.6" y="1134.0">__li..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (137 samples, 3.15%)</title><rect x="857.5" y="1107.0" width="37.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="860.5" y="1118.0">ent..</text>
</g>
<g>
<title>do_syscall_64 (137 samples, 3.15%)</title><rect x="857.5" y="1091.0" width="37.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="860.5" y="1102.0">do_..</text>
</g>
<g>
<title>ksys_read (132 samples, 3.04%)</title><rect x="858.8" y="1075.0" width="35.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="861.8" y="1086.0">ksy..</text>
</g>
<g>
<title>__fdget_pos (4 samples, 0.09%)</title><rect x="859.4" y="1059.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="862.4" y="1070.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.09%)</title><rect x="859.4" y="1043.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="862.4" y="1054.0"></text>
</g>
<g>
<title>__fget (4 samples, 0.09%)</title><rect x="859.4" y="1027.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="862.4" y="1038.0"></text>
</g>
<g>
<title>vfs_read (126 samples, 2.90%)</title><rect x="860.5" y="1059.0" width="34.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="863.5" y="1070.0">vf..</text>
</g>
<g>
<title>new_sync_read (120 samples, 2.76%)</title><rect x="860.5" y="1043.0" width="32.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="863.5" y="1054.0">ne..</text>
</g>
<g>
<title>sock_read_iter (120 samples, 2.76%)</title><rect x="860.5" y="1027.0" width="32.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="863.5" y="1038.0">so..</text>
</g>
<g>
<title>inet_recvmsg (115 samples, 2.65%)</title><rect x="861.0" y="1011.0" width="31.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="864.0" y="1022.0">in..</text>
</g>
<g>
<title>tcp_recvmsg (115 samples, 2.65%)</title><rect x="861.0" y="995.0" width="31.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="864.0" y="1006.0">tc..</text>
</g>
<g>
<title>__kfree_skb (3 samples, 0.07%)</title><rect x="861.5" y="979.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="864.5" y="990.0"></text>
</g>
<g>
<title>skb_release_all (3 samples, 0.07%)</title><rect x="861.5" y="963.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="864.5" y="974.0"></text>
</g>
<g>
<title>skb_release_head_state (3 samples, 0.07%)</title><rect x="861.5" y="947.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="864.5" y="958.0"></text>
</g>
<g>
<title>dst_release (2 samples, 0.05%)</title><rect x="861.5" y="931.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="864.5" y="942.0"></text>
</g>
<g>
<title>sock_rfree (1 samples, 0.02%)</title><rect x="862.1" y="931.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="865.1" y="942.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.05%)</title><rect x="862.4" y="979.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="865.4" y="990.0"></text>
</g>
<g>
<title>__tcp_send_ack.part.0 (5 samples, 0.12%)</title><rect x="862.9" y="979.0" width="1.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="865.9" y="990.0"></text>
</g>
<g>
<title>__alloc_skb (5 samples, 0.12%)</title><rect x="862.9" y="963.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="865.9" y="974.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (1 samples, 0.02%)</title><rect x="863.2" y="947.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="866.2" y="958.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.02%)</title><rect x="863.2" y="931.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="866.2" y="942.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (3 samples, 0.07%)</title><rect x="863.4" y="947.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="866.4" y="958.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (91 samples, 2.09%)</title><rect x="864.3" y="979.0" width="24.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="867.3" y="990.0">_..</text>
</g>
<g>
<title>__ip_queue_xmit (91 samples, 2.09%)</title><rect x="864.3" y="963.0" width="24.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="867.3" y="974.0">_..</text>
</g>
<g>
<title>ip_local_out (20 samples, 0.46%)</title><rect x="864.5" y="947.0" width="5.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="867.5" y="958.0"></text>
</g>
<g>
<title>__ip_local_out (20 samples, 0.46%)</title><rect x="864.5" y="931.0" width="5.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="867.5" y="942.0"></text>
</g>
<g>
<title>nf_hook_slow (20 samples, 0.46%)</title><rect x="864.5" y="915.0" width="5.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="867.5" y="926.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (5 samples, 0.12%)</title><rect x="864.5" y="899.0" width="1.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="867.5" y="910.0"></text>
</g>
<g>
<title>iptable_filter_hook	[iptable_filter] (2 samples, 0.05%)</title><rect x="865.9" y="899.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="868.9" y="910.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (2 samples, 0.05%)</title><rect x="866.4" y="899.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="869.4" y="910.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (1 samples, 0.02%)</title><rect x="866.7" y="883.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="869.7" y="894.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (10 samples, 0.23%)</title><rect x="867.0" y="899.0" width="2.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="870.0" y="910.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get	[nf_conntrack] (5 samples, 0.12%)</title><rect x="867.0" y="883.0" width="1.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="870.0" y="894.0"></text>
</g>
<g>
<title>hash_conntrack_raw	[nf_conntrack] (3 samples, 0.07%)</title><rect x="868.3" y="883.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="871.3" y="894.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet	[nf_conntrack] (2 samples, 0.05%)</title><rect x="869.1" y="883.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="872.1" y="894.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn	[nf_nat] (1 samples, 0.02%)</title><rect x="869.7" y="899.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="872.7" y="910.0"></text>
</g>
<g>
<title>nf_nat_packet	[nf_nat] (1 samples, 0.02%)</title><rect x="869.7" y="883.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="872.7" y="894.0"></text>
</g>
<g>
<title>ip_output (70 samples, 1.61%)</title><rect x="870.0" y="947.0" width="19.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="873.0" y="958.0"></text>
</g>
<g>
<title>ip_finish_output2 (65 samples, 1.50%)</title><rect x="870.2" y="931.0" width="17.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="873.2" y="942.0"></text>
</g>
<g>
<title>__dev_queue_xmit (6 samples, 0.14%)</title><rect x="870.5" y="915.0" width="1.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="873.5" y="926.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (6 samples, 0.14%)</title><rect x="870.5" y="899.0" width="1.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="873.5" y="910.0"></text>
</g>
<g>
<title>loopback_xmit (6 samples, 0.14%)</title><rect x="870.5" y="883.0" width="1.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="873.5" y="894.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.02%)</title><rect x="870.8" y="867.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="873.8" y="878.0"></text>
</g>
<g>
<title>netif_rx (4 samples, 0.09%)</title><rect x="871.0" y="867.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="874.0" y="878.0"></text>
</g>
<g>
<title>netif_rx_internal (4 samples, 0.09%)</title><rect x="871.0" y="851.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="874.0" y="862.0"></text>
</g>
<g>
<title>enqueue_to_backlog (1 samples, 0.02%)</title><rect x="871.6" y="835.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="874.6" y="846.0"></text>
</g>
<g>
<title>ktime_get_with_offset (1 samples, 0.02%)</title><rect x="871.9" y="835.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="874.9" y="846.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (58 samples, 1.33%)</title><rect x="872.1" y="915.0" width="15.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="875.1" y="926.0"></text>
</g>
<g>
<title>do_softirq.part.0 (58 samples, 1.33%)</title><rect x="872.1" y="899.0" width="15.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="875.1" y="910.0"></text>
</g>
<g>
<title>do_softirq_own_stack (57 samples, 1.31%)</title><rect x="872.4" y="883.0" width="15.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="875.4" y="894.0"></text>
</g>
<g>
<title>__softirqentry_text_start (57 samples, 1.31%)</title><rect x="872.4" y="867.0" width="15.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="875.4" y="878.0"></text>
</g>
<g>
<title>net_rx_action (56 samples, 1.29%)</title><rect x="872.7" y="851.0" width="15.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="875.7" y="862.0"></text>
</g>
<g>
<title>__kfree_skb_flush (1 samples, 0.02%)</title><rect x="873.2" y="835.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="876.2" y="846.0"></text>
</g>
<g>
<title>process_backlog (53 samples, 1.22%)</title><rect x="873.5" y="835.0" width="14.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="876.5" y="846.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (53 samples, 1.22%)</title><rect x="873.5" y="819.0" width="14.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="876.5" y="830.0"></text>
</g>
<g>
<title>ip_rcv (53 samples, 1.22%)</title><rect x="873.5" y="803.0" width="14.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="876.5" y="814.0"></text>
</g>
<g>
<title>ip_local_deliver (32 samples, 0.74%)</title><rect x="873.8" y="787.0" width="8.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="876.8" y="798.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (18 samples, 0.41%)</title><rect x="874.3" y="771.0" width="4.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="877.3" y="782.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (18 samples, 0.41%)</title><rect x="874.3" y="755.0" width="4.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="877.3" y="766.0"></text>
</g>
<g>
<title>raw_local_deliver (1 samples, 0.02%)</title><rect x="874.3" y="739.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="877.3" y="750.0"></text>
</g>
<g>
<title>tcp_v4_rcv (17 samples, 0.39%)</title><rect x="874.6" y="739.0" width="4.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="877.6" y="750.0"></text>
</g>
<g>
<title>__inet_lookup_established (4 samples, 0.09%)</title><rect x="874.8" y="723.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="877.8" y="734.0"></text>
</g>
<g>
<title>inet_ehashfn (1 samples, 0.02%)</title><rect x="875.7" y="707.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="878.7" y="718.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (12 samples, 0.28%)</title><rect x="875.9" y="723.0" width="3.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="878.9" y="734.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.02%)</title><rect x="875.9" y="707.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="878.9" y="718.0"></text>
</g>
<g>
<title>tcp_rcv_established (11 samples, 0.25%)</title><rect x="876.2" y="707.0" width="3.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="879.2" y="718.0"></text>
</g>
<g>
<title>tcp_ack (10 samples, 0.23%)</title><rect x="876.5" y="691.0" width="2.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="879.5" y="702.0"></text>
</g>
<g>
<title>__kfree_skb (4 samples, 0.09%)</title><rect x="877.0" y="675.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="880.0" y="686.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.02%)</title><rect x="877.0" y="659.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="880.0" y="670.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.02%)</title><rect x="877.3" y="659.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="880.3" y="670.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.02%)</title><rect x="877.6" y="659.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="880.6" y="670.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.02%)</title><rect x="877.6" y="643.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="880.6" y="654.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.02%)</title><rect x="877.8" y="659.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="880.8" y="670.0"></text>
</g>
<g>
<title>kmem_cache_free (3 samples, 0.07%)</title><rect x="878.1" y="675.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="881.1" y="686.0"></text>
</g>
<g>
<title>__slab_free (2 samples, 0.05%)</title><rect x="878.4" y="659.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="881.4" y="670.0"></text>
</g>
<g>
<title>rb_erase (1 samples, 0.02%)</title><rect x="878.9" y="675.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="881.9" y="686.0"></text>
</g>
<g>
<title>nf_hook_slow (12 samples, 0.28%)</title><rect x="879.2" y="771.0" width="3.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="882.2" y="782.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (9 samples, 0.21%)</title><rect x="879.5" y="755.0" width="2.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="882.5" y="766.0"></text>
</g>
<g>
<title>iptable_filter_hook	[iptable_filter] (1 samples, 0.02%)</title><rect x="881.9" y="755.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="884.9" y="766.0"></text>
</g>
<g>
<title>ipv4_confirm	[nf_conntrack] (1 samples, 0.02%)</title><rect x="882.2" y="755.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="885.2" y="766.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (1 samples, 0.02%)</title><rect x="882.4" y="787.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="885.4" y="798.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="882.7" y="787.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="885.7" y="798.0"></text>
</g>
<g>
<title>nf_hook_slow (18 samples, 0.41%)</title><rect x="883.0" y="787.0" width="4.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="886.0" y="798.0"></text>
</g>
<g>
<title>ip_sabotage_in	[br_netfilter] (4 samples, 0.09%)</title><rect x="883.0" y="771.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="886.0" y="782.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (10 samples, 0.23%)</title><rect x="884.1" y="771.0" width="2.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="887.1" y="782.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag	[nf_defrag_ipv4] (1 samples, 0.02%)</title><rect x="886.8" y="771.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="889.8" y="782.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (1 samples, 0.02%)</title><rect x="887.1" y="771.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="890.1" y="782.0"></text>
</g>
<g>
<title>nf_nat_ipv4_in	[nf_nat] (2 samples, 0.05%)</title><rect x="887.3" y="771.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="890.3" y="782.0"></text>
</g>
<g>
<title>nf_nat_inet_fn	[nf_nat] (1 samples, 0.02%)</title><rect x="887.6" y="755.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="890.6" y="766.0"></text>
</g>
<g>
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="887.9" y="931.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="890.9" y="942.0"></text>
</g>
<g>
<title>nf_hook_slow (3 samples, 0.07%)</title><rect x="888.1" y="931.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="891.1" y="942.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (2 samples, 0.05%)</title><rect x="888.1" y="915.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="891.1" y="926.0"></text>
</g>
<g>
<title>selinux_ipv4_postroute (1 samples, 0.02%)</title><rect x="888.7" y="915.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="891.7" y="926.0"></text>
</g>
<g>
<title>lock_sock_nested (2 samples, 0.05%)</title><rect x="889.0" y="979.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="892.0" y="990.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.02%)</title><rect x="889.0" y="963.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="892.0" y="974.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="889.0" y="947.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="892.0" y="958.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.02%)</title><rect x="889.2" y="963.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="892.2" y="974.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.02%)</title><rect x="889.5" y="979.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="892.5" y="990.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.02%)</title><rect x="889.5" y="963.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="892.5" y="974.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (7 samples, 0.16%)</title><rect x="889.8" y="979.0" width="1.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="892.8" y="990.0"></text>
</g>
<g>
<title>__skb_datagram_iter (6 samples, 0.14%)</title><rect x="890.0" y="963.0" width="1.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="893.0" y="974.0"></text>
</g>
<g>
<title>_copy_to_iter (3 samples, 0.07%)</title><rect x="890.3" y="947.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="893.3" y="958.0"></text>
</g>
<g>
<title>copyout (3 samples, 0.07%)</title><rect x="890.3" y="931.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="893.3" y="942.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (3 samples, 0.07%)</title><rect x="890.3" y="915.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="893.3" y="926.0"></text>
</g>
<g>
<title>simple_copy_to_iter (2 samples, 0.05%)</title><rect x="891.1" y="947.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="894.1" y="958.0"></text>
</g>
<g>
<title>__check_object_size (2 samples, 0.05%)</title><rect x="891.1" y="931.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="894.1" y="942.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.02%)</title><rect x="891.4" y="915.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="894.4" y="926.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (2 samples, 0.05%)</title><rect x="891.7" y="979.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="894.7" y="990.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (2 samples, 0.05%)</title><rect x="891.7" y="963.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="894.7" y="974.0"></text>
</g>
<g>
<title>sock_recvmsg (3 samples, 0.07%)</title><rect x="892.2" y="1011.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="895.2" y="1022.0"></text>
</g>
<g>
<title>security_socket_recvmsg (3 samples, 0.07%)</title><rect x="892.2" y="995.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="895.2" y="1006.0"></text>
</g>
<g>
<title>sock_has_perm (3 samples, 0.07%)</title><rect x="892.2" y="979.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="895.2" y="990.0"></text>
</g>
<g>
<title>avc_has_perm (1 samples, 0.02%)</title><rect x="892.8" y="963.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="895.8" y="974.0"></text>
</g>
<g>
<title>security_file_permission (6 samples, 0.14%)</title><rect x="893.0" y="1043.0" width="1.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="896.0" y="1054.0"></text>
</g>
<g>
<title>file_has_perm (1 samples, 0.02%)</title><rect x="893.0" y="1027.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="896.0" y="1038.0"></text>
</g>
<g>
<title>avc_has_perm (1 samples, 0.02%)</title><rect x="893.0" y="1011.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="896.0" y="1022.0"></text>
</g>
<g>
<title>selinux_file_permission (5 samples, 0.12%)</title><rect x="893.3" y="1027.0" width="1.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="896.3" y="1038.0"></text>
</g>
<g>
<title>__inode_security_revalidate (2 samples, 0.05%)</title><rect x="894.1" y="1011.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="897.1" y="1022.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.02%)</title><rect x="894.4" y="995.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="897.4" y="1006.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.02%)</title><rect x="894.7" y="1123.0" width="0.2" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="897.7" y="1134.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.02%)</title><rect x="894.9" y="1123.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="897.9" y="1134.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (7 samples, 0.16%)</title><rect x="895.2" y="1171.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="898.2" y="1182.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.02%)</title><rect x="895.2" y="1155.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="898.2" y="1166.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (1 samples, 0.02%)</title><rect x="895.2" y="1139.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="898.2" y="1150.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (6 samples, 0.14%)</title><rect x="895.5" y="1155.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="898.5" y="1166.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.next (2 samples, 0.05%)</title><rect x="896.6" y="1139.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="899.6" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.isStopped (1 samples, 0.02%)</title><rect x="897.1" y="1235.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="900.1" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (1 samples, 0.02%)</title><rect x="897.1" y="1219.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="900.1" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$244/1205372074.accept (5 samples, 0.12%)</title><rect x="897.4" y="1427.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="900.4" y="1438.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (4 samples, 0.09%)</title><rect x="897.6" y="1411.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="900.6" y="1422.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$240/135343777.run (4 samples, 0.09%)</title><rect x="897.6" y="1395.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="900.6" y="1406.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (4 samples, 0.09%)</title><rect x="897.6" y="1379.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="900.6" y="1390.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (4 samples, 0.09%)</title><rect x="897.6" y="1363.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="900.6" y="1374.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.next (3 samples, 0.07%)</title><rect x="897.6" y="1347.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="900.6" y="1358.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.nextNode (3 samples, 0.07%)</title><rect x="897.6" y="1331.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="900.6" y="1342.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectionKeyImpl.interestOps (1 samples, 0.02%)</title><rect x="898.5" y="1347.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="901.5" y="1358.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.next (3 samples, 0.07%)</title><rect x="898.7" y="1443.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="901.7" y="1454.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.nextNode (3 samples, 0.07%)</title><rect x="898.7" y="1427.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="901.7" y="1438.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (5 samples, 0.12%)</title><rect x="899.5" y="1443.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="902.5" y="1454.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (5 samples, 0.12%)</title><rect x="899.5" y="1427.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="902.5" y="1438.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.sourceSpliterator (1 samples, 0.02%)</title><rect x="899.5" y="1411.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="902.5" y="1422.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (1 samples, 0.02%)</title><rect x="899.8" y="1411.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="902.8" y="1422.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (1 samples, 0.02%)</title><rect x="899.8" y="1395.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="902.8" y="1406.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (1 samples, 0.02%)</title><rect x="899.8" y="1379.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="902.8" y="1390.0"></text>
</g>
<g>
<title>java/util/Optional.of (1 samples, 0.02%)</title><rect x="899.8" y="1363.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="902.8" y="1374.0"></text>
</g>
<g>
<title>java/util/Optional.&lt;init&gt; (1 samples, 0.02%)</title><rect x="899.8" y="1347.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="902.8" y="1358.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (3 samples, 0.07%)</title><rect x="900.1" y="1411.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="903.1" y="1422.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (3 samples, 0.07%)</title><rect x="900.1" y="1395.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="903.1" y="1406.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (3 samples, 0.07%)</title><rect x="900.1" y="1379.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="903.1" y="1390.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (1 samples, 0.02%)</title><rect x="900.1" y="1363.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="903.1" y="1374.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySpliterator.forEachRemaining (1 samples, 0.02%)</title><rect x="900.1" y="1347.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="903.1" y="1358.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (1 samples, 0.02%)</title><rect x="900.1" y="1331.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="903.1" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment$$Lambda$238/1066786881.test (1 samples, 0.02%)</title><rect x="900.1" y="1315.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="903.1" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.lambda$events$0 (1 samples, 0.02%)</title><rect x="900.1" y="1299.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="903.1" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.interestOps (1 samples, 0.02%)</title><rect x="900.1" y="1283.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="903.1" y="1294.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (2 samples, 0.05%)</title><rect x="900.4" y="1363.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="903.4" y="1374.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.opWrapSink (2 samples, 0.05%)</title><rect x="900.4" y="1347.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="903.4" y="1358.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5$1.&lt;init&gt; (2 samples, 0.05%)</title><rect x="900.4" y="1331.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="903.4" y="1342.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.&lt;init&gt; (2 samples, 0.05%)</title><rect x="900.4" y="1315.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="903.4" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (73 samples, 1.68%)</title><rect x="900.9" y="1443.0" width="19.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="903.9" y="1454.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$188/903113097.run (44 samples, 1.01%)</title><rect x="901.7" y="1427.0" width="12.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="904.7" y="1438.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1 samples, 0.02%)</title><rect x="901.7" y="1411.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="904.7" y="1422.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (43 samples, 0.99%)</title><rect x="902.0" y="1411.0" width="11.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="905.0" y="1422.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (42 samples, 0.97%)</title><rect x="902.3" y="1395.0" width="11.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="905.3" y="1406.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (42 samples, 0.97%)</title><rect x="902.3" y="1379.0" width="11.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="905.3" y="1390.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1 samples, 0.02%)</title><rect x="902.5" y="1363.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="905.5" y="1374.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.02%)</title><rect x="902.5" y="1347.0" width="0.3" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="905.5" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (40 samples, 0.92%)</title><rect x="902.8" y="1363.0" width="10.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="905.8" y="1374.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (40 samples, 0.92%)</title><rect x="902.8" y="1347.0" width="10.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="905.8" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$181/1894615385.run (39 samples, 0.90%)</title><rect x="902.8" y="1331.0" width="10.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="905.8" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (39 samples, 0.90%)</title><rect x="902.8" y="1315.0" width="10.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="905.8" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (39 samples, 0.90%)</title><rect x="902.8" y="1299.0" width="10.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="905.8" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicReference.compareAndSet (1 samples, 0.02%)</title><rect x="905.5" y="1283.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="908.5" y="1294.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.02%)</title><rect x="905.5" y="1267.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="908.5" y="1278.0"></text>
</g>
<g>
<title>java/lang/invoke/VarForm.getMemberName (1 samples, 0.02%)</title><rect x="905.5" y="1251.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="908.5" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (28 samples, 0.64%)</title><rect x="905.8" y="1283.0" width="7.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="908.8" y="1294.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.05%)</title><rect x="905.8" y="1267.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="908.8" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (11 samples, 0.25%)</title><rect x="906.3" y="1267.0" width="3.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="909.3" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (11 samples, 0.25%)</title><rect x="906.3" y="1251.0" width="3.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="909.3" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (11 samples, 0.25%)</title><rect x="906.3" y="1235.0" width="3.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="909.3" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (4 samples, 0.09%)</title><rect x="906.3" y="1219.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="909.3" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (4 samples, 0.09%)</title><rect x="906.3" y="1203.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="909.3" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (4 samples, 0.09%)</title><rect x="906.3" y="1187.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="909.3" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (4 samples, 0.09%)</title><rect x="906.3" y="1171.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="909.3" y="1182.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.keyFor (1 samples, 0.02%)</title><rect x="906.6" y="1155.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="909.6" y="1166.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.findKey (1 samples, 0.02%)</title><rect x="906.6" y="1139.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="909.6" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (2 samples, 0.05%)</title><rect x="906.9" y="1155.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="909.9" y="1166.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.02%)</title><rect x="907.1" y="1139.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="910.1" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.increase (7 samples, 0.16%)</title><rect x="907.4" y="1219.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="910.4" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.getAndAccumulate (4 samples, 0.09%)</title><rect x="908.2" y="1203.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="911.2" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.weakCompareAndSetVolatile (3 samples, 0.07%)</title><rect x="908.5" y="1187.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="911.5" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (15 samples, 0.35%)</title><rect x="909.3" y="1267.0" width="4.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="912.3" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (15 samples, 0.35%)</title><rect x="909.3" y="1251.0" width="4.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="912.3" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (15 samples, 0.35%)</title><rect x="909.3" y="1235.0" width="4.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="912.3" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicInteger.compareAndSet (2 samples, 0.05%)</title><rect x="909.3" y="1219.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="912.3" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (13 samples, 0.30%)</title><rect x="909.9" y="1219.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="912.9" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (13 samples, 0.30%)</title><rect x="909.9" y="1203.0" width="3.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="912.9" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (13 samples, 0.30%)</title><rect x="909.9" y="1187.0" width="3.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="912.9" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue$Node.&lt;init&gt; (1 samples, 0.02%)</title><rect x="909.9" y="1171.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="912.9" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.enqueue (1 samples, 0.02%)</title><rect x="910.1" y="1171.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="913.1" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (9 samples, 0.21%)</title><rect x="910.4" y="1171.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="913.4" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.02%)</title><rect x="910.4" y="1155.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="913.4" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.02%)</title><rect x="910.4" y="1139.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="913.4" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.02%)</title><rect x="910.4" y="1123.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="913.4" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.02%)</title><rect x="910.4" y="1107.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="913.4" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.02%)</title><rect x="910.4" y="1091.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="913.4" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.02%)</title><rect x="910.4" y="1075.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="913.4" y="1086.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="910.4" y="1059.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="913.4" y="1070.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.02%)</title><rect x="910.4" y="1043.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="913.4" y="1054.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="910.4" y="1027.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="913.4" y="1038.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="910.4" y="1011.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="913.4" y="1022.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.02%)</title><rect x="910.4" y="995.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="913.4" y="1006.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.02%)</title><rect x="910.4" y="979.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="913.4" y="990.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.02%)</title><rect x="910.4" y="963.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="913.4" y="974.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.02%)</title><rect x="910.4" y="947.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="913.4" y="958.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="910.4" y="931.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="913.4" y="942.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.02%)</title><rect x="910.4" y="915.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="913.4" y="926.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="910.4" y="899.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="913.4" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (8 samples, 0.18%)</title><rect x="910.7" y="1155.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="913.7" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (8 samples, 0.18%)</title><rect x="910.7" y="1139.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="913.7" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (8 samples, 0.18%)</title><rect x="910.7" y="1123.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="913.7" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (8 samples, 0.18%)</title><rect x="910.7" y="1107.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="913.7" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (8 samples, 0.18%)</title><rect x="910.7" y="1091.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="913.7" y="1102.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.05%)</title><rect x="910.7" y="1075.0" width="0.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="913.7" y="1086.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.02%)</title><rect x="910.7" y="1059.0" width="0.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="913.7" y="1070.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_lock (1 samples, 0.02%)</title><rect x="910.9" y="1059.0" width="0.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="913.9" y="1070.0"></text>
</g>
<g>
<title>__pthread_cond_signal (6 samples, 0.14%)</title><rect x="911.2" y="1075.0" width="1.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="914.2" y="1086.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.12%)</title><rect x="911.5" y="1059.0" width="1.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="914.5" y="1070.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.12%)</title><rect x="911.5" y="1043.0" width="1.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="914.5" y="1054.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.09%)</title><rect x="911.8" y="1027.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="914.8" y="1038.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.09%)</title><rect x="911.8" y="1011.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="914.8" y="1022.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 0.09%)</title><rect x="911.8" y="995.0" width="1.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="914.8" y="1006.0"></text>
</g>
<g>
<title>wake_up_q (4 samples, 0.09%)</title><rect x="911.8" y="979.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="914.8" y="990.0"></text>
</g>
<g>
<title>try_to_wake_up (4 samples, 0.09%)</title><rect x="911.8" y="963.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="914.8" y="974.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.09%)</title><rect x="911.8" y="947.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="914.8" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.02%)</title><rect x="912.8" y="1171.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="915.8" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.02%)</title><rect x="912.8" y="1155.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="915.8" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (1 samples, 0.02%)</title><rect x="912.8" y="1139.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="915.8" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.setPrevRelaxed (1 samples, 0.02%)</title><rect x="912.8" y="1123.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="915.8" y="1134.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (1 samples, 0.02%)</title><rect x="912.8" y="1107.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="915.8" y="1118.0"></text>
</g>
<g>
<title>java/lang/invoke/VarForm.getMemberName (1 samples, 0.02%)</title><rect x="912.8" y="1091.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="915.8" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.02%)</title><rect x="913.1" y="1171.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="916.1" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.02%)</title><rect x="913.1" y="1155.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="916.1" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.02%)</title><rect x="913.1" y="1139.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="916.1" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.compareAndSetWaitStatus (1 samples, 0.02%)</title><rect x="913.1" y="1123.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="916.1" y="1134.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.02%)</title><rect x="913.1" y="1107.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="916.1" y="1118.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (1 samples, 0.02%)</title><rect x="913.1" y="1091.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="916.1" y="1102.0"></text>
</g>
<g>
<title>java/util/Objects.requireNonNull (1 samples, 0.02%)</title><rect x="913.1" y="1075.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="916.1" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (1 samples, 0.02%)</title><rect x="913.4" y="1331.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="916.4" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicInteger.compareAndSet (1 samples, 0.02%)</title><rect x="913.4" y="1315.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="916.4" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$192/1926392655.run (26 samples, 0.60%)</title><rect x="913.7" y="1427.0" width="7.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="916.7" y="1438.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (26 samples, 0.60%)</title><rect x="913.7" y="1411.0" width="7.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="916.7" y="1422.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (22 samples, 0.51%)</title><rect x="913.7" y="1395.0" width="5.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="916.7" y="1406.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (22 samples, 0.51%)</title><rect x="913.7" y="1379.0" width="5.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="916.7" y="1390.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (21 samples, 0.48%)</title><rect x="913.9" y="1363.0" width="5.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="916.9" y="1374.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue$Node.&lt;init&gt; (1 samples, 0.02%)</title><rect x="913.9" y="1347.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="916.9" y="1358.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.enqueue (1 samples, 0.02%)</title><rect x="914.2" y="1347.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="917.2" y="1358.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (13 samples, 0.30%)</title><rect x="914.5" y="1347.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="917.5" y="1358.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.02%)</title><rect x="914.5" y="1331.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="917.5" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.02%)</title><rect x="914.5" y="1315.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="917.5" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.02%)</title><rect x="914.5" y="1299.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="917.5" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquire (1 samples, 0.02%)</title><rect x="914.5" y="1283.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="917.5" y="1294.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="914.5" y="1267.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="917.5" y="1278.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="914.5" y="1251.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="917.5" y="1262.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="914.5" y="1235.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="917.5" y="1246.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="914.5" y="1219.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="917.5" y="1230.0"></text>
</g>
<g>
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="914.5" y="1203.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="917.5" y="1214.0"></text>
</g>
<g>
<title>call_timer_fn (1 samples, 0.02%)</title><rect x="914.5" y="1187.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="917.5" y="1198.0"></text>
</g>
<g>
<title>tcp_delack_timer (1 samples, 0.02%)</title><rect x="914.5" y="1171.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="917.5" y="1182.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="914.5" y="1155.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="917.5" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (12 samples, 0.28%)</title><rect x="914.7" y="1331.0" width="3.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="917.7" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (12 samples, 0.28%)</title><rect x="914.7" y="1315.0" width="3.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="917.7" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (12 samples, 0.28%)</title><rect x="914.7" y="1299.0" width="3.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="917.7" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (12 samples, 0.28%)</title><rect x="914.7" y="1283.0" width="3.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="917.7" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (12 samples, 0.28%)</title><rect x="914.7" y="1267.0" width="3.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="917.7" y="1278.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.05%)</title><rect x="914.7" y="1251.0" width="0.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="917.7" y="1262.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.02%)</title><rect x="914.7" y="1235.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="917.7" y="1246.0"></text>
</g>
<g>
<title>update_get_addr (1 samples, 0.02%)</title><rect x="915.0" y="1235.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="918.0" y="1246.0"></text>
</g>
<g>
<title>__pthread_cond_signal (10 samples, 0.23%)</title><rect x="915.3" y="1251.0" width="2.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="918.3" y="1262.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.18%)</title><rect x="915.8" y="1235.0" width="2.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="918.8" y="1246.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.18%)</title><rect x="915.8" y="1219.0" width="2.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="918.8" y="1230.0"></text>
</g>
<g>
<title>__x64_sys_futex (7 samples, 0.16%)</title><rect x="916.1" y="1203.0" width="1.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="919.1" y="1214.0"></text>
</g>
<g>
<title>do_futex (7 samples, 0.16%)</title><rect x="916.1" y="1187.0" width="1.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="919.1" y="1198.0"></text>
</g>
<g>
<title>futex_wake (7 samples, 0.16%)</title><rect x="916.1" y="1171.0" width="1.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="919.1" y="1182.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.02%)</title><rect x="916.1" y="1155.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="919.1" y="1166.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.02%)</title><rect x="916.4" y="1155.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="919.4" y="1166.0"></text>
</g>
<g>
<title>__unqueue_futex (1 samples, 0.02%)</title><rect x="916.4" y="1139.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="919.4" y="1150.0"></text>
</g>
<g>
<title>wake_up_q (5 samples, 0.12%)</title><rect x="916.6" y="1155.0" width="1.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="919.6" y="1166.0"></text>
</g>
<g>
<title>try_to_wake_up (5 samples, 0.12%)</title><rect x="916.6" y="1139.0" width="1.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="919.6" y="1150.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (5 samples, 0.12%)</title><rect x="916.6" y="1123.0" width="1.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="919.6" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (2 samples, 0.05%)</title><rect x="918.0" y="1347.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="921.0" y="1358.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (2 samples, 0.05%)</title><rect x="918.0" y="1331.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="921.0" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (4 samples, 0.09%)</title><rect x="918.5" y="1347.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="921.5" y="1358.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (4 samples, 0.09%)</title><rect x="918.5" y="1331.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="921.5" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (3 samples, 0.07%)</title><rect x="918.5" y="1315.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="921.5" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.setPrevRelaxed (2 samples, 0.05%)</title><rect x="918.5" y="1299.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="921.5" y="1310.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (2 samples, 0.05%)</title><rect x="918.5" y="1283.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="921.5" y="1294.0"></text>
</g>
<g>
<title>java/lang/invoke/VarForm.getMemberName (2 samples, 0.05%)</title><rect x="918.5" y="1267.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="921.5" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetTail (1 samples, 0.02%)</title><rect x="919.1" y="1299.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="922.1" y="1310.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.02%)</title><rect x="919.1" y="1283.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="922.1" y="1294.0"></text>
</g>
<g>
<title>java/lang/invoke/VarForm.getMemberName (1 samples, 0.02%)</title><rect x="919.1" y="1267.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="922.1" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (1 samples, 0.02%)</title><rect x="919.4" y="1315.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="922.4" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (1 samples, 0.02%)</title><rect x="919.4" y="1299.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="922.4" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.setExclusiveOwnerThread (1 samples, 0.02%)</title><rect x="919.4" y="1283.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="922.4" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (4 samples, 0.09%)</title><rect x="919.6" y="1395.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="922.6" y="1406.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.isStopped (2 samples, 0.05%)</title><rect x="920.2" y="1379.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="923.2" y="1390.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.02%)</title><rect x="920.4" y="1363.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="923.4" y="1374.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (20 samples, 0.46%)</title><rect x="920.7" y="1443.0" width="5.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="923.7" y="1454.0"></text>
</g>
<g>
<title>java/time/Instant.now (3 samples, 0.07%)</title><rect x="921.3" y="1427.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="924.3" y="1438.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (3 samples, 0.07%)</title><rect x="921.3" y="1411.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="924.3" y="1422.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (1 samples, 0.02%)</title><rect x="921.3" y="1395.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="924.3" y="1406.0"></text>
</g>
<g>
<title>java/time/Instant.create (1 samples, 0.02%)</title><rect x="921.3" y="1379.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="924.3" y="1390.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (2 samples, 0.05%)</title><rect x="921.5" y="1395.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="924.5" y="1406.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (2 samples, 0.05%)</title><rect x="921.5" y="1379.0" width="0.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="924.5" y="1390.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.02%)</title><rect x="921.8" y="1363.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="924.8" y="1374.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (2 samples, 0.05%)</title><rect x="922.1" y="1427.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="925.1" y="1438.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (13 samples, 0.30%)</title><rect x="922.6" y="1427.0" width="3.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="925.6" y="1438.0"></text>
</g>
<g>
<title>itable stub (6 samples, 0.14%)</title><rect x="923.4" y="1411.0" width="1.7" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="926.4" y="1422.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (1 samples, 0.02%)</title><rect x="925.1" y="1411.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="928.1" y="1422.0"></text>
</g>
<g>
<title>java/util/ArrayList$Itr.&lt;init&gt; (1 samples, 0.02%)</title><rect x="925.1" y="1395.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="928.1" y="1406.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (3 samples, 0.07%)</title><rect x="925.3" y="1411.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="928.3" y="1422.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (1 samples, 0.02%)</title><rect x="925.9" y="1395.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="928.9" y="1406.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.&lt;init&gt; (5 samples, 0.12%)</title><rect x="926.1" y="1443.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="929.1" y="1454.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (4 samples, 0.09%)</title><rect x="926.4" y="1427.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="929.4" y="1438.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.events (10 samples, 0.23%)</title><rect x="927.5" y="1443.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="930.5" y="1454.0"></text>
</g>
<g>
<title>java/util/Collection.stream (5 samples, 0.12%)</title><rect x="927.5" y="1427.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="930.5" y="1438.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (5 samples, 0.12%)</title><rect x="927.5" y="1411.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="930.5" y="1422.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$Head.&lt;init&gt; (5 samples, 0.12%)</title><rect x="927.5" y="1395.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="930.5" y="1406.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.&lt;init&gt; (5 samples, 0.12%)</title><rect x="927.5" y="1379.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="930.5" y="1390.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.&lt;init&gt; (5 samples, 0.12%)</title><rect x="927.5" y="1363.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="930.5" y="1374.0"></text>
</g>
<g>
<title>java/util/stream/PipelineHelper.&lt;init&gt; (2 samples, 0.05%)</title><rect x="928.3" y="1347.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="931.3" y="1358.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (5 samples, 0.12%)</title><rect x="928.9" y="1427.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="931.9" y="1438.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.&lt;init&gt; (5 samples, 0.12%)</title><rect x="928.9" y="1411.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="931.9" y="1422.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$StatelessOp.&lt;init&gt; (5 samples, 0.12%)</title><rect x="928.9" y="1395.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="931.9" y="1406.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.&lt;init&gt; (5 samples, 0.12%)</title><rect x="928.9" y="1379.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="931.9" y="1390.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.&lt;init&gt; (5 samples, 0.12%)</title><rect x="928.9" y="1363.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="931.9" y="1374.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.02%)</title><rect x="929.9" y="1347.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="932.9" y="1358.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (1 samples, 0.02%)</title><rect x="929.9" y="1331.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="932.9" y="1342.0"></text>
</g>
<g>
<title>ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*) (1 samples, 0.02%)</title><rect x="929.9" y="1315.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="932.9" y="1326.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.02%)</title><rect x="929.9" y="1299.0" width="0.3" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="932.9" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (3 samples, 0.07%)</title><rect x="930.2" y="1443.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="933.2" y="1454.0"></text>
</g>
<g>
<title>java/util/HashSet.add (3 samples, 0.07%)</title><rect x="930.2" y="1427.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="933.2" y="1438.0"></text>
</g>
<g>
<title>java/util/HashMap.put (3 samples, 0.07%)</title><rect x="930.2" y="1411.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="933.2" y="1422.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (3 samples, 0.07%)</title><rect x="930.2" y="1395.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="933.2" y="1406.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$244/1205372074.accept (1 samples, 0.02%)</title><rect x="931.0" y="1443.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="934.0" y="1454.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.isReferenced (2 samples, 0.05%)</title><rect x="931.3" y="1443.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="934.3" y="1454.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.facade (2 samples, 0.05%)</title><rect x="931.3" y="1427.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="934.3" y="1438.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.purgeTimeoutsAndReturnNextDeadline (1 samples, 0.02%)</title><rect x="931.8" y="1443.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="934.8" y="1454.0"></text>
</g>
<g>
<title>java/util/TreeSet.isEmpty (1 samples, 0.02%)</title><rect x="931.8" y="1427.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="934.8" y="1438.0"></text>
</g>
<g>
<title>java/util/AbstractMap.isEmpty (1 samples, 0.02%)</title><rect x="931.8" y="1411.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="934.8" y="1422.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (198 samples, 4.55%)</title><rect x="932.1" y="1443.0" width="53.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="935.1" y="1454.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (197 samples, 4.53%)</title><rect x="932.4" y="1427.0" width="53.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="935.4" y="1438.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (197 samples, 4.53%)</title><rect x="932.4" y="1411.0" width="53.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="935.4" y="1422.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (102 samples, 2.35%)</title><rect x="933.2" y="1395.0" width="27.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="936.2" y="1406.0">s..</text>
</g>
<g>
<title>.annobin_epoll_wait.c (98 samples, 2.25%)</title><rect x="933.7" y="1379.0" width="26.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="936.7" y="1390.0">...</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="938.1" y="1363.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="941.1" y="1374.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (81 samples, 1.86%)</title><rect x="938.4" y="1363.0" width="22.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="941.4" y="1374.0">e..</text>
</g>
<g>
<title>do_syscall_64 (81 samples, 1.86%)</title><rect x="938.4" y="1347.0" width="22.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="941.4" y="1358.0">d..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (74 samples, 1.70%)</title><rect x="940.3" y="1331.0" width="20.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="943.3" y="1342.0"></text>
</g>
<g>
<title>do_epoll_wait (73 samples, 1.68%)</title><rect x="940.5" y="1315.0" width="19.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="943.5" y="1326.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.07%)</title><rect x="941.1" y="1299.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="944.1" y="1310.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.07%)</title><rect x="941.1" y="1283.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="944.1" y="1294.0"></text>
</g>
<g>
<title>ep_poll (68 samples, 1.56%)</title><rect x="941.9" y="1299.0" width="18.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="944.9" y="1310.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (31 samples, 0.71%)</title><rect x="942.7" y="1283.0" width="8.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="945.7" y="1294.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="944.6" y="1267.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="947.6" y="1278.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="944.6" y="1251.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="947.6" y="1262.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="944.6" y="1235.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="947.6" y="1246.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="944.6" y="1219.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="947.6" y="1230.0"></text>
</g>
<g>
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="944.6" y="1203.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="947.6" y="1214.0"></text>
</g>
<g>
<title>ep_send_events_proc (20 samples, 0.46%)</title><rect x="944.9" y="1267.0" width="5.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="947.9" y="1278.0"></text>
</g>
<g>
<title>__list_add_valid (1 samples, 0.02%)</title><rect x="946.0" y="1251.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="949.0" y="1262.0"></text>
</g>
<g>
<title>__list_del_entry_valid (1 samples, 0.02%)</title><rect x="946.2" y="1251.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="949.2" y="1262.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (14 samples, 0.32%)</title><rect x="946.5" y="1251.0" width="3.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="949.5" y="1262.0"></text>
</g>
<g>
<title>pipe_poll (5 samples, 0.12%)</title><rect x="947.6" y="1235.0" width="1.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="950.6" y="1246.0"></text>
</g>
<g>
<title>sock_poll (5 samples, 0.12%)</title><rect x="949.0" y="1235.0" width="1.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="952.0" y="1246.0"></text>
</g>
<g>
<title>tcp_poll (2 samples, 0.05%)</title><rect x="949.8" y="1219.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="952.8" y="1230.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.02%)</title><rect x="950.3" y="1267.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="953.3" y="1278.0"></text>
</g>
<g>
<title>mutex_unlock (2 samples, 0.05%)</title><rect x="950.6" y="1267.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="953.6" y="1278.0"></text>
</g>
<g>
<title>ktime_get_ts64 (3 samples, 0.07%)</title><rect x="951.1" y="1283.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="954.1" y="1294.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.05%)</title><rect x="951.4" y="1267.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="954.4" y="1278.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (27 samples, 0.62%)</title><rect x="951.9" y="1283.0" width="7.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="954.9" y="1294.0"></text>
</g>
<g>
<title>__hrtimer_init (2 samples, 0.05%)</title><rect x="953.0" y="1267.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="956.0" y="1278.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (2 samples, 0.05%)</title><rect x="953.6" y="1267.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="956.6" y="1278.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.05%)</title><rect x="953.6" y="1251.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="956.6" y="1262.0"></text>
</g>
<g>
<title>hrtimer_try_to_cancel (7 samples, 0.16%)</title><rect x="954.1" y="1267.0" width="1.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="957.1" y="1278.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.09%)</title><rect x="954.7" y="1251.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="957.7" y="1262.0"></text>
</g>
<g>
<title>hrtimer_active (1 samples, 0.02%)</title><rect x="955.7" y="1251.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="958.7" y="1262.0"></text>
</g>
<g>
<title>schedule (12 samples, 0.28%)</title><rect x="956.0" y="1267.0" width="3.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="959.0" y="1278.0"></text>
</g>
<g>
<title>__sched_text_start (10 samples, 0.23%)</title><rect x="956.6" y="1251.0" width="2.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="959.6" y="1262.0"></text>
</g>
<g>
<title>finish_task_switch (8 samples, 0.18%)</title><rect x="957.1" y="1235.0" width="2.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="960.1" y="1246.0"></text>
</g>
<g>
<title>select_estimate_accuracy (4 samples, 0.09%)</title><rect x="959.3" y="1283.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="962.3" y="1294.0"></text>
</g>
<g>
<title>ktime_get_ts64 (1 samples, 0.02%)</title><rect x="960.1" y="1267.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="963.1" y="1278.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.02%)</title><rect x="960.4" y="1379.0" width="0.2" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="963.4" y="1390.0"></text>
</g>
<g>
<title>_init (1 samples, 0.02%)</title><rect x="960.6" y="1379.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="963.6" y="1390.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (73 samples, 1.68%)</title><rect x="960.9" y="1395.0" width="19.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="963.9" y="1406.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.05%)</title><rect x="960.9" y="1379.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="963.9" y="1390.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.05%)</title><rect x="960.9" y="1363.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="963.9" y="1374.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (69 samples, 1.59%)</title><rect x="961.4" y="1379.0" width="18.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="964.4" y="1390.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.drain (68 samples, 1.56%)</title><rect x="961.7" y="1363.0" width="18.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="964.7" y="1374.0"></text>
</g>
<g>
<title>__libc_read (65 samples, 1.50%)</title><rect x="962.0" y="1347.0" width="17.6" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="965.0" y="1358.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="965.0" y="1331.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="968.0" y="1342.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="965.0" y="1315.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="968.0" y="1326.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="965.0" y="1299.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="968.0" y="1310.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="965.0" y="1283.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="968.0" y="1294.0"></text>
</g>
<g>
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="965.0" y="1267.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="968.0" y="1278.0"></text>
</g>
<g>
<title>call_timer_fn (1 samples, 0.02%)</title><rect x="965.0" y="1251.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="968.0" y="1262.0"></text>
</g>
<g>
<title>tcp_delack_timer (1 samples, 0.02%)</title><rect x="965.0" y="1235.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="968.0" y="1246.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="965.0" y="1219.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="968.0" y="1230.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (53 samples, 1.22%)</title><rect x="965.2" y="1331.0" width="14.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="968.2" y="1342.0"></text>
</g>
<g>
<title>do_syscall_64 (53 samples, 1.22%)</title><rect x="965.2" y="1315.0" width="14.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="968.2" y="1326.0"></text>
</g>
<g>
<title>__x64_sys_read (1 samples, 0.02%)</title><rect x="966.3" y="1299.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="969.3" y="1310.0"></text>
</g>
<g>
<title>ksys_read (48 samples, 1.10%)</title><rect x="966.6" y="1299.0" width="13.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="969.6" y="1310.0"></text>
</g>
<g>
<title>__fdget_pos (2 samples, 0.05%)</title><rect x="966.9" y="1283.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="969.9" y="1294.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.05%)</title><rect x="966.9" y="1267.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="969.9" y="1278.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.02%)</title><rect x="967.1" y="1251.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="970.1" y="1262.0"></text>
</g>
<g>
<title>vfs_read (45 samples, 1.04%)</title><rect x="967.4" y="1283.0" width="12.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="970.4" y="1294.0"></text>
</g>
<g>
<title>__fsnotify_parent (1 samples, 0.02%)</title><rect x="968.0" y="1267.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="971.0" y="1278.0"></text>
</g>
<g>
<title>fsnotify (1 samples, 0.02%)</title><rect x="968.2" y="1267.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="971.2" y="1278.0"></text>
</g>
<g>
<title>new_sync_read (27 samples, 0.62%)</title><rect x="968.5" y="1267.0" width="7.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="971.5" y="1278.0"></text>
</g>
<g>
<title>pipe_read (27 samples, 0.62%)</title><rect x="968.5" y="1251.0" width="7.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="971.5" y="1262.0"></text>
</g>
<g>
<title>__wake_up_common_lock (6 samples, 0.14%)</title><rect x="969.9" y="1235.0" width="1.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="972.9" y="1246.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (6 samples, 0.14%)</title><rect x="969.9" y="1219.0" width="1.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="972.9" y="1230.0"></text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.02%)</title><rect x="971.5" y="1235.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="974.5" y="1246.0"></text>
</g>
<g>
<title>anon_pipe_buf_release (6 samples, 0.14%)</title><rect x="971.8" y="1235.0" width="1.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="974.8" y="1246.0"></text>
</g>
<g>
<title>copy_page_to_iter (5 samples, 0.12%)</title><rect x="973.4" y="1235.0" width="1.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="976.4" y="1246.0"></text>
</g>
<g>
<title>copyout (3 samples, 0.07%)</title><rect x="973.9" y="1219.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="976.9" y="1230.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (2 samples, 0.05%)</title><rect x="974.2" y="1203.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="977.2" y="1214.0"></text>
</g>
<g>
<title>touch_atime (4 samples, 0.09%)</title><rect x="974.7" y="1235.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="977.7" y="1246.0"></text>
</g>
<g>
<title>__mnt_want_write (1 samples, 0.02%)</title><rect x="975.0" y="1219.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="978.0" y="1230.0"></text>
</g>
<g>
<title>atime_needs_update (2 samples, 0.05%)</title><rect x="975.3" y="1219.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="978.3" y="1230.0"></text>
</g>
<g>
<title>security_file_permission (14 samples, 0.32%)</title><rect x="975.8" y="1267.0" width="3.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="978.8" y="1278.0"></text>
</g>
<g>
<title>file_has_perm (6 samples, 0.14%)</title><rect x="976.1" y="1251.0" width="1.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="979.1" y="1262.0"></text>
</g>
<g>
<title>avc_has_perm (5 samples, 0.12%)</title><rect x="976.1" y="1235.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="979.1" y="1246.0"></text>
</g>
<g>
<title>bpf_fd_pass (1 samples, 0.02%)</title><rect x="977.5" y="1235.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="980.5" y="1246.0"></text>
</g>
<g>
<title>selinux_file_permission (7 samples, 0.16%)</title><rect x="977.7" y="1251.0" width="1.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="980.7" y="1262.0"></text>
</g>
<g>
<title>__inode_security_revalidate (1 samples, 0.02%)</title><rect x="979.4" y="1235.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="982.4" y="1246.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.02%)</title><rect x="979.4" y="1219.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="982.4" y="1230.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (2 samples, 0.05%)</title><rect x="979.6" y="1347.0" width="0.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="982.6" y="1358.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (2 samples, 0.05%)</title><rect x="980.2" y="1379.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="983.2" y="1390.0"></text>
</g>
<g>
<title>java/util/HashSet.add (2 samples, 0.05%)</title><rect x="980.2" y="1363.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="983.2" y="1374.0"></text>
</g>
<g>
<title>java/util/HashMap.put (2 samples, 0.05%)</title><rect x="980.2" y="1347.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="983.2" y="1358.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (2 samples, 0.05%)</title><rect x="980.2" y="1331.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="983.2" y="1342.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.02%)</title><rect x="980.2" y="1315.0" width="0.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="983.2" y="1326.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (1 samples, 0.02%)</title><rect x="980.2" y="1299.0" width="0.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="983.2" y="1310.0"></text>
</g>
<g>
<title>ObjectMonitor::exit(bool, Thread*) (1 samples, 0.02%)</title><rect x="980.2" y="1283.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="983.2" y="1294.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (1 samples, 0.02%)</title><rect x="980.4" y="1315.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="983.4" y="1326.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processUpdateQueue (4 samples, 0.09%)</title><rect x="980.7" y="1395.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="983.7" y="1406.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.pollFirst (1 samples, 0.02%)</title><rect x="981.5" y="1379.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="984.5" y="1390.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.elementAt (1 samples, 0.02%)</title><rect x="981.5" y="1363.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="984.5" y="1374.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.end (4 samples, 0.09%)</title><rect x="981.8" y="1395.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="984.8" y="1406.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.end (4 samples, 0.09%)</title><rect x="981.8" y="1379.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="984.8" y="1390.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (4 samples, 0.09%)</title><rect x="981.8" y="1363.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="984.8" y="1374.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (4 samples, 0.09%)</title><rect x="981.8" y="1347.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="984.8" y="1358.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (3 samples, 0.07%)</title><rect x="981.8" y="1331.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="984.8" y="1342.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (1 samples, 0.02%)</title><rect x="982.6" y="1331.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="985.6" y="1342.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processDeregisterQueue (11 samples, 0.25%)</title><rect x="982.9" y="1395.0" width="3.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="985.9" y="1406.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.next (11 samples, 0.25%)</title><rect x="982.9" y="1379.0" width="3.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="985.9" y="1390.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.nextNode (11 samples, 0.25%)</title><rect x="982.9" y="1363.0" width="3.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="985.9" y="1374.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (19 samples, 0.44%)</title><rect x="985.9" y="1443.0" width="5.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="988.9" y="1454.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (19 samples, 0.44%)</title><rect x="985.9" y="1427.0" width="5.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="988.9" y="1438.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (19 samples, 0.44%)</title><rect x="985.9" y="1411.0" width="5.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="988.9" y="1422.0"></text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (12 samples, 0.28%)</title><rect x="985.9" y="1395.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="988.9" y="1406.0"></text>
</g>
<g>
<title>.annobin_epoll_wait.c (12 samples, 0.28%)</title><rect x="985.9" y="1379.0" width="3.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="988.9" y="1390.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.18%)</title><rect x="987.0" y="1363.0" width="2.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="990.0" y="1374.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.18%)</title><rect x="987.0" y="1347.0" width="2.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="990.0" y="1358.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (5 samples, 0.12%)</title><rect x="987.8" y="1331.0" width="1.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="990.8" y="1342.0"></text>
</g>
<g>
<title>do_epoll_wait (5 samples, 0.12%)</title><rect x="987.8" y="1315.0" width="1.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="990.8" y="1326.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.02%)</title><rect x="988.0" y="1299.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="991.0" y="1310.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.02%)</title><rect x="988.0" y="1283.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="991.0" y="1294.0"></text>
</g>
<g>
<title>ep_poll (3 samples, 0.07%)</title><rect x="988.3" y="1299.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="991.3" y="1310.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (3 samples, 0.07%)</title><rect x="988.3" y="1283.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="991.3" y="1294.0"></text>
</g>
<g>
<title>ep_send_events_proc (3 samples, 0.07%)</title><rect x="988.3" y="1267.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="991.3" y="1278.0"></text>
</g>
<g>
<title>__list_add_valid (1 samples, 0.02%)</title><rect x="988.3" y="1251.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="991.3" y="1262.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (2 samples, 0.05%)</title><rect x="988.6" y="1251.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="991.6" y="1262.0"></text>
</g>
<g>
<title>sock_poll (2 samples, 0.05%)</title><rect x="988.6" y="1235.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="991.6" y="1246.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.02%)</title><rect x="988.9" y="1219.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="991.9" y="1230.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.02%)</title><rect x="988.9" y="1203.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="991.9" y="1214.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (3 samples, 0.07%)</title><rect x="989.1" y="1395.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="992.1" y="1406.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (1 samples, 0.02%)</title><rect x="989.4" y="1379.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="992.4" y="1390.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.drain (1 samples, 0.02%)</title><rect x="989.4" y="1363.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="992.4" y="1374.0"></text>
</g>
<g>
<title>__libc_read (1 samples, 0.02%)</title><rect x="989.4" y="1347.0" width="0.3" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="992.4" y="1358.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (1 samples, 0.02%)</title><rect x="989.7" y="1379.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="992.7" y="1390.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectionKeyImpl.translateAndUpdateReadyOps (1 samples, 0.02%)</title><rect x="989.7" y="1363.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="992.7" y="1374.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.translateAndUpdateReadyOps (1 samples, 0.02%)</title><rect x="989.7" y="1347.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="992.7" y="1358.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.translateReadyOps (1 samples, 0.02%)</title><rect x="989.7" y="1331.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="992.7" y="1342.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processUpdateQueue (3 samples, 0.07%)</title><rect x="989.9" y="1395.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="992.9" y="1406.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="990.5" y="1379.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="993.5" y="1390.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="990.5" y="1363.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="993.5" y="1374.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="990.5" y="1347.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="993.5" y="1358.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processDeregisterQueue (1 samples, 0.02%)</title><rect x="990.8" y="1395.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="993.8" y="1406.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.next (1 samples, 0.02%)</title><rect x="990.8" y="1379.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="993.8" y="1390.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.nextNode (1 samples, 0.02%)</title><rect x="990.8" y="1363.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="993.8" y="1374.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (3 samples, 0.07%)</title><rect x="991.0" y="1443.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="994.0" y="1454.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (3 samples, 0.07%)</title><rect x="991.0" y="1427.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="994.0" y="1438.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (1 samples, 0.02%)</title><rect x="991.0" y="1411.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="994.0" y="1422.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.&lt;init&gt; (1 samples, 0.02%)</title><rect x="991.0" y="1395.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="994.0" y="1406.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.&lt;init&gt; (1 samples, 0.02%)</title><rect x="991.0" y="1379.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="994.0" y="1390.0"></text>
</g>
<g>
<title>java/util/HashMap.keySet (2 samples, 0.05%)</title><rect x="991.3" y="1411.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="994.3" y="1422.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (635 samples, 14.61%)</title><rect x="991.8" y="1459.0" width="172.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="994.8" y="1470.0">one/nio/server/Selecto..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.hasNext (1 samples, 0.02%)</title><rect x="992.7" y="1443.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="995.7" y="1454.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (4 samples, 0.09%)</title><rect x="992.9" y="1443.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="995.9" y="1454.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (4 samples, 0.09%)</title><rect x="992.9" y="1427.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="995.9" y="1438.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (2 samples, 0.05%)</title><rect x="993.5" y="1411.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="996.5" y="1422.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.isOpen (1 samples, 0.02%)</title><rect x="994.0" y="1443.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="997.0" y="1454.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (108 samples, 2.48%)</title><rect x="994.3" y="1443.0" width="29.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="997.3" y="1454.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (6 samples, 0.14%)</title><rect x="995.1" y="1427.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="998.1" y="1438.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (5 samples, 0.12%)</title><rect x="995.4" y="1411.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="998.4" y="1422.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (99 samples, 2.28%)</title><rect x="996.7" y="1427.0" width="26.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="999.7" y="1438.0">o..</text>
</g>
<g>
<title>.annobin_epoll_wait.c (82 samples, 1.89%)</title><rect x="998.9" y="1411.0" width="22.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1001.9" y="1422.0">...</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (72 samples, 1.66%)</title><rect x="1001.6" y="1395.0" width="19.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1004.6" y="1406.0"></text>
</g>
<g>
<title>do_syscall_64 (72 samples, 1.66%)</title><rect x="1001.6" y="1379.0" width="19.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1004.6" y="1390.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (67 samples, 1.54%)</title><rect x="1003.0" y="1363.0" width="18.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1006.0" y="1374.0"></text>
</g>
<g>
<title>do_epoll_wait (67 samples, 1.54%)</title><rect x="1003.0" y="1347.0" width="18.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1006.0" y="1358.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.07%)</title><rect x="1003.0" y="1331.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1006.0" y="1342.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.02%)</title><rect x="1003.5" y="1315.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1006.5" y="1326.0"></text>
</g>
<g>
<title>ep_poll (63 samples, 1.45%)</title><rect x="1003.8" y="1331.0" width="17.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1006.8" y="1342.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (31 samples, 0.71%)</title><rect x="1005.4" y="1315.0" width="8.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1008.4" y="1326.0"></text>
</g>
<g>
<title>ep_send_events_proc (24 samples, 0.55%)</title><rect x="1006.8" y="1299.0" width="6.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1009.8" y="1310.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (23 samples, 0.53%)</title><rect x="1007.0" y="1283.0" width="6.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1010.0" y="1294.0"></text>
</g>
<g>
<title>sock_poll (18 samples, 0.41%)</title><rect x="1008.4" y="1267.0" width="4.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1011.4" y="1278.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1011.1" y="1251.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1014.1" y="1262.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1011.1" y="1235.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1014.1" y="1246.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="1011.1" y="1219.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1014.1" y="1230.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1011.1" y="1203.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1014.1" y="1214.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="1011.1" y="1187.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1014.1" y="1198.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="1011.1" y="1171.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1014.1" y="1182.0"></text>
</g>
<g>
<title>tcp_poll (7 samples, 0.16%)</title><rect x="1011.4" y="1251.0" width="1.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1014.4" y="1262.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.02%)</title><rect x="1013.0" y="1235.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1016.0" y="1246.0"></text>
</g>
<g>
<title>mutex_lock (2 samples, 0.05%)</title><rect x="1013.3" y="1299.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1016.3" y="1310.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (26 samples, 0.60%)</title><rect x="1013.8" y="1315.0" width="7.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1016.8" y="1326.0"></text>
</g>
<g>
<title>schedule (20 samples, 0.46%)</title><rect x="1015.5" y="1299.0" width="5.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1018.5" y="1310.0"></text>
</g>
<g>
<title>__sched_text_start (19 samples, 0.44%)</title><rect x="1015.7" y="1283.0" width="5.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1018.7" y="1294.0"></text>
</g>
<g>
<title>finish_task_switch (16 samples, 0.37%)</title><rect x="1016.5" y="1267.0" width="4.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1019.5" y="1278.0"></text>
</g>
<g>
<title>apic_timer_interrupt (2 samples, 0.05%)</title><rect x="1020.3" y="1251.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1023.3" y="1262.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (2 samples, 0.05%)</title><rect x="1020.3" y="1235.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1023.3" y="1246.0"></text>
</g>
<g>
<title>irq_exit (2 samples, 0.05%)</title><rect x="1020.3" y="1219.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1023.3" y="1230.0"></text>
</g>
<g>
<title>__softirqentry_text_start (2 samples, 0.05%)</title><rect x="1020.3" y="1203.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1023.3" y="1214.0"></text>
</g>
<g>
<title>rcu_core (1 samples, 0.02%)</title><rect x="1020.3" y="1187.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1023.3" y="1198.0"></text>
</g>
<g>
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="1020.6" y="1187.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1023.6" y="1198.0"></text>
</g>
<g>
<title>fput_many (1 samples, 0.02%)</title><rect x="1020.9" y="1331.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1023.9" y="1342.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (2 samples, 0.05%)</title><rect x="1021.2" y="1411.0" width="0.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1024.2" y="1422.0"></text>
</g>
<g>
<title>__GI___clock_gettime (4 samples, 0.09%)</title><rect x="1021.7" y="1411.0" width="1.1" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="1024.7" y="1422.0"></text>
</g>
<g>
<title>[vdso] (3 samples, 0.07%)</title><rect x="1022.0" y="1395.0" width="0.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1025.0" y="1406.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.02%)</title><rect x="1022.8" y="1411.0" width="0.3" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1025.8" y="1422.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (2 samples, 0.05%)</title><rect x="1023.1" y="1411.0" width="0.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1026.1" y="1422.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (518 samples, 11.92%)</title><rect x="1023.6" y="1443.0" width="140.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1026.6" y="1454.0">one/nio/net/Sessio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (517 samples, 11.89%)</title><rect x="1023.9" y="1427.0" width="140.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1026.9" y="1438.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleSocketClosed (3 samples, 0.07%)</title><rect x="1024.1" y="1411.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1027.1" y="1422.0"></text>
</g>
<g>
<title>one/nio/net/Session.scheduleClose (3 samples, 0.07%)</title><rect x="1024.1" y="1395.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1027.1" y="1406.0"></text>
</g>
<g>
<title>one/nio/net/Session.close (3 samples, 0.07%)</title><rect x="1024.1" y="1379.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1027.1" y="1390.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.unregister (1 samples, 0.02%)</title><rect x="1024.1" y="1363.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1027.1" y="1374.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.disable (1 samples, 0.02%)</title><rect x="1024.1" y="1347.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1027.1" y="1358.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollCtl (1 samples, 0.02%)</title><rect x="1024.1" y="1331.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1027.1" y="1342.0"></text>
</g>
<g>
<title>__GI_epoll_ctl (1 samples, 0.02%)</title><rect x="1024.1" y="1315.0" width="0.3" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="1027.1" y="1326.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.close (2 samples, 0.05%)</title><rect x="1024.4" y="1363.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1027.4" y="1374.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.05%)</title><rect x="1024.4" y="1347.0" width="0.6" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="1027.4" y="1358.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.05%)</title><rect x="1024.4" y="1331.0" width="0.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1027.4" y="1342.0"></text>
</g>
<g>
<title>__GI_shutdown (2 samples, 0.05%)</title><rect x="1024.4" y="1315.0" width="0.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1027.4" y="1326.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.05%)</title><rect x="1024.4" y="1299.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1027.4" y="1310.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.05%)</title><rect x="1024.4" y="1283.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1027.4" y="1294.0"></text>
</g>
<g>
<title>__x64_sys_shutdown (2 samples, 0.05%)</title><rect x="1024.4" y="1267.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1027.4" y="1278.0"></text>
</g>
<g>
<title>__sys_shutdown (2 samples, 0.05%)</title><rect x="1024.4" y="1251.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1027.4" y="1262.0"></text>
</g>
<g>
<title>inet_shutdown (2 samples, 0.05%)</title><rect x="1024.4" y="1235.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1027.4" y="1246.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (2 samples, 0.05%)</title><rect x="1024.4" y="1219.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1027.4" y="1230.0"></text>
</g>
<g>
<title>tcp_write_xmit (2 samples, 0.05%)</title><rect x="1024.4" y="1203.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1027.4" y="1214.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (2 samples, 0.05%)</title><rect x="1024.4" y="1187.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1027.4" y="1198.0"></text>
</g>
<g>
<title>__ip_queue_xmit (1 samples, 0.02%)</title><rect x="1024.7" y="1171.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1027.7" y="1182.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.02%)</title><rect x="1024.7" y="1155.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1027.7" y="1166.0"></text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="1024.7" y="1139.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1027.7" y="1150.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="1024.7" y="1123.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1027.7" y="1134.0"></text>
</g>
<g>
<title>do_softirq.part.0 (1 samples, 0.02%)</title><rect x="1024.7" y="1107.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1027.7" y="1118.0"></text>
</g>
<g>
<title>do_softirq_own_stack (1 samples, 0.02%)</title><rect x="1024.7" y="1091.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1027.7" y="1102.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1024.7" y="1075.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1027.7" y="1086.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1024.7" y="1059.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1027.7" y="1070.0"></text>
</g>
<g>
<title>process_backlog (1 samples, 0.02%)</title><rect x="1024.7" y="1043.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1027.7" y="1054.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (1 samples, 0.02%)</title><rect x="1024.7" y="1027.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1027.7" y="1038.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1024.7" y="1011.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1027.7" y="1022.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="1024.7" y="995.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1027.7" y="1006.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="1024.7" y="979.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1027.7" y="990.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (1 samples, 0.02%)</title><rect x="1024.7" y="963.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1027.7" y="974.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="1024.7" y="947.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1027.7" y="958.0"></text>
</g>
<g>
<title>__sk_destruct (1 samples, 0.02%)</title><rect x="1024.7" y="931.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1027.7" y="942.0"></text>
</g>
<g>
<title>security_sk_free (1 samples, 0.02%)</title><rect x="1024.7" y="915.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1027.7" y="926.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.02%)</title><rect x="1024.7" y="899.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1027.7" y="910.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (232 samples, 5.34%)</title><rect x="1025.0" y="1411.0" width="62.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1028.0" y="1422.0">one/ni..</text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="1027.7" y="1395.0" width="0.2" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1030.7" y="1406.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (192 samples, 4.42%)</title><rect x="1027.9" y="1395.0" width="52.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1030.9" y="1406.0">one/n..</text>
</g>
<g>
<title>java/util/LinkedList.addLast (3 samples, 0.07%)</title><rect x="1028.8" y="1379.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1031.8" y="1390.0"></text>
</g>
<g>
<title>java/util/LinkedList.size (1 samples, 0.02%)</title><rect x="1029.6" y="1379.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1032.6" y="1390.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (185 samples, 4.26%)</title><rect x="1029.8" y="1379.0" width="50.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1032.8" y="1390.0">one/n..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (176 samples, 4.05%)</title><rect x="1029.8" y="1363.0" width="47.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1032.8" y="1374.0">Requ..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (12 samples, 0.28%)</title><rect x="1029.8" y="1347.0" width="3.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1032.8" y="1358.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.09%)</title><rect x="1030.1" y="1331.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1033.1" y="1342.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (4 samples, 0.09%)</title><rect x="1030.1" y="1315.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1033.1" y="1326.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.07%)</title><rect x="1030.4" y="1299.0" width="0.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1033.4" y="1310.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1030.9" y="1283.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1033.9" y="1294.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1030.9" y="1267.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1033.9" y="1278.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="1030.9" y="1251.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1033.9" y="1262.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1030.9" y="1235.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1033.9" y="1246.0"></text>
</g>
<g>
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="1030.9" y="1219.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1033.9" y="1230.0"></text>
</g>
<g>
<title>call_timer_fn (1 samples, 0.02%)</title><rect x="1030.9" y="1203.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1033.9" y="1214.0"></text>
</g>
<g>
<title>tcp_delack_timer (1 samples, 0.02%)</title><rect x="1030.9" y="1187.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1033.9" y="1198.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="1030.9" y="1171.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1033.9" y="1182.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (4 samples, 0.09%)</title><rect x="1031.2" y="1331.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1034.2" y="1342.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.05%)</title><rect x="1031.7" y="1315.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1034.7" y="1326.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.02%)</title><rect x="1032.0" y="1299.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1035.0" y="1310.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (3 samples, 0.07%)</title><rect x="1032.3" y="1331.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1035.3" y="1342.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.07%)</title><rect x="1032.3" y="1315.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1035.3" y="1326.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.07%)</title><rect x="1032.3" y="1299.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1035.3" y="1310.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.05%)</title><rect x="1032.6" y="1283.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1035.6" y="1294.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.entity (164 samples, 3.77%)</title><rect x="1033.1" y="1347.0" width="44.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1036.1" y="1358.0">ru/m..</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (9 samples, 0.21%)</title><rect x="1033.6" y="1331.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1036.6" y="1342.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.02%)</title><rect x="1033.6" y="1315.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1036.6" y="1326.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (6 samples, 0.14%)</title><rect x="1033.9" y="1315.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1036.9" y="1326.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.02%)</title><rect x="1033.9" y="1299.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1036.9" y="1310.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (5 samples, 0.12%)</title><rect x="1034.2" y="1299.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1037.2" y="1310.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.02%)</title><rect x="1035.3" y="1283.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1038.3" y="1294.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.02%)</title><rect x="1035.3" y="1267.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1038.3" y="1278.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (1 samples, 0.02%)</title><rect x="1035.3" y="1251.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1038.3" y="1262.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.05%)</title><rect x="1035.5" y="1315.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1038.5" y="1326.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.05%)</title><rect x="1035.5" y="1299.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1038.5" y="1310.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.02%)</title><rect x="1035.8" y="1283.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1038.8" y="1294.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.executeAsync (102 samples, 2.35%)</title><rect x="1036.1" y="1331.0" width="27.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1039.1" y="1342.0">r..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (102 samples, 2.35%)</title><rect x="1036.1" y="1315.0" width="27.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1039.1" y="1326.0">j..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (101 samples, 2.32%)</title><rect x="1036.4" y="1299.0" width="27.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1039.4" y="1310.0">j..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (93 samples, 2.14%)</title><rect x="1036.4" y="1283.0" width="25.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1039.4" y="1294.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (93 samples, 2.14%)</title><rect x="1036.4" y="1267.0" width="25.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1039.4" y="1278.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (93 samples, 2.14%)</title><rect x="1036.4" y="1251.0" width="25.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1039.4" y="1262.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (93 samples, 2.14%)</title><rect x="1036.4" y="1235.0" width="25.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1039.4" y="1246.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (93 samples, 2.14%)</title><rect x="1036.4" y="1219.0" width="25.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1039.4" y="1230.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (93 samples, 2.14%)</title><rect x="1036.4" y="1203.0" width="25.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1039.4" y="1214.0">j..</text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.229] (2 samples, 0.05%)</title><rect x="1036.6" y="1187.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1039.6" y="1198.0"></text>
</g>
<g>
<title>Unsafe_Unpark (12 samples, 0.28%)</title><rect x="1037.2" y="1187.0" width="3.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1040.2" y="1198.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.229] (1 samples, 0.02%)</title><rect x="1037.4" y="1171.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1040.4" y="1182.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (5 samples, 0.12%)</title><rect x="1037.7" y="1171.0" width="1.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1040.7" y="1182.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (2 samples, 0.05%)</title><rect x="1039.1" y="1171.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1042.1" y="1182.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_lock (2 samples, 0.05%)</title><rect x="1039.6" y="1171.0" width="0.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1042.6" y="1182.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.02%)</title><rect x="1040.2" y="1171.0" width="0.2" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1043.2" y="1182.0"></text>
</g>
<g>
<title>__pthread_cond_signal (76 samples, 1.75%)</title><rect x="1040.4" y="1187.0" width="20.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1043.4" y="1198.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (65 samples, 1.50%)</title><rect x="1043.4" y="1171.0" width="17.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1046.4" y="1182.0"></text>
</g>
<g>
<title>do_syscall_64 (65 samples, 1.50%)</title><rect x="1043.4" y="1155.0" width="17.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1046.4" y="1166.0"></text>
</g>
<g>
<title>__x64_sys_futex (57 samples, 1.31%)</title><rect x="1045.6" y="1139.0" width="15.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1048.6" y="1150.0"></text>
</g>
<g>
<title>do_futex (57 samples, 1.31%)</title><rect x="1045.6" y="1123.0" width="15.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1048.6" y="1134.0"></text>
</g>
<g>
<title>futex_wake (56 samples, 1.29%)</title><rect x="1045.9" y="1107.0" width="15.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1048.9" y="1118.0"></text>
</g>
<g>
<title>get_futex_key (2 samples, 0.05%)</title><rect x="1048.0" y="1091.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1051.0" y="1102.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.0 (1 samples, 0.02%)</title><rect x="1048.3" y="1075.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1051.3" y="1086.0"></text>
</g>
<g>
<title>mark_wake_futex (3 samples, 0.07%)</title><rect x="1048.6" y="1091.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1051.6" y="1102.0"></text>
</g>
<g>
<title>__unqueue_futex (1 samples, 0.02%)</title><rect x="1049.1" y="1075.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1052.1" y="1086.0"></text>
</g>
<g>
<title>wake_q_add_safe (1 samples, 0.02%)</title><rect x="1049.4" y="1091.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1052.4" y="1102.0"></text>
</g>
<g>
<title>wake_up_q (42 samples, 0.97%)</title><rect x="1049.7" y="1091.0" width="11.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1052.7" y="1102.0"></text>
</g>
<g>
<title>try_to_wake_up (41 samples, 0.94%)</title><rect x="1049.9" y="1075.0" width="11.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1052.9" y="1086.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (41 samples, 0.94%)</title><rect x="1049.9" y="1059.0" width="11.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1052.9" y="1070.0"></text>
</g>
<g>
<title>_init (2 samples, 0.05%)</title><rect x="1061.1" y="1187.0" width="0.5" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="1064.1" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.02%)</title><rect x="1061.6" y="1283.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1064.6" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.02%)</title><rect x="1061.6" y="1267.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1064.6" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (7 samples, 0.16%)</title><rect x="1061.9" y="1283.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1064.9" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (7 samples, 0.16%)</title><rect x="1061.9" y="1267.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1064.9" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (5 samples, 0.12%)</title><rect x="1062.1" y="1251.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1065.1" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.setPrevRelaxed (2 samples, 0.05%)</title><rect x="1062.1" y="1235.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1065.1" y="1246.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (2 samples, 0.05%)</title><rect x="1062.1" y="1219.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1065.1" y="1230.0"></text>
</g>
<g>
<title>java/lang/invoke/VarForm.getMemberName (1 samples, 0.02%)</title><rect x="1062.1" y="1203.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1065.1" y="1214.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.set (1 samples, 0.02%)</title><rect x="1062.4" y="1203.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1065.4" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetTail (2 samples, 0.05%)</title><rect x="1062.7" y="1235.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1065.7" y="1246.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (2 samples, 0.05%)</title><rect x="1062.7" y="1219.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1065.7" y="1230.0"></text>
</g>
<g>
<title>java/lang/invoke/VarForm.getMemberName (1 samples, 0.02%)</title><rect x="1062.7" y="1203.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1065.7" y="1214.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.02%)</title><rect x="1063.0" y="1203.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1066.0" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.02%)</title><rect x="1063.2" y="1235.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1066.2" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (1 samples, 0.02%)</title><rect x="1063.5" y="1251.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1066.5" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (1 samples, 0.02%)</title><rect x="1063.5" y="1235.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1066.5" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.setExclusiveOwnerThread (1 samples, 0.02%)</title><rect x="1063.5" y="1219.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1066.5" y="1230.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/ConsistentHashImpl.all (27 samples, 0.62%)</title><rect x="1063.8" y="1331.0" width="7.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1066.8" y="1342.0"></text>
</g>
<g>
<title>java/util/Set.copyOf (27 samples, 0.62%)</title><rect x="1063.8" y="1315.0" width="7.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1066.8" y="1326.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (3 samples, 0.07%)</title><rect x="1064.0" y="1299.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1067.0" y="1310.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.hasNext (1 samples, 0.02%)</title><rect x="1064.0" y="1283.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1067.0" y="1294.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.next (1 samples, 0.02%)</title><rect x="1064.3" y="1283.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1067.3" y="1294.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.nextNode (1 samples, 0.02%)</title><rect x="1064.3" y="1267.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1067.3" y="1278.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (1 samples, 0.02%)</title><rect x="1064.6" y="1283.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1067.6" y="1294.0"></text>
</g>
<g>
<title>java/util/HashMap.keySet (1 samples, 0.02%)</title><rect x="1064.6" y="1267.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1067.6" y="1278.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (18 samples, 0.41%)</title><rect x="1064.9" y="1299.0" width="4.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1067.9" y="1310.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (18 samples, 0.41%)</title><rect x="1064.9" y="1283.0" width="4.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1067.9" y="1294.0"></text>
</g>
<g>
<title>java/util/HashMap.afterNodeInsertion (1 samples, 0.02%)</title><rect x="1065.1" y="1267.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1068.1" y="1278.0"></text>
</g>
<g>
<title>java/util/HashSet.add (11 samples, 0.25%)</title><rect x="1065.4" y="1267.0" width="3.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1068.4" y="1278.0"></text>
</g>
<g>
<title>java/util/HashMap.put (9 samples, 0.21%)</title><rect x="1065.9" y="1251.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1068.9" y="1262.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (9 samples, 0.21%)</title><rect x="1065.9" y="1235.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1068.9" y="1246.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.02%)</title><rect x="1066.8" y="1219.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1069.8" y="1230.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (3 samples, 0.07%)</title><rect x="1067.0" y="1219.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1070.0" y="1230.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (2 samples, 0.05%)</title><rect x="1067.8" y="1219.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1070.8" y="1230.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeyIterator.next (2 samples, 0.05%)</title><rect x="1068.4" y="1267.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1071.4" y="1278.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.nextEntry (1 samples, 0.02%)</title><rect x="1068.7" y="1251.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1071.7" y="1262.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (1 samples, 0.02%)</title><rect x="1068.7" y="1235.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1071.7" y="1246.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (3 samples, 0.07%)</title><rect x="1068.9" y="1267.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1071.9" y="1278.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (3 samples, 0.07%)</title><rect x="1068.9" y="1251.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1071.9" y="1262.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (1 samples, 0.02%)</title><rect x="1069.5" y="1235.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1072.5" y="1246.0"></text>
</g>
<g>
<title>java/util/TreeMap.getFirstEntry (1 samples, 0.02%)</title><rect x="1069.5" y="1219.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1072.5" y="1230.0"></text>
</g>
<g>
<title>java/util/Set.of (5 samples, 0.12%)</title><rect x="1069.7" y="1299.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1072.7" y="1310.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$SetN.&lt;init&gt; (5 samples, 0.12%)</title><rect x="1069.7" y="1283.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1072.7" y="1294.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$SetN.probe (2 samples, 0.05%)</title><rect x="1070.6" y="1267.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1073.6" y="1278.0"></text>
</g>
<g>
<title>java/lang/Math.floorMod (2 samples, 0.05%)</title><rect x="1070.6" y="1251.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1073.6" y="1262.0"></text>
</g>
<g>
<title>java/lang/Math.floorDiv (1 samples, 0.02%)</title><rect x="1070.8" y="1235.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1073.8" y="1246.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/RF.from (24 samples, 0.55%)</title><rect x="1071.1" y="1331.0" width="6.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1074.1" y="1342.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.on (1 samples, 0.02%)</title><rect x="1071.6" y="1315.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1074.6" y="1326.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.on (1 samples, 0.02%)</title><rect x="1071.6" y="1299.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1074.6" y="1310.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1071.6" y="1283.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1074.6" y="1294.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1071.6" y="1267.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1074.6" y="1278.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.02%)</title><rect x="1071.6" y="1251.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1074.6" y="1262.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splitToList (18 samples, 0.41%)</title><rect x="1071.9" y="1315.0" width="4.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1074.9" y="1326.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.hasNext (12 samples, 0.28%)</title><rect x="1071.9" y="1299.0" width="3.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1074.9" y="1310.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.tryToComputeNext (10 samples, 0.23%)</title><rect x="1072.5" y="1283.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1075.5" y="1294.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (5 samples, 0.12%)</title><rect x="1073.3" y="1267.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1076.3" y="1278.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (5 samples, 0.12%)</title><rect x="1073.3" y="1251.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1076.3" y="1262.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1$1.separatorStart (1 samples, 0.02%)</title><rect x="1074.1" y="1235.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1077.1" y="1246.0"></text>
</g>
<g>
<title>com/google/common/base/CharMatcher.indexIn (1 samples, 0.02%)</title><rect x="1074.1" y="1219.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1077.1" y="1230.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.02%)</title><rect x="1074.1" y="1203.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1077.1" y="1214.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.02%)</title><rect x="1074.4" y="1235.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1077.4" y="1246.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (1 samples, 0.02%)</title><rect x="1074.4" y="1219.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1077.4" y="1230.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.05%)</title><rect x="1074.6" y="1267.0" width="0.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1077.6" y="1278.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.next (1 samples, 0.02%)</title><rect x="1075.2" y="1299.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1078.2" y="1310.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.hasNext (1 samples, 0.02%)</title><rect x="1075.2" y="1283.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1078.2" y="1294.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.tryToComputeNext (1 samples, 0.02%)</title><rect x="1075.2" y="1267.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1078.2" y="1278.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splittingIterator (1 samples, 0.02%)</title><rect x="1075.4" y="1299.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1078.4" y="1310.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (1 samples, 0.02%)</title><rect x="1075.4" y="1283.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1078.4" y="1294.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (1 samples, 0.02%)</title><rect x="1075.4" y="1267.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1078.4" y="1278.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1$1.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1075.4" y="1251.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1078.4" y="1262.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1075.4" y="1235.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1078.4" y="1246.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (4 samples, 0.09%)</title><rect x="1075.7" y="1299.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1078.7" y="1310.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (4 samples, 0.09%)</title><rect x="1075.7" y="1283.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1078.7" y="1294.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (3 samples, 0.07%)</title><rect x="1076.8" y="1315.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1079.8" y="1326.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (3 samples, 0.07%)</title><rect x="1076.8" y="1299.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1079.8" y="1310.0"></text>
</g>
<g>
<title>java/lang/Character.digit (1 samples, 0.02%)</title><rect x="1076.8" y="1283.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1079.8" y="1294.0"></text>
</g>
<g>
<title>java/lang/Character.digit (1 samples, 0.02%)</title><rect x="1076.8" y="1267.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1079.8" y="1278.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.05%)</title><rect x="1077.1" y="1283.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1080.1" y="1294.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (2 samples, 0.05%)</title><rect x="1077.1" y="1267.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1080.1" y="1278.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.findHandlerByHost (2 samples, 0.05%)</title><rect x="1077.6" y="1363.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1080.6" y="1374.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (3 samples, 0.07%)</title><rect x="1078.2" y="1363.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1081.2" y="1374.0"></text>
</g>
<g>
<title>java/util/HashMap.get (3 samples, 0.07%)</title><rect x="1078.2" y="1347.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1081.2" y="1358.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.05%)</title><rect x="1078.4" y="1331.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1081.4" y="1342.0"></text>
</g>
<g>
<title>java/lang/String.equals (2 samples, 0.05%)</title><rect x="1078.4" y="1315.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1081.4" y="1326.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (4 samples, 0.09%)</title><rect x="1079.0" y="1363.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1082.0" y="1374.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.09%)</title><rect x="1079.0" y="1347.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1082.0" y="1358.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.09%)</title><rect x="1079.0" y="1331.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1082.0" y="1342.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 0.09%)</title><rect x="1079.0" y="1315.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1082.0" y="1326.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (2 samples, 0.05%)</title><rect x="1079.2" y="1299.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1082.2" y="1310.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.02%)</title><rect x="1079.8" y="1299.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1082.8" y="1310.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (19 samples, 0.44%)</title><rect x="1080.1" y="1395.0" width="5.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1083.1" y="1406.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (11 samples, 0.25%)</title><rect x="1080.3" y="1379.0" width="3.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1083.3" y="1390.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (5 samples, 0.12%)</title><rect x="1081.7" y="1363.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1084.7" y="1374.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1 samples, 0.02%)</title><rect x="1083.0" y="1363.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1086.0" y="1374.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.09%)</title><rect x="1083.3" y="1379.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1086.3" y="1390.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.09%)</title><rect x="1083.3" y="1363.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1086.3" y="1374.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.05%)</title><rect x="1083.9" y="1347.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1086.9" y="1358.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.05%)</title><rect x="1083.9" y="1331.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1086.9" y="1342.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1 samples, 0.02%)</title><rect x="1084.1" y="1315.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1087.1" y="1326.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (3 samples, 0.07%)</title><rect x="1084.4" y="1379.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1087.4" y="1390.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (4 samples, 0.09%)</title><rect x="1085.2" y="1395.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1088.2" y="1406.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (3 samples, 0.07%)</title><rect x="1085.5" y="1379.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1088.5" y="1390.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (2 samples, 0.05%)</title><rect x="1085.8" y="1363.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1088.8" y="1374.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.05%)</title><rect x="1085.8" y="1347.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1088.8" y="1358.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (5 samples, 0.12%)</title><rect x="1086.3" y="1395.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1089.3" y="1406.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.05%)</title><rect x="1086.3" y="1379.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1089.3" y="1390.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.05%)</title><rect x="1086.3" y="1363.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1089.3" y="1374.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.02%)</title><rect x="1086.6" y="1347.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1089.6" y="1358.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.02%)</title><rect x="1086.6" y="1331.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1089.6" y="1342.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.07%)</title><rect x="1086.8" y="1379.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1089.8" y="1390.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.07%)</title><rect x="1086.8" y="1363.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1089.8" y="1374.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1087.1" y="1347.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1090.1" y="1358.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1087.1" y="1331.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1090.1" y="1342.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.02%)</title><rect x="1087.4" y="1347.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1090.4" y="1358.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.02%)</title><rect x="1087.7" y="1395.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1090.7" y="1406.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.02%)</title><rect x="1087.7" y="1379.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1090.7" y="1390.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1087.7" y="1363.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1090.7" y="1374.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1087.7" y="1347.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1090.7" y="1358.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1 samples, 0.02%)</title><rect x="1087.7" y="1331.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1090.7" y="1342.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (281 samples, 6.46%)</title><rect x="1087.9" y="1411.0" width="76.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1090.9" y="1422.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (281 samples, 6.46%)</title><rect x="1087.9" y="1395.0" width="76.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1090.9" y="1406.0">one/nio/..</text>
</g>
<g>
<title>[unknown] (19 samples, 0.44%)</title><rect x="1088.7" y="1379.0" width="5.2" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1091.7" y="1390.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.44%)</title><rect x="1088.7" y="1363.0" width="5.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1091.7" y="1374.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (11 samples, 0.25%)</title><rect x="1088.7" y="1347.0" width="3.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1091.7" y="1358.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.05%)</title><rect x="1089.0" y="1331.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1092.0" y="1342.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (4 samples, 0.09%)</title><rect x="1089.6" y="1331.0" width="1.0" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1092.6" y="1342.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (4 samples, 0.09%)</title><rect x="1090.6" y="1331.0" width="1.1" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="1093.6" y="1342.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.02%)</title><rect x="1090.9" y="1315.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1093.9" y="1326.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.02%)</title><rect x="1091.2" y="1315.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1094.2" y="1326.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (1 samples, 0.02%)</title><rect x="1091.5" y="1315.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1094.5" y="1326.0"></text>
</g>
<g>
<title>__libc_recv (1 samples, 0.02%)</title><rect x="1091.7" y="1347.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1094.7" y="1358.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (3 samples, 0.07%)</title><rect x="1092.0" y="1347.0" width="0.8" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="1095.0" y="1358.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (4 samples, 0.09%)</title><rect x="1092.8" y="1347.0" width="1.1" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1095.8" y="1358.0"></text>
</g>
<g>
<title>__libc_recv (259 samples, 5.96%)</title><rect x="1093.9" y="1379.0" width="70.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1096.9" y="1390.0">__libc_r..</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="1099.6" y="1363.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1102.6" y="1374.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (237 samples, 5.45%)</title><rect x="1099.9" y="1363.0" width="64.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1102.9" y="1374.0">entry_S..</text>
</g>
<g>
<title>do_syscall_64 (237 samples, 5.45%)</title><rect x="1099.9" y="1347.0" width="64.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1102.9" y="1358.0">do_sysc..</text>
</g>
<g>
<title>__x64_sys_recvfrom (227 samples, 5.22%)</title><rect x="1102.3" y="1331.0" width="61.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1105.3" y="1342.0">__x64_..</text>
</g>
<g>
<title>__sys_recvfrom (225 samples, 5.18%)</title><rect x="1102.9" y="1315.0" width="61.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1105.9" y="1326.0">__sys_..</text>
</g>
<g>
<title>import_single_range (2 samples, 0.05%)</title><rect x="1103.1" y="1299.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1106.1" y="1310.0"></text>
</g>
<g>
<title>inet_recvmsg (204 samples, 4.69%)</title><rect x="1103.7" y="1299.0" width="55.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1106.7" y="1310.0">inet_..</text>
</g>
<g>
<title>tcp_recvmsg (204 samples, 4.69%)</title><rect x="1103.7" y="1283.0" width="55.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1106.7" y="1294.0">tcp_r..</text>
</g>
<g>
<title>__kfree_skb (13 samples, 0.30%)</title><rect x="1107.5" y="1267.0" width="3.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1110.5" y="1278.0"></text>
</g>
<g>
<title>skb_release_all (12 samples, 0.28%)</title><rect x="1107.8" y="1251.0" width="3.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1110.8" y="1262.0"></text>
</g>
<g>
<title>skb_release_head_state (10 samples, 0.23%)</title><rect x="1108.3" y="1235.0" width="2.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1111.3" y="1246.0"></text>
</g>
<g>
<title>dst_release (6 samples, 0.14%)</title><rect x="1108.6" y="1219.0" width="1.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1111.6" y="1230.0"></text>
</g>
<g>
<title>sock_rfree (3 samples, 0.07%)</title><rect x="1110.2" y="1219.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1113.2" y="1230.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="1111.0" y="1267.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1114.0" y="1278.0"></text>
</g>
<g>
<title>__tcp_send_ack.part.0 (6 samples, 0.14%)</title><rect x="1111.3" y="1267.0" width="1.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1114.3" y="1278.0"></text>
</g>
<g>
<title>__alloc_skb (6 samples, 0.14%)</title><rect x="1111.3" y="1251.0" width="1.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1114.3" y="1262.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (2 samples, 0.05%)</title><rect x="1111.3" y="1235.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1114.3" y="1246.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (2 samples, 0.05%)</title><rect x="1111.3" y="1219.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1114.3" y="1230.0"></text>
</g>
<g>
<title>__slab_alloc (1 samples, 0.02%)</title><rect x="1111.6" y="1203.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1114.6" y="1214.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (4 samples, 0.09%)</title><rect x="1111.8" y="1235.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1114.8" y="1246.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (134 samples, 3.08%)</title><rect x="1112.9" y="1267.0" width="36.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1115.9" y="1278.0">__t..</text>
</g>
<g>
<title>__ip_queue_xmit (128 samples, 2.94%)</title><rect x="1113.7" y="1251.0" width="34.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1116.7" y="1262.0">__..</text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.02%)</title><rect x="1113.7" y="1235.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1116.7" y="1246.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.02%)</title><rect x="1113.7" y="1219.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1116.7" y="1230.0"></text>
</g>
<g>
<title>ip_local_out (30 samples, 0.69%)</title><rect x="1114.0" y="1235.0" width="8.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1117.0" y="1246.0"></text>
</g>
<g>
<title>__ip_local_out (30 samples, 0.69%)</title><rect x="1114.0" y="1219.0" width="8.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1117.0" y="1230.0"></text>
</g>
<g>
<title>nf_hook_slow (30 samples, 0.69%)</title><rect x="1114.0" y="1203.0" width="8.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1117.0" y="1214.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (7 samples, 0.16%)</title><rect x="1114.5" y="1187.0" width="1.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1117.5" y="1198.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (6 samples, 0.14%)</title><rect x="1116.4" y="1187.0" width="1.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1119.4" y="1198.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (6 samples, 0.14%)</title><rect x="1116.4" y="1171.0" width="1.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1119.4" y="1182.0"></text>
</g>
<g>
<title>iptable_raw_hook	[iptable_raw] (2 samples, 0.05%)</title><rect x="1118.1" y="1187.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1121.1" y="1198.0"></text>
</g>
<g>
<title>ipv4_conntrack_local	[nf_conntrack] (1 samples, 0.02%)</title><rect x="1118.6" y="1187.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1121.6" y="1198.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (12 samples, 0.28%)</title><rect x="1118.9" y="1187.0" width="3.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1121.9" y="1198.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get	[nf_conntrack] (3 samples, 0.07%)</title><rect x="1119.2" y="1171.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1122.2" y="1182.0"></text>
</g>
<g>
<title>get_l4proto	[nf_conntrack] (2 samples, 0.05%)</title><rect x="1120.0" y="1171.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1123.0" y="1182.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet	[nf_conntrack] (6 samples, 0.14%)</title><rect x="1120.5" y="1171.0" width="1.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1123.5" y="1182.0"></text>
</g>
<g>
<title>nf_ct_seq_offset	[nf_conntrack] (2 samples, 0.05%)</title><rect x="1121.6" y="1155.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1124.6" y="1166.0"></text>
</g>
<g>
<title>ip_output (97 samples, 2.23%)</title><rect x="1122.1" y="1235.0" width="26.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1125.1" y="1246.0">i..</text>
</g>
<g>
<title>ip_finish_output2 (86 samples, 1.98%)</title><rect x="1122.4" y="1219.0" width="23.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1125.4" y="1230.0">i..</text>
</g>
<g>
<title>__dev_queue_xmit (9 samples, 0.21%)</title><rect x="1122.7" y="1203.0" width="2.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1125.7" y="1214.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (7 samples, 0.16%)</title><rect x="1123.0" y="1187.0" width="1.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1126.0" y="1198.0"></text>
</g>
<g>
<title>loopback_xmit (7 samples, 0.16%)</title><rect x="1123.0" y="1171.0" width="1.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1126.0" y="1182.0"></text>
</g>
<g>
<title>__sock_wfree (3 samples, 0.07%)</title><rect x="1123.5" y="1155.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1126.5" y="1166.0"></text>
</g>
<g>
<title>netif_rx (1 samples, 0.02%)</title><rect x="1124.3" y="1155.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1127.3" y="1166.0"></text>
</g>
<g>
<title>netif_rx_internal (1 samples, 0.02%)</title><rect x="1124.3" y="1139.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1127.3" y="1150.0"></text>
</g>
<g>
<title>ktime_get_with_offset (1 samples, 0.02%)</title><rect x="1124.3" y="1123.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1127.3" y="1134.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (1 samples, 0.02%)</title><rect x="1124.6" y="1155.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1127.6" y="1166.0"></text>
</g>
<g>
<title>validate_xmit_skb (1 samples, 0.02%)</title><rect x="1124.9" y="1187.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1127.9" y="1198.0"></text>
</g>
<g>
<title>netif_skb_features (1 samples, 0.02%)</title><rect x="1124.9" y="1171.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1127.9" y="1182.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (76 samples, 1.75%)</title><rect x="1125.1" y="1203.0" width="20.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1128.1" y="1214.0"></text>
</g>
<g>
<title>do_softirq.part.0 (76 samples, 1.75%)</title><rect x="1125.1" y="1187.0" width="20.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1128.1" y="1198.0"></text>
</g>
<g>
<title>do_softirq_own_stack (75 samples, 1.73%)</title><rect x="1125.4" y="1171.0" width="20.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1128.4" y="1182.0"></text>
</g>
<g>
<title>__softirqentry_text_start (75 samples, 1.73%)</title><rect x="1125.4" y="1155.0" width="20.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1128.4" y="1166.0"></text>
</g>
<g>
<title>net_rx_action (73 samples, 1.68%)</title><rect x="1125.7" y="1139.0" width="19.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1128.7" y="1150.0"></text>
</g>
<g>
<title>process_backlog (72 samples, 1.66%)</title><rect x="1125.9" y="1123.0" width="19.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1128.9" y="1134.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (72 samples, 1.66%)</title><rect x="1125.9" y="1107.0" width="19.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1128.9" y="1118.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (2 samples, 0.05%)</title><rect x="1125.9" y="1091.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1128.9" y="1102.0"></text>
</g>
<g>
<title>ip_rcv (70 samples, 1.61%)</title><rect x="1126.5" y="1091.0" width="19.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1129.5" y="1102.0"></text>
</g>
<g>
<title>ip_local_deliver (45 samples, 1.04%)</title><rect x="1126.5" y="1075.0" width="12.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1129.5" y="1086.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (34 samples, 0.78%)</title><rect x="1126.5" y="1059.0" width="9.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1129.5" y="1070.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (33 samples, 0.76%)</title><rect x="1126.8" y="1043.0" width="8.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1129.8" y="1054.0"></text>
</g>
<g>
<title>tcp_v4_rcv (33 samples, 0.76%)</title><rect x="1126.8" y="1027.0" width="8.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1129.8" y="1038.0"></text>
</g>
<g>
<title>__inet_lookup_established (5 samples, 0.12%)</title><rect x="1127.0" y="1011.0" width="1.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1130.0" y="1022.0"></text>
</g>
<g>
<title>sock_put (1 samples, 0.02%)</title><rect x="1128.4" y="1011.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1131.4" y="1022.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (26 samples, 0.60%)</title><rect x="1128.7" y="1011.0" width="7.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1131.7" y="1022.0"></text>
</g>
<g>
<title>tcp_rcv_established (26 samples, 0.60%)</title><rect x="1128.7" y="995.0" width="7.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1131.7" y="1006.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.02%)</title><rect x="1129.5" y="979.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1132.5" y="990.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.02%)</title><rect x="1129.5" y="963.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1132.5" y="974.0"></text>
</g>
<g>
<title>tcp_ack (18 samples, 0.41%)</title><rect x="1129.7" y="979.0" width="4.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1132.7" y="990.0"></text>
</g>
<g>
<title>__kfree_skb (5 samples, 0.12%)</title><rect x="1131.6" y="963.0" width="1.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1134.6" y="974.0"></text>
</g>
<g>
<title>kfree (4 samples, 0.09%)</title><rect x="1131.6" y="947.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1134.6" y="958.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.02%)</title><rect x="1132.7" y="947.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1135.7" y="958.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (2 samples, 0.05%)</title><rect x="1133.0" y="963.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1136.0" y="974.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (2 samples, 0.05%)</title><rect x="1133.5" y="963.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1136.5" y="974.0"></text>
</g>
<g>
<title>minmax_running_min (2 samples, 0.05%)</title><rect x="1133.5" y="947.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1136.5" y="958.0"></text>
</g>
<g>
<title>minmax_subwin_update (1 samples, 0.02%)</title><rect x="1133.8" y="931.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1136.8" y="942.0"></text>
</g>
<g>
<title>tcp_rack_update_reo_wnd (1 samples, 0.02%)</title><rect x="1134.1" y="963.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1137.1" y="974.0"></text>
</g>
<g>
<title>tcp_rate_skb_delivered (1 samples, 0.02%)</title><rect x="1134.4" y="963.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1137.4" y="974.0"></text>
</g>
<g>
<title>tcp_check_space (2 samples, 0.05%)</title><rect x="1134.6" y="979.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1137.6" y="990.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (2 samples, 0.05%)</title><rect x="1135.2" y="979.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1138.2" y="990.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.02%)</title><rect x="1135.4" y="963.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1138.4" y="974.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.02%)</title><rect x="1135.4" y="947.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1138.4" y="958.0"></text>
</g>
<g>
<title>nf_hook_slow (11 samples, 0.25%)</title><rect x="1135.7" y="1059.0" width="3.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1138.7" y="1070.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (6 samples, 0.14%)</title><rect x="1135.7" y="1043.0" width="1.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1138.7" y="1054.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (2 samples, 0.05%)</title><rect x="1137.3" y="1043.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1140.3" y="1054.0"></text>
</g>
<g>
<title>iptable_security_hook	[iptable_security] (1 samples, 0.02%)</title><rect x="1137.9" y="1043.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1140.9" y="1054.0"></text>
</g>
<g>
<title>ipv4_confirm	[nf_conntrack] (1 samples, 0.02%)</title><rect x="1138.2" y="1043.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1141.2" y="1054.0"></text>
</g>
<g>
<title>nf_confirm	[nf_conntrack] (1 samples, 0.02%)</title><rect x="1138.4" y="1043.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1141.4" y="1054.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events	[nf_conntrack] (1 samples, 0.02%)</title><rect x="1138.4" y="1027.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1141.4" y="1038.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (2 samples, 0.05%)</title><rect x="1138.7" y="1075.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1141.7" y="1086.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1139.2" y="1075.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1142.2" y="1086.0"></text>
</g>
<g>
<title>nf_hook_slow (22 samples, 0.51%)</title><rect x="1139.5" y="1075.0" width="6.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1142.5" y="1086.0"></text>
</g>
<g>
<title>ip_sabotage_in	[br_netfilter] (2 samples, 0.05%)</title><rect x="1139.8" y="1059.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1142.8" y="1070.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (13 samples, 0.30%)</title><rect x="1140.3" y="1059.0" width="3.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1143.3" y="1070.0"></text>
</g>
<g>
<title>iptable_raw_hook	[iptable_raw] (4 samples, 0.09%)</title><rect x="1143.9" y="1059.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1146.9" y="1070.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag	[nf_defrag_ipv4] (1 samples, 0.02%)</title><rect x="1144.9" y="1059.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1147.9" y="1070.0"></text>
</g>
<g>
<title>nf_nat_ipv4_in	[nf_nat] (1 samples, 0.02%)</title><rect x="1145.2" y="1059.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1148.2" y="1070.0"></text>
</g>
<g>
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="1145.5" y="1139.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1148.5" y="1150.0"></text>
</g>
<g>
<title>call_timer_fn (1 samples, 0.02%)</title><rect x="1145.5" y="1123.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1148.5" y="1134.0"></text>
</g>
<g>
<title>tcp_delack_timer (1 samples, 0.02%)</title><rect x="1145.5" y="1107.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1148.5" y="1118.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="1145.5" y="1091.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1148.5" y="1102.0"></text>
</g>
<g>
<title>nf_hook_slow (10 samples, 0.23%)</title><rect x="1145.8" y="1219.0" width="2.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1148.8" y="1230.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="1146.3" y="1203.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1149.3" y="1214.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (3 samples, 0.07%)</title><rect x="1146.6" y="1203.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1149.6" y="1214.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (1 samples, 0.02%)</title><rect x="1147.4" y="1203.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1150.4" y="1214.0"></text>
</g>
<g>
<title>ipv4_confirm	[nf_conntrack] (1 samples, 0.02%)</title><rect x="1147.7" y="1203.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1150.7" y="1214.0"></text>
</g>
<g>
<title>nf_confirm	[nf_conntrack] (1 samples, 0.02%)</title><rect x="1147.9" y="1203.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1150.9" y="1214.0"></text>
</g>
<g>
<title>nf_nat_ipv4_out	[nf_nat] (1 samples, 0.02%)</title><rect x="1148.2" y="1203.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1151.2" y="1214.0"></text>
</g>
<g>
<title>nf_nat_inet_fn	[nf_nat] (1 samples, 0.02%)</title><rect x="1148.2" y="1187.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1151.2" y="1198.0"></text>
</g>
<g>
<title>tcp_established_options (3 samples, 0.07%)</title><rect x="1148.5" y="1251.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1151.5" y="1262.0"></text>
</g>
<g>
<title>lock_sock_nested (5 samples, 0.12%)</title><rect x="1149.3" y="1267.0" width="1.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1152.3" y="1278.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (4 samples, 0.09%)</title><rect x="1149.6" y="1251.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1152.6" y="1262.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.05%)</title><rect x="1150.6" y="1267.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1153.6" y="1278.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (23 samples, 0.53%)</title><rect x="1151.2" y="1267.0" width="6.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1154.2" y="1278.0"></text>
</g>
<g>
<title>__skb_datagram_iter (23 samples, 0.53%)</title><rect x="1151.2" y="1251.0" width="6.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1154.2" y="1262.0"></text>
</g>
<g>
<title>_copy_to_iter (7 samples, 0.16%)</title><rect x="1152.0" y="1235.0" width="1.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1155.0" y="1246.0"></text>
</g>
<g>
<title>copyout (7 samples, 0.16%)</title><rect x="1152.0" y="1219.0" width="1.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1155.0" y="1230.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (6 samples, 0.14%)</title><rect x="1152.0" y="1203.0" width="1.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1155.0" y="1214.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (1 samples, 0.02%)</title><rect x="1153.6" y="1203.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1156.6" y="1214.0"></text>
</g>
<g>
<title>simple_copy_to_iter (13 samples, 0.30%)</title><rect x="1153.9" y="1235.0" width="3.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1156.9" y="1246.0"></text>
</g>
<g>
<title>__check_object_size (9 samples, 0.21%)</title><rect x="1155.0" y="1219.0" width="2.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1158.0" y="1230.0"></text>
</g>
<g>
<title>__check_heap_object (4 samples, 0.09%)</title><rect x="1155.5" y="1203.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1158.5" y="1214.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.02%)</title><rect x="1156.6" y="1203.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1159.6" y="1214.0"></text>
</g>
<g>
<title>check_stack_object (2 samples, 0.05%)</title><rect x="1156.9" y="1203.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1159.9" y="1214.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (1 samples, 0.02%)</title><rect x="1157.4" y="1267.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1160.4" y="1278.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (2 samples, 0.05%)</title><rect x="1157.7" y="1267.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1160.7" y="1278.0"></text>
</g>
<g>
<title>tcp_recv_timestamp (3 samples, 0.07%)</title><rect x="1158.2" y="1267.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1161.2" y="1278.0"></text>
</g>
<g>
<title>sock_recvmsg (8 samples, 0.18%)</title><rect x="1159.1" y="1299.0" width="2.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1162.1" y="1310.0"></text>
</g>
<g>
<title>security_socket_recvmsg (8 samples, 0.18%)</title><rect x="1159.1" y="1283.0" width="2.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1162.1" y="1294.0"></text>
</g>
<g>
<title>selinux_socket_recvmsg (2 samples, 0.05%)</title><rect x="1159.6" y="1267.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1162.6" y="1278.0"></text>
</g>
<g>
<title>sock_has_perm (4 samples, 0.09%)</title><rect x="1160.1" y="1267.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1163.1" y="1278.0"></text>
</g>
<g>
<title>avc_has_perm (2 samples, 0.05%)</title><rect x="1160.7" y="1251.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1163.7" y="1262.0"></text>
</g>
<g>
<title>sockfd_lookup_light (10 samples, 0.23%)</title><rect x="1161.2" y="1299.0" width="2.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1164.2" y="1310.0"></text>
</g>
<g>
<title>__fget_light (10 samples, 0.23%)</title><rect x="1161.2" y="1283.0" width="2.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1164.2" y="1294.0"></text>
</g>
<g>
<title>__fget (4 samples, 0.09%)</title><rect x="1162.9" y="1267.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1165.9" y="1278.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1163.9" y="1331.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1166.9" y="1342.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1163.9" y="1315.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1166.9" y="1326.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="1163.9" y="1299.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1166.9" y="1310.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1163.9" y="1283.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1166.9" y="1294.0"></text>
</g>
<g>
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="1163.9" y="1267.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1166.9" y="1278.0"></text>
</g>
<g>
<title>oopFactory::new_typeArray(BasicType, int, Thread*) (1 samples, 0.02%)</title><rect x="1164.2" y="1459.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1167.2" y="1470.0"></text>
</g>
<g>
<title>start_thread (94 samples, 2.16%)</title><rect x="1164.5" y="1459.0" width="25.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1167.5" y="1470.0">s..</text>
</g>
<g>
<title>thread_native_entry(Thread*) (94 samples, 2.16%)</title><rect x="1164.5" y="1443.0" width="25.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1167.5" y="1454.0">t..</text>
</g>
<g>
<title>GangWorker::loop() (73 samples, 1.68%)</title><rect x="1164.5" y="1427.0" width="19.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1167.5" y="1438.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (70 samples, 1.61%)</title><rect x="1164.5" y="1411.0" width="19.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1167.5" y="1422.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (17 samples, 0.39%)</title><rect x="1164.5" y="1395.0" width="4.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1167.5" y="1406.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (2 samples, 0.05%)</title><rect x="1165.3" y="1379.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1168.3" y="1390.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (2 samples, 0.05%)</title><rect x="1165.3" y="1363.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1168.3" y="1374.0"></text>
</g>
<g>
<title>SpinPause (12 samples, 0.28%)</title><rect x="1165.8" y="1379.0" width="3.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1168.8" y="1390.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (50 samples, 1.15%)</title><rect x="1169.1" y="1395.0" width="13.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1172.1" y="1406.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (50 samples, 1.15%)</title><rect x="1169.1" y="1379.0" width="13.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1172.1" y="1390.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (50 samples, 1.15%)</title><rect x="1169.1" y="1363.0" width="13.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1172.1" y="1374.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (50 samples, 1.15%)</title><rect x="1169.1" y="1347.0" width="13.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1172.1" y="1358.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (50 samples, 1.15%)</title><rect x="1169.1" y="1331.0" width="13.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1172.1" y="1342.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (34 samples, 0.78%)</title><rect x="1169.1" y="1315.0" width="9.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1172.1" y="1326.0"></text>
</g>
<g>
<title>G1CardTable::mark_card_deferred(unsigned long) (1 samples, 0.02%)</title><rect x="1172.4" y="1299.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1175.4" y="1310.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (21 samples, 0.48%)</title><rect x="1172.6" y="1299.0" width="5.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1175.6" y="1310.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (1 samples, 0.02%)</title><rect x="1178.1" y="1283.0" width="0.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1181.1" y="1294.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.121] (16 samples, 0.37%)</title><rect x="1178.3" y="1315.0" width="4.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1181.3" y="1326.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (15 samples, 0.35%)</title><rect x="1178.3" y="1299.0" width="4.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1181.3" y="1310.0"></text>
</g>
<g>
<title>G1BlockOffsetTablePart::forward_to_block_containing_addr_slow(HeapWord*, HeapWord*, void const*) (1 samples, 0.02%)</title><rect x="1179.1" y="1283.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1182.1" y="1294.0"></text>
</g>
<g>
<title>G1CMBitMap::get_next_marked_addr(HeapWord const*, HeapWord const*) const (1 samples, 0.02%)</title><rect x="1179.4" y="1283.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1182.4" y="1294.0"></text>
</g>
<g>
<title>HeapRegion::block_size(HeapWord const*) const (1 samples, 0.02%)</title><rect x="1179.7" y="1283.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1182.7" y="1294.0"></text>
</g>
<g>
<title>void G1ScanObjsDuringUpdateRSClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) (6 samples, 0.14%)</title><rect x="1180.0" y="1283.0" width="1.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1183.0" y="1294.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1ScanObjsDuringUpdateRSClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1ScanObjsDuringUpdateRSClosure*, oopDesc*, Klass*) (3 samples, 0.07%)</title><rect x="1181.6" y="1283.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1184.6" y="1294.0"></text>
</g>
<g>
<title>oopDesc::size_given_klass(Klass*) (1 samples, 0.02%)</title><rect x="1182.4" y="1299.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1185.4" y="1310.0"></text>
</g>
<g>
<title>G1RemSet::scan_rem_set(G1ParScanThreadState*, unsigned int) (1 samples, 0.02%)</title><rect x="1182.7" y="1395.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1185.7" y="1406.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const (1 samples, 0.02%)</title><rect x="1182.7" y="1379.0" width="0.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1185.7" y="1390.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::do_heap_region(HeapRegion*) (1 samples, 0.02%)</title><rect x="1182.7" y="1363.0" width="0.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1185.7" y="1374.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::scan_rem_set_roots(HeapRegion*) (1 samples, 0.02%)</title><rect x="1182.7" y="1347.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1185.7" y="1358.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringScanRSClosure&gt;(MemRegion, G1ScanObjsDuringScanRSClosure*) (1 samples, 0.02%)</title><rect x="1182.7" y="1331.0" width="0.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1185.7" y="1342.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1ScanObjsDuringScanRSClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1ScanObjsDuringScanRSClosure*, oopDesc*, Klass*) (1 samples, 0.02%)</title><rect x="1182.7" y="1315.0" width="0.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1185.7" y="1326.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (2 samples, 0.05%)</title><rect x="1182.9" y="1395.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1185.9" y="1406.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (2 samples, 0.05%)</title><rect x="1182.9" y="1379.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1185.9" y="1390.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (2 samples, 0.05%)</title><rect x="1182.9" y="1363.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1185.9" y="1374.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (2 samples, 0.05%)</title><rect x="1182.9" y="1347.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1185.9" y="1358.0"></text>
</g>
<g>
<title>frame::oops_interpreted_do(OopClosure*, RegisterMap const*, bool) (2 samples, 0.05%)</title><rect x="1182.9" y="1331.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1185.9" y="1342.0"></text>
</g>
<g>
<title>ConstantPool::impl_signature_ref_at(int, bool) (1 samples, 0.02%)</title><rect x="1182.9" y="1315.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1185.9" y="1326.0"></text>
</g>
<g>
<title>Method::mask_for(int, InterpreterOopMap*) (1 samples, 0.02%)</title><rect x="1183.2" y="1315.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1186.2" y="1326.0"></text>
</g>
<g>
<title>OopMapCache::lookup(methodHandle const&amp;, int, InterpreterOopMap*) (1 samples, 0.02%)</title><rect x="1183.2" y="1299.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1186.2" y="1310.0"></text>
</g>
<g>
<title>G1RedirtyLoggedCardsTask::work(unsigned int) (1 samples, 0.02%)</title><rect x="1183.5" y="1411.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1186.5" y="1422.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::par_apply_closure_to_all_completed_buffers(CardTableEntryClosure*) (1 samples, 0.02%)</title><rect x="1183.5" y="1395.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1186.5" y="1406.0"></text>
</g>
<g>
<title>RedirtyLoggedCardTableEntryClosure::do_card_ptr(signed char*, unsigned int) (1 samples, 0.02%)</title><rect x="1183.5" y="1379.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1186.5" y="1390.0"></text>
</g>
<g>
<title>ParallelSPCleanupTask::work(unsigned int) (1 samples, 0.02%)</title><rect x="1183.8" y="1411.0" width="0.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1186.8" y="1422.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_threads_do(bool, ThreadClosure*) (1 samples, 0.02%)</title><rect x="1183.8" y="1395.0" width="0.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1186.8" y="1406.0"></text>
</g>
<g>
<title>ParallelSPCleanupThreadClosure::do_thread(Thread*) (1 samples, 0.02%)</title><rect x="1183.8" y="1379.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1186.8" y="1390.0"></text>
</g>
<g>
<title>Thread::muxRelease(long volatile*) (1 samples, 0.02%)</title><rect x="1183.8" y="1363.0" width="0.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1186.8" y="1374.0"></text>
</g>
<g>
<title>sem_post@@GLIBC_2.2.5 (1 samples, 0.02%)</title><rect x="1184.0" y="1411.0" width="0.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1187.0" y="1422.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="1184.0" y="1395.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1187.0" y="1406.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="1184.0" y="1379.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1187.0" y="1390.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.02%)</title><rect x="1184.0" y="1363.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1187.0" y="1374.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.02%)</title><rect x="1184.0" y="1347.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1187.0" y="1358.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.02%)</title><rect x="1184.0" y="1331.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1187.0" y="1342.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.02%)</title><rect x="1184.0" y="1315.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1187.0" y="1326.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.02%)</title><rect x="1184.0" y="1299.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1187.0" y="1310.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="1184.0" y="1283.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1187.0" y="1294.0"></text>
</g>
<g>
<title>JavaThread::run() (16 samples, 0.37%)</title><rect x="1184.3" y="1427.0" width="4.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1187.3" y="1438.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (16 samples, 0.37%)</title><rect x="1184.3" y="1411.0" width="4.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1187.3" y="1422.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (15 samples, 0.35%)</title><rect x="1184.3" y="1395.0" width="4.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1187.3" y="1406.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (15 samples, 0.35%)</title><rect x="1184.3" y="1379.0" width="4.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1187.3" y="1390.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (15 samples, 0.35%)</title><rect x="1184.3" y="1363.0" width="4.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1187.3" y="1374.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (15 samples, 0.35%)</title><rect x="1184.3" y="1347.0" width="4.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1187.3" y="1358.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (9 samples, 0.21%)</title><rect x="1184.3" y="1331.0" width="2.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1187.3" y="1342.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (2 samples, 0.05%)</title><rect x="1184.3" y="1315.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1187.3" y="1326.0"></text>
</g>
<g>
<title>PhaseCFG::estimate_block_frequency() (1 samples, 0.02%)</title><rect x="1184.3" y="1299.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1187.3" y="1310.0"></text>
</g>
<g>
<title>CFGLoop::compute_freq() (1 samples, 0.02%)</title><rect x="1184.3" y="1283.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1187.3" y="1294.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (1 samples, 0.02%)</title><rect x="1184.6" y="1299.0" width="0.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1187.6" y="1310.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_late(VectorSet&amp;, Node_Stack&amp;) (1 samples, 0.02%)</title><rect x="1184.6" y="1283.0" width="0.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1187.6" y="1294.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_node_into_block(Node*, Block*) (1 samples, 0.02%)</title><rect x="1184.6" y="1267.0" width="0.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1187.6" y="1278.0"></text>
</g>
<g>
<title>Node_Array::insert(unsigned int, Node*) (1 samples, 0.02%)</title><rect x="1184.6" y="1251.0" width="0.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1187.6" y="1262.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (7 samples, 0.16%)</title><rect x="1184.8" y="1315.0" width="1.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1187.8" y="1326.0"></text>
</g>
<g>
<title>PhaseChaitin::Simplify() (1 samples, 0.02%)</title><rect x="1184.8" y="1299.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1187.8" y="1310.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.02%)</title><rect x="1184.8" y="1283.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1187.8" y="1294.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (1 samples, 0.02%)</title><rect x="1185.1" y="1299.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1188.1" y="1310.0"></text>
</g>
<g>
<title>PhaseChaitin::remove_bound_register_from_interfering_live_ranges(LRG&amp;, IndexSet*, unsigned int&amp;) (1 samples, 0.02%)</title><rect x="1185.1" y="1283.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1188.1" y="1294.0"></text>
</g>
<g>
<title>RegMask::smear_to_sets(int) (1 samples, 0.02%)</title><rect x="1185.1" y="1267.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1188.1" y="1278.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (2 samples, 0.05%)</title><rect x="1185.4" y="1299.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1188.4" y="1310.0"></text>
</g>
<g>
<title>PhaseChaitin::merge_multidefs() (1 samples, 0.02%)</title><rect x="1185.9" y="1299.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1188.9" y="1310.0"></text>
</g>
<g>
<title>PhaseCoalesce::coalesce_driver() (1 samples, 0.02%)</title><rect x="1186.2" y="1299.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1189.2" y="1310.0"></text>
</g>
<g>
<title>MachNode::two_adr() const (1 samples, 0.02%)</title><rect x="1186.2" y="1283.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1189.2" y="1294.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (1 samples, 0.02%)</title><rect x="1186.5" y="1299.0" width="0.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1189.5" y="1310.0"></text>
</g>
<g>
<title>IndexSet::alloc_block_containing(unsigned int) (1 samples, 0.02%)</title><rect x="1186.5" y="1283.0" width="0.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1189.5" y="1294.0"></text>
</g>
<g>
<title>Compile::Optimize() (5 samples, 0.12%)</title><rect x="1186.7" y="1331.0" width="1.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1189.7" y="1342.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(bool, bool, bool) (4 samples, 0.09%)</title><rect x="1186.7" y="1315.0" width="1.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1189.7" y="1326.0"></text>
</g>
<g>
<title>PhaseIdealLoop::Dominators() (1 samples, 0.02%)</title><rect x="1186.7" y="1299.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1189.7" y="1310.0"></text>
</g>
<g>
<title>NTarjan::DFS(NTarjan*, VectorSet&amp;, PhaseIdealLoop*, unsigned int*) (1 samples, 0.02%)</title><rect x="1186.7" y="1283.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1189.7" y="1294.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_early(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (1 samples, 0.02%)</title><rect x="1187.0" y="1299.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1190.0" y="1310.0"></text>
</g>
<g>
<title>HaltNode::is_CFG() const (1 samples, 0.02%)</title><rect x="1187.0" y="1283.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1190.0" y="1294.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (1 samples, 0.02%)</title><rect x="1187.3" y="1299.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1190.3" y="1310.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (1 samples, 0.02%)</title><rect x="1187.3" y="1283.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1190.3" y="1294.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks(VectorSet&amp;, Node_Stack&amp;, bool) (1 samples, 0.02%)</title><rect x="1187.6" y="1299.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1190.6" y="1310.0"></text>
</g>
<g>
<title>PhaseIdealLoop::do_split_if(Node*) (1 samples, 0.02%)</title><rect x="1187.6" y="1283.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1190.6" y="1294.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_up(Node*, Node*, Node*) [clone .part.39] (1 samples, 0.02%)</title><rect x="1187.6" y="1267.0" width="0.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1190.6" y="1278.0"></text>
</g>
<g>
<title>NodeHash::hash_delete(Node const*) (1 samples, 0.02%)</title><rect x="1187.6" y="1251.0" width="0.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1190.6" y="1262.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (1 samples, 0.02%)</title><rect x="1187.8" y="1315.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1190.8" y="1326.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (1 samples, 0.02%)</title><rect x="1187.8" y="1299.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1190.8" y="1310.0"></text>
</g>
<g>
<title>StoreNode::Identity(PhaseGVN*) (1 samples, 0.02%)</title><rect x="1187.8" y="1283.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1190.8" y="1294.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1188.1" y="1331.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1191.1" y="1342.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1188.1" y="1315.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1191.1" y="1326.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1188.1" y="1299.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1191.1" y="1310.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1188.1" y="1283.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1191.1" y="1294.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1188.1" y="1267.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1191.1" y="1278.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1188.1" y="1251.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1191.1" y="1262.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1188.1" y="1235.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1191.1" y="1246.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1188.1" y="1219.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1191.1" y="1230.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1188.1" y="1203.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1191.1" y="1214.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1188.1" y="1187.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1191.1" y="1198.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1188.1" y="1171.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1191.1" y="1182.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1188.1" y="1155.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1191.1" y="1166.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1188.1" y="1139.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1191.1" y="1150.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1188.1" y="1123.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1191.1" y="1134.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1188.1" y="1107.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1191.1" y="1118.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1188.1" y="1091.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1191.1" y="1102.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1188.1" y="1075.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1191.1" y="1086.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1188.1" y="1059.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1191.1" y="1070.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1188.1" y="1043.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1191.1" y="1054.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1188.1" y="1027.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1191.1" y="1038.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1188.1" y="1011.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1191.1" y="1022.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1188.1" y="995.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1191.1" y="1006.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1188.1" y="979.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1191.1" y="990.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1188.1" y="963.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1191.1" y="974.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1188.1" y="947.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1191.1" y="958.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1188.1" y="931.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1191.1" y="942.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1188.1" y="915.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1191.1" y="926.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1188.1" y="899.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1191.1" y="910.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1188.1" y="883.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1191.1" y="894.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1188.1" y="867.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1191.1" y="878.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1188.1" y="851.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1191.1" y="862.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1188.1" y="835.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1191.1" y="846.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1188.1" y="819.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1191.1" y="830.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1188.1" y="803.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1191.1" y="814.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1188.1" y="787.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1191.1" y="798.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1188.1" y="771.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1191.1" y="782.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1188.1" y="755.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1191.1" y="766.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1188.1" y="739.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1191.1" y="750.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1188.1" y="723.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1191.1" y="734.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1188.1" y="707.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1191.1" y="718.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1188.1" y="691.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1191.1" y="702.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1188.1" y="675.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1191.1" y="686.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1188.1" y="659.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1191.1" y="670.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1188.1" y="643.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1191.1" y="654.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1188.1" y="627.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1191.1" y="638.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.02%)</title><rect x="1188.1" y="611.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1191.1" y="622.0"></text>
</g>
<g>
<title>InlineTree::find_subtree_from_root(InlineTree*, JVMState*, ciMethod*) (1 samples, 0.02%)</title><rect x="1188.1" y="595.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1191.1" y="606.0"></text>
</g>
<g>
<title>JVMState::of_depth(int) const (1 samples, 0.02%)</title><rect x="1188.1" y="579.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1191.1" y="590.0"></text>
</g>
<g>
<title>NMethodSweeper::sweeper_loop() (1 samples, 0.02%)</title><rect x="1188.4" y="1395.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1191.4" y="1406.0"></text>
</g>
<g>
<title>NMethodSweeper::possibly_sweep() (1 samples, 0.02%)</title><rect x="1188.4" y="1379.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1191.4" y="1390.0"></text>
</g>
<g>
<title>NMethodSweeper::sweep_code_cache() (1 samples, 0.02%)</title><rect x="1188.4" y="1363.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1191.4" y="1374.0"></text>
</g>
<g>
<title>NMethodSweeper::process_compiled_method(CompiledMethod*) (1 samples, 0.02%)</title><rect x="1188.4" y="1347.0" width="0.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1191.4" y="1358.0"></text>
</g>
<g>
<title>NMethodSweeper::possibly_flush(nmethod*) (1 samples, 0.02%)</title><rect x="1188.4" y="1331.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1191.4" y="1342.0"></text>
</g>
<g>
<title>VMThread::run() (4 samples, 0.09%)</title><rect x="1188.6" y="1427.0" width="1.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1191.6" y="1438.0"></text>
</g>
<g>
<title>VMThread::loop() (4 samples, 0.09%)</title><rect x="1188.6" y="1411.0" width="1.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1191.6" y="1422.0"></text>
</g>
<g>
<title>EventMark::EventMark(char const*, ...) (1 samples, 0.02%)</title><rect x="1188.6" y="1395.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1191.6" y="1406.0"></text>
</g>
<g>
<title>os::vsnprintf(char*, unsigned long, char const*, __va_list_tag*) (1 samples, 0.02%)</title><rect x="1188.6" y="1379.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1191.6" y="1390.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.54] (2 samples, 0.05%)</title><rect x="1188.9" y="1395.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1191.9" y="1406.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (2 samples, 0.05%)</title><rect x="1188.9" y="1379.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1191.9" y="1390.0"></text>
</g>
<g>
<title>VM_G1CollectForAllocation::doit() (2 samples, 0.05%)</title><rect x="1188.9" y="1363.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1191.9" y="1374.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (2 samples, 0.05%)</title><rect x="1188.9" y="1347.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1191.9" y="1358.0"></text>
</g>
<g>
<title>G1CollectedHeap::post_evacuate_collection_set(EvacuationInfo&amp;, G1ParScanThreadStateSet*) (1 samples, 0.02%)</title><rect x="1188.9" y="1331.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1191.9" y="1342.0"></text>
</g>
<g>
<title>G1RemSet::cleanup_after_oops_into_collection_set_do() (1 samples, 0.02%)</title><rect x="1188.9" y="1315.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1191.9" y="1326.0"></text>
</g>
<g>
<title>WorkGang::run_task(AbstractGangTask*, unsigned int) (1 samples, 0.02%)</title><rect x="1188.9" y="1299.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1191.9" y="1310.0"></text>
</g>
<g>
<title>SemaphoreGangTaskDispatcher::coordinator_execute_on_workers(AbstractGangTask*, unsigned int) (1 samples, 0.02%)</title><rect x="1188.9" y="1283.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1191.9" y="1294.0"></text>
</g>
<g>
<title>sem_post@@GLIBC_2.2.5 (1 samples, 0.02%)</title><rect x="1188.9" y="1267.0" width="0.3" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="1191.9" y="1278.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="1188.9" y="1251.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1191.9" y="1262.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="1188.9" y="1235.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1191.9" y="1246.0"></text>
</g>
<g>
<title>G1CollectionSet::finalize_old_part(double) (1 samples, 0.02%)</title><rect x="1189.2" y="1331.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1192.2" y="1342.0"></text>
</g>
<g>
<title>void QuickSort::inner_sort&lt;true, unsigned int, int (*)(unsigned int, unsigned int)&gt;(unsigned int*, unsigned long, int (*)(unsigned int, unsigned int)) (1 samples, 0.02%)</title><rect x="1189.2" y="1315.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1192.2" y="1326.0"></text>
</g>
<g>
<title>__GI_sched_yield (1 samples, 0.02%)</title><rect x="1189.5" y="1395.0" width="0.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1192.5" y="1406.0"></text>
</g>
<g>
<title>WatcherThread::run() (1 samples, 0.02%)</title><rect x="1189.7" y="1427.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1192.7" y="1438.0"></text>
</g>
<g>
<title>PeriodicTask::real_time_tick(int) (1 samples, 0.02%)</title><rect x="1189.7" y="1411.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1192.7" y="1422.0"></text>
</g>
<g>
<title>StatSamplerTask::task() (1 samples, 0.02%)</title><rect x="1189.7" y="1395.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1192.7" y="1406.0"></text>
</g>
</g>
</svg>
