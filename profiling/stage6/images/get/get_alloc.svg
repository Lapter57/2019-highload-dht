<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="758" onload="init(evt)" viewBox="0 0 1200 758" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="741"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="741"> </text>
<g id="frames">
<g>
<title>all (150,736 samples, 100.00%)</title><rect x="10.0" y="707.0" width="1180.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="13.0" y="718.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (53,526 samples, 35.51%)</title><rect x="10.0" y="691.0" width="419.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="13.0" y="702.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (53,526 samples, 35.51%)</title><rect x="10.0" y="675.0" width="419.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="13.0" y="686.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (53,526 samples, 35.51%)</title><rect x="10.0" y="659.0" width="419.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="13.0" y="670.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (13,330 samples, 8.84%)</title><rect x="10.0" y="643.0" width="104.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="13.0" y="654.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (13,330 samples, 8.84%)</title><rect x="10.0" y="627.0" width="104.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.0" y="638.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (13,330 samples, 8.84%)</title><rect x="10.0" y="611.0" width="104.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="13.0" y="622.0">java/util/co..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (61 samples, 0.04%)</title><rect x="10.0" y="595.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="13.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$133/1711595431.apply (13,269 samples, 8.80%)</title><rect x="10.5" y="595.0" width="103.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="13.5" y="606.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (13,269 samples, 8.80%)</title><rect x="10.5" y="579.0" width="103.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.5" y="590.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (13,269 samples, 8.80%)</title><rect x="10.5" y="563.0" width="103.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.5" y="574.0">jdk/internal..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (98 samples, 0.07%)</title><rect x="10.5" y="547.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.5" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (98 samples, 0.07%)</title><rect x="10.5" y="531.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="13.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$192/1158665635.get$Lambda (76 samples, 0.05%)</title><rect x="10.5" y="515.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.5" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$192 (76 samples, 0.05%)</title><rect x="10.5" y="499.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="13.5" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (113 samples, 0.07%)</title><rect x="11.2" y="547.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="14.2" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (113 samples, 0.07%)</title><rect x="11.2" y="531.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="14.2" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (63 samples, 0.04%)</title><rect x="11.2" y="515.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="14.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (50 samples, 0.03%)</title><rect x="11.7" y="515.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="14.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (50 samples, 0.03%)</title><rect x="11.7" y="499.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="14.7" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (50 samples, 0.03%)</title><rect x="11.7" y="483.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="14.7" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (239 samples, 0.16%)</title><rect x="12.1" y="547.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="15.1" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (239 samples, 0.16%)</title><rect x="12.1" y="531.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="15.1" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (129 samples, 0.09%)</title><rect x="12.1" y="515.0" width="1.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="15.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (110 samples, 0.07%)</title><rect x="13.1" y="515.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="16.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (110 samples, 0.07%)</title><rect x="13.1" y="499.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="16.1" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (110 samples, 0.07%)</title><rect x="13.1" y="483.0" width="0.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="16.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (12,819 samples, 8.50%)</title><rect x="14.0" y="547.0" width="100.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="17.0" y="558.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (12,819 samples, 8.50%)</title><rect x="14.0" y="531.0" width="100.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="17.0" y="542.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (12,819 samples, 8.50%)</title><rect x="14.0" y="515.0" width="100.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="17.0" y="526.0">jdk/internal..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (279 samples, 0.19%)</title><rect x="14.0" y="499.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="17.0" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (279 samples, 0.19%)</title><rect x="14.0" y="483.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="17.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$137/87340014.get$Lambda (175 samples, 0.12%)</title><rect x="14.0" y="467.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="17.0" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$137 (175 samples, 0.12%)</title><rect x="14.0" y="451.0" width="1.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="17.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$139/1035318298.get$Lambda (53 samples, 0.04%)</title><rect x="15.4" y="467.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="18.4" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$139 (53 samples, 0.04%)</title><rect x="15.4" y="451.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="18.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$174/1093022843.get$Lambda (51 samples, 0.03%)</title><rect x="15.8" y="467.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="18.8" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$174 (51 samples, 0.03%)</title><rect x="15.8" y="451.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="18.8" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (8,036 samples, 5.33%)</title><rect x="16.2" y="499.0" width="62.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="19.2" y="510.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (8,036 samples, 5.33%)</title><rect x="16.2" y="483.0" width="62.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="19.2" y="494.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (7,958 samples, 5.28%)</title><rect x="16.2" y="467.0" width="62.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="19.2" y="478.0">java/u..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$174/1093022843.apply (7,958 samples, 5.28%)</title><rect x="16.2" y="451.0" width="62.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="19.2" y="462.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (7,958 samples, 5.28%)</title><rect x="16.2" y="435.0" width="62.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="19.2" y="446.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (7,958 samples, 5.28%)</title><rect x="16.2" y="419.0" width="62.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="19.2" y="430.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$139/1035318298.apply (7,958 samples, 5.28%)</title><rect x="16.2" y="403.0" width="62.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="19.2" y="414.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (7,958 samples, 5.28%)</title><rect x="16.2" y="387.0" width="62.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="19.2" y="398.0">jdk/in..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (56 samples, 0.04%)</title><rect x="16.2" y="371.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="19.2" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (56 samples, 0.04%)</title><rect x="16.2" y="355.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="19.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$191/2106603000.get$Lambda (56 samples, 0.04%)</title><rect x="16.2" y="339.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="19.2" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$191 (56 samples, 0.04%)</title><rect x="16.2" y="323.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="19.2" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (152 samples, 0.10%)</title><rect x="16.6" y="371.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="19.6" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (152 samples, 0.10%)</title><rect x="16.6" y="355.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="19.6" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (70 samples, 0.05%)</title><rect x="16.6" y="339.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="19.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (64 samples, 0.04%)</title><rect x="17.3" y="339.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="20.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (64 samples, 0.04%)</title><rect x="17.3" y="323.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="20.3" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (64 samples, 0.04%)</title><rect x="17.3" y="307.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="20.3" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (145 samples, 0.10%)</title><rect x="17.8" y="371.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="20.8" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (145 samples, 0.10%)</title><rect x="17.8" y="355.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="20.8" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (78 samples, 0.05%)</title><rect x="17.8" y="339.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="20.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (66 samples, 0.04%)</title><rect x="18.4" y="339.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="21.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (66 samples, 0.04%)</title><rect x="18.4" y="323.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="21.4" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (66 samples, 0.04%)</title><rect x="18.4" y="307.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="21.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (7,605 samples, 5.05%)</title><rect x="18.9" y="371.0" width="59.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="21.9" y="382.0">jdk/in..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (58 samples, 0.04%)</title><rect x="18.9" y="355.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="21.9" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (58 samples, 0.04%)</title><rect x="18.9" y="339.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="21.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$190/1202798011.get$Lambda (34 samples, 0.02%)</title><rect x="19.1" y="323.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="22.1" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$190 (34 samples, 0.02%)</title><rect x="19.1" y="307.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="22.1" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (6,550 samples, 4.35%)</title><rect x="19.4" y="355.0" width="51.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="22.4" y="366.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (6,550 samples, 4.35%)</title><rect x="19.4" y="339.0" width="51.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="22.4" y="350.0">java/..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (84 samples, 0.06%)</title><rect x="19.4" y="323.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="22.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$189/1784125001.apply (6,352 samples, 4.21%)</title><rect x="20.1" y="323.0" width="49.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="23.1" y="334.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (6,352 samples, 4.21%)</title><rect x="20.1" y="307.0" width="49.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="23.1" y="318.0">jdk/i..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (155 samples, 0.10%)</title><rect x="20.3" y="291.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="23.3" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (155 samples, 0.10%)</title><rect x="20.3" y="275.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="23.3" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (82 samples, 0.05%)</title><rect x="20.3" y="259.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="23.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (73 samples, 0.05%)</title><rect x="20.9" y="259.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="23.9" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (73 samples, 0.05%)</title><rect x="20.9" y="243.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="23.9" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (73 samples, 0.05%)</title><rect x="20.9" y="227.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="23.9" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (81 samples, 0.05%)</title><rect x="21.5" y="291.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="24.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (108 samples, 0.07%)</title><rect x="22.1" y="291.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="25.1" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (45 samples, 0.03%)</title><rect x="22.1" y="275.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="25.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (63 samples, 0.04%)</title><rect x="22.5" y="275.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="25.5" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (56 samples, 0.04%)</title><rect x="22.5" y="259.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="25.5" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (56 samples, 0.04%)</title><rect x="22.5" y="243.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="25.5" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (56 samples, 0.04%)</title><rect x="22.5" y="227.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="25.5" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (56 samples, 0.04%)</title><rect x="22.5" y="211.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="25.5" y="222.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (56 samples, 0.04%)</title><rect x="22.5" y="195.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="25.5" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (173 samples, 0.11%)</title><rect x="23.0" y="291.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="26.0" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (173 samples, 0.11%)</title><rect x="23.0" y="275.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="26.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (60 samples, 0.04%)</title><rect x="23.0" y="259.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="26.0" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (60 samples, 0.04%)</title><rect x="23.0" y="243.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="26.0" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (60 samples, 0.04%)</title><rect x="23.0" y="227.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="26.0" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (60 samples, 0.04%)</title><rect x="23.0" y="211.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="26.0" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (113 samples, 0.07%)</title><rect x="23.4" y="259.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="26.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (113 samples, 0.07%)</title><rect x="23.4" y="243.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="26.4" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (85 samples, 0.06%)</title><rect x="23.4" y="227.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="26.4" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (5,807 samples, 3.85%)</title><rect x="24.3" y="291.0" width="45.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="27.3" y="302.0">jdk/..</text>
</g>
<g>
<title>java.lang.StringBuilder (41 samples, 0.03%)</title><rect x="24.3" y="275.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="27.3" y="286.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (604 samples, 0.40%)</title><rect x="24.6" y="275.0" width="4.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="27.6" y="286.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (604 samples, 0.40%)</title><rect x="24.6" y="259.0" width="4.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="27.6" y="270.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (604 samples, 0.40%)</title><rect x="24.6" y="243.0" width="4.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="27.6" y="254.0"></text>
</g>
<g>
<title>byte[] (571 samples, 0.38%)</title><rect x="24.6" y="227.0" width="4.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="27.6" y="238.0"></text>
</g>
<g>
<title>byte[] (33 samples, 0.02%)</title><rect x="29.1" y="227.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="32.1" y="238.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (152 samples, 0.10%)</title><rect x="29.4" y="275.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="32.4" y="286.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (152 samples, 0.10%)</title><rect x="29.4" y="259.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="32.4" y="270.0"></text>
</g>
<g>
<title>byte[] (152 samples, 0.10%)</title><rect x="29.4" y="243.0" width="1.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="32.4" y="254.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (556 samples, 0.37%)</title><rect x="30.6" y="275.0" width="4.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="33.6" y="286.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (556 samples, 0.37%)</title><rect x="30.6" y="259.0" width="4.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="33.6" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (556 samples, 0.37%)</title><rect x="30.6" y="243.0" width="4.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="33.6" y="254.0"></text>
</g>
<g>
<title>byte[] (543 samples, 0.36%)</title><rect x="30.6" y="227.0" width="4.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="33.6" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (94 samples, 0.06%)</title><rect x="34.9" y="275.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="37.9" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (94 samples, 0.06%)</title><rect x="34.9" y="259.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="37.9" y="270.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (94 samples, 0.06%)</title><rect x="34.9" y="243.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="37.9" y="254.0"></text>
</g>
<g>
<title>java/util/List.of (50 samples, 0.03%)</title><rect x="35.7" y="275.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="38.7" y="286.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (50 samples, 0.03%)</title><rect x="35.7" y="259.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="38.7" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (3,607 samples, 2.39%)</title><rect x="36.0" y="275.0" width="28.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="39.0" y="286.0">jd..</text>
</g>
<g>
<title>java/util/function/BiPredicate.and (61 samples, 0.04%)</title><rect x="36.0" y="259.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="39.0" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (61 samples, 0.04%)</title><rect x="36.0" y="243.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="39.0" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (61 samples, 0.04%)</title><rect x="36.0" y="227.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="39.0" y="238.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$203/1479694379.get$Lambda (61 samples, 0.04%)</title><rect x="36.0" y="211.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="39.0" y="222.0"></text>
</g>
<g>
<title>java.util.function.BiPredicate$$Lambda$203 (61 samples, 0.04%)</title><rect x="36.0" y="195.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="39.0" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (1,677 samples, 1.11%)</title><rect x="36.5" y="259.0" width="13.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="39.5" y="270.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (831 samples, 0.55%)</title><rect x="36.5" y="243.0" width="6.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="39.5" y="254.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (831 samples, 0.55%)</title><rect x="36.5" y="227.0" width="6.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="39.5" y="238.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (831 samples, 0.55%)</title><rect x="36.5" y="211.0" width="6.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="39.5" y="222.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (831 samples, 0.55%)</title><rect x="36.5" y="195.0" width="6.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="39.5" y="206.0"></text>
</g>
<g>
<title>byte[] (829 samples, 0.55%)</title><rect x="36.5" y="179.0" width="6.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="39.5" y="190.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (135 samples, 0.09%)</title><rect x="43.0" y="243.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="46.0" y="254.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (135 samples, 0.09%)</title><rect x="43.0" y="227.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="46.0" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (135 samples, 0.09%)</title><rect x="43.0" y="211.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="46.0" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntryIterator (135 samples, 0.09%)</title><rect x="43.0" y="195.0" width="1.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="46.0" y="206.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.entrySet (130 samples, 0.09%)</title><rect x="44.1" y="243.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="47.1" y="254.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet (65 samples, 0.04%)</title><rect x="44.1" y="227.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="47.1" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.entrySet (65 samples, 0.04%)</title><rect x="44.6" y="227.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="47.6" y="238.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntrySet (65 samples, 0.04%)</title><rect x="44.6" y="211.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="47.6" y="222.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$203/1479694379.test (581 samples, 0.39%)</title><rect x="45.1" y="243.0" width="4.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="48.1" y="254.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (581 samples, 0.39%)</title><rect x="45.1" y="227.0" width="4.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="48.1" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$77/1464555023.test (581 samples, 0.39%)</title><rect x="45.1" y="211.0" width="4.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="48.1" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (581 samples, 0.39%)</title><rect x="45.1" y="195.0" width="4.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="48.1" y="206.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$66/254801937.test (581 samples, 0.39%)</title><rect x="45.1" y="179.0" width="4.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="48.1" y="190.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (581 samples, 0.39%)</title><rect x="45.1" y="163.0" width="4.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="48.1" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$65/270056930.test (581 samples, 0.39%)</title><rect x="45.1" y="147.0" width="4.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="48.1" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (581 samples, 0.39%)</title><rect x="45.1" y="131.0" width="4.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="48.1" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (581 samples, 0.39%)</title><rect x="45.1" y="115.0" width="4.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="48.1" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (581 samples, 0.39%)</title><rect x="45.1" y="99.0" width="4.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="48.1" y="110.0"></text>
</g>
<g>
<title>java.lang.String (310 samples, 0.21%)</title><rect x="45.1" y="83.0" width="2.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="48.1" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (271 samples, 0.18%)</title><rect x="47.5" y="83.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="50.5" y="94.0"></text>
</g>
<g>
<title>byte[] (271 samples, 0.18%)</title><rect x="47.5" y="67.0" width="2.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="50.5" y="78.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (1,869 samples, 1.24%)</title><rect x="49.7" y="259.0" width="14.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="52.7" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (1,869 samples, 1.24%)</title><rect x="49.7" y="243.0" width="14.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="52.7" y="254.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (1,869 samples, 1.24%)</title><rect x="49.7" y="227.0" width="14.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="52.7" y="238.0"></text>
</g>
<g>
<title>java.util.ArrayList (65 samples, 0.04%)</title><rect x="49.9" y="211.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="52.9" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap (99 samples, 0.07%)</title><rect x="50.4" y="211.0" width="0.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="53.4" y="222.0"></text>
</g>
<g>
<title>java.util.TreeSet (37 samples, 0.02%)</title><rect x="51.2" y="211.0" width="0.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="54.2" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (57 samples, 0.04%)</title><rect x="51.4" y="211.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="54.4" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (57 samples, 0.04%)</title><rect x="51.4" y="195.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="54.4" y="206.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$126/1936481830.get$Lambda (57 samples, 0.04%)</title><rect x="51.4" y="179.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="54.4" y="190.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$126 (57 samples, 0.04%)</title><rect x="51.4" y="163.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="54.4" y="174.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (64 samples, 0.04%)</title><rect x="51.9" y="211.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="54.9" y="222.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (64 samples, 0.04%)</title><rect x="51.9" y="195.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="54.9" y="206.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (1,428 samples, 0.95%)</title><rect x="52.4" y="211.0" width="11.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="55.4" y="222.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$126/1936481830.accept (1,428 samples, 0.95%)</title><rect x="52.4" y="195.0" width="11.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="55.4" y="206.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (1,428 samples, 0.95%)</title><rect x="52.4" y="179.0" width="11.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="55.4" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (256 samples, 0.17%)</title><rect x="52.4" y="163.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="55.4" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (256 samples, 0.17%)</title><rect x="52.4" y="147.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="55.4" y="158.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$128/2001978515.get$Lambda (256 samples, 0.17%)</title><rect x="52.4" y="131.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="55.4" y="142.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$128 (256 samples, 0.17%)</title><rect x="52.4" y="115.0" width="2.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="55.4" y="126.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (101 samples, 0.07%)</title><rect x="54.4" y="163.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="57.4" y="174.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$128/2001978515.accept (101 samples, 0.07%)</title><rect x="54.4" y="147.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="57.4" y="158.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (101 samples, 0.07%)</title><rect x="54.4" y="131.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="57.4" y="142.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (101 samples, 0.07%)</title><rect x="54.4" y="115.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="57.4" y="126.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (101 samples, 0.07%)</title><rect x="54.4" y="99.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="57.4" y="110.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (101 samples, 0.07%)</title><rect x="54.4" y="83.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="57.4" y="94.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (101 samples, 0.07%)</title><rect x="54.4" y="67.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="57.4" y="78.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (101 samples, 0.07%)</title><rect x="54.4" y="51.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="57.4" y="62.0"></text>
</g>
<g>
<title>java.lang.Object[] (101 samples, 0.07%)</title><rect x="54.4" y="35.0" width="0.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="57.4" y="46.0"></text>
</g>
<g>
<title>java/util/List.copyOf (568 samples, 0.38%)</title><rect x="55.2" y="163.0" width="4.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="58.2" y="174.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (568 samples, 0.38%)</title><rect x="55.2" y="147.0" width="4.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="58.2" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (293 samples, 0.19%)</title><rect x="55.2" y="131.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="58.2" y="142.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (293 samples, 0.19%)</title><rect x="55.2" y="115.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="58.2" y="126.0"></text>
</g>
<g>
<title>java.lang.Object[] (293 samples, 0.19%)</title><rect x="55.2" y="99.0" width="2.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="58.2" y="110.0"></text>
</g>
<g>
<title>java/util/List.of (275 samples, 0.18%)</title><rect x="57.5" y="131.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="60.5" y="142.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (275 samples, 0.18%)</title><rect x="57.5" y="115.0" width="2.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="60.5" y="126.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (503 samples, 0.33%)</title><rect x="59.6" y="163.0" width="4.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="62.6" y="174.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (503 samples, 0.33%)</title><rect x="59.6" y="147.0" width="4.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="62.6" y="158.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (91 samples, 0.06%)</title><rect x="63.6" y="211.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="66.6" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap (91 samples, 0.06%)</title><rect x="63.6" y="195.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="66.6" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (165 samples, 0.11%)</title><rect x="64.3" y="275.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="67.3" y="286.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (47 samples, 0.03%)</title><rect x="64.3" y="259.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="67.3" y="270.0"></text>
</g>
<g>
<title>byte[] (47 samples, 0.03%)</title><rect x="64.3" y="243.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="67.3" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (118 samples, 0.08%)</title><rect x="64.6" y="259.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="67.6" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (118 samples, 0.08%)</title><rect x="64.6" y="243.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="67.6" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/667821226.invoke (118 samples, 0.08%)</title><rect x="64.6" y="227.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="67.6" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (118 samples, 0.08%)</title><rect x="64.6" y="211.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="67.6" y="222.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (56 samples, 0.04%)</title><rect x="64.6" y="195.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="67.6" y="206.0"></text>
</g>
<g>
<title>java.lang.String (56 samples, 0.04%)</title><rect x="64.6" y="179.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="67.6" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (62 samples, 0.04%)</title><rect x="65.1" y="195.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="68.1" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (62 samples, 0.04%)</title><rect x="65.1" y="179.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="68.1" y="190.0"></text>
</g>
<g>
<title>byte[] (62 samples, 0.04%)</title><rect x="65.1" y="163.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="68.1" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (159 samples, 0.11%)</title><rect x="65.6" y="275.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="68.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (159 samples, 0.11%)</title><rect x="65.6" y="259.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="68.6" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (159 samples, 0.11%)</title><rect x="65.6" y="243.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="68.6" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (159 samples, 0.11%)</title><rect x="65.6" y="227.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="68.6" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/667821226.invoke (159 samples, 0.11%)</title><rect x="65.6" y="211.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="68.6" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (159 samples, 0.11%)</title><rect x="65.6" y="195.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="68.6" y="206.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (46 samples, 0.03%)</title><rect x="65.6" y="179.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="68.6" y="190.0"></text>
</g>
<g>
<title>java.lang.String (46 samples, 0.03%)</title><rect x="65.6" y="163.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="68.6" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (113 samples, 0.07%)</title><rect x="65.9" y="179.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="68.9" y="190.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (113 samples, 0.07%)</title><rect x="65.9" y="163.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="68.9" y="174.0"></text>
</g>
<g>
<title>byte[] (113 samples, 0.07%)</title><rect x="65.9" y="147.0" width="0.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="68.9" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (379 samples, 0.25%)</title><rect x="66.8" y="275.0" width="3.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="69.8" y="286.0"></text>
</g>
<g>
<title>java.util.ArrayList (109 samples, 0.07%)</title><rect x="66.8" y="259.0" width="0.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="69.8" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (88 samples, 0.06%)</title><rect x="67.7" y="259.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="70.7" y="270.0"></text>
</g>
<g>
<title>java.lang.Object[] (88 samples, 0.06%)</title><rect x="67.7" y="243.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="70.7" y="254.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (182 samples, 0.12%)</title><rect x="68.4" y="259.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="71.4" y="270.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (182 samples, 0.12%)</title><rect x="68.4" y="243.0" width="1.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="71.4" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (114 samples, 0.08%)</title><rect x="69.8" y="323.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="72.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (114 samples, 0.08%)</title><rect x="69.8" y="307.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="72.8" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (114 samples, 0.08%)</title><rect x="69.8" y="291.0" width="0.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="72.8" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response (166 samples, 0.11%)</title><rect x="70.7" y="355.0" width="1.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="73.7" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (58 samples, 0.04%)</title><rect x="72.0" y="355.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="75.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (771 samples, 0.51%)</title><rect x="72.4" y="355.0" width="6.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="75.4" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (72 samples, 0.05%)</title><rect x="72.4" y="339.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="75.4" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (72 samples, 0.05%)</title><rect x="72.4" y="323.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="75.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$181/624620704.get$Lambda (44 samples, 0.03%)</title><rect x="72.7" y="307.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="75.7" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$181 (44 samples, 0.03%)</title><rect x="72.7" y="291.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="75.7" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1HeaderParser (71 samples, 0.05%)</title><rect x="73.0" y="339.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="76.0" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$BodyReader (65 samples, 0.04%)</title><rect x="73.6" y="339.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="76.6" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$HeadersReader (70 samples, 0.05%)</title><rect x="74.1" y="339.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="77.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (226 samples, 0.15%)</title><rect x="74.6" y="339.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="77.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (226 samples, 0.15%)</title><rect x="74.6" y="323.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="77.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (226 samples, 0.15%)</title><rect x="74.6" y="307.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="77.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (226 samples, 0.15%)</title><rect x="74.6" y="291.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="77.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (226 samples, 0.15%)</title><rect x="74.6" y="275.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="77.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (226 samples, 0.15%)</title><rect x="74.6" y="259.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="77.6" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$166/1615159449.run (226 samples, 0.15%)</title><rect x="74.6" y="243.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="77.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (226 samples, 0.15%)</title><rect x="74.6" y="227.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="77.6" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (226 samples, 0.15%)</title><rect x="74.6" y="211.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="77.6" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (75 samples, 0.05%)</title><rect x="74.6" y="195.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="77.6" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (75 samples, 0.05%)</title><rect x="74.6" y="179.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="77.6" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$185/1905563662.get$Lambda (50 samples, 0.03%)</title><rect x="74.8" y="163.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="77.8" y="174.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$185 (50 samples, 0.03%)</title><rect x="74.8" y="147.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="77.8" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (64 samples, 0.04%)</title><rect x="75.2" y="195.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="78.2" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (87 samples, 0.06%)</title><rect x="75.7" y="195.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="78.7" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (87 samples, 0.06%)</title><rect x="75.7" y="179.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="78.7" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (42 samples, 0.03%)</title><rect x="75.7" y="163.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="78.7" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (45 samples, 0.03%)</title><rect x="76.0" y="163.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="79.0" y="174.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (45 samples, 0.03%)</title><rect x="76.0" y="147.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="79.0" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.&lt;init&gt; (201 samples, 0.13%)</title><rect x="76.4" y="339.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="79.4" y="350.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (49 samples, 0.03%)</title><rect x="76.4" y="323.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="79.4" y="334.0"></text>
</g>
<g>
<title>java.util.HashMap (105 samples, 0.07%)</title><rect x="76.8" y="323.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="79.8" y="334.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (47 samples, 0.03%)</title><rect x="77.6" y="323.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="80.6" y="334.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (47 samples, 0.03%)</title><rect x="77.6" y="307.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="80.6" y="318.0"></text>
</g>
<g>
<title>byte[] (47 samples, 0.03%)</title><rect x="77.6" y="291.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="80.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.start (66 samples, 0.04%)</title><rect x="78.0" y="339.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="81.0" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (66 samples, 0.04%)</title><rect x="78.0" y="323.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="81.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (78 samples, 0.05%)</title><rect x="78.5" y="467.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="81.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (78 samples, 0.05%)</title><rect x="78.5" y="451.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="81.5" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (78 samples, 0.05%)</title><rect x="78.5" y="435.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="81.5" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (152 samples, 0.10%)</title><rect x="79.1" y="499.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="82.1" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (152 samples, 0.10%)</title><rect x="79.1" y="483.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="82.1" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (90 samples, 0.06%)</title><rect x="79.1" y="467.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="82.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (62 samples, 0.04%)</title><rect x="79.8" y="467.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="82.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (62 samples, 0.04%)</title><rect x="79.8" y="451.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="82.8" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (62 samples, 0.04%)</title><rect x="79.8" y="435.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="82.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (4,352 samples, 2.89%)</title><rect x="80.3" y="499.0" width="34.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="83.3" y="510.0">jd..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (57 samples, 0.04%)</title><rect x="80.3" y="483.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="83.3" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (57 samples, 0.04%)</title><rect x="80.3" y="467.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="83.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$169/1136125206.get$Lambda (32 samples, 0.02%)</title><rect x="80.3" y="451.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="83.3" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$169 (32 samples, 0.02%)</title><rect x="80.3" y="435.0" width="0.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="83.3" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (138 samples, 0.09%)</title><rect x="80.7" y="483.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="83.7" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (138 samples, 0.09%)</title><rect x="80.7" y="467.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="83.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$172/1143403672.apply (68 samples, 0.05%)</title><rect x="80.7" y="451.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="83.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$establishExchange$2 (68 samples, 0.05%)</title><rect x="80.7" y="435.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="83.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (68 samples, 0.05%)</title><rect x="80.7" y="419.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="83.7" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (68 samples, 0.05%)</title><rect x="80.7" y="403.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="83.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (70 samples, 0.05%)</title><rect x="81.3" y="451.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="84.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (70 samples, 0.05%)</title><rect x="81.3" y="435.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="84.3" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (70 samples, 0.05%)</title><rect x="81.3" y="419.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="84.3" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (51 samples, 0.03%)</title><rect x="81.8" y="483.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="84.8" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (51 samples, 0.03%)</title><rect x="81.8" y="467.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="84.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (51 samples, 0.03%)</title><rect x="81.8" y="451.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="84.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (51 samples, 0.03%)</title><rect x="81.8" y="435.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="84.8" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (51 samples, 0.03%)</title><rect x="81.8" y="419.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="84.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (4,106 samples, 2.72%)</title><rect x="82.2" y="483.0" width="32.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="85.2" y="494.0">jd..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (49 samples, 0.03%)</title><rect x="82.2" y="467.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="85.2" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (49 samples, 0.03%)</title><rect x="82.2" y="451.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="85.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$144/821458659.get$Lambda (49 samples, 0.03%)</title><rect x="82.2" y="435.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="85.2" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ExchangeImpl$$Lambda$144 (49 samples, 0.03%)</title><rect x="82.2" y="419.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="85.2" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (3,846 samples, 2.55%)</title><rect x="82.6" y="467.0" width="30.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="85.6" y="478.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (3,846 samples, 2.55%)</title><rect x="82.6" y="451.0" width="30.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="85.6" y="462.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (3,785 samples, 2.51%)</title><rect x="82.6" y="435.0" width="29.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="85.6" y="446.0">ja..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$144/821458659.apply (3,785 samples, 2.51%)</title><rect x="82.6" y="419.0" width="29.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="85.6" y="430.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$get$0 (3,785 samples, 2.51%)</title><rect x="82.6" y="403.0" width="29.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="85.6" y="414.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createExchangeImpl (3,785 samples, 2.51%)</title><rect x="82.6" y="387.0" width="29.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="85.6" y="398.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (1,600 samples, 1.06%)</title><rect x="82.8" y="371.0" width="12.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="85.8" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (1,600 samples, 1.06%)</title><rect x="82.8" y="355.0" width="12.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="85.8" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (1,600 samples, 1.06%)</title><rect x="82.8" y="339.0" width="12.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="85.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$168/346584917.apply (1,551 samples, 1.03%)</title><rect x="82.8" y="323.0" width="12.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="85.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$1 (1,551 samples, 1.03%)</title><rect x="82.8" y="307.0" width="12.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="85.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (1,551 samples, 1.03%)</title><rect x="82.8" y="291.0" width="12.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="85.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (1,551 samples, 1.03%)</title><rect x="82.8" y="275.0" width="12.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="85.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getSettingsString (1,016 samples, 0.67%)</title><rect x="82.8" y="259.0" width="8.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="85.8" y="270.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encodeToString (299 samples, 0.20%)</title><rect x="82.8" y="243.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="85.8" y="254.0"></text>
</g>
<g>
<title>java.lang.String (49 samples, 0.03%)</title><rect x="82.8" y="227.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="85.8" y="238.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (125 samples, 0.08%)</title><rect x="83.2" y="227.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="86.2" y="238.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (125 samples, 0.08%)</title><rect x="83.2" y="211.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="86.2" y="222.0"></text>
</g>
<g>
<title>byte[] (125 samples, 0.08%)</title><rect x="83.2" y="195.0" width="1.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="86.2" y="206.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encode (125 samples, 0.08%)</title><rect x="84.2" y="227.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="87.2" y="238.0"></text>
</g>
<g>
<title>byte[] (125 samples, 0.08%)</title><rect x="84.2" y="211.0" width="1.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="87.2" y="222.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.withoutPadding (40 samples, 0.03%)</title><rect x="85.2" y="243.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="88.2" y="254.0"></text>
</g>
<g>
<title>java.util.Base64$Encoder (40 samples, 0.03%)</title><rect x="85.2" y="227.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="88.2" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getClientSettings (489 samples, 0.32%)</title><rect x="85.5" y="243.0" width="3.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="88.5" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.frame.SettingsFrame (57 samples, 0.04%)</title><rect x="85.5" y="227.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="88.5" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getParameter (355 samples, 0.24%)</title><rect x="85.9" y="227.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="88.9" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getIntegerNetProperty (355 samples, 0.24%)</title><rect x="85.9" y="211.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="88.9" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/896644936.linkToTargetMethod (258 samples, 0.17%)</title><rect x="85.9" y="195.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="88.9" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (258 samples, 0.17%)</title><rect x="85.9" y="179.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="88.9" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$61/1212772528.get$Lambda (258 samples, 0.17%)</title><rect x="85.9" y="163.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="88.9" y="174.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Utils$$Lambda$61 (258 samples, 0.17%)</title><rect x="85.9" y="147.0" width="2.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="88.9" y="158.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (97 samples, 0.06%)</title><rect x="87.9" y="195.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="90.9" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$61/1212772528.run (97 samples, 0.06%)</title><rect x="87.9" y="179.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="90.9" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$getIntegerNetProperty$11 (97 samples, 0.06%)</title><rect x="87.9" y="163.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="90.9" y="174.0"></text>
</g>
<g>
<title>sun/net/NetProperties.getInteger (97 samples, 0.06%)</title><rect x="87.9" y="147.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="90.9" y="158.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (97 samples, 0.06%)</title><rect x="87.9" y="131.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="90.9" y="142.0"></text>
</g>
<g>
<title>java.lang.Integer (97 samples, 0.06%)</title><rect x="87.9" y="115.0" width="0.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="90.9" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (77 samples, 0.05%)</title><rect x="88.7" y="227.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="91.7" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (77 samples, 0.05%)</title><rect x="88.7" y="211.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="91.7" y="222.0"></text>
</g>
<g>
<title>int[] (77 samples, 0.05%)</title><rect x="88.7" y="195.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="91.7" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.toByteArray (188 samples, 0.12%)</title><rect x="89.3" y="243.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="92.3" y="254.0"></text>
</g>
<g>
<title>byte[] (106 samples, 0.07%)</title><rect x="89.3" y="227.0" width="0.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="92.3" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (82 samples, 0.05%)</title><rect x="90.1" y="227.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="93.1" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (82 samples, 0.05%)</title><rect x="90.1" y="211.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="93.1" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (82 samples, 0.05%)</title><rect x="90.1" y="195.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="93.1" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (535 samples, 0.35%)</title><rect x="90.8" y="259.0" width="4.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="93.8" y="270.0"></text>
</g>
<g>
<title>java.util.ArrayList (149 samples, 0.10%)</title><rect x="90.8" y="243.0" width="1.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="93.8" y="254.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (139 samples, 0.09%)</title><rect x="91.9" y="243.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="94.9" y="254.0"></text>
</g>
<g>
<title>java.lang.Object[] (139 samples, 0.09%)</title><rect x="91.9" y="227.0" width="1.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="94.9" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (247 samples, 0.16%)</title><rect x="93.0" y="243.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="96.0" y="254.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (247 samples, 0.16%)</title><rect x="93.0" y="227.0" width="2.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="96.0" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (49 samples, 0.03%)</title><rect x="95.0" y="323.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="98.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (49 samples, 0.03%)</title><rect x="95.0" y="307.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="98.0" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (49 samples, 0.03%)</title><rect x="95.0" y="291.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="98.0" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (2,156 samples, 1.43%)</title><rect x="95.3" y="371.0" width="16.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="98.3" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange (164 samples, 0.11%)</title><rect x="95.3" y="355.0" width="1.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="98.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (1,933 samples, 1.28%)</title><rect x="96.6" y="355.0" width="15.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="99.6" y="366.0"></text>
</g>
<g>
<title>java.util.LinkedList (57 samples, 0.04%)</title><rect x="96.8" y="339.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="99.8" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (39 samples, 0.03%)</title><rect x="97.3" y="339.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="100.3" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (105 samples, 0.07%)</title><rect x="97.6" y="339.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="100.6" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (105 samples, 0.07%)</title><rect x="97.6" y="323.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="100.6" y="334.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (105 samples, 0.07%)</title><rect x="97.6" y="307.0" width="0.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="100.6" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (49 samples, 0.03%)</title><rect x="98.4" y="339.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="101.4" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (49 samples, 0.03%)</title><rect x="98.4" y="323.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="101.4" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver (114 samples, 0.08%)</title><rect x="98.8" y="339.0" width="0.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="101.8" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher (88 samples, 0.06%)</title><rect x="99.7" y="339.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="102.7" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request (122 samples, 0.08%)</title><rect x="100.4" y="339.0" width="0.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="103.4" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (137 samples, 0.09%)</title><rect x="101.3" y="339.0" width="1.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="104.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (583 samples, 0.39%)</title><rect x="102.4" y="339.0" width="4.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="105.4" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (57 samples, 0.04%)</title><rect x="102.4" y="323.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="105.4" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (39 samples, 0.03%)</title><rect x="103.0" y="323.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="106.0" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (35 samples, 0.02%)</title><rect x="103.5" y="323.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="106.5" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (35 samples, 0.02%)</title><rect x="103.5" y="307.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="106.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$166/1615159449.get$Lambda (35 samples, 0.02%)</title><rect x="103.5" y="291.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="106.5" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$166 (35 samples, 0.02%)</title><rect x="103.5" y="275.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="106.5" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (39 samples, 0.03%)</title><rect x="103.8" y="323.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="106.8" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (39 samples, 0.03%)</title><rect x="103.8" y="307.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="106.8" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1TubeSubscriber (53 samples, 0.04%)</title><rect x="104.1" y="323.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="107.1" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (64 samples, 0.04%)</title><rect x="104.5" y="323.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="107.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (245 samples, 0.16%)</title><rect x="105.0" y="323.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="108.0" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (43 samples, 0.03%)</title><rect x="105.0" y="307.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="108.0" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (80 samples, 0.05%)</title><rect x="105.4" y="307.0" width="0.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="108.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.&lt;init&gt; (33 samples, 0.02%)</title><rect x="106.0" y="307.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="109.0" y="318.0"></text>
</g>
<g>
<title>java.lang.Object (33 samples, 0.02%)</title><rect x="106.0" y="291.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="109.0" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (89 samples, 0.06%)</title><rect x="106.3" y="307.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="109.3" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SchedulableTask (33 samples, 0.02%)</title><rect x="106.5" y="291.0" width="0.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="109.5" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (32 samples, 0.02%)</title><rect x="106.7" y="291.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="109.7" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (395 samples, 0.26%)</title><rect x="107.0" y="339.0" width="3.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="110.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (52 samples, 0.03%)</title><rect x="107.6" y="323.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="110.6" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (52 samples, 0.03%)</title><rect x="107.6" y="307.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="110.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (261 samples, 0.17%)</title><rect x="108.0" y="323.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="111.0" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (66 samples, 0.04%)</title><rect x="108.0" y="307.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="111.0" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (56 samples, 0.04%)</title><rect x="108.5" y="307.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="111.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (114 samples, 0.08%)</title><rect x="109.2" y="307.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="112.2" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (51 samples, 0.03%)</title><rect x="109.2" y="291.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="112.2" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (35 samples, 0.02%)</title><rect x="109.8" y="291.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="112.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (53 samples, 0.04%)</title><rect x="110.1" y="339.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="113.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (53 samples, 0.04%)</title><rect x="110.1" y="323.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="113.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (53 samples, 0.04%)</title><rect x="110.1" y="307.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="113.1" y="318.0"></text>
</g>
<g>
<title>java/util/HashMap.get (53 samples, 0.04%)</title><rect x="110.1" y="291.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="113.1" y="302.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (53 samples, 0.04%)</title><rect x="110.1" y="275.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="113.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (53 samples, 0.04%)</title><rect x="110.1" y="259.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="113.1" y="270.0"></text>
</g>
<g>
<title>java.lang.Object[] (53 samples, 0.04%)</title><rect x="110.1" y="243.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="113.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (165 samples, 0.11%)</title><rect x="110.5" y="339.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="113.5" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/896644936.linkToTargetMethod (38 samples, 0.03%)</title><rect x="110.5" y="323.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="113.5" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (38 samples, 0.03%)</title><rect x="110.5" y="307.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="113.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$147/2025473808.get$Lambda (38 samples, 0.03%)</title><rect x="110.5" y="291.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="113.5" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl$$Lambda$147 (38 samples, 0.03%)</title><rect x="110.5" y="275.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="113.5" y="286.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (127 samples, 0.08%)</title><rect x="110.8" y="323.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="113.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$147/2025473808.run (127 samples, 0.08%)</title><rect x="110.8" y="307.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="113.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (127 samples, 0.08%)</title><rect x="110.8" y="291.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="113.8" y="302.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress (38 samples, 0.03%)</title><rect x="110.8" y="275.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="113.8" y="286.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (89 samples, 0.06%)</title><rect x="111.1" y="275.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="114.1" y="286.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress$InetSocketAddressHolder (42 samples, 0.03%)</title><rect x="111.1" y="259.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="114.1" y="270.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (47 samples, 0.03%)</title><rect x="111.4" y="259.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="114.4" y="270.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (47 samples, 0.03%)</title><rect x="111.4" y="243.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="114.4" y="254.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (47 samples, 0.03%)</title><rect x="111.4" y="227.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="114.4" y="238.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (47 samples, 0.03%)</title><rect x="111.4" y="211.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="114.4" y="222.0"></text>
</g>
<g>
<title>java.net.InetAddress[] (47 samples, 0.03%)</title><rect x="111.4" y="195.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="114.4" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (59 samples, 0.04%)</title><rect x="111.8" y="355.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="114.8" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (59 samples, 0.04%)</title><rect x="111.8" y="339.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="114.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (61 samples, 0.04%)</title><rect x="112.2" y="435.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="115.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (61 samples, 0.04%)</title><rect x="112.2" y="419.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="115.2" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (61 samples, 0.04%)</title><rect x="112.2" y="403.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="115.2" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (59 samples, 0.04%)</title><rect x="112.7" y="467.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="115.7" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (59 samples, 0.04%)</title><rect x="112.7" y="451.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="115.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (59 samples, 0.04%)</title><rect x="112.7" y="435.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="115.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (59 samples, 0.04%)</title><rect x="112.7" y="419.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="115.7" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (59 samples, 0.04%)</title><rect x="112.7" y="403.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="115.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getConnectionFor (152 samples, 0.10%)</title><rect x="113.2" y="467.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="116.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyFor (86 samples, 0.06%)</title><rect x="113.2" y="451.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="116.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyString (86 samples, 0.06%)</title><rect x="113.2" y="435.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="116.2" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1970105444.linkToTargetMethod (86 samples, 0.06%)</title><rect x="113.2" y="419.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="116.2" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/561564308.invoke (86 samples, 0.06%)</title><rect x="113.2" y="403.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="116.2" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1681140543.invoke (86 samples, 0.06%)</title><rect x="113.2" y="387.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="116.2" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (86 samples, 0.06%)</title><rect x="113.2" y="371.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="116.2" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (86 samples, 0.06%)</title><rect x="113.2" y="355.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="116.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (86 samples, 0.06%)</title><rect x="113.2" y="339.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="116.2" y="350.0"></text>
</g>
<g>
<title>byte[] (86 samples, 0.06%)</title><rect x="113.2" y="323.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="116.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (66 samples, 0.04%)</title><rect x="113.8" y="451.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="116.8" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (66 samples, 0.04%)</title><rect x="113.8" y="435.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="116.8" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (2,474 samples, 1.64%)</title><rect x="114.4" y="643.0" width="19.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="117.4" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (2,294 samples, 1.52%)</title><rect x="114.4" y="627.0" width="17.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="117.4" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (2,287 samples, 1.52%)</title><rect x="114.4" y="611.0" width="17.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="117.4" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (2,287 samples, 1.52%)</title><rect x="114.4" y="595.0" width="17.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="117.4" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (2,287 samples, 1.52%)</title><rect x="114.4" y="579.0" width="17.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="117.4" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.take (180 samples, 0.12%)</title><rect x="132.3" y="627.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="135.3" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.take (180 samples, 0.12%)</title><rect x="132.3" y="611.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="135.3" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.awaitNanos (180 samples, 0.12%)</title><rect x="132.3" y="595.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="135.3" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (180 samples, 0.12%)</title><rect x="132.3" y="579.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="135.3" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (180 samples, 0.12%)</title><rect x="132.3" y="563.0" width="1.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="135.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$205/1532762392.run (1,168 samples, 0.77%)</title><rect x="133.7" y="643.0" width="9.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="136.7" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (1,168 samples, 0.77%)</title><rect x="133.7" y="627.0" width="9.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="136.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (1,168 samples, 0.77%)</title><rect x="133.7" y="611.0" width="9.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="136.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (1,168 samples, 0.77%)</title><rect x="133.7" y="595.0" width="9.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="136.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,168 samples, 0.77%)</title><rect x="133.7" y="579.0" width="9.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="136.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,168 samples, 0.77%)</title><rect x="133.7" y="563.0" width="9.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="136.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1,168 samples, 0.77%)</title><rect x="133.7" y="547.0" width="9.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="136.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1,168 samples, 0.77%)</title><rect x="133.7" y="531.0" width="9.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="136.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1,168 samples, 0.77%)</title><rect x="133.7" y="515.0" width="9.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="136.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (1,168 samples, 0.77%)</title><rect x="133.7" y="499.0" width="9.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="136.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (1,168 samples, 0.77%)</title><rect x="133.7" y="483.0" width="9.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="136.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (1,067 samples, 0.71%)</title><rect x="133.7" y="467.0" width="8.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="136.7" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (89 samples, 0.06%)</title><rect x="133.7" y="451.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="136.7" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (89 samples, 0.06%)</title><rect x="133.7" y="435.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="136.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$209/1904649501.get$Lambda (48 samples, 0.03%)</title><rect x="133.7" y="419.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="136.7" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$209 (48 samples, 0.03%)</title><rect x="133.7" y="403.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="136.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$221/36607840.get$Lambda (41 samples, 0.03%)</title><rect x="134.1" y="419.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="137.1" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$221 (41 samples, 0.03%)</title><rect x="134.1" y="403.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="137.1" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (978 samples, 0.65%)</title><rect x="134.4" y="451.0" width="7.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="137.4" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (75 samples, 0.05%)</title><rect x="134.4" y="435.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="137.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (903 samples, 0.60%)</title><rect x="135.0" y="435.0" width="7.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="138.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (903 samples, 0.60%)</title><rect x="135.0" y="419.0" width="7.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="138.0" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (903 samples, 0.60%)</title><rect x="135.0" y="403.0" width="7.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="138.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (335 samples, 0.22%)</title><rect x="135.0" y="387.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="138.0" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (105 samples, 0.07%)</title><rect x="135.0" y="371.0" width="0.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="138.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$217/1211777603.apply (223 samples, 0.15%)</title><rect x="135.8" y="371.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="138.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (223 samples, 0.15%)</title><rect x="135.8" y="355.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="138.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (223 samples, 0.15%)</title><rect x="135.8" y="339.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="138.8" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (48 samples, 0.03%)</title><rect x="135.8" y="323.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="138.8" y="334.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (48 samples, 0.03%)</title><rect x="135.8" y="307.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="138.8" y="318.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (48 samples, 0.03%)</title><rect x="135.8" y="291.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="138.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (175 samples, 0.12%)</title><rect x="136.2" y="323.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="139.2" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (40 samples, 0.03%)</title><rect x="136.2" y="307.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="139.2" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (40 samples, 0.03%)</title><rect x="136.2" y="291.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="139.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$222/1425534080.get$Lambda (40 samples, 0.03%)</title><rect x="136.2" y="275.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="139.2" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$222 (40 samples, 0.03%)</title><rect x="136.2" y="259.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="139.2" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (135 samples, 0.09%)</title><rect x="136.5" y="307.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="139.5" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (135 samples, 0.09%)</title><rect x="136.5" y="291.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="139.5" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (76 samples, 0.05%)</title><rect x="136.5" y="275.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="139.5" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (59 samples, 0.04%)</title><rect x="137.1" y="275.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="140.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (59 samples, 0.04%)</title><rect x="137.1" y="259.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="140.1" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (59 samples, 0.04%)</title><rect x="137.1" y="243.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="140.1" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (568 samples, 0.38%)</title><rect x="137.6" y="387.0" width="4.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="140.6" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (568 samples, 0.38%)</title><rect x="137.6" y="371.0" width="4.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="140.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$191/2106603000.apply (568 samples, 0.38%)</title><rect x="137.6" y="355.0" width="4.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="140.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (568 samples, 0.38%)</title><rect x="137.6" y="339.0" width="4.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="140.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (568 samples, 0.38%)</title><rect x="137.6" y="323.0" width="4.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="140.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$137/87340014.apply (568 samples, 0.38%)</title><rect x="137.6" y="307.0" width="4.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="140.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (568 samples, 0.38%)</title><rect x="137.6" y="291.0" width="4.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="140.6" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (37 samples, 0.02%)</title><rect x="137.6" y="275.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="140.6" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (37 samples, 0.02%)</title><rect x="137.6" y="259.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="140.6" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$217/1211777603.get$Lambda (37 samples, 0.02%)</title><rect x="137.6" y="243.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="140.6" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$217 (37 samples, 0.02%)</title><rect x="137.6" y="227.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="140.6" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (117 samples, 0.08%)</title><rect x="137.9" y="275.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="140.9" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (117 samples, 0.08%)</title><rect x="137.9" y="259.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="140.9" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (70 samples, 0.05%)</title><rect x="137.9" y="243.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="140.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (47 samples, 0.03%)</title><rect x="138.5" y="243.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="141.5" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (47 samples, 0.03%)</title><rect x="138.5" y="227.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="141.5" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (47 samples, 0.03%)</title><rect x="138.5" y="211.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="141.5" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.wrapForUpgrade (164 samples, 0.11%)</title><rect x="138.8" y="275.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="141.8" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (137 samples, 0.09%)</title><rect x="139.0" y="259.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="142.0" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (137 samples, 0.09%)</title><rect x="139.0" y="243.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="142.0" y="254.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (69 samples, 0.05%)</title><rect x="139.0" y="227.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="142.0" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (68 samples, 0.05%)</title><rect x="139.6" y="227.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="142.6" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (68 samples, 0.05%)</title><rect x="139.6" y="211.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="142.6" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (68 samples, 0.05%)</title><rect x="139.6" y="195.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="142.6" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (250 samples, 0.17%)</title><rect x="140.1" y="275.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="143.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.completeSubscriber (135 samples, 0.09%)</title><rect x="140.1" y="259.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="143.1" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1BodySubscriber$1 (74 samples, 0.05%)</title><rect x="140.1" y="243.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="143.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber$1.&lt;init&gt; (61 samples, 0.04%)</title><rect x="140.7" y="243.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="143.7" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.&lt;init&gt; (61 samples, 0.04%)</title><rect x="140.7" y="227.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="143.7" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (61 samples, 0.04%)</title><rect x="140.7" y="211.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="143.7" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (115 samples, 0.08%)</title><rect x="141.2" y="259.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="144.2" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (58 samples, 0.04%)</title><rect x="141.2" y="243.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="144.2" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (57 samples, 0.04%)</title><rect x="141.6" y="243.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="144.6" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (57 samples, 0.04%)</title><rect x="141.6" y="227.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="144.6" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (57 samples, 0.04%)</title><rect x="141.6" y="211.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="144.6" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (57 samples, 0.04%)</title><rect x="141.6" y="195.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="144.6" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (57 samples, 0.04%)</title><rect x="141.6" y="179.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="144.6" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (57 samples, 0.04%)</title><rect x="141.6" y="163.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="144.6" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (101 samples, 0.07%)</title><rect x="142.1" y="467.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="145.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (101 samples, 0.07%)</title><rect x="142.1" y="451.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="145.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (101 samples, 0.07%)</title><rect x="142.1" y="435.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="145.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (101 samples, 0.07%)</title><rect x="142.1" y="419.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="145.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (101 samples, 0.07%)</title><rect x="142.1" y="403.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="145.1" y="414.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (101 samples, 0.07%)</title><rect x="142.1" y="387.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="145.1" y="398.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (45 samples, 0.03%)</title><rect x="142.1" y="371.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="145.1" y="382.0"></text>
</g>
<g>
<title>java.nio.ByteBuffer[] (45 samples, 0.03%)</title><rect x="142.1" y="355.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="145.1" y="366.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (56 samples, 0.04%)</title><rect x="142.4" y="371.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="145.4" y="382.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (56 samples, 0.04%)</title><rect x="142.4" y="355.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="145.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (10,173 samples, 6.75%)</title><rect x="142.9" y="643.0" width="79.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="145.9" y="654.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (10,173 samples, 6.75%)</title><rect x="142.9" y="627.0" width="79.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="145.9" y="638.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (8,515 samples, 5.65%)</title><rect x="142.9" y="611.0" width="66.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="145.9" y="622.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$166/1615159449.run (8,515 samples, 5.65%)</title><rect x="142.9" y="595.0" width="66.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="145.9" y="606.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (8,515 samples, 5.65%)</title><rect x="142.9" y="579.0" width="66.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="145.9" y="590.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (152 samples, 0.10%)</title><rect x="142.9" y="563.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="145.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (152 samples, 0.10%)</title><rect x="142.9" y="547.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="145.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (152 samples, 0.10%)</title><rect x="142.9" y="531.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="145.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (152 samples, 0.10%)</title><rect x="142.9" y="515.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="145.9" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/623247230.linkToTargetMethod (95 samples, 0.06%)</title><rect x="142.9" y="499.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="145.9" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/773662650.invoke (95 samples, 0.06%)</title><rect x="142.9" y="483.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="145.9" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (95 samples, 0.06%)</title><rect x="142.9" y="467.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="145.9" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (95 samples, 0.06%)</title><rect x="142.9" y="451.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="145.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (95 samples, 0.06%)</title><rect x="142.9" y="435.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="145.9" y="446.0"></text>
</g>
<g>
<title>byte[] (95 samples, 0.06%)</title><rect x="142.9" y="419.0" width="0.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="145.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (57 samples, 0.04%)</title><rect x="143.6" y="499.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="146.6" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (57 samples, 0.04%)</title><rect x="143.6" y="483.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="146.6" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (57 samples, 0.04%)</title><rect x="143.6" y="467.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="146.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$206/1914759753.get$Lambda (57 samples, 0.04%)</title><rect x="143.6" y="451.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="146.6" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$206 (57 samples, 0.04%)</title><rect x="143.6" y="435.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="146.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (8,363 samples, 5.55%)</title><rect x="144.1" y="563.0" width="65.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="147.1" y="574.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (8,363 samples, 5.55%)</title><rect x="144.1" y="547.0" width="65.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="147.1" y="558.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (8,363 samples, 5.55%)</title><rect x="144.1" y="531.0" width="65.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="147.1" y="542.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (8,363 samples, 5.55%)</title><rect x="144.1" y="515.0" width="65.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="147.1" y="526.0">jdk/int..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (3,448 samples, 2.29%)</title><rect x="144.1" y="499.0" width="26.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="147.1" y="510.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (3,448 samples, 2.29%)</title><rect x="144.1" y="483.0" width="26.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="147.1" y="494.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (3,448 samples, 2.29%)</title><rect x="144.1" y="467.0" width="26.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="147.1" y="478.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (3,448 samples, 2.29%)</title><rect x="144.1" y="451.0" width="26.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="147.1" y="462.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (3,448 samples, 2.29%)</title><rect x="144.1" y="435.0" width="26.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="147.1" y="446.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (3,448 samples, 2.29%)</title><rect x="144.1" y="419.0" width="26.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="147.1" y="430.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (3,448 samples, 2.29%)</title><rect x="144.1" y="403.0" width="26.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="147.1" y="414.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (3,341 samples, 2.22%)</title><rect x="144.1" y="387.0" width="26.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="147.1" y="398.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (3,341 samples, 2.22%)</title><rect x="144.1" y="371.0" width="26.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="147.1" y="382.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (3,286 samples, 2.18%)</title><rect x="144.1" y="355.0" width="25.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="147.1" y="366.0">j..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (65 samples, 0.04%)</title><rect x="144.1" y="339.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="147.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$218/709564748.apply (67 samples, 0.04%)</title><rect x="144.6" y="339.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="147.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$wrapForUpgrade$10 (67 samples, 0.04%)</title><rect x="144.6" y="323.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="147.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkForUpgradeAsync (67 samples, 0.04%)</title><rect x="144.6" y="307.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="147.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (67 samples, 0.04%)</title><rect x="144.6" y="291.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="147.6" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (67 samples, 0.04%)</title><rect x="144.6" y="275.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="147.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$134/2113557447.apply (3,027 samples, 2.01%)</title><rect x="145.1" y="339.0" width="23.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="148.1" y="350.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (3,027 samples, 2.01%)</title><rect x="145.1" y="323.0" width="23.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="148.1" y="334.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (43 samples, 0.03%)</title><rect x="145.1" y="307.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="148.1" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (43 samples, 0.03%)</title><rect x="145.1" y="291.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="148.1" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$245/917709507.get$Lambda (43 samples, 0.03%)</title><rect x="145.1" y="275.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="148.1" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$245 (43 samples, 0.03%)</title><rect x="145.1" y="259.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="148.1" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (162 samples, 0.11%)</title><rect x="145.4" y="307.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="148.4" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (162 samples, 0.11%)</title><rect x="145.4" y="291.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="148.4" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (83 samples, 0.06%)</title><rect x="145.4" y="275.0" width="0.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="148.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (79 samples, 0.05%)</title><rect x="146.1" y="275.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="149.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (79 samples, 0.05%)</title><rect x="146.1" y="259.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="149.1" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (79 samples, 0.05%)</title><rect x="146.1" y="243.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="149.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (2,822 samples, 1.87%)</title><rect x="146.7" y="307.0" width="22.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="149.7" y="318.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (167 samples, 0.11%)</title><rect x="146.9" y="291.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="149.9" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (167 samples, 0.11%)</title><rect x="146.9" y="275.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="149.9" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (93 samples, 0.06%)</title><rect x="146.9" y="259.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="149.9" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (74 samples, 0.05%)</title><rect x="147.6" y="259.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="150.6" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (74 samples, 0.05%)</title><rect x="147.6" y="243.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="150.6" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (74 samples, 0.05%)</title><rect x="147.6" y="227.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="150.6" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (2,632 samples, 1.75%)</title><rect x="148.2" y="291.0" width="20.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="151.2" y="302.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers$$Lambda$129/1384033106.apply (181 samples, 0.12%)</title><rect x="148.2" y="275.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="151.2" y="286.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers.lambda$ofByteArray$12 (181 samples, 0.12%)</title><rect x="148.2" y="259.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="151.2" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.ofByteArray (181 samples, 0.12%)</title><rect x="148.2" y="243.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="151.2" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseSubscribers$ByteArraySubscriber (77 samples, 0.05%)</title><rect x="148.2" y="227.0" width="0.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="151.2" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.&lt;init&gt; (104 samples, 0.07%)</title><rect x="148.8" y="227.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="151.8" y="238.0"></text>
</g>
<g>
<title>java.util.ArrayList (47 samples, 0.03%)</title><rect x="148.8" y="211.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="151.8" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (57 samples, 0.04%)</title><rect x="149.1" y="211.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="152.1" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (2,451 samples, 1.63%)</title><rect x="149.6" y="275.0" width="19.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="152.6" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (80 samples, 0.05%)</title><rect x="149.6" y="259.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="152.6" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (80 samples, 0.05%)</title><rect x="149.6" y="243.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="152.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$241/404297872.get$Lambda (40 samples, 0.03%)</title><rect x="149.6" y="227.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="152.6" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$241 (40 samples, 0.03%)</title><rect x="149.6" y="211.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="152.6" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$243/1109072755.get$Lambda (40 samples, 0.03%)</title><rect x="149.9" y="227.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="152.9" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$243 (40 samples, 0.03%)</title><rect x="149.9" y="211.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="152.9" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/525165928.linkToTargetMethod (90 samples, 0.06%)</title><rect x="150.2" y="259.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="153.2" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1057221162.invokeStatic (90 samples, 0.06%)</title><rect x="150.2" y="243.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="153.2" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$232/853075107.get$Lambda (90 samples, 0.06%)</title><rect x="150.2" y="227.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="153.2" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$232 (90 samples, 0.06%)</title><rect x="150.2" y="211.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="153.2" y="222.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (490 samples, 0.33%)</title><rect x="150.9" y="259.0" width="3.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="153.9" y="270.0"></text>
</g>
<g>
<title>java/util/Collection.stream (188 samples, 0.12%)</title><rect x="150.9" y="243.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="153.9" y="254.0"></text>
</g>
<g>
<title>java/util/List.spliterator (58 samples, 0.04%)</title><rect x="150.9" y="227.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="153.9" y="238.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (58 samples, 0.04%)</title><rect x="150.9" y="211.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="153.9" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (130 samples, 0.09%)</title><rect x="151.4" y="227.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="154.4" y="238.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (130 samples, 0.09%)</title><rect x="151.4" y="211.0" width="1.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="154.4" y="222.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (175 samples, 0.12%)</title><rect x="152.4" y="243.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="155.4" y="254.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (175 samples, 0.12%)</title><rect x="152.4" y="227.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="155.4" y="238.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (175 samples, 0.12%)</title><rect x="152.4" y="211.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="155.4" y="222.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (61 samples, 0.04%)</title><rect x="152.4" y="195.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="155.4" y="206.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (61 samples, 0.04%)</title><rect x="152.4" y="179.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="155.4" y="190.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.opWrapSink (61 samples, 0.04%)</title><rect x="152.4" y="163.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="155.4" y="174.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5$1 (61 samples, 0.04%)</title><rect x="152.4" y="147.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="155.4" y="158.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong$$Lambda$229/722914434.get (45 samples, 0.03%)</title><rect x="152.9" y="195.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="155.9" y="206.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfLong (45 samples, 0.03%)</title><rect x="152.9" y="179.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="155.9" y="190.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (69 samples, 0.05%)</title><rect x="153.2" y="195.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="156.2" y="206.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (69 samples, 0.05%)</title><rect x="153.2" y="179.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="156.2" y="190.0"></text>
</g>
<g>
<title>java/util/OptionalLong.of (69 samples, 0.05%)</title><rect x="153.2" y="163.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="156.2" y="174.0"></text>
</g>
<g>
<title>java.util.OptionalLong (69 samples, 0.05%)</title><rect x="153.2" y="147.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="156.2" y="158.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.mapToLong (127 samples, 0.08%)</title><rect x="153.8" y="243.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="156.8" y="254.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5 (126 samples, 0.08%)</title><rect x="153.8" y="227.0" width="1.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="156.8" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (338 samples, 0.22%)</title><rect x="154.8" y="259.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="157.8" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (172 samples, 0.11%)</title><rect x="154.8" y="243.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="157.8" y="254.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (95 samples, 0.06%)</title><rect x="154.8" y="227.0" width="0.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="157.8" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (77 samples, 0.05%)</title><rect x="155.5" y="227.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="158.5" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (77 samples, 0.05%)</title><rect x="155.5" y="211.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="158.5" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (77 samples, 0.05%)</title><rect x="155.5" y="195.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="158.5" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (166 samples, 0.11%)</title><rect x="156.1" y="243.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="159.1" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (166 samples, 0.11%)</title><rect x="156.1" y="227.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="159.1" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (102 samples, 0.07%)</title><rect x="156.1" y="211.0" width="0.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="159.1" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (64 samples, 0.04%)</title><rect x="156.9" y="211.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="159.9" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (64 samples, 0.04%)</title><rect x="156.9" y="195.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="159.9" y="206.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (64 samples, 0.04%)</title><rect x="156.9" y="179.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="159.9" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$ClientRefCountTracker (53 samples, 0.04%)</title><rect x="157.4" y="259.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="160.4" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$Http1BodySubscriber (68 samples, 0.05%)</title><rect x="157.8" y="259.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="160.8" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (56 samples, 0.04%)</title><rect x="158.4" y="259.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="161.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.&lt;init&gt; (52 samples, 0.03%)</title><rect x="158.8" y="259.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="161.8" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicBoolean (52 samples, 0.03%)</title><rect x="158.8" y="243.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="161.8" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1,224 samples, 0.81%)</title><rect x="159.2" y="259.0" width="9.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="162.2" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$232/853075107.run (1,224 samples, 0.81%)</title><rect x="159.2" y="243.0" width="9.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="162.2" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (1,224 samples, 0.81%)</title><rect x="159.2" y="227.0" width="9.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="162.2" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (134 samples, 0.09%)</title><rect x="159.2" y="211.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="162.2" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (134 samples, 0.09%)</title><rect x="159.2" y="195.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="162.2" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$234/1815637731.get$Lambda (38 samples, 0.03%)</title><rect x="159.4" y="179.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="162.4" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$234 (38 samples, 0.03%)</title><rect x="159.4" y="163.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="162.4" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$237/952850743.get$Lambda (67 samples, 0.04%)</title><rect x="159.7" y="179.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="162.7" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$237 (67 samples, 0.04%)</title><rect x="159.7" y="163.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="162.7" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (141 samples, 0.09%)</title><rect x="160.2" y="211.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="163.2" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (141 samples, 0.09%)</title><rect x="160.2" y="195.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="163.2" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (77 samples, 0.05%)</title><rect x="160.2" y="179.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="163.2" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (64 samples, 0.04%)</title><rect x="160.9" y="179.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="163.9" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (64 samples, 0.04%)</title><rect x="160.9" y="163.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="163.9" y="174.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (64 samples, 0.04%)</title><rect x="160.9" y="147.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="163.9" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent (92 samples, 0.06%)</title><rect x="161.4" y="211.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="164.4" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.start (65 samples, 0.04%)</title><rect x="162.1" y="211.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="165.1" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (65 samples, 0.04%)</title><rect x="162.1" y="195.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="165.1" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (207 samples, 0.14%)</title><rect x="162.6" y="211.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="165.6" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (207 samples, 0.14%)</title><rect x="162.6" y="195.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="165.6" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (53 samples, 0.04%)</title><rect x="162.6" y="179.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="165.6" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (53 samples, 0.04%)</title><rect x="162.6" y="163.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="165.6" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$238/632069876.get$Lambda (53 samples, 0.04%)</title><rect x="162.6" y="147.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="165.6" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpConnection$TrailingOperations$$Lambda$238 (53 samples, 0.04%)</title><rect x="162.6" y="131.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="165.6" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (154 samples, 0.10%)</title><rect x="163.0" y="179.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="166.0" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (154 samples, 0.10%)</title><rect x="163.0" y="163.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="166.0" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (154 samples, 0.10%)</title><rect x="163.0" y="147.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="166.0" y="158.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (78 samples, 0.05%)</title><rect x="163.0" y="131.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="166.0" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (76 samples, 0.05%)</title><rect x="163.6" y="131.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="166.6" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (76 samples, 0.05%)</title><rect x="163.6" y="115.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="166.6" y="126.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (76 samples, 0.05%)</title><rect x="163.6" y="99.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="166.6" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (194 samples, 0.13%)</title><rect x="164.2" y="211.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="167.2" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (194 samples, 0.13%)</title><rect x="164.2" y="195.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="167.2" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1357563986.invoke (194 samples, 0.13%)</title><rect x="164.2" y="179.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="167.2" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (194 samples, 0.13%)</title><rect x="164.2" y="163.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="167.2" y="174.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (58 samples, 0.04%)</title><rect x="164.2" y="147.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="167.2" y="158.0"></text>
</g>
<g>
<title>java.lang.String (58 samples, 0.04%)</title><rect x="164.2" y="131.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="167.2" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (136 samples, 0.09%)</title><rect x="164.7" y="147.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="167.7" y="158.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (136 samples, 0.09%)</title><rect x="164.7" y="131.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="167.7" y="142.0"></text>
</g>
<g>
<title>byte[] (136 samples, 0.09%)</title><rect x="164.7" y="115.0" width="1.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="167.7" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (391 samples, 0.26%)</title><rect x="165.7" y="211.0" width="3.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="168.7" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent$FixedLengthBodyParser (125 samples, 0.08%)</title><rect x="165.7" y="195.0" width="1.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="168.7" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (266 samples, 0.18%)</title><rect x="166.7" y="195.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="169.7" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (266 samples, 0.18%)</title><rect x="166.7" y="179.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="169.7" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1357563986.invoke (266 samples, 0.18%)</title><rect x="166.7" y="163.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="169.7" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (266 samples, 0.18%)</title><rect x="166.7" y="147.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="169.7" y="158.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (56 samples, 0.04%)</title><rect x="166.7" y="131.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="169.7" y="142.0"></text>
</g>
<g>
<title>java.lang.String (56 samples, 0.04%)</title><rect x="166.7" y="115.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="169.7" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (210 samples, 0.14%)</title><rect x="167.1" y="131.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="170.1" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (210 samples, 0.14%)</title><rect x="167.1" y="115.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="170.1" y="126.0"></text>
</g>
<g>
<title>byte[] (210 samples, 0.14%)</title><rect x="167.1" y="99.0" width="1.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="170.1" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$192/1158665635.apply (127 samples, 0.08%)</title><rect x="168.8" y="339.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="171.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (127 samples, 0.08%)</title><rect x="168.8" y="323.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="171.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (64 samples, 0.04%)</title><rect x="168.8" y="307.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="171.8" y="318.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (64 samples, 0.04%)</title><rect x="168.8" y="291.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="171.8" y="302.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (64 samples, 0.04%)</title><rect x="168.8" y="275.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="171.8" y="286.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (64 samples, 0.04%)</title><rect x="168.8" y="259.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="171.8" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (63 samples, 0.04%)</title><rect x="169.3" y="307.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="172.3" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (63 samples, 0.04%)</title><rect x="169.3" y="291.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="172.3" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (55 samples, 0.04%)</title><rect x="169.8" y="355.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="172.8" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (55 samples, 0.04%)</title><rect x="169.8" y="339.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="172.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$193/194868316.apply (55 samples, 0.04%)</title><rect x="169.8" y="323.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="172.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (55 samples, 0.04%)</title><rect x="169.8" y="307.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="172.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (55 samples, 0.04%)</title><rect x="169.8" y="291.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="172.8" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (55 samples, 0.04%)</title><rect x="169.8" y="275.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="172.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$222/1425534080.apply (107 samples, 0.07%)</title><rect x="170.2" y="387.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="173.2" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (107 samples, 0.07%)</title><rect x="170.2" y="371.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="173.2" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Response (107 samples, 0.07%)</title><rect x="170.2" y="355.0" width="0.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="173.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (4,915 samples, 3.26%)</title><rect x="171.0" y="499.0" width="38.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="174.0" y="510.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (322 samples, 0.21%)</title><rect x="171.0" y="483.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="174.0" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (322 samples, 0.21%)</title><rect x="171.0" y="467.0" width="2.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="174.0" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (322 samples, 0.21%)</title><rect x="171.0" y="451.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="174.0" y="462.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (322 samples, 0.21%)</title><rect x="171.0" y="435.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="174.0" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (322 samples, 0.21%)</title><rect x="171.0" y="419.0" width="2.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="174.0" y="430.0"></text>
</g>
<g>
<title>byte[] (322 samples, 0.21%)</title><rect x="171.0" y="403.0" width="2.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="174.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (337 samples, 0.22%)</title><rect x="173.6" y="483.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="176.6" y="494.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (51 samples, 0.03%)</title><rect x="173.6" y="467.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="176.6" y="478.0"></text>
</g>
<g>
<title>java/lang/String.substring (39 samples, 0.03%)</title><rect x="174.0" y="467.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="177.0" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (39 samples, 0.03%)</title><rect x="174.0" y="451.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="177.0" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (39 samples, 0.03%)</title><rect x="174.0" y="435.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="177.0" y="446.0"></text>
</g>
<g>
<title>byte[] (39 samples, 0.03%)</title><rect x="174.0" y="419.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="177.0" y="430.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (64 samples, 0.04%)</title><rect x="174.3" y="467.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="177.3" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (64 samples, 0.04%)</title><rect x="174.3" y="451.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="177.3" y="462.0"></text>
</g>
<g>
<title>byte[] (64 samples, 0.04%)</title><rect x="174.3" y="435.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="177.3" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (183 samples, 0.12%)</title><rect x="174.8" y="467.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="177.8" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (183 samples, 0.12%)</title><rect x="174.8" y="451.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="177.8" y="462.0"></text>
</g>
<g>
<title>java.lang.String (105 samples, 0.07%)</title><rect x="174.8" y="435.0" width="0.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="177.8" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (78 samples, 0.05%)</title><rect x="175.6" y="435.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="178.6" y="446.0"></text>
</g>
<g>
<title>byte[] (78 samples, 0.05%)</title><rect x="175.6" y="419.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="178.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (1,286 samples, 0.85%)</title><rect x="176.2" y="483.0" width="10.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="179.2" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (1,286 samples, 0.85%)</title><rect x="176.2" y="467.0" width="10.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="179.2" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (1,286 samples, 0.85%)</title><rect x="176.2" y="451.0" width="10.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="179.2" y="462.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (41 samples, 0.03%)</title><rect x="176.2" y="435.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="179.2" y="446.0"></text>
</g>
<g>
<title>java.util.ArrayList (48 samples, 0.03%)</title><rect x="176.5" y="435.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="179.5" y="446.0"></text>
</g>
<g>
<title>java.util.TreeMap (118 samples, 0.08%)</title><rect x="176.9" y="435.0" width="0.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="179.9" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (67 samples, 0.04%)</title><rect x="178.0" y="435.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="181.0" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (67 samples, 0.04%)</title><rect x="178.0" y="419.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="181.0" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$126/1936481830.get$Lambda (67 samples, 0.04%)</title><rect x="178.0" y="403.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="181.0" y="414.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$126 (67 samples, 0.04%)</title><rect x="178.0" y="387.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="181.0" y="398.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (71 samples, 0.05%)</title><rect x="178.5" y="435.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="181.5" y="446.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (71 samples, 0.05%)</title><rect x="178.5" y="419.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="181.5" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (808 samples, 0.54%)</title><rect x="179.1" y="435.0" width="6.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="182.1" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$126/1936481830.accept (808 samples, 0.54%)</title><rect x="179.1" y="419.0" width="6.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="182.1" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (808 samples, 0.54%)</title><rect x="179.1" y="403.0" width="6.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="182.1" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (133 samples, 0.09%)</title><rect x="179.1" y="387.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="182.1" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (133 samples, 0.09%)</title><rect x="179.1" y="371.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="182.1" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$128/2001978515.get$Lambda (133 samples, 0.09%)</title><rect x="179.1" y="355.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="182.1" y="366.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$128 (133 samples, 0.09%)</title><rect x="179.1" y="339.0" width="1.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="182.1" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (125 samples, 0.08%)</title><rect x="180.1" y="387.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="183.1" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$128/2001978515.accept (125 samples, 0.08%)</title><rect x="180.1" y="371.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="183.1" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (125 samples, 0.08%)</title><rect x="180.1" y="355.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="183.1" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (125 samples, 0.08%)</title><rect x="180.1" y="339.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="183.1" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (125 samples, 0.08%)</title><rect x="180.1" y="323.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="183.1" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (125 samples, 0.08%)</title><rect x="180.1" y="307.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="183.1" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (125 samples, 0.08%)</title><rect x="180.1" y="291.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="183.1" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (125 samples, 0.08%)</title><rect x="180.1" y="275.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="183.1" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (125 samples, 0.08%)</title><rect x="180.1" y="259.0" width="1.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="183.1" y="270.0"></text>
</g>
<g>
<title>java/util/List.copyOf (287 samples, 0.19%)</title><rect x="181.1" y="387.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="184.1" y="398.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (287 samples, 0.19%)</title><rect x="181.1" y="371.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="184.1" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (164 samples, 0.11%)</title><rect x="181.1" y="355.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="184.1" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (164 samples, 0.11%)</title><rect x="181.1" y="339.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="184.1" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (164 samples, 0.11%)</title><rect x="181.1" y="323.0" width="1.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="184.1" y="334.0"></text>
</g>
<g>
<title>java/util/List.of (123 samples, 0.08%)</title><rect x="182.4" y="355.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="185.4" y="366.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (123 samples, 0.08%)</title><rect x="182.4" y="339.0" width="0.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="185.4" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (263 samples, 0.17%)</title><rect x="183.3" y="387.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="186.3" y="398.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (263 samples, 0.17%)</title><rect x="183.3" y="371.0" width="2.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="186.3" y="382.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (113 samples, 0.07%)</title><rect x="185.4" y="435.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="188.4" y="446.0"></text>
</g>
<g>
<title>java.util.TreeMap (113 samples, 0.07%)</title><rect x="185.4" y="419.0" width="0.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="188.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (2,970 samples, 1.97%)</title><rect x="186.3" y="483.0" width="23.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="189.3" y="494.0">j..</text>
</g>
<g>
<title>java.lang.StringBuilder (129 samples, 0.09%)</title><rect x="186.3" y="467.0" width="1.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="189.3" y="478.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (191 samples, 0.13%)</title><rect x="187.3" y="467.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="190.3" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (191 samples, 0.13%)</title><rect x="187.3" y="451.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="190.3" y="462.0"></text>
</g>
<g>
<title>byte[] (191 samples, 0.13%)</title><rect x="187.3" y="435.0" width="1.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="190.3" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (425 samples, 0.28%)</title><rect x="188.8" y="467.0" width="3.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="191.8" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (425 samples, 0.28%)</title><rect x="188.8" y="451.0" width="3.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="191.8" y="462.0"></text>
</g>
<g>
<title>java.lang.String (160 samples, 0.11%)</title><rect x="188.8" y="435.0" width="1.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="191.8" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (265 samples, 0.18%)</title><rect x="190.0" y="435.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="193.0" y="446.0"></text>
</g>
<g>
<title>byte[] (265 samples, 0.18%)</title><rect x="190.0" y="419.0" width="2.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="193.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (2,225 samples, 1.48%)</title><rect x="192.1" y="467.0" width="17.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="195.1" y="478.0"></text>
</g>
<g>
<title>java/lang/String.substring (695 samples, 0.46%)</title><rect x="192.1" y="451.0" width="5.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="195.1" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (695 samples, 0.46%)</title><rect x="192.1" y="435.0" width="5.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="195.1" y="446.0"></text>
</g>
<g>
<title>java.lang.String (298 samples, 0.20%)</title><rect x="192.1" y="419.0" width="2.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="195.1" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (397 samples, 0.26%)</title><rect x="194.4" y="419.0" width="3.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="197.4" y="430.0"></text>
</g>
<g>
<title>byte[] (397 samples, 0.26%)</title><rect x="194.4" y="403.0" width="3.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="197.4" y="414.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (359 samples, 0.24%)</title><rect x="197.5" y="451.0" width="2.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="200.5" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (359 samples, 0.24%)</title><rect x="197.5" y="435.0" width="2.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="200.5" y="446.0"></text>
</g>
<g>
<title>byte[] (191 samples, 0.13%)</title><rect x="197.5" y="419.0" width="1.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="200.5" y="430.0"></text>
</g>
<g>
<title>java.lang.String (168 samples, 0.11%)</title><rect x="199.0" y="419.0" width="1.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="202.0" y="430.0"></text>
</g>
<g>
<title>java/lang/String.trim (330 samples, 0.22%)</title><rect x="200.4" y="451.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="203.4" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (330 samples, 0.22%)</title><rect x="200.4" y="435.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="203.4" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (330 samples, 0.22%)</title><rect x="200.4" y="419.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="203.4" y="430.0"></text>
</g>
<g>
<title>java.lang.String (163 samples, 0.11%)</title><rect x="200.4" y="403.0" width="1.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="203.4" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (167 samples, 0.11%)</title><rect x="201.6" y="403.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="204.6" y="414.0"></text>
</g>
<g>
<title>byte[] (167 samples, 0.11%)</title><rect x="201.6" y="387.0" width="1.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="204.6" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (363 samples, 0.24%)</title><rect x="202.9" y="451.0" width="2.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="205.9" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (363 samples, 0.24%)</title><rect x="202.9" y="435.0" width="2.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="205.9" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (363 samples, 0.24%)</title><rect x="202.9" y="419.0" width="2.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="205.9" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (363 samples, 0.24%)</title><rect x="202.9" y="403.0" width="2.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="205.9" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (363 samples, 0.24%)</title><rect x="202.9" y="387.0" width="2.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="205.9" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (363 samples, 0.24%)</title><rect x="202.9" y="371.0" width="2.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="205.9" y="382.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (478 samples, 0.32%)</title><rect x="205.8" y="451.0" width="3.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="208.8" y="462.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (197 samples, 0.13%)</title><rect x="205.8" y="435.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="208.8" y="446.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (197 samples, 0.13%)</title><rect x="205.8" y="419.0" width="1.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="208.8" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (149 samples, 0.10%)</title><rect x="207.3" y="435.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="210.3" y="446.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (149 samples, 0.10%)</title><rect x="207.3" y="419.0" width="1.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="210.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser$$Lambda$226/54037925.apply (132 samples, 0.09%)</title><rect x="208.5" y="435.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="211.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.lambda$addHeaderFromString$0 (132 samples, 0.09%)</title><rect x="208.5" y="419.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="211.5" y="430.0"></text>
</g>
<g>
<title>java.util.ArrayList (132 samples, 0.09%)</title><rect x="208.5" y="403.0" width="1.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="211.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (1,658 samples, 1.10%)</title><rect x="209.5" y="611.0" width="13.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="212.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1,658 samples, 1.10%)</title><rect x="209.5" y="595.0" width="13.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="212.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (1,658 samples, 1.10%)</title><rect x="209.5" y="579.0" width="13.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="212.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$166/1615159449.run (1,658 samples, 1.10%)</title><rect x="209.5" y="563.0" width="13.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="212.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (1,658 samples, 1.10%)</title><rect x="209.5" y="547.0" width="13.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="212.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (242 samples, 0.16%)</title><rect x="209.5" y="531.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="212.5" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (86 samples, 0.06%)</title><rect x="209.5" y="515.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="212.5" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (86 samples, 0.06%)</title><rect x="209.5" y="499.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="212.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$184/66712357.get$Lambda (42 samples, 0.03%)</title><rect x="209.5" y="483.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="212.5" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$184 (42 samples, 0.03%)</title><rect x="209.5" y="467.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="212.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$185/1905563662.get$Lambda (44 samples, 0.03%)</title><rect x="209.8" y="483.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="212.8" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$185 (44 samples, 0.03%)</title><rect x="209.8" y="467.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="212.8" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (76 samples, 0.05%)</title><rect x="210.2" y="515.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="213.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (80 samples, 0.05%)</title><rect x="210.8" y="515.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="213.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (80 samples, 0.05%)</title><rect x="210.8" y="499.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="213.8" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (32 samples, 0.02%)</title><rect x="210.8" y="483.0" width="0.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="213.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (48 samples, 0.03%)</title><rect x="211.0" y="483.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="214.0" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (48 samples, 0.03%)</title><rect x="211.0" y="467.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="214.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.tryAsyncReceive (1,412 samples, 0.94%)</title><rect x="211.4" y="531.0" width="11.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="214.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (1,412 samples, 0.94%)</title><rect x="211.4" y="515.0" width="11.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="214.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (1,412 samples, 0.94%)</title><rect x="211.4" y="499.0" width="11.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="214.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (1,412 samples, 0.94%)</title><rect x="211.4" y="483.0" width="11.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="214.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (1,412 samples, 0.94%)</title><rect x="211.4" y="467.0" width="11.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="214.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (1,412 samples, 0.94%)</title><rect x="211.4" y="451.0" width="11.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="214.4" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (97 samples, 0.06%)</title><rect x="211.4" y="435.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="214.4" y="446.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (97 samples, 0.06%)</title><rect x="211.4" y="419.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="214.4" y="430.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (97 samples, 0.06%)</title><rect x="211.4" y="403.0" width="0.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="214.4" y="414.0"></text>
</g>
<g>
<title>java/util/List.of (67 samples, 0.04%)</title><rect x="212.2" y="435.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="215.2" y="446.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (67 samples, 0.04%)</title><rect x="212.2" y="419.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="215.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$233/1245151766.run (823 samples, 0.55%)</title><rect x="212.7" y="435.0" width="6.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="215.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (823 samples, 0.55%)</title><rect x="212.7" y="419.0" width="6.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="215.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (823 samples, 0.55%)</title><rect x="212.7" y="403.0" width="6.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="215.7" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (282 samples, 0.19%)</title><rect x="212.7" y="387.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="215.7" y="398.0"></text>
</g>
<g>
<title>java/util/Collection.stream (196 samples, 0.13%)</title><rect x="212.7" y="371.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="215.7" y="382.0"></text>
</g>
<g>
<title>java/util/List.spliterator (84 samples, 0.06%)</title><rect x="212.7" y="355.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="215.7" y="366.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (84 samples, 0.06%)</title><rect x="212.7" y="339.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="215.7" y="350.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (112 samples, 0.07%)</title><rect x="213.4" y="355.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="216.4" y="366.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (112 samples, 0.07%)</title><rect x="213.4" y="339.0" width="0.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="216.4" y="350.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (86 samples, 0.06%)</title><rect x="214.2" y="371.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="217.2" y="382.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (86 samples, 0.06%)</title><rect x="214.2" y="355.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="217.2" y="366.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (86 samples, 0.06%)</title><rect x="214.2" y="339.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="217.2" y="350.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$52/78204644.get (51 samples, 0.03%)</title><rect x="214.2" y="323.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="217.2" y="334.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (51 samples, 0.03%)</title><rect x="214.2" y="307.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="217.2" y="318.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (35 samples, 0.02%)</title><rect x="214.6" y="323.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="217.6" y="334.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (35 samples, 0.02%)</title><rect x="214.6" y="307.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="217.6" y="318.0"></text>
</g>
<g>
<title>java/util/Optional.of (35 samples, 0.02%)</title><rect x="214.6" y="291.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="217.6" y="302.0"></text>
</g>
<g>
<title>java.util.Optional (35 samples, 0.02%)</title><rect x="214.6" y="275.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="217.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (541 samples, 0.36%)</title><rect x="214.9" y="387.0" width="4.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="217.9" y="398.0"></text>
</g>
<g>
<title>java/time/Instant.now (44 samples, 0.03%)</title><rect x="214.9" y="371.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="217.9" y="382.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (44 samples, 0.03%)</title><rect x="214.9" y="355.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="217.9" y="366.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (44 samples, 0.03%)</title><rect x="214.9" y="339.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="217.9" y="350.0"></text>
</g>
<g>
<title>java/time/Instant.create (44 samples, 0.03%)</title><rect x="214.9" y="323.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="217.9" y="334.0"></text>
</g>
<g>
<title>java.time.Instant (44 samples, 0.03%)</title><rect x="214.9" y="307.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="217.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (497 samples, 0.33%)</title><rect x="215.2" y="371.0" width="3.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="218.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (200 samples, 0.13%)</title><rect x="215.2" y="355.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="218.2" y="366.0"></text>
</g>
<g>
<title>java/time/Instant.plus (55 samples, 0.04%)</title><rect x="215.2" y="339.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="218.2" y="350.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (55 samples, 0.04%)</title><rect x="215.2" y="323.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="218.2" y="334.0"></text>
</g>
<g>
<title>java/time/Instant.plus (55 samples, 0.04%)</title><rect x="215.2" y="307.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="218.2" y="318.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (55 samples, 0.04%)</title><rect x="215.2" y="291.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="218.2" y="302.0"></text>
</g>
<g>
<title>java/time/Instant.create (55 samples, 0.04%)</title><rect x="215.2" y="275.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="218.2" y="286.0"></text>
</g>
<g>
<title>java.time.Instant (55 samples, 0.04%)</title><rect x="215.2" y="259.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="218.2" y="270.0"></text>
</g>
<g>
<title>java/time/Instant.truncatedTo (43 samples, 0.03%)</title><rect x="215.7" y="339.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="218.7" y="350.0"></text>
</g>
<g>
<title>java/time/Instant.plusNanos (43 samples, 0.03%)</title><rect x="215.7" y="323.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="218.7" y="334.0"></text>
</g>
<g>
<title>java/time/Instant.plus (43 samples, 0.03%)</title><rect x="215.7" y="307.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="218.7" y="318.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (43 samples, 0.03%)</title><rect x="215.7" y="291.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="218.7" y="302.0"></text>
</g>
<g>
<title>java/time/Instant.create (43 samples, 0.03%)</title><rect x="215.7" y="275.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="218.7" y="286.0"></text>
</g>
<g>
<title>java.time.Instant (43 samples, 0.03%)</title><rect x="215.7" y="259.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="218.7" y="270.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.add (50 samples, 0.03%)</title><rect x="216.0" y="339.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="219.0" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkBefore (50 samples, 0.03%)</title><rect x="216.0" y="323.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="219.0" y="334.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (50 samples, 0.03%)</title><rect x="216.0" y="307.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="219.0" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$ExpiryEntry (52 samples, 0.03%)</title><rect x="216.4" y="339.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="219.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (91 samples, 0.06%)</title><rect x="216.8" y="355.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="219.8" y="366.0"></text>
</g>
<g>
<title>java/util/HashMap.get (54 samples, 0.04%)</title><rect x="216.8" y="339.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="219.8" y="350.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (54 samples, 0.04%)</title><rect x="216.8" y="323.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="219.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (54 samples, 0.04%)</title><rect x="216.8" y="307.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="219.8" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (54 samples, 0.04%)</title><rect x="216.8" y="291.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="219.8" y="302.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (37 samples, 0.02%)</title><rect x="217.2" y="339.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="220.2" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (37 samples, 0.02%)</title><rect x="217.2" y="323.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="220.2" y="334.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (37 samples, 0.02%)</title><rect x="217.2" y="307.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="220.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (206 samples, 0.14%)</title><rect x="217.5" y="355.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="220.5" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CleanupTrigger (50 samples, 0.03%)</title><rect x="217.5" y="339.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="220.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (156 samples, 0.10%)</title><rect x="217.9" y="339.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="220.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (50 samples, 0.03%)</title><rect x="217.9" y="323.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="220.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (50 samples, 0.03%)</title><rect x="217.9" y="307.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="220.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (50 samples, 0.03%)</title><rect x="217.9" y="291.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="220.9" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (50 samples, 0.03%)</title><rect x="217.9" y="275.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="220.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (106 samples, 0.07%)</title><rect x="218.3" y="323.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="221.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (106 samples, 0.07%)</title><rect x="218.3" y="307.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="221.3" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (81 samples, 0.05%)</title><rect x="218.3" y="291.0" width="0.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="221.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (202 samples, 0.13%)</title><rect x="219.1" y="435.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="222.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (202 samples, 0.13%)</title><rect x="219.1" y="419.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="222.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (202 samples, 0.13%)</title><rect x="219.1" y="403.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="222.1" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (135 samples, 0.09%)</title><rect x="219.1" y="387.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="222.1" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (135 samples, 0.09%)</title><rect x="219.1" y="371.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="222.1" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (135 samples, 0.09%)</title><rect x="219.1" y="355.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="222.1" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (135 samples, 0.09%)</title><rect x="219.1" y="339.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="222.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$241/404297872.accept (135 samples, 0.09%)</title><rect x="219.1" y="323.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="222.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (135 samples, 0.09%)</title><rect x="219.1" y="307.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="222.1" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (135 samples, 0.09%)</title><rect x="219.1" y="291.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="222.1" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (135 samples, 0.09%)</title><rect x="219.1" y="275.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="222.1" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (135 samples, 0.09%)</title><rect x="219.1" y="259.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="222.1" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$245/917709507.apply (135 samples, 0.09%)</title><rect x="219.1" y="243.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="222.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (135 samples, 0.09%)</title><rect x="219.1" y="227.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="222.1" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpResponseImpl (134 samples, 0.09%)</title><rect x="219.1" y="211.0" width="1.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="222.1" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.join (67 samples, 0.04%)</title><rect x="220.2" y="387.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="223.2" y="398.0"></text>
</g>
<g>
<title>byte[] (67 samples, 0.04%)</title><rect x="220.2" y="371.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="223.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (223 samples, 0.15%)</title><rect x="220.7" y="435.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="223.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (223 samples, 0.15%)</title><rect x="220.7" y="419.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="223.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (223 samples, 0.15%)</title><rect x="220.7" y="403.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="223.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (223 samples, 0.15%)</title><rect x="220.7" y="387.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="223.7" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.addAll (223 samples, 0.15%)</title><rect x="220.7" y="371.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="223.7" y="382.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (100 samples, 0.07%)</title><rect x="220.7" y="355.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="223.7" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (40 samples, 0.03%)</title><rect x="220.7" y="339.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="223.7" y="350.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (60 samples, 0.04%)</title><rect x="221.0" y="339.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="224.0" y="350.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (60 samples, 0.04%)</title><rect x="221.0" y="323.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="224.0" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (123 samples, 0.08%)</title><rect x="221.5" y="355.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="224.5" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (123 samples, 0.08%)</title><rect x="221.5" y="339.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="224.5" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (123 samples, 0.08%)</title><rect x="221.5" y="323.0" width="1.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="224.5" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$250/2144415851.run (26,381 samples, 17.50%)</title><rect x="222.5" y="643.0" width="206.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="225.5" y="654.0">ru/mail/polis/service/shakh..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$entity$0 (26,381 samples, 17.50%)</title><rect x="222.5" y="627.0" width="206.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="225.5" y="638.0">ru/mail/polis/service/shakh..</text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.MetaRequest (2,262 samples, 1.50%)</title><rect x="222.5" y="611.0" width="17.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="225.5" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.get (17,975 samples, 11.92%)</title><rect x="240.2" y="611.0" width="140.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="243.2" y="622.0">ru/mail/polis/serv..</text>
</g>
<g>
<title>java.util.ArrayList (328 samples, 0.22%)</title><rect x="240.2" y="595.0" width="2.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="243.2" y="606.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (599 samples, 0.40%)</title><rect x="242.8" y="595.0" width="4.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="245.8" y="606.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (599 samples, 0.40%)</title><rect x="242.8" y="579.0" width="4.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="245.8" y="590.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (599 samples, 0.40%)</title><rect x="242.8" y="563.0" width="4.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="245.8" y="574.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (599 samples, 0.40%)</title><rect x="242.8" y="547.0" width="4.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="245.8" y="558.0"></text>
</g>
<g>
<title>byte[] (599 samples, 0.40%)</title><rect x="242.8" y="531.0" width="4.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="245.8" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,118 samples, 0.74%)</title><rect x="247.5" y="595.0" width="8.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="250.5" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,118 samples, 0.74%)</title><rect x="247.5" y="579.0" width="8.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="250.5" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService$$Lambda$251/911454777.get$Lambda (304 samples, 0.20%)</title><rect x="247.5" y="563.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="250.5" y="574.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.HttpService$$Lambda$251 (304 samples, 0.20%)</title><rect x="247.5" y="547.0" width="2.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="250.5" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService$$Lambda$254/2026265775.get$Lambda (347 samples, 0.23%)</title><rect x="249.8" y="563.0" width="2.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="252.8" y="574.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.HttpService$$Lambda$254 (347 samples, 0.23%)</title><rect x="249.8" y="547.0" width="2.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="252.8" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService$$Lambda$262/480671275.get$Lambda (467 samples, 0.31%)</title><rect x="252.6" y="563.0" width="3.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="255.6" y="574.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.HttpService$$Lambda$262 (467 samples, 0.31%)</title><rect x="252.6" y="547.0" width="3.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="255.6" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1215571627.linkToTargetMethod (378 samples, 0.25%)</title><rect x="256.2" y="595.0" width="3.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="259.2" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (378 samples, 0.25%)</title><rect x="256.2" y="579.0" width="3.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="259.2" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService$$Lambda$255/1798389783.get$Lambda (378 samples, 0.25%)</title><rect x="256.2" y="563.0" width="3.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="259.2" y="574.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.HttpService$$Lambda$255 (378 samples, 0.25%)</title><rect x="256.2" y="547.0" width="3.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="259.2" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (556 samples, 0.37%)</title><rect x="259.2" y="595.0" width="4.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="262.2" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (556 samples, 0.37%)</title><rect x="259.2" y="579.0" width="4.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="262.2" y="590.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (556 samples, 0.37%)</title><rect x="259.2" y="563.0" width="4.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="262.2" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (3,040 samples, 2.02%)</title><rect x="263.5" y="595.0" width="23.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="266.5" y="606.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (3,040 samples, 2.02%)</title><rect x="263.5" y="579.0" width="23.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="266.5" y="590.0">j..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniExceptionally (1,905 samples, 1.26%)</title><rect x="263.5" y="563.0" width="14.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="266.5" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (1,135 samples, 0.75%)</title><rect x="278.4" y="563.0" width="8.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="281.4" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (1,135 samples, 0.75%)</title><rect x="278.4" y="547.0" width="8.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="281.4" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.runAsync (1,367 samples, 0.91%)</title><rect x="287.3" y="595.0" width="10.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="290.3" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncRunStage (1,367 samples, 0.91%)</title><rect x="287.3" y="579.0" width="10.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="290.3" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncRun (527 samples, 0.35%)</title><rect x="287.3" y="563.0" width="4.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="290.3" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (840 samples, 0.56%)</title><rect x="291.4" y="563.0" width="6.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="294.4" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenComposeAsync (1,074 samples, 0.71%)</title><rect x="298.0" y="595.0" width="8.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="301.0" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1,074 samples, 0.71%)</title><rect x="298.0" y="579.0" width="8.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="301.0" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (771 samples, 0.51%)</title><rect x="298.0" y="563.0" width="6.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="301.0" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (303 samples, 0.20%)</title><rect x="304.1" y="563.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="307.1" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (303 samples, 0.20%)</title><rect x="304.1" y="547.0" width="2.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="307.1" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (947 samples, 0.63%)</title><rect x="306.4" y="595.0" width="7.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="309.4" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (947 samples, 0.63%)</title><rect x="306.4" y="579.0" width="7.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="309.4" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (818 samples, 0.54%)</title><rect x="306.4" y="563.0" width="6.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="309.4" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (129 samples, 0.09%)</title><rect x="312.8" y="563.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="315.8" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (129 samples, 0.09%)</title><rect x="312.8" y="547.0" width="1.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="315.8" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.handleLocally (1,167 samples, 0.77%)</title><rect x="313.8" y="595.0" width="9.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="316.8" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (582 samples, 0.39%)</title><rect x="313.8" y="579.0" width="4.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="316.8" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (582 samples, 0.39%)</title><rect x="313.8" y="563.0" width="4.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="316.8" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService$$Lambda$111/1101527014.get$Lambda (582 samples, 0.39%)</title><rect x="313.8" y="547.0" width="4.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="316.8" y="558.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.HttpService$$Lambda$111 (582 samples, 0.39%)</title><rect x="313.8" y="531.0" width="4.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="316.8" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (585 samples, 0.39%)</title><rect x="318.4" y="579.0" width="4.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="321.4" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (585 samples, 0.39%)</title><rect x="318.4" y="563.0" width="4.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="321.4" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (435 samples, 0.29%)</title><rect x="318.4" y="547.0" width="3.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="321.4" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (150 samples, 0.10%)</title><rect x="321.8" y="547.0" width="1.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="324.8" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/ConsistentHashImpl.replicas (7,401 samples, 4.91%)</title><rect x="323.0" y="595.0" width="57.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="326.0" y="606.0">ru/mai..</text>
</g>
<g>
<title>java.util.ArrayList (134 samples, 0.09%)</title><rect x="323.0" y="579.0" width="1.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="326.0" y="590.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (1,428 samples, 0.95%)</title><rect x="324.0" y="579.0" width="11.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="327.0" y="590.0"></text>
</g>
<g>
<title>java.util.AbstractMap$2$1 (355 samples, 0.24%)</title><rect x="324.0" y="563.0" width="2.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="327.0" y="574.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (1,073 samples, 0.71%)</title><rect x="326.8" y="563.0" width="8.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="329.8" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap$AscendingEntrySetView.iterator (810 samples, 0.54%)</title><rect x="326.8" y="547.0" width="6.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="329.8" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap$NavigableSubMap$SubMapEntryIterator (810 samples, 0.54%)</title><rect x="326.8" y="531.0" width="6.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="329.8" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap.entrySet (263 samples, 0.17%)</title><rect x="333.2" y="547.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="336.2" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap$AscendingEntrySetView (263 samples, 0.17%)</title><rect x="333.2" y="531.0" width="2.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="336.2" y="542.0"></text>
</g>
<g>
<title>java/util/AbstractMap.values (139 samples, 0.09%)</title><rect x="335.2" y="579.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="338.2" y="590.0"></text>
</g>
<g>
<title>java.util.AbstractMap$2 (139 samples, 0.09%)</title><rect x="335.2" y="563.0" width="1.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="338.2" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (854 samples, 0.57%)</title><rect x="336.3" y="579.0" width="6.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="339.3" y="590.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (854 samples, 0.57%)</title><rect x="336.3" y="563.0" width="6.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="339.3" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (854 samples, 0.57%)</title><rect x="336.3" y="547.0" width="6.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="339.3" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (854 samples, 0.57%)</title><rect x="336.3" y="531.0" width="6.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="339.3" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (854 samples, 0.57%)</title><rect x="336.3" y="515.0" width="6.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="339.3" y="526.0"></text>
</g>
<g>
<title>java.lang.Object[] (804 samples, 0.53%)</title><rect x="336.3" y="499.0" width="6.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="339.3" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (50 samples, 0.03%)</title><rect x="342.6" y="499.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="345.6" y="510.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (790 samples, 0.52%)</title><rect x="343.1" y="579.0" width="6.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="346.1" y="590.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (790 samples, 0.52%)</title><rect x="343.1" y="563.0" width="6.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="346.1" y="574.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap (790 samples, 0.52%)</title><rect x="343.1" y="547.0" width="6.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="346.1" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/ConsistentHashImpl.firstReplica (4,035 samples, 2.68%)</title><rect x="349.3" y="579.0" width="31.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="352.3" y="590.0">ru..</text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.hashBytes (3,401 samples, 2.26%)</title><rect x="349.3" y="563.0" width="26.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="352.3" y="574.0">c..</text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.newHasher (2,030 samples, 1.35%)</title><rect x="349.3" y="547.0" width="15.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="352.3" y="558.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction.newHasher (2,030 samples, 1.35%)</title><rect x="349.3" y="531.0" width="15.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="352.3" y="542.0"></text>
</g>
<g>
<title>com.google.common.hash.Murmur3_128HashFunction$Murmur3_128Hasher (781 samples, 0.52%)</title><rect x="349.3" y="515.0" width="6.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="352.3" y="526.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.&lt;init&gt; (1,249 samples, 0.83%)</title><rect x="355.4" y="515.0" width="9.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="358.4" y="526.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.&lt;init&gt; (1,249 samples, 0.83%)</title><rect x="355.4" y="499.0" width="9.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="358.4" y="510.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.&lt;init&gt; (1,249 samples, 0.83%)</title><rect x="355.4" y="483.0" width="9.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="358.4" y="494.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1,249 samples, 0.83%)</title><rect x="355.4" y="467.0" width="9.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="358.4" y="478.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (792 samples, 0.53%)</title><rect x="355.4" y="451.0" width="6.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="358.4" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (457 samples, 0.30%)</title><rect x="361.6" y="451.0" width="3.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="364.6" y="462.0"></text>
</g>
<g>
<title>byte[] (457 samples, 0.30%)</title><rect x="361.6" y="435.0" width="3.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="364.6" y="446.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.hash (1,371 samples, 0.91%)</title><rect x="365.2" y="547.0" width="10.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="368.2" y="558.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.makeHash (1,371 samples, 0.91%)</title><rect x="365.2" y="531.0" width="10.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="368.2" y="542.0"></text>
</g>
<g>
<title>byte[] (515 samples, 0.34%)</title><rect x="365.2" y="515.0" width="4.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="368.2" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (856 samples, 0.57%)</title><rect x="369.3" y="515.0" width="6.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="372.3" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (856 samples, 0.57%)</title><rect x="369.3" y="499.0" width="6.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="372.3" y="510.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (856 samples, 0.57%)</title><rect x="369.3" y="483.0" width="6.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="372.3" y="494.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (479 samples, 0.32%)</title><rect x="376.0" y="563.0" width="3.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="379.0" y="574.0"></text>
</g>
<g>
<title>java.lang.Long (479 samples, 0.32%)</title><rect x="376.0" y="547.0" width="3.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="379.0" y="558.0"></text>
</g>
<g>
<title>java/util/TreeMap.ceilingEntry (151 samples, 0.10%)</title><rect x="379.7" y="563.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="382.7" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap.exportEntry (151 samples, 0.10%)</title><rect x="379.7" y="547.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="382.7" y="558.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (151 samples, 0.10%)</title><rect x="379.7" y="531.0" width="1.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="382.7" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/MetaRequest.&lt;init&gt; (6,144 samples, 4.08%)</title><rect x="380.9" y="611.0" width="48.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="383.9" y="622.0">ru/m..</text>
</g>
<g>
<title>java/lang/String.substring (1,924 samples, 1.28%)</title><rect x="380.9" y="595.0" width="15.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="383.9" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,924 samples, 1.28%)</title><rect x="380.9" y="579.0" width="15.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="383.9" y="590.0"></text>
</g>
<g>
<title>java.lang.String (843 samples, 0.56%)</title><rect x="380.9" y="563.0" width="6.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="383.9" y="574.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,081 samples, 0.72%)</title><rect x="387.5" y="563.0" width="8.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="390.5" y="574.0"></text>
</g>
<g>
<title>byte[] (1,081 samples, 0.72%)</title><rect x="387.5" y="547.0" width="8.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="390.5" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (921 samples, 0.61%)</title><rect x="396.0" y="595.0" width="7.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="399.0" y="606.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (700 samples, 0.46%)</title><rect x="396.0" y="579.0" width="5.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="399.0" y="590.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (221 samples, 0.15%)</title><rect x="401.5" y="579.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="404.5" y="590.0"></text>
</g>
<g>
<title>byte[] (221 samples, 0.15%)</title><rect x="401.5" y="563.0" width="1.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="404.5" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1,366 samples, 0.91%)</title><rect x="403.2" y="595.0" width="10.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="406.2" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1,366 samples, 0.91%)</title><rect x="403.2" y="579.0" width="10.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="406.2" y="590.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1,366 samples, 0.91%)</title><rect x="403.2" y="563.0" width="10.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="406.2" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1,933 samples, 1.28%)</title><rect x="413.9" y="595.0" width="15.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="416.9" y="606.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,933 samples, 1.28%)</title><rect x="413.9" y="579.0" width="15.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="416.9" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,933 samples, 1.28%)</title><rect x="413.9" y="563.0" width="15.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="416.9" y="574.0"></text>
</g>
<g>
<title>java.lang.String (715 samples, 0.47%)</title><rect x="413.9" y="547.0" width="5.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="416.9" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,218 samples, 0.81%)</title><rect x="419.5" y="547.0" width="9.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="422.5" y="558.0"></text>
</g>
<g>
<title>byte[] (1,218 samples, 0.81%)</title><rect x="419.5" y="531.0" width="9.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="422.5" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (26,539 samples, 17.61%)</title><rect x="429.0" y="691.0" width="207.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="432.0" y="702.0">java/util/concurrent/ForkJo..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (26,539 samples, 17.61%)</title><rect x="429.0" y="675.0" width="207.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="432.0" y="686.0">java/util/concurrent/ForkJo..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (26,539 samples, 17.61%)</title><rect x="429.0" y="659.0" width="207.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="432.0" y="670.0">java/util/concurrent/ForkJo..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (26,539 samples, 17.61%)</title><rect x="429.0" y="643.0" width="207.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="432.0" y="654.0">java/util/concurrent/ForkJo..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (26,539 samples, 17.61%)</title><rect x="429.0" y="627.0" width="207.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="432.0" y="638.0">java/util/concurrent/ForkJo..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncRun.exec (17,569 samples, 11.66%)</title><rect x="429.0" y="611.0" width="137.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="432.0" y="622.0">java/util/concurr..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncRun.run (17,569 samples, 11.66%)</title><rect x="429.0" y="595.0" width="137.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="432.0" y="606.0">java/util/concurr..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService$$Lambda$262/480671275.run (17,569 samples, 11.66%)</title><rect x="429.0" y="579.0" width="137.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="432.0" y="590.0">ru/mail/polis/ser..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.lambda$get$0 (17,569 samples, 11.66%)</title><rect x="429.0" y="563.0" width="137.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="432.0" y="574.0">ru/mail/polis/ser..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.getCell (17,433 samples, 11.57%)</title><rect x="429.2" y="547.0" width="136.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="432.2" y="558.0">ru/mail/polis/dao..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (1,279 samples, 0.85%)</title><rect x="429.2" y="531.0" width="10.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="432.2" y="542.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1,151 samples, 0.76%)</title><rect x="429.2" y="515.0" width="9.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="432.2" y="526.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (654 samples, 0.43%)</title><rect x="429.2" y="499.0" width="5.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="432.2" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (654 samples, 0.43%)</title><rect x="429.2" y="483.0" width="5.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="432.2" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (654 samples, 0.43%)</title><rect x="429.2" y="467.0" width="5.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="432.2" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (654 samples, 0.43%)</title><rect x="429.2" y="451.0" width="5.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="432.2" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (654 samples, 0.43%)</title><rect x="429.2" y="435.0" width="5.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="432.2" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$259/1748041147.compare (654 samples, 0.43%)</title><rect x="429.2" y="419.0" width="5.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="432.2" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (654 samples, 0.43%)</title><rect x="429.2" y="403.0" width="5.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="432.2" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$124/2130957928.compare (654 samples, 0.43%)</title><rect x="429.2" y="387.0" width="5.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="432.2" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (654 samples, 0.43%)</title><rect x="429.2" y="371.0" width="5.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="432.2" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$124/2130957928.compare (654 samples, 0.43%)</title><rect x="429.2" y="355.0" width="5.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="432.2" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (654 samples, 0.43%)</title><rect x="429.2" y="339.0" width="5.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="432.2" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$122/124600919.compare (654 samples, 0.43%)</title><rect x="429.2" y="323.0" width="5.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="432.2" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (654 samples, 0.43%)</title><rect x="429.2" y="307.0" width="5.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="432.2" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$121/1316220837.apply (654 samples, 0.43%)</title><rect x="429.2" y="291.0" width="5.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="432.2" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (654 samples, 0.43%)</title><rect x="429.2" y="275.0" width="5.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="432.2" y="286.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (654 samples, 0.43%)</title><rect x="429.2" y="259.0" width="5.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="432.2" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (654 samples, 0.43%)</title><rect x="429.2" y="243.0" width="5.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="432.2" y="254.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (654 samples, 0.43%)</title><rect x="429.2" y="227.0" width="5.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="432.2" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (497 samples, 0.33%)</title><rect x="434.4" y="499.0" width="3.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="437.4" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (497 samples, 0.33%)</title><rect x="434.4" y="483.0" width="3.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="437.4" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (497 samples, 0.33%)</title><rect x="434.4" y="467.0" width="3.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="437.4" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (497 samples, 0.33%)</title><rect x="434.4" y="451.0" width="3.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="437.4" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (497 samples, 0.33%)</title><rect x="434.4" y="435.0" width="3.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="437.4" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (497 samples, 0.33%)</title><rect x="434.4" y="419.0" width="3.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="437.4" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (370 samples, 0.25%)</title><rect x="434.4" y="403.0" width="2.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="437.4" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (370 samples, 0.25%)</title><rect x="434.4" y="387.0" width="2.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="437.4" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (370 samples, 0.25%)</title><rect x="434.4" y="371.0" width="2.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="437.4" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (370 samples, 0.25%)</title><rect x="434.4" y="355.0" width="2.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="437.4" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (100 samples, 0.07%)</title><rect x="434.6" y="339.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="437.6" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (40 samples, 0.03%)</title><rect x="434.6" y="323.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="437.6" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (40 samples, 0.03%)</title><rect x="434.6" y="307.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="437.6" y="318.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (40 samples, 0.03%)</title><rect x="434.6" y="291.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="437.6" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (60 samples, 0.04%)</title><rect x="435.0" y="323.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="438.0" y="334.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (60 samples, 0.04%)</title><rect x="435.0" y="307.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="438.0" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (97 samples, 0.06%)</title><rect x="435.4" y="339.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="438.4" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (44 samples, 0.03%)</title><rect x="435.4" y="323.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="438.4" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (44 samples, 0.03%)</title><rect x="435.4" y="307.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="438.4" y="318.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (44 samples, 0.03%)</title><rect x="435.4" y="291.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="438.4" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (53 samples, 0.04%)</title><rect x="435.8" y="323.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="438.8" y="334.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (53 samples, 0.04%)</title><rect x="435.8" y="307.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="438.8" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.timestampAt (55 samples, 0.04%)</title><rect x="436.2" y="339.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="439.2" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (55 samples, 0.04%)</title><rect x="436.2" y="323.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="439.2" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (55 samples, 0.04%)</title><rect x="436.2" y="307.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="439.2" y="318.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (55 samples, 0.04%)</title><rect x="436.2" y="291.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="439.2" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.valueAt (81 samples, 0.05%)</title><rect x="436.6" y="339.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="439.6" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (35 samples, 0.02%)</title><rect x="436.6" y="323.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="439.6" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (35 samples, 0.02%)</title><rect x="436.6" y="307.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="439.6" y="318.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (35 samples, 0.02%)</title><rect x="436.6" y="291.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="439.6" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (46 samples, 0.03%)</title><rect x="436.9" y="323.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="439.9" y="334.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (46 samples, 0.03%)</title><rect x="436.9" y="307.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="439.9" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$259/1748041147.compare (127 samples, 0.08%)</title><rect x="437.3" y="403.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="440.3" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (127 samples, 0.08%)</title><rect x="437.3" y="387.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="440.3" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$124/2130957928.compare (127 samples, 0.08%)</title><rect x="437.3" y="371.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="440.3" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (127 samples, 0.08%)</title><rect x="437.3" y="355.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="440.3" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$124/2130957928.compare (127 samples, 0.08%)</title><rect x="437.3" y="339.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="440.3" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (127 samples, 0.08%)</title><rect x="437.3" y="323.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="440.3" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$122/124600919.compare (127 samples, 0.08%)</title><rect x="437.3" y="307.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="440.3" y="318.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (127 samples, 0.08%)</title><rect x="437.3" y="291.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="440.3" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$121/1316220837.apply (127 samples, 0.08%)</title><rect x="437.3" y="275.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="440.3" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (127 samples, 0.08%)</title><rect x="437.3" y="259.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="440.3" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (125 samples, 0.08%)</title><rect x="437.3" y="243.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="440.3" y="254.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (125 samples, 0.08%)</title><rect x="437.3" y="227.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="440.3" y="238.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (125 samples, 0.08%)</title><rect x="437.3" y="211.0" width="0.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="440.3" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$260/2021873169.apply (128 samples, 0.08%)</title><rect x="438.2" y="515.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="441.2" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (128 samples, 0.08%)</title><rect x="438.2" y="499.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="441.2" y="510.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (128 samples, 0.08%)</title><rect x="438.2" y="483.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="441.2" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (128 samples, 0.08%)</title><rect x="438.2" y="467.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="441.2" y="478.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (128 samples, 0.08%)</title><rect x="438.2" y="451.0" width="1.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="441.2" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.rowsIterator (16,147 samples, 10.71%)</title><rect x="439.2" y="531.0" width="126.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="442.2" y="542.0">ru/mail/polis/da..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (14,079 samples, 9.34%)</title><rect x="439.2" y="515.0" width="110.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="442.2" y="526.0">ru/mail/polis..</text>
</g>
<g>
<title>java/util/ArrayList.add (48 samples, 0.03%)</title><rect x="439.3" y="499.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="442.3" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (48 samples, 0.03%)</title><rect x="439.3" y="483.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="442.3" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (48 samples, 0.03%)</title><rect x="439.3" y="467.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="442.3" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (48 samples, 0.03%)</title><rect x="439.3" y="451.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="442.3" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (48 samples, 0.03%)</title><rect x="439.3" y="435.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="442.3" y="446.0"></text>
</g>
<g>
<title>java.lang.Object[] (48 samples, 0.03%)</title><rect x="439.3" y="419.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="442.3" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.iterator (55 samples, 0.04%)</title><rect x="439.7" y="499.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="442.7" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (38 samples, 0.03%)</title><rect x="439.7" y="483.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="442.7" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.iterator (13,966 samples, 9.27%)</title><rect x="440.1" y="499.0" width="109.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="443.1" y="510.0">ru/mail/polis..</text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.SSTable$SSTableIterator (87 samples, 0.06%)</title><rect x="440.1" y="483.0" width="0.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="443.1" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.&lt;init&gt; (13,879 samples, 9.21%)</title><rect x="440.8" y="483.0" width="108.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="443.8" y="494.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.position (13,879 samples, 9.21%)</title><rect x="440.8" y="467.0" width="108.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="443.8" y="478.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (6,858 samples, 4.55%)</title><rect x="440.8" y="451.0" width="53.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="443.8" y="462.0">ru/ma..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (3,532 samples, 2.34%)</title><rect x="440.8" y="435.0" width="27.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="443.8" y="446.0">j..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (3,532 samples, 2.34%)</title><rect x="440.8" y="419.0" width="27.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="443.8" y="430.0">j..</text>
</g>
<g>
<title>java.nio.DirectByteBufferR (3,532 samples, 2.34%)</title><rect x="440.8" y="403.0" width="27.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="443.8" y="414.0">j..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (3,326 samples, 2.21%)</title><rect x="468.5" y="435.0" width="26.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="471.5" y="446.0">j..</text>
</g>
<g>
<title>java.nio.DirectByteBufferR (3,326 samples, 2.21%)</title><rect x="468.5" y="419.0" width="26.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="471.5" y="430.0">j..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (7,021 samples, 4.66%)</title><rect x="494.5" y="451.0" width="55.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="497.5" y="462.0">ru/ma..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (3,606 samples, 2.39%)</title><rect x="494.5" y="435.0" width="28.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="497.5" y="446.0">ja..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (3,606 samples, 2.39%)</title><rect x="494.5" y="419.0" width="28.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="497.5" y="430.0">ja..</text>
</g>
<g>
<title>java.nio.DirectByteBufferR (3,606 samples, 2.39%)</title><rect x="494.5" y="403.0" width="28.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="497.5" y="414.0">ja..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (3,415 samples, 2.27%)</title><rect x="522.7" y="435.0" width="26.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="525.7" y="446.0">j..</text>
</g>
<g>
<title>java.nio.DirectByteBufferR (3,415 samples, 2.27%)</title><rect x="522.7" y="419.0" width="26.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="525.7" y="430.0">j..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.reduceIterators (2,068 samples, 1.37%)</title><rect x="549.5" y="515.0" width="16.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="552.5" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (1,855 samples, 1.23%)</title><rect x="549.5" y="499.0" width="14.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="552.5" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (1,850 samples, 1.23%)</title><rect x="549.5" y="483.0" width="14.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="552.5" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (47 samples, 0.03%)</title><rect x="549.5" y="467.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="552.5" y="478.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (47 samples, 0.03%)</title><rect x="549.5" y="451.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="552.5" y="462.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (1,796 samples, 1.19%)</title><rect x="549.9" y="467.0" width="14.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="552.9" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (1,796 samples, 1.19%)</title><rect x="549.9" y="451.0" width="14.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="552.9" y="462.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (1,780 samples, 1.18%)</title><rect x="550.0" y="435.0" width="14.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="553.0" y="446.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (1,780 samples, 1.18%)</title><rect x="550.0" y="419.0" width="14.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="553.0" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,780 samples, 1.18%)</title><rect x="550.0" y="403.0" width="14.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="553.0" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,780 samples, 1.18%)</title><rect x="550.0" y="387.0" width="14.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="553.0" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (1,219 samples, 0.81%)</title><rect x="550.0" y="371.0" width="9.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="553.0" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (1,212 samples, 0.80%)</title><rect x="550.1" y="355.0" width="9.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="553.1" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (1,212 samples, 0.80%)</title><rect x="550.1" y="339.0" width="9.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="553.1" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (1,212 samples, 0.80%)</title><rect x="550.1" y="323.0" width="9.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="553.1" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Cell.of (52 samples, 0.03%)</title><rect x="550.1" y="307.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="553.1" y="318.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Cell (52 samples, 0.03%)</title><rect x="550.1" y="291.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="553.1" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.of (63 samples, 0.04%)</title><rect x="550.5" y="307.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="553.5" y="318.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Row (63 samples, 0.04%)</title><rect x="550.5" y="291.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="553.5" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (302 samples, 0.20%)</title><rect x="551.0" y="307.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="554.0" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (137 samples, 0.09%)</title><rect x="551.0" y="291.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="554.0" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (137 samples, 0.09%)</title><rect x="551.0" y="275.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="554.0" y="286.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (137 samples, 0.09%)</title><rect x="551.0" y="259.0" width="1.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="554.0" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (165 samples, 0.11%)</title><rect x="552.1" y="291.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="555.1" y="302.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (165 samples, 0.11%)</title><rect x="552.1" y="275.0" width="1.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="555.1" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (322 samples, 0.21%)</title><rect x="553.4" y="307.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="556.4" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (165 samples, 0.11%)</title><rect x="553.4" y="291.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="556.4" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (165 samples, 0.11%)</title><rect x="553.4" y="275.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="556.4" y="286.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (165 samples, 0.11%)</title><rect x="553.4" y="259.0" width="1.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="556.4" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (157 samples, 0.10%)</title><rect x="554.7" y="291.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="557.7" y="302.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (157 samples, 0.10%)</title><rect x="554.7" y="275.0" width="1.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="557.7" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.timestampAt (144 samples, 0.10%)</title><rect x="555.9" y="307.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="558.9" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (144 samples, 0.10%)</title><rect x="555.9" y="291.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="558.9" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (144 samples, 0.10%)</title><rect x="555.9" y="275.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="558.9" y="286.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (144 samples, 0.10%)</title><rect x="555.9" y="259.0" width="1.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="558.9" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.valueAt (329 samples, 0.22%)</title><rect x="557.0" y="307.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="560.0" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (165 samples, 0.11%)</title><rect x="557.0" y="291.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="560.0" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (165 samples, 0.11%)</title><rect x="557.0" y="275.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="560.0" y="286.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (165 samples, 0.11%)</title><rect x="557.0" y="259.0" width="1.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="560.0" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (164 samples, 0.11%)</title><rect x="558.3" y="291.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="561.3" y="302.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (164 samples, 0.11%)</title><rect x="558.3" y="275.0" width="1.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="561.3" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$259/1748041147.compare (561 samples, 0.37%)</title><rect x="559.6" y="371.0" width="4.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="562.6" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (561 samples, 0.37%)</title><rect x="559.6" y="355.0" width="4.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="562.6" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$124/2130957928.compare (561 samples, 0.37%)</title><rect x="559.6" y="339.0" width="4.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="562.6" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (561 samples, 0.37%)</title><rect x="559.6" y="323.0" width="4.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="562.6" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$124/2130957928.compare (561 samples, 0.37%)</title><rect x="559.6" y="307.0" width="4.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="562.6" y="318.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (561 samples, 0.37%)</title><rect x="559.6" y="291.0" width="4.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="562.6" y="302.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$122/124600919.compare (561 samples, 0.37%)</title><rect x="559.6" y="275.0" width="4.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="562.6" y="286.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (561 samples, 0.37%)</title><rect x="559.6" y="259.0" width="4.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="562.6" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$121/1316220837.apply (561 samples, 0.37%)</title><rect x="559.6" y="243.0" width="4.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="562.6" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (561 samples, 0.37%)</title><rect x="559.6" y="227.0" width="4.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="562.6" y="238.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (547 samples, 0.36%)</title><rect x="559.6" y="211.0" width="4.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="562.6" y="222.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (547 samples, 0.36%)</title><rect x="559.6" y="195.0" width="4.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="562.6" y="206.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (547 samples, 0.36%)</title><rect x="559.6" y="179.0" width="4.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="562.6" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (213 samples, 0.14%)</title><rect x="564.0" y="499.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="567.0" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (208 samples, 0.14%)</title><rect x="564.0" y="483.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="567.0" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (208 samples, 0.14%)</title><rect x="564.0" y="467.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="567.0" y="478.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (120 samples, 0.08%)</title><rect x="564.0" y="451.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="567.0" y="462.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (120 samples, 0.08%)</title><rect x="564.0" y="435.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="567.0" y="446.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (120 samples, 0.08%)</title><rect x="564.0" y="419.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="567.0" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (120 samples, 0.08%)</title><rect x="564.0" y="403.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="567.0" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (120 samples, 0.08%)</title><rect x="564.0" y="387.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="567.0" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$259/1748041147.compare (120 samples, 0.08%)</title><rect x="564.0" y="371.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="567.0" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (120 samples, 0.08%)</title><rect x="564.0" y="355.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="567.0" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$124/2130957928.compare (120 samples, 0.08%)</title><rect x="564.0" y="339.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="567.0" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (120 samples, 0.08%)</title><rect x="564.0" y="323.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="567.0" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$124/2130957928.compare (120 samples, 0.08%)</title><rect x="564.0" y="307.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="567.0" y="318.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (120 samples, 0.08%)</title><rect x="564.0" y="291.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="567.0" y="302.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$122/124600919.compare (120 samples, 0.08%)</title><rect x="564.0" y="275.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="567.0" y="286.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (120 samples, 0.08%)</title><rect x="564.0" y="259.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="567.0" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$121/1316220837.apply (120 samples, 0.08%)</title><rect x="564.0" y="243.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="567.0" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (120 samples, 0.08%)</title><rect x="564.0" y="227.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="567.0" y="238.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (115 samples, 0.08%)</title><rect x="564.0" y="211.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="567.0" y="222.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (115 samples, 0.08%)</title><rect x="564.0" y="195.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="567.0" y="206.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (115 samples, 0.08%)</title><rect x="564.0" y="179.0" width="0.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="567.0" y="190.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (88 samples, 0.06%)</title><rect x="565.0" y="451.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="568.0" y="462.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (88 samples, 0.06%)</title><rect x="565.0" y="435.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="568.0" y="446.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (88 samples, 0.06%)</title><rect x="565.0" y="419.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="568.0" y="430.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (88 samples, 0.06%)</title><rect x="565.0" y="403.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="568.0" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (88 samples, 0.06%)</title><rect x="565.0" y="387.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="568.0" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (88 samples, 0.06%)</title><rect x="565.0" y="371.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="568.0" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (66 samples, 0.04%)</title><rect x="565.0" y="355.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="568.0" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (66 samples, 0.04%)</title><rect x="565.0" y="339.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="568.0" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (66 samples, 0.04%)</title><rect x="565.0" y="323.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="568.0" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (66 samples, 0.04%)</title><rect x="565.0" y="307.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="568.0" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.sendResponse (37 samples, 0.02%)</title><rect x="565.7" y="547.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="568.7" y="558.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (37 samples, 0.02%)</title><rect x="565.7" y="531.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="568.7" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/Value.transform (41 samples, 0.03%)</title><rect x="566.2" y="547.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="569.2" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.exec (8,370 samples, 5.55%)</title><rect x="566.5" y="611.0" width="65.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="569.5" y="622.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (8,370 samples, 5.55%)</title><rect x="566.5" y="595.0" width="65.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="569.5" y="606.0">java/ut..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService$$Lambda$111/1101527014.get (8,370 samples, 5.55%)</title><rect x="566.5" y="579.0" width="65.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="569.5" y="590.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.lambda$handleLocally$24 (8,370 samples, 5.55%)</title><rect x="566.5" y="563.0" width="65.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="569.5" y="574.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService$$Lambda$251/911454777.run (8,370 samples, 5.55%)</title><rect x="566.5" y="547.0" width="65.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="569.5" y="558.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.lambda$get$2 (8,370 samples, 5.55%)</title><rect x="566.5" y="531.0" width="65.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="569.5" y="542.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.getFromDao (8,370 samples, 5.55%)</title><rect x="566.5" y="515.0" width="65.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="569.5" y="526.0">ru/mail..</text>
</g>
<g>
<title>java/lang/String.getBytes (119 samples, 0.08%)</title><rect x="566.5" y="499.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="569.5" y="510.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (119 samples, 0.08%)</title><rect x="566.5" y="483.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="569.5" y="494.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (119 samples, 0.08%)</title><rect x="566.5" y="467.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="569.5" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (119 samples, 0.08%)</title><rect x="566.5" y="451.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="569.5" y="462.0"></text>
</g>
<g>
<title>byte[] (119 samples, 0.08%)</title><rect x="566.5" y="435.0" width="1.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="569.5" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.getCell (8,231 samples, 5.46%)</title><rect x="567.5" y="499.0" width="64.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="570.5" y="510.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (651 samples, 0.43%)</title><rect x="567.5" y="483.0" width="5.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="570.5" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (596 samples, 0.40%)</title><rect x="567.5" y="467.0" width="4.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="570.5" y="478.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (356 samples, 0.24%)</title><rect x="567.5" y="451.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="570.5" y="462.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (356 samples, 0.24%)</title><rect x="567.5" y="435.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="570.5" y="446.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (356 samples, 0.24%)</title><rect x="567.5" y="419.0" width="2.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="570.5" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (356 samples, 0.24%)</title><rect x="567.5" y="403.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="570.5" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (356 samples, 0.24%)</title><rect x="567.5" y="387.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="570.5" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$259/1748041147.compare (356 samples, 0.24%)</title><rect x="567.5" y="371.0" width="2.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="570.5" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (356 samples, 0.24%)</title><rect x="567.5" y="355.0" width="2.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="570.5" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$124/2130957928.compare (356 samples, 0.24%)</title><rect x="567.5" y="339.0" width="2.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="570.5" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (356 samples, 0.24%)</title><rect x="567.5" y="323.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="570.5" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$124/2130957928.compare (356 samples, 0.24%)</title><rect x="567.5" y="307.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="570.5" y="318.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (356 samples, 0.24%)</title><rect x="567.5" y="291.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="570.5" y="302.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$122/124600919.compare (356 samples, 0.24%)</title><rect x="567.5" y="275.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="570.5" y="286.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (356 samples, 0.24%)</title><rect x="567.5" y="259.0" width="2.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="570.5" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$121/1316220837.apply (356 samples, 0.24%)</title><rect x="567.5" y="243.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="570.5" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (356 samples, 0.24%)</title><rect x="567.5" y="227.0" width="2.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="570.5" y="238.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (355 samples, 0.24%)</title><rect x="567.5" y="211.0" width="2.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="570.5" y="222.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (355 samples, 0.24%)</title><rect x="567.5" y="195.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="570.5" y="206.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (355 samples, 0.24%)</title><rect x="567.5" y="179.0" width="2.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="570.5" y="190.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (240 samples, 0.16%)</title><rect x="570.3" y="451.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="573.3" y="462.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (240 samples, 0.16%)</title><rect x="570.3" y="435.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="573.3" y="446.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (240 samples, 0.16%)</title><rect x="570.3" y="419.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="573.3" y="430.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (240 samples, 0.16%)</title><rect x="570.3" y="403.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="573.3" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (240 samples, 0.16%)</title><rect x="570.3" y="387.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="573.3" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (240 samples, 0.16%)</title><rect x="570.3" y="371.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="573.3" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (186 samples, 0.12%)</title><rect x="570.3" y="355.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="573.3" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (186 samples, 0.12%)</title><rect x="570.3" y="339.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="573.3" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (186 samples, 0.12%)</title><rect x="570.3" y="323.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="573.3" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (186 samples, 0.12%)</title><rect x="570.3" y="307.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="573.3" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (49 samples, 0.03%)</title><rect x="570.5" y="291.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="573.5" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (37 samples, 0.02%)</title><rect x="570.9" y="291.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="573.9" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.valueAt (51 samples, 0.03%)</title><rect x="571.4" y="291.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="574.4" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$259/1748041147.compare (54 samples, 0.04%)</title><rect x="571.8" y="355.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="574.8" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (54 samples, 0.04%)</title><rect x="571.8" y="339.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="574.8" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$124/2130957928.compare (54 samples, 0.04%)</title><rect x="571.8" y="323.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="574.8" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (54 samples, 0.04%)</title><rect x="571.8" y="307.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="574.8" y="318.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$124/2130957928.compare (54 samples, 0.04%)</title><rect x="571.8" y="291.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="574.8" y="302.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (54 samples, 0.04%)</title><rect x="571.8" y="275.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="574.8" y="286.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$122/124600919.compare (54 samples, 0.04%)</title><rect x="571.8" y="259.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="574.8" y="270.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (54 samples, 0.04%)</title><rect x="571.8" y="243.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="574.8" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$121/1316220837.apply (54 samples, 0.04%)</title><rect x="571.8" y="227.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="574.8" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (54 samples, 0.04%)</title><rect x="571.8" y="211.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="574.8" y="222.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (54 samples, 0.04%)</title><rect x="571.8" y="195.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="574.8" y="206.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (54 samples, 0.04%)</title><rect x="571.8" y="179.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="574.8" y="190.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (54 samples, 0.04%)</title><rect x="571.8" y="163.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="574.8" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$260/2021873169.apply (55 samples, 0.04%)</title><rect x="572.2" y="467.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="575.2" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (55 samples, 0.04%)</title><rect x="572.2" y="451.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="575.2" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (55 samples, 0.04%)</title><rect x="572.2" y="435.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="575.2" y="446.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (55 samples, 0.04%)</title><rect x="572.2" y="419.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="575.2" y="430.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (55 samples, 0.04%)</title><rect x="572.2" y="403.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="575.2" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.rowsIterator (7,577 samples, 5.03%)</title><rect x="572.6" y="483.0" width="59.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="575.6" y="494.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (6,569 samples, 4.36%)</title><rect x="572.6" y="467.0" width="51.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="575.6" y="478.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.iterator (6,505 samples, 4.32%)</title><rect x="573.1" y="451.0" width="50.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="576.1" y="462.0">ru/ma..</text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.SSTable$SSTableIterator (49 samples, 0.03%)</title><rect x="573.1" y="435.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="576.1" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.&lt;init&gt; (6,456 samples, 4.28%)</title><rect x="573.5" y="435.0" width="50.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="576.5" y="446.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.position (6,456 samples, 4.28%)</title><rect x="573.5" y="419.0" width="50.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="576.5" y="430.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (3,276 samples, 2.17%)</title><rect x="573.5" y="403.0" width="25.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="576.5" y="414.0">r..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (1,653 samples, 1.10%)</title><rect x="573.5" y="387.0" width="12.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="576.5" y="398.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (1,653 samples, 1.10%)</title><rect x="573.5" y="371.0" width="12.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="576.5" y="382.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (1,653 samples, 1.10%)</title><rect x="573.5" y="355.0" width="12.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="576.5" y="366.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (1,623 samples, 1.08%)</title><rect x="586.4" y="387.0" width="12.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="589.4" y="398.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (1,623 samples, 1.08%)</title><rect x="586.4" y="371.0" width="12.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="589.4" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (3,180 samples, 2.11%)</title><rect x="599.1" y="403.0" width="24.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="602.1" y="414.0">r..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (1,594 samples, 1.06%)</title><rect x="599.1" y="387.0" width="12.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="602.1" y="398.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (1,594 samples, 1.06%)</title><rect x="599.1" y="371.0" width="12.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="602.1" y="382.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (1,594 samples, 1.06%)</title><rect x="599.1" y="355.0" width="12.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="602.1" y="366.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (1,586 samples, 1.05%)</title><rect x="611.6" y="387.0" width="12.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="614.6" y="398.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (1,586 samples, 1.05%)</title><rect x="611.6" y="371.0" width="12.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="614.6" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.reduceIterators (1,008 samples, 0.67%)</title><rect x="624.0" y="467.0" width="7.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="627.0" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (913 samples, 0.61%)</title><rect x="624.0" y="451.0" width="7.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="627.0" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (912 samples, 0.61%)</title><rect x="624.0" y="435.0" width="7.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="627.0" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (34 samples, 0.02%)</title><rect x="624.0" y="419.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="627.0" y="430.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (34 samples, 0.02%)</title><rect x="624.0" y="403.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="627.0" y="414.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (874 samples, 0.58%)</title><rect x="624.3" y="419.0" width="6.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="627.3" y="430.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (874 samples, 0.58%)</title><rect x="624.3" y="403.0" width="6.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="627.3" y="414.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (858 samples, 0.57%)</title><rect x="624.5" y="387.0" width="6.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="627.5" y="398.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (858 samples, 0.57%)</title><rect x="624.5" y="371.0" width="6.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="627.5" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (858 samples, 0.57%)</title><rect x="624.5" y="355.0" width="6.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="627.5" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (858 samples, 0.57%)</title><rect x="624.5" y="339.0" width="6.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="627.5" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (599 samples, 0.40%)</title><rect x="624.5" y="323.0" width="4.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="627.5" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (596 samples, 0.40%)</title><rect x="624.5" y="307.0" width="4.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="627.5" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (596 samples, 0.40%)</title><rect x="624.5" y="291.0" width="4.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="627.5" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (596 samples, 0.40%)</title><rect x="624.5" y="275.0" width="4.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="627.5" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.of (34 samples, 0.02%)</title><rect x="624.7" y="259.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="627.7" y="270.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Row (34 samples, 0.02%)</title><rect x="624.7" y="243.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="627.7" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (163 samples, 0.11%)</title><rect x="625.0" y="259.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="628.0" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (75 samples, 0.05%)</title><rect x="625.0" y="243.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="628.0" y="254.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (75 samples, 0.05%)</title><rect x="625.0" y="227.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="628.0" y="238.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (75 samples, 0.05%)</title><rect x="625.0" y="211.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="628.0" y="222.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (88 samples, 0.06%)</title><rect x="625.6" y="243.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="628.6" y="254.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (88 samples, 0.06%)</title><rect x="625.6" y="227.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="628.6" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (150 samples, 0.10%)</title><rect x="626.2" y="259.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="629.2" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (75 samples, 0.05%)</title><rect x="626.2" y="243.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="629.2" y="254.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (75 samples, 0.05%)</title><rect x="626.2" y="227.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="629.2" y="238.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (75 samples, 0.05%)</title><rect x="626.2" y="211.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="629.2" y="222.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (75 samples, 0.05%)</title><rect x="626.8" y="243.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="629.8" y="254.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (75 samples, 0.05%)</title><rect x="626.8" y="227.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="629.8" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.timestampAt (71 samples, 0.05%)</title><rect x="627.4" y="259.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="630.4" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (71 samples, 0.05%)</title><rect x="627.4" y="243.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="630.4" y="254.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (71 samples, 0.05%)</title><rect x="627.4" y="227.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="630.4" y="238.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (71 samples, 0.05%)</title><rect x="627.4" y="211.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="630.4" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.valueAt (151 samples, 0.10%)</title><rect x="628.0" y="259.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="631.0" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (78 samples, 0.05%)</title><rect x="628.0" y="243.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="631.0" y="254.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (78 samples, 0.05%)</title><rect x="628.0" y="227.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="631.0" y="238.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (78 samples, 0.05%)</title><rect x="628.0" y="211.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="631.0" y="222.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (73 samples, 0.05%)</title><rect x="628.6" y="243.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="631.6" y="254.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (73 samples, 0.05%)</title><rect x="628.6" y="227.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="631.6" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$259/1748041147.compare (259 samples, 0.17%)</title><rect x="629.2" y="323.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="632.2" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (259 samples, 0.17%)</title><rect x="629.2" y="307.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="632.2" y="318.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$124/2130957928.compare (259 samples, 0.17%)</title><rect x="629.2" y="291.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="632.2" y="302.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (259 samples, 0.17%)</title><rect x="629.2" y="275.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="632.2" y="286.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$124/2130957928.compare (259 samples, 0.17%)</title><rect x="629.2" y="259.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="632.2" y="270.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (259 samples, 0.17%)</title><rect x="629.2" y="243.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="632.2" y="254.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$122/124600919.compare (259 samples, 0.17%)</title><rect x="629.2" y="227.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="632.2" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (259 samples, 0.17%)</title><rect x="629.2" y="211.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="632.2" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$121/1316220837.apply (259 samples, 0.17%)</title><rect x="629.2" y="195.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="632.2" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (259 samples, 0.17%)</title><rect x="629.2" y="179.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="632.2" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (255 samples, 0.17%)</title><rect x="629.2" y="163.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="632.2" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (255 samples, 0.17%)</title><rect x="629.2" y="147.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="632.2" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (255 samples, 0.17%)</title><rect x="629.2" y="131.0" width="2.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="632.2" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (95 samples, 0.06%)</title><rect x="631.2" y="451.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="634.2" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (94 samples, 0.06%)</title><rect x="631.2" y="435.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="634.2" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (94 samples, 0.06%)</title><rect x="631.2" y="419.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="634.2" y="430.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (50 samples, 0.03%)</title><rect x="631.2" y="403.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="634.2" y="414.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (50 samples, 0.03%)</title><rect x="631.2" y="387.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="634.2" y="398.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (50 samples, 0.03%)</title><rect x="631.2" y="371.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="634.2" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (50 samples, 0.03%)</title><rect x="631.2" y="355.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="634.2" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (50 samples, 0.03%)</title><rect x="631.2" y="339.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="634.2" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$259/1748041147.compare (50 samples, 0.03%)</title><rect x="631.2" y="323.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="634.2" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (50 samples, 0.03%)</title><rect x="631.2" y="307.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="634.2" y="318.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$124/2130957928.compare (50 samples, 0.03%)</title><rect x="631.2" y="291.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="634.2" y="302.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (50 samples, 0.03%)</title><rect x="631.2" y="275.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="634.2" y="286.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$124/2130957928.compare (50 samples, 0.03%)</title><rect x="631.2" y="259.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="634.2" y="270.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (50 samples, 0.03%)</title><rect x="631.2" y="243.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="634.2" y="254.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$122/124600919.compare (50 samples, 0.03%)</title><rect x="631.2" y="227.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="634.2" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (50 samples, 0.03%)</title><rect x="631.2" y="211.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="634.2" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$121/1316220837.apply (50 samples, 0.03%)</title><rect x="631.2" y="195.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="634.2" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (50 samples, 0.03%)</title><rect x="631.2" y="179.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="634.2" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (50 samples, 0.03%)</title><rect x="631.2" y="163.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="634.2" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (50 samples, 0.03%)</title><rect x="631.2" y="147.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="634.2" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (50 samples, 0.03%)</title><rect x="631.2" y="131.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="634.2" y="142.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (44 samples, 0.03%)</title><rect x="631.6" y="403.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="634.6" y="414.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (44 samples, 0.03%)</title><rect x="631.6" y="387.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="634.6" y="398.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (44 samples, 0.03%)</title><rect x="631.6" y="371.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="634.6" y="382.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (44 samples, 0.03%)</title><rect x="631.6" y="355.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="634.6" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (44 samples, 0.03%)</title><rect x="631.6" y="339.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="634.6" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (44 samples, 0.03%)</title><rect x="631.6" y="323.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="634.6" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (35 samples, 0.02%)</title><rect x="631.6" y="307.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="634.6" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (35 samples, 0.02%)</title><rect x="631.6" y="291.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="634.6" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (35 samples, 0.02%)</title><rect x="631.6" y="275.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="634.6" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (35 samples, 0.02%)</title><rect x="631.6" y="259.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="634.6" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (600 samples, 0.40%)</title><rect x="632.1" y="611.0" width="4.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="635.1" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (503 samples, 0.33%)</title><rect x="632.1" y="595.0" width="3.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="635.1" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService$$Lambda$254/2026265775.apply (501 samples, 0.33%)</title><rect x="632.1" y="579.0" width="3.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="635.1" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.lambda$get$3 (501 samples, 0.33%)</title><rect x="632.1" y="563.0" width="3.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="635.1" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.getResponsesFromReplicas (501 samples, 0.33%)</title><rect x="632.1" y="547.0" width="3.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="635.1" y="558.0"></text>
</g>
<g>
<title>java/net/URI.create (49 samples, 0.03%)</title><rect x="632.2" y="531.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="635.2" y="542.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (38 samples, 0.03%)</title><rect x="632.3" y="515.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="635.3" y="526.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (34 samples, 0.02%)</title><rect x="632.4" y="499.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="635.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (283 samples, 0.19%)</title><rect x="632.8" y="531.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="635.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (283 samples, 0.19%)</title><rect x="632.8" y="515.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="635.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (283 samples, 0.19%)</title><rect x="632.8" y="499.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="635.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (283 samples, 0.19%)</title><rect x="632.8" y="483.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="635.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (123 samples, 0.08%)</title><rect x="633.1" y="467.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="636.1" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (49 samples, 0.03%)</title><rect x="633.2" y="451.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="636.2" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (49 samples, 0.03%)</title><rect x="633.2" y="435.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="636.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (40 samples, 0.03%)</title><rect x="633.6" y="451.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="636.6" y="462.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (40 samples, 0.03%)</title><rect x="633.6" y="435.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="636.6" y="446.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (36 samples, 0.02%)</title><rect x="633.6" y="419.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="636.6" y="430.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (36 samples, 0.02%)</title><rect x="633.6" y="403.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="636.6" y="414.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (36 samples, 0.02%)</title><rect x="633.6" y="387.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="636.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (71 samples, 0.05%)</title><rect x="634.1" y="467.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="637.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (52 samples, 0.03%)</title><rect x="634.2" y="451.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="637.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (52 samples, 0.03%)</title><rect x="634.2" y="435.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="637.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (44 samples, 0.03%)</title><rect x="634.6" y="467.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="637.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (36 samples, 0.02%)</title><rect x="634.7" y="451.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="637.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (58 samples, 0.04%)</title><rect x="635.0" y="531.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="638.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (53 samples, 0.04%)</title><rect x="635.0" y="515.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="638.0" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (53 samples, 0.04%)</title><rect x="635.0" y="499.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="638.0" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (53 samples, 0.04%)</title><rect x="635.0" y="483.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="638.0" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.getFirstResponses (61 samples, 0.04%)</title><rect x="635.5" y="531.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="638.5" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (97 samples, 0.06%)</title><rect x="636.0" y="595.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="639.0" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (97 samples, 0.06%)</title><rect x="636.0" y="579.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="639.0" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService$$Lambda$255/1798389783.accept (73 samples, 0.05%)</title><rect x="636.2" y="563.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="639.2" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.lambda$get$6 (73 samples, 0.05%)</title><rect x="636.2" y="547.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="639.2" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.handleResponses (73 samples, 0.05%)</title><rect x="636.2" y="531.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="639.2" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService$$Lambda$265/118464626.apply (36 samples, 0.02%)</title><rect x="636.2" y="515.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="639.2" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.lambda$get$4 (36 samples, 0.02%)</title><rect x="636.2" y="499.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="639.2" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/Value.from (36 samples, 0.02%)</title><rect x="636.2" y="483.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="639.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (5,071 samples, 3.36%)</title><rect x="636.8" y="691.0" width="39.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="639.8" y="702.0">jdk..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (149 samples, 0.10%)</title><rect x="636.8" y="675.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="639.8" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (149 samples, 0.10%)</title><rect x="636.8" y="659.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="639.8" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$196/1558914017.get$Lambda (60 samples, 0.04%)</title><rect x="636.8" y="643.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="639.8" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$196 (60 samples, 0.04%)</title><rect x="636.8" y="627.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="639.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$198/1799291049.get$Lambda (47 samples, 0.03%)</title><rect x="637.2" y="643.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="640.2" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$198 (47 samples, 0.03%)</title><rect x="637.2" y="627.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="640.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$200/1924589327.get$Lambda (42 samples, 0.03%)</title><rect x="637.6" y="643.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="640.6" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$200 (42 samples, 0.03%)</title><rect x="637.6" y="627.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="640.6" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/896644936.linkToTargetMethod (91 samples, 0.06%)</title><rect x="637.9" y="675.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="640.9" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (91 samples, 0.06%)</title><rect x="637.9" y="659.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="640.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$197/2022555883.get$Lambda (91 samples, 0.06%)</title><rect x="637.9" y="643.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="640.9" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$197 (91 samples, 0.06%)</title><rect x="637.9" y="627.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="640.9" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (903 samples, 0.60%)</title><rect x="638.6" y="675.0" width="7.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="641.6" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$198/1799291049.accept (722 samples, 0.48%)</title><rect x="638.6" y="659.0" width="5.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="641.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (722 samples, 0.48%)</title><rect x="638.6" y="643.0" width="5.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="641.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (722 samples, 0.48%)</title><rect x="638.6" y="627.0" width="5.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="641.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (722 samples, 0.48%)</title><rect x="638.6" y="611.0" width="5.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="641.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (722 samples, 0.48%)</title><rect x="638.6" y="595.0" width="5.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="641.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (722 samples, 0.48%)</title><rect x="638.6" y="579.0" width="5.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="641.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (722 samples, 0.48%)</title><rect x="638.6" y="563.0" width="5.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="641.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (722 samples, 0.48%)</title><rect x="638.6" y="547.0" width="5.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="641.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (722 samples, 0.48%)</title><rect x="638.6" y="531.0" width="5.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="641.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (722 samples, 0.48%)</title><rect x="638.6" y="515.0" width="5.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="641.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$157/1360780123.run (722 samples, 0.48%)</title><rect x="638.6" y="499.0" width="5.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="641.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (722 samples, 0.48%)</title><rect x="638.6" y="483.0" width="5.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="641.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (154 samples, 0.10%)</title><rect x="638.6" y="467.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="641.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (154 samples, 0.10%)</title><rect x="638.6" y="451.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="641.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (154 samples, 0.10%)</title><rect x="638.6" y="435.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="641.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offer (76 samples, 0.05%)</title><rect x="638.6" y="419.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="641.6" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (76 samples, 0.05%)</title><rect x="638.6" y="403.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="641.6" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (76 samples, 0.05%)</title><rect x="638.6" y="387.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="641.6" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (76 samples, 0.05%)</title><rect x="638.6" y="371.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="641.6" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (76 samples, 0.05%)</title><rect x="638.6" y="355.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="641.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (78 samples, 0.05%)</title><rect x="639.2" y="419.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="642.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (78 samples, 0.05%)</title><rect x="639.2" y="403.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="642.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (78 samples, 0.05%)</title><rect x="639.2" y="387.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="642.2" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (78 samples, 0.05%)</title><rect x="639.2" y="371.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="642.2" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (78 samples, 0.05%)</title><rect x="639.2" y="355.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="642.2" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (75 samples, 0.05%)</title><rect x="639.2" y="339.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="642.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (76 samples, 0.05%)</title><rect x="640.0" y="467.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="643.0" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (76 samples, 0.05%)</title><rect x="640.0" y="451.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="643.0" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (76 samples, 0.05%)</title><rect x="640.0" y="435.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="643.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$206/1914759753.get$Lambda (76 samples, 0.05%)</title><rect x="640.0" y="419.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="643.0" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$206 (76 samples, 0.05%)</title><rect x="640.0" y="403.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="643.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (471 samples, 0.31%)</title><rect x="640.6" y="467.0" width="3.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="643.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.append (276 samples, 0.18%)</title><rect x="640.6" y="451.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="643.6" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (184 samples, 0.12%)</title><rect x="640.6" y="435.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="643.6" y="446.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (184 samples, 0.12%)</title><rect x="640.6" y="419.0" width="1.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="643.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.listOf (92 samples, 0.06%)</title><rect x="642.1" y="435.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="645.1" y="446.0"></text>
</g>
<g>
<title>java/util/List.of (92 samples, 0.06%)</title><rect x="642.1" y="419.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="645.1" y="430.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (92 samples, 0.06%)</title><rect x="642.1" y="403.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="645.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.getBuffer (195 samples, 0.13%)</title><rect x="642.8" y="451.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="645.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection$$Lambda$153/24269577.get (195 samples, 0.13%)</title><rect x="642.8" y="435.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="645.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getBuffer (195 samples, 0.13%)</title><rect x="642.8" y="419.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="645.8" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (195 samples, 0.13%)</title><rect x="642.8" y="403.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="645.8" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (195 samples, 0.13%)</title><rect x="642.8" y="387.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="645.8" y="398.0"></text>
</g>
<g>
<title>byte[] (194 samples, 0.13%)</title><rect x="642.8" y="371.0" width="1.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="645.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$201/1629457336.accept (181 samples, 0.12%)</title><rect x="644.3" y="659.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="647.3" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (181 samples, 0.12%)</title><rect x="644.3" y="643.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="647.3" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$197/2022555883.run (181 samples, 0.12%)</title><rect x="644.3" y="627.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="647.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (181 samples, 0.12%)</title><rect x="644.3" y="611.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="647.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (181 samples, 0.12%)</title><rect x="644.3" y="595.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="647.3" y="606.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (181 samples, 0.12%)</title><rect x="644.3" y="579.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="647.3" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (181 samples, 0.12%)</title><rect x="644.3" y="563.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="647.3" y="574.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (181 samples, 0.12%)</title><rect x="644.3" y="547.0" width="1.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="647.3" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (885 samples, 0.59%)</title><rect x="645.7" y="675.0" width="6.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="648.7" y="686.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (885 samples, 0.59%)</title><rect x="645.7" y="659.0" width="6.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="648.7" y="670.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (179 samples, 0.12%)</title><rect x="652.6" y="675.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="655.6" y="686.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (90 samples, 0.06%)</title><rect x="652.6" y="659.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="655.6" y="670.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (90 samples, 0.06%)</title><rect x="652.6" y="643.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="655.6" y="654.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (90 samples, 0.06%)</title><rect x="652.6" y="627.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="655.6" y="638.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (90 samples, 0.06%)</title><rect x="652.6" y="611.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="655.6" y="622.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (90 samples, 0.06%)</title><rect x="652.6" y="595.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="655.6" y="606.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (90 samples, 0.06%)</title><rect x="652.6" y="579.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="655.6" y="590.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2$1 (90 samples, 0.06%)</title><rect x="652.6" y="563.0" width="0.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="655.6" y="574.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps.makeRef (89 samples, 0.06%)</title><rect x="653.3" y="659.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="656.3" y="670.0"></text>
</g>
<g>
<title>java.util.stream.ForEachOps$ForEachOp$OfRef (89 samples, 0.06%)</title><rect x="653.3" y="643.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="656.3" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (562 samples, 0.37%)</title><rect x="654.0" y="675.0" width="4.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="657.0" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$159/717507571.run (271 samples, 0.18%)</title><rect x="654.0" y="659.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="657.0" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (271 samples, 0.18%)</title><rect x="654.0" y="643.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="657.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (271 samples, 0.18%)</title><rect x="654.0" y="627.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="657.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (271 samples, 0.18%)</title><rect x="654.0" y="611.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="657.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (271 samples, 0.18%)</title><rect x="654.0" y="595.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="657.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (271 samples, 0.18%)</title><rect x="654.0" y="579.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="657.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$157/1360780123.run (271 samples, 0.18%)</title><rect x="654.0" y="563.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="657.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (271 samples, 0.18%)</title><rect x="654.0" y="547.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="657.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (266 samples, 0.18%)</title><rect x="654.0" y="531.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="657.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (266 samples, 0.18%)</title><rect x="654.0" y="515.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="657.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (182 samples, 0.12%)</title><rect x="654.0" y="499.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="657.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (182 samples, 0.12%)</title><rect x="654.0" y="483.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="657.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (182 samples, 0.12%)</title><rect x="654.0" y="467.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="657.0" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/623247230.linkToTargetMethod (132 samples, 0.09%)</title><rect x="654.0" y="451.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="657.0" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/773662650.invoke (132 samples, 0.09%)</title><rect x="654.0" y="435.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="657.0" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (132 samples, 0.09%)</title><rect x="654.0" y="419.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="657.0" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (132 samples, 0.09%)</title><rect x="654.0" y="403.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="657.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (132 samples, 0.09%)</title><rect x="654.0" y="387.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="657.0" y="398.0"></text>
</g>
<g>
<title>byte[] (132 samples, 0.09%)</title><rect x="654.0" y="371.0" width="1.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="657.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (50 samples, 0.03%)</title><rect x="655.1" y="451.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="658.1" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (50 samples, 0.03%)</title><rect x="655.1" y="435.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="658.1" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (50 samples, 0.03%)</title><rect x="655.1" y="419.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="658.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$206/1914759753.get$Lambda (50 samples, 0.03%)</title><rect x="655.1" y="403.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="658.1" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$206 (50 samples, 0.03%)</title><rect x="655.1" y="387.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="658.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (84 samples, 0.06%)</title><rect x="655.5" y="499.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="658.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (84 samples, 0.06%)</title><rect x="655.5" y="483.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="658.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (84 samples, 0.06%)</title><rect x="655.5" y="467.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="658.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (84 samples, 0.06%)</title><rect x="655.5" y="451.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="658.5" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (84 samples, 0.06%)</title><rect x="655.5" y="435.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="658.5" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (84 samples, 0.06%)</title><rect x="655.5" y="419.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="658.5" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (82 samples, 0.05%)</title><rect x="655.5" y="403.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="658.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$161/782771317.run (291 samples, 0.19%)</title><rect x="656.2" y="659.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="659.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (291 samples, 0.19%)</title><rect x="656.2" y="643.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="659.2" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (132 samples, 0.09%)</title><rect x="656.2" y="627.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="659.2" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (132 samples, 0.09%)</title><rect x="656.2" y="611.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="659.2" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$205/1532762392.get$Lambda (132 samples, 0.09%)</title><rect x="656.2" y="595.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="659.2" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$$Lambda$205 (132 samples, 0.09%)</title><rect x="656.2" y="579.0" width="1.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="659.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (159 samples, 0.11%)</title><rect x="657.2" y="627.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="660.2" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (159 samples, 0.11%)</title><rect x="657.2" y="611.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="660.2" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (159 samples, 0.11%)</title><rect x="657.2" y="595.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="660.2" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (159 samples, 0.11%)</title><rect x="657.2" y="579.0" width="1.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="660.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (1,307 samples, 0.87%)</title><rect x="658.4" y="675.0" width="10.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="661.4" y="686.0"></text>
</g>
<g>
<title>java/time/Instant.now (216 samples, 0.14%)</title><rect x="658.4" y="659.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="661.4" y="670.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (216 samples, 0.14%)</title><rect x="658.4" y="643.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="661.4" y="654.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (216 samples, 0.14%)</title><rect x="658.4" y="627.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="661.4" y="638.0"></text>
</g>
<g>
<title>java/time/Instant.create (216 samples, 0.14%)</title><rect x="658.4" y="611.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="661.4" y="622.0"></text>
</g>
<g>
<title>java.time.Instant (216 samples, 0.14%)</title><rect x="658.4" y="595.0" width="1.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="661.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (1,091 samples, 0.72%)</title><rect x="660.1" y="659.0" width="8.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="663.1" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (143 samples, 0.09%)</title><rect x="660.1" y="643.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="663.1" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (143 samples, 0.09%)</title><rect x="660.1" y="627.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="663.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$$Lambda$247/693251949.get$Lambda (143 samples, 0.09%)</title><rect x="660.1" y="611.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="663.1" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$$Lambda$247 (143 samples, 0.09%)</title><rect x="660.1" y="595.0" width="1.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="663.1" y="606.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (272 samples, 0.18%)</title><rect x="661.3" y="643.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="664.3" y="654.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (272 samples, 0.18%)</title><rect x="661.3" y="627.0" width="2.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="664.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.nextExpiryDeadline (158 samples, 0.10%)</title><rect x="663.4" y="643.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="666.4" y="654.0"></text>
</g>
<g>
<title>java/util/Optional.of (158 samples, 0.10%)</title><rect x="663.4" y="627.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="666.4" y="638.0"></text>
</g>
<g>
<title>java.util.Optional (158 samples, 0.10%)</title><rect x="663.4" y="611.0" width="1.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="666.4" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (518 samples, 0.34%)</title><rect x="664.6" y="643.0" width="4.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="667.6" y="654.0"></text>
</g>
<g>
<title>java.util.ArrayList (219 samples, 0.15%)</title><rect x="664.6" y="627.0" width="1.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="667.6" y="638.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (299 samples, 0.20%)</title><rect x="666.3" y="627.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="669.3" y="638.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (299 samples, 0.20%)</title><rect x="666.3" y="611.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="669.3" y="622.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (299 samples, 0.20%)</title><rect x="666.3" y="595.0" width="2.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="669.3" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.events (642 samples, 0.43%)</title><rect x="668.7" y="675.0" width="5.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="671.7" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (49 samples, 0.03%)</title><rect x="668.7" y="659.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="671.7" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (49 samples, 0.03%)</title><rect x="668.7" y="643.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="671.7" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment$$Lambda$195/395347517.get$Lambda (49 samples, 0.03%)</title><rect x="668.7" y="627.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="671.7" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorAttachment$$Lambda$195 (49 samples, 0.03%)</title><rect x="668.7" y="611.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="671.7" y="622.0"></text>
</g>
<g>
<title>java/util/Collection.stream (360 samples, 0.24%)</title><rect x="669.1" y="659.0" width="2.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="672.1" y="670.0"></text>
</g>
<g>
<title>java/util/HashSet.spliterator (143 samples, 0.09%)</title><rect x="669.1" y="643.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="672.1" y="654.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySpliterator (143 samples, 0.09%)</title><rect x="669.1" y="627.0" width="1.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="672.1" y="638.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (217 samples, 0.14%)</title><rect x="670.2" y="643.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="673.2" y="654.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (217 samples, 0.14%)</title><rect x="670.2" y="627.0" width="1.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="673.2" y="638.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (233 samples, 0.15%)</title><rect x="671.9" y="659.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="674.9" y="670.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (233 samples, 0.15%)</title><rect x="671.9" y="643.0" width="1.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="674.9" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (177 samples, 0.12%)</title><rect x="673.7" y="675.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="676.7" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (177 samples, 0.12%)</title><rect x="673.7" y="659.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="676.7" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (177 samples, 0.12%)</title><rect x="673.7" y="643.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="676.7" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (177 samples, 0.12%)</title><rect x="673.7" y="627.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="676.7" y="638.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (80 samples, 0.05%)</title><rect x="673.7" y="611.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="676.7" y="622.0"></text>
</g>
<g>
<title>java.lang.Integer (80 samples, 0.05%)</title><rect x="673.7" y="595.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="676.7" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (97 samples, 0.06%)</title><rect x="674.3" y="611.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="677.3" y="622.0"></text>
</g>
<g>
<title>java/util/HashSet.add (97 samples, 0.06%)</title><rect x="674.3" y="595.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="677.3" y="606.0"></text>
</g>
<g>
<title>java/util/HashMap.put (97 samples, 0.06%)</title><rect x="674.3" y="579.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="677.3" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (97 samples, 0.06%)</title><rect x="674.3" y="563.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="677.3" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (97 samples, 0.06%)</title><rect x="674.3" y="547.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="677.3" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (97 samples, 0.06%)</title><rect x="674.3" y="531.0" width="0.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="677.3" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (70 samples, 0.05%)</title><rect x="675.1" y="675.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="678.1" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (70 samples, 0.05%)</title><rect x="675.1" y="659.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="678.1" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (70 samples, 0.05%)</title><rect x="675.1" y="643.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="678.1" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (70 samples, 0.05%)</title><rect x="675.1" y="627.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="678.1" y="638.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (63 samples, 0.04%)</title><rect x="675.1" y="611.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="678.1" y="622.0"></text>
</g>
<g>
<title>java.lang.Integer (63 samples, 0.04%)</title><rect x="675.1" y="595.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="678.1" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (106 samples, 0.07%)</title><rect x="675.6" y="675.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="678.6" y="686.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (106 samples, 0.07%)</title><rect x="675.6" y="659.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="678.6" y="670.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (106 samples, 0.07%)</title><rect x="675.6" y="643.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="678.6" y="654.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (106 samples, 0.07%)</title><rect x="675.6" y="627.0" width="0.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="678.6" y="638.0"></text>
</g>
<g>
<title>one/nio/server/AcceptorThread.run (113 samples, 0.07%)</title><rect x="676.5" y="691.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="679.5" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.createSession (112 samples, 0.07%)</title><rect x="676.5" y="675.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="679.5" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.createSession (112 samples, 0.07%)</title><rect x="676.5" y="659.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="679.5" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/StorageSession.&lt;init&gt; (110 samples, 0.07%)</title><rect x="676.5" y="643.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="679.5" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.&lt;init&gt; (110 samples, 0.07%)</title><rect x="676.5" y="627.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="679.5" y="638.0"></text>
</g>
<g>
<title>byte[] (94 samples, 0.06%)</title><rect x="676.6" y="611.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="679.6" y="622.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (65,487 samples, 43.44%)</title><rect x="677.4" y="691.0" width="512.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="680.4" y="702.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (886 samples, 0.59%)</title><rect x="677.4" y="675.0" width="6.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="680.4" y="686.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (886 samples, 0.59%)</title><rect x="677.4" y="659.0" width="6.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="680.4" y="670.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (64,601 samples, 42.86%)</title><rect x="684.3" y="675.0" width="505.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="687.3" y="686.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (64,601 samples, 42.86%)</title><rect x="684.3" y="659.0" width="505.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="687.3" y="670.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (64,518 samples, 42.80%)</title><rect x="684.3" y="643.0" width="505.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="687.3" y="654.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (31,868 samples, 21.14%)</title><rect x="684.3" y="627.0" width="249.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="687.3" y="638.0">one/nio/http/HttpSession.handlePa..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (31,868 samples, 21.14%)</title><rect x="684.3" y="611.0" width="249.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="687.3" y="622.0">one/nio/http/HttpServer.handleReq..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (30,565 samples, 20.28%)</title><rect x="684.3" y="595.0" width="239.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="687.3" y="606.0">RequestHandler1_entity.handleReq..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (3,485 samples, 2.31%)</title><rect x="684.3" y="579.0" width="27.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="687.3" y="590.0">o..</text>
</g>
<g>
<title>java/lang/String.substring (3,485 samples, 2.31%)</title><rect x="684.3" y="563.0" width="27.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="687.3" y="574.0">j..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3,485 samples, 2.31%)</title><rect x="684.3" y="547.0" width="27.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="687.3" y="558.0">j..</text>
</g>
<g>
<title>java.lang.String (1,688 samples, 1.12%)</title><rect x="684.3" y="531.0" width="13.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="687.3" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,797 samples, 1.19%)</title><rect x="697.5" y="531.0" width="14.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="700.5" y="542.0"></text>
</g>
<g>
<title>byte[] (1,797 samples, 1.19%)</title><rect x="697.5" y="515.0" width="14.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="700.5" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.entity (27,080 samples, 17.97%)</title><rect x="711.6" y="579.0" width="212.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="714.6" y="590.0">ru/mail/polis/service/shakhm..</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1167829160.linkToTargetMethod (867 samples, 0.58%)</title><rect x="711.6" y="563.0" width="6.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="714.6" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1899887676.invokeStatic (867 samples, 0.58%)</title><rect x="711.6" y="547.0" width="6.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="714.6" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$250/2144415851.get$Lambda (867 samples, 0.58%)</title><rect x="711.6" y="531.0" width="6.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="714.6" y="542.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$$Lambda$250 (867 samples, 0.58%)</title><rect x="711.6" y="515.0" width="6.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="714.6" y="526.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (651 samples, 0.43%)</title><rect x="718.4" y="563.0" width="5.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="721.4" y="574.0"></text>
</g>
<g>
<title>java/lang/String.substring (651 samples, 0.43%)</title><rect x="718.4" y="547.0" width="5.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="721.4" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (651 samples, 0.43%)</title><rect x="718.4" y="531.0" width="5.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="721.4" y="542.0"></text>
</g>
<g>
<title>java.lang.String (361 samples, 0.24%)</title><rect x="718.4" y="515.0" width="2.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="721.4" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (290 samples, 0.19%)</title><rect x="721.2" y="515.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="724.2" y="526.0"></text>
</g>
<g>
<title>byte[] (290 samples, 0.19%)</title><rect x="721.2" y="499.0" width="2.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="724.2" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.executeAsync (463 samples, 0.31%)</title><rect x="723.5" y="563.0" width="3.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="726.5" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (463 samples, 0.31%)</title><rect x="723.5" y="547.0" width="3.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="726.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (463 samples, 0.31%)</title><rect x="723.5" y="531.0" width="3.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="726.5" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (462 samples, 0.31%)</title><rect x="723.5" y="515.0" width="3.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="726.5" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/ConsistentHashImpl.all (14,157 samples, 9.39%)</title><rect x="727.1" y="563.0" width="110.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="730.1" y="574.0">ru/mail/polis..</text>
</g>
<g>
<title>java/util/Set.copyOf (14,157 samples, 9.39%)</title><rect x="727.1" y="547.0" width="110.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="730.1" y="558.0">java/util/Set..</text>
</g>
<g>
<title>java.util.HashSet (347 samples, 0.23%)</title><rect x="727.1" y="531.0" width="2.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="730.1" y="542.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (2,712 samples, 1.80%)</title><rect x="729.8" y="531.0" width="21.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="732.8" y="542.0">j..</text>
</g>
<g>
<title>java.lang.Object[] (894 samples, 0.59%)</title><rect x="729.8" y="515.0" width="7.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="732.8" y="526.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (1,818 samples, 1.21%)</title><rect x="736.8" y="515.0" width="14.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="739.8" y="526.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (1,416 samples, 0.94%)</title><rect x="736.8" y="499.0" width="11.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="739.8" y="510.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (1,416 samples, 0.94%)</title><rect x="736.8" y="483.0" width="11.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="739.8" y="494.0"></text>
</g>
<g>
<title>java/util/HashMap.keySet (402 samples, 0.27%)</title><rect x="747.9" y="499.0" width="3.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="750.9" y="510.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySet (402 samples, 0.27%)</title><rect x="747.9" y="483.0" width="3.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="750.9" y="494.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (9,215 samples, 6.11%)</title><rect x="751.0" y="531.0" width="72.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="754.0" y="542.0">java/uti..</text>
</g>
<g>
<title>java.util.HashMap (1,113 samples, 0.74%)</title><rect x="751.0" y="515.0" width="8.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="754.0" y="526.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (8,102 samples, 5.37%)</title><rect x="759.7" y="515.0" width="63.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="762.7" y="526.0">java/ut..</text>
</g>
<g>
<title>java/util/HashSet.add (7,217 samples, 4.79%)</title><rect x="759.7" y="499.0" width="56.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="762.7" y="510.0">java/u..</text>
</g>
<g>
<title>java/util/HashMap.put (7,217 samples, 4.79%)</title><rect x="759.7" y="483.0" width="56.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="762.7" y="494.0">java/u..</text>
</g>
<g>
<title>java/util/HashMap.putVal (7,217 samples, 4.79%)</title><rect x="759.7" y="467.0" width="56.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="762.7" y="478.0">java/u..</text>
</g>
<g>
<title>java/util/HashMap.newNode (4,879 samples, 3.24%)</title><rect x="759.7" y="451.0" width="38.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="762.7" y="462.0">jav..</text>
</g>
<g>
<title>java.util.HashMap$Node (4,879 samples, 3.24%)</title><rect x="759.7" y="435.0" width="38.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="762.7" y="446.0">jav..</text>
</g>
<g>
<title>java/util/HashMap.resize (2,338 samples, 1.55%)</title><rect x="797.9" y="451.0" width="18.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="800.9" y="462.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (1,484 samples, 0.98%)</title><rect x="797.9" y="435.0" width="11.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="800.9" y="446.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (854 samples, 0.57%)</title><rect x="809.5" y="435.0" width="6.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="812.5" y="446.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (885 samples, 0.59%)</title><rect x="816.2" y="499.0" width="7.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="819.2" y="510.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (885 samples, 0.59%)</title><rect x="816.2" y="483.0" width="7.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="819.2" y="494.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (885 samples, 0.59%)</title><rect x="816.2" y="467.0" width="7.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="819.2" y="478.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeyIterator (885 samples, 0.59%)</title><rect x="816.2" y="451.0" width="7.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="819.2" y="462.0"></text>
</g>
<g>
<title>java/util/Set.of (1,883 samples, 1.25%)</title><rect x="823.2" y="531.0" width="14.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="826.2" y="542.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$SetN (459 samples, 0.30%)</title><rect x="823.2" y="515.0" width="3.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="826.2" y="526.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$SetN.&lt;init&gt; (1,424 samples, 0.94%)</title><rect x="826.8" y="515.0" width="11.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="829.8" y="526.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,424 samples, 0.94%)</title><rect x="826.8" y="499.0" width="11.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="829.8" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/RF.from (10,942 samples, 7.26%)</title><rect x="837.9" y="563.0" width="85.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="840.9" y="574.0">ru/mail/po..</text>
</g>
<g>
<title>com/google/common/base/Splitter.on (2,070 samples, 1.37%)</title><rect x="837.9" y="547.0" width="16.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="840.9" y="558.0"></text>
</g>
<g>
<title>com/google/common/base/CharMatcher.is (522 samples, 0.35%)</title><rect x="837.9" y="531.0" width="4.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="840.9" y="542.0"></text>
</g>
<g>
<title>com.google.common.base.CharMatcher$Is (522 samples, 0.35%)</title><rect x="837.9" y="515.0" width="4.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="840.9" y="526.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.on (1,548 samples, 1.03%)</title><rect x="842.0" y="531.0" width="12.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="845.0" y="542.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter$1 (695 samples, 0.46%)</title><rect x="842.0" y="515.0" width="5.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="845.0" y="526.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter (853 samples, 0.57%)</title><rect x="847.4" y="515.0" width="6.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="850.4" y="526.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splitToList (7,881 samples, 5.23%)</title><rect x="854.1" y="547.0" width="61.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="857.1" y="558.0">com/go..</text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.hasNext (3,082 samples, 2.04%)</title><rect x="854.1" y="531.0" width="24.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="857.1" y="542.0">c..</text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.tryToComputeNext (3,082 samples, 2.04%)</title><rect x="854.1" y="515.0" width="24.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="857.1" y="526.0">c..</text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (3,082 samples, 2.04%)</title><rect x="854.1" y="499.0" width="24.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="857.1" y="510.0">c..</text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (3,082 samples, 2.04%)</title><rect x="854.1" y="483.0" width="24.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="857.1" y="494.0">c..</text>
</g>
<g>
<title>java/lang/String.subSequence (3,082 samples, 2.04%)</title><rect x="854.1" y="467.0" width="24.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="857.1" y="478.0">j..</text>
</g>
<g>
<title>java/lang/String.substring (3,082 samples, 2.04%)</title><rect x="854.1" y="451.0" width="24.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="857.1" y="462.0">j..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3,082 samples, 2.04%)</title><rect x="854.1" y="435.0" width="24.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="857.1" y="446.0">j..</text>
</g>
<g>
<title>java.lang.String (1,114 samples, 0.74%)</title><rect x="854.1" y="419.0" width="8.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="857.1" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,968 samples, 1.31%)</title><rect x="862.8" y="419.0" width="15.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="865.8" y="430.0"></text>
</g>
<g>
<title>byte[] (1,968 samples, 1.31%)</title><rect x="862.8" y="403.0" width="15.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="865.8" y="414.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splittingIterator (1,179 samples, 0.78%)</title><rect x="878.2" y="531.0" width="9.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="881.2" y="542.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (1,179 samples, 0.78%)</title><rect x="878.2" y="515.0" width="9.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="881.2" y="526.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (1,179 samples, 0.78%)</title><rect x="878.2" y="499.0" width="9.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="881.2" y="510.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter$1$1 (1,179 samples, 0.78%)</title><rect x="878.2" y="483.0" width="9.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="881.2" y="494.0"></text>
</g>
<g>
<title>java.util.ArrayList (526 samples, 0.35%)</title><rect x="887.5" y="531.0" width="4.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="890.5" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2,806 samples, 1.86%)</title><rect x="891.6" y="531.0" width="21.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="894.6" y="542.0">j..</text>
</g>
<g>
<title>java/util/ArrayList.add (2,806 samples, 1.86%)</title><rect x="891.6" y="515.0" width="21.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="894.6" y="526.0">j..</text>
</g>
<g>
<title>java/util/ArrayList.grow (2,806 samples, 1.86%)</title><rect x="891.6" y="499.0" width="21.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="894.6" y="510.0">j..</text>
</g>
<g>
<title>java/util/ArrayList.grow (2,806 samples, 1.86%)</title><rect x="891.6" y="483.0" width="21.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="894.6" y="494.0">j..</text>
</g>
<g>
<title>java/util/Arrays.copyOf (2,806 samples, 1.86%)</title><rect x="891.6" y="467.0" width="21.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="894.6" y="478.0">j..</text>
</g>
<g>
<title>java.lang.Object[] (2,793 samples, 1.85%)</title><rect x="891.6" y="451.0" width="21.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="894.6" y="462.0">j..</text>
</g>
<g>
<title>java/util/Collections.unmodifiableList (288 samples, 0.19%)</title><rect x="913.5" y="531.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="916.5" y="542.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableRandomAccessList (288 samples, 0.19%)</title><rect x="913.5" y="515.0" width="2.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="916.5" y="526.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.topology.RF (991 samples, 0.66%)</title><rect x="915.8" y="547.0" width="7.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="918.8" y="558.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1,303 samples, 0.86%)</title><rect x="923.6" y="595.0" width="10.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="926.6" y="606.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,303 samples, 0.86%)</title><rect x="923.6" y="579.0" width="10.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="926.6" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,303 samples, 0.86%)</title><rect x="923.6" y="563.0" width="10.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="926.6" y="574.0"></text>
</g>
<g>
<title>java.lang.String (540 samples, 0.36%)</title><rect x="923.6" y="547.0" width="4.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="926.6" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (763 samples, 0.51%)</title><rect x="927.8" y="547.0" width="6.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="930.8" y="558.0"></text>
</g>
<g>
<title>byte[] (763 samples, 0.51%)</title><rect x="927.8" y="531.0" width="6.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="930.8" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (10,544 samples, 7.00%)</title><rect x="933.8" y="627.0" width="82.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="936.8" y="638.0">one/nio/h..</text>
</g>
<g>
<title>one.nio.http.Request (1,654 samples, 1.10%)</title><rect x="933.8" y="611.0" width="12.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="936.8" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1,796 samples, 1.19%)</title><rect x="946.7" y="611.0" width="14.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="949.7" y="622.0"></text>
</g>
<g>
<title>java.lang.String[] (1,362 samples, 0.90%)</title><rect x="946.7" y="595.0" width="10.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="949.7" y="606.0"></text>
</g>
<g>
<title>java.lang.String[] (434 samples, 0.29%)</title><rect x="957.4" y="595.0" width="3.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="960.4" y="606.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (7,094 samples, 4.71%)</title><rect x="960.8" y="611.0" width="55.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="963.8" y="622.0">one/n..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (7,094 samples, 4.71%)</title><rect x="960.8" y="595.0" width="55.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="963.8" y="606.0">one/n..</text>
</g>
<g>
<title>char[] (2,300 samples, 1.53%)</title><rect x="960.8" y="579.0" width="18.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="963.8" y="590.0"></text>
</g>
<g>
<title>char[] (588 samples, 0.39%)</title><rect x="978.8" y="579.0" width="4.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="981.8" y="590.0"></text>
</g>
<g>
<title>java.lang.String (1,904 samples, 1.26%)</title><rect x="983.4" y="579.0" width="14.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="986.4" y="590.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2,302 samples, 1.53%)</title><rect x="998.3" y="579.0" width="18.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1001.3" y="590.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2,302 samples, 1.53%)</title><rect x="998.3" y="563.0" width="18.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1001.3" y="574.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (2,302 samples, 1.53%)</title><rect x="998.3" y="547.0" width="18.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1001.3" y="558.0"></text>
</g>
<g>
<title>byte[] (2,286 samples, 1.52%)</title><rect x="998.3" y="531.0" width="17.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1001.3" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (267 samples, 0.18%)</title><rect x="1016.3" y="627.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1019.3" y="638.0"></text>
</g>
<g>
<title>byte[] (267 samples, 0.18%)</title><rect x="1016.3" y="611.0" width="2.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1019.3" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (642 samples, 0.43%)</title><rect x="1018.4" y="627.0" width="5.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1021.4" y="638.0"></text>
</g>
<g>
<title>java/lang/String.substring (642 samples, 0.43%)</title><rect x="1018.4" y="611.0" width="5.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1021.4" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (642 samples, 0.43%)</title><rect x="1018.4" y="595.0" width="5.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1021.4" y="606.0"></text>
</g>
<g>
<title>java.lang.String (316 samples, 0.21%)</title><rect x="1018.4" y="579.0" width="2.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1021.4" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (326 samples, 0.22%)</title><rect x="1020.9" y="579.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1023.9" y="590.0"></text>
</g>
<g>
<title>byte[] (326 samples, 0.22%)</title><rect x="1020.9" y="563.0" width="2.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1023.9" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (21,197 samples, 14.06%)</title><rect x="1023.4" y="627.0" width="166.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1026.4" y="638.0">one/nio/util/Utf8.read</text>
</g>
<g>
<title>one/nio/util/Utf8.read (21,197 samples, 14.06%)</title><rect x="1023.4" y="611.0" width="166.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1026.4" y="622.0">one/nio/util/Utf8.read</text>
</g>
<g>
<title>char[] (8,717 samples, 5.78%)</title><rect x="1023.4" y="595.0" width="68.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1026.4" y="606.0">char[]</text>
</g>
<g>
<title>char[] (2,175 samples, 1.44%)</title><rect x="1091.7" y="595.0" width="17.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1094.7" y="606.0"></text>
</g>
<g>
<title>java.lang.String (2,928 samples, 1.94%)</title><rect x="1108.7" y="595.0" width="22.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1111.7" y="606.0">j..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (7,377 samples, 4.89%)</title><rect x="1131.6" y="595.0" width="57.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1134.6" y="606.0">java/l..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (7,377 samples, 4.89%)</title><rect x="1131.6" y="579.0" width="57.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1134.6" y="590.0">java/l..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (7,377 samples, 4.89%)</title><rect x="1131.6" y="563.0" width="57.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1134.6" y="574.0">java/l..</text>
</g>
<g>
<title>byte[] (7,330 samples, 4.86%)</title><rect x="1131.6" y="547.0" width="57.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1134.6" y="558.0">byte[]</text>
</g>
<g>
<title>byte[] (47 samples, 0.03%)</title><rect x="1189.0" y="547.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1192.0" y="558.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (83 samples, 0.06%)</title><rect x="1189.4" y="643.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1192.4" y="654.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (83 samples, 0.06%)</title><rect x="1189.4" y="627.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1192.4" y="638.0"></text>
</g>
<g>
<title>one/nio/net/SocketClosedException.&lt;init&gt; (73 samples, 0.05%)</title><rect x="1189.4" y="611.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1192.4" y="622.0"></text>
</g>
<g>
<title>java/net/SocketException.&lt;init&gt; (73 samples, 0.05%)</title><rect x="1189.4" y="595.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1192.4" y="606.0"></text>
</g>
<g>
<title>java/io/IOException.&lt;init&gt; (73 samples, 0.05%)</title><rect x="1189.4" y="579.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1192.4" y="590.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (73 samples, 0.05%)</title><rect x="1189.4" y="563.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1192.4" y="574.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (73 samples, 0.05%)</title><rect x="1189.4" y="547.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1192.4" y="558.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (73 samples, 0.05%)</title><rect x="1189.4" y="531.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1192.4" y="542.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (73 samples, 0.05%)</title><rect x="1189.4" y="515.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1192.4" y="526.0"></text>
</g>
<g>
<title>long[] (39 samples, 0.03%)</title><rect x="1189.5" y="499.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1192.5" y="510.0"></text>
</g>
</g>
</svg>
