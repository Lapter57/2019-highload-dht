<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="758" onload="init(evt)" viewBox="0 0 1200 758" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="741"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="741"> </text>
<g id="frames">
<g>
<title>all (520,735 samples, 100.00%)</title><rect x="10.0" y="707.0" width="1180.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="13.0" y="718.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (286,397 samples, 55.00%)</title><rect x="10.0" y="691.0" width="649.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.0" y="702.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (286,397 samples, 55.00%)</title><rect x="10.0" y="675.0" width="649.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.0" y="686.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (286,397 samples, 55.00%)</title><rect x="10.0" y="659.0" width="649.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="13.0" y="670.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (37,363 samples, 7.18%)</title><rect x="10.0" y="643.0" width="84.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.0" y="654.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (37,363 samples, 7.18%)</title><rect x="10.0" y="627.0" width="84.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.0" y="638.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (37,363 samples, 7.18%)</title><rect x="10.0" y="611.0" width="84.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.0" y="622.0">java/util/..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (170 samples, 0.03%)</title><rect x="10.0" y="595.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="13.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$128/1729551726.apply (37,192 samples, 7.14%)</title><rect x="10.4" y="595.0" width="84.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="13.4" y="606.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (37,192 samples, 7.14%)</title><rect x="10.4" y="579.0" width="84.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.4" y="590.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (37,192 samples, 7.14%)</title><rect x="10.4" y="563.0" width="84.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.4" y="574.0">jdk/intern..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (259 samples, 0.05%)</title><rect x="10.4" y="547.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="13.4" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (259 samples, 0.05%)</title><rect x="10.4" y="531.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$236/388216554.get$Lambda (160 samples, 0.03%)</title><rect x="10.4" y="515.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="13.4" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$236 (160 samples, 0.03%)</title><rect x="10.4" y="499.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="13.4" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (400 samples, 0.08%)</title><rect x="11.0" y="547.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="14.0" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (400 samples, 0.08%)</title><rect x="11.0" y="531.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="14.0" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (210 samples, 0.04%)</title><rect x="11.0" y="515.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="14.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (190 samples, 0.04%)</title><rect x="11.4" y="515.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="14.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (190 samples, 0.04%)</title><rect x="11.4" y="499.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="14.4" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (190 samples, 0.04%)</title><rect x="11.4" y="483.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="14.4" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (733 samples, 0.14%)</title><rect x="11.9" y="547.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="14.9" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (733 samples, 0.14%)</title><rect x="11.9" y="531.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="14.9" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (390 samples, 0.07%)</title><rect x="11.9" y="515.0" width="0.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="14.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (343 samples, 0.07%)</title><rect x="12.8" y="515.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="15.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (343 samples, 0.07%)</title><rect x="12.8" y="499.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="15.8" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (343 samples, 0.07%)</title><rect x="12.8" y="483.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="15.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (35,800 samples, 6.87%)</title><rect x="13.5" y="547.0" width="81.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="16.5" y="558.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (35,800 samples, 6.87%)</title><rect x="13.5" y="531.0" width="81.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="16.5" y="542.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (35,800 samples, 6.87%)</title><rect x="13.5" y="515.0" width="81.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="16.5" y="526.0">jdk/inter..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (676 samples, 0.13%)</title><rect x="13.5" y="499.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="16.5" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (676 samples, 0.13%)</title><rect x="13.5" y="483.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="16.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$148/2053429061.get$Lambda (403 samples, 0.08%)</title><rect x="13.5" y="467.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="16.5" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$148 (403 samples, 0.08%)</title><rect x="13.5" y="451.0" width="1.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="16.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$149/2119912657.get$Lambda (127 samples, 0.02%)</title><rect x="14.5" y="467.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="17.5" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$149 (127 samples, 0.02%)</title><rect x="14.5" y="451.0" width="0.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="17.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$209/384755526.get$Lambda (146 samples, 0.03%)</title><rect x="14.7" y="467.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="17.7" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$209 (146 samples, 0.03%)</title><rect x="14.7" y="451.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="17.7" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (22,390 samples, 4.30%)</title><rect x="15.1" y="499.0" width="50.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="18.1" y="510.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (22,390 samples, 4.30%)</title><rect x="15.1" y="483.0" width="50.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="18.1" y="494.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (22,195 samples, 4.26%)</title><rect x="15.1" y="467.0" width="50.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="18.1" y="478.0">java/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$209/384755526.apply (22,195 samples, 4.26%)</title><rect x="15.1" y="451.0" width="50.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="18.1" y="462.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (22,195 samples, 4.26%)</title><rect x="15.1" y="435.0" width="50.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="18.1" y="446.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (22,195 samples, 4.26%)</title><rect x="15.1" y="419.0" width="50.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="18.1" y="430.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$149/2119912657.apply (22,195 samples, 4.26%)</title><rect x="15.1" y="403.0" width="50.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="18.1" y="414.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (22,195 samples, 4.26%)</title><rect x="15.1" y="387.0" width="50.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="18.1" y="398.0">jdk/i..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (129 samples, 0.02%)</title><rect x="15.1" y="371.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="18.1" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (129 samples, 0.02%)</title><rect x="15.1" y="355.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="18.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$235/542698874.get$Lambda (129 samples, 0.02%)</title><rect x="15.1" y="339.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="18.1" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$235 (129 samples, 0.02%)</title><rect x="15.1" y="323.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="18.1" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (424 samples, 0.08%)</title><rect x="15.4" y="371.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="18.4" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (424 samples, 0.08%)</title><rect x="15.4" y="355.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="18.4" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (240 samples, 0.05%)</title><rect x="15.4" y="339.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="18.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (161 samples, 0.03%)</title><rect x="16.0" y="339.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="19.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (161 samples, 0.03%)</title><rect x="16.0" y="323.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="19.0" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (161 samples, 0.03%)</title><rect x="16.0" y="307.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="19.0" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (385 samples, 0.07%)</title><rect x="16.3" y="371.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="19.3" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (385 samples, 0.07%)</title><rect x="16.3" y="355.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="19.3" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (230 samples, 0.04%)</title><rect x="16.3" y="339.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="19.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (154 samples, 0.03%)</title><rect x="16.8" y="339.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="19.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (154 samples, 0.03%)</title><rect x="16.8" y="323.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="19.8" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (154 samples, 0.03%)</title><rect x="16.8" y="307.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="19.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (21,257 samples, 4.08%)</title><rect x="17.2" y="371.0" width="48.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="20.2" y="382.0">jdk/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (197 samples, 0.04%)</title><rect x="17.2" y="355.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="20.2" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (197 samples, 0.04%)</title><rect x="17.2" y="339.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="20.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$234/1504599646.get$Lambda (114 samples, 0.02%)</title><rect x="17.4" y="323.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="20.4" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$234 (114 samples, 0.02%)</title><rect x="17.4" y="307.0" width="0.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="20.4" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (18,225 samples, 3.50%)</title><rect x="17.6" y="355.0" width="41.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="20.6" y="366.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (18,225 samples, 3.50%)</title><rect x="17.6" y="339.0" width="41.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="20.6" y="350.0">jav..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (204 samples, 0.04%)</title><rect x="17.6" y="323.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="20.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$232/1335640103.apply (17,662 samples, 3.39%)</title><rect x="18.1" y="323.0" width="40.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="21.1" y="334.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (17,662 samples, 3.39%)</title><rect x="18.1" y="307.0" width="40.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="21.1" y="318.0">jdk..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (113 samples, 0.02%)</title><rect x="18.1" y="291.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="21.1" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (113 samples, 0.02%)</title><rect x="18.1" y="275.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="21.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$245/1147499784.get$Lambda (113 samples, 0.02%)</title><rect x="18.1" y="259.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="21.1" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$245 (113 samples, 0.02%)</title><rect x="18.1" y="243.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="21.1" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (415 samples, 0.08%)</title><rect x="18.4" y="291.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="21.4" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (415 samples, 0.08%)</title><rect x="18.4" y="275.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="21.4" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (224 samples, 0.04%)</title><rect x="18.4" y="259.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="21.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (191 samples, 0.04%)</title><rect x="18.9" y="259.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="21.9" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (191 samples, 0.04%)</title><rect x="18.9" y="243.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="21.9" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (191 samples, 0.04%)</title><rect x="18.9" y="227.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="21.9" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (193 samples, 0.04%)</title><rect x="19.3" y="291.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="22.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (255 samples, 0.05%)</title><rect x="19.7" y="291.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="22.7" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (118 samples, 0.02%)</title><rect x="19.7" y="275.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="22.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (137 samples, 0.03%)</title><rect x="20.0" y="275.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="23.0" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (128 samples, 0.02%)</title><rect x="20.0" y="259.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="23.0" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (128 samples, 0.02%)</title><rect x="20.0" y="243.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="23.0" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (128 samples, 0.02%)</title><rect x="20.0" y="227.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="23.0" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (128 samples, 0.02%)</title><rect x="20.0" y="211.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="23.0" y="222.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (128 samples, 0.02%)</title><rect x="20.0" y="195.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="23.0" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (424 samples, 0.08%)</title><rect x="20.3" y="291.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="23.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (424 samples, 0.08%)</title><rect x="20.3" y="275.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="23.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (155 samples, 0.03%)</title><rect x="20.3" y="259.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="23.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (155 samples, 0.03%)</title><rect x="20.3" y="243.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="23.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (155 samples, 0.03%)</title><rect x="20.3" y="227.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="23.3" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (155 samples, 0.03%)</title><rect x="20.3" y="211.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="23.3" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (269 samples, 0.05%)</title><rect x="20.7" y="259.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="23.7" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (269 samples, 0.05%)</title><rect x="20.7" y="243.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="23.7" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (194 samples, 0.04%)</title><rect x="20.7" y="227.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="23.7" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (16,262 samples, 3.12%)</title><rect x="21.3" y="291.0" width="36.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="24.3" y="302.0">jdk..</text>
</g>
<g>
<title>java.lang.StringBuilder (143 samples, 0.03%)</title><rect x="21.3" y="275.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="24.3" y="286.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1,544 samples, 0.30%)</title><rect x="21.6" y="275.0" width="3.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="24.6" y="286.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1,544 samples, 0.30%)</title><rect x="21.6" y="259.0" width="3.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="24.6" y="270.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (1,544 samples, 0.30%)</title><rect x="21.6" y="243.0" width="3.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="24.6" y="254.0"></text>
</g>
<g>
<title>byte[] (1,544 samples, 0.30%)</title><rect x="21.6" y="227.0" width="3.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="24.6" y="238.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (458 samples, 0.09%)</title><rect x="25.1" y="275.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="28.1" y="286.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (458 samples, 0.09%)</title><rect x="25.1" y="259.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="28.1" y="270.0"></text>
</g>
<g>
<title>byte[] (458 samples, 0.09%)</title><rect x="25.1" y="243.0" width="1.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="28.1" y="254.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1,563 samples, 0.30%)</title><rect x="26.1" y="275.0" width="3.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="29.1" y="286.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,563 samples, 0.30%)</title><rect x="26.1" y="259.0" width="3.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="29.1" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,563 samples, 0.30%)</title><rect x="26.1" y="243.0" width="3.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="29.1" y="254.0"></text>
</g>
<g>
<title>byte[] (1,563 samples, 0.30%)</title><rect x="26.1" y="227.0" width="3.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="29.1" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (274 samples, 0.05%)</title><rect x="29.7" y="275.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="32.7" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (274 samples, 0.05%)</title><rect x="29.7" y="259.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="32.7" y="270.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (274 samples, 0.05%)</title><rect x="29.7" y="243.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="32.7" y="254.0"></text>
</g>
<g>
<title>java/util/List.of (143 samples, 0.03%)</title><rect x="30.3" y="275.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="33.3" y="286.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (143 samples, 0.03%)</title><rect x="30.3" y="259.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="33.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (10,288 samples, 1.98%)</title><rect x="30.6" y="275.0" width="23.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="33.6" y="286.0">j..</text>
</g>
<g>
<title>java/util/function/BiPredicate.and (164 samples, 0.03%)</title><rect x="30.6" y="259.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="33.6" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (164 samples, 0.03%)</title><rect x="30.6" y="243.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="33.6" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (164 samples, 0.03%)</title><rect x="30.6" y="227.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="33.6" y="238.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$248/471895969.get$Lambda (164 samples, 0.03%)</title><rect x="30.6" y="211.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="33.6" y="222.0"></text>
</g>
<g>
<title>java.util.function.BiPredicate$$Lambda$248 (164 samples, 0.03%)</title><rect x="30.6" y="195.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="33.6" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (4,800 samples, 0.92%)</title><rect x="31.0" y="259.0" width="10.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="34.0" y="270.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2,407 samples, 0.46%)</title><rect x="31.0" y="243.0" width="5.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="34.0" y="254.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (2,407 samples, 0.46%)</title><rect x="31.0" y="227.0" width="5.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="34.0" y="238.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (2,407 samples, 0.46%)</title><rect x="31.0" y="211.0" width="5.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="34.0" y="222.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2,407 samples, 0.46%)</title><rect x="31.0" y="195.0" width="5.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="34.0" y="206.0"></text>
</g>
<g>
<title>byte[] (2,407 samples, 0.46%)</title><rect x="31.0" y="179.0" width="5.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="34.0" y="190.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (378 samples, 0.07%)</title><rect x="36.5" y="243.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="39.5" y="254.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (378 samples, 0.07%)</title><rect x="36.5" y="227.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="39.5" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (378 samples, 0.07%)</title><rect x="36.5" y="211.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="39.5" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntryIterator (378 samples, 0.07%)</title><rect x="36.5" y="195.0" width="0.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="39.5" y="206.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.entrySet (350 samples, 0.07%)</title><rect x="37.3" y="243.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="40.3" y="254.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet (184 samples, 0.04%)</title><rect x="37.3" y="227.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="40.3" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.entrySet (166 samples, 0.03%)</title><rect x="37.7" y="227.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="40.7" y="238.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntrySet (166 samples, 0.03%)</title><rect x="37.7" y="211.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="40.7" y="222.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$248/471895969.test (1,665 samples, 0.32%)</title><rect x="38.1" y="243.0" width="3.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="41.1" y="254.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (1,665 samples, 0.32%)</title><rect x="38.1" y="227.0" width="3.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="41.1" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$77/1464555023.test (1,665 samples, 0.32%)</title><rect x="38.1" y="211.0" width="3.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="41.1" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (1,665 samples, 0.32%)</title><rect x="38.1" y="195.0" width="3.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="41.1" y="206.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$66/254801937.test (1,665 samples, 0.32%)</title><rect x="38.1" y="179.0" width="3.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="41.1" y="190.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (1,665 samples, 0.32%)</title><rect x="38.1" y="163.0" width="3.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="41.1" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$65/270056930.test (1,665 samples, 0.32%)</title><rect x="38.1" y="147.0" width="3.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="41.1" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (1,665 samples, 0.32%)</title><rect x="38.1" y="131.0" width="3.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="41.1" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,665 samples, 0.32%)</title><rect x="38.1" y="115.0" width="3.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="41.1" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,665 samples, 0.32%)</title><rect x="38.1" y="99.0" width="3.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="41.1" y="110.0"></text>
</g>
<g>
<title>java.lang.String (814 samples, 0.16%)</title><rect x="38.1" y="83.0" width="1.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="41.1" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (851 samples, 0.16%)</title><rect x="39.9" y="83.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="42.9" y="94.0"></text>
</g>
<g>
<title>byte[] (851 samples, 0.16%)</title><rect x="39.9" y="67.0" width="2.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="42.9" y="78.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (5,324 samples, 1.02%)</title><rect x="41.9" y="259.0" width="12.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="44.9" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (5,324 samples, 1.02%)</title><rect x="41.9" y="243.0" width="12.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="44.9" y="254.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (5,324 samples, 1.02%)</title><rect x="41.9" y="227.0" width="12.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="44.9" y="238.0"></text>
</g>
<g>
<title>java.util.ArrayList (122 samples, 0.02%)</title><rect x="42.1" y="211.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="45.1" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap (256 samples, 0.05%)</title><rect x="42.4" y="211.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="45.4" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (178 samples, 0.03%)</title><rect x="43.2" y="211.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="46.2" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (178 samples, 0.03%)</title><rect x="43.2" y="195.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="46.2" y="206.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$115/937225413.get$Lambda (178 samples, 0.03%)</title><rect x="43.2" y="179.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="46.2" y="190.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$115 (178 samples, 0.03%)</title><rect x="43.2" y="163.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="46.2" y="174.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (198 samples, 0.04%)</title><rect x="43.6" y="211.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="46.6" y="222.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (198 samples, 0.04%)</title><rect x="43.6" y="195.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="46.6" y="206.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (4,116 samples, 0.79%)</title><rect x="44.0" y="211.0" width="9.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="47.0" y="222.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$115/937225413.accept (4,116 samples, 0.79%)</title><rect x="44.0" y="195.0" width="9.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="47.0" y="206.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (4,116 samples, 0.79%)</title><rect x="44.0" y="179.0" width="9.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="47.0" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (802 samples, 0.15%)</title><rect x="44.0" y="163.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="47.0" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (802 samples, 0.15%)</title><rect x="44.0" y="147.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="47.0" y="158.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$118/2131634163.get$Lambda (802 samples, 0.15%)</title><rect x="44.0" y="131.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="47.0" y="142.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$118 (802 samples, 0.15%)</title><rect x="44.0" y="115.0" width="1.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="47.0" y="126.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (306 samples, 0.06%)</title><rect x="45.8" y="163.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="48.8" y="174.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$118/2131634163.accept (306 samples, 0.06%)</title><rect x="45.8" y="147.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="48.8" y="158.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (306 samples, 0.06%)</title><rect x="45.8" y="131.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="48.8" y="142.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (306 samples, 0.06%)</title><rect x="45.8" y="115.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="48.8" y="126.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (306 samples, 0.06%)</title><rect x="45.8" y="99.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="48.8" y="110.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (306 samples, 0.06%)</title><rect x="45.8" y="83.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="48.8" y="94.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (306 samples, 0.06%)</title><rect x="45.8" y="67.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="48.8" y="78.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (306 samples, 0.06%)</title><rect x="45.8" y="51.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="48.8" y="62.0"></text>
</g>
<g>
<title>java.lang.Object[] (306 samples, 0.06%)</title><rect x="45.8" y="35.0" width="0.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="48.8" y="46.0"></text>
</g>
<g>
<title>java/util/List.copyOf (1,628 samples, 0.31%)</title><rect x="46.5" y="163.0" width="3.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="49.5" y="174.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (1,628 samples, 0.31%)</title><rect x="46.5" y="147.0" width="3.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="49.5" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (807 samples, 0.15%)</title><rect x="46.5" y="131.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="49.5" y="142.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (807 samples, 0.15%)</title><rect x="46.5" y="115.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="49.5" y="126.0"></text>
</g>
<g>
<title>java.lang.Object[] (807 samples, 0.15%)</title><rect x="46.5" y="99.0" width="1.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="49.5" y="110.0"></text>
</g>
<g>
<title>java/util/List.of (821 samples, 0.16%)</title><rect x="48.4" y="131.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="51.4" y="142.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (821 samples, 0.16%)</title><rect x="48.4" y="115.0" width="1.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="51.4" y="126.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1,380 samples, 0.27%)</title><rect x="50.2" y="163.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="53.2" y="174.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (1,380 samples, 0.27%)</title><rect x="50.2" y="147.0" width="3.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="53.2" y="158.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (259 samples, 0.05%)</title><rect x="53.4" y="211.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="56.4" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap (259 samples, 0.05%)</title><rect x="53.4" y="195.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="56.4" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (405 samples, 0.08%)</title><rect x="53.9" y="275.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="56.9" y="286.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (139 samples, 0.03%)</title><rect x="53.9" y="259.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="56.9" y="270.0"></text>
</g>
<g>
<title>byte[] (139 samples, 0.03%)</title><rect x="53.9" y="243.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="56.9" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (266 samples, 0.05%)</title><rect x="54.3" y="259.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="57.3" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (266 samples, 0.05%)</title><rect x="54.3" y="243.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="57.3" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/667821226.invoke (266 samples, 0.05%)</title><rect x="54.3" y="227.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="57.3" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (266 samples, 0.05%)</title><rect x="54.3" y="211.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="57.3" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (174 samples, 0.03%)</title><rect x="54.5" y="195.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="57.5" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (174 samples, 0.03%)</title><rect x="54.5" y="179.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="57.5" y="190.0"></text>
</g>
<g>
<title>byte[] (174 samples, 0.03%)</title><rect x="54.5" y="163.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="57.5" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (452 samples, 0.09%)</title><rect x="54.9" y="275.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="57.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (452 samples, 0.09%)</title><rect x="54.9" y="259.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="57.9" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (452 samples, 0.09%)</title><rect x="54.9" y="243.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="57.9" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (452 samples, 0.09%)</title><rect x="54.9" y="227.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="57.9" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/667821226.invoke (452 samples, 0.09%)</title><rect x="54.9" y="211.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="57.9" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (452 samples, 0.09%)</title><rect x="54.9" y="195.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="57.9" y="206.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (119 samples, 0.02%)</title><rect x="54.9" y="179.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="57.9" y="190.0"></text>
</g>
<g>
<title>java.lang.String (119 samples, 0.02%)</title><rect x="54.9" y="163.0" width="0.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="57.9" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (333 samples, 0.06%)</title><rect x="55.1" y="179.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="58.1" y="190.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (333 samples, 0.06%)</title><rect x="55.1" y="163.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="58.1" y="174.0"></text>
</g>
<g>
<title>byte[] (333 samples, 0.06%)</title><rect x="55.1" y="147.0" width="0.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="58.1" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (992 samples, 0.19%)</title><rect x="55.9" y="275.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="58.9" y="286.0"></text>
</g>
<g>
<title>java.util.ArrayList (268 samples, 0.05%)</title><rect x="55.9" y="259.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="58.9" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (261 samples, 0.05%)</title><rect x="56.5" y="259.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="59.5" y="270.0"></text>
</g>
<g>
<title>java.lang.Object[] (261 samples, 0.05%)</title><rect x="56.5" y="243.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="59.5" y="254.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (463 samples, 0.09%)</title><rect x="57.1" y="259.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="60.1" y="270.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (463 samples, 0.09%)</title><rect x="57.1" y="243.0" width="1.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="60.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (359 samples, 0.07%)</title><rect x="58.1" y="323.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="61.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (359 samples, 0.07%)</title><rect x="58.1" y="307.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="61.1" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (359 samples, 0.07%)</title><rect x="58.1" y="291.0" width="0.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="61.1" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response (468 samples, 0.09%)</title><rect x="58.9" y="355.0" width="1.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="61.9" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (163 samples, 0.03%)</title><rect x="60.0" y="355.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="63.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (2,204 samples, 0.42%)</title><rect x="60.4" y="355.0" width="5.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="63.4" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (165 samples, 0.03%)</title><rect x="60.4" y="339.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="63.4" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (165 samples, 0.03%)</title><rect x="60.4" y="323.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="63.4" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1HeaderParser (223 samples, 0.04%)</title><rect x="60.7" y="339.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="63.7" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$BodyReader (201 samples, 0.04%)</title><rect x="61.3" y="339.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="64.3" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$HeadersReader (231 samples, 0.04%)</title><rect x="61.7" y="339.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="64.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (644 samples, 0.12%)</title><rect x="62.2" y="339.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="65.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (644 samples, 0.12%)</title><rect x="62.2" y="323.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="65.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (644 samples, 0.12%)</title><rect x="62.2" y="307.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="65.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (644 samples, 0.12%)</title><rect x="62.2" y="291.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="65.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (644 samples, 0.12%)</title><rect x="62.2" y="275.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="65.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (644 samples, 0.12%)</title><rect x="62.2" y="259.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="65.2" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$199/1509846524.run (644 samples, 0.12%)</title><rect x="62.2" y="243.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="65.2" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (644 samples, 0.12%)</title><rect x="62.2" y="227.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="65.2" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (644 samples, 0.12%)</title><rect x="62.2" y="211.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="65.2" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (224 samples, 0.04%)</title><rect x="62.2" y="195.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="65.2" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (224 samples, 0.04%)</title><rect x="62.2" y="179.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="65.2" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$221/1241815609.get$Lambda (131 samples, 0.03%)</title><rect x="62.4" y="163.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="65.4" y="174.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$221 (131 samples, 0.03%)</title><rect x="62.4" y="147.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="65.4" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (182 samples, 0.03%)</title><rect x="62.7" y="195.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="65.7" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (238 samples, 0.05%)</title><rect x="63.1" y="195.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="66.1" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (238 samples, 0.05%)</title><rect x="63.1" y="179.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="66.1" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (133 samples, 0.03%)</title><rect x="63.4" y="163.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="66.4" y="174.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (133 samples, 0.03%)</title><rect x="63.4" y="147.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="66.4" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.&lt;init&gt; (575 samples, 0.11%)</title><rect x="63.7" y="339.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="66.7" y="350.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (140 samples, 0.03%)</title><rect x="63.7" y="323.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="66.7" y="334.0"></text>
</g>
<g>
<title>java.util.HashMap (253 samples, 0.05%)</title><rect x="64.0" y="323.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="67.0" y="334.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (182 samples, 0.03%)</title><rect x="64.6" y="323.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="67.6" y="334.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (182 samples, 0.03%)</title><rect x="64.6" y="307.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="67.6" y="318.0"></text>
</g>
<g>
<title>byte[] (182 samples, 0.03%)</title><rect x="64.6" y="291.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="67.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.start (165 samples, 0.03%)</title><rect x="65.0" y="339.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="68.0" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (165 samples, 0.03%)</title><rect x="65.0" y="323.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="68.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (195 samples, 0.04%)</title><rect x="65.4" y="467.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="68.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (195 samples, 0.04%)</title><rect x="65.4" y="451.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="68.4" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (195 samples, 0.04%)</title><rect x="65.4" y="435.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="68.4" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (467 samples, 0.09%)</title><rect x="65.8" y="499.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="68.8" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (467 samples, 0.09%)</title><rect x="65.8" y="483.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="68.8" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (262 samples, 0.05%)</title><rect x="65.8" y="467.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="68.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (205 samples, 0.04%)</title><rect x="66.4" y="467.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="69.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (205 samples, 0.04%)</title><rect x="66.4" y="451.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="69.4" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (205 samples, 0.04%)</title><rect x="66.4" y="435.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="69.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (12,267 samples, 2.36%)</title><rect x="66.9" y="499.0" width="27.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="69.9" y="510.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (183 samples, 0.04%)</title><rect x="66.9" y="483.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="69.9" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (183 samples, 0.04%)</title><rect x="66.9" y="467.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="69.9" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (357 samples, 0.07%)</title><rect x="67.3" y="483.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="70.3" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (357 samples, 0.07%)</title><rect x="67.3" y="467.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="70.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$207/900893826.apply (155 samples, 0.03%)</title><rect x="67.3" y="451.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="70.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$establishExchange$2 (155 samples, 0.03%)</title><rect x="67.3" y="435.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="70.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (155 samples, 0.03%)</title><rect x="67.3" y="419.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="70.3" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (155 samples, 0.03%)</title><rect x="67.3" y="403.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="70.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (202 samples, 0.04%)</title><rect x="67.6" y="451.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="70.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (202 samples, 0.04%)</title><rect x="67.6" y="435.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="70.6" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (202 samples, 0.04%)</title><rect x="67.6" y="419.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="70.6" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (184 samples, 0.04%)</title><rect x="68.1" y="483.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="71.1" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (184 samples, 0.04%)</title><rect x="68.1" y="467.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="71.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (184 samples, 0.04%)</title><rect x="68.1" y="451.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="71.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (184 samples, 0.04%)</title><rect x="68.1" y="435.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="71.1" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (184 samples, 0.04%)</title><rect x="68.1" y="419.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="71.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (11,543 samples, 2.22%)</title><rect x="68.5" y="483.0" width="26.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="71.5" y="494.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (139 samples, 0.03%)</title><rect x="68.5" y="467.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="71.5" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (139 samples, 0.03%)</title><rect x="68.5" y="451.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="71.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$154/1584594711.get$Lambda (139 samples, 0.03%)</title><rect x="68.5" y="435.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="71.5" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ExchangeImpl$$Lambda$154 (139 samples, 0.03%)</title><rect x="68.5" y="419.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="71.5" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (10,736 samples, 2.06%)</title><rect x="68.8" y="467.0" width="24.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="71.8" y="478.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (10,736 samples, 2.06%)</title><rect x="68.8" y="451.0" width="24.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="71.8" y="462.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (10,557 samples, 2.03%)</title><rect x="68.8" y="435.0" width="23.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="71.8" y="446.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$154/1584594711.apply (10,557 samples, 2.03%)</title><rect x="68.8" y="419.0" width="23.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="71.8" y="430.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$get$0 (10,557 samples, 2.03%)</title><rect x="68.8" y="403.0" width="23.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="71.8" y="414.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createExchangeImpl (10,557 samples, 2.03%)</title><rect x="68.8" y="387.0" width="23.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="71.8" y="398.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (4,405 samples, 0.85%)</title><rect x="69.1" y="371.0" width="9.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="72.1" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (4,405 samples, 0.85%)</title><rect x="69.1" y="355.0" width="9.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="72.1" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (4,405 samples, 0.85%)</title><rect x="69.1" y="339.0" width="9.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="72.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$201/376986198.apply (4,196 samples, 0.81%)</title><rect x="69.1" y="323.0" width="9.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="72.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$1 (4,196 samples, 0.81%)</title><rect x="69.1" y="307.0" width="9.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="72.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (4,196 samples, 0.81%)</title><rect x="69.1" y="291.0" width="9.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="72.1" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (4,196 samples, 0.81%)</title><rect x="69.1" y="275.0" width="9.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="72.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getSettingsString (2,684 samples, 0.52%)</title><rect x="69.1" y="259.0" width="6.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="72.1" y="270.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encodeToString (716 samples, 0.14%)</title><rect x="69.1" y="243.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="72.1" y="254.0"></text>
</g>
<g>
<title>java.lang.String (122 samples, 0.02%)</title><rect x="69.1" y="227.0" width="0.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="72.1" y="238.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (295 samples, 0.06%)</title><rect x="69.3" y="227.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="72.3" y="238.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (295 samples, 0.06%)</title><rect x="69.3" y="211.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="72.3" y="222.0"></text>
</g>
<g>
<title>byte[] (295 samples, 0.06%)</title><rect x="69.3" y="195.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="72.3" y="206.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encode (299 samples, 0.06%)</title><rect x="70.0" y="227.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="73.0" y="238.0"></text>
</g>
<g>
<title>byte[] (299 samples, 0.06%)</title><rect x="70.0" y="211.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="73.0" y="222.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.withoutPadding (150 samples, 0.03%)</title><rect x="70.7" y="243.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="73.7" y="254.0"></text>
</g>
<g>
<title>java.util.Base64$Encoder (150 samples, 0.03%)</title><rect x="70.7" y="227.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="73.7" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getClientSettings (1,321 samples, 0.25%)</title><rect x="71.0" y="243.0" width="3.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="74.0" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.frame.SettingsFrame (134 samples, 0.03%)</title><rect x="71.0" y="227.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="74.0" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getParameter (974 samples, 0.19%)</title><rect x="71.3" y="227.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="74.3" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getIntegerNetProperty (974 samples, 0.19%)</title><rect x="71.3" y="211.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="74.3" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/896644936.linkToTargetMethod (692 samples, 0.13%)</title><rect x="71.3" y="195.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="74.3" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (692 samples, 0.13%)</title><rect x="71.3" y="179.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="74.3" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$61/1212772528.get$Lambda (692 samples, 0.13%)</title><rect x="71.3" y="163.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="74.3" y="174.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Utils$$Lambda$61 (692 samples, 0.13%)</title><rect x="71.3" y="147.0" width="1.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="74.3" y="158.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (282 samples, 0.05%)</title><rect x="72.9" y="195.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="75.9" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$61/1212772528.run (282 samples, 0.05%)</title><rect x="72.9" y="179.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="75.9" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$getIntegerNetProperty$11 (282 samples, 0.05%)</title><rect x="72.9" y="163.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="75.9" y="174.0"></text>
</g>
<g>
<title>sun/net/NetProperties.getInteger (282 samples, 0.05%)</title><rect x="72.9" y="147.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="75.9" y="158.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (282 samples, 0.05%)</title><rect x="72.9" y="131.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="75.9" y="142.0"></text>
</g>
<g>
<title>java.lang.Integer (282 samples, 0.05%)</title><rect x="72.9" y="115.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="75.9" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (213 samples, 0.04%)</title><rect x="73.5" y="227.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="76.5" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (213 samples, 0.04%)</title><rect x="73.5" y="211.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="76.5" y="222.0"></text>
</g>
<g>
<title>int[] (213 samples, 0.04%)</title><rect x="73.5" y="195.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="76.5" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.toByteArray (497 samples, 0.10%)</title><rect x="74.0" y="243.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="77.0" y="254.0"></text>
</g>
<g>
<title>byte[] (261 samples, 0.05%)</title><rect x="74.0" y="227.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="77.0" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (236 samples, 0.05%)</title><rect x="74.6" y="227.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="77.6" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (236 samples, 0.05%)</title><rect x="74.6" y="211.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="77.6" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (236 samples, 0.05%)</title><rect x="74.6" y="195.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="77.6" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (1,512 samples, 0.29%)</title><rect x="75.1" y="259.0" width="3.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="78.1" y="270.0"></text>
</g>
<g>
<title>java.util.ArrayList (412 samples, 0.08%)</title><rect x="75.1" y="243.0" width="1.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="78.1" y="254.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (421 samples, 0.08%)</title><rect x="76.1" y="243.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="79.1" y="254.0"></text>
</g>
<g>
<title>java.lang.Object[] (421 samples, 0.08%)</title><rect x="76.1" y="227.0" width="0.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="79.1" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (679 samples, 0.13%)</title><rect x="77.0" y="243.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="80.0" y="254.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (679 samples, 0.13%)</title><rect x="77.0" y="227.0" width="1.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="80.0" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (209 samples, 0.04%)</title><rect x="78.6" y="323.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="81.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (209 samples, 0.04%)</title><rect x="78.6" y="307.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="81.6" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (209 samples, 0.04%)</title><rect x="78.6" y="291.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="81.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (6,048 samples, 1.16%)</title><rect x="79.0" y="371.0" width="13.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="82.0" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange (542 samples, 0.10%)</title><rect x="79.0" y="355.0" width="1.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="82.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (5,308 samples, 1.02%)</title><rect x="80.3" y="355.0" width="12.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="83.3" y="366.0"></text>
</g>
<g>
<title>java.util.LinkedList (153 samples, 0.03%)</title><rect x="80.5" y="339.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="83.5" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (121 samples, 0.02%)</title><rect x="80.8" y="339.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="83.8" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (227 samples, 0.04%)</title><rect x="81.1" y="339.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="84.1" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (227 samples, 0.04%)</title><rect x="81.1" y="323.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="84.1" y="334.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (227 samples, 0.04%)</title><rect x="81.1" y="307.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="84.1" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver (397 samples, 0.08%)</title><rect x="81.8" y="339.0" width="0.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="84.8" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher (245 samples, 0.05%)</title><rect x="82.7" y="339.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="85.7" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request (296 samples, 0.06%)</title><rect x="83.3" y="339.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="86.3" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (333 samples, 0.06%)</title><rect x="84.0" y="339.0" width="0.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="87.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (1,624 samples, 0.31%)</title><rect x="84.7" y="339.0" width="3.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="87.7" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (147 samples, 0.03%)</title><rect x="84.7" y="323.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="87.7" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (151 samples, 0.03%)</title><rect x="85.9" y="323.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="88.9" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (151 samples, 0.03%)</title><rect x="85.9" y="307.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="88.9" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1TubeSubscriber (114 samples, 0.02%)</title><rect x="86.2" y="323.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="89.2" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (176 samples, 0.03%)</title><rect x="86.5" y="323.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="89.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (659 samples, 0.13%)</title><rect x="86.9" y="323.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="89.9" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (134 samples, 0.03%)</title><rect x="86.9" y="307.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="89.9" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (177 samples, 0.03%)</title><rect x="87.2" y="307.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="90.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (267 samples, 0.05%)</title><rect x="87.8" y="307.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="90.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (1,067 samples, 0.20%)</title><rect x="88.4" y="339.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="91.4" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher$WriteTask (111 samples, 0.02%)</title><rect x="88.6" y="323.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="91.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (123 samples, 0.02%)</title><rect x="89.0" y="323.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="92.0" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (123 samples, 0.02%)</title><rect x="89.0" y="307.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="92.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (661 samples, 0.13%)</title><rect x="89.3" y="323.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="92.3" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (138 samples, 0.03%)</title><rect x="89.3" y="307.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="92.3" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (194 samples, 0.04%)</title><rect x="89.6" y="307.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="92.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (250 samples, 0.05%)</title><rect x="90.2" y="307.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="93.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (154 samples, 0.03%)</title><rect x="90.8" y="339.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="93.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (154 samples, 0.03%)</title><rect x="90.8" y="323.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="93.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (154 samples, 0.03%)</title><rect x="90.8" y="307.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="93.8" y="318.0"></text>
</g>
<g>
<title>java/util/HashMap.get (154 samples, 0.03%)</title><rect x="90.8" y="291.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="93.8" y="302.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (154 samples, 0.03%)</title><rect x="90.8" y="275.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="93.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (154 samples, 0.03%)</title><rect x="90.8" y="259.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="93.8" y="270.0"></text>
</g>
<g>
<title>java.lang.Object[] (154 samples, 0.03%)</title><rect x="90.8" y="243.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="93.8" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (502 samples, 0.10%)</title><rect x="91.2" y="339.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="94.2" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/896644936.linkToTargetMethod (142 samples, 0.03%)</title><rect x="91.2" y="323.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="94.2" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (142 samples, 0.03%)</title><rect x="91.2" y="307.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="94.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$163/1956467138.get$Lambda (142 samples, 0.03%)</title><rect x="91.2" y="291.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="94.2" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl$$Lambda$163 (142 samples, 0.03%)</title><rect x="91.2" y="275.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="94.2" y="286.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (360 samples, 0.07%)</title><rect x="91.5" y="323.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="94.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$163/1956467138.run (360 samples, 0.07%)</title><rect x="91.5" y="307.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="94.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (360 samples, 0.07%)</title><rect x="91.5" y="291.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="94.5" y="302.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (252 samples, 0.05%)</title><rect x="91.7" y="275.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="94.7" y="286.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress$InetSocketAddressHolder (116 samples, 0.02%)</title><rect x="91.7" y="259.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="94.7" y="270.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (136 samples, 0.03%)</title><rect x="92.0" y="259.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="95.0" y="270.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (136 samples, 0.03%)</title><rect x="92.0" y="243.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="95.0" y="254.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (136 samples, 0.03%)</title><rect x="92.0" y="227.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="95.0" y="238.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (136 samples, 0.03%)</title><rect x="92.0" y="211.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="95.0" y="222.0"></text>
</g>
<g>
<title>java.net.InetAddress[] (136 samples, 0.03%)</title><rect x="92.0" y="195.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="95.0" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (198 samples, 0.04%)</title><rect x="92.3" y="355.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="95.3" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (198 samples, 0.04%)</title><rect x="92.3" y="339.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="95.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (179 samples, 0.03%)</title><rect x="92.7" y="435.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="95.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (179 samples, 0.03%)</title><rect x="92.7" y="419.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="95.7" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (179 samples, 0.03%)</title><rect x="92.7" y="403.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="95.7" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (178 samples, 0.03%)</title><rect x="93.1" y="467.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="96.1" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (178 samples, 0.03%)</title><rect x="93.1" y="451.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="96.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (178 samples, 0.03%)</title><rect x="93.1" y="435.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="96.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (178 samples, 0.03%)</title><rect x="93.1" y="419.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="96.1" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (178 samples, 0.03%)</title><rect x="93.1" y="403.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="96.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getConnectionFor (490 samples, 0.09%)</title><rect x="93.6" y="467.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="96.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyFor (319 samples, 0.06%)</title><rect x="93.6" y="451.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="96.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyString (319 samples, 0.06%)</title><rect x="93.6" y="435.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="96.6" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/888960014.linkToTargetMethod (319 samples, 0.06%)</title><rect x="93.6" y="419.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="96.6" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1103745955.invoke (319 samples, 0.06%)</title><rect x="93.6" y="403.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="96.6" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/642648282.invoke (319 samples, 0.06%)</title><rect x="93.6" y="387.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="96.6" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (319 samples, 0.06%)</title><rect x="93.6" y="371.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="96.6" y="382.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (131 samples, 0.03%)</title><rect x="93.6" y="355.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="96.6" y="366.0"></text>
</g>
<g>
<title>java.lang.String (131 samples, 0.03%)</title><rect x="93.6" y="339.0" width="0.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="96.6" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (188 samples, 0.04%)</title><rect x="93.8" y="355.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="96.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (188 samples, 0.04%)</title><rect x="93.8" y="339.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="96.8" y="350.0"></text>
</g>
<g>
<title>byte[] (188 samples, 0.04%)</title><rect x="93.8" y="323.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="96.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (171 samples, 0.03%)</title><rect x="94.3" y="451.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="97.3" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (171 samples, 0.03%)</title><rect x="94.3" y="435.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="97.3" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (1,602 samples, 0.31%)</title><rect x="94.7" y="643.0" width="3.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="97.7" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (1,301 samples, 0.25%)</title><rect x="94.7" y="627.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="97.7" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (1,291 samples, 0.25%)</title><rect x="94.7" y="611.0" width="2.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="97.7" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (1,291 samples, 0.25%)</title><rect x="94.7" y="595.0" width="2.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="97.7" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (1,291 samples, 0.25%)</title><rect x="94.7" y="579.0" width="2.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="97.7" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.take (301 samples, 0.06%)</title><rect x="97.6" y="627.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="100.6" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.take (301 samples, 0.06%)</title><rect x="97.6" y="611.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="100.6" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.awaitNanos (300 samples, 0.06%)</title><rect x="97.6" y="595.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="100.6" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (300 samples, 0.06%)</title><rect x="97.6" y="579.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="100.6" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (300 samples, 0.06%)</title><rect x="97.6" y="563.0" width="0.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="100.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$247/1271722553.run (3,385 samples, 0.65%)</title><rect x="98.3" y="643.0" width="7.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="101.3" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (3,385 samples, 0.65%)</title><rect x="98.3" y="627.0" width="7.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="101.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (3,385 samples, 0.65%)</title><rect x="98.3" y="611.0" width="7.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="101.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (3,385 samples, 0.65%)</title><rect x="98.3" y="595.0" width="7.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="101.3" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (3,385 samples, 0.65%)</title><rect x="98.3" y="579.0" width="7.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="101.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (3,385 samples, 0.65%)</title><rect x="98.3" y="563.0" width="7.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="101.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (3,385 samples, 0.65%)</title><rect x="98.3" y="547.0" width="7.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="101.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (3,385 samples, 0.65%)</title><rect x="98.3" y="531.0" width="7.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="101.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (3,385 samples, 0.65%)</title><rect x="98.3" y="515.0" width="7.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="101.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (3,385 samples, 0.65%)</title><rect x="98.3" y="499.0" width="7.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="101.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (3,385 samples, 0.65%)</title><rect x="98.3" y="483.0" width="7.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="101.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (3,110 samples, 0.60%)</title><rect x="98.3" y="467.0" width="7.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="101.3" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (340 samples, 0.07%)</title><rect x="98.3" y="451.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="101.3" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (340 samples, 0.07%)</title><rect x="98.3" y="435.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="101.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$277/496276186.get$Lambda (242 samples, 0.05%)</title><rect x="98.5" y="419.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="101.5" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$277 (242 samples, 0.05%)</title><rect x="98.5" y="403.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="101.5" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (2,770 samples, 0.53%)</title><rect x="99.1" y="451.0" width="6.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="102.1" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (243 samples, 0.05%)</title><rect x="99.1" y="435.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="102.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (2,527 samples, 0.49%)</title><rect x="99.6" y="435.0" width="5.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="102.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (2,527 samples, 0.49%)</title><rect x="99.6" y="419.0" width="5.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="102.6" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2,527 samples, 0.49%)</title><rect x="99.6" y="403.0" width="5.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="102.6" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (1,036 samples, 0.20%)</title><rect x="99.6" y="387.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="102.6" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (341 samples, 0.07%)</title><rect x="99.6" y="371.0" width="0.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="102.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$267/1020030449.apply (579 samples, 0.11%)</title><rect x="100.4" y="371.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="103.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (579 samples, 0.11%)</title><rect x="100.4" y="355.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="103.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (579 samples, 0.11%)</title><rect x="100.4" y="339.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="103.4" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (138 samples, 0.03%)</title><rect x="100.4" y="323.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="103.4" y="334.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (138 samples, 0.03%)</title><rect x="100.4" y="307.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="103.4" y="318.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (138 samples, 0.03%)</title><rect x="100.4" y="291.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="103.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (441 samples, 0.08%)</title><rect x="100.7" y="323.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="103.7" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (361 samples, 0.07%)</title><rect x="100.9" y="307.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="103.9" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (361 samples, 0.07%)</title><rect x="100.9" y="291.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="103.9" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (181 samples, 0.03%)</title><rect x="100.9" y="275.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="103.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (179 samples, 0.03%)</title><rect x="101.3" y="275.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="104.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (179 samples, 0.03%)</title><rect x="101.3" y="259.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="104.3" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (179 samples, 0.03%)</title><rect x="101.3" y="243.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="104.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$132/1112562714.apply (114 samples, 0.02%)</title><rect x="101.7" y="371.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="104.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (114 samples, 0.02%)</title><rect x="101.7" y="355.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="104.7" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (1,491 samples, 0.29%)</title><rect x="102.0" y="387.0" width="3.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="105.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (1,491 samples, 0.29%)</title><rect x="102.0" y="371.0" width="3.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="105.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$235/542698874.apply (1,489 samples, 0.29%)</title><rect x="102.0" y="355.0" width="3.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="105.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (1,489 samples, 0.29%)</title><rect x="102.0" y="339.0" width="3.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="105.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (1,489 samples, 0.29%)</title><rect x="102.0" y="323.0" width="3.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="105.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$148/2053429061.apply (1,489 samples, 0.29%)</title><rect x="102.0" y="307.0" width="3.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="105.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (1,489 samples, 0.29%)</title><rect x="102.0" y="291.0" width="3.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="105.0" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (368 samples, 0.07%)</title><rect x="102.1" y="275.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="105.1" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (368 samples, 0.07%)</title><rect x="102.1" y="259.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="105.1" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (218 samples, 0.04%)</title><rect x="102.1" y="243.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="105.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (150 samples, 0.03%)</title><rect x="102.6" y="243.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="105.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (150 samples, 0.03%)</title><rect x="102.6" y="227.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="105.6" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (150 samples, 0.03%)</title><rect x="102.6" y="211.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="105.6" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.wrapForUpgrade (478 samples, 0.09%)</title><rect x="103.0" y="275.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="106.0" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (392 samples, 0.08%)</title><rect x="103.2" y="259.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="106.2" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (392 samples, 0.08%)</title><rect x="103.2" y="243.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="106.2" y="254.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (223 samples, 0.04%)</title><rect x="103.2" y="227.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="106.2" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (169 samples, 0.03%)</title><rect x="103.7" y="227.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="106.7" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (169 samples, 0.03%)</title><rect x="103.7" y="211.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="106.7" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (169 samples, 0.03%)</title><rect x="103.7" y="195.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="106.7" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (568 samples, 0.11%)</title><rect x="104.1" y="275.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="107.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.completeSubscriber (307 samples, 0.06%)</title><rect x="104.1" y="259.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="107.1" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1BodySubscriber$1 (152 samples, 0.03%)</title><rect x="104.1" y="243.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="107.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber$1.&lt;init&gt; (155 samples, 0.03%)</title><rect x="104.4" y="243.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="107.4" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.&lt;init&gt; (155 samples, 0.03%)</title><rect x="104.4" y="227.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="107.4" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (155 samples, 0.03%)</title><rect x="104.4" y="211.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="107.4" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (261 samples, 0.05%)</title><rect x="104.7" y="259.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="107.7" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (131 samples, 0.03%)</title><rect x="104.7" y="243.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="107.7" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (130 samples, 0.02%)</title><rect x="105.0" y="243.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="108.0" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (130 samples, 0.02%)</title><rect x="105.0" y="227.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="108.0" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (130 samples, 0.02%)</title><rect x="105.0" y="211.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="108.0" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (130 samples, 0.02%)</title><rect x="105.0" y="195.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="108.0" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (130 samples, 0.02%)</title><rect x="105.0" y="179.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="108.0" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (130 samples, 0.02%)</title><rect x="105.0" y="163.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="108.0" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (275 samples, 0.05%)</title><rect x="105.3" y="467.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="108.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (275 samples, 0.05%)</title><rect x="105.3" y="451.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="108.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (275 samples, 0.05%)</title><rect x="105.3" y="435.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="108.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (275 samples, 0.05%)</title><rect x="105.3" y="419.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="108.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (275 samples, 0.05%)</title><rect x="105.3" y="403.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="108.3" y="414.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (275 samples, 0.05%)</title><rect x="105.3" y="387.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="108.3" y="398.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (123 samples, 0.02%)</title><rect x="105.3" y="371.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="108.3" y="382.0"></text>
</g>
<g>
<title>java.nio.ByteBuffer[] (123 samples, 0.02%)</title><rect x="105.3" y="355.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="108.3" y="366.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (152 samples, 0.03%)</title><rect x="105.6" y="371.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="108.6" y="382.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (152 samples, 0.03%)</title><rect x="105.6" y="355.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="108.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (26,728 samples, 5.13%)</title><rect x="106.0" y="643.0" width="60.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="109.0" y="654.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (26,728 samples, 5.13%)</title><rect x="106.0" y="627.0" width="60.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="109.0" y="638.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (22,257 samples, 4.27%)</title><rect x="106.0" y="611.0" width="50.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="109.0" y="622.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$199/1509846524.run (22,257 samples, 4.27%)</title><rect x="106.0" y="595.0" width="50.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="109.0" y="606.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (22,257 samples, 4.27%)</title><rect x="106.0" y="579.0" width="50.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="109.0" y="590.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (386 samples, 0.07%)</title><rect x="106.0" y="563.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="109.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (386 samples, 0.07%)</title><rect x="106.0" y="547.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="109.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (386 samples, 0.07%)</title><rect x="106.0" y="531.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="109.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (386 samples, 0.07%)</title><rect x="106.0" y="515.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="109.0" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/623247230.linkToTargetMethod (211 samples, 0.04%)</title><rect x="106.0" y="499.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="109.0" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/773662650.invoke (211 samples, 0.04%)</title><rect x="106.0" y="483.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="109.0" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (211 samples, 0.04%)</title><rect x="106.0" y="467.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="109.0" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (211 samples, 0.04%)</title><rect x="106.0" y="451.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="109.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (211 samples, 0.04%)</title><rect x="106.0" y="435.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="109.0" y="446.0"></text>
</g>
<g>
<title>byte[] (211 samples, 0.04%)</title><rect x="106.0" y="419.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="109.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (175 samples, 0.03%)</title><rect x="106.4" y="499.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="109.4" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (175 samples, 0.03%)</title><rect x="106.4" y="483.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="109.4" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (175 samples, 0.03%)</title><rect x="106.4" y="467.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="109.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$251/1699824535.get$Lambda (175 samples, 0.03%)</title><rect x="106.4" y="451.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="109.4" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$251 (175 samples, 0.03%)</title><rect x="106.4" y="435.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="109.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (21,871 samples, 4.20%)</title><rect x="106.8" y="563.0" width="49.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="109.8" y="574.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (21,871 samples, 4.20%)</title><rect x="106.8" y="547.0" width="49.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="109.8" y="558.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (21,871 samples, 4.20%)</title><rect x="106.8" y="531.0" width="49.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="109.8" y="542.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (21,871 samples, 4.20%)</title><rect x="106.8" y="515.0" width="49.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="109.8" y="526.0">jdk/i..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (8,731 samples, 1.68%)</title><rect x="106.8" y="499.0" width="19.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="109.8" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (8,731 samples, 1.68%)</title><rect x="106.8" y="483.0" width="19.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="109.8" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (8,731 samples, 1.68%)</title><rect x="106.8" y="467.0" width="19.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="109.8" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (8,731 samples, 1.68%)</title><rect x="106.8" y="451.0" width="19.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="109.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (8,731 samples, 1.68%)</title><rect x="106.8" y="435.0" width="19.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="109.8" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (8,731 samples, 1.68%)</title><rect x="106.8" y="419.0" width="19.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="109.8" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (8,731 samples, 1.68%)</title><rect x="106.8" y="403.0" width="19.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="109.8" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (8,487 samples, 1.63%)</title><rect x="106.8" y="387.0" width="19.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="109.8" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (8,487 samples, 1.63%)</title><rect x="106.8" y="371.0" width="19.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="109.8" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (8,313 samples, 1.60%)</title><rect x="106.8" y="355.0" width="18.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="109.8" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (170 samples, 0.03%)</title><rect x="106.8" y="339.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="109.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$270/294090489.apply (167 samples, 0.03%)</title><rect x="107.2" y="339.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="110.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$wrapForUpgrade$10 (167 samples, 0.03%)</title><rect x="107.2" y="323.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="110.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkForUpgradeAsync (167 samples, 0.03%)</title><rect x="107.2" y="307.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="110.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (167 samples, 0.03%)</title><rect x="107.2" y="291.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="110.2" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (167 samples, 0.03%)</title><rect x="107.2" y="275.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="110.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$132/1112562714.apply (7,618 samples, 1.46%)</title><rect x="107.6" y="339.0" width="17.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="110.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (7,618 samples, 1.46%)</title><rect x="107.6" y="323.0" width="17.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="110.6" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (116 samples, 0.02%)</title><rect x="107.6" y="307.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="110.6" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (116 samples, 0.02%)</title><rect x="107.6" y="291.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="110.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$309/980063472.get$Lambda (116 samples, 0.02%)</title><rect x="107.6" y="275.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="110.6" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$309 (116 samples, 0.02%)</title><rect x="107.6" y="259.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="110.6" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (403 samples, 0.08%)</title><rect x="107.9" y="307.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="110.9" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (403 samples, 0.08%)</title><rect x="107.9" y="291.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="110.9" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (220 samples, 0.04%)</title><rect x="107.9" y="275.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="110.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (183 samples, 0.04%)</title><rect x="108.4" y="275.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="111.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (183 samples, 0.04%)</title><rect x="108.4" y="259.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="111.4" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (183 samples, 0.04%)</title><rect x="108.4" y="243.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="111.4" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (7,099 samples, 1.36%)</title><rect x="108.8" y="307.0" width="16.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="111.8" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (414 samples, 0.08%)</title><rect x="109.0" y="291.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="112.0" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (414 samples, 0.08%)</title><rect x="109.0" y="275.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="112.0" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (246 samples, 0.05%)</title><rect x="109.0" y="259.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="112.0" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (168 samples, 0.03%)</title><rect x="109.5" y="259.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="112.5" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (168 samples, 0.03%)</title><rect x="109.5" y="243.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="112.5" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (168 samples, 0.03%)</title><rect x="109.5" y="227.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="112.5" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (6,606 samples, 1.27%)</title><rect x="109.9" y="291.0" width="15.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="112.9" y="302.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers$$Lambda$120/1352876739.apply (484 samples, 0.09%)</title><rect x="109.9" y="275.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="112.9" y="286.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers.lambda$ofByteArray$12 (484 samples, 0.09%)</title><rect x="109.9" y="259.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="112.9" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.ofByteArray (484 samples, 0.09%)</title><rect x="109.9" y="243.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="112.9" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseSubscribers$ByteArraySubscriber (194 samples, 0.04%)</title><rect x="109.9" y="227.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="112.9" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.&lt;init&gt; (290 samples, 0.06%)</title><rect x="110.3" y="227.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="113.3" y="238.0"></text>
</g>
<g>
<title>java.util.ArrayList (130 samples, 0.02%)</title><rect x="110.3" y="211.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="113.3" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (160 samples, 0.03%)</title><rect x="110.6" y="211.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="113.6" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (6,122 samples, 1.18%)</title><rect x="111.0" y="275.0" width="13.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="114.0" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (194 samples, 0.04%)</title><rect x="111.0" y="259.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="114.0" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (194 samples, 0.04%)</title><rect x="111.0" y="243.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="114.0" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$300/1036110883.get$Lambda (112 samples, 0.02%)</title><rect x="111.0" y="227.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="114.0" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$300 (112 samples, 0.02%)</title><rect x="111.0" y="211.0" width="0.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="114.0" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/647302181.linkToTargetMethod (184 samples, 0.04%)</title><rect x="111.4" y="259.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="114.4" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1743165624.invokeStatic (184 samples, 0.04%)</title><rect x="111.4" y="243.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="114.4" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$288/1452226218.get$Lambda (184 samples, 0.04%)</title><rect x="111.4" y="227.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="114.4" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$288 (184 samples, 0.04%)</title><rect x="111.4" y="211.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="114.4" y="222.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (1,212 samples, 0.23%)</title><rect x="111.9" y="259.0" width="2.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="114.9" y="270.0"></text>
</g>
<g>
<title>java/util/Collection.stream (490 samples, 0.09%)</title><rect x="111.9" y="243.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="114.9" y="254.0"></text>
</g>
<g>
<title>java/util/List.spliterator (185 samples, 0.04%)</title><rect x="111.9" y="227.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="114.9" y="238.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (185 samples, 0.04%)</title><rect x="111.9" y="211.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="114.9" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (305 samples, 0.06%)</title><rect x="112.3" y="227.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="115.3" y="238.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (305 samples, 0.06%)</title><rect x="112.3" y="211.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="115.3" y="222.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (390 samples, 0.07%)</title><rect x="113.0" y="243.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="116.0" y="254.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (390 samples, 0.07%)</title><rect x="113.0" y="227.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="116.0" y="238.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (390 samples, 0.07%)</title><rect x="113.0" y="211.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="116.0" y="222.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (139 samples, 0.03%)</title><rect x="113.0" y="195.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="116.0" y="206.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (139 samples, 0.03%)</title><rect x="113.0" y="179.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="116.0" y="190.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.opWrapSink (139 samples, 0.03%)</title><rect x="113.0" y="163.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="116.0" y="174.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5$1 (139 samples, 0.03%)</title><rect x="113.0" y="147.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="116.0" y="158.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong$$Lambda$285/1678898144.get (126 samples, 0.02%)</title><rect x="113.3" y="195.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="116.3" y="206.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfLong (126 samples, 0.02%)</title><rect x="113.3" y="179.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="116.3" y="190.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (125 samples, 0.02%)</title><rect x="113.6" y="195.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="116.6" y="206.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (125 samples, 0.02%)</title><rect x="113.6" y="179.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="116.6" y="190.0"></text>
</g>
<g>
<title>java/util/OptionalLong.of (125 samples, 0.02%)</title><rect x="113.6" y="163.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="116.6" y="174.0"></text>
</g>
<g>
<title>java.util.OptionalLong (125 samples, 0.02%)</title><rect x="113.6" y="147.0" width="0.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="116.6" y="158.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.mapToLong (332 samples, 0.06%)</title><rect x="113.8" y="243.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="116.8" y="254.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5 (332 samples, 0.06%)</title><rect x="113.8" y="227.0" width="0.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="116.8" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (818 samples, 0.16%)</title><rect x="114.6" y="259.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="117.6" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (425 samples, 0.08%)</title><rect x="114.6" y="243.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="117.6" y="254.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (235 samples, 0.05%)</title><rect x="114.6" y="227.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="117.6" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (190 samples, 0.04%)</title><rect x="115.1" y="227.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="118.1" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (190 samples, 0.04%)</title><rect x="115.1" y="211.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="118.1" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (190 samples, 0.04%)</title><rect x="115.1" y="195.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="118.1" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (393 samples, 0.08%)</title><rect x="115.6" y="243.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="118.6" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (393 samples, 0.08%)</title><rect x="115.6" y="227.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="118.6" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (223 samples, 0.04%)</title><rect x="115.6" y="211.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="118.6" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (170 samples, 0.03%)</title><rect x="116.1" y="211.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="119.1" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (170 samples, 0.03%)</title><rect x="116.1" y="195.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="119.1" y="206.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (170 samples, 0.03%)</title><rect x="116.1" y="179.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="119.1" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$ClientRefCountTracker (138 samples, 0.03%)</title><rect x="116.5" y="259.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="119.5" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$Http1BodySubscriber (175 samples, 0.03%)</title><rect x="116.8" y="259.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="119.8" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (176 samples, 0.03%)</title><rect x="117.2" y="259.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="120.2" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (3,125 samples, 0.60%)</title><rect x="117.8" y="259.0" width="7.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="120.8" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$288/1452226218.run (3,125 samples, 0.60%)</title><rect x="117.8" y="243.0" width="7.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="120.8" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (3,125 samples, 0.60%)</title><rect x="117.8" y="227.0" width="7.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="120.8" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (409 samples, 0.08%)</title><rect x="117.8" y="211.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="120.8" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (409 samples, 0.08%)</title><rect x="117.8" y="195.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="120.8" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$292/1528731011.get$Lambda (150 samples, 0.03%)</title><rect x="118.0" y="179.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="121.0" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$292 (150 samples, 0.03%)</title><rect x="118.0" y="163.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="121.0" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$295/1644078329.get$Lambda (181 samples, 0.03%)</title><rect x="118.3" y="179.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="121.3" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$295 (181 samples, 0.03%)</title><rect x="118.3" y="163.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="121.3" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (389 samples, 0.07%)</title><rect x="118.7" y="211.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="121.7" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (389 samples, 0.07%)</title><rect x="118.7" y="195.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="121.7" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (197 samples, 0.04%)</title><rect x="118.7" y="179.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="121.7" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (192 samples, 0.04%)</title><rect x="119.2" y="179.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="122.2" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (192 samples, 0.04%)</title><rect x="119.2" y="163.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="122.2" y="174.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (192 samples, 0.04%)</title><rect x="119.2" y="147.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="122.2" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent (209 samples, 0.04%)</title><rect x="119.6" y="211.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="122.6" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.start (173 samples, 0.03%)</title><rect x="120.1" y="211.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="123.1" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (173 samples, 0.03%)</title><rect x="120.1" y="195.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="123.1" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (488 samples, 0.09%)</title><rect x="120.5" y="211.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="123.5" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (488 samples, 0.09%)</title><rect x="120.5" y="195.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="123.5" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (136 samples, 0.03%)</title><rect x="120.5" y="179.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="123.5" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (136 samples, 0.03%)</title><rect x="120.5" y="163.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="123.5" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$297/1321510655.get$Lambda (136 samples, 0.03%)</title><rect x="120.5" y="147.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="123.5" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpConnection$TrailingOperations$$Lambda$297 (136 samples, 0.03%)</title><rect x="120.5" y="131.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="123.5" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (349 samples, 0.07%)</title><rect x="120.8" y="179.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="123.8" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (349 samples, 0.07%)</title><rect x="120.8" y="163.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="123.8" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (349 samples, 0.07%)</title><rect x="120.8" y="147.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="123.8" y="158.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (184 samples, 0.04%)</title><rect x="120.8" y="131.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="123.8" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (165 samples, 0.03%)</title><rect x="121.2" y="131.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="124.2" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (165 samples, 0.03%)</title><rect x="121.2" y="115.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="124.2" y="126.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (165 samples, 0.03%)</title><rect x="121.2" y="99.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="124.2" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (521 samples, 0.10%)</title><rect x="121.6" y="211.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="124.6" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (521 samples, 0.10%)</title><rect x="121.6" y="195.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="124.6" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1357563986.invoke (521 samples, 0.10%)</title><rect x="121.6" y="179.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="124.6" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (521 samples, 0.10%)</title><rect x="121.6" y="163.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="124.6" y="174.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (127 samples, 0.02%)</title><rect x="121.6" y="147.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="124.6" y="158.0"></text>
</g>
<g>
<title>java.lang.String (127 samples, 0.02%)</title><rect x="121.6" y="131.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="124.6" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (394 samples, 0.08%)</title><rect x="121.9" y="147.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="124.9" y="158.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (394 samples, 0.08%)</title><rect x="121.9" y="131.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="124.9" y="142.0"></text>
</g>
<g>
<title>byte[] (394 samples, 0.08%)</title><rect x="121.9" y="115.0" width="0.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="124.9" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (936 samples, 0.18%)</title><rect x="122.7" y="211.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="125.7" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent$FixedLengthBodyParser (306 samples, 0.06%)</title><rect x="122.7" y="195.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="125.7" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (630 samples, 0.12%)</title><rect x="123.4" y="195.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="126.4" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (630 samples, 0.12%)</title><rect x="123.4" y="179.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="126.4" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1357563986.invoke (630 samples, 0.12%)</title><rect x="123.4" y="163.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="126.4" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (630 samples, 0.12%)</title><rect x="123.4" y="147.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="126.4" y="158.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (121 samples, 0.02%)</title><rect x="123.4" y="131.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="126.4" y="142.0"></text>
</g>
<g>
<title>java.lang.String (121 samples, 0.02%)</title><rect x="123.4" y="115.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="126.4" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (509 samples, 0.10%)</title><rect x="123.7" y="131.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="126.7" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (509 samples, 0.10%)</title><rect x="123.7" y="115.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="126.7" y="126.0"></text>
</g>
<g>
<title>byte[] (509 samples, 0.10%)</title><rect x="123.7" y="99.0" width="1.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="126.7" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$236/388216554.apply (358 samples, 0.07%)</title><rect x="124.9" y="339.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="127.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (358 samples, 0.07%)</title><rect x="124.9" y="323.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="127.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (184 samples, 0.04%)</title><rect x="124.9" y="307.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="127.9" y="318.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (184 samples, 0.04%)</title><rect x="124.9" y="291.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="127.9" y="302.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (184 samples, 0.04%)</title><rect x="124.9" y="275.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="127.9" y="286.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (184 samples, 0.04%)</title><rect x="124.9" y="259.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="127.9" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (174 samples, 0.03%)</title><rect x="125.3" y="307.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="128.3" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (174 samples, 0.03%)</title><rect x="125.3" y="291.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="128.3" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (174 samples, 0.03%)</title><rect x="125.7" y="355.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="128.7" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (174 samples, 0.03%)</title><rect x="125.7" y="339.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="128.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$237/1895279177.apply (174 samples, 0.03%)</title><rect x="125.7" y="323.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="128.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (174 samples, 0.03%)</title><rect x="125.7" y="307.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="128.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (174 samples, 0.03%)</title><rect x="125.7" y="291.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="128.7" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (174 samples, 0.03%)</title><rect x="125.7" y="275.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="128.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$278/649988588.apply (244 samples, 0.05%)</title><rect x="126.1" y="387.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="129.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (244 samples, 0.05%)</title><rect x="126.1" y="371.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="129.1" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Response (244 samples, 0.05%)</title><rect x="126.1" y="355.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="129.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (13,140 samples, 2.52%)</title><rect x="126.6" y="499.0" width="29.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="129.6" y="510.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (893 samples, 0.17%)</title><rect x="126.6" y="483.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="129.6" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (893 samples, 0.17%)</title><rect x="126.6" y="467.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="129.6" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (893 samples, 0.17%)</title><rect x="126.6" y="451.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="129.6" y="462.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (893 samples, 0.17%)</title><rect x="126.6" y="435.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="129.6" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (893 samples, 0.17%)</title><rect x="126.6" y="419.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="129.6" y="430.0"></text>
</g>
<g>
<title>byte[] (893 samples, 0.17%)</title><rect x="126.6" y="403.0" width="2.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="129.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (935 samples, 0.18%)</title><rect x="128.6" y="483.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="131.6" y="494.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (121 samples, 0.02%)</title><rect x="128.6" y="467.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="131.6" y="478.0"></text>
</g>
<g>
<title>java/lang/String.substring (120 samples, 0.02%)</title><rect x="128.9" y="467.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="131.9" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (120 samples, 0.02%)</title><rect x="128.9" y="451.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="131.9" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (120 samples, 0.02%)</title><rect x="128.9" y="435.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="131.9" y="446.0"></text>
</g>
<g>
<title>byte[] (120 samples, 0.02%)</title><rect x="128.9" y="419.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="131.9" y="430.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (187 samples, 0.04%)</title><rect x="129.2" y="467.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="132.2" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (187 samples, 0.04%)</title><rect x="129.2" y="451.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="132.2" y="462.0"></text>
</g>
<g>
<title>byte[] (187 samples, 0.04%)</title><rect x="129.2" y="435.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="132.2" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (507 samples, 0.10%)</title><rect x="129.6" y="467.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="132.6" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (507 samples, 0.10%)</title><rect x="129.6" y="451.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="132.6" y="462.0"></text>
</g>
<g>
<title>java.lang.String (326 samples, 0.06%)</title><rect x="129.6" y="435.0" width="0.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="132.6" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (181 samples, 0.03%)</title><rect x="130.4" y="435.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="133.4" y="446.0"></text>
</g>
<g>
<title>byte[] (181 samples, 0.03%)</title><rect x="130.4" y="419.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="133.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (3,403 samples, 0.65%)</title><rect x="130.8" y="483.0" width="7.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="133.8" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (3,403 samples, 0.65%)</title><rect x="130.8" y="467.0" width="7.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="133.8" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (3,403 samples, 0.65%)</title><rect x="130.8" y="451.0" width="7.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="133.8" y="462.0"></text>
</g>
<g>
<title>java.util.ArrayList (114 samples, 0.02%)</title><rect x="131.0" y="435.0" width="0.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="134.0" y="446.0"></text>
</g>
<g>
<title>java.util.TreeMap (257 samples, 0.05%)</title><rect x="131.2" y="435.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="134.2" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (174 samples, 0.03%)</title><rect x="132.0" y="435.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="135.0" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (174 samples, 0.03%)</title><rect x="132.0" y="419.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="135.0" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$115/937225413.get$Lambda (174 samples, 0.03%)</title><rect x="132.0" y="403.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="135.0" y="414.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$115 (174 samples, 0.03%)</title><rect x="132.0" y="387.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="135.0" y="398.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (175 samples, 0.03%)</title><rect x="132.4" y="435.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="135.4" y="446.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (175 samples, 0.03%)</title><rect x="132.4" y="419.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="135.4" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (2,243 samples, 0.43%)</title><rect x="132.8" y="435.0" width="5.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="135.8" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$115/937225413.accept (2,243 samples, 0.43%)</title><rect x="132.8" y="419.0" width="5.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="135.8" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (2,243 samples, 0.43%)</title><rect x="132.8" y="403.0" width="5.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="135.8" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (416 samples, 0.08%)</title><rect x="132.8" y="387.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="135.8" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (416 samples, 0.08%)</title><rect x="132.8" y="371.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="135.8" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$118/2131634163.get$Lambda (416 samples, 0.08%)</title><rect x="132.8" y="355.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="135.8" y="366.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$118 (416 samples, 0.08%)</title><rect x="132.8" y="339.0" width="0.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="135.8" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (315 samples, 0.06%)</title><rect x="133.7" y="387.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="136.7" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$118/2131634163.accept (315 samples, 0.06%)</title><rect x="133.7" y="371.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="136.7" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (315 samples, 0.06%)</title><rect x="133.7" y="355.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="136.7" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (315 samples, 0.06%)</title><rect x="133.7" y="339.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="136.7" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (315 samples, 0.06%)</title><rect x="133.7" y="323.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="136.7" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (315 samples, 0.06%)</title><rect x="133.7" y="307.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="136.7" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (315 samples, 0.06%)</title><rect x="133.7" y="291.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="136.7" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (315 samples, 0.06%)</title><rect x="133.7" y="275.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="136.7" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (315 samples, 0.06%)</title><rect x="133.7" y="259.0" width="0.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="136.7" y="270.0"></text>
</g>
<g>
<title>java/util/List.copyOf (826 samples, 0.16%)</title><rect x="134.5" y="387.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="137.5" y="398.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (826 samples, 0.16%)</title><rect x="134.5" y="371.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="137.5" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (413 samples, 0.08%)</title><rect x="134.5" y="355.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="137.5" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (413 samples, 0.08%)</title><rect x="134.5" y="339.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="137.5" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (413 samples, 0.08%)</title><rect x="134.5" y="323.0" width="0.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="137.5" y="334.0"></text>
</g>
<g>
<title>java/util/List.of (413 samples, 0.08%)</title><rect x="135.4" y="355.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="138.4" y="366.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (413 samples, 0.08%)</title><rect x="135.4" y="339.0" width="0.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="138.4" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (686 samples, 0.13%)</title><rect x="136.3" y="387.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="139.3" y="398.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (686 samples, 0.13%)</title><rect x="136.3" y="371.0" width="1.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="139.3" y="382.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (261 samples, 0.05%)</title><rect x="137.9" y="435.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="140.9" y="446.0"></text>
</g>
<g>
<title>java.util.TreeMap (261 samples, 0.05%)</title><rect x="137.9" y="419.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="140.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (7,909 samples, 1.52%)</title><rect x="138.5" y="483.0" width="17.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="141.5" y="494.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (400 samples, 0.08%)</title><rect x="138.5" y="467.0" width="0.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="141.5" y="478.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (489 samples, 0.09%)</title><rect x="139.4" y="467.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="142.4" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (489 samples, 0.09%)</title><rect x="139.4" y="451.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="142.4" y="462.0"></text>
</g>
<g>
<title>byte[] (489 samples, 0.09%)</title><rect x="139.4" y="435.0" width="1.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="142.4" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1,109 samples, 0.21%)</title><rect x="140.5" y="467.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="143.5" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,109 samples, 0.21%)</title><rect x="140.5" y="451.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="143.5" y="462.0"></text>
</g>
<g>
<title>java.lang.String (426 samples, 0.08%)</title><rect x="140.5" y="435.0" width="1.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="143.5" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (683 samples, 0.13%)</title><rect x="141.5" y="435.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="144.5" y="446.0"></text>
</g>
<g>
<title>byte[] (683 samples, 0.13%)</title><rect x="141.5" y="419.0" width="1.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="144.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (5,911 samples, 1.14%)</title><rect x="143.0" y="467.0" width="13.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="146.0" y="478.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,802 samples, 0.35%)</title><rect x="143.0" y="451.0" width="4.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="146.0" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,802 samples, 0.35%)</title><rect x="143.0" y="435.0" width="4.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="146.0" y="446.0"></text>
</g>
<g>
<title>java.lang.String (758 samples, 0.15%)</title><rect x="143.0" y="419.0" width="1.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="146.0" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,044 samples, 0.20%)</title><rect x="144.7" y="419.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="147.7" y="430.0"></text>
</g>
<g>
<title>byte[] (1,044 samples, 0.20%)</title><rect x="144.7" y="403.0" width="2.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="147.7" y="414.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (944 samples, 0.18%)</title><rect x="147.1" y="451.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="150.1" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (944 samples, 0.18%)</title><rect x="147.1" y="435.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="150.1" y="446.0"></text>
</g>
<g>
<title>byte[] (542 samples, 0.10%)</title><rect x="147.1" y="419.0" width="1.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="150.1" y="430.0"></text>
</g>
<g>
<title>java.lang.String (402 samples, 0.08%)</title><rect x="148.3" y="419.0" width="0.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="151.3" y="430.0"></text>
</g>
<g>
<title>java/lang/String.trim (880 samples, 0.17%)</title><rect x="149.2" y="451.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="152.2" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (880 samples, 0.17%)</title><rect x="149.2" y="435.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="152.2" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (880 samples, 0.17%)</title><rect x="149.2" y="419.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="152.2" y="430.0"></text>
</g>
<g>
<title>java.lang.String (374 samples, 0.07%)</title><rect x="149.2" y="403.0" width="0.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="152.2" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (506 samples, 0.10%)</title><rect x="150.1" y="403.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="153.1" y="414.0"></text>
</g>
<g>
<title>byte[] (506 samples, 0.10%)</title><rect x="150.1" y="387.0" width="1.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="153.1" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (901 samples, 0.17%)</title><rect x="151.2" y="451.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="154.2" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (901 samples, 0.17%)</title><rect x="151.2" y="435.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="154.2" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (901 samples, 0.17%)</title><rect x="151.2" y="419.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="154.2" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (901 samples, 0.17%)</title><rect x="151.2" y="403.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="154.2" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (901 samples, 0.17%)</title><rect x="151.2" y="387.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="154.2" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (901 samples, 0.17%)</title><rect x="151.2" y="371.0" width="2.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="154.2" y="382.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (1,384 samples, 0.27%)</title><rect x="153.3" y="451.0" width="3.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="156.3" y="462.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (534 samples, 0.10%)</title><rect x="153.3" y="435.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="156.3" y="446.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (534 samples, 0.10%)</title><rect x="153.3" y="419.0" width="1.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="156.3" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (451 samples, 0.09%)</title><rect x="154.5" y="435.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="157.5" y="446.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (451 samples, 0.09%)</title><rect x="154.5" y="419.0" width="1.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="157.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser$$Lambda$282/1262603830.apply (399 samples, 0.08%)</title><rect x="155.5" y="435.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="158.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.lambda$addHeaderFromString$0 (399 samples, 0.08%)</title><rect x="155.5" y="419.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="158.5" y="430.0"></text>
</g>
<g>
<title>java.util.ArrayList (399 samples, 0.08%)</title><rect x="155.5" y="403.0" width="0.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="158.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (4,471 samples, 0.86%)</title><rect x="156.4" y="611.0" width="10.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="159.4" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (4,471 samples, 0.86%)</title><rect x="156.4" y="595.0" width="10.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="159.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (4,471 samples, 0.86%)</title><rect x="156.4" y="579.0" width="10.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="159.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$199/1509846524.run (4,471 samples, 0.86%)</title><rect x="156.4" y="563.0" width="10.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="159.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (4,471 samples, 0.86%)</title><rect x="156.4" y="547.0" width="10.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="159.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (587 samples, 0.11%)</title><rect x="156.4" y="531.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="159.4" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (220 samples, 0.04%)</title><rect x="156.4" y="515.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="159.4" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (220 samples, 0.04%)</title><rect x="156.4" y="499.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="159.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$221/1241815609.get$Lambda (135 samples, 0.03%)</title><rect x="156.6" y="483.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="159.6" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$221 (135 samples, 0.03%)</title><rect x="156.6" y="467.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="159.6" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (159 samples, 0.03%)</title><rect x="156.9" y="515.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="159.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (208 samples, 0.04%)</title><rect x="157.3" y="515.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="160.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (208 samples, 0.04%)</title><rect x="157.3" y="499.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="160.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (117 samples, 0.02%)</title><rect x="157.5" y="483.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="160.5" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (117 samples, 0.02%)</title><rect x="157.5" y="467.0" width="0.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="160.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.tryAsyncReceive (3,859 samples, 0.74%)</title><rect x="157.7" y="531.0" width="8.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="160.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (3,859 samples, 0.74%)</title><rect x="157.7" y="515.0" width="8.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="160.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (3,859 samples, 0.74%)</title><rect x="157.7" y="499.0" width="8.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="160.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (3,859 samples, 0.74%)</title><rect x="157.7" y="483.0" width="8.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="160.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (3,859 samples, 0.74%)</title><rect x="157.7" y="467.0" width="8.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="160.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (3,859 samples, 0.74%)</title><rect x="157.7" y="451.0" width="8.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="160.7" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (251 samples, 0.05%)</title><rect x="157.7" y="435.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="160.7" y="446.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (251 samples, 0.05%)</title><rect x="157.7" y="419.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="160.7" y="430.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (251 samples, 0.05%)</title><rect x="157.7" y="403.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="160.7" y="414.0"></text>
</g>
<g>
<title>java/util/List.of (128 samples, 0.02%)</title><rect x="158.3" y="435.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="161.3" y="446.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (128 samples, 0.02%)</title><rect x="158.3" y="419.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="161.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$290/1089333161.run (2,317 samples, 0.44%)</title><rect x="158.6" y="435.0" width="5.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="161.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (2,317 samples, 0.44%)</title><rect x="158.6" y="419.0" width="5.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="161.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (2,317 samples, 0.44%)</title><rect x="158.6" y="403.0" width="5.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="161.6" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (719 samples, 0.14%)</title><rect x="158.6" y="387.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="161.6" y="398.0"></text>
</g>
<g>
<title>java/util/Collection.stream (510 samples, 0.10%)</title><rect x="158.6" y="371.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="161.6" y="382.0"></text>
</g>
<g>
<title>java/util/List.spliterator (182 samples, 0.03%)</title><rect x="158.6" y="355.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="161.6" y="366.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (182 samples, 0.03%)</title><rect x="158.6" y="339.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="161.6" y="350.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (328 samples, 0.06%)</title><rect x="159.0" y="355.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="162.0" y="366.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (328 samples, 0.06%)</title><rect x="159.0" y="339.0" width="0.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="162.0" y="350.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (209 samples, 0.04%)</title><rect x="159.7" y="371.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="162.7" y="382.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (209 samples, 0.04%)</title><rect x="159.7" y="355.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="162.7" y="366.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (209 samples, 0.04%)</title><rect x="159.7" y="339.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="162.7" y="350.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$52/78204644.get (129 samples, 0.02%)</title><rect x="159.7" y="323.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="162.7" y="334.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (129 samples, 0.02%)</title><rect x="159.7" y="307.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="162.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (1,598 samples, 0.31%)</title><rect x="160.2" y="387.0" width="3.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="163.2" y="398.0"></text>
</g>
<g>
<title>java/time/Instant.now (153 samples, 0.03%)</title><rect x="160.2" y="371.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="163.2" y="382.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (153 samples, 0.03%)</title><rect x="160.2" y="355.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="163.2" y="366.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (153 samples, 0.03%)</title><rect x="160.2" y="339.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="163.2" y="350.0"></text>
</g>
<g>
<title>java/time/Instant.create (153 samples, 0.03%)</title><rect x="160.2" y="323.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="163.2" y="334.0"></text>
</g>
<g>
<title>java.time.Instant (153 samples, 0.03%)</title><rect x="160.2" y="307.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="163.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (1,445 samples, 0.28%)</title><rect x="160.6" y="371.0" width="3.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="163.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (541 samples, 0.10%)</title><rect x="160.6" y="355.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="163.6" y="366.0"></text>
</g>
<g>
<title>java/time/Instant.plus (138 samples, 0.03%)</title><rect x="160.6" y="339.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="163.6" y="350.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (138 samples, 0.03%)</title><rect x="160.6" y="323.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="163.6" y="334.0"></text>
</g>
<g>
<title>java/time/Instant.plus (138 samples, 0.03%)</title><rect x="160.6" y="307.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="163.6" y="318.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (138 samples, 0.03%)</title><rect x="160.6" y="291.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="163.6" y="302.0"></text>
</g>
<g>
<title>java/time/Instant.create (138 samples, 0.03%)</title><rect x="160.6" y="275.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="163.6" y="286.0"></text>
</g>
<g>
<title>java.time.Instant (138 samples, 0.03%)</title><rect x="160.6" y="259.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="163.6" y="270.0"></text>
</g>
<g>
<title>java/time/Instant.truncatedTo (120 samples, 0.02%)</title><rect x="160.9" y="339.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="163.9" y="350.0"></text>
</g>
<g>
<title>java/time/Instant.plusNanos (120 samples, 0.02%)</title><rect x="160.9" y="323.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="163.9" y="334.0"></text>
</g>
<g>
<title>java/time/Instant.plus (120 samples, 0.02%)</title><rect x="160.9" y="307.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="163.9" y="318.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (120 samples, 0.02%)</title><rect x="160.9" y="291.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="163.9" y="302.0"></text>
</g>
<g>
<title>java/time/Instant.create (120 samples, 0.02%)</title><rect x="160.9" y="275.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="163.9" y="286.0"></text>
</g>
<g>
<title>java.time.Instant (120 samples, 0.02%)</title><rect x="160.9" y="259.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="163.9" y="270.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (115 samples, 0.02%)</title><rect x="161.2" y="339.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="164.2" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (115 samples, 0.02%)</title><rect x="161.2" y="323.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="164.2" y="334.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (115 samples, 0.02%)</title><rect x="161.2" y="307.0" width="0.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="164.2" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$ExpiryEntry (154 samples, 0.03%)</title><rect x="161.4" y="339.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="164.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (332 samples, 0.06%)</title><rect x="161.8" y="355.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="164.8" y="366.0"></text>
</g>
<g>
<title>java/util/HashMap.get (190 samples, 0.04%)</title><rect x="161.8" y="339.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="164.8" y="350.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (190 samples, 0.04%)</title><rect x="161.8" y="323.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="164.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (190 samples, 0.04%)</title><rect x="161.8" y="307.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="164.8" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (190 samples, 0.04%)</title><rect x="161.8" y="291.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="164.8" y="302.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (142 samples, 0.03%)</title><rect x="162.2" y="339.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="165.2" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (142 samples, 0.03%)</title><rect x="162.2" y="323.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="165.2" y="334.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (142 samples, 0.03%)</title><rect x="162.2" y="307.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="165.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (572 samples, 0.11%)</title><rect x="162.5" y="355.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="165.5" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CleanupTrigger (142 samples, 0.03%)</title><rect x="162.5" y="339.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="165.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (430 samples, 0.08%)</title><rect x="162.9" y="339.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="165.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (129 samples, 0.02%)</title><rect x="162.9" y="323.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="165.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (129 samples, 0.02%)</title><rect x="162.9" y="307.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="165.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (129 samples, 0.02%)</title><rect x="162.9" y="291.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="165.9" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (129 samples, 0.02%)</title><rect x="162.9" y="275.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="165.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (301 samples, 0.06%)</title><rect x="163.2" y="323.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="166.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (301 samples, 0.06%)</title><rect x="163.2" y="307.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="166.2" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (216 samples, 0.04%)</title><rect x="163.2" y="291.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="166.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (537 samples, 0.10%)</title><rect x="163.8" y="435.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="166.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (537 samples, 0.10%)</title><rect x="163.8" y="419.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="166.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (537 samples, 0.10%)</title><rect x="163.8" y="403.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="166.8" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (360 samples, 0.07%)</title><rect x="163.8" y="387.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="166.8" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (360 samples, 0.07%)</title><rect x="163.8" y="371.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="166.8" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (360 samples, 0.07%)</title><rect x="163.8" y="355.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="166.8" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (360 samples, 0.07%)</title><rect x="163.8" y="339.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="166.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$300/1036110883.accept (360 samples, 0.07%)</title><rect x="163.8" y="323.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="166.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (360 samples, 0.07%)</title><rect x="163.8" y="307.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="166.8" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (360 samples, 0.07%)</title><rect x="163.8" y="291.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="166.8" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (360 samples, 0.07%)</title><rect x="163.8" y="275.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="166.8" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (360 samples, 0.07%)</title><rect x="163.8" y="259.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="166.8" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$309/980063472.apply (360 samples, 0.07%)</title><rect x="163.8" y="243.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="166.8" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (360 samples, 0.07%)</title><rect x="163.8" y="227.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="166.8" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpResponseImpl (360 samples, 0.07%)</title><rect x="163.8" y="211.0" width="0.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="166.8" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.join (177 samples, 0.03%)</title><rect x="164.7" y="387.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="167.7" y="398.0"></text>
</g>
<g>
<title>byte[] (177 samples, 0.03%)</title><rect x="164.7" y="371.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="167.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (626 samples, 0.12%)</title><rect x="165.1" y="435.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="168.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (626 samples, 0.12%)</title><rect x="165.1" y="419.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="168.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (626 samples, 0.12%)</title><rect x="165.1" y="403.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="168.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (626 samples, 0.12%)</title><rect x="165.1" y="387.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="168.1" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.addAll (626 samples, 0.12%)</title><rect x="165.1" y="371.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="168.1" y="382.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (297 samples, 0.06%)</title><rect x="165.1" y="355.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="168.1" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (114 samples, 0.02%)</title><rect x="165.1" y="339.0" width="0.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="168.1" y="350.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (183 samples, 0.04%)</title><rect x="165.3" y="339.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="168.3" y="350.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (183 samples, 0.04%)</title><rect x="165.3" y="323.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="168.3" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (329 samples, 0.06%)</title><rect x="165.7" y="355.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="168.7" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (329 samples, 0.06%)</title><rect x="165.7" y="339.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="168.7" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (329 samples, 0.06%)</title><rect x="165.7" y="323.0" width="0.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="168.7" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$107/2098846329.run (217,319 samples, 41.73%)</title><rect x="166.5" y="643.0" width="492.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="169.5" y="654.0">ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$107/2098..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$317/1070440207.run (217,319 samples, 41.73%)</title><rect x="166.5" y="627.0" width="492.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="169.5" y="638.0">ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$317/1070..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$entity$0 (217,319 samples, 41.73%)</title><rect x="166.5" y="611.0" width="492.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="169.5" y="622.0">ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$entity$0</text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.MetaRequest (2,285 samples, 0.44%)</title><rect x="166.5" y="595.0" width="5.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="169.5" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.get (214,806 samples, 41.25%)</title><rect x="171.7" y="595.0" width="486.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="174.7" y="606.0">ru/mail/polis/service/shakhmin/HttpService.get</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.getCell (210,129 samples, 40.35%)</title><rect x="172.3" y="579.0" width="476.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="175.3" y="590.0">ru/mail/polis/dao/shakhmin/LSMDao.getCell</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (10,151 samples, 1.95%)</title><rect x="172.3" y="563.0" width="23.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="175.3" y="574.0">r..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (9,329 samples, 1.79%)</title><rect x="172.3" y="547.0" width="21.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="175.3" y="558.0">c..</text>
</g>
<g>
<title>java/util/AbstractQueue.remove (4,942 samples, 0.95%)</title><rect x="172.3" y="531.0" width="11.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="175.3" y="542.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (4,942 samples, 0.95%)</title><rect x="172.3" y="515.0" width="11.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="175.3" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (4,942 samples, 0.95%)</title><rect x="172.3" y="499.0" width="11.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="175.3" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (4,942 samples, 0.95%)</title><rect x="172.3" y="483.0" width="11.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="175.3" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (4,942 samples, 0.95%)</title><rect x="172.3" y="467.0" width="11.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="175.3" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$318/862230459.compare (4,942 samples, 0.95%)</title><rect x="172.3" y="451.0" width="11.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="175.3" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (4,942 samples, 0.95%)</title><rect x="172.3" y="435.0" width="11.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="175.3" y="446.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$113/1571970597.compare (4,942 samples, 0.95%)</title><rect x="172.3" y="419.0" width="11.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="175.3" y="430.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (4,942 samples, 0.95%)</title><rect x="172.3" y="403.0" width="11.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="175.3" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$113/1571970597.compare (4,942 samples, 0.95%)</title><rect x="172.3" y="387.0" width="11.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="175.3" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (4,942 samples, 0.95%)</title><rect x="172.3" y="371.0" width="11.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="175.3" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$111/2125643409.compare (4,942 samples, 0.95%)</title><rect x="172.3" y="355.0" width="11.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="175.3" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (4,942 samples, 0.95%)</title><rect x="172.3" y="339.0" width="11.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="175.3" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$110/1344849970.apply (4,942 samples, 0.95%)</title><rect x="172.3" y="323.0" width="11.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="175.3" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (4,942 samples, 0.95%)</title><rect x="172.3" y="307.0" width="11.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="175.3" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (4,931 samples, 0.95%)</title><rect x="172.3" y="291.0" width="11.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="175.3" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (4,931 samples, 0.95%)</title><rect x="172.3" y="275.0" width="11.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="175.3" y="286.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (4,931 samples, 0.95%)</title><rect x="172.3" y="259.0" width="11.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="175.3" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (4,387 samples, 0.84%)</title><rect x="183.5" y="531.0" width="10.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="186.5" y="542.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (4,387 samples, 0.84%)</title><rect x="183.5" y="515.0" width="10.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="186.5" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (4,387 samples, 0.84%)</title><rect x="183.5" y="499.0" width="10.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="186.5" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (4,387 samples, 0.84%)</title><rect x="183.5" y="483.0" width="10.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="186.5" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (4,387 samples, 0.84%)</title><rect x="183.5" y="467.0" width="10.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="186.5" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (4,387 samples, 0.84%)</title><rect x="183.5" y="451.0" width="10.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="186.5" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (3,091 samples, 0.59%)</title><rect x="183.5" y="435.0" width="7.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="186.5" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (3,091 samples, 0.59%)</title><rect x="183.5" y="419.0" width="7.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="186.5" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (3,091 samples, 0.59%)</title><rect x="183.5" y="403.0" width="7.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="186.5" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (3,091 samples, 0.59%)</title><rect x="183.5" y="387.0" width="7.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="186.5" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Cell.of (170 samples, 0.03%)</title><rect x="183.5" y="371.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="186.5" y="382.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Cell (170 samples, 0.03%)</title><rect x="183.5" y="355.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="186.5" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.of (169 samples, 0.03%)</title><rect x="183.9" y="371.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="186.9" y="382.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Row (169 samples, 0.03%)</title><rect x="183.9" y="355.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="186.9" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (817 samples, 0.16%)</title><rect x="184.3" y="371.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="187.3" y="382.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (423 samples, 0.08%)</title><rect x="184.3" y="355.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="187.3" y="366.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (423 samples, 0.08%)</title><rect x="184.3" y="339.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="187.3" y="350.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (423 samples, 0.08%)</title><rect x="184.3" y="323.0" width="0.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="187.3" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (394 samples, 0.08%)</title><rect x="185.2" y="355.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="188.2" y="366.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (394 samples, 0.08%)</title><rect x="185.2" y="339.0" width="0.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="188.2" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (722 samples, 0.14%)</title><rect x="186.1" y="371.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="189.1" y="382.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (365 samples, 0.07%)</title><rect x="186.1" y="355.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="189.1" y="366.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (365 samples, 0.07%)</title><rect x="186.1" y="339.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="189.1" y="350.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (365 samples, 0.07%)</title><rect x="186.1" y="323.0" width="0.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="189.1" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (357 samples, 0.07%)</title><rect x="187.0" y="355.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="190.0" y="366.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (357 samples, 0.07%)</title><rect x="187.0" y="339.0" width="0.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="190.0" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.timestampAt (382 samples, 0.07%)</title><rect x="187.8" y="371.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="190.8" y="382.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (382 samples, 0.07%)</title><rect x="187.8" y="355.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="190.8" y="366.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (382 samples, 0.07%)</title><rect x="187.8" y="339.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="190.8" y="350.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (382 samples, 0.07%)</title><rect x="187.8" y="323.0" width="0.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="190.8" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.valueAt (831 samples, 0.16%)</title><rect x="188.6" y="371.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="191.6" y="382.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (404 samples, 0.08%)</title><rect x="188.6" y="355.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="191.6" y="366.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (404 samples, 0.08%)</title><rect x="188.6" y="339.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="191.6" y="350.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (404 samples, 0.08%)</title><rect x="188.6" y="323.0" width="1.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="191.6" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (427 samples, 0.08%)</title><rect x="189.6" y="355.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="192.6" y="366.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (427 samples, 0.08%)</title><rect x="189.6" y="339.0" width="0.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="192.6" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$318/862230459.compare (1,296 samples, 0.25%)</title><rect x="190.5" y="435.0" width="3.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="193.5" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (1,296 samples, 0.25%)</title><rect x="190.5" y="419.0" width="3.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="193.5" y="430.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$113/1571970597.compare (1,296 samples, 0.25%)</title><rect x="190.5" y="403.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="193.5" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (1,296 samples, 0.25%)</title><rect x="190.5" y="387.0" width="3.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="193.5" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$113/1571970597.compare (1,296 samples, 0.25%)</title><rect x="190.5" y="371.0" width="3.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="193.5" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (1,296 samples, 0.25%)</title><rect x="190.5" y="355.0" width="3.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="193.5" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$111/2125643409.compare (1,296 samples, 0.25%)</title><rect x="190.5" y="339.0" width="3.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="193.5" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (1,296 samples, 0.25%)</title><rect x="190.5" y="323.0" width="3.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="193.5" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$110/1344849970.apply (1,296 samples, 0.25%)</title><rect x="190.5" y="307.0" width="3.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="193.5" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (1,296 samples, 0.25%)</title><rect x="190.5" y="291.0" width="3.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="193.5" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (1,296 samples, 0.25%)</title><rect x="190.5" y="275.0" width="3.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="193.5" y="286.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (1,296 samples, 0.25%)</title><rect x="190.5" y="259.0" width="3.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="193.5" y="270.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (1,296 samples, 0.25%)</title><rect x="190.5" y="243.0" width="3.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="193.5" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$320/1881074320.apply (822 samples, 0.16%)</title><rect x="193.5" y="547.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="196.5" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (822 samples, 0.16%)</title><rect x="193.5" y="531.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="196.5" y="542.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (822 samples, 0.16%)</title><rect x="193.5" y="515.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="196.5" y="526.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (822 samples, 0.16%)</title><rect x="193.5" y="499.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="196.5" y="510.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (822 samples, 0.16%)</title><rect x="193.5" y="483.0" width="1.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="196.5" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.rowsIterator (199,887 samples, 38.39%)</title><rect x="195.3" y="563.0" width="453.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="198.3" y="574.0">ru/mail/polis/dao/shakhmin/LSMDao.rowsIterator</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (168,314 samples, 32.32%)</title><rect x="195.3" y="547.0" width="381.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="198.3" y="558.0">ru/mail/polis/dao/shakhmin/Table.joinIterators</text>
</g>
<g>
<title>java/util/ArrayList.add (522 samples, 0.10%)</title><rect x="195.4" y="531.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="198.4" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (522 samples, 0.10%)</title><rect x="195.4" y="515.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="198.4" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (522 samples, 0.10%)</title><rect x="195.4" y="499.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="198.4" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (522 samples, 0.10%)</title><rect x="195.4" y="483.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="198.4" y="494.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (522 samples, 0.10%)</title><rect x="195.4" y="467.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="198.4" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (522 samples, 0.10%)</title><rect x="195.4" y="451.0" width="1.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="198.4" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.iterator (524 samples, 0.10%)</title><rect x="196.7" y="531.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="199.7" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (358 samples, 0.07%)</title><rect x="196.7" y="515.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="199.7" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.iterator (140 samples, 0.03%)</title><rect x="197.2" y="499.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="200.2" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.reduceIterators (165 samples, 0.03%)</title><rect x="197.5" y="515.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="200.5" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (125 samples, 0.02%)</title><rect x="197.5" y="499.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="200.5" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.iterator (167,188 samples, 32.11%)</title><rect x="197.9" y="531.0" width="378.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="200.9" y="542.0">ru/mail/polis/dao/shakhmin/SSTable.iterator</text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.SSTable$SSTableIterator (1,073 samples, 0.21%)</title><rect x="197.9" y="515.0" width="2.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="200.9" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.&lt;init&gt; (166,115 samples, 31.90%)</title><rect x="200.3" y="515.0" width="376.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="203.3" y="526.0">ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator...</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.position (166,115 samples, 31.90%)</title><rect x="200.3" y="499.0" width="376.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="203.3" y="510.0">ru/mail/polis/dao/shakhmin/SSTable.position</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (82,382 samples, 15.82%)</title><rect x="200.3" y="483.0" width="186.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="203.3" y="494.0">ru/mail/polis/dao/shakhm..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (40,924 samples, 7.86%)</title><rect x="200.3" y="467.0" width="92.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="203.3" y="478.0">java/nio/Di..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (40,924 samples, 7.86%)</title><rect x="200.3" y="451.0" width="92.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="203.3" y="462.0">java/nio/Di..</text>
</g>
<g>
<title>java.nio.DirectByteBufferR (40,924 samples, 7.86%)</title><rect x="200.3" y="435.0" width="92.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="203.3" y="446.0">java.nio.Di..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (41,458 samples, 7.96%)</title><rect x="293.0" y="467.0" width="94.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="296.0" y="478.0">java/nio/Di..</text>
</g>
<g>
<title>java.nio.DirectByteBufferR (41,458 samples, 7.96%)</title><rect x="293.0" y="451.0" width="94.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="296.0" y="462.0">java.nio.Di..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (83,733 samples, 16.08%)</title><rect x="387.0" y="483.0" width="189.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="390.0" y="494.0">ru/mail/polis/dao/shakhmi..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (41,822 samples, 8.03%)</title><rect x="387.0" y="467.0" width="94.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="390.0" y="478.0">java/nio/Di..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (41,822 samples, 8.03%)</title><rect x="387.0" y="451.0" width="94.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="390.0" y="462.0">java/nio/Di..</text>
</g>
<g>
<title>java.nio.DirectByteBufferR (41,822 samples, 8.03%)</title><rect x="387.0" y="435.0" width="94.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="390.0" y="446.0">java.nio.Di..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (41,911 samples, 8.05%)</title><rect x="481.8" y="467.0" width="94.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="484.8" y="478.0">java/nio/Di..</text>
</g>
<g>
<title>java.nio.DirectByteBufferR (41,911 samples, 8.05%)</title><rect x="481.8" y="451.0" width="94.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="484.8" y="462.0">java.nio.Di..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.reduceIterators (31,573 samples, 6.06%)</title><rect x="576.7" y="547.0" width="71.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="579.7" y="558.0">ru/mail/..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (29,210 samples, 5.61%)</title><rect x="576.7" y="531.0" width="66.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="579.7" y="542.0">com/goo..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (29,173 samples, 5.60%)</title><rect x="576.8" y="515.0" width="66.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="579.8" y="526.0">com/goo..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (744 samples, 0.14%)</title><rect x="576.9" y="499.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="579.9" y="510.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (744 samples, 0.14%)</title><rect x="576.9" y="483.0" width="1.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="579.9" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (28,316 samples, 5.44%)</title><rect x="578.7" y="499.0" width="64.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="581.7" y="510.0">java/ut..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (28,316 samples, 5.44%)</title><rect x="578.7" y="483.0" width="64.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="581.7" y="494.0">java/ut..</text>
</g>
<g>
<title>java/util/PriorityQueue.grow (375 samples, 0.07%)</title><rect x="578.7" y="467.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="581.7" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (375 samples, 0.07%)</title><rect x="578.7" y="451.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="581.7" y="462.0"></text>
</g>
<g>
<title>java.lang.Object[] (375 samples, 0.07%)</title><rect x="578.7" y="435.0" width="0.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="581.7" y="446.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (27,941 samples, 5.37%)</title><rect x="579.6" y="467.0" width="63.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="582.6" y="478.0">java/ut..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (27,941 samples, 5.37%)</title><rect x="579.6" y="451.0" width="63.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="582.6" y="462.0">java/ut..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (27,941 samples, 5.37%)</title><rect x="579.6" y="435.0" width="63.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="582.6" y="446.0">com/goo..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (27,941 samples, 5.37%)</title><rect x="579.6" y="419.0" width="63.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="582.6" y="430.0">com/goo..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (17,348 samples, 3.33%)</title><rect x="579.6" y="403.0" width="39.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="582.6" y="414.0">com..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (17,341 samples, 3.33%)</title><rect x="579.6" y="387.0" width="39.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="582.6" y="398.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (17,341 samples, 3.33%)</title><rect x="579.6" y="371.0" width="39.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="582.6" y="382.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (17,341 samples, 3.33%)</title><rect x="579.6" y="355.0" width="39.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="582.6" y="366.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Cell.of (824 samples, 0.16%)</title><rect x="579.6" y="339.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="582.6" y="350.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Cell (824 samples, 0.16%)</title><rect x="579.6" y="323.0" width="1.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="582.6" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.of (1,136 samples, 0.22%)</title><rect x="581.5" y="339.0" width="2.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="584.5" y="350.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Row (1,136 samples, 0.22%)</title><rect x="581.5" y="323.0" width="2.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="584.5" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (4,294 samples, 0.82%)</title><rect x="584.1" y="339.0" width="9.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="587.1" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (2,183 samples, 0.42%)</title><rect x="584.1" y="323.0" width="4.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="587.1" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (2,183 samples, 0.42%)</title><rect x="584.1" y="307.0" width="4.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="587.1" y="318.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (2,183 samples, 0.42%)</title><rect x="584.1" y="291.0" width="4.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="587.1" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (2,111 samples, 0.41%)</title><rect x="589.0" y="323.0" width="4.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="592.0" y="334.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (2,111 samples, 0.41%)</title><rect x="589.0" y="307.0" width="4.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="592.0" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (4,457 samples, 0.86%)</title><rect x="593.8" y="339.0" width="10.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="596.8" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (2,223 samples, 0.43%)</title><rect x="593.8" y="323.0" width="5.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="596.8" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (2,223 samples, 0.43%)</title><rect x="593.8" y="307.0" width="5.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="596.8" y="318.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (2,223 samples, 0.43%)</title><rect x="593.8" y="291.0" width="5.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="596.8" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (2,234 samples, 0.43%)</title><rect x="598.8" y="323.0" width="5.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="601.8" y="334.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (2,234 samples, 0.43%)</title><rect x="598.8" y="307.0" width="5.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="601.8" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.timestampAt (2,228 samples, 0.43%)</title><rect x="603.9" y="339.0" width="5.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="606.9" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (2,228 samples, 0.43%)</title><rect x="603.9" y="323.0" width="5.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="606.9" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (2,228 samples, 0.43%)</title><rect x="603.9" y="307.0" width="5.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="606.9" y="318.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (2,228 samples, 0.43%)</title><rect x="603.9" y="291.0" width="5.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="606.9" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.valueAt (4,402 samples, 0.85%)</title><rect x="608.9" y="339.0" width="10.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="611.9" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (2,203 samples, 0.42%)</title><rect x="608.9" y="323.0" width="5.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="611.9" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (2,203 samples, 0.42%)</title><rect x="608.9" y="307.0" width="5.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="611.9" y="318.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (2,203 samples, 0.42%)</title><rect x="608.9" y="291.0" width="5.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="611.9" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (2,199 samples, 0.42%)</title><rect x="613.9" y="323.0" width="5.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="616.9" y="334.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (2,199 samples, 0.42%)</title><rect x="613.9" y="307.0" width="5.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="616.9" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$318/862230459.compare (10,593 samples, 2.03%)</title><rect x="618.9" y="403.0" width="24.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="621.9" y="414.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (10,593 samples, 2.03%)</title><rect x="618.9" y="387.0" width="24.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="621.9" y="398.0">r..</text>
</g>
<g>
<title>java/util/Comparator$$Lambda$113/1571970597.compare (10,593 samples, 2.03%)</title><rect x="618.9" y="371.0" width="24.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="621.9" y="382.0">j..</text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (10,593 samples, 2.03%)</title><rect x="618.9" y="355.0" width="24.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="621.9" y="366.0">j..</text>
</g>
<g>
<title>java/util/Comparator$$Lambda$113/1571970597.compare (10,593 samples, 2.03%)</title><rect x="618.9" y="339.0" width="24.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="621.9" y="350.0">j..</text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (10,593 samples, 2.03%)</title><rect x="618.9" y="323.0" width="24.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="621.9" y="334.0">j..</text>
</g>
<g>
<title>java/util/Comparator$$Lambda$111/2125643409.compare (10,593 samples, 2.03%)</title><rect x="618.9" y="307.0" width="24.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="621.9" y="318.0">j..</text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (10,593 samples, 2.03%)</title><rect x="618.9" y="291.0" width="24.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="621.9" y="302.0">j..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$110/1344849970.apply (10,593 samples, 2.03%)</title><rect x="618.9" y="275.0" width="24.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="621.9" y="286.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (10,593 samples, 2.03%)</title><rect x="618.9" y="259.0" width="24.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="621.9" y="270.0">r..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (10,516 samples, 2.02%)</title><rect x="618.9" y="243.0" width="23.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="621.9" y="254.0">j..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (10,516 samples, 2.02%)</title><rect x="618.9" y="227.0" width="23.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="621.9" y="238.0">j..</text>
</g>
<g>
<title>java.nio.DirectByteBufferR (10,516 samples, 2.02%)</title><rect x="618.9" y="211.0" width="23.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="621.9" y="222.0">j..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (2,363 samples, 0.45%)</title><rect x="642.9" y="531.0" width="5.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="645.9" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (2,324 samples, 0.45%)</title><rect x="643.0" y="515.0" width="5.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="646.0" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (2,324 samples, 0.45%)</title><rect x="643.0" y="499.0" width="5.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="646.0" y="510.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (1,299 samples, 0.25%)</title><rect x="643.0" y="483.0" width="2.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="646.0" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (1,299 samples, 0.25%)</title><rect x="643.0" y="467.0" width="2.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="646.0" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (1,299 samples, 0.25%)</title><rect x="643.0" y="451.0" width="2.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="646.0" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,299 samples, 0.25%)</title><rect x="643.0" y="435.0" width="2.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="646.0" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,299 samples, 0.25%)</title><rect x="643.0" y="419.0" width="2.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="646.0" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$318/862230459.compare (1,299 samples, 0.25%)</title><rect x="643.0" y="403.0" width="2.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="646.0" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (1,299 samples, 0.25%)</title><rect x="643.0" y="387.0" width="2.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="646.0" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$113/1571970597.compare (1,299 samples, 0.25%)</title><rect x="643.0" y="371.0" width="2.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="646.0" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (1,299 samples, 0.25%)</title><rect x="643.0" y="355.0" width="2.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="646.0" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$113/1571970597.compare (1,299 samples, 0.25%)</title><rect x="643.0" y="339.0" width="2.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="646.0" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (1,299 samples, 0.25%)</title><rect x="643.0" y="323.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="646.0" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$111/2125643409.compare (1,299 samples, 0.25%)</title><rect x="643.0" y="307.0" width="2.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="646.0" y="318.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (1,299 samples, 0.25%)</title><rect x="643.0" y="291.0" width="2.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="646.0" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$110/1344849970.apply (1,299 samples, 0.25%)</title><rect x="643.0" y="275.0" width="2.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="646.0" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (1,299 samples, 0.25%)</title><rect x="643.0" y="259.0" width="2.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="646.0" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (1,291 samples, 0.25%)</title><rect x="643.0" y="243.0" width="2.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="646.0" y="254.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (1,291 samples, 0.25%)</title><rect x="643.0" y="227.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="646.0" y="238.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (1,291 samples, 0.25%)</title><rect x="643.0" y="211.0" width="2.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="646.0" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (1,025 samples, 0.20%)</title><rect x="645.9" y="483.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="648.9" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (1,025 samples, 0.20%)</title><rect x="645.9" y="467.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="648.9" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (1,025 samples, 0.20%)</title><rect x="645.9" y="451.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="648.9" y="462.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (1,025 samples, 0.20%)</title><rect x="645.9" y="435.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="648.9" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,025 samples, 0.20%)</title><rect x="645.9" y="419.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="648.9" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,025 samples, 0.20%)</title><rect x="645.9" y="403.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="648.9" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (776 samples, 0.15%)</title><rect x="645.9" y="387.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="648.9" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (776 samples, 0.15%)</title><rect x="645.9" y="371.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="648.9" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (776 samples, 0.15%)</title><rect x="645.9" y="355.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="648.9" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (776 samples, 0.15%)</title><rect x="645.9" y="339.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="648.9" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (188 samples, 0.04%)</title><rect x="646.2" y="323.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="649.2" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (212 samples, 0.04%)</title><rect x="646.6" y="323.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="649.6" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (112 samples, 0.02%)</title><rect x="646.8" y="307.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="649.8" y="318.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (112 samples, 0.02%)</title><rect x="646.8" y="291.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="649.8" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.valueAt (191 samples, 0.04%)</title><rect x="647.3" y="323.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="650.3" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$318/862230459.compare (249 samples, 0.05%)</title><rect x="647.7" y="387.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="650.7" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (249 samples, 0.05%)</title><rect x="647.7" y="371.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="650.7" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$113/1571970597.compare (249 samples, 0.05%)</title><rect x="647.7" y="355.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="650.7" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (249 samples, 0.05%)</title><rect x="647.7" y="339.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="650.7" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$113/1571970597.compare (249 samples, 0.05%)</title><rect x="647.7" y="323.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="650.7" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (249 samples, 0.05%)</title><rect x="647.7" y="307.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="650.7" y="318.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$111/2125643409.compare (249 samples, 0.05%)</title><rect x="647.7" y="291.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="650.7" y="302.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (249 samples, 0.05%)</title><rect x="647.7" y="275.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="650.7" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$110/1344849970.apply (249 samples, 0.05%)</title><rect x="647.7" y="259.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="650.7" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (249 samples, 0.05%)</title><rect x="647.7" y="243.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="650.7" y="254.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (249 samples, 0.05%)</title><rect x="647.7" y="227.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="650.7" y="238.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (249 samples, 0.05%)</title><rect x="647.7" y="211.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="650.7" y="222.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (249 samples, 0.05%)</title><rect x="647.7" y="195.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="650.7" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.getResponsesFromReplicas (3,471 samples, 0.67%)</title><rect x="648.5" y="579.0" width="7.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="651.5" y="590.0"></text>
</g>
<g>
<title>java/net/URI.create (398 samples, 0.08%)</title><rect x="648.7" y="563.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="651.7" y="574.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (317 samples, 0.06%)</title><rect x="648.9" y="547.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="651.9" y="558.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (287 samples, 0.06%)</title><rect x="649.0" y="531.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="652.0" y="542.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (244 samples, 0.05%)</title><rect x="649.1" y="515.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="652.1" y="526.0"></text>
</g>
<g>
<title>java/lang/String.substring (116 samples, 0.02%)</title><rect x="649.1" y="499.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="652.1" y="510.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (116 samples, 0.02%)</title><rect x="649.1" y="483.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="652.1" y="494.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (128 samples, 0.02%)</title><rect x="649.3" y="499.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="652.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (1,950 samples, 0.37%)</title><rect x="649.9" y="563.0" width="4.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="652.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (1,950 samples, 0.37%)</title><rect x="649.9" y="547.0" width="4.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="652.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (1,950 samples, 0.37%)</title><rect x="649.9" y="531.0" width="4.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="652.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (1,950 samples, 0.37%)</title><rect x="649.9" y="515.0" width="4.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="652.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (1,017 samples, 0.20%)</title><rect x="650.6" y="499.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="653.6" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (126 samples, 0.02%)</title><rect x="650.6" y="483.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="653.6" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (393 samples, 0.08%)</title><rect x="650.9" y="483.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="653.9" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (393 samples, 0.08%)</title><rect x="650.9" y="467.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="653.9" y="478.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (197 samples, 0.04%)</title><rect x="651.1" y="451.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="654.1" y="462.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (197 samples, 0.04%)</title><rect x="651.1" y="435.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="654.1" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$115/937225413.accept (197 samples, 0.04%)</title><rect x="651.1" y="419.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="654.1" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (197 samples, 0.04%)</title><rect x="651.1" y="403.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="654.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (356 samples, 0.07%)</title><rect x="651.8" y="483.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="654.8" y="494.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (356 samples, 0.07%)</title><rect x="651.8" y="467.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="654.8" y="478.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (315 samples, 0.06%)</title><rect x="651.8" y="451.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="654.8" y="462.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (315 samples, 0.06%)</title><rect x="651.8" y="435.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="654.8" y="446.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (315 samples, 0.06%)</title><rect x="651.8" y="419.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="654.8" y="430.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (157 samples, 0.03%)</title><rect x="652.2" y="403.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="655.2" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (157 samples, 0.03%)</title><rect x="652.2" y="387.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="655.2" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (388 samples, 0.07%)</title><rect x="652.9" y="499.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="655.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (314 samples, 0.06%)</title><rect x="653.1" y="483.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="656.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (314 samples, 0.06%)</title><rect x="653.1" y="467.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="656.1" y="478.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (165 samples, 0.03%)</title><rect x="653.2" y="451.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="656.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (165 samples, 0.03%)</title><rect x="653.2" y="435.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="656.2" y="446.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyConstructor (165 samples, 0.03%)</title><rect x="653.2" y="419.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="656.2" y="430.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.copy (165 samples, 0.03%)</title><rect x="653.2" y="403.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="656.2" y="414.0"></text>
</g>
<g>
<title>java.lang.reflect.Constructor (165 samples, 0.03%)</title><rect x="653.2" y="387.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="656.2" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (236 samples, 0.05%)</title><rect x="653.8" y="499.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="656.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (159 samples, 0.03%)</title><rect x="654.0" y="483.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="657.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (124 samples, 0.02%)</title><rect x="654.1" y="467.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="657.1" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (124 samples, 0.02%)</title><rect x="654.1" y="451.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="657.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (405 samples, 0.08%)</title><rect x="654.3" y="563.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="657.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (363 samples, 0.07%)</title><rect x="654.4" y="547.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="657.4" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (363 samples, 0.07%)</title><rect x="654.4" y="531.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="657.4" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (363 samples, 0.07%)</title><rect x="654.4" y="515.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="657.4" y="526.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (155 samples, 0.03%)</title><rect x="654.8" y="499.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="657.8" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$115/937225413.accept (155 samples, 0.03%)</title><rect x="654.8" y="483.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="657.8" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (155 samples, 0.03%)</title><rect x="654.8" y="467.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="657.8" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.getFirstResponses (393 samples, 0.08%)</title><rect x="655.4" y="563.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="658.4" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.orTimeout (199 samples, 0.04%)</title><rect x="655.7" y="547.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="658.7" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.sendResponse (203 samples, 0.04%)</title><rect x="656.3" y="579.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="659.3" y="590.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (203 samples, 0.04%)</title><rect x="656.3" y="563.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="659.3" y="574.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (139 samples, 0.03%)</title><rect x="656.3" y="547.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="659.3" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/Value.from (294 samples, 0.06%)</title><rect x="656.8" y="579.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="659.8" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/Value.transform (220 samples, 0.04%)</title><rect x="657.5" y="579.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="660.5" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/ConsistentHashImpl.replicas (222 samples, 0.04%)</title><rect x="658.0" y="579.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="661.0" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/ConsistentHashImpl.firstReplica (130 samples, 0.02%)</title><rect x="658.2" y="563.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="661.2" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/MetaRequest.&lt;init&gt; (228 samples, 0.04%)</title><rect x="658.5" y="595.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="661.5" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (35,240 samples, 6.77%)</title><rect x="659.0" y="691.0" width="79.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="662.0" y="702.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (35,240 samples, 6.77%)</title><rect x="659.0" y="675.0" width="79.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="662.0" y="686.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (35,240 samples, 6.77%)</title><rect x="659.0" y="659.0" width="79.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="662.0" y="670.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (35,240 samples, 6.77%)</title><rect x="659.0" y="643.0" width="79.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="662.0" y="654.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (35,240 samples, 6.77%)</title><rect x="659.0" y="627.0" width="79.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="662.0" y="638.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (35,240 samples, 6.77%)</title><rect x="659.0" y="611.0" width="79.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="662.0" y="622.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (35,240 samples, 6.77%)</title><rect x="659.0" y="595.0" width="79.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="662.0" y="606.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (35,220 samples, 6.76%)</title><rect x="659.0" y="579.0" width="79.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="662.0" y="590.0">java/util..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService$$Lambda$140/507376197.accept (3,332 samples, 0.64%)</title><rect x="659.0" y="563.0" width="7.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="662.0" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.lambda$getFirstResponses$6 (3,332 samples, 0.64%)</title><rect x="659.0" y="547.0" width="7.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="662.0" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.add (3,332 samples, 0.64%)</title><rect x="659.0" y="531.0" width="7.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="662.0" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (3,332 samples, 0.64%)</title><rect x="659.0" y="515.0" width="7.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="662.0" y="526.0"></text>
</g>
<g>
<title>java.lang.Object[] (3,332 samples, 0.64%)</title><rect x="659.0" y="499.0" width="7.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="662.0" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService$$Lambda$321/825868292.accept (31,888 samples, 6.12%)</title><rect x="666.6" y="563.0" width="72.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="669.6" y="574.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.lambda$get$0 (31,888 samples, 6.12%)</title><rect x="666.6" y="547.0" width="72.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="669.6" y="558.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.sendResponse (6,235 samples, 1.20%)</title><rect x="666.6" y="531.0" width="14.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="669.6" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (6,235 samples, 1.20%)</title><rect x="666.6" y="515.0" width="14.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="669.6" y="526.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (6,235 samples, 1.20%)</title><rect x="666.6" y="499.0" width="14.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="669.6" y="510.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (4,805 samples, 0.92%)</title><rect x="666.6" y="483.0" width="10.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="669.6" y="494.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (4,805 samples, 0.92%)</title><rect x="666.6" y="467.0" width="10.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="669.6" y="478.0"></text>
</g>
<g>
<title>byte[] (2,464 samples, 0.47%)</title><rect x="666.6" y="451.0" width="5.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="669.6" y="462.0"></text>
</g>
<g>
<title>byte[] (2,341 samples, 0.45%)</title><rect x="672.2" y="451.0" width="5.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="675.2" y="462.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1,430 samples, 0.27%)</title><rect x="677.5" y="483.0" width="3.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="680.5" y="494.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (1,430 samples, 0.27%)</title><rect x="677.5" y="467.0" width="3.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="680.5" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/Value.from (13,851 samples, 2.66%)</title><rect x="680.7" y="531.0" width="31.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="683.7" y="542.0">ru..</text>
</g>
<g>
<title>java/lang/String.toLowerCase (3,304 samples, 0.63%)</title><rect x="680.7" y="515.0" width="7.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="683.7" y="526.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (3,304 samples, 0.63%)</title><rect x="680.7" y="499.0" width="7.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="683.7" y="510.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (3,304 samples, 0.63%)</title><rect x="680.7" y="483.0" width="7.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="683.7" y="494.0"></text>
</g>
<g>
<title>byte[] (2,247 samples, 0.43%)</title><rect x="680.7" y="467.0" width="5.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="683.7" y="478.0"></text>
</g>
<g>
<title>java.lang.String (1,057 samples, 0.20%)</title><rect x="685.8" y="467.0" width="2.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="688.8" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (6,907 samples, 1.33%)</title><rect x="688.2" y="515.0" width="15.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="691.2" y="526.0"></text>
</g>
<g>
<title>java/util/Collection.stream (5,038 samples, 0.97%)</title><rect x="688.2" y="499.0" width="11.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="691.2" y="510.0"></text>
</g>
<g>
<title>java/util/List.spliterator (1,870 samples, 0.36%)</title><rect x="688.2" y="483.0" width="4.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="691.2" y="494.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (1,870 samples, 0.36%)</title><rect x="688.2" y="467.0" width="4.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="691.2" y="478.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (3,168 samples, 0.61%)</title><rect x="692.4" y="483.0" width="7.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="695.4" y="494.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (2,387 samples, 0.46%)</title><rect x="692.4" y="467.0" width="5.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="695.4" y="478.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (781 samples, 0.15%)</title><rect x="697.8" y="467.0" width="1.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="700.8" y="478.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (1,869 samples, 0.36%)</title><rect x="699.6" y="499.0" width="4.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="702.6" y="510.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1,869 samples, 0.36%)</title><rect x="699.6" y="483.0" width="4.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="702.6" y="494.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (1,869 samples, 0.36%)</title><rect x="699.6" y="467.0" width="4.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="702.6" y="478.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$52/78204644.get (1,042 samples, 0.20%)</title><rect x="699.6" y="451.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="702.6" y="462.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (1,042 samples, 0.20%)</title><rect x="699.6" y="435.0" width="2.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="702.6" y="446.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (827 samples, 0.16%)</title><rect x="702.0" y="451.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="705.0" y="462.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (827 samples, 0.16%)</title><rect x="702.0" y="435.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="705.0" y="446.0"></text>
</g>
<g>
<title>java/util/Optional.of (827 samples, 0.16%)</title><rect x="702.0" y="419.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="705.0" y="430.0"></text>
</g>
<g>
<title>java.util.Optional (827 samples, 0.16%)</title><rect x="702.0" y="403.0" width="1.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="705.0" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/Value.present (3,640 samples, 0.70%)</title><rect x="703.8" y="515.0" width="8.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="706.8" y="526.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.Value (2,281 samples, 0.44%)</title><rect x="703.8" y="499.0" width="5.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="706.8" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/Value.&lt;init&gt; (1,359 samples, 0.26%)</title><rect x="709.0" y="499.0" width="3.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="712.0" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1,359 samples, 0.26%)</title><rect x="709.0" y="483.0" width="3.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="712.0" y="494.0"></text>
</g>
<g>
<title>byte[] (1,359 samples, 0.26%)</title><rect x="709.0" y="467.0" width="3.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="712.0" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/Value.merge (7,645 samples, 1.47%)</title><rect x="712.1" y="531.0" width="17.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="715.1" y="542.0"></text>
</g>
<g>
<title>java/util/Collection.stream (2,482 samples, 0.48%)</title><rect x="712.1" y="515.0" width="5.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="715.1" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.spliterator (978 samples, 0.19%)</title><rect x="712.1" y="499.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="715.1" y="510.0"></text>
</g>
<g>
<title>java.util.ArrayList$ArrayListSpliterator (978 samples, 0.19%)</title><rect x="712.1" y="483.0" width="2.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="715.1" y="494.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (1,504 samples, 0.29%)</title><rect x="714.3" y="499.0" width="3.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="717.3" y="510.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (1,369 samples, 0.26%)</title><rect x="714.3" y="483.0" width="3.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="717.3" y="494.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (135 samples, 0.03%)</title><rect x="717.4" y="483.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="720.4" y="494.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (2,161 samples, 0.41%)</title><rect x="717.7" y="515.0" width="4.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="720.7" y="526.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (1,687 samples, 0.32%)</title><rect x="717.7" y="499.0" width="3.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="720.7" y="510.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (474 samples, 0.09%)</title><rect x="721.5" y="499.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="724.5" y="510.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.max (3,002 samples, 0.58%)</title><rect x="722.6" y="515.0" width="6.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="725.6" y="526.0"></text>
</g>
<g>
<title>java/util/function/BinaryOperator.maxBy (506 samples, 0.10%)</title><rect x="722.6" y="499.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="725.6" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (506 samples, 0.10%)</title><rect x="722.6" y="483.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="725.6" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (506 samples, 0.10%)</title><rect x="722.6" y="467.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="725.6" y="478.0"></text>
</g>
<g>
<title>java/util/function/BinaryOperator$$Lambda$325/743637287.get$Lambda (506 samples, 0.10%)</title><rect x="722.6" y="451.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="725.6" y="462.0"></text>
</g>
<g>
<title>java.util.function.BinaryOperator$$Lambda$325 (506 samples, 0.10%)</title><rect x="722.6" y="435.0" width="1.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="725.6" y="446.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.reduce (2,496 samples, 0.48%)</title><rect x="723.8" y="499.0" width="5.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="726.8" y="510.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1,978 samples, 0.38%)</title><rect x="723.8" y="483.0" width="4.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="726.8" y="494.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (1,978 samples, 0.38%)</title><rect x="723.8" y="467.0" width="4.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="726.8" y="478.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (624 samples, 0.12%)</title><rect x="723.8" y="451.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="726.8" y="462.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (624 samples, 0.12%)</title><rect x="723.8" y="435.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="726.8" y="446.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (624 samples, 0.12%)</title><rect x="723.8" y="419.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="726.8" y="430.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2$1 (624 samples, 0.12%)</title><rect x="723.8" y="403.0" width="1.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="726.8" y="414.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2.makeSink (1,092 samples, 0.21%)</title><rect x="725.2" y="451.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="728.2" y="462.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2.makeSink (1,092 samples, 0.21%)</title><rect x="725.2" y="435.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="728.2" y="446.0"></text>
</g>
<g>
<title>java.util.stream.ReduceOps$2ReducingSink (1,092 samples, 0.21%)</title><rect x="725.2" y="419.0" width="2.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="728.2" y="430.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2ReducingSink.get (262 samples, 0.05%)</title><rect x="727.7" y="451.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="730.7" y="462.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2ReducingSink.get (262 samples, 0.05%)</title><rect x="727.7" y="435.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="730.7" y="446.0"></text>
</g>
<g>
<title>java/util/Optional.of (262 samples, 0.05%)</title><rect x="727.7" y="419.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="730.7" y="430.0"></text>
</g>
<g>
<title>java.util.Optional (262 samples, 0.05%)</title><rect x="727.7" y="403.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="730.7" y="414.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps.makeRef (518 samples, 0.10%)</title><rect x="728.2" y="483.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="731.2" y="494.0"></text>
</g>
<g>
<title>java.util.stream.ReduceOps$2 (518 samples, 0.10%)</title><rect x="728.2" y="467.0" width="1.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="731.2" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/Value.transform (4,157 samples, 0.80%)</title><rect x="729.4" y="531.0" width="9.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="732.4" y="542.0"></text>
</g>
<g>
<title>one.nio.http.Response (554 samples, 0.11%)</title><rect x="729.4" y="515.0" width="1.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="732.4" y="526.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (2,606 samples, 0.50%)</title><rect x="730.7" y="515.0" width="5.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="733.7" y="526.0"></text>
</g>
<g>
<title>byte[] (1,038 samples, 0.20%)</title><rect x="730.7" y="499.0" width="2.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="733.7" y="510.0"></text>
</g>
<g>
<title>java.lang.String[] (632 samples, 0.12%)</title><rect x="733.0" y="499.0" width="1.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="736.0" y="510.0"></text>
</g>
<g>
<title>java.lang.String (936 samples, 0.18%)</title><rect x="734.5" y="499.0" width="2.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="737.5" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/Value.getData (997 samples, 0.19%)</title><rect x="736.6" y="515.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="739.6" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (997 samples, 0.19%)</title><rect x="736.6" y="499.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="739.6" y="510.0"></text>
</g>
<g>
<title>byte[] (997 samples, 0.19%)</title><rect x="736.6" y="483.0" width="2.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="739.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (13,188 samples, 2.53%)</title><rect x="738.8" y="691.0" width="29.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="741.8" y="702.0">jd..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (315 samples, 0.06%)</title><rect x="738.8" y="675.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="741.8" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (315 samples, 0.06%)</title><rect x="738.8" y="659.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="741.8" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$239/516844372.get$Lambda (231 samples, 0.04%)</title><rect x="738.8" y="643.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="741.8" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$239 (231 samples, 0.04%)</title><rect x="738.8" y="627.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="741.8" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/896644936.linkToTargetMethod (338 samples, 0.06%)</title><rect x="739.6" y="675.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="742.6" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (338 samples, 0.06%)</title><rect x="739.6" y="659.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="742.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$240/135343777.get$Lambda (338 samples, 0.06%)</title><rect x="739.6" y="643.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="742.6" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$240 (338 samples, 0.06%)</title><rect x="739.6" y="627.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="742.6" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (3,142 samples, 0.60%)</title><rect x="740.3" y="675.0" width="7.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="743.3" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$241/404115466.accept (2,603 samples, 0.50%)</title><rect x="740.3" y="659.0" width="5.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="743.3" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (2,603 samples, 0.50%)</title><rect x="740.3" y="643.0" width="5.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="743.3" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (2,603 samples, 0.50%)</title><rect x="740.3" y="627.0" width="5.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="743.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (2,603 samples, 0.50%)</title><rect x="740.3" y="611.0" width="5.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="743.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (2,603 samples, 0.50%)</title><rect x="740.3" y="595.0" width="5.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="743.3" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (2,603 samples, 0.50%)</title><rect x="740.3" y="579.0" width="5.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="743.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2,603 samples, 0.50%)</title><rect x="740.3" y="563.0" width="5.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="743.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2,603 samples, 0.50%)</title><rect x="740.3" y="547.0" width="5.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="743.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (2,603 samples, 0.50%)</title><rect x="740.3" y="531.0" width="5.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="743.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (2,603 samples, 0.50%)</title><rect x="740.3" y="515.0" width="5.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="743.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$181/1894615385.run (2,603 samples, 0.50%)</title><rect x="740.3" y="499.0" width="5.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="743.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (2,603 samples, 0.50%)</title><rect x="740.3" y="483.0" width="5.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="743.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (626 samples, 0.12%)</title><rect x="740.3" y="467.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="743.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (626 samples, 0.12%)</title><rect x="740.3" y="451.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="743.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (626 samples, 0.12%)</title><rect x="740.3" y="435.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="743.3" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offer (296 samples, 0.06%)</title><rect x="740.3" y="419.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="743.3" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (296 samples, 0.06%)</title><rect x="740.3" y="403.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="743.3" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (296 samples, 0.06%)</title><rect x="740.3" y="387.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="743.3" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (296 samples, 0.06%)</title><rect x="740.3" y="371.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="743.3" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (296 samples, 0.06%)</title><rect x="740.3" y="355.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="743.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (330 samples, 0.06%)</title><rect x="741.0" y="419.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="744.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (330 samples, 0.06%)</title><rect x="741.0" y="403.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="744.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (330 samples, 0.06%)</title><rect x="741.0" y="387.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="744.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (330 samples, 0.06%)</title><rect x="741.0" y="371.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="744.0" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (330 samples, 0.06%)</title><rect x="741.0" y="355.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="744.0" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (330 samples, 0.06%)</title><rect x="741.0" y="339.0" width="0.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="744.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (206 samples, 0.04%)</title><rect x="741.8" y="467.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="744.8" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (206 samples, 0.04%)</title><rect x="741.8" y="451.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="744.8" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (206 samples, 0.04%)</title><rect x="741.8" y="435.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="744.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$251/1699824535.get$Lambda (206 samples, 0.04%)</title><rect x="741.8" y="419.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="744.8" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$251 (206 samples, 0.04%)</title><rect x="741.8" y="403.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="744.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (1,760 samples, 0.34%)</title><rect x="742.2" y="467.0" width="4.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="745.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.append (1,005 samples, 0.19%)</title><rect x="742.2" y="451.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="745.2" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (693 samples, 0.13%)</title><rect x="742.2" y="435.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="745.2" y="446.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (693 samples, 0.13%)</title><rect x="742.2" y="419.0" width="1.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="745.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.listOf (312 samples, 0.06%)</title><rect x="743.8" y="435.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="746.8" y="446.0"></text>
</g>
<g>
<title>java/util/List.of (312 samples, 0.06%)</title><rect x="743.8" y="419.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="746.8" y="430.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (312 samples, 0.06%)</title><rect x="743.8" y="403.0" width="0.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="746.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.getBuffer (755 samples, 0.14%)</title><rect x="744.5" y="451.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="747.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection$$Lambda$172/2114713671.get (755 samples, 0.14%)</title><rect x="744.5" y="435.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="747.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getBuffer (755 samples, 0.14%)</title><rect x="744.5" y="419.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="747.5" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (755 samples, 0.14%)</title><rect x="744.5" y="403.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="747.5" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (744 samples, 0.14%)</title><rect x="744.5" y="387.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="747.5" y="398.0"></text>
</g>
<g>
<title>byte[] (737 samples, 0.14%)</title><rect x="744.5" y="371.0" width="1.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="747.5" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$244/1205372074.accept (539 samples, 0.10%)</title><rect x="746.2" y="659.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="749.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (539 samples, 0.10%)</title><rect x="746.2" y="643.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="749.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$240/135343777.run (539 samples, 0.10%)</title><rect x="746.2" y="627.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="749.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (539 samples, 0.10%)</title><rect x="746.2" y="611.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="749.2" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (539 samples, 0.10%)</title><rect x="746.2" y="595.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="749.2" y="606.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (539 samples, 0.10%)</title><rect x="746.2" y="579.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="749.2" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (539 samples, 0.10%)</title><rect x="746.2" y="563.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="749.2" y="574.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (539 samples, 0.10%)</title><rect x="746.2" y="547.0" width="1.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="749.2" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (658 samples, 0.13%)</title><rect x="747.4" y="675.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="750.4" y="686.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (658 samples, 0.13%)</title><rect x="747.4" y="659.0" width="1.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="750.4" y="670.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (621 samples, 0.12%)</title><rect x="748.9" y="675.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="751.9" y="686.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (286 samples, 0.05%)</title><rect x="748.9" y="659.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="751.9" y="670.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (286 samples, 0.05%)</title><rect x="748.9" y="643.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="751.9" y="654.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (286 samples, 0.05%)</title><rect x="748.9" y="627.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="751.9" y="638.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (286 samples, 0.05%)</title><rect x="748.9" y="611.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="751.9" y="622.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (286 samples, 0.05%)</title><rect x="748.9" y="595.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="751.9" y="606.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (286 samples, 0.05%)</title><rect x="748.9" y="579.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="751.9" y="590.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2$1 (286 samples, 0.05%)</title><rect x="748.9" y="563.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="751.9" y="574.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps.makeRef (335 samples, 0.06%)</title><rect x="749.6" y="659.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="752.6" y="670.0"></text>
</g>
<g>
<title>java.util.stream.ForEachOps$ForEachOp$OfRef (335 samples, 0.06%)</title><rect x="749.6" y="643.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="752.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (2,103 samples, 0.40%)</title><rect x="750.3" y="675.0" width="4.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="753.3" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$188/903113097.run (1,042 samples, 0.20%)</title><rect x="750.3" y="659.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="753.3" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (1,042 samples, 0.20%)</title><rect x="750.3" y="643.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="753.3" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,042 samples, 0.20%)</title><rect x="750.3" y="627.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="753.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,042 samples, 0.20%)</title><rect x="750.3" y="611.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="753.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1,042 samples, 0.20%)</title><rect x="750.3" y="595.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="753.3" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (1,042 samples, 0.20%)</title><rect x="750.3" y="579.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="753.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$181/1894615385.run (1,042 samples, 0.20%)</title><rect x="750.3" y="563.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="753.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (1,042 samples, 0.20%)</title><rect x="750.3" y="547.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="753.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (1,041 samples, 0.20%)</title><rect x="750.3" y="531.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="753.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (1,041 samples, 0.20%)</title><rect x="750.3" y="515.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="753.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (720 samples, 0.14%)</title><rect x="750.3" y="499.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="753.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (720 samples, 0.14%)</title><rect x="750.3" y="483.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="753.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (720 samples, 0.14%)</title><rect x="750.3" y="467.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="753.3" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/623247230.linkToTargetMethod (509 samples, 0.10%)</title><rect x="750.3" y="451.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="753.3" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/773662650.invoke (509 samples, 0.10%)</title><rect x="750.3" y="435.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="753.3" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (509 samples, 0.10%)</title><rect x="750.3" y="419.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="753.3" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (509 samples, 0.10%)</title><rect x="750.3" y="403.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="753.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (509 samples, 0.10%)</title><rect x="750.3" y="387.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="753.3" y="398.0"></text>
</g>
<g>
<title>byte[] (509 samples, 0.10%)</title><rect x="750.3" y="371.0" width="1.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="753.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (211 samples, 0.04%)</title><rect x="751.5" y="451.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="754.5" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (211 samples, 0.04%)</title><rect x="751.5" y="435.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="754.5" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (211 samples, 0.04%)</title><rect x="751.5" y="419.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="754.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$251/1699824535.get$Lambda (211 samples, 0.04%)</title><rect x="751.5" y="403.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="754.5" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$251 (211 samples, 0.04%)</title><rect x="751.5" y="387.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="754.5" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (321 samples, 0.06%)</title><rect x="752.0" y="499.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="755.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (321 samples, 0.06%)</title><rect x="752.0" y="483.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="755.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (321 samples, 0.06%)</title><rect x="752.0" y="467.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="755.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (321 samples, 0.06%)</title><rect x="752.0" y="451.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="755.0" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (321 samples, 0.06%)</title><rect x="752.0" y="435.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="755.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (321 samples, 0.06%)</title><rect x="752.0" y="419.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="755.0" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (319 samples, 0.06%)</title><rect x="752.0" y="403.0" width="0.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="755.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$192/1926392655.run (1,061 samples, 0.20%)</title><rect x="752.7" y="659.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="755.7" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (1,061 samples, 0.20%)</title><rect x="752.7" y="643.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="755.7" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (418 samples, 0.08%)</title><rect x="752.7" y="627.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="755.7" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (418 samples, 0.08%)</title><rect x="752.7" y="611.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="755.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$247/1271722553.get$Lambda (418 samples, 0.08%)</title><rect x="752.7" y="595.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="755.7" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$$Lambda$247 (418 samples, 0.08%)</title><rect x="752.7" y="579.0" width="0.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="755.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (643 samples, 0.12%)</title><rect x="753.6" y="627.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="756.6" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (643 samples, 0.12%)</title><rect x="753.6" y="611.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="756.6" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (643 samples, 0.12%)</title><rect x="753.6" y="595.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="756.6" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (643 samples, 0.12%)</title><rect x="753.6" y="579.0" width="1.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="756.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (2,473 samples, 0.47%)</title><rect x="755.1" y="675.0" width="5.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="758.1" y="686.0"></text>
</g>
<g>
<title>java/time/Instant.now (391 samples, 0.08%)</title><rect x="755.1" y="659.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="758.1" y="670.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (391 samples, 0.08%)</title><rect x="755.1" y="643.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="758.1" y="654.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (391 samples, 0.08%)</title><rect x="755.1" y="627.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="758.1" y="638.0"></text>
</g>
<g>
<title>java/time/Instant.create (391 samples, 0.08%)</title><rect x="755.1" y="611.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="758.1" y="622.0"></text>
</g>
<g>
<title>java.time.Instant (391 samples, 0.08%)</title><rect x="755.1" y="595.0" width="0.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="758.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (2,082 samples, 0.40%)</title><rect x="756.0" y="659.0" width="4.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="759.0" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (262 samples, 0.05%)</title><rect x="756.0" y="643.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="759.0" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (262 samples, 0.05%)</title><rect x="756.0" y="627.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="759.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$$Lambda$315/928562525.get$Lambda (262 samples, 0.05%)</title><rect x="756.0" y="611.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="759.0" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$$Lambda$315 (262 samples, 0.05%)</title><rect x="756.0" y="595.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="759.0" y="606.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (513 samples, 0.10%)</title><rect x="756.6" y="643.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="759.6" y="654.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (513 samples, 0.10%)</title><rect x="756.6" y="627.0" width="1.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="759.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.nextExpiryDeadline (302 samples, 0.06%)</title><rect x="757.7" y="643.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="760.7" y="654.0"></text>
</g>
<g>
<title>java/util/Optional.of (302 samples, 0.06%)</title><rect x="757.7" y="627.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="760.7" y="638.0"></text>
</g>
<g>
<title>java.util.Optional (302 samples, 0.06%)</title><rect x="757.7" y="611.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="760.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (1,005 samples, 0.19%)</title><rect x="758.4" y="643.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="761.4" y="654.0"></text>
</g>
<g>
<title>java.util.ArrayList (422 samples, 0.08%)</title><rect x="758.4" y="627.0" width="1.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="761.4" y="638.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (583 samples, 0.11%)</title><rect x="759.4" y="627.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="762.4" y="638.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (583 samples, 0.11%)</title><rect x="759.4" y="611.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="762.4" y="622.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (583 samples, 0.11%)</title><rect x="759.4" y="595.0" width="1.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="762.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.events (2,338 samples, 0.45%)</title><rect x="760.7" y="675.0" width="5.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="763.7" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (225 samples, 0.04%)</title><rect x="760.7" y="659.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="763.7" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (225 samples, 0.04%)</title><rect x="760.7" y="643.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="763.7" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment$$Lambda$238/1066786881.get$Lambda (225 samples, 0.04%)</title><rect x="760.7" y="627.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="763.7" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorAttachment$$Lambda$238 (225 samples, 0.04%)</title><rect x="760.7" y="611.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="763.7" y="622.0"></text>
</g>
<g>
<title>java/util/Collection.stream (1,242 samples, 0.24%)</title><rect x="761.2" y="659.0" width="2.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="764.2" y="670.0"></text>
</g>
<g>
<title>java/util/HashSet.spliterator (500 samples, 0.10%)</title><rect x="761.2" y="643.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="764.2" y="654.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySpliterator (500 samples, 0.10%)</title><rect x="761.2" y="627.0" width="1.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="764.2" y="638.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (742 samples, 0.14%)</title><rect x="762.3" y="643.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="765.3" y="654.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (742 samples, 0.14%)</title><rect x="762.3" y="627.0" width="1.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="765.3" y="638.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (871 samples, 0.17%)</title><rect x="764.0" y="659.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="767.0" y="670.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (871 samples, 0.17%)</title><rect x="764.0" y="643.0" width="2.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="767.0" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (717 samples, 0.14%)</title><rect x="766.0" y="675.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="769.0" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (717 samples, 0.14%)</title><rect x="766.0" y="659.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="769.0" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (717 samples, 0.14%)</title><rect x="766.0" y="643.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="769.0" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (717 samples, 0.14%)</title><rect x="766.0" y="627.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="769.0" y="638.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (295 samples, 0.06%)</title><rect x="766.0" y="611.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="769.0" y="622.0"></text>
</g>
<g>
<title>java.lang.Integer (295 samples, 0.06%)</title><rect x="766.0" y="595.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="769.0" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (422 samples, 0.08%)</title><rect x="766.7" y="611.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="769.7" y="622.0"></text>
</g>
<g>
<title>java/util/HashSet.add (422 samples, 0.08%)</title><rect x="766.7" y="595.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="769.7" y="606.0"></text>
</g>
<g>
<title>java/util/HashMap.put (422 samples, 0.08%)</title><rect x="766.7" y="579.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="769.7" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (422 samples, 0.08%)</title><rect x="766.7" y="563.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="769.7" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (422 samples, 0.08%)</title><rect x="766.7" y="547.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="769.7" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (422 samples, 0.08%)</title><rect x="766.7" y="531.0" width="0.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="769.7" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (260 samples, 0.05%)</title><rect x="767.6" y="675.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="770.6" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (260 samples, 0.05%)</title><rect x="767.6" y="659.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="770.6" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (260 samples, 0.05%)</title><rect x="767.6" y="643.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="770.6" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (260 samples, 0.05%)</title><rect x="767.6" y="627.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="770.6" y="638.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (231 samples, 0.04%)</title><rect x="767.6" y="611.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="770.6" y="622.0"></text>
</g>
<g>
<title>java.lang.Integer (231 samples, 0.04%)</title><rect x="767.6" y="595.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="770.6" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (223 samples, 0.04%)</title><rect x="768.2" y="675.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="771.2" y="686.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (223 samples, 0.04%)</title><rect x="768.2" y="659.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="771.2" y="670.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (223 samples, 0.04%)</title><rect x="768.2" y="643.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="771.2" y="654.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (223 samples, 0.04%)</title><rect x="768.2" y="627.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="771.2" y="638.0"></text>
</g>
<g>
<title>one/nio/server/AcceptorThread.run (112 samples, 0.02%)</title><rect x="768.7" y="691.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="771.7" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.createSession (112 samples, 0.02%)</title><rect x="768.7" y="675.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="771.7" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.createSession (112 samples, 0.02%)</title><rect x="768.7" y="659.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="771.7" y="670.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (185,798 samples, 35.68%)</title><rect x="769.0" y="691.0" width="421.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="772.0" y="702.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (2,876 samples, 0.55%)</title><rect x="769.0" y="675.0" width="6.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="772.0" y="686.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (2,876 samples, 0.55%)</title><rect x="769.0" y="659.0" width="6.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="772.0" y="670.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (182,922 samples, 35.13%)</title><rect x="775.5" y="675.0" width="414.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="778.5" y="686.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (182,922 samples, 35.13%)</title><rect x="775.5" y="659.0" width="414.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="778.5" y="670.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (182,851 samples, 35.11%)</title><rect x="775.5" y="643.0" width="414.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="778.5" y="654.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (76,515 samples, 14.69%)</title><rect x="775.5" y="627.0" width="173.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="778.5" y="638.0">one/nio/http/HttpSessi..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (76,515 samples, 14.69%)</title><rect x="775.5" y="611.0" width="173.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="778.5" y="622.0">one/nio/http/HttpServe..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (72,063 samples, 13.84%)</title><rect x="775.5" y="595.0" width="163.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="778.5" y="606.0">RequestHandler1_entit..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (7,182 samples, 1.38%)</title><rect x="775.5" y="579.0" width="16.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="778.5" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (7,182 samples, 1.38%)</title><rect x="775.5" y="563.0" width="16.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="778.5" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (7,182 samples, 1.38%)</title><rect x="775.5" y="547.0" width="16.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="778.5" y="558.0"></text>
</g>
<g>
<title>java.lang.String (2,757 samples, 0.53%)</title><rect x="775.5" y="531.0" width="6.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="778.5" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4,425 samples, 0.85%)</title><rect x="781.7" y="531.0" width="10.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="784.7" y="542.0"></text>
</g>
<g>
<title>byte[] (4,425 samples, 0.85%)</title><rect x="781.7" y="515.0" width="10.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="784.7" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.entity (64,881 samples, 12.46%)</title><rect x="791.8" y="579.0" width="147.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="794.8" y="590.0">ru/mail/polis/servi..</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1265280059.linkToTargetMethod (2,078 samples, 0.40%)</title><rect x="791.8" y="563.0" width="4.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="794.8" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1440359064.invokeStatic (2,078 samples, 0.40%)</title><rect x="791.8" y="547.0" width="4.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="794.8" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$317/1070440207.get$Lambda (2,078 samples, 0.40%)</title><rect x="791.8" y="531.0" width="4.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="794.8" y="542.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$$Lambda$317 (2,078 samples, 0.40%)</title><rect x="791.8" y="515.0" width="4.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="794.8" y="526.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2,388 samples, 0.46%)</title><rect x="796.5" y="563.0" width="5.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="799.5" y="574.0"></text>
</g>
<g>
<title>java/lang/String.substring (2,388 samples, 0.46%)</title><rect x="796.5" y="547.0" width="5.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="799.5" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2,388 samples, 0.46%)</title><rect x="796.5" y="531.0" width="5.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="799.5" y="542.0"></text>
</g>
<g>
<title>java.lang.String (1,581 samples, 0.30%)</title><rect x="796.5" y="515.0" width="3.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="799.5" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (807 samples, 0.15%)</title><rect x="800.1" y="515.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="803.1" y="526.0"></text>
</g>
<g>
<title>byte[] (807 samples, 0.15%)</title><rect x="800.1" y="499.0" width="1.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="803.1" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.executeAsync (2,602 samples, 0.50%)</title><rect x="801.9" y="563.0" width="5.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="804.9" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,348 samples, 0.26%)</title><rect x="801.9" y="547.0" width="3.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="804.9" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,348 samples, 0.26%)</title><rect x="801.9" y="531.0" width="3.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="804.9" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$107/2098846329.get$Lambda (1,348 samples, 0.26%)</title><rect x="801.9" y="515.0" width="3.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="804.9" y="526.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$$Lambda$107 (1,348 samples, 0.26%)</title><rect x="801.9" y="499.0" width="3.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="804.9" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1,254 samples, 0.24%)</title><rect x="804.9" y="547.0" width="2.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="807.9" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1,254 samples, 0.24%)</title><rect x="804.9" y="531.0" width="2.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="807.9" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (1,248 samples, 0.24%)</title><rect x="804.9" y="515.0" width="2.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="807.9" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/ConsistentHashImpl.all (35,289 samples, 6.78%)</title><rect x="807.8" y="563.0" width="80.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="810.8" y="574.0">ru/mail/p..</text>
</g>
<g>
<title>java/util/Set.copyOf (35,289 samples, 6.78%)</title><rect x="807.8" y="547.0" width="80.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="810.8" y="558.0">java/util..</text>
</g>
<g>
<title>java.util.HashSet (1,753 samples, 0.34%)</title><rect x="807.8" y="531.0" width="4.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="810.8" y="542.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (5,544 samples, 1.06%)</title><rect x="811.8" y="531.0" width="12.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="814.8" y="542.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,654 samples, 0.32%)</title><rect x="811.8" y="515.0" width="3.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="814.8" y="526.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (3,890 samples, 0.75%)</title><rect x="815.5" y="515.0" width="8.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="818.5" y="526.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (3,210 samples, 0.62%)</title><rect x="815.5" y="499.0" width="7.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="818.5" y="510.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (3,210 samples, 0.62%)</title><rect x="815.5" y="483.0" width="7.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="818.5" y="494.0"></text>
</g>
<g>
<title>java/util/HashMap.keySet (680 samples, 0.13%)</title><rect x="822.8" y="499.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="825.8" y="510.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySet (680 samples, 0.13%)</title><rect x="822.8" y="483.0" width="1.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="825.8" y="494.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (23,409 samples, 4.50%)</title><rect x="824.3" y="531.0" width="53.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="827.3" y="542.0">java/..</text>
</g>
<g>
<title>java.util.HashMap (2,832 samples, 0.54%)</title><rect x="824.3" y="515.0" width="6.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="827.3" y="526.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (20,577 samples, 3.95%)</title><rect x="830.7" y="515.0" width="46.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="833.7" y="526.0">java..</text>
</g>
<g>
<title>java/util/HashSet.add (17,283 samples, 3.32%)</title><rect x="830.7" y="499.0" width="39.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="833.7" y="510.0">jav..</text>
</g>
<g>
<title>java/util/HashMap.put (17,283 samples, 3.32%)</title><rect x="830.7" y="483.0" width="39.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="833.7" y="494.0">jav..</text>
</g>
<g>
<title>java/util/HashMap.putVal (17,283 samples, 3.32%)</title><rect x="830.7" y="467.0" width="39.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="833.7" y="478.0">jav..</text>
</g>
<g>
<title>java/util/HashMap.newNode (10,880 samples, 2.09%)</title><rect x="830.7" y="451.0" width="24.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="833.7" y="462.0">j..</text>
</g>
<g>
<title>java.util.HashMap$Node (10,880 samples, 2.09%)</title><rect x="830.7" y="435.0" width="24.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="833.7" y="446.0">j..</text>
</g>
<g>
<title>java/util/HashMap.resize (6,403 samples, 1.23%)</title><rect x="855.4" y="451.0" width="14.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="858.4" y="462.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (3,272 samples, 0.63%)</title><rect x="855.4" y="435.0" width="7.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="858.4" y="446.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (3,131 samples, 0.60%)</title><rect x="862.8" y="435.0" width="7.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="865.8" y="446.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (3,294 samples, 0.63%)</title><rect x="869.9" y="499.0" width="7.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="872.9" y="510.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (3,294 samples, 0.63%)</title><rect x="869.9" y="483.0" width="7.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="872.9" y="494.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (3,294 samples, 0.63%)</title><rect x="869.9" y="467.0" width="7.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="872.9" y="478.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeyIterator (3,294 samples, 0.63%)</title><rect x="869.9" y="451.0" width="7.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="872.9" y="462.0"></text>
</g>
<g>
<title>java/util/Set.of (4,583 samples, 0.88%)</title><rect x="877.4" y="531.0" width="10.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="880.4" y="542.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$SetN (1,728 samples, 0.33%)</title><rect x="877.4" y="515.0" width="3.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="880.4" y="526.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$SetN.&lt;init&gt; (2,855 samples, 0.55%)</title><rect x="881.3" y="515.0" width="6.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="884.3" y="526.0"></text>
</g>
<g>
<title>java.lang.Object[] (2,855 samples, 0.55%)</title><rect x="881.3" y="499.0" width="6.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="884.3" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/RF.from (22,524 samples, 4.33%)</title><rect x="887.8" y="563.0" width="51.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="890.8" y="574.0">ru/ma..</text>
</g>
<g>
<title>com/google/common/base/Splitter.on (2,851 samples, 0.55%)</title><rect x="887.8" y="547.0" width="6.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="890.8" y="558.0"></text>
</g>
<g>
<title>com/google/common/base/CharMatcher.is (1,063 samples, 0.20%)</title><rect x="887.8" y="531.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="890.8" y="542.0"></text>
</g>
<g>
<title>com.google.common.base.CharMatcher$Is (1,063 samples, 0.20%)</title><rect x="887.8" y="515.0" width="2.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="890.8" y="526.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.on (1,788 samples, 0.34%)</title><rect x="890.2" y="531.0" width="4.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="893.2" y="542.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter$1 (1,788 samples, 0.34%)</title><rect x="890.2" y="515.0" width="4.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="893.2" y="526.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splitToList (17,426 samples, 3.35%)</title><rect x="894.2" y="547.0" width="39.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="897.2" y="558.0">com..</text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.hasNext (8,862 samples, 1.70%)</title><rect x="894.2" y="531.0" width="20.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="897.2" y="542.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.tryToComputeNext (8,862 samples, 1.70%)</title><rect x="894.2" y="515.0" width="20.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="897.2" y="526.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (8,862 samples, 1.70%)</title><rect x="894.2" y="499.0" width="20.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="897.2" y="510.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (8,862 samples, 1.70%)</title><rect x="894.2" y="483.0" width="20.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="897.2" y="494.0"></text>
</g>
<g>
<title>java/lang/String.subSequence (8,862 samples, 1.70%)</title><rect x="894.2" y="467.0" width="20.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="897.2" y="478.0"></text>
</g>
<g>
<title>java/lang/String.substring (8,862 samples, 1.70%)</title><rect x="894.2" y="451.0" width="20.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="897.2" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (8,862 samples, 1.70%)</title><rect x="894.2" y="435.0" width="20.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="897.2" y="446.0"></text>
</g>
<g>
<title>java.lang.String (4,355 samples, 0.84%)</title><rect x="894.2" y="419.0" width="9.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="897.2" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4,507 samples, 0.87%)</title><rect x="904.1" y="419.0" width="10.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="907.1" y="430.0"></text>
</g>
<g>
<title>byte[] (4,507 samples, 0.87%)</title><rect x="904.1" y="403.0" width="10.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="907.1" y="414.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splittingIterator (2,692 samples, 0.52%)</title><rect x="914.3" y="531.0" width="6.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="917.3" y="542.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (2,692 samples, 0.52%)</title><rect x="914.3" y="515.0" width="6.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="917.3" y="526.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (2,692 samples, 0.52%)</title><rect x="914.3" y="499.0" width="6.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="917.3" y="510.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter$1$1 (2,692 samples, 0.52%)</title><rect x="914.3" y="483.0" width="6.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="917.3" y="494.0"></text>
</g>
<g>
<title>java.util.ArrayList (2,453 samples, 0.47%)</title><rect x="920.4" y="531.0" width="5.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="923.4" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3,419 samples, 0.66%)</title><rect x="926.0" y="531.0" width="7.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="929.0" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3,419 samples, 0.66%)</title><rect x="926.0" y="515.0" width="7.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="929.0" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (3,419 samples, 0.66%)</title><rect x="926.0" y="499.0" width="7.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="929.0" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (3,419 samples, 0.66%)</title><rect x="926.0" y="483.0" width="7.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="929.0" y="494.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (3,419 samples, 0.66%)</title><rect x="926.0" y="467.0" width="7.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="929.0" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (2,907 samples, 0.56%)</title><rect x="926.0" y="451.0" width="6.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="929.0" y="462.0"></text>
</g>
<g>
<title>java.lang.Object[] (512 samples, 0.10%)</title><rect x="932.5" y="451.0" width="1.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="935.5" y="462.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.topology.RF (2,247 samples, 0.43%)</title><rect x="933.7" y="547.0" width="5.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="936.7" y="558.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (4,452 samples, 0.85%)</title><rect x="938.8" y="595.0" width="10.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="941.8" y="606.0"></text>
</g>
<g>
<title>java/lang/String.substring (4,452 samples, 0.85%)</title><rect x="938.8" y="579.0" width="10.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="941.8" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4,452 samples, 0.85%)</title><rect x="938.8" y="563.0" width="10.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="941.8" y="574.0"></text>
</g>
<g>
<title>java.lang.String (1,720 samples, 0.33%)</title><rect x="938.8" y="547.0" width="3.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="941.8" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2,732 samples, 0.52%)</title><rect x="942.7" y="547.0" width="6.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="945.7" y="558.0"></text>
</g>
<g>
<title>byte[] (2,732 samples, 0.52%)</title><rect x="942.7" y="531.0" width="6.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="945.7" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (27,317 samples, 5.25%)</title><rect x="948.9" y="627.0" width="61.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="951.9" y="638.0">one/ni..</text>
</g>
<g>
<title>one.nio.http.Request (4,265 samples, 0.82%)</title><rect x="948.9" y="611.0" width="9.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="951.9" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (5,405 samples, 1.04%)</title><rect x="958.5" y="611.0" width="12.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="961.5" y="622.0"></text>
</g>
<g>
<title>java.lang.String[] (3,640 samples, 0.70%)</title><rect x="958.5" y="595.0" width="8.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="961.5" y="606.0"></text>
</g>
<g>
<title>java.lang.String[] (1,765 samples, 0.34%)</title><rect x="966.8" y="595.0" width="4.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="969.8" y="606.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (17,647 samples, 3.39%)</title><rect x="970.8" y="611.0" width="40.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="973.8" y="622.0">one..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (17,647 samples, 3.39%)</title><rect x="970.8" y="595.0" width="40.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="973.8" y="606.0">one..</text>
</g>
<g>
<title>char[] (6,284 samples, 1.21%)</title><rect x="970.8" y="579.0" width="14.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="973.8" y="590.0"></text>
</g>
<g>
<title>char[] (2,006 samples, 0.39%)</title><rect x="985.0" y="579.0" width="4.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="988.0" y="590.0"></text>
</g>
<g>
<title>java.lang.String (2,348 samples, 0.45%)</title><rect x="989.6" y="579.0" width="5.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="992.6" y="590.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (7,009 samples, 1.35%)</title><rect x="994.9" y="579.0" width="15.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="997.9" y="590.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (7,009 samples, 1.35%)</title><rect x="994.9" y="563.0" width="15.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="997.9" y="574.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (7,009 samples, 1.35%)</title><rect x="994.9" y="547.0" width="15.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="997.9" y="558.0"></text>
</g>
<g>
<title>byte[] (6,545 samples, 1.26%)</title><rect x="994.9" y="531.0" width="14.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="997.9" y="542.0"></text>
</g>
<g>
<title>byte[] (464 samples, 0.09%)</title><rect x="1009.7" y="531.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1012.7" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (584 samples, 0.11%)</title><rect x="1010.8" y="627.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1013.8" y="638.0"></text>
</g>
<g>
<title>byte[] (584 samples, 0.11%)</title><rect x="1010.8" y="611.0" width="1.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1013.8" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1,982 samples, 0.38%)</title><rect x="1012.1" y="627.0" width="4.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1015.1" y="638.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,982 samples, 0.38%)</title><rect x="1012.1" y="611.0" width="4.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1015.1" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,982 samples, 0.38%)</title><rect x="1012.1" y="595.0" width="4.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1015.1" y="606.0"></text>
</g>
<g>
<title>java.lang.String (830 samples, 0.16%)</title><rect x="1012.1" y="579.0" width="1.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1015.1" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,152 samples, 0.22%)</title><rect x="1014.0" y="579.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1017.0" y="590.0"></text>
</g>
<g>
<title>byte[] (1,152 samples, 0.22%)</title><rect x="1014.0" y="563.0" width="2.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1017.0" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (76,453 samples, 14.68%)</title><rect x="1016.6" y="627.0" width="173.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1019.6" y="638.0">one/nio/util/Utf8.read</text>
</g>
<g>
<title>one/nio/util/Utf8.read (76,453 samples, 14.68%)</title><rect x="1016.6" y="611.0" width="173.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1019.6" y="622.0">one/nio/util/Utf8.read</text>
</g>
<g>
<title>char[] (27,889 samples, 5.36%)</title><rect x="1016.6" y="595.0" width="63.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1019.6" y="606.0">char[]</text>
</g>
<g>
<title>char[] (14,499 samples, 2.78%)</title><rect x="1079.8" y="595.0" width="32.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1082.8" y="606.0">ch..</text>
</g>
<g>
<title>java.lang.String (10,656 samples, 2.05%)</title><rect x="1112.6" y="595.0" width="24.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1115.6" y="606.0">j..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (23,409 samples, 4.50%)</title><rect x="1136.8" y="595.0" width="53.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1139.8" y="606.0">java/..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (23,409 samples, 4.50%)</title><rect x="1136.8" y="579.0" width="53.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1139.8" y="590.0">java/..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (23,409 samples, 4.50%)</title><rect x="1136.8" y="563.0" width="53.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1139.8" y="574.0">java/..</text>
</g>
<g>
<title>byte[] (22,114 samples, 4.25%)</title><rect x="1136.8" y="547.0" width="50.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1139.8" y="558.0">byte[]</text>
</g>
<g>
<title>byte[] (1,295 samples, 0.25%)</title><rect x="1186.9" y="547.0" width="2.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1189.9" y="558.0"></text>
</g>
</g>
</svg>
