<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1062" onload="init(evt)" viewBox="0 0 1200 1062" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1045"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1045"> </text>
<g id="frames">
<g>
<title>all (5,840 samples, 100.00%)</title><rect x="10.0" y="1011.0" width="1180.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="13.0" y="1022.0">all</text>
</g>
<g>
<title>InstanceKlass::klass_holder() const (3 samples, 0.05%)</title><rect x="10.6" y="995.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="13.6" y="1006.0"></text>
</g>
<g>
<title>Klass::class_loader() const (3 samples, 0.05%)</title><rect x="11.4" y="995.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="14.4" y="1006.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (9 samples, 0.15%)</title><rect x="12.0" y="995.0" width="1.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="15.0" y="1006.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (5 samples, 0.09%)</title><rect x="12.2" y="979.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="15.2" y="990.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (4 samples, 0.07%)</title><rect x="12.2" y="963.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="15.2" y="974.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (4 samples, 0.07%)</title><rect x="12.2" y="947.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="15.2" y="958.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (2 samples, 0.03%)</title><rect x="12.4" y="931.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="15.4" y="942.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (3 samples, 0.05%)</title><rect x="13.2" y="979.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="16.2" y="990.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (3 samples, 0.05%)</title><rect x="13.2" y="963.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="16.2" y="974.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (3 samples, 0.05%)</title><rect x="13.2" y="947.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="16.2" y="958.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (7 samples, 0.12%)</title><rect x="13.8" y="995.0" width="1.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="16.8" y="1006.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (6 samples, 0.10%)</title><rect x="14.0" y="979.0" width="1.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="17.0" y="990.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (6 samples, 0.10%)</title><rect x="14.0" y="963.0" width="1.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="17.0" y="974.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (5 samples, 0.09%)</title><rect x="14.0" y="947.0" width="1.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="17.0" y="958.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (2 samples, 0.03%)</title><rect x="14.2" y="931.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="17.2" y="942.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (2 samples, 0.03%)</title><rect x="14.6" y="931.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="17.6" y="942.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (38 samples, 0.65%)</title><rect x="15.3" y="995.0" width="7.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="18.3" y="1006.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (35 samples, 0.60%)</title><rect x="15.3" y="979.0" width="7.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="18.3" y="990.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (32 samples, 0.55%)</title><rect x="15.9" y="963.0" width="6.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="18.9" y="974.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (29 samples, 0.50%)</title><rect x="16.1" y="947.0" width="5.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="19.1" y="958.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_in_new_tlab(Klass*, HeapWord*, unsigned long, unsigned long, Thread*) (2 samples, 0.03%)</title><rect x="16.5" y="931.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="19.5" y="942.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (19 samples, 0.33%)</title><rect x="16.9" y="931.0" width="3.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="19.9" y="942.0"></text>
</g>
<g>
<title>G1Allocator::unsafe_max_tlab_alloc() (4 samples, 0.07%)</title><rect x="17.3" y="915.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="20.3" y="926.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (6 samples, 0.10%)</title><rect x="18.1" y="915.0" width="1.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="21.1" y="926.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (6 samples, 0.10%)</title><rect x="18.1" y="899.0" width="1.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="21.1" y="910.0"></text>
</g>
<g>
<title>G1AllocRegion::new_alloc_region_and_allocate(unsigned long, bool) (3 samples, 0.05%)</title><rect x="18.3" y="883.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="21.3" y="894.0"></text>
</g>
<g>
<title>G1CollectedHeap::new_mutator_alloc_region(unsigned long, bool) (2 samples, 0.03%)</title><rect x="18.3" y="867.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="21.3" y="878.0"></text>
</g>
<g>
<title>MutatorAllocRegion::retire(bool) (2 samples, 0.03%)</title><rect x="18.9" y="883.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="21.9" y="894.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (4 samples, 0.07%)</title><rect x="19.3" y="915.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="22.3" y="926.0"></text>
</g>
<g>
<title>CollectedHeap::fill_with_dummy_object(HeapWord*, HeapWord*, bool) (4 samples, 0.07%)</title><rect x="19.3" y="899.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="22.3" y="910.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (2 samples, 0.03%)</title><rect x="19.7" y="883.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="22.7" y="894.0"></text>
</g>
<g>
<title>__memset_avx2_unaligned_erms (2 samples, 0.03%)</title><rect x="20.3" y="915.0" width="0.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="23.3" y="926.0"></text>
</g>
<g>
<title>ThreadHeapSampler::enabled() (3 samples, 0.05%)</title><rect x="20.7" y="931.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="23.7" y="942.0"></text>
</g>
<g>
<title>__memset_avx2_unaligned_erms (3 samples, 0.05%)</title><rect x="21.3" y="931.0" width="0.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="24.3" y="942.0"></text>
</g>
<g>
<title>Klass::class_loader() const (3 samples, 0.05%)</title><rect x="22.3" y="979.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="25.3" y="990.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (167 samples, 2.86%)</title><rect x="23.1" y="995.0" width="33.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="26.1" y="1006.0">Sh..</text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (166 samples, 2.84%)</title><rect x="23.3" y="979.0" width="33.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="26.3" y="990.0">Ob..</text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (118 samples, 2.02%)</title><rect x="24.3" y="963.0" width="23.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="27.3" y="974.0">O..</text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.75] (98 samples, 1.68%)</title><rect x="24.5" y="947.0" width="19.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="27.5" y="958.0"></text>
</g>
<g>
<title>SpinPause (19 samples, 0.33%)</title><rect x="44.3" y="947.0" width="3.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="47.3" y="958.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.97] (42 samples, 0.72%)</title><rect x="48.2" y="963.0" width="8.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="51.2" y="974.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (39 samples, 0.67%)</title><rect x="48.6" y="947.0" width="7.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="51.6" y="958.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.75] (27 samples, 0.46%)</title><rect x="48.6" y="931.0" width="5.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="51.6" y="942.0"></text>
</g>
<g>
<title>SpinPause (9 samples, 0.15%)</title><rect x="54.0" y="931.0" width="1.9" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="57.0" y="942.0"></text>
</g>
<g>
<title>__lll_unlock_wake (2 samples, 0.03%)</title><rect x="55.9" y="931.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="58.9" y="942.0"></text>
</g>
<g>
<title>[not_walkable] (20 samples, 0.34%)</title><rect x="57.1" y="995.0" width="4.0" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="60.1" y="1006.0"></text>
</g>
<g>
<title>[not_walkable_Java] (20 samples, 0.34%)</title><rect x="61.1" y="995.0" width="4.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="64.1" y="1006.0"></text>
</g>
<g>
<title>G1BarrierSetRuntime::write_ref_array_post_entry(HeapWord*, unsigned long) (5 samples, 0.09%)</title><rect x="61.1" y="979.0" width="1.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="64.1" y="990.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (8 samples, 0.14%)</title><rect x="62.3" y="979.0" width="1.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="65.3" y="990.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (7 samples, 0.12%)</title><rect x="62.5" y="963.0" width="1.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="65.5" y="974.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (3 samples, 0.05%)</title><rect x="62.5" y="947.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="65.5" y="958.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (2 samples, 0.03%)</title><rect x="62.7" y="931.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="65.7" y="942.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (4 samples, 0.07%)</title><rect x="63.1" y="947.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="66.1" y="958.0"></text>
</g>
<g>
<title>OopMapSet::update_register_map(frame const*, RegisterMap*) (2 samples, 0.03%)</title><rect x="63.3" y="931.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="66.3" y="942.0"></text>
</g>
<g>
<title>__GI___clock_gettime (5 samples, 0.09%)</title><rect x="64.2" y="979.0" width="1.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="67.2" y="990.0"></text>
</g>
<g>
<title>[vdso] (5 samples, 0.09%)</title><rect x="64.2" y="963.0" width="1.0" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="67.2" y="974.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.21%)</title><rect x="65.2" y="995.0" width="2.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="68.2" y="1006.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (4 samples, 0.07%)</title><rect x="65.2" y="979.0" width="0.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="68.2" y="990.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.07%)</title><rect x="65.2" y="963.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="68.2" y="974.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.07%)</title><rect x="65.2" y="947.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="68.2" y="958.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.07%)</title><rect x="65.2" y="931.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="68.2" y="942.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.07%)</title><rect x="65.2" y="915.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="68.2" y="926.0"></text>
</g>
<g>
<title>futex_wait (3 samples, 0.05%)</title><rect x="65.4" y="899.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="68.4" y="910.0"></text>
</g>
<g>
<title>__pthread_cond_wait (2 samples, 0.03%)</title><rect x="66.0" y="979.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="69.0" y="990.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="66.0" y="963.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="69.0" y="974.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="66.0" y="947.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="69.0" y="958.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.03%)</title><rect x="66.0" y="931.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="69.0" y="942.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.03%)</title><rect x="66.0" y="915.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="69.0" y="926.0"></text>
</g>
<g>
<title>futex_wait (2 samples, 0.03%)</title><rect x="66.0" y="899.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="69.0" y="910.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.03%)</title><rect x="66.4" y="979.0" width="0.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="69.4" y="990.0"></text>
</g>
<g>
<title>_dl_update_slotinfo (3 samples, 0.05%)</title><rect x="66.8" y="979.0" width="0.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="69.8" y="990.0"></text>
</g>
<g>
<title>[unknown_Java] (149 samples, 2.55%)</title><rect x="67.6" y="995.0" width="30.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="70.6" y="1006.0">[u..</text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="96.1" y="979.0" width="0.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="99.1" y="990.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (2 samples, 0.03%)</title><rect x="96.1" y="963.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="99.1" y="974.0"></text>
</g>
<g>
<title>__pthread_cond_signal (4 samples, 0.07%)</title><rect x="96.5" y="979.0" width="0.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="99.5" y="990.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.07%)</title><rect x="96.5" y="963.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="99.5" y="974.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.07%)</title><rect x="96.5" y="947.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="99.5" y="958.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.07%)</title><rect x="96.5" y="931.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="99.5" y="942.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.07%)</title><rect x="96.5" y="915.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="99.5" y="926.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 0.07%)</title><rect x="96.5" y="899.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="99.5" y="910.0"></text>
</g>
<g>
<title>wake_up_q (3 samples, 0.05%)</title><rect x="96.7" y="883.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="99.7" y="894.0"></text>
</g>
<g>
<title>try_to_wake_up (3 samples, 0.05%)</title><rect x="96.7" y="867.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="99.7" y="878.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.05%)</title><rect x="96.7" y="851.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="99.7" y="862.0"></text>
</g>
<g>
<title>__pthread_cond_signal (3 samples, 0.05%)</title><rect x="97.7" y="995.0" width="0.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="100.7" y="1006.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="97.9" y="979.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="100.9" y="990.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="97.9" y="963.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="100.9" y="974.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.03%)</title><rect x="97.9" y="947.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="100.9" y="958.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.03%)</title><rect x="97.9" y="931.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="100.9" y="942.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.03%)</title><rect x="97.9" y="915.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="100.9" y="926.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.03%)</title><rect x="97.9" y="899.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="100.9" y="910.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.03%)</title><rect x="97.9" y="883.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="100.9" y="894.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.03%)</title><rect x="97.9" y="867.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="100.9" y="878.0"></text>
</g>
<g>
<title>_dl_update_slotinfo (3 samples, 0.05%)</title><rect x="98.3" y="995.0" width="0.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="101.3" y="1006.0"></text>
</g>
<g>
<title>java/lang/Thread.run (1,660 samples, 28.42%)</title><rect x="98.9" y="995.0" width="335.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="101.9" y="1006.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,660 samples, 28.42%)</title><rect x="98.9" y="979.0" width="335.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="101.9" y="990.0">java/util/concurrent/ThreadPoolExecutor$Worke..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,660 samples, 28.42%)</title><rect x="98.9" y="963.0" width="335.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="101.9" y="974.0">java/util/concurrent/ThreadPoolExecutor.runWo..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (449 samples, 7.69%)</title><rect x="99.9" y="947.0" width="90.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="102.9" y="958.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (448 samples, 7.67%)</title><rect x="100.1" y="931.0" width="90.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="103.1" y="942.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (446 samples, 7.64%)</title><rect x="100.3" y="915.0" width="90.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="103.3" y="926.0">java/util/..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$133/1711595431.apply (445 samples, 7.62%)</title><rect x="100.5" y="899.0" width="89.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="103.5" y="910.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (444 samples, 7.60%)</title><rect x="100.5" y="883.0" width="89.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="103.5" y="894.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (444 samples, 7.60%)</title><rect x="100.5" y="867.0" width="89.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="103.5" y="878.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (429 samples, 7.35%)</title><rect x="101.5" y="851.0" width="86.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="104.5" y="862.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (429 samples, 7.35%)</title><rect x="101.5" y="835.0" width="86.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="104.5" y="846.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (429 samples, 7.35%)</title><rect x="101.5" y="819.0" width="86.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="104.5" y="830.0">jdk/intern..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (147 samples, 2.52%)</title><rect x="101.7" y="803.0" width="29.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="104.7" y="814.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (147 samples, 2.52%)</title><rect x="101.7" y="787.0" width="29.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="104.7" y="798.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (147 samples, 2.52%)</title><rect x="101.7" y="771.0" width="29.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="104.7" y="782.0">ja..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$174/1093022843.apply (146 samples, 2.50%)</title><rect x="101.9" y="755.0" width="29.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="104.9" y="766.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (146 samples, 2.50%)</title><rect x="101.9" y="739.0" width="29.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="104.9" y="750.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (146 samples, 2.50%)</title><rect x="101.9" y="723.0" width="29.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="104.9" y="734.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$139/1035318298.apply (146 samples, 2.50%)</title><rect x="101.9" y="707.0" width="29.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="104.9" y="718.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (145 samples, 2.48%)</title><rect x="102.1" y="691.0" width="29.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="105.1" y="702.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (144 samples, 2.47%)</title><rect x="102.3" y="675.0" width="29.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="105.3" y="686.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (124 samples, 2.12%)</title><rect x="102.3" y="659.0" width="25.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="105.3" y="670.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (123 samples, 2.11%)</title><rect x="102.3" y="643.0" width="24.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="105.3" y="654.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (4 samples, 0.07%)</title><rect x="102.7" y="627.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="105.7" y="638.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.03%)</title><rect x="102.9" y="611.0" width="0.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="105.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$189/1784125001.apply (117 samples, 2.00%)</title><rect x="103.6" y="627.0" width="23.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="106.6" y="638.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (117 samples, 2.00%)</title><rect x="103.6" y="611.0" width="23.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="106.6" y="622.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (2 samples, 0.03%)</title><rect x="104.0" y="595.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="107.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (2 samples, 0.03%)</title><rect x="104.0" y="579.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="107.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.03%)</title><rect x="104.0" y="563.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="107.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.03%)</title><rect x="104.0" y="547.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="107.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (2 samples, 0.03%)</title><rect x="104.0" y="531.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="107.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (2 samples, 0.03%)</title><rect x="104.0" y="515.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="107.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (36 samples, 0.62%)</title><rect x="104.4" y="595.0" width="7.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="107.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (36 samples, 0.62%)</title><rect x="104.4" y="579.0" width="7.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="107.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (6 samples, 0.10%)</title><rect x="104.4" y="563.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="107.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (6 samples, 0.10%)</title><rect x="104.4" y="547.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="107.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (6 samples, 0.10%)</title><rect x="104.4" y="531.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="107.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (5 samples, 0.09%)</title><rect x="104.4" y="515.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="107.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (5 samples, 0.09%)</title><rect x="104.4" y="499.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="107.4" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (5 samples, 0.09%)</title><rect x="104.4" y="483.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="107.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (30 samples, 0.51%)</title><rect x="105.6" y="563.0" width="6.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="108.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (30 samples, 0.51%)</title><rect x="105.6" y="547.0" width="6.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="108.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (28 samples, 0.48%)</title><rect x="105.8" y="531.0" width="5.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="108.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (27 samples, 0.46%)</title><rect x="105.8" y="515.0" width="5.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="108.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (27 samples, 0.46%)</title><rect x="105.8" y="499.0" width="5.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="108.8" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (26 samples, 0.45%)</title><rect x="106.0" y="483.0" width="5.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="109.0" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (25 samples, 0.43%)</title><rect x="106.2" y="467.0" width="5.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="109.2" y="478.0"></text>
</g>
<g>
<title>__libc_write (24 samples, 0.41%)</title><rect x="106.4" y="451.0" width="4.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="109.4" y="462.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (22 samples, 0.38%)</title><rect x="106.8" y="435.0" width="4.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="109.8" y="446.0"></text>
</g>
<g>
<title>do_syscall_64 (22 samples, 0.38%)</title><rect x="106.8" y="419.0" width="4.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="109.8" y="430.0"></text>
</g>
<g>
<title>ksys_write (22 samples, 0.38%)</title><rect x="106.8" y="403.0" width="4.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="109.8" y="414.0"></text>
</g>
<g>
<title>vfs_write (21 samples, 0.36%)</title><rect x="107.0" y="387.0" width="4.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="110.0" y="398.0"></text>
</g>
<g>
<title>new_sync_write (17 samples, 0.29%)</title><rect x="107.2" y="371.0" width="3.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="110.2" y="382.0"></text>
</g>
<g>
<title>pipe_write (17 samples, 0.29%)</title><rect x="107.2" y="355.0" width="3.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="110.2" y="366.0"></text>
</g>
<g>
<title>__wake_up_common_lock (10 samples, 0.17%)</title><rect x="107.6" y="339.0" width="2.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="110.6" y="350.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (10 samples, 0.17%)</title><rect x="107.6" y="323.0" width="2.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="110.6" y="334.0"></text>
</g>
<g>
<title>file_update_time (2 samples, 0.03%)</title><rect x="109.8" y="339.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="112.8" y="350.0"></text>
</g>
<g>
<title>security_file_permission (3 samples, 0.05%)</title><rect x="110.6" y="371.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="113.6" y="382.0"></text>
</g>
<g>
<title>selinux_file_permission (3 samples, 0.05%)</title><rect x="110.6" y="355.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="113.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (77 samples, 1.32%)</title><rect x="111.6" y="595.0" width="15.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="114.6" y="606.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (3 samples, 0.05%)</title><rect x="112.0" y="579.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="115.0" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.isLatin1 (2 samples, 0.03%)</title><rect x="112.2" y="563.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="115.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (55 samples, 0.94%)</title><rect x="112.6" y="579.0" width="11.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="115.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectCookies (3 samples, 0.05%)</title><rect x="112.8" y="563.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="115.8" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (3 samples, 0.05%)</title><rect x="112.8" y="547.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="115.8" y="558.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (3 samples, 0.05%)</title><rect x="112.8" y="531.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="115.8" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (3 samples, 0.05%)</title><rect x="112.8" y="515.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="115.8" y="526.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (3 samples, 0.05%)</title><rect x="112.8" y="499.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="115.8" y="510.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (3 samples, 0.05%)</title><rect x="112.8" y="483.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="115.8" y="494.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (3 samples, 0.05%)</title><rect x="112.8" y="467.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="115.8" y="478.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.03%)</title><rect x="113.0" y="451.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="116.0" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (2 samples, 0.03%)</title><rect x="113.0" y="435.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="116.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (23 samples, 0.39%)</title><rect x="113.5" y="563.0" width="4.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="116.5" y="574.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (4 samples, 0.07%)</title><rect x="114.9" y="547.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="117.9" y="558.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (4 samples, 0.07%)</title><rect x="114.9" y="531.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="117.9" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntryIterator.next (4 samples, 0.07%)</title><rect x="114.9" y="515.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="117.9" y="526.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntryIterator.next (4 samples, 0.07%)</title><rect x="114.9" y="499.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="117.9" y="510.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.nextEntry (4 samples, 0.07%)</title><rect x="114.9" y="483.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="117.9" y="494.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (4 samples, 0.07%)</title><rect x="114.9" y="467.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="117.9" y="478.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$203/1479694379.test (9 samples, 0.15%)</title><rect x="115.9" y="547.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="118.9" y="558.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (8 samples, 0.14%)</title><rect x="116.1" y="531.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="119.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$77/1464555023.test (5 samples, 0.09%)</title><rect x="116.7" y="515.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="119.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (5 samples, 0.09%)</title><rect x="116.7" y="499.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="119.7" y="510.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$66/254801937.test (5 samples, 0.09%)</title><rect x="116.7" y="483.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="119.7" y="494.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (5 samples, 0.09%)</title><rect x="116.7" y="467.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="119.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$65/270056930.test (5 samples, 0.09%)</title><rect x="116.7" y="451.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="119.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (5 samples, 0.09%)</title><rect x="116.7" y="435.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="119.7" y="446.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (5 samples, 0.09%)</title><rect x="116.7" y="419.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="119.7" y="430.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (5 samples, 0.09%)</title><rect x="116.7" y="403.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="119.7" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (5 samples, 0.09%)</title><rect x="116.7" y="387.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="119.7" y="398.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (4 samples, 0.07%)</title><rect x="116.9" y="371.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="119.9" y="382.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (4 samples, 0.07%)</title><rect x="116.9" y="355.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="119.9" y="366.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.03%)</title><rect x="117.7" y="547.0" width="0.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="120.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (27 samples, 0.46%)</title><rect x="118.3" y="563.0" width="5.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="121.3" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (27 samples, 0.46%)</title><rect x="118.3" y="547.0" width="5.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="121.3" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (27 samples, 0.46%)</title><rect x="118.3" y="531.0" width="5.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="121.3" y="542.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.05%)</title><rect x="118.5" y="515.0" width="0.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="121.5" y="526.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (23 samples, 0.39%)</title><rect x="119.1" y="515.0" width="4.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="122.1" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$126/1936481830.accept (17 samples, 0.29%)</title><rect x="120.1" y="499.0" width="3.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="123.1" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (17 samples, 0.29%)</title><rect x="120.1" y="483.0" width="3.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="123.1" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (5 samples, 0.09%)</title><rect x="120.9" y="467.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="123.9" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$128/2001978515.accept (4 samples, 0.07%)</title><rect x="121.1" y="451.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="124.1" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (4 samples, 0.07%)</title><rect x="121.1" y="435.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="124.1" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (4 samples, 0.07%)</title><rect x="121.1" y="419.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="124.1" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (4 samples, 0.07%)</title><rect x="121.1" y="403.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="124.1" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (4 samples, 0.07%)</title><rect x="121.1" y="387.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="124.1" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (4 samples, 0.07%)</title><rect x="121.1" y="371.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="124.1" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (4 samples, 0.07%)</title><rect x="121.1" y="355.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="124.1" y="366.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.05%)</title><rect x="121.3" y="339.0" width="0.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="124.3" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (7 samples, 0.12%)</title><rect x="121.9" y="467.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="124.9" y="478.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (4 samples, 0.07%)</title><rect x="122.5" y="451.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="125.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (2 samples, 0.03%)</title><rect x="123.8" y="579.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="126.8" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="123.8" y="563.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="126.8" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (2 samples, 0.03%)</title><rect x="123.8" y="547.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="126.8" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/667821226.invoke (2 samples, 0.03%)</title><rect x="123.8" y="531.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="126.8" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="123.8" y="515.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="126.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (5 samples, 0.09%)</title><rect x="124.2" y="579.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="127.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (5 samples, 0.09%)</title><rect x="124.2" y="563.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="127.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.encode (5 samples, 0.09%)</title><rect x="124.2" y="547.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="127.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (10 samples, 0.17%)</title><rect x="125.2" y="579.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="128.2" y="590.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (8 samples, 0.14%)</title><rect x="125.6" y="563.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="128.6" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (2 samples, 0.03%)</title><rect x="126.4" y="547.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="129.4" y="558.0"></text>
</g>
<g>
<title>java/util/TreeMap.rotateRight (2 samples, 0.03%)</title><rect x="126.8" y="547.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="129.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (16 samples, 0.27%)</title><rect x="127.4" y="659.0" width="3.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="130.4" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.05%)</title><rect x="127.6" y="643.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="130.6" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.05%)</title><rect x="127.6" y="627.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="130.6" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.internalMemberName (2 samples, 0.03%)</title><rect x="127.6" y="611.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="130.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (11 samples, 0.19%)</title><rect x="128.2" y="643.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="131.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (11 samples, 0.19%)</title><rect x="128.2" y="627.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="131.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (11 samples, 0.19%)</title><rect x="128.2" y="611.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="131.2" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (11 samples, 0.19%)</title><rect x="128.2" y="595.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="131.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (11 samples, 0.19%)</title><rect x="128.2" y="579.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="131.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (8 samples, 0.14%)</title><rect x="128.2" y="563.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="131.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$166/1615159449.run (8 samples, 0.14%)</title><rect x="128.2" y="547.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="131.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (7 samples, 0.12%)</title><rect x="128.4" y="531.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="131.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (3 samples, 0.05%)</title><rect x="128.8" y="515.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="131.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (2 samples, 0.03%)</title><rect x="129.4" y="515.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="132.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (2 samples, 0.03%)</title><rect x="129.4" y="499.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="132.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (3 samples, 0.05%)</title><rect x="129.8" y="563.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="132.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (3 samples, 0.05%)</title><rect x="129.8" y="547.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="132.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (3 samples, 0.05%)</title><rect x="129.8" y="531.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="132.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$166/1615159449.run (3 samples, 0.05%)</title><rect x="129.8" y="515.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="132.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection.connectAsync (4 samples, 0.07%)</title><rect x="130.6" y="659.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="133.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (3 samples, 0.05%)</title><rect x="130.6" y="643.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="133.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (3 samples, 0.05%)</title><rect x="130.6" y="627.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="133.6" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.03%)</title><rect x="130.8" y="611.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="133.8" y="622.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.03%)</title><rect x="130.8" y="595.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="133.8" y="606.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.03%)</title><rect x="130.8" y="579.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="133.8" y="590.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.03%)</title><rect x="130.8" y="563.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="133.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (279 samples, 4.78%)</title><rect x="131.6" y="803.0" width="56.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="134.6" y="814.0">jdk/in..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2 samples, 0.03%)</title><rect x="132.0" y="787.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="135.0" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2 samples, 0.03%)</title><rect x="132.0" y="771.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="135.0" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (3 samples, 0.05%)</title><rect x="132.4" y="787.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="135.4" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (3 samples, 0.05%)</title><rect x="132.4" y="771.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="135.4" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (2 samples, 0.03%)</title><rect x="132.6" y="755.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="135.6" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (272 samples, 4.66%)</title><rect x="133.1" y="787.0" width="54.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="136.1" y="798.0">jdk/i..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (267 samples, 4.57%)</title><rect x="133.1" y="771.0" width="53.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="136.1" y="782.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (267 samples, 4.57%)</title><rect x="133.1" y="755.0" width="53.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="136.1" y="766.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (266 samples, 4.55%)</title><rect x="133.3" y="739.0" width="53.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="136.3" y="750.0">java/..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$144/821458659.apply (266 samples, 4.55%)</title><rect x="133.3" y="723.0" width="53.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="136.3" y="734.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$get$0 (266 samples, 4.55%)</title><rect x="133.3" y="707.0" width="53.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="136.3" y="718.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createExchangeImpl (266 samples, 4.55%)</title><rect x="133.3" y="691.0" width="53.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="136.3" y="702.0">jdk/i..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (62 samples, 1.06%)</title><rect x="133.3" y="675.0" width="12.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="136.3" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (62 samples, 1.06%)</title><rect x="133.3" y="659.0" width="12.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="136.3" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (62 samples, 1.06%)</title><rect x="133.3" y="643.0" width="12.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="136.3" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$168/346584917.apply (62 samples, 1.06%)</title><rect x="133.3" y="627.0" width="12.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="136.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$1 (62 samples, 1.06%)</title><rect x="133.3" y="611.0" width="12.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="136.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (62 samples, 1.06%)</title><rect x="133.3" y="595.0" width="12.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="136.3" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (62 samples, 1.06%)</title><rect x="133.3" y="579.0" width="12.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="136.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getSettingsString (53 samples, 0.91%)</title><rect x="133.3" y="563.0" width="10.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="136.3" y="574.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encodeToString (2 samples, 0.03%)</title><rect x="133.3" y="547.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="136.3" y="558.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encode (2 samples, 0.03%)</title><rect x="133.3" y="531.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="136.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getClientSettings (46 samples, 0.79%)</title><rect x="133.7" y="547.0" width="9.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="136.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getParameter (46 samples, 0.79%)</title><rect x="133.7" y="531.0" width="9.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="136.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getIntegerNetProperty (46 samples, 0.79%)</title><rect x="133.7" y="515.0" width="9.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="136.7" y="526.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (43 samples, 0.74%)</title><rect x="134.3" y="499.0" width="8.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="137.3" y="510.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (28 samples, 0.48%)</title><rect x="134.7" y="483.0" width="5.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="137.7" y="494.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (5 samples, 0.09%)</title><rect x="135.3" y="467.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="138.3" y="478.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.269] (4 samples, 0.07%)</title><rect x="135.5" y="451.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="138.5" y="462.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (7 samples, 0.12%)</title><rect x="136.3" y="467.0" width="1.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="139.3" y="478.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (3 samples, 0.05%)</title><rect x="136.7" y="451.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="139.7" y="462.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (11 samples, 0.19%)</title><rect x="138.1" y="467.0" width="2.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="141.1" y="478.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (3 samples, 0.05%)</title><rect x="138.7" y="451.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="141.7" y="462.0"></text>
</g>
<g>
<title>Klass::is_subclass_of(Klass const*) const (3 samples, 0.05%)</title><rect x="138.7" y="435.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="141.7" y="446.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (4 samples, 0.07%)</title><rect x="139.5" y="451.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="142.5" y="462.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (3 samples, 0.05%)</title><rect x="139.7" y="435.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="142.7" y="446.0"></text>
</g>
<g>
<title>JavaCalls::call(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (2 samples, 0.03%)</title><rect x="140.3" y="483.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="143.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$61/1212772528.run (9 samples, 0.15%)</title><rect x="140.9" y="483.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="143.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$getIntegerNetProperty$11 (8 samples, 0.14%)</title><rect x="141.1" y="467.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="144.1" y="478.0"></text>
</g>
<g>
<title>sun/net/NetProperties.getInteger (8 samples, 0.14%)</title><rect x="141.1" y="451.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="144.1" y="462.0"></text>
</g>
<g>
<title>java/lang/System.getProperty (6 samples, 0.10%)</title><rect x="141.1" y="435.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="144.1" y="446.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (6 samples, 0.10%)</title><rect x="141.1" y="419.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="144.1" y="430.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (6 samples, 0.10%)</title><rect x="141.1" y="403.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="144.1" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (6 samples, 0.10%)</title><rect x="141.1" y="387.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="144.1" y="398.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.03%)</title><rect x="141.9" y="371.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="144.9" y="382.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (2 samples, 0.03%)</title><rect x="141.9" y="355.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="144.9" y="366.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (2 samples, 0.03%)</title><rect x="142.3" y="435.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="145.3" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (2 samples, 0.03%)</title><rect x="142.3" y="419.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="145.3" y="430.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.03%)</title><rect x="142.3" y="403.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="145.3" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (2 samples, 0.03%)</title><rect x="142.3" y="387.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="145.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.toByteArray (5 samples, 0.09%)</title><rect x="143.0" y="547.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="146.0" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.03%)</title><rect x="143.0" y="531.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="146.0" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.03%)</title><rect x="143.0" y="515.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="146.0" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="143.0" y="499.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="146.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.toByteBuffer (3 samples, 0.05%)</title><rect x="143.4" y="531.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="146.4" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.putShort (3 samples, 0.05%)</title><rect x="143.4" y="515.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="146.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.putShortUnaligned (3 samples, 0.05%)</title><rect x="143.4" y="499.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="146.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (9 samples, 0.15%)</title><rect x="144.0" y="563.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="147.0" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.03%)</title><rect x="144.2" y="547.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="147.2" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.03%)</title><rect x="144.2" y="531.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="147.2" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.03%)</title><rect x="144.2" y="515.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="147.2" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.03%)</title><rect x="144.2" y="499.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="147.2" y="510.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (6 samples, 0.10%)</title><rect x="144.6" y="547.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="147.6" y="558.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.03%)</title><rect x="144.6" y="531.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="147.6" y="542.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.03%)</title><rect x="144.6" y="515.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="147.6" y="526.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (2 samples, 0.03%)</title><rect x="144.6" y="499.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="147.6" y="510.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (4 samples, 0.07%)</title><rect x="145.0" y="531.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="148.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (204 samples, 3.49%)</title><rect x="145.8" y="675.0" width="41.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="148.8" y="686.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (204 samples, 3.49%)</title><rect x="145.8" y="659.0" width="41.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="148.8" y="670.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (3 samples, 0.05%)</title><rect x="146.0" y="643.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="149.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (147 samples, 2.52%)</title><rect x="146.6" y="643.0" width="29.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="149.6" y="654.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (147 samples, 2.52%)</title><rect x="146.6" y="627.0" width="29.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="149.6" y="638.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (144 samples, 2.47%)</title><rect x="147.2" y="611.0" width="29.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="150.2" y="622.0">jd..</text>
</g>
<g>
<title>java/util/HashMap.get (4 samples, 0.07%)</title><rect x="147.4" y="595.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="150.4" y="606.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.03%)</title><rect x="147.4" y="579.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="150.4" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 0.03%)</title><rect x="147.8" y="579.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="150.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (2 samples, 0.03%)</title><rect x="147.8" y="563.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="150.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.remove (139 samples, 2.38%)</title><rect x="148.2" y="595.0" width="28.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="151.2" y="606.0">jd..</text>
</g>
<g>
<title>java/util/AbstractList.listIterator (139 samples, 2.38%)</title><rect x="148.2" y="579.0" width="28.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="151.2" y="590.0">ja..</text>
</g>
<g>
<title>java/util/LinkedList.listIterator (139 samples, 2.38%)</title><rect x="148.2" y="563.0" width="28.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="151.2" y="574.0">ja..</text>
</g>
<g>
<title>java/util/LinkedList$ListItr.&lt;init&gt; (139 samples, 2.38%)</title><rect x="148.2" y="547.0" width="28.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="151.2" y="558.0">ja..</text>
</g>
<g>
<title>java/util/LinkedList.node (139 samples, 2.38%)</title><rect x="148.2" y="531.0" width="28.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="151.2" y="542.0">ja..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (53 samples, 0.91%)</title><rect x="176.3" y="643.0" width="10.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="179.3" y="654.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (49 samples, 0.84%)</title><rect x="177.1" y="627.0" width="9.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="180.1" y="638.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.03%)</title><rect x="177.5" y="611.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="180.5" y="622.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (31 samples, 0.53%)</title><rect x="178.1" y="611.0" width="6.3" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="181.1" y="622.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (10 samples, 0.17%)</title><rect x="179.3" y="595.0" width="2.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="182.3" y="606.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (2 samples, 0.03%)</title><rect x="180.1" y="579.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="183.1" y="590.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (2 samples, 0.03%)</title><rect x="180.7" y="579.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="183.7" y="590.0"></text>
</g>
<g>
<title>PcDescContainer::find_pc_desc_internal(unsigned char*, bool, PcDescSearch const&amp;) (3 samples, 0.05%)</title><rect x="181.7" y="595.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="184.7" y="606.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (2 samples, 0.03%)</title><rect x="182.6" y="595.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="185.6" y="606.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (2 samples, 0.03%)</title><rect x="182.6" y="579.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="185.6" y="590.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (7 samples, 0.12%)</title><rect x="183.0" y="595.0" width="1.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="186.0" y="606.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (4 samples, 0.07%)</title><rect x="183.4" y="579.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="186.4" y="590.0"></text>
</g>
<g>
<title>call_stub (2 samples, 0.03%)</title><rect x="184.6" y="611.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="187.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$147/2025473808.run (10 samples, 0.17%)</title><rect x="185.0" y="611.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="188.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (10 samples, 0.17%)</title><rect x="185.0" y="595.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="188.0" y="606.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (8 samples, 0.14%)</title><rect x="185.4" y="579.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="188.4" y="590.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (8 samples, 0.14%)</title><rect x="185.4" y="563.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="188.4" y="574.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (8 samples, 0.14%)</title><rect x="185.4" y="547.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="188.4" y="558.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (7 samples, 0.12%)</title><rect x="185.6" y="531.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="188.6" y="542.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (6 samples, 0.10%)</title><rect x="185.8" y="515.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="188.8" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (2 samples, 0.03%)</title><rect x="185.8" y="499.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="188.8" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListSet.iterator (4 samples, 0.07%)</title><rect x="186.2" y="499.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="189.2" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$KeySet.iterator (2 samples, 0.03%)</title><rect x="186.4" y="483.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="189.4" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$KeyIterator.&lt;init&gt; (2 samples, 0.03%)</title><rect x="186.4" y="467.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="189.4" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Iter.&lt;init&gt; (2 samples, 0.03%)</title><rect x="186.4" y="451.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="189.4" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Iter.advance (2 samples, 0.03%)</title><rect x="186.4" y="435.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="189.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getConnectionFor (4 samples, 0.07%)</title><rect x="187.2" y="771.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="190.2" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (2 samples, 0.03%)</title><rect x="187.4" y="755.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="190.4" y="766.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.03%)</title><rect x="187.4" y="739.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="190.4" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (2 samples, 0.03%)</title><rect x="187.4" y="723.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="190.4" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.requestFilters (9 samples, 0.15%)</title><rect x="188.4" y="851.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="191.4" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.request (7 samples, 0.12%)</title><rect x="188.8" y="835.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="191.8" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (5 samples, 0.09%)</title><rect x="189.2" y="819.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="192.2" y="830.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.get (3 samples, 0.05%)</title><rect x="189.6" y="803.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="192.6" y="814.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.getTable (3 samples, 0.05%)</title><rect x="189.6" y="787.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="192.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (10 samples, 0.17%)</title><rect x="190.6" y="947.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="193.6" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (10 samples, 0.17%)</title><rect x="190.6" y="931.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="193.6" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (10 samples, 0.17%)</title><rect x="190.6" y="915.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="193.6" y="926.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.03%)</title><rect x="191.2" y="899.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="194.2" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$205/1532762392.run (2 samples, 0.03%)</title><rect x="191.8" y="899.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="194.8" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (374 samples, 6.40%)</title><rect x="192.7" y="947.0" width="75.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="195.7" y="958.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (359 samples, 6.15%)</title><rect x="192.7" y="931.0" width="72.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="195.7" y="942.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (279 samples, 4.78%)</title><rect x="192.7" y="915.0" width="56.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="195.7" y="926.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (12 samples, 0.21%)</title><rect x="194.1" y="899.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="197.1" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (12 samples, 0.21%)</title><rect x="194.1" y="883.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="197.1" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (12 samples, 0.21%)</title><rect x="194.1" y="867.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="197.1" y="878.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.03%)</title><rect x="196.1" y="851.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="199.1" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (41 samples, 0.70%)</title><rect x="196.5" y="899.0" width="8.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="199.5" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (41 samples, 0.70%)</title><rect x="196.5" y="883.0" width="8.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="199.5" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (34 samples, 0.58%)</title><rect x="197.7" y="867.0" width="6.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="200.7" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (34 samples, 0.58%)</title><rect x="197.7" y="851.0" width="6.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="200.7" y="862.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (32 samples, 0.55%)</title><rect x="198.1" y="835.0" width="6.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="201.1" y="846.0"></text>
</g>
<g>
<title>Unsafe_Unpark (5 samples, 0.09%)</title><rect x="198.1" y="819.0" width="1.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="201.1" y="830.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (3 samples, 0.05%)</title><rect x="198.3" y="803.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="201.3" y="814.0"></text>
</g>
<g>
<title>__pthread_cond_signal (27 samples, 0.46%)</title><rect x="199.1" y="819.0" width="5.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="202.1" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (22 samples, 0.38%)</title><rect x="200.1" y="803.0" width="4.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="203.1" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (22 samples, 0.38%)</title><rect x="200.1" y="787.0" width="4.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="203.1" y="798.0"></text>
</g>
<g>
<title>__x64_sys_futex (21 samples, 0.36%)</title><rect x="200.3" y="771.0" width="4.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="203.3" y="782.0"></text>
</g>
<g>
<title>do_futex (21 samples, 0.36%)</title><rect x="200.3" y="755.0" width="4.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="203.3" y="766.0"></text>
</g>
<g>
<title>futex_wake (21 samples, 0.36%)</title><rect x="200.3" y="739.0" width="4.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="203.3" y="750.0"></text>
</g>
<g>
<title>wake_up_q (18 samples, 0.31%)</title><rect x="200.9" y="723.0" width="3.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="203.9" y="734.0"></text>
</g>
<g>
<title>try_to_wake_up (18 samples, 0.31%)</title><rect x="200.9" y="707.0" width="3.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="203.9" y="718.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (18 samples, 0.31%)</title><rect x="200.9" y="691.0" width="3.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="203.9" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (219 samples, 3.75%)</title><rect x="204.8" y="899.0" width="44.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="207.8" y="910.0">java..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (206 samples, 3.53%)</title><rect x="207.4" y="883.0" width="41.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="210.4" y="894.0">jdk..</text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 0.03%)</title><rect x="207.6" y="867.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="210.6" y="878.0"></text>
</g>
<g>
<title>Unsafe_Park (80 samples, 1.37%)</title><rect x="208.0" y="867.0" width="16.2" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="211.0" y="878.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (24 samples, 0.41%)</title><rect x="209.4" y="851.0" width="4.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="212.4" y="862.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (4 samples, 0.07%)</title><rect x="211.7" y="835.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="214.7" y="846.0"></text>
</g>
<g>
<title>Monitor::unlock() (4 samples, 0.07%)</title><rect x="212.5" y="835.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="215.5" y="846.0"></text>
</g>
<g>
<title>__tls_get_addr (4 samples, 0.07%)</title><rect x="213.3" y="835.0" width="0.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="216.3" y="846.0"></text>
</g>
<g>
<title>__lll_unlock_wake (42 samples, 0.72%)</title><rect x="214.5" y="851.0" width="8.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="217.5" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (22 samples, 0.38%)</title><rect x="218.5" y="835.0" width="4.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="221.5" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (22 samples, 0.38%)</title><rect x="218.5" y="819.0" width="4.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="221.5" y="830.0"></text>
</g>
<g>
<title>__x64_sys_futex (12 samples, 0.21%)</title><rect x="220.5" y="803.0" width="2.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="223.5" y="814.0"></text>
</g>
<g>
<title>do_futex (11 samples, 0.19%)</title><rect x="220.7" y="787.0" width="2.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="223.7" y="798.0"></text>
</g>
<g>
<title>futex_wake (11 samples, 0.19%)</title><rect x="220.7" y="771.0" width="2.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="223.7" y="782.0"></text>
</g>
<g>
<title>_raw_spin_lock (2 samples, 0.03%)</title><rect x="222.0" y="755.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="225.0" y="766.0"></text>
</g>
<g>
<title>get_futex_key (3 samples, 0.05%)</title><rect x="222.4" y="755.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="225.4" y="766.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.0 (2 samples, 0.03%)</title><rect x="222.6" y="739.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="225.6" y="750.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (2 samples, 0.03%)</title><rect x="223.0" y="851.0" width="0.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="226.0" y="862.0"></text>
</g>
<g>
<title>pthread_mutex_trylock (2 samples, 0.03%)</title><rect x="223.8" y="851.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="226.8" y="862.0"></text>
</g>
<g>
<title>[unknown] (121 samples, 2.07%)</title><rect x="224.2" y="867.0" width="24.4" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="227.2" y="878.0">[..</text>
</g>
<g>
<title>__condvar_dec_grefs (6 samples, 0.10%)</title><rect x="224.2" y="851.0" width="1.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="227.2" y="862.0"></text>
</g>
<g>
<title>__pthread_cond_wait (108 samples, 1.85%)</title><rect x="225.4" y="851.0" width="21.8" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="228.4" y="862.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (72 samples, 1.23%)</title><rect x="232.7" y="835.0" width="14.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="235.7" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (72 samples, 1.23%)</title><rect x="232.7" y="819.0" width="14.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="235.7" y="830.0"></text>
</g>
<g>
<title>__x64_sys_futex (59 samples, 1.01%)</title><rect x="235.3" y="803.0" width="11.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="238.3" y="814.0"></text>
</g>
<g>
<title>do_futex (54 samples, 0.92%)</title><rect x="236.3" y="787.0" width="10.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="239.3" y="798.0"></text>
</g>
<g>
<title>futex_wait (50 samples, 0.86%)</title><rect x="237.1" y="771.0" width="10.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="240.1" y="782.0"></text>
</g>
<g>
<title>futex_wait_queue_me (33 samples, 0.57%)</title><rect x="238.7" y="755.0" width="6.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="241.7" y="766.0"></text>
</g>
<g>
<title>plist_add (2 samples, 0.03%)</title><rect x="240.9" y="739.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="243.9" y="750.0"></text>
</g>
<g>
<title>schedule (20 samples, 0.34%)</title><rect x="241.4" y="739.0" width="4.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="244.4" y="750.0"></text>
</g>
<g>
<title>__sched_text_start (19 samples, 0.33%)</title><rect x="241.6" y="723.0" width="3.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="244.6" y="734.0"></text>
</g>
<g>
<title>finish_task_switch (18 samples, 0.31%)</title><rect x="241.8" y="707.0" width="3.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="244.8" y="718.0"></text>
</g>
<g>
<title>futex_wait_setup (9 samples, 0.15%)</title><rect x="245.4" y="755.0" width="1.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="248.4" y="766.0"></text>
</g>
<g>
<title>get_futex_value_locked (3 samples, 0.05%)</title><rect x="246.4" y="739.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="249.4" y="750.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (5 samples, 0.09%)</title><rect x="247.2" y="851.0" width="1.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="250.2" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (4 samples, 0.07%)</title><rect x="249.0" y="915.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="252.0" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (4 samples, 0.07%)</title><rect x="249.0" y="899.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="252.0" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (4 samples, 0.07%)</title><rect x="249.0" y="883.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="252.0" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.enq (2 samples, 0.03%)</title><rect x="249.4" y="867.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="252.4" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.setPrevRelaxed (2 samples, 0.03%)</title><rect x="249.4" y="851.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="252.4" y="862.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (2 samples, 0.03%)</title><rect x="249.4" y="835.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="252.4" y="846.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.set (2 samples, 0.03%)</title><rect x="249.4" y="819.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="252.4" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (4 samples, 0.07%)</title><rect x="249.8" y="915.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="252.8" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (4 samples, 0.07%)</title><rect x="250.6" y="915.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="253.6" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (4 samples, 0.07%)</title><rect x="250.6" y="899.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="253.6" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (4 samples, 0.07%)</title><rect x="250.6" y="883.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="253.6" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (4 samples, 0.07%)</title><rect x="250.6" y="867.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="253.6" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (4 samples, 0.07%)</title><rect x="250.6" y="851.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="253.6" y="862.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (4 samples, 0.07%)</title><rect x="250.6" y="835.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="253.6" y="846.0"></text>
</g>
<g>
<title>Unsafe_Park (2 samples, 0.03%)</title><rect x="250.8" y="819.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="253.8" y="830.0"></text>
</g>
<g>
<title>__lll_unlock_wake (2 samples, 0.03%)</title><rect x="250.8" y="803.0" width="0.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="253.8" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (68 samples, 1.16%)</title><rect x="251.5" y="915.0" width="13.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="254.5" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (68 samples, 1.16%)</title><rect x="251.5" y="899.0" width="13.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="254.5" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (68 samples, 1.16%)</title><rect x="251.5" y="883.0" width="13.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="254.5" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (65 samples, 1.11%)</title><rect x="252.1" y="867.0" width="13.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="255.1" y="878.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (65 samples, 1.11%)</title><rect x="252.1" y="851.0" width="13.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="255.1" y="862.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (2 samples, 0.03%)</title><rect x="252.1" y="835.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="255.1" y="846.0"></text>
</g>
<g>
<title>Unsafe_Unpark (6 samples, 0.10%)</title><rect x="252.5" y="835.0" width="1.2" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="255.5" y="846.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_lock (2 samples, 0.03%)</title><rect x="253.3" y="819.0" width="0.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="256.3" y="830.0"></text>
</g>
<g>
<title>__pthread_cond_signal (57 samples, 0.98%)</title><rect x="253.7" y="835.0" width="11.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="256.7" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (49 samples, 0.84%)</title><rect x="255.3" y="819.0" width="9.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="258.3" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (49 samples, 0.84%)</title><rect x="255.3" y="803.0" width="9.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="258.3" y="814.0"></text>
</g>
<g>
<title>__x64_sys_futex (44 samples, 0.75%)</title><rect x="256.1" y="787.0" width="8.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="259.1" y="798.0"></text>
</g>
<g>
<title>do_futex (44 samples, 0.75%)</title><rect x="256.1" y="771.0" width="8.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="259.1" y="782.0"></text>
</g>
<g>
<title>futex_wake (44 samples, 0.75%)</title><rect x="256.1" y="755.0" width="8.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="259.1" y="766.0"></text>
</g>
<g>
<title>get_futex_key (2 samples, 0.03%)</title><rect x="256.5" y="739.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="259.5" y="750.0"></text>
</g>
<g>
<title>mark_wake_futex (4 samples, 0.07%)</title><rect x="256.9" y="739.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="259.9" y="750.0"></text>
</g>
<g>
<title>__unqueue_futex (3 samples, 0.05%)</title><rect x="257.1" y="723.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="260.1" y="734.0"></text>
</g>
<g>
<title>wake_up_q (36 samples, 0.62%)</title><rect x="257.7" y="739.0" width="7.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="260.7" y="750.0"></text>
</g>
<g>
<title>try_to_wake_up (36 samples, 0.62%)</title><rect x="257.7" y="723.0" width="7.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="260.7" y="734.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (36 samples, 0.62%)</title><rect x="257.7" y="707.0" width="7.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="260.7" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.take (15 samples, 0.26%)</title><rect x="265.2" y="931.0" width="3.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="268.2" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.take (15 samples, 0.26%)</title><rect x="265.2" y="915.0" width="3.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="268.2" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.awaitNanos (12 samples, 0.21%)</title><rect x="265.8" y="899.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="268.8" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkNanos (12 samples, 0.21%)</title><rect x="265.8" y="883.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="268.8" y="894.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (12 samples, 0.21%)</title><rect x="265.8" y="867.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="268.8" y="878.0"></text>
</g>
<g>
<title>Unsafe_Park (4 samples, 0.07%)</title><rect x="265.8" y="851.0" width="0.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="268.8" y="862.0"></text>
</g>
<g>
<title>__lll_unlock_wake (2 samples, 0.03%)</title><rect x="266.2" y="835.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="269.2" y="846.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.12%)</title><rect x="266.6" y="851.0" width="1.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="269.6" y="862.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (6 samples, 0.10%)</title><rect x="266.8" y="835.0" width="1.2" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="269.8" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.07%)</title><rect x="267.2" y="819.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="270.2" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.07%)</title><rect x="267.2" y="803.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="270.2" y="814.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.07%)</title><rect x="267.2" y="787.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="270.2" y="798.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.05%)</title><rect x="267.4" y="771.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="270.4" y="782.0"></text>
</g>
<g>
<title>futex_wait (2 samples, 0.03%)</title><rect x="267.6" y="755.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="270.6" y="766.0"></text>
</g>
<g>
<title>futex_wait_queue_me (2 samples, 0.03%)</title><rect x="267.6" y="739.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="270.6" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$205/1532762392.run (265 samples, 4.54%)</title><rect x="268.2" y="947.0" width="53.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="271.2" y="958.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (265 samples, 4.54%)</title><rect x="268.2" y="931.0" width="53.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="271.2" y="942.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (262 samples, 4.49%)</title><rect x="268.8" y="915.0" width="53.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="271.8" y="926.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (260 samples, 4.45%)</title><rect x="269.2" y="899.0" width="52.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="272.2" y="910.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (260 samples, 4.45%)</title><rect x="269.2" y="883.0" width="52.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="272.2" y="894.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (260 samples, 4.45%)</title><rect x="269.2" y="867.0" width="52.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="272.2" y="878.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (260 samples, 4.45%)</title><rect x="269.2" y="851.0" width="52.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="272.2" y="862.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (260 samples, 4.45%)</title><rect x="269.2" y="835.0" width="52.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="272.2" y="846.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (257 samples, 4.40%)</title><rect x="269.8" y="819.0" width="52.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="272.8" y="830.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (254 samples, 4.35%)</title><rect x="270.2" y="803.0" width="51.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="273.2" y="814.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (252 samples, 4.32%)</title><rect x="270.7" y="787.0" width="50.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="273.7" y="798.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (34 samples, 0.58%)</title><rect x="270.9" y="771.0" width="6.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="273.9" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (24 samples, 0.41%)</title><rect x="270.9" y="755.0" width="4.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="273.9" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (24 samples, 0.41%)</title><rect x="270.9" y="739.0" width="4.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="273.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (24 samples, 0.41%)</title><rect x="270.9" y="723.0" width="4.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="273.9" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (24 samples, 0.41%)</title><rect x="270.9" y="707.0" width="4.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="273.9" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (7 samples, 0.12%)</title><rect x="270.9" y="691.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="273.9" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$217/1211777603.apply (4 samples, 0.07%)</title><rect x="271.5" y="675.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="274.5" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (4 samples, 0.07%)</title><rect x="271.5" y="659.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="274.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (4 samples, 0.07%)</title><rect x="271.5" y="643.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="274.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (4 samples, 0.07%)</title><rect x="271.5" y="627.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="274.5" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (4 samples, 0.07%)</title><rect x="271.5" y="611.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="274.5" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (4 samples, 0.07%)</title><rect x="271.5" y="595.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="274.5" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (4 samples, 0.07%)</title><rect x="271.5" y="579.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="274.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$168/346584917.apply (4 samples, 0.07%)</title><rect x="271.5" y="563.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="274.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$1 (4 samples, 0.07%)</title><rect x="271.5" y="547.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="274.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (4 samples, 0.07%)</title><rect x="271.5" y="531.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="274.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (4 samples, 0.07%)</title><rect x="271.5" y="515.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="274.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getSettingsString (4 samples, 0.07%)</title><rect x="271.5" y="499.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="274.5" y="510.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encodeToString (3 samples, 0.05%)</title><rect x="271.5" y="483.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="274.5" y="494.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encode (3 samples, 0.05%)</title><rect x="271.5" y="467.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="274.5" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (14 samples, 0.24%)</title><rect x="272.3" y="691.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="275.3" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (14 samples, 0.24%)</title><rect x="272.3" y="675.0" width="2.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="275.3" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (5 samples, 0.09%)</title><rect x="272.3" y="659.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="275.3" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (2 samples, 0.03%)</title><rect x="272.3" y="643.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="275.3" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (3 samples, 0.05%)</title><rect x="272.7" y="643.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="275.7" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (3 samples, 0.05%)</title><rect x="272.7" y="627.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="275.7" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (3 samples, 0.05%)</title><rect x="272.7" y="611.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="275.7" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (3 samples, 0.05%)</title><rect x="272.7" y="595.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="275.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$191/2106603000.apply (2 samples, 0.03%)</title><rect x="272.9" y="579.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="275.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$191/2106603000.apply (9 samples, 0.15%)</title><rect x="273.3" y="659.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="276.3" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (9 samples, 0.15%)</title><rect x="273.3" y="643.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="276.3" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (9 samples, 0.15%)</title><rect x="273.3" y="627.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="276.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$137/87340014.apply (8 samples, 0.14%)</title><rect x="273.5" y="611.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="276.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (8 samples, 0.14%)</title><rect x="273.5" y="595.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="276.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (6 samples, 0.10%)</title><rect x="273.9" y="579.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="276.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.completeSubscriber (3 samples, 0.05%)</title><rect x="274.3" y="563.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="277.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber$1.&lt;init&gt; (3 samples, 0.05%)</title><rect x="274.3" y="547.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="277.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.&lt;init&gt; (3 samples, 0.05%)</title><rect x="274.3" y="531.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="277.3" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.tryFire (2 samples, 0.03%)</title><rect x="275.1" y="691.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="278.1" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.pollFirst (6 samples, 0.10%)</title><rect x="275.7" y="755.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="278.7" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.unlink (6 samples, 0.10%)</title><rect x="275.7" y="739.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="278.7" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.unlinkLast (5 samples, 0.09%)</title><rect x="275.9" y="723.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="278.9" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.skipDeletedSuccessors (2 samples, 0.03%)</title><rect x="276.3" y="707.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="279.3" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (4 samples, 0.07%)</title><rect x="276.9" y="755.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="279.9" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$220/969401326.run (4 samples, 0.07%)</title><rect x="276.9" y="739.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="279.9" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.requestMoreBody (4 samples, 0.07%)</title><rect x="276.9" y="723.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="279.9" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (217 samples, 3.72%)</title><rect x="277.7" y="771.0" width="43.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="280.7" y="782.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (217 samples, 3.72%)</title><rect x="277.7" y="755.0" width="43.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="280.7" y="766.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (217 samples, 3.72%)</title><rect x="277.7" y="739.0" width="43.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="280.7" y="750.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (217 samples, 3.72%)</title><rect x="277.7" y="723.0" width="43.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="280.7" y="734.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$219/200333958.run (5 samples, 0.09%)</title><rect x="277.9" y="707.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="280.9" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (5 samples, 0.09%)</title><rect x="277.9" y="691.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="280.9" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (4 samples, 0.07%)</title><rect x="278.1" y="675.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="281.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (2 samples, 0.03%)</title><rect x="278.5" y="659.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="281.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.03%)</title><rect x="278.5" y="643.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="281.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (211 samples, 3.61%)</title><rect x="278.9" y="707.0" width="42.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="281.9" y="718.0">jdk/..</text>
</g>
<g>
<title>java/nio/channels/SocketChannel.write (204 samples, 3.49%)</title><rect x="278.9" y="691.0" width="41.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="281.9" y="702.0">jav..</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (204 samples, 3.49%)</title><rect x="278.9" y="675.0" width="41.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="281.9" y="686.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (203 samples, 3.48%)</title><rect x="279.1" y="659.0" width="41.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="282.1" y="670.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (203 samples, 3.48%)</title><rect x="279.1" y="643.0" width="41.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="282.1" y="654.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/IOVecWrapper.get (3 samples, 0.05%)</title><rect x="279.3" y="627.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="282.3" y="638.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.03%)</title><rect x="279.3" y="611.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="282.3" y="622.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (2 samples, 0.03%)</title><rect x="279.3" y="595.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="282.3" y="606.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.getMap (2 samples, 0.03%)</title><rect x="279.3" y="579.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="282.3" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.writev (193 samples, 3.30%)</title><rect x="279.9" y="627.0" width="39.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="282.9" y="638.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (191 samples, 3.27%)</title><rect x="280.3" y="611.0" width="38.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="283.3" y="622.0">sun..</text>
</g>
<g>
<title>.annobin_writev.c (189 samples, 3.24%)</title><rect x="280.6" y="595.0" width="38.1" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="283.6" y="606.0">.an..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (181 samples, 3.10%)</title><rect x="282.2" y="579.0" width="36.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="285.2" y="590.0">ent..</text>
</g>
<g>
<title>do_syscall_64 (181 samples, 3.10%)</title><rect x="282.2" y="563.0" width="36.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="285.2" y="574.0">do_..</text>
</g>
<g>
<title>do_writev (177 samples, 3.03%)</title><rect x="283.0" y="547.0" width="35.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="286.0" y="558.0">do_..</text>
</g>
<g>
<title>vfs_writev (175 samples, 3.00%)</title><rect x="283.4" y="531.0" width="35.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="286.4" y="542.0">vfs..</text>
</g>
<g>
<title>do_iter_write (173 samples, 2.96%)</title><rect x="283.4" y="515.0" width="34.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="286.4" y="526.0">do..</text>
</g>
<g>
<title>do_iter_readv_writev (168 samples, 2.88%)</title><rect x="283.8" y="499.0" width="33.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="286.8" y="510.0">do..</text>
</g>
<g>
<title>sock_write_iter (167 samples, 2.86%)</title><rect x="284.0" y="483.0" width="33.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="287.0" y="494.0">so..</text>
</g>
<g>
<title>sock_sendmsg (166 samples, 2.84%)</title><rect x="284.2" y="467.0" width="33.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="287.2" y="478.0">so..</text>
</g>
<g>
<title>security_socket_sendmsg (4 samples, 0.07%)</title><rect x="284.2" y="451.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="287.2" y="462.0"></text>
</g>
<g>
<title>sock_has_perm (3 samples, 0.05%)</title><rect x="284.4" y="435.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="287.4" y="446.0"></text>
</g>
<g>
<title>tcp_sendmsg (162 samples, 2.77%)</title><rect x="285.0" y="451.0" width="32.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="288.0" y="462.0">tc..</text>
</g>
<g>
<title>tcp_sendmsg_locked (160 samples, 2.74%)</title><rect x="285.4" y="435.0" width="32.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="288.4" y="446.0">tc..</text>
</g>
<g>
<title>__tcp_push_pending_frames (149 samples, 2.55%)</title><rect x="285.6" y="419.0" width="30.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="288.6" y="430.0">__..</text>
</g>
<g>
<title>tcp_write_xmit (148 samples, 2.53%)</title><rect x="285.8" y="403.0" width="29.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="288.8" y="414.0">tc..</text>
</g>
<g>
<title>__tcp_transmit_skb (138 samples, 2.36%)</title><rect x="286.8" y="387.0" width="27.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="289.8" y="398.0">_..</text>
</g>
<g>
<title>__ip_queue_xmit (131 samples, 2.24%)</title><rect x="287.8" y="371.0" width="26.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="290.8" y="382.0">_..</text>
</g>
<g>
<title>ip_local_out (27 samples, 0.46%)</title><rect x="288.0" y="355.0" width="5.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="291.0" y="366.0"></text>
</g>
<g>
<title>__ip_local_out (27 samples, 0.46%)</title><rect x="288.0" y="339.0" width="5.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="291.0" y="350.0"></text>
</g>
<g>
<title>nf_hook_slow (26 samples, 0.45%)</title><rect x="288.2" y="323.0" width="5.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="291.2" y="334.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (5 samples, 0.09%)</title><rect x="288.6" y="307.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="291.6" y="318.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (13 samples, 0.22%)</title><rect x="290.3" y="307.0" width="2.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="293.3" y="318.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get	[nf_conntrack] (3 samples, 0.05%)</title><rect x="290.9" y="291.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="293.9" y="302.0"></text>
</g>
<g>
<title>hash_conntrack_raw	[nf_conntrack] (2 samples, 0.03%)</title><rect x="291.5" y="291.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="294.5" y="302.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet	[nf_conntrack] (5 samples, 0.09%)</title><rect x="291.9" y="291.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="294.9" y="302.0"></text>
</g>
<g>
<title>nf_ct_seq_offset	[nf_conntrack] (2 samples, 0.03%)</title><rect x="292.5" y="275.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="295.5" y="286.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn	[nf_nat] (3 samples, 0.05%)</title><rect x="292.9" y="307.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="295.9" y="318.0"></text>
</g>
<g>
<title>ip_output (103 samples, 1.76%)</title><rect x="293.5" y="355.0" width="20.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="296.5" y="366.0"></text>
</g>
<g>
<title>ip_finish_output2 (95 samples, 1.63%)</title><rect x="293.5" y="339.0" width="19.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="296.5" y="350.0"></text>
</g>
<g>
<title>__dev_queue_xmit (6 samples, 0.10%)</title><rect x="294.1" y="323.0" width="1.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="297.1" y="334.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (4 samples, 0.07%)</title><rect x="294.1" y="307.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="297.1" y="318.0"></text>
</g>
<g>
<title>loopback_xmit (4 samples, 0.07%)</title><rect x="294.1" y="291.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="297.1" y="302.0"></text>
</g>
<g>
<title>netif_rx (2 samples, 0.03%)</title><rect x="294.1" y="275.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="297.1" y="286.0"></text>
</g>
<g>
<title>netif_rx_internal (2 samples, 0.03%)</title><rect x="294.1" y="259.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="297.1" y="270.0"></text>
</g>
<g>
<title>enqueue_to_backlog (2 samples, 0.03%)</title><rect x="294.1" y="243.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="297.1" y="254.0"></text>
</g>
<g>
<title>tcp_wfree (2 samples, 0.03%)</title><rect x="294.5" y="275.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="297.5" y="286.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (86 samples, 1.47%)</title><rect x="295.3" y="323.0" width="17.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="298.3" y="334.0"></text>
</g>
<g>
<title>do_softirq.part.0 (86 samples, 1.47%)</title><rect x="295.3" y="307.0" width="17.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="298.3" y="318.0"></text>
</g>
<g>
<title>do_softirq_own_stack (86 samples, 1.47%)</title><rect x="295.3" y="291.0" width="17.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="298.3" y="302.0"></text>
</g>
<g>
<title>__softirqentry_text_start (86 samples, 1.47%)</title><rect x="295.3" y="275.0" width="17.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="298.3" y="286.0"></text>
</g>
<g>
<title>net_rx_action (82 samples, 1.40%)</title><rect x="296.1" y="259.0" width="16.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="299.1" y="270.0"></text>
</g>
<g>
<title>process_backlog (80 samples, 1.37%)</title><rect x="296.5" y="243.0" width="16.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="299.5" y="254.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (78 samples, 1.34%)</title><rect x="296.9" y="227.0" width="15.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="299.9" y="238.0"></text>
</g>
<g>
<title>ip_rcv (77 samples, 1.32%)</title><rect x="297.1" y="211.0" width="15.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="300.1" y="222.0"></text>
</g>
<g>
<title>ip_local_deliver (59 samples, 1.01%)</title><rect x="297.1" y="195.0" width="11.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="300.1" y="206.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (48 samples, 0.82%)</title><rect x="297.1" y="179.0" width="9.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="300.1" y="190.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (48 samples, 0.82%)</title><rect x="297.1" y="163.0" width="9.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="300.1" y="174.0"></text>
</g>
<g>
<title>tcp_v4_rcv (47 samples, 0.80%)</title><rect x="297.3" y="147.0" width="9.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="300.3" y="158.0"></text>
</g>
<g>
<title>__inet_lookup_established (4 samples, 0.07%)</title><rect x="297.9" y="131.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="300.9" y="142.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (39 samples, 0.67%)</title><rect x="298.9" y="131.0" width="7.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="301.9" y="142.0"></text>
</g>
<g>
<title>tcp_rcv_established (38 samples, 0.65%)</title><rect x="299.1" y="115.0" width="7.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="302.1" y="126.0"></text>
</g>
<g>
<title>tcp_data_queue (36 samples, 0.62%)</title><rect x="299.5" y="99.0" width="7.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="302.5" y="110.0"></text>
</g>
<g>
<title>sock_def_readable (30 samples, 0.51%)</title><rect x="299.7" y="83.0" width="6.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="302.7" y="94.0"></text>
</g>
<g>
<title>__wake_up_common_lock (23 samples, 0.39%)</title><rect x="301.2" y="67.0" width="4.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="304.2" y="78.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (22 samples, 0.38%)</title><rect x="301.4" y="51.0" width="4.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="304.4" y="62.0"></text>
</g>
<g>
<title>tcp_event_data_recv (3 samples, 0.05%)</title><rect x="305.8" y="83.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="308.8" y="94.0"></text>
</g>
<g>
<title>tcp_grow_window.isra.0 (2 samples, 0.03%)</title><rect x="306.4" y="83.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="309.4" y="94.0"></text>
</g>
<g>
<title>nf_hook_slow (11 samples, 0.19%)</title><rect x="306.8" y="179.0" width="2.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="309.8" y="190.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (9 samples, 0.15%)</title><rect x="307.0" y="163.0" width="1.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="310.0" y="174.0"></text>
</g>
<g>
<title>conntrack_mt	[xt_conntrack] (3 samples, 0.05%)</title><rect x="308.0" y="147.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="311.0" y="158.0"></text>
</g>
<g>
<title>nf_hook_slow (16 samples, 0.27%)</title><rect x="309.4" y="195.0" width="3.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="312.4" y="206.0"></text>
</g>
<g>
<title>ip_sabotage_in	[br_netfilter] (2 samples, 0.03%)</title><rect x="309.6" y="179.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="312.6" y="190.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (11 samples, 0.19%)</title><rect x="310.1" y="179.0" width="2.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="313.1" y="190.0"></text>
</g>
<g>
<title>ip_finish_output (3 samples, 0.05%)</title><rect x="312.7" y="339.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="315.7" y="350.0"></text>
</g>
<g>
<title>nf_hook_slow (5 samples, 0.09%)</title><rect x="313.3" y="339.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="316.3" y="350.0"></text>
</g>
<g>
<title>nf_nat_ipv4_out	[nf_nat] (2 samples, 0.03%)</title><rect x="313.7" y="323.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="316.7" y="334.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (3 samples, 0.05%)</title><rect x="314.9" y="387.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="317.9" y="398.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (6 samples, 0.10%)</title><rect x="315.9" y="419.0" width="1.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="318.9" y="430.0"></text>
</g>
<g>
<title>__alloc_skb (5 samples, 0.09%)</title><rect x="316.1" y="403.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="319.1" y="414.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (2 samples, 0.03%)</title><rect x="316.3" y="387.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="319.3" y="398.0"></text>
</g>
<g>
<title>ksize (2 samples, 0.03%)</title><rect x="316.7" y="387.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="319.7" y="398.0"></text>
</g>
<g>
<title>tcp_send_mss (2 samples, 0.03%)</title><rect x="317.3" y="419.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="320.3" y="430.0"></text>
</g>
<g>
<title>tcp_current_mss (2 samples, 0.03%)</title><rect x="317.3" y="403.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="320.3" y="414.0"></text>
</g>
<g>
<title>security_file_permission (3 samples, 0.05%)</title><rect x="317.7" y="499.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="320.7" y="510.0"></text>
</g>
<g>
<title>file_has_perm (2 samples, 0.03%)</title><rect x="317.7" y="483.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="320.7" y="494.0"></text>
</g>
<g>
<title>avc_has_perm (2 samples, 0.03%)</title><rect x="317.7" y="467.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="320.7" y="478.0"></text>
</g>
<g>
<title>import_iovec (2 samples, 0.03%)</title><rect x="318.3" y="515.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="321.3" y="526.0"></text>
</g>
<g>
<title>rw_copy_check_uvector (2 samples, 0.03%)</title><rect x="318.3" y="499.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="321.3" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (2 samples, 0.03%)</title><rect x="318.9" y="627.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="321.9" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerLastTemporaryDirectBuffer (4 samples, 0.07%)</title><rect x="319.3" y="627.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="322.3" y="638.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (7 samples, 0.12%)</title><rect x="320.2" y="691.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="323.2" y="702.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$ListItr.hasNext (2 samples, 0.03%)</title><rect x="321.0" y="675.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="324.0" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (500 samples, 8.56%)</title><rect x="321.8" y="947.0" width="101.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="324.8" y="958.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (500 samples, 8.56%)</title><rect x="321.8" y="931.0" width="101.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="324.8" y="942.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (196 samples, 3.36%)</title><rect x="322.0" y="915.0" width="39.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="325.0" y="926.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$166/1615159449.run (196 samples, 3.36%)</title><rect x="322.0" y="899.0" width="39.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="325.0" y="910.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (196 samples, 3.36%)</title><rect x="322.0" y="883.0" width="39.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="325.0" y="894.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (42 samples, 0.72%)</title><rect x="322.0" y="867.0" width="8.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="325.0" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (42 samples, 0.72%)</title><rect x="322.0" y="851.0" width="8.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="325.0" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (42 samples, 0.72%)</title><rect x="322.0" y="835.0" width="8.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="325.0" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (39 samples, 0.67%)</title><rect x="322.6" y="819.0" width="7.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="325.6" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (36 samples, 0.62%)</title><rect x="323.0" y="803.0" width="7.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="326.0" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (36 samples, 0.62%)</title><rect x="323.0" y="787.0" width="7.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="326.0" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (35 samples, 0.60%)</title><rect x="323.2" y="771.0" width="7.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="326.2" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (32 samples, 0.55%)</title><rect x="323.8" y="755.0" width="6.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="326.8" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (31 samples, 0.53%)</title><rect x="324.0" y="739.0" width="6.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="327.0" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (30 samples, 0.51%)</title><rect x="324.2" y="723.0" width="6.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="327.2" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (28 samples, 0.48%)</title><rect x="324.6" y="707.0" width="5.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="327.6" y="718.0"></text>
</g>
<g>
<title>__libc_write (28 samples, 0.48%)</title><rect x="324.6" y="691.0" width="5.7" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="327.6" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (26 samples, 0.45%)</title><rect x="325.0" y="675.0" width="5.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="328.0" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (26 samples, 0.45%)</title><rect x="325.0" y="659.0" width="5.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="328.0" y="670.0"></text>
</g>
<g>
<title>ksys_write (25 samples, 0.43%)</title><rect x="325.2" y="643.0" width="5.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="328.2" y="654.0"></text>
</g>
<g>
<title>vfs_write (25 samples, 0.43%)</title><rect x="325.2" y="627.0" width="5.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="328.2" y="638.0"></text>
</g>
<g>
<title>new_sync_write (22 samples, 0.38%)</title><rect x="325.2" y="611.0" width="4.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="328.2" y="622.0"></text>
</g>
<g>
<title>pipe_write (21 samples, 0.36%)</title><rect x="325.4" y="595.0" width="4.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="328.4" y="606.0"></text>
</g>
<g>
<title>__wake_up_common_lock (17 samples, 0.29%)</title><rect x="325.8" y="579.0" width="3.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="328.8" y="590.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (16 samples, 0.27%)</title><rect x="326.0" y="563.0" width="3.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="329.0" y="574.0"></text>
</g>
<g>
<title>copy_page_from_iter (2 samples, 0.03%)</title><rect x="329.2" y="579.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="332.2" y="590.0"></text>
</g>
<g>
<title>security_file_permission (3 samples, 0.05%)</title><rect x="329.7" y="611.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="332.7" y="622.0"></text>
</g>
<g>
<title>selinux_file_permission (2 samples, 0.03%)</title><rect x="329.9" y="595.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="332.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (153 samples, 2.62%)</title><rect x="330.7" y="867.0" width="30.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="333.7" y="878.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (151 samples, 2.59%)</title><rect x="331.1" y="851.0" width="30.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="334.1" y="862.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (151 samples, 2.59%)</title><rect x="331.1" y="835.0" width="30.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="334.1" y="846.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (151 samples, 2.59%)</title><rect x="331.1" y="819.0" width="30.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="334.1" y="830.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (76 samples, 1.30%)</title><rect x="331.5" y="803.0" width="15.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="334.5" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (76 samples, 1.30%)</title><rect x="331.5" y="787.0" width="15.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="334.5" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (76 samples, 1.30%)</title><rect x="331.5" y="771.0" width="15.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="334.5" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (76 samples, 1.30%)</title><rect x="331.5" y="755.0" width="15.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="334.5" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (75 samples, 1.28%)</title><rect x="331.7" y="739.0" width="15.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="334.7" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (73 samples, 1.25%)</title><rect x="332.1" y="723.0" width="14.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="335.1" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (73 samples, 1.25%)</title><rect x="332.1" y="707.0" width="14.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="335.1" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (66 samples, 1.13%)</title><rect x="332.3" y="691.0" width="13.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="335.3" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (66 samples, 1.13%)</title><rect x="332.3" y="675.0" width="13.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="335.3" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (58 samples, 0.99%)</title><rect x="332.5" y="659.0" width="11.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="335.5" y="670.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.05%)</title><rect x="332.7" y="643.0" width="0.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="335.7" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2 samples, 0.03%)</title><rect x="333.3" y="643.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="336.3" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (2 samples, 0.03%)</title><rect x="333.3" y="627.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="336.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$134/2113557447.apply (43 samples, 0.74%)</title><rect x="333.9" y="643.0" width="8.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="336.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (43 samples, 0.74%)</title><rect x="333.9" y="627.0" width="8.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="336.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (43 samples, 0.74%)</title><rect x="333.9" y="611.0" width="8.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="336.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (43 samples, 0.74%)</title><rect x="333.9" y="595.0" width="8.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="336.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (43 samples, 0.74%)</title><rect x="333.9" y="579.0" width="8.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="336.9" y="590.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (12 samples, 0.21%)</title><rect x="333.9" y="563.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="336.9" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (6 samples, 0.10%)</title><rect x="333.9" y="547.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="336.9" y="558.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (6 samples, 0.10%)</title><rect x="333.9" y="531.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="336.9" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (6 samples, 0.10%)</title><rect x="333.9" y="515.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="336.9" y="526.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (4 samples, 0.07%)</title><rect x="334.3" y="499.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="337.3" y="510.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (4 samples, 0.07%)</title><rect x="334.3" y="483.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="337.3" y="494.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (3 samples, 0.05%)</title><rect x="334.5" y="467.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="337.5" y="478.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (3 samples, 0.05%)</title><rect x="334.5" y="451.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="337.5" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (3 samples, 0.05%)</title><rect x="334.5" y="435.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="337.5" y="446.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (6 samples, 0.10%)</title><rect x="335.1" y="547.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="338.1" y="558.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (6 samples, 0.10%)</title><rect x="335.1" y="531.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="338.1" y="542.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (5 samples, 0.09%)</title><rect x="335.3" y="515.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="338.3" y="526.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (5 samples, 0.09%)</title><rect x="335.3" y="499.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="338.3" y="510.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (5 samples, 0.09%)</title><rect x="335.3" y="483.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="338.3" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList$ArrayListSpliterator.forEachRemaining (3 samples, 0.05%)</title><rect x="335.5" y="467.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="338.5" y="478.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (3 samples, 0.05%)</title><rect x="335.5" y="451.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="338.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (31 samples, 0.53%)</title><rect x="336.3" y="563.0" width="6.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="339.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$232/853075107.run (31 samples, 0.53%)</title><rect x="336.3" y="547.0" width="6.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="339.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (31 samples, 0.53%)</title><rect x="336.3" y="531.0" width="6.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="339.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (9 samples, 0.15%)</title><rect x="336.3" y="515.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="339.3" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (5 samples, 0.09%)</title><rect x="336.9" y="499.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="339.9" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (5 samples, 0.09%)</title><rect x="336.9" y="483.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="339.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (13 samples, 0.22%)</title><rect x="338.1" y="515.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="341.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (13 samples, 0.22%)</title><rect x="338.1" y="499.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="341.1" y="510.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.put (12 samples, 0.21%)</title><rect x="338.1" y="483.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="341.1" y="494.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.hash (11 samples, 0.19%)</title><rect x="338.3" y="467.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="341.3" y="478.0"></text>
</g>
<g>
<title>java/lang/System.identityHashCode (10 samples, 0.17%)</title><rect x="338.5" y="451.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="341.5" y="462.0"></text>
</g>
<g>
<title>JVM_IHashCode (7 samples, 0.12%)</title><rect x="338.7" y="435.0" width="1.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="341.7" y="446.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (3 samples, 0.05%)</title><rect x="338.9" y="419.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="341.9" y="430.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.03%)</title><rect x="339.8" y="419.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="342.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (9 samples, 0.15%)</title><rect x="340.8" y="515.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="343.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (3 samples, 0.05%)</title><rect x="342.0" y="499.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="345.0" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.05%)</title><rect x="342.0" y="483.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="345.0" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1357563986.invoke (3 samples, 0.05%)</title><rect x="342.0" y="467.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="345.0" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.05%)</title><rect x="342.0" y="451.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="345.0" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (3 samples, 0.05%)</title><rect x="342.0" y="435.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="345.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (3 samples, 0.05%)</title><rect x="342.0" y="419.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="345.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$192/1158665635.apply (8 samples, 0.14%)</title><rect x="342.6" y="643.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="345.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (7 samples, 0.12%)</title><rect x="342.8" y="627.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="345.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (6 samples, 0.10%)</title><rect x="342.8" y="611.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="345.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.response (2 samples, 0.03%)</title><rect x="343.0" y="595.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="346.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (2 samples, 0.03%)</title><rect x="343.0" y="579.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="346.0" y="590.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.get (2 samples, 0.03%)</title><rect x="343.0" y="563.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="346.0" y="574.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.getTable (2 samples, 0.03%)</title><rect x="343.0" y="547.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="346.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RedirectFilter.response (3 samples, 0.05%)</title><rect x="343.4" y="595.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="346.4" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (4 samples, 0.07%)</title><rect x="344.2" y="659.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="347.2" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (2 samples, 0.03%)</title><rect x="344.6" y="643.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="347.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.tryFire (3 samples, 0.05%)</title><rect x="345.0" y="659.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="348.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (3 samples, 0.05%)</title><rect x="345.0" y="643.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="348.0" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (3 samples, 0.05%)</title><rect x="345.0" y="627.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="348.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$222/1425534080.apply (6 samples, 0.10%)</title><rect x="345.6" y="691.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="348.6" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (6 samples, 0.10%)</title><rect x="345.6" y="675.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="348.6" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Response.&lt;init&gt; (2 samples, 0.03%)</title><rect x="346.4" y="659.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="349.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (67 samples, 1.15%)</title><rect x="346.8" y="803.0" width="13.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="349.8" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.canContinueParsing (4 samples, 0.07%)</title><rect x="349.9" y="787.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="352.9" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (16 samples, 0.27%)</title><rect x="350.9" y="787.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="353.9" y="798.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (11 samples, 0.19%)</title><rect x="351.9" y="771.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="354.9" y="782.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (11 samples, 0.19%)</title><rect x="351.9" y="755.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="354.9" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (2 samples, 0.03%)</title><rect x="354.1" y="787.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="357.1" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (9 samples, 0.15%)</title><rect x="354.5" y="787.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="357.5" y="798.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (9 samples, 0.15%)</title><rect x="354.5" y="771.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="357.5" y="782.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (9 samples, 0.15%)</title><rect x="354.5" y="755.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="357.5" y="766.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (9 samples, 0.15%)</title><rect x="354.5" y="739.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="357.5" y="750.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$126/1936481830.accept (8 samples, 0.14%)</title><rect x="354.7" y="723.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="357.7" y="734.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (7 samples, 0.12%)</title><rect x="354.9" y="707.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="357.9" y="718.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (3 samples, 0.05%)</title><rect x="355.5" y="691.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="358.5" y="702.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$128/2001978515.accept (2 samples, 0.03%)</title><rect x="355.5" y="675.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="358.5" y="686.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (2 samples, 0.03%)</title><rect x="355.5" y="659.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="358.5" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.03%)</title><rect x="355.5" y="643.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="358.5" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.03%)</title><rect x="355.5" y="627.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="358.5" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.03%)</title><rect x="355.5" y="611.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="358.5" y="622.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.03%)</title><rect x="355.5" y="595.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="358.5" y="606.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.03%)</title><rect x="355.5" y="579.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="358.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$62/938545229.test (2 samples, 0.03%)</title><rect x="355.5" y="563.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="358.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (20 samples, 0.34%)</title><rect x="356.3" y="787.0" width="4.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="359.3" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (20 samples, 0.34%)</title><rect x="356.3" y="771.0" width="4.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="359.3" y="782.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.03%)</title><rect x="356.3" y="755.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="359.3" y="766.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.03%)</title><rect x="356.3" y="739.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="359.3" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.03%)</title><rect x="356.3" y="723.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="359.3" y="734.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (10 samples, 0.17%)</title><rect x="356.7" y="755.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="359.7" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (3 samples, 0.05%)</title><rect x="357.1" y="739.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="360.1" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (2 samples, 0.03%)</title><rect x="358.1" y="739.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="361.1" y="750.0"></text>
</g>
<g>
<title>java/lang/String.trim (5 samples, 0.09%)</title><rect x="358.7" y="755.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="361.7" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (5 samples, 0.09%)</title><rect x="358.7" y="739.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="361.7" y="750.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (2 samples, 0.03%)</title><rect x="359.4" y="723.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="362.4" y="734.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (2 samples, 0.03%)</title><rect x="360.0" y="755.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="363.0" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$179/379159333.accept (6 samples, 0.10%)</title><rect x="360.4" y="803.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="363.4" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.advance (6 samples, 0.10%)</title><rect x="360.4" y="787.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="363.4" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (303 samples, 5.19%)</title><rect x="361.6" y="915.0" width="61.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="364.6" y="926.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (303 samples, 5.19%)</title><rect x="361.6" y="899.0" width="61.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="364.6" y="910.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (303 samples, 5.19%)</title><rect x="361.6" y="883.0" width="61.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="364.6" y="894.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$166/1615159449.run (301 samples, 5.15%)</title><rect x="362.0" y="867.0" width="60.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="365.0" y="878.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (301 samples, 5.15%)</title><rect x="362.0" y="851.0" width="60.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="365.0" y="862.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (3 samples, 0.05%)</title><rect x="362.2" y="835.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="365.2" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.tryAsyncReceive (297 samples, 5.09%)</title><rect x="362.8" y="835.0" width="60.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="365.8" y="846.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (296 samples, 5.07%)</title><rect x="363.0" y="819.0" width="59.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="366.0" y="830.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (296 samples, 5.07%)</title><rect x="363.0" y="803.0" width="59.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="366.0" y="814.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (296 samples, 5.07%)</title><rect x="363.0" y="787.0" width="59.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="366.0" y="798.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (296 samples, 5.07%)</title><rect x="363.0" y="771.0" width="59.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="366.0" y="782.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (296 samples, 5.07%)</title><rect x="363.0" y="755.0" width="59.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="366.0" y="766.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$233/1245151766.run (244 samples, 4.18%)</title><rect x="363.6" y="739.0" width="49.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="366.6" y="750.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (244 samples, 4.18%)</title><rect x="363.6" y="723.0" width="49.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="366.6" y="734.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (243 samples, 4.16%)</title><rect x="363.8" y="707.0" width="49.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="366.8" y="718.0">jdk/i..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (5 samples, 0.09%)</title><rect x="363.8" y="691.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="366.8" y="702.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (3 samples, 0.05%)</title><rect x="363.8" y="675.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="366.8" y="686.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (2 samples, 0.03%)</title><rect x="364.4" y="675.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="367.4" y="686.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (2 samples, 0.03%)</title><rect x="364.4" y="659.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="367.4" y="670.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (2 samples, 0.03%)</title><rect x="364.4" y="643.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="367.4" y="654.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (2 samples, 0.03%)</title><rect x="364.4" y="627.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="367.4" y="638.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (2 samples, 0.03%)</title><rect x="364.4" y="611.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="367.4" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (236 samples, 4.04%)</title><rect x="364.8" y="691.0" width="47.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="367.8" y="702.0">jdk/..</text>
</g>
<g>
<title>java/time/Instant.now (2 samples, 0.03%)</title><rect x="364.8" y="675.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="367.8" y="686.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (2 samples, 0.03%)</title><rect x="364.8" y="659.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="367.8" y="670.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (2 samples, 0.03%)</title><rect x="364.8" y="643.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="367.8" y="654.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (2 samples, 0.03%)</title><rect x="364.8" y="627.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="367.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (234 samples, 4.01%)</title><rect x="365.2" y="675.0" width="47.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="368.2" y="686.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (200 samples, 3.42%)</title><rect x="365.2" y="659.0" width="40.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="368.2" y="670.0">jdk..</text>
</g>
<g>
<title>java/time/Instant.plus (3 samples, 0.05%)</title><rect x="404.0" y="643.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="407.0" y="654.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (3 samples, 0.05%)</title><rect x="404.0" y="627.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="407.0" y="638.0"></text>
</g>
<g>
<title>java/time/Instant.truncatedTo (3 samples, 0.05%)</title><rect x="404.6" y="643.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="407.6" y="654.0"></text>
</g>
<g>
<title>java/time/Instant.plusNanos (3 samples, 0.05%)</title><rect x="404.6" y="627.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="407.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (33 samples, 0.57%)</title><rect x="405.8" y="659.0" width="6.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="408.8" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (32 samples, 0.55%)</title><rect x="406.0" y="643.0" width="6.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="409.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (4 samples, 0.07%)</title><rect x="406.0" y="627.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="409.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (4 samples, 0.07%)</title><rect x="406.0" y="611.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="409.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (4 samples, 0.07%)</title><rect x="406.0" y="595.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="409.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (4 samples, 0.07%)</title><rect x="406.0" y="579.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="409.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (4 samples, 0.07%)</title><rect x="406.0" y="563.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="409.0" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (4 samples, 0.07%)</title><rect x="406.0" y="547.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="409.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (28 samples, 0.48%)</title><rect x="406.8" y="627.0" width="5.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="409.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (28 samples, 0.48%)</title><rect x="406.8" y="611.0" width="5.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="409.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (25 samples, 0.43%)</title><rect x="407.2" y="595.0" width="5.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="410.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (24 samples, 0.41%)</title><rect x="407.2" y="579.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="410.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (24 samples, 0.41%)</title><rect x="407.2" y="563.0" width="4.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="410.2" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (23 samples, 0.39%)</title><rect x="407.4" y="547.0" width="4.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="410.4" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (21 samples, 0.36%)</title><rect x="407.8" y="531.0" width="4.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="410.8" y="542.0"></text>
</g>
<g>
<title>__libc_write (21 samples, 0.36%)</title><rect x="407.8" y="515.0" width="4.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="410.8" y="526.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (16 samples, 0.27%)</title><rect x="408.9" y="499.0" width="3.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="411.9" y="510.0"></text>
</g>
<g>
<title>do_syscall_64 (16 samples, 0.27%)</title><rect x="408.9" y="483.0" width="3.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="411.9" y="494.0"></text>
</g>
<g>
<title>ksys_write (16 samples, 0.27%)</title><rect x="408.9" y="467.0" width="3.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="411.9" y="478.0"></text>
</g>
<g>
<title>__fdget_pos (2 samples, 0.03%)</title><rect x="408.9" y="451.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="411.9" y="462.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.03%)</title><rect x="408.9" y="435.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="411.9" y="446.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.03%)</title><rect x="408.9" y="419.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="411.9" y="430.0"></text>
</g>
<g>
<title>vfs_write (14 samples, 0.24%)</title><rect x="409.3" y="451.0" width="2.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="412.3" y="462.0"></text>
</g>
<g>
<title>new_sync_write (11 samples, 0.19%)</title><rect x="409.5" y="435.0" width="2.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="412.5" y="446.0"></text>
</g>
<g>
<title>pipe_write (11 samples, 0.19%)</title><rect x="409.5" y="419.0" width="2.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="412.5" y="430.0"></text>
</g>
<g>
<title>__wake_up_common_lock (7 samples, 0.12%)</title><rect x="409.5" y="403.0" width="1.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="412.5" y="414.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (7 samples, 0.12%)</title><rect x="409.5" y="387.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="412.5" y="398.0"></text>
</g>
<g>
<title>mutex_unlock (2 samples, 0.03%)</title><rect x="411.3" y="403.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="414.3" y="414.0"></text>
</g>
<g>
<title>security_file_permission (2 samples, 0.03%)</title><rect x="411.7" y="435.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="414.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.isOpen (2 samples, 0.03%)</title><rect x="412.5" y="691.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="415.5" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$234/1815637731.accept (5 samples, 0.09%)</title><rect x="412.9" y="739.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="415.9" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$1 (5 samples, 0.09%)</title><rect x="412.9" y="723.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="415.9" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onComplete (5 samples, 0.09%)</title><rect x="412.9" y="707.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="415.9" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (3 samples, 0.05%)</title><rect x="412.9" y="691.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="415.9" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (3 samples, 0.05%)</title><rect x="412.9" y="675.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="415.9" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (3 samples, 0.05%)</title><rect x="412.9" y="659.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="415.9" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (3 samples, 0.05%)</title><rect x="412.9" y="643.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="415.9" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2 samples, 0.03%)</title><rect x="412.9" y="627.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="415.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (2 samples, 0.03%)</title><rect x="412.9" y="611.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="415.9" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (2 samples, 0.03%)</title><rect x="412.9" y="595.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="415.9" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (2 samples, 0.03%)</title><rect x="412.9" y="579.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="415.9" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (2 samples, 0.03%)</title><rect x="412.9" y="563.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="415.9" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2 samples, 0.03%)</title><rect x="412.9" y="547.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="415.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$238/632069876.accept (2 samples, 0.03%)</title><rect x="412.9" y="531.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="415.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$181/624620704.accept (2 samples, 0.03%)</title><rect x="413.5" y="691.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="416.5" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.advance (2 samples, 0.03%)</title><rect x="413.5" y="675.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="416.5" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.unsubscribe (2 samples, 0.03%)</title><rect x="413.5" y="659.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="416.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (39 samples, 0.67%)</title><rect x="413.9" y="739.0" width="7.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="416.9" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (39 samples, 0.67%)</title><rect x="413.9" y="723.0" width="7.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="416.9" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (39 samples, 0.67%)</title><rect x="413.9" y="707.0" width="7.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="416.9" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (39 samples, 0.67%)</title><rect x="413.9" y="691.0" width="7.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="416.9" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (39 samples, 0.67%)</title><rect x="413.9" y="675.0" width="7.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="416.9" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (37 samples, 0.63%)</title><rect x="414.3" y="659.0" width="7.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="417.3" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (36 samples, 0.62%)</title><rect x="414.5" y="643.0" width="7.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="417.5" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (4 samples, 0.07%)</title><rect x="414.5" y="627.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="417.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (4 samples, 0.07%)</title><rect x="414.5" y="611.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="417.5" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (4 samples, 0.07%)</title><rect x="414.5" y="595.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="417.5" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (4 samples, 0.07%)</title><rect x="414.5" y="579.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="417.5" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (4 samples, 0.07%)</title><rect x="414.5" y="563.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="417.5" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (4 samples, 0.07%)</title><rect x="414.5" y="547.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="417.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$241/404297872.accept (4 samples, 0.07%)</title><rect x="414.5" y="531.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="417.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$241/404297872.accept (32 samples, 0.55%)</title><rect x="415.3" y="627.0" width="6.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="418.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (31 samples, 0.53%)</title><rect x="415.5" y="611.0" width="6.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="418.5" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (31 samples, 0.53%)</title><rect x="415.5" y="595.0" width="6.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="418.5" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (31 samples, 0.53%)</title><rect x="415.5" y="579.0" width="6.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="418.5" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (4 samples, 0.07%)</title><rect x="415.5" y="563.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="418.5" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (26 samples, 0.45%)</title><rect x="416.3" y="563.0" width="5.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="419.3" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (26 samples, 0.45%)</title><rect x="416.3" y="547.0" width="5.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="419.3" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (24 samples, 0.41%)</title><rect x="416.3" y="531.0" width="4.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="419.3" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (20 samples, 0.34%)</title><rect x="416.3" y="515.0" width="4.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="419.3" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (20 samples, 0.34%)</title><rect x="416.3" y="499.0" width="4.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="419.3" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (20 samples, 0.34%)</title><rect x="416.3" y="483.0" width="4.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="419.3" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (20 samples, 0.34%)</title><rect x="416.3" y="467.0" width="4.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="419.3" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (20 samples, 0.34%)</title><rect x="416.3" y="451.0" width="4.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="419.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (20 samples, 0.34%)</title><rect x="416.3" y="435.0" width="4.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="419.3" y="446.0"></text>
</g>
<g>
<title>Unsafe_Unpark (3 samples, 0.05%)</title><rect x="416.3" y="419.0" width="0.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="419.3" y="430.0"></text>
</g>
<g>
<title>__pthread_cond_signal (17 samples, 0.29%)</title><rect x="416.9" y="419.0" width="3.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="419.9" y="430.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (16 samples, 0.27%)</title><rect x="417.1" y="403.0" width="3.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="420.1" y="414.0"></text>
</g>
<g>
<title>do_syscall_64 (16 samples, 0.27%)</title><rect x="417.1" y="387.0" width="3.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="420.1" y="398.0"></text>
</g>
<g>
<title>__x64_sys_futex (15 samples, 0.26%)</title><rect x="417.3" y="371.0" width="3.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="420.3" y="382.0"></text>
</g>
<g>
<title>do_futex (15 samples, 0.26%)</title><rect x="417.3" y="355.0" width="3.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="420.3" y="366.0"></text>
</g>
<g>
<title>futex_wake (15 samples, 0.26%)</title><rect x="417.3" y="339.0" width="3.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="420.3" y="350.0"></text>
</g>
<g>
<title>wake_up_q (12 samples, 0.21%)</title><rect x="417.9" y="323.0" width="2.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="420.9" y="334.0"></text>
</g>
<g>
<title>try_to_wake_up (12 samples, 0.21%)</title><rect x="417.9" y="307.0" width="2.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="420.9" y="318.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (12 samples, 0.21%)</title><rect x="417.9" y="291.0" width="2.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="420.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (4 samples, 0.07%)</title><rect x="420.4" y="515.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="423.4" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (4 samples, 0.07%)</title><rect x="420.4" y="499.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="423.4" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (4 samples, 0.07%)</title><rect x="420.4" y="483.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="423.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (5 samples, 0.09%)</title><rect x="421.8" y="739.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="424.8" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (5 samples, 0.09%)</title><rect x="421.8" y="723.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="424.8" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (5 samples, 0.09%)</title><rect x="421.8" y="707.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="424.8" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (5 samples, 0.09%)</title><rect x="421.8" y="691.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="424.8" y="702.0"></text>
</g>
<g>
<title>java/util/ArrayList.addAll (5 samples, 0.09%)</title><rect x="421.8" y="675.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="424.8" y="686.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (3 samples, 0.05%)</title><rect x="421.8" y="659.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="424.8" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$250/2144415851.run (57 samples, 0.98%)</title><rect x="422.8" y="947.0" width="11.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="425.8" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$entity$0 (57 samples, 0.98%)</title><rect x="422.8" y="931.0" width="11.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="425.8" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.get (46 samples, 0.79%)</title><rect x="422.8" y="915.0" width="9.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="425.8" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (2 samples, 0.03%)</title><rect x="423.2" y="899.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="426.2" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (2 samples, 0.03%)</title><rect x="423.2" y="883.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="426.2" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniExceptionally.&lt;init&gt; (2 samples, 0.03%)</title><rect x="423.2" y="867.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="426.2" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (2 samples, 0.03%)</title><rect x="423.2" y="851.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="426.2" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.runAsync (13 samples, 0.22%)</title><rect x="423.6" y="899.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="426.6" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncRunStage (13 samples, 0.22%)</title><rect x="423.6" y="883.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="426.6" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (13 samples, 0.22%)</title><rect x="423.6" y="867.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="426.6" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (13 samples, 0.22%)</title><rect x="423.6" y="851.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="426.6" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (13 samples, 0.22%)</title><rect x="423.6" y="835.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="426.6" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.tryLockPhase (2 samples, 0.03%)</title><rect x="423.8" y="819.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="426.8" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (2 samples, 0.03%)</title><rect x="423.8" y="803.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="426.8" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (2 samples, 0.03%)</title><rect x="423.8" y="787.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="426.8" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (10 samples, 0.17%)</title><rect x="424.2" y="819.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="427.2" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (10 samples, 0.17%)</title><rect x="424.2" y="803.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="427.2" y="814.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (10 samples, 0.17%)</title><rect x="424.2" y="787.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="427.2" y="798.0"></text>
</g>
<g>
<title>__pthread_cond_signal (10 samples, 0.17%)</title><rect x="424.2" y="771.0" width="2.0" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="427.2" y="782.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.12%)</title><rect x="424.8" y="755.0" width="1.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="427.8" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.12%)</title><rect x="424.8" y="739.0" width="1.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="427.8" y="750.0"></text>
</g>
<g>
<title>__x64_sys_futex (7 samples, 0.12%)</title><rect x="424.8" y="723.0" width="1.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="427.8" y="734.0"></text>
</g>
<g>
<title>do_futex (7 samples, 0.12%)</title><rect x="424.8" y="707.0" width="1.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="427.8" y="718.0"></text>
</g>
<g>
<title>futex_wake (7 samples, 0.12%)</title><rect x="424.8" y="691.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="427.8" y="702.0"></text>
</g>
<g>
<title>wake_up_q (7 samples, 0.12%)</title><rect x="424.8" y="675.0" width="1.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="427.8" y="686.0"></text>
</g>
<g>
<title>try_to_wake_up (7 samples, 0.12%)</title><rect x="424.8" y="659.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="427.8" y="670.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (7 samples, 0.12%)</title><rect x="424.8" y="643.0" width="1.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="427.8" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenComposeAsync (3 samples, 0.05%)</title><rect x="426.2" y="899.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="429.2" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (3 samples, 0.05%)</title><rect x="426.2" y="883.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="429.2" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (3 samples, 0.05%)</title><rect x="426.2" y="867.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="429.2" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.handleLocally (15 samples, 0.26%)</title><rect x="426.8" y="899.0" width="3.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="429.8" y="910.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="426.8" y="883.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="429.8" y="894.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="426.8" y="867.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="429.8" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService$$Lambda$111/1101527014.get$Lambda (2 samples, 0.03%)</title><rect x="426.8" y="851.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="429.8" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (13 samples, 0.22%)</title><rect x="427.2" y="883.0" width="2.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="430.2" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (13 samples, 0.22%)</title><rect x="427.2" y="867.0" width="2.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="430.2" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (13 samples, 0.22%)</title><rect x="427.2" y="851.0" width="2.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="430.2" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (13 samples, 0.22%)</title><rect x="427.2" y="835.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="430.2" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (13 samples, 0.22%)</title><rect x="427.2" y="819.0" width="2.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="430.2" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.lockedPush (2 samples, 0.03%)</title><rect x="427.2" y="803.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="430.2" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (11 samples, 0.19%)</title><rect x="427.6" y="803.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="430.6" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (11 samples, 0.19%)</title><rect x="427.6" y="787.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="430.6" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (11 samples, 0.19%)</title><rect x="427.6" y="771.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="430.6" y="782.0"></text>
</g>
<g>
<title>__pthread_cond_signal (10 samples, 0.17%)</title><rect x="427.8" y="755.0" width="2.1" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="430.8" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.10%)</title><rect x="428.7" y="739.0" width="1.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="431.7" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.10%)</title><rect x="428.7" y="723.0" width="1.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="431.7" y="734.0"></text>
</g>
<g>
<title>__x64_sys_futex (6 samples, 0.10%)</title><rect x="428.7" y="707.0" width="1.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="431.7" y="718.0"></text>
</g>
<g>
<title>do_futex (6 samples, 0.10%)</title><rect x="428.7" y="691.0" width="1.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="431.7" y="702.0"></text>
</g>
<g>
<title>futex_wake (6 samples, 0.10%)</title><rect x="428.7" y="675.0" width="1.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="431.7" y="686.0"></text>
</g>
<g>
<title>wake_up_q (6 samples, 0.10%)</title><rect x="428.7" y="659.0" width="1.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="431.7" y="670.0"></text>
</g>
<g>
<title>try_to_wake_up (5 samples, 0.09%)</title><rect x="428.9" y="643.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="431.9" y="654.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (5 samples, 0.09%)</title><rect x="428.9" y="627.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="431.9" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/ConsistentHashImpl.replicas (11 samples, 0.19%)</title><rect x="429.9" y="899.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="432.9" y="910.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (3 samples, 0.05%)</title><rect x="429.9" y="883.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="432.9" y="894.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (3 samples, 0.05%)</title><rect x="429.9" y="867.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="432.9" y="878.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap$AscendingEntrySetView.iterator (3 samples, 0.05%)</title><rect x="429.9" y="851.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="432.9" y="862.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap.absLowest (3 samples, 0.05%)</title><rect x="429.9" y="835.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="432.9" y="846.0"></text>
</g>
<g>
<title>java/util/TreeMap.getCeilingEntry (3 samples, 0.05%)</title><rect x="429.9" y="819.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="432.9" y="830.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (3 samples, 0.05%)</title><rect x="429.9" y="803.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="432.9" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/ConsistentHashImpl.firstReplica (8 samples, 0.14%)</title><rect x="430.5" y="883.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="433.5" y="894.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.hashBytes (8 samples, 0.14%)</title><rect x="430.5" y="867.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="433.5" y="878.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.hash (4 samples, 0.07%)</title><rect x="430.9" y="851.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="433.9" y="862.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.putBytes (2 samples, 0.03%)</title><rect x="431.7" y="851.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="434.7" y="862.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.putBytesInternal (2 samples, 0.03%)</title><rect x="431.7" y="835.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="434.7" y="846.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (2 samples, 0.03%)</title><rect x="431.7" y="819.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="434.7" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/MetaRequest.&lt;init&gt; (11 samples, 0.19%)</title><rect x="432.1" y="915.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="435.1" y="926.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (9 samples, 0.15%)</title><rect x="432.5" y="899.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="435.5" y="910.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (3 samples, 0.05%)</title><rect x="433.7" y="883.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="436.7" y="894.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.03%)</title><rect x="433.9" y="867.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="436.9" y="878.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.03%)</title><rect x="433.9" y="851.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="436.9" y="862.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.03%)</title><rect x="433.9" y="835.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="436.9" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (2,429 samples, 41.59%)</title><rect x="434.5" y="995.0" width="490.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="437.5" y="1006.0">java/util/concurrent/ForkJoinWorkerThread.run</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (2,429 samples, 41.59%)</title><rect x="434.5" y="979.0" width="490.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="437.5" y="990.0">java/util/concurrent/ForkJoinPool.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (2,324 samples, 39.79%)</title><rect x="434.9" y="963.0" width="469.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="437.9" y="974.0">java/util/concurrent/ForkJoinPool.scan</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (2,314 samples, 39.62%)</title><rect x="436.3" y="947.0" width="467.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="439.3" y="958.0">java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.poll (3 samples, 0.05%)</title><rect x="436.5" y="931.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="439.5" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (2,310 samples, 39.55%)</title><rect x="437.1" y="931.0" width="466.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="440.1" y="942.0">java/util/concurrent/ForkJoinTask.doExec</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncRun.exec (1,375 samples, 23.54%)</title><rect x="438.4" y="915.0" width="277.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="441.4" y="926.0">java/util/concurrent/CompletableFutur..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncRun.run (1,373 samples, 23.51%)</title><rect x="438.8" y="899.0" width="277.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="441.8" y="910.0">java/util/concurrent/CompletableFutur..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (3 samples, 0.05%)</title><rect x="439.4" y="883.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="442.4" y="894.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService$$Lambda$262/480671275.run (1,367 samples, 23.41%)</title><rect x="440.0" y="883.0" width="276.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="443.0" y="894.0">ru/mail/polis/service/shakhmin/HttpSe..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.lambda$get$0 (1,367 samples, 23.41%)</title><rect x="440.0" y="867.0" width="276.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="443.0" y="878.0">ru/mail/polis/service/shakhmin/HttpSe..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.getCell (1,095 samples, 18.75%)</title><rect x="440.2" y="851.0" width="221.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="443.2" y="862.0">ru/mail/polis/dao/shakhmin/LS..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (89 samples, 1.52%)</title><rect x="440.4" y="835.0" width="18.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="443.4" y="846.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (80 samples, 1.37%)</title><rect x="440.6" y="819.0" width="16.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="443.6" y="830.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (54 samples, 0.92%)</title><rect x="440.8" y="803.0" width="10.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="443.8" y="814.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (54 samples, 0.92%)</title><rect x="440.8" y="787.0" width="10.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="443.8" y="798.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (51 samples, 0.87%)</title><rect x="441.4" y="771.0" width="10.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="444.4" y="782.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (49 samples, 0.84%)</title><rect x="441.8" y="755.0" width="9.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="444.8" y="766.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (47 samples, 0.80%)</title><rect x="442.2" y="739.0" width="9.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="445.2" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$259/1748041147.compare (43 samples, 0.74%)</title><rect x="443.0" y="723.0" width="8.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="446.0" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (41 samples, 0.70%)</title><rect x="443.4" y="707.0" width="8.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="446.4" y="718.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$124/2130957928.compare (41 samples, 0.70%)</title><rect x="443.4" y="691.0" width="8.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="446.4" y="702.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (41 samples, 0.70%)</title><rect x="443.4" y="675.0" width="8.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="446.4" y="686.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$122/124600919.compare (9 samples, 0.15%)</title><rect x="443.4" y="659.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="446.4" y="670.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (9 samples, 0.15%)</title><rect x="443.4" y="643.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="446.4" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$121/1316220837.apply (7 samples, 0.12%)</title><rect x="443.8" y="627.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="446.8" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (7 samples, 0.12%)</title><rect x="443.8" y="611.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="446.8" y="622.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (3 samples, 0.05%)</title><rect x="443.8" y="595.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="446.8" y="606.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (3 samples, 0.05%)</title><rect x="443.8" y="579.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="446.8" y="590.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (3 samples, 0.05%)</title><rect x="443.8" y="563.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="446.8" y="574.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (3 samples, 0.05%)</title><rect x="443.8" y="547.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="446.8" y="558.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (4 samples, 0.07%)</title><rect x="444.4" y="595.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="447.4" y="606.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (4 samples, 0.07%)</title><rect x="444.4" y="579.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="447.4" y="590.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.07%)</title><rect x="444.4" y="563.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="447.4" y="574.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.05%)</title><rect x="444.4" y="547.0" width="0.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="447.4" y="558.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$124/2130957928.compare (32 samples, 0.55%)</title><rect x="445.2" y="659.0" width="6.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="448.2" y="670.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (31 samples, 0.53%)</title><rect x="445.4" y="643.0" width="6.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="448.4" y="654.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$122/124600919.compare (31 samples, 0.53%)</title><rect x="445.4" y="627.0" width="6.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="448.4" y="638.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (31 samples, 0.53%)</title><rect x="445.4" y="611.0" width="6.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="448.4" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (20 samples, 0.34%)</title><rect x="445.8" y="595.0" width="4.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="448.8" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (20 samples, 0.34%)</title><rect x="445.8" y="579.0" width="4.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="448.8" y="590.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (16 samples, 0.27%)</title><rect x="446.4" y="563.0" width="3.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="449.4" y="574.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (7 samples, 0.12%)</title><rect x="447.7" y="547.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="450.7" y="558.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (7 samples, 0.12%)</title><rect x="447.7" y="531.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="450.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/util/ArraysSupport.vectorizedMismatch (3 samples, 0.05%)</title><rect x="449.1" y="547.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="452.1" y="558.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (2 samples, 0.03%)</title><rect x="449.3" y="531.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="452.3" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$121/1316220837.apply (9 samples, 0.15%)</title><rect x="449.9" y="595.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="452.9" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (9 samples, 0.15%)</title><rect x="449.9" y="579.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="452.9" y="590.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (8 samples, 0.14%)</title><rect x="450.1" y="563.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="453.1" y="574.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (8 samples, 0.14%)</title><rect x="450.1" y="547.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="453.1" y="558.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (8 samples, 0.14%)</title><rect x="450.1" y="531.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="453.1" y="542.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (5 samples, 0.09%)</title><rect x="450.7" y="515.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="453.7" y="526.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (3 samples, 0.05%)</title><rect x="451.1" y="499.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="454.1" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.05%)</title><rect x="451.1" y="483.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="454.1" y="494.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.05%)</title><rect x="451.1" y="467.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="454.1" y="478.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="451.3" y="451.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="454.3" y="462.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (25 samples, 0.43%)</title><rect x="451.7" y="803.0" width="5.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="454.7" y="814.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (25 samples, 0.43%)</title><rect x="451.7" y="787.0" width="5.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="454.7" y="798.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (25 samples, 0.43%)</title><rect x="451.7" y="771.0" width="5.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="454.7" y="782.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (25 samples, 0.43%)</title><rect x="451.7" y="755.0" width="5.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="454.7" y="766.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (25 samples, 0.43%)</title><rect x="451.7" y="739.0" width="5.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="454.7" y="750.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (24 samples, 0.41%)</title><rect x="451.9" y="723.0" width="4.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="454.9" y="734.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (13 samples, 0.22%)</title><rect x="451.9" y="707.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="454.9" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (12 samples, 0.21%)</title><rect x="452.1" y="691.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="455.1" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (12 samples, 0.21%)</title><rect x="452.1" y="675.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="455.1" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (12 samples, 0.21%)</title><rect x="452.1" y="659.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="455.1" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (6 samples, 0.10%)</title><rect x="452.3" y="643.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="455.3" y="654.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (5 samples, 0.09%)</title><rect x="452.3" y="627.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="455.3" y="638.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (5 samples, 0.09%)</title><rect x="452.3" y="611.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="455.3" y="622.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (4 samples, 0.07%)</title><rect x="452.5" y="595.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="455.5" y="606.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (4 samples, 0.07%)</title><rect x="452.5" y="579.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="455.5" y="590.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (3 samples, 0.05%)</title><rect x="452.7" y="563.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="455.7" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.timestampAt (3 samples, 0.05%)</title><rect x="453.7" y="643.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="456.7" y="654.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (3 samples, 0.05%)</title><rect x="453.7" y="627.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="456.7" y="638.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (3 samples, 0.05%)</title><rect x="453.7" y="611.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="456.7" y="622.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (2 samples, 0.03%)</title><rect x="453.9" y="595.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="456.9" y="606.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="453.9" y="579.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="456.9" y="590.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="453.9" y="563.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="456.9" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="453.9" y="547.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="456.9" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="453.9" y="531.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="456.9" y="542.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="453.9" y="515.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="456.9" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$259/1748041147.compare (11 samples, 0.19%)</title><rect x="454.5" y="707.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="457.5" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (11 samples, 0.19%)</title><rect x="454.5" y="691.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="457.5" y="702.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$124/2130957928.compare (11 samples, 0.19%)</title><rect x="454.5" y="675.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="457.5" y="686.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (11 samples, 0.19%)</title><rect x="454.5" y="659.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="457.5" y="670.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$122/124600919.compare (4 samples, 0.07%)</title><rect x="454.5" y="643.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="457.5" y="654.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (4 samples, 0.07%)</title><rect x="454.5" y="627.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="457.5" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$121/1316220837.apply (4 samples, 0.07%)</title><rect x="454.5" y="611.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="457.5" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (4 samples, 0.07%)</title><rect x="454.5" y="595.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="457.5" y="606.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (3 samples, 0.05%)</title><rect x="454.7" y="579.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="457.7" y="590.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (3 samples, 0.05%)</title><rect x="454.7" y="563.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="457.7" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.05%)</title><rect x="454.7" y="547.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="457.7" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.03%)</title><rect x="454.9" y="531.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="457.9" y="542.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$124/2130957928.compare (7 samples, 0.12%)</title><rect x="455.3" y="643.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="458.3" y="654.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (7 samples, 0.12%)</title><rect x="455.3" y="627.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="458.3" y="638.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$122/124600919.compare (7 samples, 0.12%)</title><rect x="455.3" y="611.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="458.3" y="622.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (7 samples, 0.12%)</title><rect x="455.3" y="595.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="458.3" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 0.07%)</title><rect x="455.3" y="579.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="458.3" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 0.07%)</title><rect x="455.3" y="563.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="458.3" y="574.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (3 samples, 0.05%)</title><rect x="455.5" y="547.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="458.5" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$121/1316220837.apply (3 samples, 0.05%)</title><rect x="456.1" y="579.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="459.1" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (3 samples, 0.05%)</title><rect x="456.1" y="563.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="459.1" y="574.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (3 samples, 0.05%)</title><rect x="456.1" y="547.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="459.1" y="558.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (2 samples, 0.03%)</title><rect x="456.3" y="531.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="459.3" y="542.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (2 samples, 0.03%)</title><rect x="456.3" y="515.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="459.3" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.equals (2 samples, 0.03%)</title><rect x="456.7" y="819.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="459.7" y="830.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.03%)</title><rect x="456.7" y="803.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="459.7" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$260/2021873169.apply (6 samples, 0.10%)</title><rect x="457.1" y="819.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="460.1" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (5 samples, 0.09%)</title><rect x="457.3" y="803.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="460.3" y="814.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (2 samples, 0.03%)</title><rect x="457.6" y="787.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="460.6" y="798.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (2 samples, 0.03%)</title><rect x="457.6" y="771.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="460.6" y="782.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (2 samples, 0.03%)</title><rect x="457.6" y="755.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="460.6" y="766.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="457.6" y="739.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="460.6" y="750.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="457.6" y="723.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="460.6" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="457.6" y="707.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="460.6" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="457.6" y="691.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="460.6" y="702.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (2 samples, 0.03%)</title><rect x="458.0" y="787.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="461.0" y="798.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (2 samples, 0.03%)</title><rect x="458.0" y="771.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="461.0" y="782.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="458.0" y="755.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="461.0" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="458.0" y="739.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="461.0" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.rowsIterator (1,005 samples, 17.21%)</title><rect x="458.4" y="835.0" width="203.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="461.4" y="846.0">ru/mail/polis/dao/shakhmin/..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (868 samples, 14.86%)</title><rect x="458.6" y="819.0" width="175.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="461.6" y="830.0">ru/mail/polis/dao/shakh..</text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (2 samples, 0.03%)</title><rect x="458.8" y="803.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="461.8" y="814.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (2 samples, 0.03%)</title><rect x="458.8" y="787.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="461.8" y="798.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap$AscendingEntrySetView.iterator (2 samples, 0.03%)</title><rect x="458.8" y="771.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="461.8" y="782.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap.absLowest (2 samples, 0.03%)</title><rect x="458.8" y="755.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="461.8" y="766.0"></text>
</g>
<g>
<title>java/util/TreeMap.getCeilingEntry (2 samples, 0.03%)</title><rect x="458.8" y="739.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="461.8" y="750.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (6 samples, 0.10%)</title><rect x="459.2" y="803.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="462.2" y="814.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (4 samples, 0.07%)</title><rect x="459.4" y="787.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="462.4" y="798.0"></text>
</g>
<g>
<title>java/util/TreeMap.descendingMap (5 samples, 0.09%)</title><rect x="460.4" y="803.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="463.4" y="814.0"></text>
</g>
<g>
<title>java/util/TreeMap$DescendingSubMap.&lt;init&gt; (2 samples, 0.03%)</title><rect x="460.8" y="787.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="463.8" y="798.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap.&lt;init&gt; (2 samples, 0.03%)</title><rect x="460.8" y="771.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="463.8" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.next (33 samples, 0.57%)</title><rect x="461.4" y="803.0" width="6.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="464.4" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (33 samples, 0.57%)</title><rect x="461.4" y="787.0" width="6.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="464.4" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.descend (30 samples, 0.51%)</title><rect x="462.0" y="771.0" width="6.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="465.0" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (27 samples, 0.46%)</title><rect x="462.6" y="755.0" width="5.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="465.6" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (4 samples, 0.07%)</title><rect x="464.2" y="739.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="467.2" y="750.0"></text>
</g>
<g>
<title>java/lang/Long.compareTo (4 samples, 0.07%)</title><rect x="464.2" y="723.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="467.2" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (15 samples, 0.26%)</title><rect x="465.0" y="739.0" width="3.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="468.0" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (6 samples, 0.10%)</title><rect x="466.8" y="723.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="469.8" y="734.0"></text>
</g>
<g>
<title>java/lang/Long.compareTo (4 samples, 0.07%)</title><rect x="467.2" y="707.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="470.2" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (5 samples, 0.09%)</title><rect x="468.1" y="803.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="471.1" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (5 samples, 0.09%)</title><rect x="468.1" y="787.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="471.1" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (5 samples, 0.09%)</title><rect x="468.1" y="771.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="471.1" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.hiNode (5 samples, 0.09%)</title><rect x="468.1" y="755.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="471.1" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findLast (4 samples, 0.07%)</title><rect x="468.3" y="739.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="471.3" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.iterator (40 samples, 0.68%)</title><rect x="469.3" y="803.0" width="8.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="472.3" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (2 samples, 0.03%)</title><rect x="469.5" y="787.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="472.5" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (2 samples, 0.03%)</title><rect x="469.5" y="771.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="472.5" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (2 samples, 0.03%)</title><rect x="469.5" y="755.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="472.5" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (26 samples, 0.45%)</title><rect x="469.9" y="787.0" width="5.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="472.9" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.iterator (23 samples, 0.39%)</title><rect x="470.5" y="771.0" width="4.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="473.5" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (21 samples, 0.36%)</title><rect x="470.5" y="755.0" width="4.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="473.5" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (21 samples, 0.36%)</title><rect x="470.5" y="739.0" width="4.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="473.5" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (21 samples, 0.36%)</title><rect x="470.5" y="723.0" width="4.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="473.5" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (20 samples, 0.34%)</title><rect x="470.7" y="707.0" width="4.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="473.7" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (20 samples, 0.34%)</title><rect x="470.7" y="691.0" width="4.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="473.7" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (2 samples, 0.03%)</title><rect x="470.9" y="675.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="473.9" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.03%)</title><rect x="470.9" y="659.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="473.9" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (17 samples, 0.29%)</title><rect x="471.3" y="675.0" width="3.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="474.3" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (6 samples, 0.10%)</title><rect x="473.5" y="659.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="476.5" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (6 samples, 0.10%)</title><rect x="473.5" y="643.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="476.5" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (6 samples, 0.10%)</title><rect x="473.5" y="627.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="476.5" y="638.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (6 samples, 0.10%)</title><rect x="473.5" y="611.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="476.5" y="622.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (2 samples, 0.03%)</title><rect x="474.3" y="595.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="477.3" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (2 samples, 0.03%)</title><rect x="474.7" y="755.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="477.7" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.reduceIterators (11 samples, 0.19%)</title><rect x="475.1" y="787.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="478.1" y="798.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (5 samples, 0.09%)</title><rect x="475.3" y="771.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="478.3" y="782.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (5 samples, 0.09%)</title><rect x="475.3" y="755.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="478.3" y="766.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (3 samples, 0.05%)</title><rect x="475.7" y="739.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="478.7" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (5 samples, 0.09%)</title><rect x="476.3" y="771.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="479.3" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (5 samples, 0.09%)</title><rect x="476.3" y="755.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="479.3" y="766.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (3 samples, 0.05%)</title><rect x="476.5" y="739.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="479.5" y="750.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (3 samples, 0.05%)</title><rect x="476.5" y="723.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="479.5" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.next (3 samples, 0.05%)</title><rect x="476.5" y="707.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="479.5" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (3 samples, 0.05%)</title><rect x="476.5" y="691.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="479.5" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.ascend (2 samples, 0.03%)</title><rect x="476.7" y="675.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="479.7" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.iterator (775 samples, 13.27%)</title><rect x="477.4" y="803.0" width="156.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="480.4" y="814.0">ru/mail/polis/dao/sh..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.&lt;init&gt; (775 samples, 13.27%)</title><rect x="477.4" y="787.0" width="156.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="480.4" y="798.0">ru/mail/polis/dao/sh..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.position (773 samples, 13.24%)</title><rect x="477.8" y="771.0" width="156.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="480.8" y="782.0">ru/mail/polis/dao/sh..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (145 samples, 2.48%)</title><rect x="483.8" y="755.0" width="29.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="486.8" y="766.0">ja..</text>
</g>
<g>
<title>java/nio/Buffer.position (6 samples, 0.10%)</title><rect x="485.8" y="739.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="488.8" y="750.0"></text>
</g>
<g>
<title>java/nio/Buffer.remaining (5 samples, 0.09%)</title><rect x="487.1" y="739.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="490.1" y="750.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (112 samples, 1.92%)</title><rect x="488.1" y="739.0" width="22.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="491.1" y="750.0">j..</text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (20 samples, 0.34%)</title><rect x="503.4" y="723.0" width="4.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="506.4" y="734.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (10 samples, 0.17%)</title><rect x="503.4" y="707.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="506.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getByte (9 samples, 0.15%)</title><rect x="505.6" y="707.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="508.6" y="718.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (12 samples, 0.21%)</title><rect x="507.7" y="723.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="510.7" y="734.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (7 samples, 0.12%)</title><rect x="508.3" y="707.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="511.3" y="718.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.ix (2 samples, 0.03%)</title><rect x="509.7" y="707.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="512.7" y="718.0"></text>
</g>
<g>
<title>jdk/internal/util/ArraysSupport.vectorizedMismatch (3 samples, 0.05%)</title><rect x="510.1" y="723.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="513.1" y="734.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (8 samples, 0.14%)</title><rect x="510.7" y="739.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="513.7" y="750.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (4 samples, 0.07%)</title><rect x="511.3" y="723.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="514.3" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (4 samples, 0.07%)</title><rect x="512.3" y="739.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="515.3" y="750.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (2 samples, 0.03%)</title><rect x="512.3" y="723.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="515.3" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.ix (2 samples, 0.03%)</title><rect x="512.7" y="723.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="515.7" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (284 samples, 4.86%)</title><rect x="513.1" y="755.0" width="57.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="516.1" y="766.0">ru/mai..</text>
</g>
<g>
<title>java/nio/DirectByteBuffer.getInt (125 samples, 2.14%)</title><rect x="513.3" y="739.0" width="25.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="516.3" y="750.0">j..</text>
</g>
<g>
<title>java/nio/Buffer.nextGetIndex (3 samples, 0.05%)</title><rect x="513.3" y="723.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="516.3" y="734.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.getInt (122 samples, 2.09%)</title><rect x="513.9" y="723.0" width="24.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="516.9" y="734.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getIntUnaligned (122 samples, 2.09%)</title><rect x="513.9" y="707.0" width="24.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="516.9" y="718.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.convEndian (118 samples, 2.02%)</title><rect x="514.5" y="691.0" width="23.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="517.5" y="702.0">j..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (88 samples, 1.51%)</title><rect x="538.6" y="739.0" width="17.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="541.6" y="750.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (88 samples, 1.51%)</title><rect x="538.6" y="723.0" width="17.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="541.6" y="734.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (2 samples, 0.03%)</title><rect x="539.8" y="707.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="542.8" y="718.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (79 samples, 1.35%)</title><rect x="540.4" y="707.0" width="16.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="543.4" y="718.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (78 samples, 1.34%)</title><rect x="540.6" y="691.0" width="15.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="543.6" y="702.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (78 samples, 1.34%)</title><rect x="540.6" y="675.0" width="15.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="543.6" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (78 samples, 1.34%)</title><rect x="540.6" y="659.0" width="15.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="543.6" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (78 samples, 1.34%)</title><rect x="540.6" y="643.0" width="15.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="543.6" y="654.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (39 samples, 0.67%)</title><rect x="546.9" y="627.0" width="7.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="549.9" y="638.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (15 samples, 0.26%)</title><rect x="547.5" y="611.0" width="3.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="550.5" y="622.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (8 samples, 0.14%)</title><rect x="548.9" y="595.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="551.9" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (6 samples, 0.10%)</title><rect x="549.3" y="579.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="552.3" y="590.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (6 samples, 0.10%)</title><rect x="549.3" y="563.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="552.3" y="574.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (21 samples, 0.36%)</title><rect x="550.5" y="611.0" width="4.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="553.5" y="622.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (10 samples, 0.17%)</title><rect x="551.9" y="595.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="554.9" y="606.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (4 samples, 0.07%)</title><rect x="553.9" y="595.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="556.9" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (4 samples, 0.07%)</title><rect x="553.9" y="579.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="556.9" y="590.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (4 samples, 0.07%)</title><rect x="553.9" y="563.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="556.9" y="574.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (3 samples, 0.05%)</title><rect x="554.7" y="627.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="557.7" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (4 samples, 0.07%)</title><rect x="555.3" y="627.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="558.3" y="638.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (65 samples, 1.11%)</title><rect x="556.4" y="739.0" width="13.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="559.4" y="750.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (57 samples, 0.98%)</title><rect x="558.0" y="723.0" width="11.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="561.0" y="734.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (55 samples, 0.94%)</title><rect x="558.4" y="707.0" width="11.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="561.4" y="718.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (48 samples, 0.82%)</title><rect x="559.8" y="691.0" width="9.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="562.8" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (48 samples, 0.82%)</title><rect x="559.8" y="675.0" width="9.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="562.8" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (48 samples, 0.82%)</title><rect x="559.8" y="659.0" width="9.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="562.8" y="670.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (35 samples, 0.60%)</title><rect x="561.2" y="643.0" width="7.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="564.2" y="654.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (10 samples, 0.17%)</title><rect x="562.4" y="627.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="565.4" y="638.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (10 samples, 0.17%)</title><rect x="562.4" y="611.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="565.4" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (8 samples, 0.14%)</title><rect x="562.8" y="595.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="565.8" y="606.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (8 samples, 0.14%)</title><rect x="562.8" y="579.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="565.8" y="590.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (19 samples, 0.33%)</title><rect x="564.4" y="627.0" width="3.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="567.4" y="638.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (19 samples, 0.33%)</title><rect x="564.4" y="611.0" width="3.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="567.4" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.03%)</title><rect x="566.5" y="595.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="569.5" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (7 samples, 0.12%)</title><rect x="566.9" y="595.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="569.9" y="606.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (7 samples, 0.12%)</title><rect x="566.9" y="579.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="569.9" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (6 samples, 0.10%)</title><rect x="568.3" y="643.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="571.3" y="654.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (5 samples, 0.09%)</title><rect x="569.5" y="739.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="572.5" y="750.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (5 samples, 0.09%)</title><rect x="569.5" y="723.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="572.5" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (5 samples, 0.09%)</title><rect x="569.5" y="707.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="572.5" y="718.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (5 samples, 0.09%)</title><rect x="569.5" y="691.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="572.5" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (314 samples, 5.38%)</title><rect x="570.5" y="755.0" width="63.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="573.5" y="766.0">ru/mail..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (79 samples, 1.35%)</title><rect x="574.1" y="739.0" width="16.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="577.1" y="750.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (79 samples, 1.35%)</title><rect x="574.1" y="723.0" width="16.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="577.1" y="734.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (68 samples, 1.16%)</title><rect x="576.4" y="707.0" width="13.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="579.4" y="718.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (66 samples, 1.13%)</title><rect x="576.8" y="691.0" width="13.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="579.8" y="702.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (64 samples, 1.10%)</title><rect x="577.2" y="675.0" width="12.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="580.2" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (64 samples, 1.10%)</title><rect x="577.2" y="659.0" width="12.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="580.2" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (64 samples, 1.10%)</title><rect x="577.2" y="643.0" width="12.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="580.2" y="654.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (29 samples, 0.50%)</title><rect x="584.2" y="627.0" width="5.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="587.2" y="638.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (15 samples, 0.26%)</title><rect x="585.3" y="611.0" width="3.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="588.3" y="622.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (15 samples, 0.26%)</title><rect x="585.3" y="595.0" width="3.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="588.3" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (11 samples, 0.19%)</title><rect x="586.1" y="579.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="589.1" y="590.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (11 samples, 0.19%)</title><rect x="586.1" y="563.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="589.1" y="574.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (9 samples, 0.15%)</title><rect x="588.3" y="611.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="591.3" y="622.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (9 samples, 0.15%)</title><rect x="588.3" y="595.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="591.3" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (8 samples, 0.14%)</title><rect x="588.5" y="579.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="591.5" y="590.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (8 samples, 0.14%)</title><rect x="588.5" y="563.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="591.5" y="574.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (91 samples, 1.56%)</title><rect x="590.1" y="739.0" width="18.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="593.1" y="750.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (82 samples, 1.40%)</title><rect x="591.9" y="723.0" width="16.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="594.9" y="734.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (82 samples, 1.40%)</title><rect x="591.9" y="707.0" width="16.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="594.9" y="718.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (76 samples, 1.30%)</title><rect x="593.1" y="691.0" width="15.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="596.1" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (76 samples, 1.30%)</title><rect x="593.1" y="675.0" width="15.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="596.1" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (76 samples, 1.30%)</title><rect x="593.1" y="659.0" width="15.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="596.1" y="670.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (62 samples, 1.06%)</title><rect x="593.9" y="643.0" width="12.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="596.9" y="654.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (13 samples, 0.22%)</title><rect x="594.3" y="627.0" width="2.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="597.3" y="638.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (13 samples, 0.22%)</title><rect x="594.3" y="611.0" width="2.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="597.3" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (13 samples, 0.22%)</title><rect x="594.3" y="595.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="597.3" y="606.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (9 samples, 0.15%)</title><rect x="595.2" y="579.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="598.2" y="590.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (47 samples, 0.80%)</title><rect x="597.0" y="627.0" width="9.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="600.0" y="638.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (47 samples, 0.80%)</title><rect x="597.0" y="611.0" width="9.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="600.0" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (47 samples, 0.80%)</title><rect x="597.0" y="595.0" width="9.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="600.0" y="606.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (8 samples, 0.14%)</title><rect x="604.0" y="579.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="607.0" y="590.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (4 samples, 0.07%)</title><rect x="605.7" y="579.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="608.7" y="590.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (9 samples, 0.15%)</title><rect x="606.5" y="643.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="609.5" y="654.0"></text>
</g>
<g>
<title>java/nio/DirectLongBufferS.get (120 samples, 2.05%)</title><rect x="608.5" y="739.0" width="24.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="611.5" y="750.0">j..</text>
</g>
<g>
<title>java/nio/Bits.swap (116 samples, 1.99%)</title><rect x="608.5" y="723.0" width="23.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="611.5" y="734.0">j..</text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (3 samples, 0.05%)</title><rect x="631.9" y="723.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="634.9" y="734.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (6 samples, 0.10%)</title><rect x="632.7" y="739.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="635.7" y="750.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (6 samples, 0.10%)</title><rect x="632.7" y="723.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="635.7" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (6 samples, 0.10%)</title><rect x="632.7" y="707.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="635.7" y="718.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (6 samples, 0.10%)</title><rect x="632.7" y="691.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="635.7" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.reduceIterators (136 samples, 2.33%)</title><rect x="633.9" y="819.0" width="27.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="636.9" y="830.0">r..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (119 samples, 2.04%)</title><rect x="633.9" y="803.0" width="24.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="636.9" y="814.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (119 samples, 2.04%)</title><rect x="633.9" y="787.0" width="24.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="636.9" y="798.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (2 samples, 0.03%)</title><rect x="635.2" y="771.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="638.2" y="782.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.&lt;init&gt; (2 samples, 0.03%)</title><rect x="635.2" y="755.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="638.2" y="766.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (2 samples, 0.03%)</title><rect x="635.6" y="771.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="638.6" y="782.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (108 samples, 1.85%)</title><rect x="636.0" y="771.0" width="21.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="639.0" y="782.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (108 samples, 1.85%)</title><rect x="636.0" y="755.0" width="21.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="639.0" y="766.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.grow (4 samples, 0.07%)</title><rect x="636.2" y="739.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="639.2" y="750.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (103 samples, 1.76%)</title><rect x="637.0" y="739.0" width="20.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="640.0" y="750.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (103 samples, 1.76%)</title><rect x="637.0" y="723.0" width="20.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="640.0" y="734.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (96 samples, 1.64%)</title><rect x="638.0" y="707.0" width="19.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="641.0" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (96 samples, 1.64%)</title><rect x="638.0" y="691.0" width="19.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="641.0" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (47 samples, 0.80%)</title><rect x="639.0" y="675.0" width="9.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="642.0" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (9 samples, 0.15%)</title><rect x="639.2" y="659.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="642.2" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.equals (3 samples, 0.05%)</title><rect x="640.0" y="643.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="643.0" y="654.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (3 samples, 0.05%)</title><rect x="640.0" y="627.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="643.0" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.base (2 samples, 0.03%)</title><rect x="640.2" y="611.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="643.2" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (37 samples, 0.63%)</title><rect x="641.0" y="659.0" width="7.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="644.0" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (37 samples, 0.63%)</title><rect x="641.0" y="643.0" width="7.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="644.0" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (36 samples, 0.62%)</title><rect x="641.2" y="627.0" width="7.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="644.2" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (12 samples, 0.21%)</title><rect x="641.4" y="611.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="644.4" y="622.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (12 samples, 0.21%)</title><rect x="641.4" y="595.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="644.4" y="606.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (12 samples, 0.21%)</title><rect x="641.4" y="579.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="644.4" y="590.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (9 samples, 0.15%)</title><rect x="642.0" y="563.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="645.0" y="574.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (9 samples, 0.15%)</title><rect x="642.0" y="547.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="645.0" y="558.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (8 samples, 0.14%)</title><rect x="642.2" y="531.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="645.2" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (6 samples, 0.10%)</title><rect x="642.6" y="515.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="645.6" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 0.09%)</title><rect x="642.8" y="499.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="645.8" y="510.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (5 samples, 0.09%)</title><rect x="642.8" y="483.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="645.8" y="494.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (3 samples, 0.05%)</title><rect x="643.2" y="467.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="646.2" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (7 samples, 0.12%)</title><rect x="643.8" y="611.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="646.8" y="622.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (2 samples, 0.03%)</title><rect x="644.0" y="595.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="647.0" y="606.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (2 samples, 0.03%)</title><rect x="644.0" y="579.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="647.0" y="590.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (2 samples, 0.03%)</title><rect x="644.0" y="563.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="647.0" y="574.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="644.0" y="547.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="647.0" y="558.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="644.0" y="531.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="647.0" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="644.0" y="515.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="647.0" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="644.0" y="499.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="647.0" y="510.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (2 samples, 0.03%)</title><rect x="644.5" y="595.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="647.5" y="606.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (2 samples, 0.03%)</title><rect x="644.5" y="579.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="647.5" y="590.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="644.5" y="563.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="647.5" y="574.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="644.5" y="547.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="647.5" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="644.5" y="531.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="647.5" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="644.5" y="515.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="647.5" y="526.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="644.5" y="499.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="647.5" y="510.0"></text>
</g>
<g>
<title>java/nio/DirectLongBufferS.get (2 samples, 0.03%)</title><rect x="644.9" y="595.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="647.9" y="606.0"></text>
</g>
<g>
<title>java/nio/Bits.swap (2 samples, 0.03%)</title><rect x="644.9" y="579.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="647.9" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.timestampAt (10 samples, 0.17%)</title><rect x="645.3" y="611.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="648.3" y="622.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (10 samples, 0.17%)</title><rect x="645.3" y="595.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="648.3" y="606.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (10 samples, 0.17%)</title><rect x="645.3" y="579.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="648.3" y="590.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (8 samples, 0.14%)</title><rect x="645.7" y="563.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="648.7" y="574.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (8 samples, 0.14%)</title><rect x="645.7" y="547.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="648.7" y="558.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (6 samples, 0.10%)</title><rect x="646.1" y="531.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="649.1" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 0.09%)</title><rect x="646.3" y="515.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="649.3" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.05%)</title><rect x="646.7" y="499.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="649.7" y="510.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (3 samples, 0.05%)</title><rect x="646.7" y="483.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="649.7" y="494.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (2 samples, 0.03%)</title><rect x="646.9" y="467.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="649.9" y="478.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (2 samples, 0.03%)</title><rect x="646.9" y="451.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="649.9" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.03%)</title><rect x="646.9" y="435.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="649.9" y="446.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (2 samples, 0.03%)</title><rect x="646.9" y="419.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="649.9" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.valueAt (6 samples, 0.10%)</title><rect x="647.3" y="611.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="650.3" y="622.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (3 samples, 0.05%)</title><rect x="647.3" y="595.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="650.3" y="606.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (3 samples, 0.05%)</title><rect x="647.3" y="579.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="650.3" y="590.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (3 samples, 0.05%)</title><rect x="647.3" y="563.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="650.3" y="574.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (3 samples, 0.05%)</title><rect x="647.3" y="547.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="650.3" y="558.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (3 samples, 0.05%)</title><rect x="647.3" y="531.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="650.3" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.05%)</title><rect x="647.3" y="515.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="650.3" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.05%)</title><rect x="647.3" y="499.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="650.3" y="510.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (3 samples, 0.05%)</title><rect x="647.3" y="483.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="650.3" y="494.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (2 samples, 0.03%)</title><rect x="647.5" y="467.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="650.5" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (3 samples, 0.05%)</title><rect x="647.9" y="595.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="650.9" y="606.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (3 samples, 0.05%)</title><rect x="647.9" y="579.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="650.9" y="590.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (3 samples, 0.05%)</title><rect x="647.9" y="563.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="650.9" y="574.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (3 samples, 0.05%)</title><rect x="647.9" y="547.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="650.9" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.05%)</title><rect x="647.9" y="531.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="650.9" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.05%)</title><rect x="647.9" y="515.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="650.9" y="526.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (3 samples, 0.05%)</title><rect x="647.9" y="499.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="650.9" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$259/1748041147.compare (44 samples, 0.75%)</title><rect x="648.5" y="675.0" width="8.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="651.5" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (44 samples, 0.75%)</title><rect x="648.5" y="659.0" width="8.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="651.5" y="670.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$124/2130957928.compare (43 samples, 0.74%)</title><rect x="648.7" y="643.0" width="8.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="651.7" y="654.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (43 samples, 0.74%)</title><rect x="648.7" y="627.0" width="8.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="651.7" y="638.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$122/124600919.compare (15 samples, 0.26%)</title><rect x="648.7" y="611.0" width="3.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="651.7" y="622.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (15 samples, 0.26%)</title><rect x="648.7" y="595.0" width="3.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="651.7" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$121/1316220837.apply (11 samples, 0.19%)</title><rect x="649.3" y="579.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="652.3" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (11 samples, 0.19%)</title><rect x="649.3" y="563.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="652.3" y="574.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (7 samples, 0.12%)</title><rect x="649.3" y="547.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="652.3" y="558.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (7 samples, 0.12%)</title><rect x="649.3" y="531.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="652.3" y="542.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (5 samples, 0.09%)</title><rect x="649.7" y="515.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="652.7" y="526.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (4 samples, 0.07%)</title><rect x="649.7" y="499.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="652.7" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (4 samples, 0.07%)</title><rect x="650.7" y="547.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="653.7" y="558.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (4 samples, 0.07%)</title><rect x="650.7" y="531.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="653.7" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.07%)</title><rect x="650.7" y="515.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="653.7" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (3 samples, 0.05%)</title><rect x="650.9" y="499.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="653.9" y="510.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$124/2130957928.compare (28 samples, 0.48%)</title><rect x="651.7" y="611.0" width="5.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="654.7" y="622.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (27 samples, 0.46%)</title><rect x="651.9" y="595.0" width="5.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="654.9" y="606.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$122/124600919.compare (27 samples, 0.46%)</title><rect x="651.9" y="579.0" width="5.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="654.9" y="590.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (27 samples, 0.46%)</title><rect x="651.9" y="563.0" width="5.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="654.9" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (14 samples, 0.24%)</title><rect x="651.9" y="547.0" width="2.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="654.9" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (12 samples, 0.21%)</title><rect x="652.3" y="531.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="655.3" y="542.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (12 samples, 0.21%)</title><rect x="652.3" y="515.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="655.3" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Cell.compareTo (2 samples, 0.03%)</title><rect x="654.8" y="547.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="657.8" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Cell.compareTo (2 samples, 0.03%)</title><rect x="654.8" y="531.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="657.8" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$121/1316220837.apply (11 samples, 0.19%)</title><rect x="655.2" y="547.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="658.2" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (11 samples, 0.19%)</title><rect x="655.2" y="531.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="658.2" y="542.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (7 samples, 0.12%)</title><rect x="655.4" y="515.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="658.4" y="526.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (6 samples, 0.10%)</title><rect x="655.6" y="499.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="658.6" y="510.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (6 samples, 0.10%)</title><rect x="655.6" y="483.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="658.6" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (6 samples, 0.10%)</title><rect x="655.6" y="467.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="658.6" y="478.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (3 samples, 0.05%)</title><rect x="656.2" y="451.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="659.2" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.05%)</title><rect x="656.2" y="435.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="659.2" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.05%)</title><rect x="656.2" y="419.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="659.2" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (3 samples, 0.05%)</title><rect x="656.8" y="515.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="659.8" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (3 samples, 0.05%)</title><rect x="656.8" y="499.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="659.8" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.05%)</title><rect x="656.8" y="483.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="659.8" y="494.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="657.0" y="467.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="660.0" y="478.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="657.0" y="451.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="660.0" y="462.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$124/2130957928.compare (2 samples, 0.03%)</title><rect x="657.4" y="707.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="660.4" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (17 samples, 0.29%)</title><rect x="658.0" y="803.0" width="3.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="661.0" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (17 samples, 0.29%)</title><rect x="658.0" y="787.0" width="3.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="661.0" y="798.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (16 samples, 0.27%)</title><rect x="658.2" y="771.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="661.2" y="782.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (13 samples, 0.22%)</title><rect x="658.4" y="755.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="661.4" y="766.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (13 samples, 0.22%)</title><rect x="658.4" y="739.0" width="2.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="661.4" y="750.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (11 samples, 0.19%)</title><rect x="658.8" y="723.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="661.8" y="734.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (10 samples, 0.17%)</title><rect x="658.8" y="707.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="661.8" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (10 samples, 0.17%)</title><rect x="658.8" y="691.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="661.8" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$259/1748041147.compare (9 samples, 0.15%)</title><rect x="659.0" y="675.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="662.0" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (9 samples, 0.15%)</title><rect x="659.0" y="659.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="662.0" y="670.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$124/2130957928.compare (9 samples, 0.15%)</title><rect x="659.0" y="643.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="662.0" y="654.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (9 samples, 0.15%)</title><rect x="659.0" y="627.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="662.0" y="638.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$122/124600919.compare (3 samples, 0.05%)</title><rect x="659.0" y="611.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="662.0" y="622.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (3 samples, 0.05%)</title><rect x="659.0" y="595.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="662.0" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$121/1316220837.apply (3 samples, 0.05%)</title><rect x="659.0" y="579.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="662.0" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (3 samples, 0.05%)</title><rect x="659.0" y="563.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="662.0" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (3 samples, 0.05%)</title><rect x="659.0" y="547.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="662.0" y="558.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (3 samples, 0.05%)</title><rect x="659.0" y="531.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="662.0" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.05%)</title><rect x="659.0" y="515.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="662.0" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.03%)</title><rect x="659.2" y="499.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="662.2" y="510.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$124/2130957928.compare (6 samples, 0.10%)</title><rect x="659.6" y="611.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="662.6" y="622.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (5 samples, 0.09%)</title><rect x="659.8" y="595.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="662.8" y="606.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$122/124600919.compare (5 samples, 0.09%)</title><rect x="659.8" y="579.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="662.8" y="590.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (5 samples, 0.09%)</title><rect x="659.8" y="563.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="662.8" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$121/1316220837.apply (4 samples, 0.07%)</title><rect x="660.0" y="547.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="663.0" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (3 samples, 0.05%)</title><rect x="660.2" y="531.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="663.2" y="542.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (2 samples, 0.03%)</title><rect x="660.4" y="515.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="663.4" y="526.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (2 samples, 0.03%)</title><rect x="660.4" y="499.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="663.4" y="510.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (2 samples, 0.03%)</title><rect x="660.4" y="483.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="663.4" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="660.4" y="467.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="663.4" y="478.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="660.4" y="451.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="663.4" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="660.4" y="435.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="663.4" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="660.4" y="419.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="663.4" y="430.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (2 samples, 0.03%)</title><rect x="661.0" y="755.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="664.0" y="766.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (2 samples, 0.03%)</title><rect x="661.0" y="739.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="664.0" y="750.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (2 samples, 0.03%)</title><rect x="661.0" y="723.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="664.0" y="734.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (2 samples, 0.03%)</title><rect x="661.0" y="707.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="664.0" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2 samples, 0.03%)</title><rect x="661.0" y="691.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="664.0" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2 samples, 0.03%)</title><rect x="661.0" y="675.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="664.0" y="686.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (2 samples, 0.03%)</title><rect x="661.0" y="659.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="664.0" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (2 samples, 0.03%)</title><rect x="661.0" y="643.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="664.0" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (2 samples, 0.03%)</title><rect x="661.0" y="627.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="664.0" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (2 samples, 0.03%)</title><rect x="661.0" y="611.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="664.0" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.sendResponse (261 samples, 4.47%)</title><rect x="661.4" y="851.0" width="52.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="664.4" y="862.0">ru/ma..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (261 samples, 4.47%)</title><rect x="661.4" y="835.0" width="52.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="664.4" y="846.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (255 samples, 4.37%)</title><rect x="662.2" y="819.0" width="51.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="665.2" y="830.0">one/n..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (7 samples, 0.12%)</title><rect x="662.2" y="803.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="665.2" y="814.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (6 samples, 0.10%)</title><rect x="662.4" y="787.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="665.4" y="798.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.ensureCapacity (6 samples, 0.10%)</title><rect x="662.4" y="771.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="665.4" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (248 samples, 4.25%)</title><rect x="663.6" y="803.0" width="50.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="666.6" y="814.0">one/n..</text>
</g>
<g>
<title>one/nio/net/Session.write (248 samples, 4.25%)</title><rect x="663.6" y="787.0" width="50.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="666.6" y="798.0">one/n..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (248 samples, 4.25%)</title><rect x="663.6" y="771.0" width="50.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="666.6" y="782.0">one/n..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (248 samples, 4.25%)</title><rect x="663.6" y="755.0" width="50.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="666.6" y="766.0">one/n..</text>
</g>
<g>
<title>.annobin_send.c (243 samples, 4.16%)</title><rect x="664.5" y="739.0" width="49.1" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="667.5" y="750.0">.anno..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (240 samples, 4.11%)</title><rect x="665.1" y="723.0" width="48.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="668.1" y="734.0">entr..</text>
</g>
<g>
<title>do_syscall_64 (240 samples, 4.11%)</title><rect x="665.1" y="707.0" width="48.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="668.1" y="718.0">do_s..</text>
</g>
<g>
<title>__x64_sys_sendto (235 samples, 4.02%)</title><rect x="666.1" y="691.0" width="47.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="669.1" y="702.0">__x6..</text>
</g>
<g>
<title>__sys_sendto (235 samples, 4.02%)</title><rect x="666.1" y="675.0" width="47.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="669.1" y="686.0">__sy..</text>
</g>
<g>
<title>fput_many (2 samples, 0.03%)</title><rect x="666.3" y="659.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="669.3" y="670.0"></text>
</g>
<g>
<title>sock_sendmsg (224 samples, 3.84%)</title><rect x="666.9" y="659.0" width="45.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="669.9" y="670.0">sock..</text>
</g>
<g>
<title>tcp_sendmsg (222 samples, 3.80%)</title><rect x="667.3" y="643.0" width="44.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="670.3" y="654.0">tcp_..</text>
</g>
<g>
<title>release_sock (7 samples, 0.12%)</title><rect x="667.3" y="627.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="670.3" y="638.0"></text>
</g>
<g>
<title>__release_sock (6 samples, 0.10%)</title><rect x="667.3" y="611.0" width="1.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="670.3" y="622.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (4 samples, 0.07%)</title><rect x="667.7" y="595.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="670.7" y="606.0"></text>
</g>
<g>
<title>tcp_rcv_established (4 samples, 0.07%)</title><rect x="667.7" y="579.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="670.7" y="590.0"></text>
</g>
<g>
<title>tcp_ack (2 samples, 0.03%)</title><rect x="667.9" y="563.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="670.9" y="574.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (215 samples, 3.68%)</title><rect x="668.7" y="627.0" width="43.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="671.7" y="638.0">tcp_..</text>
</g>
<g>
<title>__tcp_push_pending_frames (200 samples, 3.42%)</title><rect x="669.5" y="611.0" width="40.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="672.5" y="622.0">__t..</text>
</g>
<g>
<title>tcp_write_xmit (200 samples, 3.42%)</title><rect x="669.5" y="595.0" width="40.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="672.5" y="606.0">tcp..</text>
</g>
<g>
<title>__tcp_transmit_skb (196 samples, 3.36%)</title><rect x="669.5" y="579.0" width="39.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="672.5" y="590.0">__t..</text>
</g>
<g>
<title>__ip_queue_xmit (190 samples, 3.25%)</title><rect x="670.1" y="563.0" width="38.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="673.1" y="574.0">__i..</text>
</g>
<g>
<title>ip_local_out (37 samples, 0.63%)</title><rect x="670.7" y="547.0" width="7.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="673.7" y="558.0"></text>
</g>
<g>
<title>__ip_local_out (37 samples, 0.63%)</title><rect x="670.7" y="531.0" width="7.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="673.7" y="542.0"></text>
</g>
<g>
<title>nf_hook_slow (36 samples, 0.62%)</title><rect x="670.9" y="515.0" width="7.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="673.9" y="526.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (12 samples, 0.21%)</title><rect x="670.9" y="499.0" width="2.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="673.9" y="510.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (2 samples, 0.03%)</title><rect x="673.3" y="499.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="676.3" y="510.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (2 samples, 0.03%)</title><rect x="673.3" y="483.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="676.3" y="494.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (16 samples, 0.27%)</title><rect x="674.2" y="499.0" width="3.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="677.2" y="510.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get	[nf_conntrack] (9 samples, 0.15%)</title><rect x="674.2" y="483.0" width="1.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="677.2" y="494.0"></text>
</g>
<g>
<title>hash_conntrack_raw	[nf_conntrack] (2 samples, 0.03%)</title><rect x="676.0" y="483.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="679.0" y="494.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet	[nf_conntrack] (4 samples, 0.07%)</title><rect x="676.4" y="483.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="679.4" y="494.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn	[nf_nat] (2 samples, 0.03%)</title><rect x="677.4" y="499.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="680.4" y="510.0"></text>
</g>
<g>
<title>selinux_ipv4_output (2 samples, 0.03%)</title><rect x="677.8" y="499.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="680.8" y="510.0"></text>
</g>
<g>
<title>ip_output (150 samples, 2.57%)</title><rect x="678.2" y="547.0" width="30.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="681.2" y="558.0">ip..</text>
</g>
<g>
<title>ip_finish_output2 (146 samples, 2.50%)</title><rect x="678.6" y="531.0" width="29.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="681.6" y="542.0">ip..</text>
</g>
<g>
<title>__dev_queue_xmit (7 samples, 0.12%)</title><rect x="679.6" y="515.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="682.6" y="526.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (6 samples, 0.10%)</title><rect x="679.8" y="499.0" width="1.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="682.8" y="510.0"></text>
</g>
<g>
<title>loopback_xmit (6 samples, 0.10%)</title><rect x="679.8" y="483.0" width="1.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="682.8" y="494.0"></text>
</g>
<g>
<title>tcp_wfree (3 samples, 0.05%)</title><rect x="680.4" y="467.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="683.4" y="478.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (134 samples, 2.29%)</title><rect x="681.0" y="515.0" width="27.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="684.0" y="526.0">_..</text>
</g>
<g>
<title>do_softirq.part.0 (134 samples, 2.29%)</title><rect x="681.0" y="499.0" width="27.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="684.0" y="510.0">d..</text>
</g>
<g>
<title>do_softirq_own_stack (133 samples, 2.28%)</title><rect x="681.2" y="483.0" width="26.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="684.2" y="494.0">d..</text>
</g>
<g>
<title>__softirqentry_text_start (133 samples, 2.28%)</title><rect x="681.2" y="467.0" width="26.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="684.2" y="478.0">_..</text>
</g>
<g>
<title>net_rx_action (133 samples, 2.28%)</title><rect x="681.2" y="451.0" width="26.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="684.2" y="462.0">n..</text>
</g>
<g>
<title>process_backlog (131 samples, 2.24%)</title><rect x="681.6" y="435.0" width="26.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="684.6" y="446.0">p..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (130 samples, 2.23%)</title><rect x="681.8" y="419.0" width="26.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="684.8" y="430.0">_..</text>
</g>
<g>
<title>ip_rcv (129 samples, 2.21%)</title><rect x="682.0" y="403.0" width="26.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="685.0" y="414.0">i..</text>
</g>
<g>
<title>ip_local_deliver (98 samples, 1.68%)</title><rect x="682.0" y="387.0" width="19.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="685.0" y="398.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (90 samples, 1.54%)</title><rect x="682.2" y="371.0" width="18.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="685.2" y="382.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (90 samples, 1.54%)</title><rect x="682.2" y="355.0" width="18.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="685.2" y="366.0"></text>
</g>
<g>
<title>tcp_v4_rcv (89 samples, 1.52%)</title><rect x="682.4" y="339.0" width="18.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="685.4" y="350.0"></text>
</g>
<g>
<title>__inet_lookup_established (6 samples, 0.10%)</title><rect x="683.0" y="323.0" width="1.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="686.0" y="334.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (3 samples, 0.05%)</title><rect x="684.3" y="323.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="687.3" y="334.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (2 samples, 0.03%)</title><rect x="684.5" y="307.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="687.5" y="318.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (2 samples, 0.03%)</title><rect x="684.5" y="291.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="687.5" y="302.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (74 samples, 1.27%)</title><rect x="685.1" y="323.0" width="14.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="688.1" y="334.0"></text>
</g>
<g>
<title>tcp_rcv_established (74 samples, 1.27%)</title><rect x="685.1" y="307.0" width="14.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="688.1" y="318.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (28 samples, 0.48%)</title><rect x="685.5" y="291.0" width="5.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="688.5" y="302.0"></text>
</g>
<g>
<title>__ip_queue_xmit (25 samples, 0.43%)</title><rect x="685.7" y="275.0" width="5.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="688.7" y="286.0"></text>
</g>
<g>
<title>ip_local_out (18 samples, 0.31%)</title><rect x="685.7" y="259.0" width="3.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="688.7" y="270.0"></text>
</g>
<g>
<title>__ip_local_out (17 samples, 0.29%)</title><rect x="685.9" y="243.0" width="3.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="688.9" y="254.0"></text>
</g>
<g>
<title>nf_hook_slow (17 samples, 0.29%)</title><rect x="685.9" y="227.0" width="3.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="688.9" y="238.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (6 samples, 0.10%)</title><rect x="686.1" y="211.0" width="1.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="689.1" y="222.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (3 samples, 0.05%)</title><rect x="687.3" y="211.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="690.3" y="222.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag	[nf_defrag_ipv4] (2 samples, 0.03%)</title><rect x="688.1" y="211.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="691.1" y="222.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (3 samples, 0.05%)</title><rect x="688.5" y="211.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="691.5" y="222.0"></text>
</g>
<g>
<title>ip_output (7 samples, 0.12%)</title><rect x="689.3" y="259.0" width="1.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="692.3" y="270.0"></text>
</g>
<g>
<title>ip_finish_output2 (4 samples, 0.07%)</title><rect x="689.5" y="243.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="692.5" y="254.0"></text>
</g>
<g>
<title>__dev_queue_xmit (3 samples, 0.05%)</title><rect x="689.7" y="227.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="692.7" y="238.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (2 samples, 0.03%)</title><rect x="689.9" y="211.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="692.9" y="222.0"></text>
</g>
<g>
<title>loopback_xmit (2 samples, 0.03%)</title><rect x="689.9" y="195.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="692.9" y="206.0"></text>
</g>
<g>
<title>nf_hook_slow (2 samples, 0.03%)</title><rect x="690.3" y="243.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="693.3" y="254.0"></text>
</g>
<g>
<title>tcp_ack (24 samples, 0.41%)</title><rect x="691.1" y="291.0" width="4.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="694.1" y="302.0"></text>
</g>
<g>
<title>__kfree_skb (5 samples, 0.09%)</title><rect x="692.3" y="275.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="695.3" y="286.0"></text>
</g>
<g>
<title>kfree (2 samples, 0.03%)</title><rect x="692.3" y="259.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="695.3" y="270.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.03%)</title><rect x="692.9" y="259.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="695.9" y="270.0"></text>
</g>
<g>
<title>kmem_cache_free (2 samples, 0.03%)</title><rect x="693.8" y="275.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="696.8" y="286.0"></text>
</g>
<g>
<title>__slab_free (2 samples, 0.03%)</title><rect x="693.8" y="259.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="696.8" y="270.0"></text>
</g>
<g>
<title>rb_first (2 samples, 0.03%)</title><rect x="694.2" y="275.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="697.2" y="286.0"></text>
</g>
<g>
<title>tcp_rearm_rto (4 samples, 0.07%)</title><rect x="694.8" y="275.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="697.8" y="286.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (2 samples, 0.03%)</title><rect x="695.6" y="275.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="698.6" y="286.0"></text>
</g>
<g>
<title>tcp_data_queue (19 samples, 0.33%)</title><rect x="696.0" y="291.0" width="3.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="699.0" y="302.0"></text>
</g>
<g>
<title>dst_release (2 samples, 0.03%)</title><rect x="696.2" y="275.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="699.2" y="286.0"></text>
</g>
<g>
<title>sock_def_readable (14 samples, 0.24%)</title><rect x="696.6" y="275.0" width="2.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="699.6" y="286.0"></text>
</g>
<g>
<title>__wake_up_common_lock (12 samples, 0.21%)</title><rect x="697.0" y="259.0" width="2.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="700.0" y="270.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (12 samples, 0.21%)</title><rect x="697.0" y="243.0" width="2.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="700.0" y="254.0"></text>
</g>
<g>
<title>tcp_queue_rcv (2 samples, 0.03%)</title><rect x="699.4" y="275.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="702.4" y="286.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (2 samples, 0.03%)</title><rect x="700.0" y="323.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="703.0" y="334.0"></text>
</g>
<g>
<title>nf_hook_slow (7 samples, 0.12%)</title><rect x="700.4" y="371.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="703.4" y="382.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (7 samples, 0.12%)</title><rect x="700.4" y="355.0" width="1.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="703.4" y="366.0"></text>
</g>
<g>
<title>ip_rcv_finish (3 samples, 0.05%)</title><rect x="701.8" y="387.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="704.8" y="398.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.0 (2 samples, 0.03%)</title><rect x="702.0" y="371.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="705.0" y="382.0"></text>
</g>
<g>
<title>nf_hook_slow (28 samples, 0.48%)</title><rect x="702.4" y="387.0" width="5.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="705.4" y="398.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (22 samples, 0.38%)</title><rect x="702.8" y="371.0" width="4.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="705.8" y="382.0"></text>
</g>
<g>
<title>iptable_raw_hook	[iptable_raw] (3 samples, 0.05%)</title><rect x="707.3" y="371.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="710.3" y="382.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (2 samples, 0.03%)</title><rect x="709.3" y="579.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="712.3" y="590.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (6 samples, 0.10%)</title><rect x="710.1" y="611.0" width="1.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="713.1" y="622.0"></text>
</g>
<g>
<title>__alloc_skb (5 samples, 0.09%)</title><rect x="710.3" y="595.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="713.3" y="606.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (2 samples, 0.03%)</title><rect x="710.5" y="579.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="713.5" y="590.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (2 samples, 0.03%)</title><rect x="710.5" y="563.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="713.5" y="574.0"></text>
</g>
<g>
<title>tcp_send_mss (3 samples, 0.05%)</title><rect x="711.5" y="611.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="714.5" y="622.0"></text>
</g>
<g>
<title>tcp_current_mss (3 samples, 0.05%)</title><rect x="711.5" y="595.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="714.5" y="606.0"></text>
</g>
<g>
<title>sockfd_lookup_light (7 samples, 0.12%)</title><rect x="712.1" y="659.0" width="1.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="715.1" y="670.0"></text>
</g>
<g>
<title>__fget_light (6 samples, 0.10%)</title><rect x="712.3" y="643.0" width="1.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="715.3" y="654.0"></text>
</g>
<g>
<title>__fget (5 samples, 0.09%)</title><rect x="712.5" y="627.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="715.5" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/Value.from (4 samples, 0.07%)</title><rect x="714.2" y="851.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="717.2" y="862.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (3 samples, 0.05%)</title><rect x="714.2" y="835.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="717.2" y="846.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (3 samples, 0.05%)</title><rect x="714.2" y="819.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="717.2" y="830.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (3 samples, 0.05%)</title><rect x="714.2" y="803.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="717.2" y="814.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (3 samples, 0.05%)</title><rect x="714.2" y="787.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="717.2" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.05%)</title><rect x="714.2" y="771.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="717.2" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.05%)</title><rect x="714.2" y="755.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="717.2" y="766.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (3 samples, 0.05%)</title><rect x="714.2" y="739.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="717.2" y="750.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (2 samples, 0.03%)</title><rect x="714.2" y="723.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="717.2" y="734.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (2 samples, 0.03%)</title><rect x="714.2" y="707.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="717.2" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/Value.transform (6 samples, 0.10%)</title><rect x="715.0" y="851.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="718.0" y="862.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/623247230.linkToTargetMethod (4 samples, 0.07%)</title><rect x="715.2" y="835.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="718.2" y="846.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1324348505.invoke (4 samples, 0.07%)</title><rect x="715.2" y="819.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="718.2" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1332210474.invokeStatic (2 samples, 0.03%)</title><rect x="715.2" y="803.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="718.2" y="814.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (2 samples, 0.03%)</title><rect x="715.2" y="787.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="718.2" y="798.0"></text>
</g>
<g>
<title>java/lang/Long.getChars (2 samples, 0.03%)</title><rect x="715.2" y="771.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="718.2" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1760126453.invokeStatic (2 samples, 0.03%)</title><rect x="715.6" y="803.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="718.6" y="814.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.mixLen (2 samples, 0.03%)</title><rect x="715.6" y="787.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="718.6" y="798.0"></text>
</g>
<g>
<title>java/lang/Long.stringSize (2 samples, 0.03%)</title><rect x="715.6" y="771.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="718.6" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.exec (606 samples, 10.38%)</title><rect x="716.2" y="915.0" width="122.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="719.2" y="926.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (606 samples, 10.38%)</title><rect x="716.2" y="899.0" width="122.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="719.2" y="910.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (12 samples, 0.21%)</title><rect x="716.2" y="883.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="719.2" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (11 samples, 0.19%)</title><rect x="716.4" y="867.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="719.4" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (11 samples, 0.19%)</title><rect x="716.4" y="851.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="719.4" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (10 samples, 0.17%)</title><rect x="716.4" y="835.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="719.4" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (10 samples, 0.17%)</title><rect x="716.4" y="819.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="719.4" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (10 samples, 0.17%)</title><rect x="716.4" y="803.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="719.4" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (9 samples, 0.15%)</title><rect x="716.6" y="787.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="719.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (9 samples, 0.15%)</title><rect x="716.6" y="771.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="719.6" y="782.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (9 samples, 0.15%)</title><rect x="716.6" y="755.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="719.6" y="766.0"></text>
</g>
<g>
<title>__pthread_cond_signal (7 samples, 0.12%)</title><rect x="717.0" y="739.0" width="1.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="720.0" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.07%)</title><rect x="717.6" y="723.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="720.6" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.07%)</title><rect x="717.6" y="707.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="720.6" y="718.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.07%)</title><rect x="717.6" y="691.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="720.6" y="702.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.07%)</title><rect x="717.6" y="675.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="720.6" y="686.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 0.07%)</title><rect x="717.6" y="659.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="720.6" y="670.0"></text>
</g>
<g>
<title>wake_up_q (4 samples, 0.07%)</title><rect x="717.6" y="643.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="720.6" y="654.0"></text>
</g>
<g>
<title>try_to_wake_up (4 samples, 0.07%)</title><rect x="717.6" y="627.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="720.6" y="638.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.07%)</title><rect x="717.6" y="611.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="720.6" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService$$Lambda$111/1101527014.get (594 samples, 10.17%)</title><rect x="718.6" y="883.0" width="120.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="721.6" y="894.0">ru/mail/polis/s..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.lambda$handleLocally$24 (594 samples, 10.17%)</title><rect x="718.6" y="867.0" width="120.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="721.6" y="878.0">ru/mail/polis/s..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService$$Lambda$251/911454777.run (593 samples, 10.15%)</title><rect x="718.8" y="851.0" width="119.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="721.8" y="862.0">ru/mail/polis/s..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.lambda$get$2 (593 samples, 10.15%)</title><rect x="718.8" y="835.0" width="119.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="721.8" y="846.0">ru/mail/polis/s..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.getFromDao (593 samples, 10.15%)</title><rect x="718.8" y="819.0" width="119.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="721.8" y="830.0">ru/mail/polis/s..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.getCell (585 samples, 10.02%)</title><rect x="719.8" y="803.0" width="118.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="722.8" y="814.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (42 samples, 0.72%)</title><rect x="720.0" y="787.0" width="8.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="723.0" y="798.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (37 samples, 0.63%)</title><rect x="720.2" y="771.0" width="7.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="723.2" y="782.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (29 samples, 0.50%)</title><rect x="720.2" y="755.0" width="5.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="723.2" y="766.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (29 samples, 0.50%)</title><rect x="720.2" y="739.0" width="5.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="723.2" y="750.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (29 samples, 0.50%)</title><rect x="720.2" y="723.0" width="5.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="723.2" y="734.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (28 samples, 0.48%)</title><rect x="720.4" y="707.0" width="5.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="723.4" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (28 samples, 0.48%)</title><rect x="720.4" y="691.0" width="5.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="723.4" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$259/1748041147.compare (27 samples, 0.46%)</title><rect x="720.6" y="675.0" width="5.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="723.6" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (27 samples, 0.46%)</title><rect x="720.6" y="659.0" width="5.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="723.6" y="670.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$124/2130957928.compare (27 samples, 0.46%)</title><rect x="720.6" y="643.0" width="5.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="723.6" y="654.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (27 samples, 0.46%)</title><rect x="720.6" y="627.0" width="5.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="723.6" y="638.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$122/124600919.compare (4 samples, 0.07%)</title><rect x="720.6" y="611.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="723.6" y="622.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (4 samples, 0.07%)</title><rect x="720.6" y="595.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="723.6" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$121/1316220837.apply (4 samples, 0.07%)</title><rect x="720.6" y="579.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="723.6" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (4 samples, 0.07%)</title><rect x="720.6" y="563.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="723.6" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (3 samples, 0.05%)</title><rect x="720.8" y="547.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="723.8" y="558.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (3 samples, 0.05%)</title><rect x="720.8" y="531.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="723.8" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.05%)</title><rect x="720.8" y="515.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="723.8" y="526.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.05%)</title><rect x="720.8" y="499.0" width="0.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="723.8" y="510.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$124/2130957928.compare (23 samples, 0.39%)</title><rect x="721.4" y="611.0" width="4.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="724.4" y="622.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (23 samples, 0.39%)</title><rect x="721.4" y="595.0" width="4.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="724.4" y="606.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$122/124600919.compare (23 samples, 0.39%)</title><rect x="721.4" y="579.0" width="4.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="724.4" y="590.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (23 samples, 0.39%)</title><rect x="721.4" y="563.0" width="4.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="724.4" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (16 samples, 0.27%)</title><rect x="721.6" y="547.0" width="3.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="724.6" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (15 samples, 0.26%)</title><rect x="721.8" y="531.0" width="3.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="724.8" y="542.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (12 samples, 0.21%)</title><rect x="721.8" y="515.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="724.8" y="526.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (5 samples, 0.09%)</title><rect x="722.8" y="499.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="725.8" y="510.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (4 samples, 0.07%)</title><rect x="722.8" y="483.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="725.8" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (3 samples, 0.05%)</title><rect x="724.3" y="515.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="727.3" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$121/1316220837.apply (6 samples, 0.10%)</title><rect x="724.9" y="547.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="727.9" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (6 samples, 0.10%)</title><rect x="724.9" y="531.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="727.9" y="542.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (3 samples, 0.05%)</title><rect x="725.1" y="515.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="728.1" y="526.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (2 samples, 0.03%)</title><rect x="725.3" y="499.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="728.3" y="510.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (2 samples, 0.03%)</title><rect x="725.3" y="483.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="728.3" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (2 samples, 0.03%)</title><rect x="725.7" y="515.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="728.7" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (8 samples, 0.14%)</title><rect x="726.1" y="755.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="729.1" y="766.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (8 samples, 0.14%)</title><rect x="726.1" y="739.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="729.1" y="750.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (8 samples, 0.14%)</title><rect x="726.1" y="723.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="729.1" y="734.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (8 samples, 0.14%)</title><rect x="726.1" y="707.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="729.1" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (8 samples, 0.14%)</title><rect x="726.1" y="691.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="729.1" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (8 samples, 0.14%)</title><rect x="726.1" y="675.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="729.1" y="686.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (4 samples, 0.07%)</title><rect x="726.3" y="659.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="729.3" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (4 samples, 0.07%)</title><rect x="726.3" y="643.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="729.3" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (4 samples, 0.07%)</title><rect x="726.3" y="627.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="729.3" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (4 samples, 0.07%)</title><rect x="726.3" y="611.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="729.3" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$259/1748041147.compare (3 samples, 0.05%)</title><rect x="727.1" y="659.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="730.1" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (3 samples, 0.05%)</title><rect x="727.1" y="643.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="730.1" y="654.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$124/2130957928.compare (3 samples, 0.05%)</title><rect x="727.1" y="627.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="730.1" y="638.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (3 samples, 0.05%)</title><rect x="727.1" y="611.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="730.1" y="622.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$124/2130957928.compare (3 samples, 0.05%)</title><rect x="727.1" y="595.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="730.1" y="606.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (3 samples, 0.05%)</title><rect x="727.1" y="579.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="730.1" y="590.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$122/124600919.compare (3 samples, 0.05%)</title><rect x="727.1" y="563.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="730.1" y="574.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (3 samples, 0.05%)</title><rect x="727.1" y="547.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="730.1" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.03%)</title><rect x="727.1" y="531.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="730.1" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$260/2021873169.apply (3 samples, 0.05%)</title><rect x="727.9" y="771.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="730.9" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (2 samples, 0.03%)</title><rect x="728.1" y="755.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="731.1" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.rowsIterator (541 samples, 9.26%)</title><rect x="728.5" y="787.0" width="109.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="731.5" y="798.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (471 samples, 8.07%)</title><rect x="728.5" y="771.0" width="95.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="731.5" y="782.0">ru/mail/pol..</text>
</g>
<g>
<title>java/util/TreeMap.descendingMap (3 samples, 0.05%)</title><rect x="728.9" y="755.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="731.9" y="766.0"></text>
</g>
<g>
<title>java/util/TreeMap$DescendingSubMap.&lt;init&gt; (3 samples, 0.05%)</title><rect x="728.9" y="739.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="731.9" y="750.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap.&lt;init&gt; (3 samples, 0.05%)</title><rect x="728.9" y="723.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="731.9" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.next (17 samples, 0.29%)</title><rect x="729.5" y="755.0" width="3.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="732.5" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (17 samples, 0.29%)</title><rect x="729.5" y="739.0" width="3.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="732.5" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.descend (17 samples, 0.29%)</title><rect x="729.5" y="723.0" width="3.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="732.5" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (16 samples, 0.27%)</title><rect x="729.7" y="707.0" width="3.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="732.7" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (10 samples, 0.17%)</title><rect x="730.9" y="691.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="733.9" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (2 samples, 0.03%)</title><rect x="732.5" y="675.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="735.5" y="686.0"></text>
</g>
<g>
<title>java/lang/Long.compareTo (2 samples, 0.03%)</title><rect x="732.5" y="659.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="735.5" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.iterator (19 samples, 0.33%)</title><rect x="733.4" y="755.0" width="3.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="736.4" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (3 samples, 0.05%)</title><rect x="733.4" y="739.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="736.4" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (3 samples, 0.05%)</title><rect x="733.4" y="723.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="736.4" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (3 samples, 0.05%)</title><rect x="733.4" y="707.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="736.4" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (15 samples, 0.26%)</title><rect x="734.0" y="739.0" width="3.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="737.0" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.iterator (13 samples, 0.22%)</title><rect x="734.4" y="723.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="737.4" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (11 samples, 0.19%)</title><rect x="734.4" y="707.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="737.4" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (11 samples, 0.19%)</title><rect x="734.4" y="691.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="737.4" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (11 samples, 0.19%)</title><rect x="734.4" y="675.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="737.4" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (11 samples, 0.19%)</title><rect x="734.4" y="659.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="737.4" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (11 samples, 0.19%)</title><rect x="734.4" y="643.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="737.4" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (10 samples, 0.17%)</title><rect x="734.6" y="627.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="737.6" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (4 samples, 0.07%)</title><rect x="735.6" y="611.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="738.6" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 0.07%)</title><rect x="735.6" y="595.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="738.6" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (3 samples, 0.05%)</title><rect x="735.8" y="579.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="738.8" y="590.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.03%)</title><rect x="736.0" y="563.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="739.0" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (2 samples, 0.03%)</title><rect x="736.6" y="707.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="739.6" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.iterator (428 samples, 7.33%)</title><rect x="737.2" y="755.0" width="86.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="740.2" y="766.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.&lt;init&gt; (428 samples, 7.33%)</title><rect x="737.2" y="739.0" width="86.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="740.2" y="750.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.position (428 samples, 7.33%)</title><rect x="737.2" y="723.0" width="86.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="740.2" y="734.0">ru/mail/po..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (61 samples, 1.04%)</title><rect x="740.8" y="707.0" width="12.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="743.8" y="718.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (2 samples, 0.03%)</title><rect x="742.0" y="691.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="745.0" y="702.0"></text>
</g>
<g>
<title>java/nio/Buffer.remaining (3 samples, 0.05%)</title><rect x="742.4" y="691.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="745.4" y="702.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (45 samples, 0.77%)</title><rect x="743.1" y="691.0" width="9.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="746.1" y="702.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (10 samples, 0.17%)</title><rect x="749.1" y="675.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="752.1" y="686.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (9 samples, 0.15%)</title><rect x="749.1" y="659.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="752.1" y="670.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (4 samples, 0.07%)</title><rect x="751.1" y="675.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="754.1" y="686.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (3 samples, 0.05%)</title><rect x="751.1" y="659.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="754.1" y="670.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (4 samples, 0.07%)</title><rect x="752.1" y="691.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="755.1" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (177 samples, 3.03%)</title><rect x="753.2" y="707.0" width="35.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="756.2" y="718.0">ru/..</text>
</g>
<g>
<title>java/nio/DirectByteBuffer.getInt (80 samples, 1.37%)</title><rect x="753.4" y="691.0" width="16.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="756.4" y="702.0"></text>
</g>
<g>
<title>java/nio/Buffer.nextGetIndex (3 samples, 0.05%)</title><rect x="753.4" y="675.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="756.4" y="686.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.getInt (77 samples, 1.32%)</title><rect x="754.0" y="675.0" width="15.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="757.0" y="686.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getIntUnaligned (77 samples, 1.32%)</title><rect x="754.0" y="659.0" width="15.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="757.0" y="670.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.convEndian (76 samples, 1.30%)</title><rect x="754.2" y="643.0" width="15.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="757.2" y="654.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (55 samples, 0.94%)</title><rect x="769.5" y="691.0" width="11.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="772.5" y="702.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (55 samples, 0.94%)</title><rect x="769.5" y="675.0" width="11.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="772.5" y="686.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (52 samples, 0.89%)</title><rect x="770.1" y="659.0" width="10.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="773.1" y="670.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (52 samples, 0.89%)</title><rect x="770.1" y="643.0" width="10.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="773.1" y="654.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (52 samples, 0.89%)</title><rect x="770.1" y="627.0" width="10.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="773.1" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (52 samples, 0.89%)</title><rect x="770.1" y="611.0" width="10.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="773.1" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (52 samples, 0.89%)</title><rect x="770.1" y="595.0" width="10.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="773.1" y="606.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (25 samples, 0.43%)</title><rect x="774.8" y="579.0" width="5.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="777.8" y="590.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (8 samples, 0.14%)</title><rect x="775.2" y="563.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="778.2" y="574.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (6 samples, 0.10%)</title><rect x="775.6" y="547.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="778.6" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (5 samples, 0.09%)</title><rect x="775.8" y="531.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="778.8" y="542.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (5 samples, 0.09%)</title><rect x="775.8" y="515.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="778.8" y="526.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (15 samples, 0.26%)</title><rect x="776.8" y="563.0" width="3.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="779.8" y="574.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (7 samples, 0.12%)</title><rect x="778.0" y="547.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="781.0" y="558.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (2 samples, 0.03%)</title><rect x="779.4" y="547.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="782.4" y="558.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (3 samples, 0.05%)</title><rect x="779.8" y="579.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="782.8" y="590.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (35 samples, 0.60%)</title><rect x="780.6" y="691.0" width="7.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="783.6" y="702.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (31 samples, 0.53%)</title><rect x="781.4" y="675.0" width="6.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="784.4" y="686.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (31 samples, 0.53%)</title><rect x="781.4" y="659.0" width="6.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="784.4" y="670.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (30 samples, 0.51%)</title><rect x="781.6" y="643.0" width="6.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="784.6" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (30 samples, 0.51%)</title><rect x="781.6" y="627.0" width="6.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="784.6" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (30 samples, 0.51%)</title><rect x="781.6" y="611.0" width="6.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="784.6" y="622.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (21 samples, 0.36%)</title><rect x="783.1" y="595.0" width="4.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="786.1" y="606.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (6 samples, 0.10%)</title><rect x="784.3" y="579.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="787.3" y="590.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (6 samples, 0.10%)</title><rect x="784.3" y="563.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="787.3" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.07%)</title><rect x="784.7" y="547.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="787.7" y="558.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (4 samples, 0.07%)</title><rect x="784.7" y="531.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="787.7" y="542.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (9 samples, 0.15%)</title><rect x="785.5" y="579.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="788.5" y="590.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (9 samples, 0.15%)</title><rect x="785.5" y="563.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="788.5" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (3 samples, 0.05%)</title><rect x="786.1" y="547.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="789.1" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (3 samples, 0.05%)</title><rect x="786.7" y="547.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="789.7" y="558.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (3 samples, 0.05%)</title><rect x="786.7" y="531.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="789.7" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.03%)</title><rect x="787.3" y="595.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="790.3" y="606.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (6 samples, 0.10%)</title><rect x="787.7" y="691.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="790.7" y="702.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (6 samples, 0.10%)</title><rect x="787.7" y="675.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="790.7" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (6 samples, 0.10%)</title><rect x="787.7" y="659.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="790.7" y="670.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (6 samples, 0.10%)</title><rect x="787.7" y="643.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="790.7" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (172 samples, 2.95%)</title><rect x="788.9" y="707.0" width="34.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="791.9" y="718.0">ru..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (46 samples, 0.79%)</title><rect x="792.4" y="691.0" width="9.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="795.4" y="702.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (46 samples, 0.79%)</title><rect x="792.4" y="675.0" width="9.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="795.4" y="686.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (2 samples, 0.03%)</title><rect x="793.6" y="659.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="796.6" y="670.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (38 samples, 0.65%)</title><rect x="794.0" y="659.0" width="7.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="797.0" y="670.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (35 samples, 0.60%)</title><rect x="794.6" y="643.0" width="7.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="797.6" y="654.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (33 samples, 0.57%)</title><rect x="795.0" y="627.0" width="6.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="798.0" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (33 samples, 0.57%)</title><rect x="795.0" y="611.0" width="6.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="798.0" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (33 samples, 0.57%)</title><rect x="795.0" y="595.0" width="6.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="798.0" y="606.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (16 samples, 0.27%)</title><rect x="798.4" y="579.0" width="3.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="801.4" y="590.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (9 samples, 0.15%)</title><rect x="799.2" y="563.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="802.2" y="574.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (9 samples, 0.15%)</title><rect x="799.2" y="547.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="802.2" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (6 samples, 0.10%)</title><rect x="799.8" y="531.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="802.8" y="542.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (6 samples, 0.10%)</title><rect x="799.8" y="515.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="802.8" y="526.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (3 samples, 0.05%)</title><rect x="801.0" y="563.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="804.0" y="574.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (3 samples, 0.05%)</title><rect x="801.0" y="547.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="804.0" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (3 samples, 0.05%)</title><rect x="801.0" y="531.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="804.0" y="542.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (3 samples, 0.05%)</title><rect x="801.0" y="515.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="804.0" y="526.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (39 samples, 0.67%)</title><rect x="801.7" y="691.0" width="7.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="804.7" y="702.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (36 samples, 0.62%)</title><rect x="802.3" y="675.0" width="7.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="805.3" y="686.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (36 samples, 0.62%)</title><rect x="802.3" y="659.0" width="7.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="805.3" y="670.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (35 samples, 0.60%)</title><rect x="802.5" y="643.0" width="7.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="805.5" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (35 samples, 0.60%)</title><rect x="802.5" y="627.0" width="7.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="805.5" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (34 samples, 0.58%)</title><rect x="802.7" y="611.0" width="6.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="805.7" y="622.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (26 samples, 0.45%)</title><rect x="803.3" y="595.0" width="5.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="806.3" y="606.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (11 samples, 0.19%)</title><rect x="803.3" y="579.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="806.3" y="590.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (11 samples, 0.19%)</title><rect x="803.3" y="563.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="806.3" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (11 samples, 0.19%)</title><rect x="803.3" y="547.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="806.3" y="558.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (6 samples, 0.10%)</title><rect x="804.3" y="531.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="807.3" y="542.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (15 samples, 0.26%)</title><rect x="805.5" y="579.0" width="3.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="808.5" y="590.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (15 samples, 0.26%)</title><rect x="805.5" y="563.0" width="3.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="808.5" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (15 samples, 0.26%)</title><rect x="805.5" y="547.0" width="3.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="808.5" y="558.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (2 samples, 0.03%)</title><rect x="808.1" y="531.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="811.1" y="542.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (5 samples, 0.09%)</title><rect x="808.5" y="595.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="811.5" y="606.0"></text>
</g>
<g>
<title>java/nio/DirectLongBufferS.get (63 samples, 1.08%)</title><rect x="809.5" y="691.0" width="12.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="812.5" y="702.0"></text>
</g>
<g>
<title>java/nio/Bits.swap (61 samples, 1.04%)</title><rect x="809.5" y="675.0" width="12.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="812.5" y="686.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (2 samples, 0.03%)</title><rect x="822.3" y="691.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="825.3" y="702.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (2 samples, 0.03%)</title><rect x="822.3" y="675.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="825.3" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.03%)</title><rect x="822.3" y="659.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="825.3" y="670.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (2 samples, 0.03%)</title><rect x="822.3" y="643.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="825.3" y="654.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (5 samples, 0.09%)</title><rect x="822.7" y="691.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="825.7" y="702.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (5 samples, 0.09%)</title><rect x="822.7" y="675.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="825.7" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (5 samples, 0.09%)</title><rect x="822.7" y="659.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="825.7" y="670.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (5 samples, 0.09%)</title><rect x="822.7" y="643.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="825.7" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.reduceIterators (70 samples, 1.20%)</title><rect x="823.7" y="771.0" width="14.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="826.7" y="782.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (59 samples, 1.01%)</title><rect x="823.7" y="755.0" width="11.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="826.7" y="766.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (59 samples, 1.01%)</title><rect x="823.7" y="739.0" width="11.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="826.7" y="750.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (2 samples, 0.03%)</title><rect x="824.1" y="723.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="827.1" y="734.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (55 samples, 0.94%)</title><rect x="824.5" y="723.0" width="11.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="827.5" y="734.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (55 samples, 0.94%)</title><rect x="824.5" y="707.0" width="11.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="827.5" y="718.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.grow (3 samples, 0.05%)</title><rect x="824.9" y="691.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="827.9" y="702.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (50 samples, 0.86%)</title><rect x="825.5" y="691.0" width="10.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="828.5" y="702.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (50 samples, 0.86%)</title><rect x="825.5" y="675.0" width="10.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="828.5" y="686.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (49 samples, 0.84%)</title><rect x="825.7" y="659.0" width="9.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="828.7" y="670.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (49 samples, 0.84%)</title><rect x="825.7" y="643.0" width="9.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="828.7" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (27 samples, 0.46%)</title><rect x="826.5" y="627.0" width="5.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="829.5" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (3 samples, 0.05%)</title><rect x="826.9" y="611.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="829.9" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (22 samples, 0.38%)</title><rect x="827.5" y="611.0" width="4.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="830.5" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (22 samples, 0.38%)</title><rect x="827.5" y="595.0" width="4.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="830.5" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (21 samples, 0.36%)</title><rect x="827.7" y="579.0" width="4.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="830.7" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (7 samples, 0.12%)</title><rect x="827.9" y="563.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="830.9" y="574.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (7 samples, 0.12%)</title><rect x="827.9" y="547.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="830.9" y="558.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (7 samples, 0.12%)</title><rect x="827.9" y="531.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="830.9" y="542.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (6 samples, 0.10%)</title><rect x="828.1" y="515.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="831.1" y="526.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (6 samples, 0.10%)</title><rect x="828.1" y="499.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="831.1" y="510.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (4 samples, 0.07%)</title><rect x="828.5" y="483.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="831.5" y="494.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.07%)</title><rect x="828.5" y="467.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="831.5" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.07%)</title><rect x="828.5" y="451.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="831.5" y="462.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.07%)</title><rect x="828.5" y="435.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="831.5" y="446.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (2 samples, 0.03%)</title><rect x="828.5" y="419.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="831.5" y="430.0"></text>
</g>
<g>
<title>vtable stub (2 samples, 0.03%)</title><rect x="828.9" y="419.0" width="0.4" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="831.9" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (6 samples, 0.10%)</title><rect x="829.3" y="563.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="832.3" y="574.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (2 samples, 0.03%)</title><rect x="829.3" y="547.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="832.3" y="558.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (2 samples, 0.03%)</title><rect x="829.3" y="531.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="832.3" y="542.0"></text>
</g>
<g>
<title>java/nio/DirectLongBufferS.get (4 samples, 0.07%)</title><rect x="829.7" y="547.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="832.7" y="558.0"></text>
</g>
<g>
<title>java/nio/Bits.swap (4 samples, 0.07%)</title><rect x="829.7" y="531.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="832.7" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.timestampAt (5 samples, 0.09%)</title><rect x="830.5" y="563.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="833.5" y="574.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (5 samples, 0.09%)</title><rect x="830.5" y="547.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="833.5" y="558.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (5 samples, 0.09%)</title><rect x="830.5" y="531.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="833.5" y="542.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (4 samples, 0.07%)</title><rect x="830.7" y="515.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="833.7" y="526.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (4 samples, 0.07%)</title><rect x="830.7" y="499.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="833.7" y="510.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (4 samples, 0.07%)</title><rect x="830.7" y="483.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="833.7" y="494.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.07%)</title><rect x="830.7" y="467.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="833.7" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.07%)</title><rect x="830.7" y="451.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="833.7" y="462.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.07%)</title><rect x="830.7" y="435.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="833.7" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.valueAt (2 samples, 0.03%)</title><rect x="831.6" y="563.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="834.6" y="574.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (2 samples, 0.03%)</title><rect x="831.6" y="547.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="834.6" y="558.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (2 samples, 0.03%)</title><rect x="831.6" y="531.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="834.6" y="542.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (2 samples, 0.03%)</title><rect x="831.6" y="515.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="834.6" y="526.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="831.6" y="499.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="834.6" y="510.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="831.6" y="483.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="834.6" y="494.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="831.6" y="467.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="834.6" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="831.6" y="451.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="834.6" y="462.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="831.6" y="435.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="834.6" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$259/1748041147.compare (18 samples, 0.31%)</title><rect x="832.0" y="627.0" width="3.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="835.0" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (18 samples, 0.31%)</title><rect x="832.0" y="611.0" width="3.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="835.0" y="622.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$124/2130957928.compare (18 samples, 0.31%)</title><rect x="832.0" y="595.0" width="3.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="835.0" y="606.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (18 samples, 0.31%)</title><rect x="832.0" y="579.0" width="3.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="835.0" y="590.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$122/124600919.compare (5 samples, 0.09%)</title><rect x="832.0" y="563.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="835.0" y="574.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (5 samples, 0.09%)</title><rect x="832.0" y="547.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="835.0" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$121/1316220837.apply (5 samples, 0.09%)</title><rect x="832.0" y="531.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="835.0" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (5 samples, 0.09%)</title><rect x="832.0" y="515.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="835.0" y="526.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (3 samples, 0.05%)</title><rect x="832.0" y="499.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="835.0" y="510.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (3 samples, 0.05%)</title><rect x="832.0" y="483.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="835.0" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (3 samples, 0.05%)</title><rect x="832.0" y="467.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="835.0" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (3 samples, 0.05%)</title><rect x="832.0" y="451.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="835.0" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (2 samples, 0.03%)</title><rect x="832.6" y="499.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="835.6" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (2 samples, 0.03%)</title><rect x="832.6" y="483.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="835.6" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="832.6" y="467.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="835.6" y="478.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$124/2130957928.compare (13 samples, 0.22%)</title><rect x="833.0" y="563.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="836.0" y="574.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (13 samples, 0.22%)</title><rect x="833.0" y="547.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="836.0" y="558.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$122/124600919.compare (13 samples, 0.22%)</title><rect x="833.0" y="531.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="836.0" y="542.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (13 samples, 0.22%)</title><rect x="833.0" y="515.0" width="2.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="836.0" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (7 samples, 0.12%)</title><rect x="833.0" y="499.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="836.0" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (7 samples, 0.12%)</title><rect x="833.0" y="483.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="836.0" y="494.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (5 samples, 0.09%)</title><rect x="833.2" y="467.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="836.2" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$121/1316220837.apply (5 samples, 0.09%)</title><rect x="834.6" y="499.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="837.6" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (5 samples, 0.09%)</title><rect x="834.6" y="483.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="837.6" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (2 samples, 0.03%)</title><rect x="834.8" y="467.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="837.8" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (2 samples, 0.03%)</title><rect x="834.8" y="451.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="837.8" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (2 samples, 0.03%)</title><rect x="834.8" y="435.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="837.8" y="446.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="834.8" y="419.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="837.8" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (2 samples, 0.03%)</title><rect x="835.2" y="467.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="838.2" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (11 samples, 0.19%)</title><rect x="835.6" y="755.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="838.6" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (11 samples, 0.19%)</title><rect x="835.6" y="739.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="838.6" y="750.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (10 samples, 0.17%)</title><rect x="835.8" y="723.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="838.8" y="734.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (6 samples, 0.10%)</title><rect x="835.8" y="707.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="838.8" y="718.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (6 samples, 0.10%)</title><rect x="835.8" y="691.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="838.8" y="702.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (6 samples, 0.10%)</title><rect x="835.8" y="675.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="838.8" y="686.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (6 samples, 0.10%)</title><rect x="835.8" y="659.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="838.8" y="670.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (6 samples, 0.10%)</title><rect x="835.8" y="643.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="838.8" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$259/1748041147.compare (6 samples, 0.10%)</title><rect x="835.8" y="627.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="838.8" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (6 samples, 0.10%)</title><rect x="835.8" y="611.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="838.8" y="622.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$124/2130957928.compare (6 samples, 0.10%)</title><rect x="835.8" y="595.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="838.8" y="606.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (6 samples, 0.10%)</title><rect x="835.8" y="579.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="838.8" y="590.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$122/124600919.compare (4 samples, 0.07%)</title><rect x="835.8" y="563.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="838.8" y="574.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (4 samples, 0.07%)</title><rect x="835.8" y="547.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="838.8" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$121/1316220837.apply (4 samples, 0.07%)</title><rect x="835.8" y="531.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="838.8" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (4 samples, 0.07%)</title><rect x="835.8" y="515.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="838.8" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (3 samples, 0.05%)</title><rect x="836.0" y="499.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="839.0" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (3 samples, 0.05%)</title><rect x="836.0" y="483.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="839.0" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.05%)</title><rect x="836.0" y="467.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="839.0" y="478.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$124/2130957928.compare (2 samples, 0.03%)</title><rect x="836.6" y="563.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="839.6" y="574.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (2 samples, 0.03%)</title><rect x="836.6" y="547.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="839.6" y="558.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$122/124600919.compare (2 samples, 0.03%)</title><rect x="836.6" y="531.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="839.6" y="542.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (2 samples, 0.03%)</title><rect x="836.6" y="515.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="839.6" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (4 samples, 0.07%)</title><rect x="837.0" y="707.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="840.0" y="718.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (4 samples, 0.07%)</title><rect x="837.0" y="691.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="840.0" y="702.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (4 samples, 0.07%)</title><rect x="837.0" y="675.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="840.0" y="686.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (4 samples, 0.07%)</title><rect x="837.0" y="659.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="840.0" y="670.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (4 samples, 0.07%)</title><rect x="837.0" y="643.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="840.0" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (3 samples, 0.05%)</title><rect x="837.2" y="627.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="840.2" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (2 samples, 0.03%)</title><rect x="837.2" y="611.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="840.2" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (2 samples, 0.03%)</title><rect x="837.2" y="595.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="840.2" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (2 samples, 0.03%)</title><rect x="837.2" y="579.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="840.2" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (2 samples, 0.03%)</title><rect x="837.2" y="563.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="840.2" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/Value.from (3 samples, 0.05%)</title><rect x="838.0" y="803.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="841.0" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (321 samples, 5.50%)</title><rect x="838.6" y="915.0" width="64.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="841.6" y="926.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (149 samples, 2.55%)</title><rect x="838.6" y="899.0" width="30.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="841.6" y="910.0">ja..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService$$Lambda$254/2026265775.apply (149 samples, 2.55%)</title><rect x="838.6" y="883.0" width="30.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="841.6" y="894.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.lambda$get$3 (149 samples, 2.55%)</title><rect x="838.6" y="867.0" width="30.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="841.6" y="878.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.getResponsesFromReplicas (149 samples, 2.55%)</title><rect x="838.6" y="851.0" width="30.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="841.6" y="862.0">ru..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.07%)</title><rect x="839.2" y="835.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="842.2" y="846.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1000975683.invoke (4 samples, 0.07%)</title><rect x="839.2" y="819.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="842.2" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.05%)</title><rect x="839.4" y="803.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="842.4" y="814.0"></text>
</g>
<g>
<title>java/net/URI.create (39 samples, 0.67%)</title><rect x="840.0" y="835.0" width="7.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="843.0" y="846.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (39 samples, 0.67%)</title><rect x="840.0" y="819.0" width="7.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="843.0" y="830.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (39 samples, 0.67%)</title><rect x="840.0" y="803.0" width="7.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="843.0" y="814.0"></text>
</g>
<g>
<title>java/net/URI$Parser.at (5 samples, 0.09%)</title><rect x="840.4" y="787.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="843.4" y="798.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (4 samples, 0.07%)</title><rect x="840.6" y="771.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="843.6" y="782.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (30 samples, 0.51%)</title><rect x="841.7" y="787.0" width="6.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="844.7" y="798.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (23 samples, 0.39%)</title><rect x="842.7" y="771.0" width="4.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="845.7" y="782.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (7 samples, 0.12%)</title><rect x="843.9" y="755.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="846.9" y="766.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChars (2 samples, 0.03%)</title><rect x="843.9" y="739.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="846.9" y="750.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (2 samples, 0.03%)</title><rect x="843.9" y="723.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="846.9" y="734.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.03%)</title><rect x="843.9" y="707.0" width="0.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="846.9" y="718.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (3 samples, 0.05%)</title><rect x="844.3" y="739.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="847.3" y="750.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (3 samples, 0.05%)</title><rect x="844.3" y="723.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="847.3" y="734.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseIPv4Address (2 samples, 0.03%)</title><rect x="844.9" y="739.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="847.9" y="750.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scanIPv4Address (2 samples, 0.03%)</title><rect x="844.9" y="723.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="847.9" y="734.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (2 samples, 0.03%)</title><rect x="844.9" y="707.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="847.9" y="718.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (7 samples, 0.12%)</title><rect x="845.3" y="755.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="848.3" y="766.0"></text>
</g>
<g>
<title>java/lang/String.charAt (5 samples, 0.09%)</title><rect x="845.7" y="739.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="848.7" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (4 samples, 0.07%)</title><rect x="845.7" y="723.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="848.7" y="734.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.03%)</title><rect x="846.7" y="755.0" width="0.4" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="849.7" y="766.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (2 samples, 0.03%)</title><rect x="847.3" y="771.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="850.3" y="782.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest.newBuilder (4 samples, 0.07%)</title><rect x="847.9" y="835.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="850.9" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.&lt;init&gt; (3 samples, 0.05%)</title><rect x="848.1" y="819.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="851.1" y="830.0"></text>
</g>
<g>
<title>java/util/ArrayList$Itr.next (2 samples, 0.03%)</title><rect x="848.7" y="835.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="851.7" y="846.0"></text>
</g>
<g>
<title>java/util/ArrayList.contains (2 samples, 0.03%)</title><rect x="849.1" y="835.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="852.1" y="846.0"></text>
</g>
<g>
<title>java/util/ArrayList.indexOf (2 samples, 0.03%)</title><rect x="849.1" y="819.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="852.1" y="830.0"></text>
</g>
<g>
<title>java/util/ArrayList.indexOfRange (2 samples, 0.03%)</title><rect x="849.1" y="803.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="852.1" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (79 samples, 1.35%)</title><rect x="849.5" y="835.0" width="16.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="852.5" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (79 samples, 1.35%)</title><rect x="849.5" y="819.0" width="16.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="852.5" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (79 samples, 1.35%)</title><rect x="849.5" y="803.0" width="16.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="852.5" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (79 samples, 1.35%)</title><rect x="849.5" y="787.0" width="16.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="852.5" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (38 samples, 0.65%)</title><rect x="850.1" y="771.0" width="7.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="853.1" y="782.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (3 samples, 0.05%)</title><rect x="850.3" y="755.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="853.3" y="766.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (2 samples, 0.03%)</title><rect x="850.5" y="739.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="853.5" y="750.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (2 samples, 0.03%)</title><rect x="850.5" y="723.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="853.5" y="734.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (2 samples, 0.03%)</title><rect x="850.5" y="707.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="853.5" y="718.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (2 samples, 0.03%)</title><rect x="850.5" y="691.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="853.5" y="702.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (5 samples, 0.09%)</title><rect x="851.0" y="755.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="854.0" y="766.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (5 samples, 0.09%)</title><rect x="851.0" y="739.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="854.0" y="750.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.03%)</title><rect x="851.2" y="723.0" width="0.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="854.2" y="734.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (2 samples, 0.03%)</title><rect x="851.6" y="723.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="854.6" y="734.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (2 samples, 0.03%)</title><rect x="851.6" y="707.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="854.6" y="718.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$126/1936481830.accept (2 samples, 0.03%)</title><rect x="851.6" y="691.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="854.6" y="702.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (2 samples, 0.03%)</title><rect x="851.6" y="675.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="854.6" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (29 samples, 0.50%)</title><rect x="852.0" y="755.0" width="5.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="855.0" y="766.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (29 samples, 0.50%)</title><rect x="852.0" y="739.0" width="5.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="855.0" y="750.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (29 samples, 0.50%)</title><rect x="852.0" y="723.0" width="5.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="855.0" y="734.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (15 samples, 0.26%)</title><rect x="852.2" y="707.0" width="3.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="855.2" y="718.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (3 samples, 0.05%)</title><rect x="852.6" y="691.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="855.6" y="702.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.269] (3 samples, 0.05%)</title><rect x="852.6" y="675.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="855.6" y="686.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (6 samples, 0.10%)</title><rect x="853.2" y="691.0" width="1.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="856.2" y="702.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (2 samples, 0.03%)</title><rect x="853.4" y="675.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="856.4" y="686.0"></text>
</g>
<g>
<title>JavaThread::can_call_java() const (2 samples, 0.03%)</title><rect x="853.8" y="675.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="856.8" y="686.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (3 samples, 0.05%)</title><rect x="854.6" y="691.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="857.6" y="702.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (2 samples, 0.03%)</title><rect x="854.8" y="675.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="857.8" y="686.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (9 samples, 0.15%)</title><rect x="855.6" y="707.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="858.6" y="718.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (8 samples, 0.14%)</title><rect x="855.8" y="691.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="858.8" y="702.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (3 samples, 0.05%)</title><rect x="855.8" y="675.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="858.8" y="686.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.05%)</title><rect x="855.8" y="659.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="858.8" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.05%)</title><rect x="855.8" y="643.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="858.8" y="654.0"></text>
</g>
<g>
<title>sun/net/NetProperties.get (5 samples, 0.09%)</title><rect x="856.4" y="675.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="859.4" y="686.0"></text>
</g>
<g>
<title>java/lang/System.getProperty (3 samples, 0.05%)</title><rect x="856.4" y="659.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="859.4" y="670.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (3 samples, 0.05%)</title><rect x="856.4" y="643.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="859.4" y="654.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (3 samples, 0.05%)</title><rect x="856.4" y="627.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="859.4" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (3 samples, 0.05%)</title><rect x="856.4" y="611.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="859.4" y="622.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (2 samples, 0.03%)</title><rect x="857.0" y="659.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="860.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (2 samples, 0.03%)</title><rect x="857.0" y="643.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="860.0" y="654.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.03%)</title><rect x="857.0" y="627.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="860.0" y="638.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (2 samples, 0.03%)</title><rect x="857.0" y="611.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="860.0" y="622.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (2 samples, 0.03%)</title><rect x="857.4" y="707.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="860.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (11 samples, 0.19%)</title><rect x="857.8" y="771.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="860.8" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (9 samples, 0.15%)</title><rect x="858.2" y="755.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="861.2" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (8 samples, 0.14%)</title><rect x="858.4" y="739.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="861.4" y="750.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (5 samples, 0.09%)</title><rect x="858.4" y="723.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="861.4" y="734.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.checkAccess (2 samples, 0.03%)</title><rect x="859.0" y="707.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="862.0" y="718.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.verifyAccess (2 samples, 0.03%)</title><rect x="859.0" y="691.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="862.0" y="702.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.slowVerifyAccess (2 samples, 0.03%)</title><rect x="859.0" y="675.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="862.0" y="686.0"></text>
</g>
<g>
<title>jdk/internal/reflect/Reflection.verifyMemberAccess (2 samples, 0.03%)</title><rect x="859.0" y="659.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="862.0" y="670.0"></text>
</g>
<g>
<title>vtable stub (2 samples, 0.03%)</title><rect x="859.6" y="723.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="862.6" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (27 samples, 0.46%)</title><rect x="860.0" y="771.0" width="5.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="863.0" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (24 samples, 0.41%)</title><rect x="860.0" y="755.0" width="4.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="863.0" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (24 samples, 0.41%)</title><rect x="860.0" y="739.0" width="4.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="863.0" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (24 samples, 0.41%)</title><rect x="860.0" y="723.0" width="4.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="863.0" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (20 samples, 0.34%)</title><rect x="860.7" y="707.0" width="4.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="863.7" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (4 samples, 0.07%)</title><rect x="860.9" y="691.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="863.9" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (4 samples, 0.07%)</title><rect x="860.9" y="675.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="863.9" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (4 samples, 0.07%)</title><rect x="860.9" y="659.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="863.9" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.03%)</title><rect x="861.3" y="643.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="864.3" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (15 samples, 0.26%)</title><rect x="861.7" y="691.0" width="3.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="864.7" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (15 samples, 0.26%)</title><rect x="861.7" y="675.0" width="3.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="864.7" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (15 samples, 0.26%)</title><rect x="861.7" y="659.0" width="3.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="864.7" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (15 samples, 0.26%)</title><rect x="861.7" y="643.0" width="3.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="864.7" y="654.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (15 samples, 0.26%)</title><rect x="861.7" y="627.0" width="3.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="864.7" y="638.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.03%)</title><rect x="861.9" y="611.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="864.9" y="622.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_lock (2 samples, 0.03%)</title><rect x="861.9" y="595.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="864.9" y="606.0"></text>
</g>
<g>
<title>__pthread_cond_signal (12 samples, 0.21%)</title><rect x="862.3" y="611.0" width="2.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="865.3" y="622.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.17%)</title><rect x="862.7" y="595.0" width="2.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="865.7" y="606.0"></text>
</g>
<g>
<title>do_syscall_64 (10 samples, 0.17%)</title><rect x="862.7" y="579.0" width="2.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="865.7" y="590.0"></text>
</g>
<g>
<title>__x64_sys_futex (10 samples, 0.17%)</title><rect x="862.7" y="563.0" width="2.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="865.7" y="574.0"></text>
</g>
<g>
<title>do_futex (10 samples, 0.17%)</title><rect x="862.7" y="547.0" width="2.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="865.7" y="558.0"></text>
</g>
<g>
<title>futex_wake (10 samples, 0.17%)</title><rect x="862.7" y="531.0" width="2.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="865.7" y="542.0"></text>
</g>
<g>
<title>wake_up_q (10 samples, 0.17%)</title><rect x="862.7" y="515.0" width="2.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="865.7" y="526.0"></text>
</g>
<g>
<title>try_to_wake_up (10 samples, 0.17%)</title><rect x="862.7" y="499.0" width="2.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="865.7" y="510.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (10 samples, 0.17%)</title><rect x="862.7" y="483.0" width="2.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="865.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (3 samples, 0.05%)</title><rect x="864.9" y="755.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="867.9" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2 samples, 0.03%)</title><rect x="865.1" y="739.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="868.1" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2 samples, 0.03%)</title><rect x="865.1" y="723.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="868.1" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (6 samples, 0.10%)</title><rect x="865.5" y="835.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="868.5" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (6 samples, 0.10%)</title><rect x="865.5" y="819.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="868.5" y="830.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (6 samples, 0.10%)</title><rect x="865.5" y="803.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="868.5" y="814.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (6 samples, 0.10%)</title><rect x="865.5" y="787.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="868.5" y="798.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (5 samples, 0.09%)</title><rect x="865.7" y="771.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="868.7" y="782.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$126/1936481830.accept (3 samples, 0.05%)</title><rect x="866.1" y="755.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="869.1" y="766.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (3 samples, 0.05%)</title><rect x="866.1" y="739.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="869.1" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.getFirstResponses (8 samples, 0.14%)</title><rect x="866.9" y="835.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="869.9" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.orTimeout (7 samples, 0.12%)</title><rect x="867.1" y="819.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="870.1" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Delayer.delay (7 samples, 0.12%)</title><rect x="867.1" y="803.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="870.1" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor.schedule (7 samples, 0.12%)</title><rect x="867.1" y="787.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="870.1" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor.delayedExecute (7 samples, 0.12%)</title><rect x="867.1" y="771.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="870.1" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.add (5 samples, 0.09%)</title><rect x="867.3" y="755.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="870.3" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.add (5 samples, 0.09%)</title><rect x="867.3" y="739.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="870.3" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.offer (5 samples, 0.09%)</title><rect x="867.3" y="723.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="870.3" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (4 samples, 0.07%)</title><rect x="867.5" y="707.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="870.5" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (4 samples, 0.07%)</title><rect x="867.5" y="691.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="870.5" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (4 samples, 0.07%)</title><rect x="867.5" y="675.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="870.5" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.03%)</title><rect x="867.9" y="659.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="870.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.03%)</title><rect x="867.9" y="643.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="870.9" y="654.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 0.03%)</title><rect x="867.9" y="627.0" width="0.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="870.9" y="638.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="867.9" y="611.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="870.9" y="622.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="867.9" y="595.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="870.9" y="606.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.03%)</title><rect x="867.9" y="579.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="870.9" y="590.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.03%)</title><rect x="867.9" y="563.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="870.9" y="574.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.03%)</title><rect x="867.9" y="547.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="870.9" y="558.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.03%)</title><rect x="867.9" y="531.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="870.9" y="542.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.03%)</title><rect x="867.9" y="515.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="870.9" y="526.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.03%)</title><rect x="867.9" y="499.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="870.9" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (172 samples, 2.95%)</title><rect x="868.7" y="899.0" width="34.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="871.7" y="910.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (23 samples, 0.39%)</title><rect x="868.9" y="883.0" width="4.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="871.9" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (23 samples, 0.39%)</title><rect x="868.9" y="867.0" width="4.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="871.9" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (21 samples, 0.36%)</title><rect x="869.1" y="851.0" width="4.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="872.1" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (21 samples, 0.36%)</title><rect x="869.1" y="835.0" width="4.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="872.1" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Canceller.accept (5 samples, 0.09%)</title><rect x="869.1" y="819.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="872.1" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Canceller.accept (4 samples, 0.07%)</title><rect x="869.1" y="803.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="872.1" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$ScheduledFutureTask.cancel (4 samples, 0.07%)</title><rect x="869.1" y="787.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="872.1" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.remove (4 samples, 0.07%)</title><rect x="869.1" y="771.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="872.1" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.remove (4 samples, 0.07%)</title><rect x="869.1" y="755.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="872.1" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.siftUp (2 samples, 0.03%)</title><rect x="869.5" y="739.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="872.5" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (16 samples, 0.27%)</title><rect x="870.1" y="819.0" width="3.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="873.1" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (13 samples, 0.22%)</title><rect x="870.1" y="803.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="873.1" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (13 samples, 0.22%)</title><rect x="870.1" y="787.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="873.1" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (13 samples, 0.22%)</title><rect x="870.1" y="771.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="873.1" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (12 samples, 0.21%)</title><rect x="870.3" y="755.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="873.3" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (12 samples, 0.21%)</title><rect x="870.3" y="739.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="873.3" y="750.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (12 samples, 0.21%)</title><rect x="870.3" y="723.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="873.3" y="734.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.03%)</title><rect x="870.3" y="707.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="873.3" y="718.0"></text>
</g>
<g>
<title>__pthread_cond_signal (10 samples, 0.17%)</title><rect x="870.8" y="707.0" width="2.0" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="873.8" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.15%)</title><rect x="871.0" y="691.0" width="1.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="874.0" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (9 samples, 0.15%)</title><rect x="871.0" y="675.0" width="1.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="874.0" y="686.0"></text>
</g>
<g>
<title>__x64_sys_futex (9 samples, 0.15%)</title><rect x="871.0" y="659.0" width="1.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="874.0" y="670.0"></text>
</g>
<g>
<title>do_futex (9 samples, 0.15%)</title><rect x="871.0" y="643.0" width="1.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="874.0" y="654.0"></text>
</g>
<g>
<title>futex_wake (9 samples, 0.15%)</title><rect x="871.0" y="627.0" width="1.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="874.0" y="638.0"></text>
</g>
<g>
<title>wake_up_q (8 samples, 0.14%)</title><rect x="871.2" y="611.0" width="1.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="874.2" y="622.0"></text>
</g>
<g>
<title>try_to_wake_up (8 samples, 0.14%)</title><rect x="871.2" y="595.0" width="1.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="874.2" y="606.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (8 samples, 0.14%)</title><rect x="871.2" y="579.0" width="1.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="874.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (3 samples, 0.05%)</title><rect x="872.8" y="803.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="875.8" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (3 samples, 0.05%)</title><rect x="872.8" y="787.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="875.8" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (2 samples, 0.03%)</title><rect x="873.0" y="771.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="876.0" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (2 samples, 0.03%)</title><rect x="873.0" y="755.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="876.0" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (148 samples, 2.53%)</title><rect x="873.6" y="883.0" width="29.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="876.6" y="894.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (9 samples, 0.15%)</title><rect x="873.6" y="867.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="876.6" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (9 samples, 0.15%)</title><rect x="873.6" y="851.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="876.6" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (8 samples, 0.14%)</title><rect x="873.6" y="835.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="876.6" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (8 samples, 0.14%)</title><rect x="873.6" y="819.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="876.6" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (7 samples, 0.12%)</title><rect x="873.8" y="803.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="876.8" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (6 samples, 0.10%)</title><rect x="874.0" y="787.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="877.0" y="798.0"></text>
</g>
<g>
<title>itable stub (4 samples, 0.07%)</title><rect x="874.0" y="771.0" width="0.8" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="877.0" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService$$Lambda$142/147332196.accept (8 samples, 0.14%)</title><rect x="875.4" y="867.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="878.4" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.lambda$getFirstResponses$25 (8 samples, 0.14%)</title><rect x="875.4" y="851.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="878.4" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (5 samples, 0.09%)</title><rect x="875.4" y="835.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="878.4" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (5 samples, 0.09%)</title><rect x="875.4" y="819.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="878.4" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (4 samples, 0.07%)</title><rect x="875.6" y="803.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="878.6" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (4 samples, 0.07%)</title><rect x="875.6" y="787.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="878.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (4 samples, 0.07%)</title><rect x="875.6" y="771.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="878.6" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (4 samples, 0.07%)</title><rect x="875.6" y="755.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="878.6" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (4 samples, 0.07%)</title><rect x="875.6" y="739.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="878.6" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (4 samples, 0.07%)</title><rect x="875.6" y="723.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="878.6" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (4 samples, 0.07%)</title><rect x="875.6" y="707.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="878.6" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (4 samples, 0.07%)</title><rect x="875.6" y="691.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="878.6" y="702.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (4 samples, 0.07%)</title><rect x="875.6" y="675.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="878.6" y="686.0"></text>
</g>
<g>
<title>__pthread_cond_signal (4 samples, 0.07%)</title><rect x="875.6" y="659.0" width="0.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="878.6" y="670.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.07%)</title><rect x="875.6" y="643.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="878.6" y="654.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.07%)</title><rect x="875.6" y="627.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="878.6" y="638.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.07%)</title><rect x="875.6" y="611.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="878.6" y="622.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.07%)</title><rect x="875.6" y="595.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="878.6" y="606.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 0.07%)</title><rect x="875.6" y="579.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="878.6" y="590.0"></text>
</g>
<g>
<title>wake_up_q (4 samples, 0.07%)</title><rect x="875.6" y="563.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="878.6" y="574.0"></text>
</g>
<g>
<title>try_to_wake_up (4 samples, 0.07%)</title><rect x="875.6" y="547.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="878.6" y="558.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.07%)</title><rect x="875.6" y="531.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="878.6" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.add (3 samples, 0.05%)</title><rect x="876.4" y="835.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="879.4" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService$$Lambda$255/1798389783.accept (131 samples, 2.24%)</title><rect x="877.0" y="867.0" width="26.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="880.0" y="878.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.lambda$get$6 (131 samples, 2.24%)</title><rect x="877.0" y="851.0" width="26.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="880.0" y="862.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.handleResponses (128 samples, 2.19%)</title><rect x="877.6" y="835.0" width="25.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="880.6" y="846.0">r..</text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList$COWIterator.next (2 samples, 0.03%)</title><rect x="877.6" y="819.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="880.6" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService$$Lambda$265/118464626.apply (11 samples, 0.19%)</title><rect x="878.0" y="819.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="881.0" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.lambda$get$4 (11 samples, 0.19%)</title><rect x="878.0" y="803.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="881.0" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/Value.from (11 samples, 0.19%)</title><rect x="878.0" y="787.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="881.0" y="798.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (3 samples, 0.05%)</title><rect x="878.0" y="771.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="881.0" y="782.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (3 samples, 0.05%)</title><rect x="878.0" y="755.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="881.0" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (3 samples, 0.05%)</title><rect x="878.0" y="739.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="881.0" y="750.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (8 samples, 0.14%)</title><rect x="878.6" y="771.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="881.6" y="782.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (4 samples, 0.07%)</title><rect x="878.6" y="755.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="881.6" y="766.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (3 samples, 0.05%)</title><rect x="878.6" y="739.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="881.6" y="750.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (3 samples, 0.05%)</title><rect x="878.6" y="723.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="881.6" y="734.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (3 samples, 0.05%)</title><rect x="878.6" y="707.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="881.6" y="718.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (3 samples, 0.05%)</title><rect x="878.6" y="691.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="881.6" y="702.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (3 samples, 0.05%)</title><rect x="878.6" y="675.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="881.6" y="686.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (3 samples, 0.05%)</title><rect x="879.6" y="755.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="882.6" y="766.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (3 samples, 0.05%)</title><rect x="879.6" y="739.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="882.6" y="750.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (3 samples, 0.05%)</title><rect x="879.6" y="723.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="882.6" y="734.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (3 samples, 0.05%)</title><rect x="879.6" y="707.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="882.6" y="718.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (3 samples, 0.05%)</title><rect x="879.6" y="691.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="882.6" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySpliterator.forEachRemaining (2 samples, 0.03%)</title><rect x="879.6" y="675.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="882.6" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService$$Lambda$266/1233119921.get (8 samples, 0.14%)</title><rect x="880.3" y="819.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="883.3" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.lambda$get$5 (8 samples, 0.14%)</title><rect x="880.3" y="803.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="883.3" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/Value.merge (8 samples, 0.14%)</title><rect x="880.3" y="787.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="883.3" y="798.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (2 samples, 0.03%)</title><rect x="880.5" y="771.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="883.5" y="782.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.&lt;init&gt; (2 samples, 0.03%)</title><rect x="880.5" y="755.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="883.5" y="766.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$StatelessOp.&lt;init&gt; (2 samples, 0.03%)</title><rect x="880.5" y="739.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="883.5" y="750.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.&lt;init&gt; (2 samples, 0.03%)</title><rect x="880.5" y="723.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="883.5" y="734.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.&lt;init&gt; (2 samples, 0.03%)</title><rect x="880.5" y="707.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="883.5" y="718.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.max (5 samples, 0.09%)</title><rect x="880.9" y="771.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="883.9" y="782.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.reduce (5 samples, 0.09%)</title><rect x="880.9" y="755.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="883.9" y="766.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (4 samples, 0.07%)</title><rect x="880.9" y="739.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="883.9" y="750.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (3 samples, 0.05%)</title><rect x="880.9" y="723.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="883.9" y="734.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (3 samples, 0.05%)</title><rect x="880.9" y="707.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="883.9" y="718.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (2 samples, 0.03%)</title><rect x="881.1" y="691.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="884.1" y="702.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (2 samples, 0.03%)</title><rect x="881.1" y="675.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="884.1" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.sendResponse (107 samples, 1.83%)</title><rect x="881.9" y="819.0" width="21.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="884.9" y="830.0">r..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (107 samples, 1.83%)</title><rect x="881.9" y="803.0" width="21.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="884.9" y="814.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (105 samples, 1.80%)</title><rect x="882.1" y="787.0" width="21.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="885.1" y="798.0">o..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (3 samples, 0.05%)</title><rect x="882.1" y="771.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="885.1" y="782.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (2 samples, 0.03%)</title><rect x="882.3" y="755.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="885.3" y="766.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.ensureCapacity (2 samples, 0.03%)</title><rect x="882.3" y="739.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="885.3" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (102 samples, 1.75%)</title><rect x="882.7" y="771.0" width="20.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="885.7" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (102 samples, 1.75%)</title><rect x="882.7" y="755.0" width="20.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="885.7" y="766.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (101 samples, 1.73%)</title><rect x="882.9" y="739.0" width="20.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="885.9" y="750.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (101 samples, 1.73%)</title><rect x="882.9" y="723.0" width="20.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="885.9" y="734.0"></text>
</g>
<g>
<title>.annobin_send.c (98 samples, 1.68%)</title><rect x="883.1" y="707.0" width="19.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="886.1" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (94 samples, 1.61%)</title><rect x="883.9" y="691.0" width="19.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="886.9" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (94 samples, 1.61%)</title><rect x="883.9" y="675.0" width="19.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="886.9" y="686.0"></text>
</g>
<g>
<title>__x64_sys_sendto (93 samples, 1.59%)</title><rect x="884.1" y="659.0" width="18.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="887.1" y="670.0"></text>
</g>
<g>
<title>__sys_sendto (92 samples, 1.58%)</title><rect x="884.3" y="643.0" width="18.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="887.3" y="654.0"></text>
</g>
<g>
<title>sock_sendmsg (88 samples, 1.51%)</title><rect x="884.5" y="627.0" width="17.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="887.5" y="638.0"></text>
</g>
<g>
<title>tcp_sendmsg (88 samples, 1.51%)</title><rect x="884.5" y="611.0" width="17.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="887.5" y="622.0"></text>
</g>
<g>
<title>release_sock (3 samples, 0.05%)</title><rect x="884.7" y="595.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="887.7" y="606.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (84 samples, 1.44%)</title><rect x="885.3" y="595.0" width="17.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="888.3" y="606.0"></text>
</g>
<g>
<title>__check_object_size (3 samples, 0.05%)</title><rect x="885.5" y="579.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="888.5" y="590.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.03%)</title><rect x="885.5" y="563.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="888.5" y="574.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (72 samples, 1.23%)</title><rect x="886.1" y="579.0" width="14.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="889.1" y="590.0"></text>
</g>
<g>
<title>tcp_write_xmit (72 samples, 1.23%)</title><rect x="886.1" y="563.0" width="14.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="889.1" y="574.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (69 samples, 1.18%)</title><rect x="886.1" y="547.0" width="14.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="889.1" y="558.0"></text>
</g>
<g>
<title>__ip_queue_xmit (68 samples, 1.16%)</title><rect x="886.1" y="531.0" width="13.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="889.1" y="542.0"></text>
</g>
<g>
<title>ip_local_out (19 samples, 0.33%)</title><rect x="886.3" y="515.0" width="3.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="889.3" y="526.0"></text>
</g>
<g>
<title>__ip_local_out (19 samples, 0.33%)</title><rect x="886.3" y="499.0" width="3.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="889.3" y="510.0"></text>
</g>
<g>
<title>nf_hook_slow (19 samples, 0.33%)</title><rect x="886.3" y="483.0" width="3.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="889.3" y="494.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (8 samples, 0.14%)</title><rect x="886.3" y="467.0" width="1.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="889.3" y="478.0"></text>
</g>
<g>
<title>ipv4_conntrack_local	[nf_conntrack] (2 samples, 0.03%)</title><rect x="888.3" y="467.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="891.3" y="478.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (6 samples, 0.10%)</title><rect x="888.7" y="467.0" width="1.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="891.7" y="478.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get	[nf_conntrack] (4 samples, 0.07%)</title><rect x="888.7" y="451.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="891.7" y="462.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet	[nf_conntrack] (2 samples, 0.03%)</title><rect x="889.5" y="451.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="892.5" y="462.0"></text>
</g>
<g>
<title>ip_output (48 samples, 0.82%)</title><rect x="890.2" y="515.0" width="9.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="893.2" y="526.0"></text>
</g>
<g>
<title>ip_finish_output2 (44 samples, 0.75%)</title><rect x="890.2" y="499.0" width="8.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="893.2" y="510.0"></text>
</g>
<g>
<title>__dev_queue_xmit (2 samples, 0.03%)</title><rect x="890.4" y="483.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="893.4" y="494.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (2 samples, 0.03%)</title><rect x="890.4" y="467.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="893.4" y="478.0"></text>
</g>
<g>
<title>loopback_xmit (2 samples, 0.03%)</title><rect x="890.4" y="451.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="893.4" y="462.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (41 samples, 0.70%)</title><rect x="890.8" y="483.0" width="8.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="893.8" y="494.0"></text>
</g>
<g>
<title>do_softirq.part.0 (41 samples, 0.70%)</title><rect x="890.8" y="467.0" width="8.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="893.8" y="478.0"></text>
</g>
<g>
<title>do_softirq_own_stack (40 samples, 0.68%)</title><rect x="891.0" y="451.0" width="8.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="894.0" y="462.0"></text>
</g>
<g>
<title>__softirqentry_text_start (40 samples, 0.68%)</title><rect x="891.0" y="435.0" width="8.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="894.0" y="446.0"></text>
</g>
<g>
<title>net_rx_action (40 samples, 0.68%)</title><rect x="891.0" y="419.0" width="8.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="894.0" y="430.0"></text>
</g>
<g>
<title>process_backlog (39 samples, 0.67%)</title><rect x="891.2" y="403.0" width="7.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="894.2" y="414.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (38 samples, 0.65%)</title><rect x="891.4" y="387.0" width="7.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="894.4" y="398.0"></text>
</g>
<g>
<title>ip_rcv (37 samples, 0.63%)</title><rect x="891.6" y="371.0" width="7.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="894.6" y="382.0"></text>
</g>
<g>
<title>ip_local_deliver (30 samples, 0.51%)</title><rect x="891.6" y="355.0" width="6.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="894.6" y="366.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (26 samples, 0.45%)</title><rect x="891.8" y="339.0" width="5.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="894.8" y="350.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (26 samples, 0.45%)</title><rect x="891.8" y="323.0" width="5.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="894.8" y="334.0"></text>
</g>
<g>
<title>tcp_v4_rcv (24 samples, 0.41%)</title><rect x="892.2" y="307.0" width="4.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="895.2" y="318.0"></text>
</g>
<g>
<title>__inet_lookup_established (2 samples, 0.03%)</title><rect x="892.6" y="291.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="895.6" y="302.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (19 samples, 0.33%)</title><rect x="893.2" y="291.0" width="3.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="896.2" y="302.0"></text>
</g>
<g>
<title>tcp_rcv_established (18 samples, 0.31%)</title><rect x="893.4" y="275.0" width="3.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="896.4" y="286.0"></text>
</g>
<g>
<title>tcp_ack (4 samples, 0.07%)</title><rect x="893.8" y="259.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="896.8" y="270.0"></text>
</g>
<g>
<title>tcp_data_queue (12 samples, 0.21%)</title><rect x="894.6" y="259.0" width="2.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="897.6" y="270.0"></text>
</g>
<g>
<title>sock_def_readable (10 samples, 0.17%)</title><rect x="895.0" y="243.0" width="2.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="898.0" y="254.0"></text>
</g>
<g>
<title>__wake_up_common_lock (10 samples, 0.17%)</title><rect x="895.0" y="227.0" width="2.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="898.0" y="238.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (10 samples, 0.17%)</title><rect x="895.0" y="211.0" width="2.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="898.0" y="222.0"></text>
</g>
<g>
<title>nf_hook_slow (3 samples, 0.05%)</title><rect x="897.0" y="339.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="900.0" y="350.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (2 samples, 0.03%)</title><rect x="897.0" y="323.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="900.0" y="334.0"></text>
</g>
<g>
<title>nf_hook_slow (7 samples, 0.12%)</title><rect x="897.6" y="355.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="900.6" y="366.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (6 samples, 0.10%)</title><rect x="897.6" y="339.0" width="1.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="900.6" y="350.0"></text>
</g>
<g>
<title>nf_hook_slow (3 samples, 0.05%)</title><rect x="899.2" y="499.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="902.2" y="510.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (2 samples, 0.03%)</title><rect x="900.3" y="547.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="903.3" y="558.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (4 samples, 0.07%)</title><rect x="900.9" y="579.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="903.9" y="590.0"></text>
</g>
<g>
<title>__alloc_skb (4 samples, 0.07%)</title><rect x="900.9" y="563.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="903.9" y="574.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (2 samples, 0.03%)</title><rect x="901.1" y="547.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="904.1" y="558.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (2 samples, 0.03%)</title><rect x="901.1" y="531.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="904.1" y="542.0"></text>
</g>
<g>
<title>tcp_send_mss (3 samples, 0.05%)</title><rect x="901.7" y="579.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="904.7" y="590.0"></text>
</g>
<g>
<title>tcp_current_mss (3 samples, 0.05%)</title><rect x="901.7" y="563.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="904.7" y="574.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.03%)</title><rect x="901.9" y="547.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="904.9" y="558.0"></text>
</g>
<g>
<title>sockfd_lookup_light (3 samples, 0.05%)</title><rect x="902.3" y="627.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="905.3" y="638.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.05%)</title><rect x="902.3" y="611.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="905.3" y="622.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.03%)</title><rect x="902.5" y="595.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="905.5" y="606.0"></text>
</g>
<g>
<title>vtable stub (2 samples, 0.03%)</title><rect x="903.5" y="915.0" width="0.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="906.5" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (3 samples, 0.05%)</title><rect x="903.9" y="947.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="906.9" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.05%)</title><rect x="903.9" y="931.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="906.9" y="942.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.05%)</title><rect x="903.9" y="915.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="906.9" y="926.0"></text>
</g>
<g>
<title>__pthread_cond_signal (3 samples, 0.05%)</title><rect x="903.9" y="899.0" width="0.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="906.9" y="910.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="904.1" y="883.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="907.1" y="894.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="904.1" y="867.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="907.1" y="878.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.03%)</title><rect x="904.1" y="851.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="907.1" y="862.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.03%)</title><rect x="904.1" y="835.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="907.1" y="846.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.03%)</title><rect x="904.1" y="819.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="907.1" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (32 samples, 0.55%)</title><rect x="904.5" y="963.0" width="6.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="907.5" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (3 samples, 0.05%)</title><rect x="904.7" y="947.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="907.7" y="958.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (27 samples, 0.46%)</title><rect x="905.3" y="947.0" width="5.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="908.3" y="958.0"></text>
</g>
<g>
<title>Unsafe_Park (16 samples, 0.27%)</title><rect x="905.3" y="931.0" width="3.2" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="908.3" y="942.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (2 samples, 0.03%)</title><rect x="905.5" y="915.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="908.5" y="926.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 0.03%)</title><rect x="905.9" y="915.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="908.9" y="926.0"></text>
</g>
<g>
<title>__lll_unlock_wake (9 samples, 0.15%)</title><rect x="906.3" y="915.0" width="1.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="909.3" y="926.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.05%)</title><rect x="907.5" y="899.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="910.5" y="910.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.05%)</title><rect x="907.5" y="883.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="910.5" y="894.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.03%)</title><rect x="907.7" y="867.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="910.7" y="878.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.03%)</title><rect x="907.7" y="851.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="910.7" y="862.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.03%)</title><rect x="907.7" y="835.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="910.7" y="846.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.19%)</title><rect x="908.5" y="931.0" width="2.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="911.5" y="942.0"></text>
</g>
<g>
<title>__pthread_cond_wait (9 samples, 0.15%)</title><rect x="908.7" y="915.0" width="1.9" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="911.7" y="926.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.14%)</title><rect x="908.9" y="899.0" width="1.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="911.9" y="910.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.14%)</title><rect x="908.9" y="883.0" width="1.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="911.9" y="894.0"></text>
</g>
<g>
<title>__x64_sys_futex (5 samples, 0.09%)</title><rect x="909.5" y="867.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="912.5" y="878.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.09%)</title><rect x="909.5" y="851.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="912.5" y="862.0"></text>
</g>
<g>
<title>futex_wait (5 samples, 0.09%)</title><rect x="909.5" y="835.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="912.5" y="846.0"></text>
</g>
<g>
<title>futex_wait_queue_me (3 samples, 0.05%)</title><rect x="909.8" y="819.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="912.8" y="830.0"></text>
</g>
<g>
<title>schedule (3 samples, 0.05%)</title><rect x="909.8" y="803.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="912.8" y="814.0"></text>
</g>
<g>
<title>__sched_text_start (3 samples, 0.05%)</title><rect x="909.8" y="787.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="912.8" y="798.0"></text>
</g>
<g>
<title>finish_task_switch (3 samples, 0.05%)</title><rect x="909.8" y="771.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="912.8" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkUntil (71 samples, 1.22%)</title><rect x="911.0" y="963.0" width="14.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="914.0" y="974.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (69 samples, 1.18%)</title><rect x="911.4" y="947.0" width="13.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="914.4" y="958.0"></text>
</g>
<g>
<title>Unsafe_Park (28 samples, 0.48%)</title><rect x="911.6" y="931.0" width="5.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="914.6" y="942.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (8 samples, 0.14%)</title><rect x="912.2" y="915.0" width="1.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="915.2" y="926.0"></text>
</g>
<g>
<title>Monitor::unlock() (2 samples, 0.03%)</title><rect x="912.6" y="899.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="915.6" y="910.0"></text>
</g>
<g>
<title>__tls_get_addr (4 samples, 0.07%)</title><rect x="913.0" y="899.0" width="0.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="916.0" y="910.0"></text>
</g>
<g>
<title>__lll_unlock_wake (16 samples, 0.27%)</title><rect x="913.8" y="915.0" width="3.2" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="916.8" y="926.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.10%)</title><rect x="915.6" y="899.0" width="1.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="918.6" y="910.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.10%)</title><rect x="915.6" y="883.0" width="1.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="918.6" y="894.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.07%)</title><rect x="916.0" y="867.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="919.0" y="878.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.07%)</title><rect x="916.0" y="851.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="919.0" y="862.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.03%)</title><rect x="916.4" y="835.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="919.4" y="846.0"></text>
</g>
<g>
<title>[unknown] (39 samples, 0.67%)</title><rect x="917.2" y="931.0" width="7.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="920.2" y="942.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (38 samples, 0.65%)</title><rect x="917.2" y="915.0" width="7.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="920.2" y="926.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (28 samples, 0.48%)</title><rect x="919.2" y="899.0" width="5.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="922.2" y="910.0"></text>
</g>
<g>
<title>do_syscall_64 (28 samples, 0.48%)</title><rect x="919.2" y="883.0" width="5.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="922.2" y="894.0"></text>
</g>
<g>
<title>__x64_sys_futex (28 samples, 0.48%)</title><rect x="919.2" y="867.0" width="5.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="922.2" y="878.0"></text>
</g>
<g>
<title>do_futex (26 samples, 0.45%)</title><rect x="919.4" y="851.0" width="5.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="922.4" y="862.0"></text>
</g>
<g>
<title>futex_wait (24 samples, 0.41%)</title><rect x="919.9" y="835.0" width="4.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="922.9" y="846.0"></text>
</g>
<g>
<title>futex_wait_queue_me (14 samples, 0.24%)</title><rect x="920.9" y="819.0" width="2.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="923.9" y="830.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (3 samples, 0.05%)</title><rect x="921.3" y="803.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="924.3" y="814.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.05%)</title><rect x="921.3" y="787.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="924.3" y="798.0"></text>
</g>
<g>
<title>schedule (9 samples, 0.15%)</title><rect x="921.9" y="803.0" width="1.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="924.9" y="814.0"></text>
</g>
<g>
<title>__sched_text_start (9 samples, 0.15%)</title><rect x="921.9" y="787.0" width="1.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="924.9" y="798.0"></text>
</g>
<g>
<title>finish_task_switch (9 samples, 0.15%)</title><rect x="921.9" y="771.0" width="1.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="924.9" y="782.0"></text>
</g>
<g>
<title>hrtimer_cancel (4 samples, 0.07%)</title><rect x="923.9" y="819.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="926.9" y="830.0"></text>
</g>
<g>
<title>hrtimer_try_to_cancel (4 samples, 0.07%)</title><rect x="923.9" y="803.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="926.9" y="814.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.05%)</title><rect x="923.9" y="787.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="926.9" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (410 samples, 7.02%)</title><rect x="925.3" y="995.0" width="82.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="928.3" y="1006.0">jdk/inter..</text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.keyFor (2 samples, 0.03%)</title><rect x="927.7" y="979.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="930.7" y="990.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.findKey (2 samples, 0.03%)</title><rect x="927.7" y="963.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="930.7" y="974.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.03%)</title><rect x="928.7" y="979.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="931.7" y="990.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.03%)</title><rect x="928.7" y="963.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="931.7" y="974.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.03%)</title><rect x="928.7" y="947.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="931.7" y="958.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.03%)</title><rect x="928.7" y="931.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="931.7" y="942.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.03%)</title><rect x="928.7" y="915.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="931.7" y="926.0"></text>
</g>
<g>
<title>java/util/ArrayList.clear (3 samples, 0.05%)</title><rect x="929.1" y="979.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="932.1" y="990.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (103 samples, 1.76%)</title><rect x="929.8" y="979.0" width="20.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="932.8" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$198/1799291049.accept (101 samples, 1.73%)</title><rect x="929.8" y="963.0" width="20.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="932.8" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (100 samples, 1.71%)</title><rect x="930.0" y="947.0" width="20.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="933.0" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (100 samples, 1.71%)</title><rect x="930.0" y="931.0" width="20.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="933.0" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (100 samples, 1.71%)</title><rect x="930.0" y="915.0" width="20.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="933.0" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (100 samples, 1.71%)</title><rect x="930.0" y="899.0" width="20.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="933.0" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (3 samples, 0.05%)</title><rect x="930.0" y="883.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="933.0" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (3 samples, 0.05%)</title><rect x="930.0" y="867.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="933.0" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (3 samples, 0.05%)</title><rect x="930.0" y="851.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="933.0" y="862.0"></text>
</g>
<g>
<title>java/util/HashSet.add (2 samples, 0.03%)</title><rect x="930.2" y="835.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="933.2" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.put (2 samples, 0.03%)</title><rect x="930.2" y="819.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="933.2" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (2 samples, 0.03%)</title><rect x="930.2" y="803.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="933.2" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (97 samples, 1.66%)</title><rect x="930.6" y="883.0" width="19.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="933.6" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (97 samples, 1.66%)</title><rect x="930.6" y="867.0" width="19.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="933.6" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (97 samples, 1.66%)</title><rect x="930.6" y="851.0" width="19.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="933.6" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (3 samples, 0.05%)</title><rect x="930.6" y="835.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="933.6" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (3 samples, 0.05%)</title><rect x="930.6" y="819.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="933.6" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (94 samples, 1.61%)</title><rect x="931.2" y="835.0" width="19.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="934.2" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (93 samples, 1.59%)</title><rect x="931.4" y="819.0" width="18.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="934.4" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$157/1360780123.run (90 samples, 1.54%)</title><rect x="931.8" y="803.0" width="18.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="934.8" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (90 samples, 1.54%)</title><rect x="931.8" y="787.0" width="18.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="934.8" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (19 samples, 0.33%)</title><rect x="933.4" y="771.0" width="3.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="936.4" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (19 samples, 0.33%)</title><rect x="933.4" y="755.0" width="3.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="936.4" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (19 samples, 0.33%)</title><rect x="933.4" y="739.0" width="3.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="936.4" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (18 samples, 0.31%)</title><rect x="933.6" y="723.0" width="3.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="936.6" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (18 samples, 0.31%)</title><rect x="933.6" y="707.0" width="3.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="936.6" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (18 samples, 0.31%)</title><rect x="933.6" y="691.0" width="3.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="936.6" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (17 samples, 0.29%)</title><rect x="933.8" y="675.0" width="3.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="936.8" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (17 samples, 0.29%)</title><rect x="933.8" y="659.0" width="3.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="936.8" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (15 samples, 0.26%)</title><rect x="933.8" y="643.0" width="3.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="936.8" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (15 samples, 0.26%)</title><rect x="933.8" y="627.0" width="3.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="936.8" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (15 samples, 0.26%)</title><rect x="933.8" y="611.0" width="3.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="936.8" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (15 samples, 0.26%)</title><rect x="933.8" y="595.0" width="3.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="936.8" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (15 samples, 0.26%)</title><rect x="933.8" y="579.0" width="3.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="936.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (15 samples, 0.26%)</title><rect x="933.8" y="563.0" width="3.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="936.8" y="574.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.03%)</title><rect x="933.8" y="547.0" width="0.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="936.8" y="558.0"></text>
</g>
<g>
<title>__pthread_cond_signal (12 samples, 0.21%)</title><rect x="934.2" y="547.0" width="2.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="937.2" y="558.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.17%)</title><rect x="934.6" y="531.0" width="2.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="937.6" y="542.0"></text>
</g>
<g>
<title>do_syscall_64 (10 samples, 0.17%)</title><rect x="934.6" y="515.0" width="2.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="937.6" y="526.0"></text>
</g>
<g>
<title>__x64_sys_futex (7 samples, 0.12%)</title><rect x="934.6" y="499.0" width="1.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="937.6" y="510.0"></text>
</g>
<g>
<title>do_futex (7 samples, 0.12%)</title><rect x="934.6" y="483.0" width="1.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="937.6" y="494.0"></text>
</g>
<g>
<title>futex_wake (7 samples, 0.12%)</title><rect x="934.6" y="467.0" width="1.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="937.6" y="478.0"></text>
</g>
<g>
<title>wake_up_q (7 samples, 0.12%)</title><rect x="934.6" y="451.0" width="1.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="937.6" y="462.0"></text>
</g>
<g>
<title>try_to_wake_up (7 samples, 0.12%)</title><rect x="934.6" y="435.0" width="1.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="937.6" y="446.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (7 samples, 0.12%)</title><rect x="934.6" y="419.0" width="1.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="937.6" y="430.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (3 samples, 0.05%)</title><rect x="936.0" y="499.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="939.0" y="510.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.03%)</title><rect x="936.2" y="483.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="939.2" y="494.0"></text>
</g>
<g>
<title>__sched_text_start (2 samples, 0.03%)</title><rect x="936.2" y="467.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="939.2" y="478.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.03%)</title><rect x="936.2" y="451.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="939.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (2 samples, 0.03%)</title><rect x="937.2" y="771.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="940.2" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (2 samples, 0.03%)</title><rect x="937.2" y="755.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="940.2" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (61 samples, 1.04%)</title><rect x="937.6" y="771.0" width="12.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="940.6" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (61 samples, 1.04%)</title><rect x="937.6" y="755.0" width="12.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="940.6" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (3 samples, 0.05%)</title><rect x="937.6" y="739.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="940.6" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.05%)</title><rect x="937.6" y="723.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="940.6" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 0.05%)</title><rect x="937.6" y="707.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="940.6" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.03%)</title><rect x="937.6" y="691.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="940.6" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (58 samples, 0.99%)</title><rect x="938.2" y="739.0" width="11.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="941.2" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (57 samples, 0.98%)</title><rect x="938.4" y="723.0" width="11.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="941.4" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (51 samples, 0.87%)</title><rect x="938.6" y="707.0" width="10.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="941.6" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (51 samples, 0.87%)</title><rect x="938.6" y="691.0" width="10.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="941.6" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (51 samples, 0.87%)</title><rect x="938.6" y="675.0" width="10.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="941.6" y="686.0"></text>
</g>
<g>
<title>__libc_read (48 samples, 0.82%)</title><rect x="939.0" y="659.0" width="9.7" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="942.0" y="670.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (32 samples, 0.55%)</title><rect x="942.3" y="643.0" width="6.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="945.3" y="654.0"></text>
</g>
<g>
<title>do_syscall_64 (32 samples, 0.55%)</title><rect x="942.3" y="627.0" width="6.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="945.3" y="638.0"></text>
</g>
<g>
<title>ksys_read (28 samples, 0.48%)</title><rect x="943.1" y="611.0" width="5.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="946.1" y="622.0"></text>
</g>
<g>
<title>vfs_read (25 samples, 0.43%)</title><rect x="943.7" y="595.0" width="5.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="946.7" y="606.0"></text>
</g>
<g>
<title>new_sync_read (20 samples, 0.34%)</title><rect x="943.7" y="579.0" width="4.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="946.7" y="590.0"></text>
</g>
<g>
<title>sock_read_iter (19 samples, 0.33%)</title><rect x="943.9" y="563.0" width="3.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="946.9" y="574.0"></text>
</g>
<g>
<title>inet_recvmsg (16 samples, 0.27%)</title><rect x="943.9" y="547.0" width="3.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="946.9" y="558.0"></text>
</g>
<g>
<title>tcp_recvmsg (16 samples, 0.27%)</title><rect x="943.9" y="531.0" width="3.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="946.9" y="542.0"></text>
</g>
<g>
<title>__kfree_skb (5 samples, 0.09%)</title><rect x="944.5" y="515.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="947.5" y="526.0"></text>
</g>
<g>
<title>__slab_free (2 samples, 0.03%)</title><rect x="944.5" y="499.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="947.5" y="510.0"></text>
</g>
<g>
<title>skb_release_all (3 samples, 0.05%)</title><rect x="944.9" y="499.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="947.9" y="510.0"></text>
</g>
<g>
<title>skb_release_head_state (3 samples, 0.05%)</title><rect x="944.9" y="483.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="947.9" y="494.0"></text>
</g>
<g>
<title>sock_rfree (3 samples, 0.05%)</title><rect x="944.9" y="467.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="947.9" y="478.0"></text>
</g>
<g>
<title>lock_sock_nested (2 samples, 0.03%)</title><rect x="945.5" y="515.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="948.5" y="526.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (4 samples, 0.07%)</title><rect x="946.1" y="515.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="949.1" y="526.0"></text>
</g>
<g>
<title>__skb_datagram_iter (4 samples, 0.07%)</title><rect x="946.1" y="499.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="949.1" y="510.0"></text>
</g>
<g>
<title>simple_copy_to_iter (3 samples, 0.05%)</title><rect x="946.3" y="483.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="949.3" y="494.0"></text>
</g>
<g>
<title>__check_object_size (3 samples, 0.05%)</title><rect x="946.3" y="467.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="949.3" y="478.0"></text>
</g>
<g>
<title>sock_recvmsg (3 samples, 0.05%)</title><rect x="947.1" y="547.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="950.1" y="558.0"></text>
</g>
<g>
<title>security_socket_recvmsg (3 samples, 0.05%)</title><rect x="947.1" y="531.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="950.1" y="542.0"></text>
</g>
<g>
<title>security_file_permission (5 samples, 0.09%)</title><rect x="947.7" y="579.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="950.7" y="590.0"></text>
</g>
<g>
<title>selinux_file_permission (3 samples, 0.05%)</title><rect x="948.1" y="563.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="951.1" y="574.0"></text>
</g>
<g>
<title>__inode_security_revalidate (2 samples, 0.03%)</title><rect x="948.3" y="547.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="951.3" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (5 samples, 0.09%)</title><rect x="948.9" y="707.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="951.9" y="718.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.03%)</title><rect x="948.9" y="691.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="951.9" y="702.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (2 samples, 0.03%)</title><rect x="948.9" y="675.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="951.9" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (3 samples, 0.05%)</title><rect x="949.4" y="691.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="952.4" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$201/1629457336.accept (2 samples, 0.03%)</title><rect x="950.2" y="963.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="953.2" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (2 samples, 0.03%)</title><rect x="950.2" y="947.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="953.2" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$197/2022555883.run (2 samples, 0.03%)</title><rect x="950.2" y="931.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="953.2" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (2 samples, 0.03%)</title><rect x="950.2" y="915.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="953.2" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (2 samples, 0.03%)</title><rect x="950.2" y="899.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="953.2" y="910.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (32 samples, 0.55%)</title><rect x="950.8" y="979.0" width="6.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="953.8" y="990.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (32 samples, 0.55%)</title><rect x="950.8" y="963.0" width="6.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="953.8" y="974.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (24 samples, 0.41%)</title><rect x="950.8" y="947.0" width="4.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="953.8" y="958.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (24 samples, 0.41%)</title><rect x="950.8" y="931.0" width="4.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="953.8" y="942.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (17 samples, 0.29%)</title><rect x="950.8" y="915.0" width="3.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="953.8" y="926.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySpliterator.forEachRemaining (17 samples, 0.29%)</title><rect x="950.8" y="899.0" width="3.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="953.8" y="910.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (7 samples, 0.12%)</title><rect x="954.2" y="915.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="957.2" y="926.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (8 samples, 0.14%)</title><rect x="955.6" y="947.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="958.6" y="958.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (7 samples, 0.12%)</title><rect x="955.8" y="931.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="958.8" y="942.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (7 samples, 0.12%)</title><rect x="955.8" y="915.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="958.8" y="926.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (5 samples, 0.09%)</title><rect x="955.8" y="899.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="958.8" y="910.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySpliterator.forEachRemaining (4 samples, 0.07%)</title><rect x="955.8" y="883.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="958.8" y="894.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (2 samples, 0.03%)</title><rect x="956.8" y="899.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="959.8" y="910.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (2 samples, 0.03%)</title><rect x="956.8" y="883.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="959.8" y="894.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.&lt;init&gt; (2 samples, 0.03%)</title><rect x="956.8" y="867.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="959.8" y="878.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.&lt;init&gt; (2 samples, 0.03%)</title><rect x="956.8" y="851.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="959.8" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (62 samples, 1.06%)</title><rect x="957.2" y="979.0" width="12.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="960.2" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$159/717507571.run (33 samples, 0.57%)</title><rect x="957.2" y="963.0" width="6.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="960.2" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (33 samples, 0.57%)</title><rect x="957.2" y="947.0" width="6.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="960.2" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Logger.log (2 samples, 0.03%)</title><rect x="957.4" y="931.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="960.4" y="942.0"></text>
</g>
<g>
<title>java/lang/System$Logger.log (2 samples, 0.03%)</title><rect x="957.4" y="915.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="960.4" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (30 samples, 0.51%)</title><rect x="957.8" y="931.0" width="6.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="960.8" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (30 samples, 0.51%)</title><rect x="957.8" y="915.0" width="6.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="960.8" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (5 samples, 0.09%)</title><rect x="957.8" y="899.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="960.8" y="910.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.03%)</title><rect x="957.8" y="883.0" width="0.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="960.8" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (2 samples, 0.03%)</title><rect x="958.2" y="883.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="961.2" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (25 samples, 0.43%)</title><rect x="958.8" y="899.0" width="5.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="961.8" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (25 samples, 0.43%)</title><rect x="958.8" y="883.0" width="5.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="961.8" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$157/1360780123.run (22 samples, 0.38%)</title><rect x="959.1" y="867.0" width="4.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="962.1" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (22 samples, 0.38%)</title><rect x="959.1" y="851.0" width="4.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="962.1" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (21 samples, 0.36%)</title><rect x="959.1" y="835.0" width="4.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="962.1" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (21 samples, 0.36%)</title><rect x="959.1" y="819.0" width="4.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="962.1" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (3 samples, 0.05%)</title><rect x="959.1" y="803.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="962.1" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (3 samples, 0.05%)</title><rect x="959.1" y="787.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="962.1" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (3 samples, 0.05%)</title><rect x="959.1" y="771.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="962.1" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (2 samples, 0.03%)</title><rect x="959.3" y="755.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="962.3" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (2 samples, 0.03%)</title><rect x="959.3" y="739.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="962.3" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (2 samples, 0.03%)</title><rect x="959.3" y="723.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="962.3" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (18 samples, 0.31%)</title><rect x="959.7" y="803.0" width="3.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="962.7" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (18 samples, 0.31%)</title><rect x="959.7" y="787.0" width="3.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="962.7" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (10 samples, 0.17%)</title><rect x="961.3" y="771.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="964.3" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (10 samples, 0.17%)</title><rect x="961.3" y="755.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="964.3" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (9 samples, 0.15%)</title><rect x="961.3" y="739.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="964.3" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (9 samples, 0.15%)</title><rect x="961.3" y="723.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="964.3" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (9 samples, 0.15%)</title><rect x="961.3" y="707.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="964.3" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (8 samples, 0.14%)</title><rect x="961.5" y="691.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="964.5" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (8 samples, 0.14%)</title><rect x="961.5" y="675.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="964.5" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (8 samples, 0.14%)</title><rect x="961.5" y="659.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="964.5" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (7 samples, 0.12%)</title><rect x="961.7" y="643.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="964.7" y="654.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (7 samples, 0.12%)</title><rect x="961.7" y="627.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="964.7" y="638.0"></text>
</g>
<g>
<title>__pthread_cond_signal (6 samples, 0.10%)</title><rect x="961.9" y="611.0" width="1.2" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="964.9" y="622.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.07%)</title><rect x="962.3" y="595.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="965.3" y="606.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.07%)</title><rect x="962.3" y="579.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="965.3" y="590.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.07%)</title><rect x="962.3" y="563.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="965.3" y="574.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.07%)</title><rect x="962.3" y="547.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="965.3" y="558.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 0.07%)</title><rect x="962.3" y="531.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="965.3" y="542.0"></text>
</g>
<g>
<title>wake_up_q (3 samples, 0.05%)</title><rect x="962.5" y="515.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="965.5" y="526.0"></text>
</g>
<g>
<title>try_to_wake_up (3 samples, 0.05%)</title><rect x="962.5" y="499.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="965.5" y="510.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.05%)</title><rect x="962.5" y="483.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="965.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (2 samples, 0.03%)</title><rect x="963.5" y="867.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="966.5" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$161/782771317.run (29 samples, 0.50%)</title><rect x="963.9" y="963.0" width="5.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="966.9" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (29 samples, 0.50%)</title><rect x="963.9" y="947.0" width="5.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="966.9" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (27 samples, 0.46%)</title><rect x="963.9" y="931.0" width="5.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="966.9" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (25 samples, 0.43%)</title><rect x="963.9" y="915.0" width="5.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="966.9" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (25 samples, 0.43%)</title><rect x="963.9" y="899.0" width="5.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="966.9" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (25 samples, 0.43%)</title><rect x="963.9" y="883.0" width="5.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="966.9" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (22 samples, 0.38%)</title><rect x="964.5" y="867.0" width="4.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="967.5" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (22 samples, 0.38%)</title><rect x="964.5" y="851.0" width="4.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="967.5" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (22 samples, 0.38%)</title><rect x="964.5" y="835.0" width="4.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="967.5" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (22 samples, 0.38%)</title><rect x="964.5" y="819.0" width="4.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="967.5" y="830.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (22 samples, 0.38%)</title><rect x="964.5" y="803.0" width="4.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="967.5" y="814.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.03%)</title><rect x="964.5" y="787.0" width="0.4" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="967.5" y="798.0"></text>
</g>
<g>
<title>__pthread_cond_signal (20 samples, 0.34%)</title><rect x="964.9" y="787.0" width="4.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="967.9" y="798.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (16 samples, 0.27%)</title><rect x="965.7" y="771.0" width="3.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="968.7" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (16 samples, 0.27%)</title><rect x="965.7" y="755.0" width="3.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="968.7" y="766.0"></text>
</g>
<g>
<title>__x64_sys_futex (16 samples, 0.27%)</title><rect x="965.7" y="739.0" width="3.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="968.7" y="750.0"></text>
</g>
<g>
<title>do_futex (16 samples, 0.27%)</title><rect x="965.7" y="723.0" width="3.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="968.7" y="734.0"></text>
</g>
<g>
<title>futex_wake (16 samples, 0.27%)</title><rect x="965.7" y="707.0" width="3.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="968.7" y="718.0"></text>
</g>
<g>
<title>wake_up_q (14 samples, 0.24%)</title><rect x="966.1" y="691.0" width="2.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="969.1" y="702.0"></text>
</g>
<g>
<title>try_to_wake_up (14 samples, 0.24%)</title><rect x="966.1" y="675.0" width="2.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="969.1" y="686.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (14 samples, 0.24%)</title><rect x="966.1" y="659.0" width="2.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="969.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$205/1532762392.run (2 samples, 0.03%)</title><rect x="969.0" y="915.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="972.0" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (2 samples, 0.03%)</title><rect x="969.0" y="899.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="972.0" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (2 samples, 0.03%)</title><rect x="969.0" y="883.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="972.0" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (2 samples, 0.03%)</title><rect x="969.4" y="931.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="972.4" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (2 samples, 0.03%)</title><rect x="969.4" y="915.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="972.4" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (7 samples, 0.12%)</title><rect x="969.8" y="979.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="972.8" y="990.0"></text>
</g>
<g>
<title>java/time/Instant.now (3 samples, 0.05%)</title><rect x="969.8" y="963.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="972.8" y="974.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (3 samples, 0.05%)</title><rect x="969.8" y="947.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="972.8" y="958.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (3 samples, 0.05%)</title><rect x="969.8" y="931.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="972.8" y="942.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (3 samples, 0.05%)</title><rect x="969.8" y="915.0" width="0.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="972.8" y="926.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (2 samples, 0.03%)</title><rect x="970.0" y="899.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="973.0" y="910.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.03%)</title><rect x="970.0" y="883.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="973.0" y="894.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.03%)</title><rect x="970.0" y="867.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="973.0" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (4 samples, 0.07%)</title><rect x="970.4" y="963.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="973.4" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.purgeTimeoutsAndReturnNextDeadline (5 samples, 0.09%)</title><rect x="971.4" y="979.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="974.4" y="990.0"></text>
</g>
<g>
<title>java/util/TreeSet.isEmpty (4 samples, 0.07%)</title><rect x="971.6" y="963.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="974.6" y="974.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (135 samples, 2.31%)</title><rect x="972.4" y="979.0" width="27.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="975.4" y="990.0">s..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (135 samples, 2.31%)</title><rect x="972.4" y="963.0" width="27.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="975.4" y="974.0">s..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (130 samples, 2.23%)</title><rect x="973.4" y="947.0" width="26.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="976.4" y="958.0">s..</text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (72 samples, 1.23%)</title><rect x="974.0" y="931.0" width="14.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="977.0" y="942.0"></text>
</g>
<g>
<title>.annobin_epoll_wait.c (72 samples, 1.23%)</title><rect x="974.0" y="915.0" width="14.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="977.0" y="926.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (58 samples, 0.99%)</title><rect x="976.8" y="899.0" width="11.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="979.8" y="910.0"></text>
</g>
<g>
<title>do_syscall_64 (58 samples, 0.99%)</title><rect x="976.8" y="883.0" width="11.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="979.8" y="894.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (53 samples, 0.91%)</title><rect x="977.8" y="867.0" width="10.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="980.8" y="878.0"></text>
</g>
<g>
<title>do_epoll_wait (53 samples, 0.91%)</title><rect x="977.8" y="851.0" width="10.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="980.8" y="862.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.03%)</title><rect x="977.8" y="835.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="980.8" y="846.0"></text>
</g>
<g>
<title>ep_poll (51 samples, 0.87%)</title><rect x="978.2" y="835.0" width="10.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="981.2" y="846.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (23 samples, 0.39%)</title><rect x="979.1" y="819.0" width="4.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="982.1" y="830.0"></text>
</g>
<g>
<title>ep_send_events_proc (12 samples, 0.21%)</title><rect x="980.7" y="803.0" width="2.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="983.7" y="814.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (11 samples, 0.19%)</title><rect x="980.9" y="787.0" width="2.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="983.9" y="798.0"></text>
</g>
<g>
<title>pipe_poll (4 samples, 0.07%)</title><rect x="981.7" y="771.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="984.7" y="782.0"></text>
</g>
<g>
<title>sock_poll (3 samples, 0.05%)</title><rect x="982.5" y="771.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="985.5" y="782.0"></text>
</g>
<g>
<title>tcp_poll (2 samples, 0.03%)</title><rect x="982.7" y="755.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="985.7" y="766.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (2 samples, 0.03%)</title><rect x="982.7" y="739.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="985.7" y="750.0"></text>
</g>
<g>
<title>mutex_lock (3 samples, 0.05%)</title><rect x="983.1" y="803.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="986.1" y="814.0"></text>
</g>
<g>
<title>ktime_get_ts64 (2 samples, 0.03%)</title><rect x="983.7" y="819.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="986.7" y="830.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.03%)</title><rect x="983.7" y="803.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="986.7" y="814.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (20 samples, 0.34%)</title><rect x="984.1" y="819.0" width="4.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="987.1" y="830.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (11 samples, 0.19%)</title><rect x="984.7" y="803.0" width="2.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="987.7" y="814.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (11 samples, 0.19%)</title><rect x="984.7" y="787.0" width="2.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="987.7" y="798.0"></text>
</g>
<g>
<title>schedule (6 samples, 0.10%)</title><rect x="986.9" y="803.0" width="1.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="989.9" y="814.0"></text>
</g>
<g>
<title>__sched_text_start (5 samples, 0.09%)</title><rect x="987.1" y="787.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="990.1" y="798.0"></text>
</g>
<g>
<title>finish_task_switch (5 samples, 0.09%)</title><rect x="987.1" y="771.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="990.1" y="782.0"></text>
</g>
<g>
<title>select_estimate_accuracy (2 samples, 0.03%)</title><rect x="988.1" y="819.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="991.1" y="830.0"></text>
</g>
<g>
<title>ktime_get_ts64 (2 samples, 0.03%)</title><rect x="988.1" y="803.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="991.1" y="814.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.03%)</title><rect x="988.1" y="787.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="991.1" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (45 samples, 0.77%)</title><rect x="988.6" y="931.0" width="9.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="991.6" y="942.0"></text>
</g>
<g>
<title>java/util/HashMap.get (5 samples, 0.09%)</title><rect x="988.6" y="915.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="991.6" y="926.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (5 samples, 0.09%)</title><rect x="988.6" y="899.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="991.6" y="910.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (29 samples, 0.50%)</title><rect x="989.6" y="915.0" width="5.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="992.6" y="926.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.drain (29 samples, 0.50%)</title><rect x="989.6" y="899.0" width="5.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="992.6" y="910.0"></text>
</g>
<g>
<title>__libc_read (28 samples, 0.48%)</title><rect x="989.6" y="883.0" width="5.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="992.6" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (23 samples, 0.39%)</title><rect x="990.6" y="867.0" width="4.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="993.6" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (23 samples, 0.39%)</title><rect x="990.6" y="851.0" width="4.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="993.6" y="862.0"></text>
</g>
<g>
<title>ksys_read (19 samples, 0.33%)</title><rect x="991.4" y="835.0" width="3.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="994.4" y="846.0"></text>
</g>
<g>
<title>__fdget_pos (2 samples, 0.03%)</title><rect x="991.4" y="819.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="994.4" y="830.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.03%)</title><rect x="991.4" y="803.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="994.4" y="814.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.03%)</title><rect x="991.4" y="787.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="994.4" y="798.0"></text>
</g>
<g>
<title>vfs_read (15 samples, 0.26%)</title><rect x="992.2" y="819.0" width="3.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="995.2" y="830.0"></text>
</g>
<g>
<title>new_sync_read (11 samples, 0.19%)</title><rect x="992.2" y="803.0" width="2.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="995.2" y="814.0"></text>
</g>
<g>
<title>pipe_read (11 samples, 0.19%)</title><rect x="992.2" y="787.0" width="2.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="995.2" y="798.0"></text>
</g>
<g>
<title>__wake_up_common_lock (3 samples, 0.05%)</title><rect x="992.4" y="771.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="995.4" y="782.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.03%)</title><rect x="992.6" y="755.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="995.6" y="766.0"></text>
</g>
<g>
<title>generic_pipe_buf_confirm (2 samples, 0.03%)</title><rect x="993.4" y="771.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="996.4" y="782.0"></text>
</g>
<g>
<title>security_file_permission (4 samples, 0.07%)</title><rect x="994.4" y="803.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="997.4" y="814.0"></text>
</g>
<g>
<title>selinux_file_permission (3 samples, 0.05%)</title><rect x="994.6" y="787.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="997.6" y="798.0"></text>
</g>
<g>
<title>__inode_security_revalidate (2 samples, 0.03%)</title><rect x="994.8" y="771.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="997.8" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (11 samples, 0.19%)</title><rect x="995.4" y="915.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="998.4" y="926.0"></text>
</g>
<g>
<title>java/util/HashSet.add (8 samples, 0.14%)</title><rect x="995.4" y="899.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="998.4" y="910.0"></text>
</g>
<g>
<title>java/util/HashMap.put (8 samples, 0.14%)</title><rect x="995.4" y="883.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="998.4" y="894.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (8 samples, 0.14%)</title><rect x="995.4" y="867.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="998.4" y="878.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (3 samples, 0.05%)</title><rect x="996.4" y="851.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="999.4" y="862.0"></text>
</g>
<g>
<title>java/util/HashSet.contains (3 samples, 0.05%)</title><rect x="997.0" y="899.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1000.0" y="910.0"></text>
</g>
<g>
<title>java/util/HashMap.containsKey (3 samples, 0.05%)</title><rect x="997.0" y="883.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1000.0" y="894.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (3 samples, 0.05%)</title><rect x="997.0" y="867.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1000.0" y="878.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.begin (7 samples, 0.12%)</title><rect x="997.8" y="931.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1000.8" y="942.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.begin (7 samples, 0.12%)</title><rect x="997.8" y="915.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1000.8" y="926.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (7 samples, 0.12%)</title><rect x="997.8" y="899.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1000.8" y="910.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (7 samples, 0.12%)</title><rect x="997.8" y="883.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1000.8" y="894.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (7 samples, 0.12%)</title><rect x="997.8" y="867.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1000.8" y="878.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.end (2 samples, 0.03%)</title><rect x="999.3" y="931.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1002.3" y="942.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (16 samples, 0.27%)</title><rect x="999.7" y="979.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1002.7" y="990.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (16 samples, 0.27%)</title><rect x="999.7" y="963.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1002.7" y="974.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (15 samples, 0.26%)</title><rect x="999.9" y="947.0" width="3.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1002.9" y="958.0"></text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (12 samples, 0.21%)</title><rect x="999.9" y="931.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1002.9" y="942.0"></text>
</g>
<g>
<title>.annobin_epoll_wait.c (10 samples, 0.17%)</title><rect x="1000.1" y="915.0" width="2.0" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1003.1" y="926.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.14%)</title><rect x="1000.5" y="899.0" width="1.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1003.5" y="910.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.14%)</title><rect x="1000.5" y="883.0" width="1.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1003.5" y="894.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (7 samples, 0.12%)</title><rect x="1000.7" y="867.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1003.7" y="878.0"></text>
</g>
<g>
<title>do_epoll_wait (7 samples, 0.12%)</title><rect x="1000.7" y="851.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1003.7" y="862.0"></text>
</g>
<g>
<title>ep_poll (6 samples, 0.10%)</title><rect x="1000.9" y="835.0" width="1.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1003.9" y="846.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (6 samples, 0.10%)</title><rect x="1000.9" y="819.0" width="1.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1003.9" y="830.0"></text>
</g>
<g>
<title>ep_send_events_proc (4 samples, 0.07%)</title><rect x="1000.9" y="803.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1003.9" y="814.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (3 samples, 0.05%)</title><rect x="1001.1" y="787.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1004.1" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (2 samples, 0.03%)</title><rect x="1002.3" y="931.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1005.3" y="942.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.03%)</title><rect x="1002.3" y="915.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1005.3" y="926.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.03%)</title><rect x="1002.3" y="899.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1005.3" y="910.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.clear (8 samples, 0.14%)</title><rect x="1002.9" y="979.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1005.9" y="990.0"></text>
</g>
<g>
<title>java/util/HashSet.clear (8 samples, 0.14%)</title><rect x="1002.9" y="963.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1005.9" y="974.0"></text>
</g>
<g>
<title>java/util/HashMap.clear (7 samples, 0.12%)</title><rect x="1003.1" y="947.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1006.1" y="958.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (18 samples, 0.31%)</title><rect x="1004.5" y="979.0" width="3.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1007.5" y="990.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (18 samples, 0.31%)</title><rect x="1004.5" y="963.0" width="3.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1007.5" y="974.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (18 samples, 0.31%)</title><rect x="1004.5" y="947.0" width="3.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1007.5" y="958.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.&lt;init&gt; (2 samples, 0.03%)</title><rect x="1007.7" y="931.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1010.7" y="942.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.&lt;init&gt; (2 samples, 0.03%)</title><rect x="1007.7" y="915.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1010.7" y="926.0"></text>
</g>
<g>
<title>msort_with_tmp.part.0 (3 samples, 0.05%)</title><rect x="1008.4" y="995.0" width="0.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1011.4" y="1006.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (310 samples, 5.31%)</title><rect x="1009.0" y="995.0" width="62.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1012.0" y="1006.0">one/ni..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (65 samples, 1.11%)</title><rect x="1009.6" y="979.0" width="13.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1012.6" y="990.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (61 samples, 1.04%)</title><rect x="1010.4" y="963.0" width="12.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1013.4" y="974.0"></text>
</g>
<g>
<title>.annobin_epoll_wait.c (50 samples, 0.86%)</title><rect x="1011.2" y="947.0" width="10.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1014.2" y="958.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (41 samples, 0.70%)</title><rect x="1013.0" y="931.0" width="8.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1016.0" y="942.0"></text>
</g>
<g>
<title>do_syscall_64 (41 samples, 0.70%)</title><rect x="1013.0" y="915.0" width="8.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1016.0" y="926.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (39 samples, 0.67%)</title><rect x="1013.4" y="899.0" width="7.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1016.4" y="910.0"></text>
</g>
<g>
<title>do_epoll_wait (38 samples, 0.65%)</title><rect x="1013.6" y="883.0" width="7.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1016.6" y="894.0"></text>
</g>
<g>
<title>ep_poll (38 samples, 0.65%)</title><rect x="1013.6" y="867.0" width="7.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1016.6" y="878.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (26 samples, 0.45%)</title><rect x="1014.2" y="851.0" width="5.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1017.2" y="862.0"></text>
</g>
<g>
<title>ep_send_events_proc (20 samples, 0.34%)</title><rect x="1015.2" y="835.0" width="4.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1018.2" y="846.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (18 samples, 0.31%)</title><rect x="1015.6" y="819.0" width="3.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1018.6" y="830.0"></text>
</g>
<g>
<title>sock_poll (17 samples, 0.29%)</title><rect x="1015.8" y="803.0" width="3.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1018.8" y="814.0"></text>
</g>
<g>
<title>tcp_poll (4 samples, 0.07%)</title><rect x="1018.5" y="787.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1021.5" y="798.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (3 samples, 0.05%)</title><rect x="1018.7" y="771.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1021.7" y="782.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (9 samples, 0.15%)</title><rect x="1019.5" y="851.0" width="1.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1022.5" y="862.0"></text>
</g>
<g>
<title>schedule (8 samples, 0.14%)</title><rect x="1019.7" y="835.0" width="1.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1022.7" y="846.0"></text>
</g>
<g>
<title>__sched_text_start (8 samples, 0.14%)</title><rect x="1019.7" y="819.0" width="1.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1022.7" y="830.0"></text>
</g>
<g>
<title>finish_task_switch (7 samples, 0.12%)</title><rect x="1019.9" y="803.0" width="1.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1022.9" y="814.0"></text>
</g>
<g>
<title>__GI___clock_gettime (2 samples, 0.03%)</title><rect x="1021.7" y="947.0" width="0.4" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="1024.7" y="958.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (2 samples, 0.03%)</title><rect x="1022.1" y="947.0" width="0.4" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1025.1" y="958.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (242 samples, 4.14%)</title><rect x="1022.7" y="979.0" width="48.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1025.7" y="990.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (238 samples, 4.08%)</title><rect x="1023.5" y="963.0" width="48.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1026.5" y="974.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (159 samples, 2.72%)</title><rect x="1023.5" y="947.0" width="32.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1026.5" y="958.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (140 samples, 2.40%)</title><rect x="1024.1" y="931.0" width="28.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1027.1" y="942.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (136 samples, 2.33%)</title><rect x="1024.9" y="915.0" width="27.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1027.9" y="926.0">o..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (114 samples, 1.95%)</title><rect x="1024.9" y="899.0" width="23.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1027.9" y="910.0">R..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (11 samples, 0.19%)</title><rect x="1025.1" y="883.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1028.1" y="894.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.03%)</title><rect x="1026.1" y="867.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1029.1" y="878.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.03%)</title><rect x="1026.1" y="851.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1029.1" y="862.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (2 samples, 0.03%)</title><rect x="1026.9" y="867.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1029.9" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.entity (102 samples, 1.75%)</title><rect x="1027.3" y="883.0" width="20.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1030.3" y="894.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (4 samples, 0.07%)</title><rect x="1028.0" y="867.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1031.0" y="878.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.05%)</title><rect x="1028.2" y="851.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1031.2" y="862.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.05%)</title><rect x="1028.2" y="835.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1031.2" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.executeAsync (59 samples, 1.01%)</title><rect x="1028.8" y="867.0" width="11.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1031.8" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (59 samples, 1.01%)</title><rect x="1028.8" y="851.0" width="11.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1031.8" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (59 samples, 1.01%)</title><rect x="1028.8" y="835.0" width="11.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1031.8" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (58 samples, 0.99%)</title><rect x="1028.8" y="819.0" width="11.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1031.8" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.03%)</title><rect x="1029.6" y="803.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1032.6" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.03%)</title><rect x="1029.6" y="787.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1032.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (2 samples, 0.03%)</title><rect x="1029.6" y="771.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1032.6" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (52 samples, 0.89%)</title><rect x="1030.0" y="803.0" width="10.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1033.0" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (52 samples, 0.89%)</title><rect x="1030.0" y="787.0" width="10.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1033.0" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (52 samples, 0.89%)</title><rect x="1030.0" y="771.0" width="10.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1033.0" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (52 samples, 0.89%)</title><rect x="1030.0" y="755.0" width="10.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1033.0" y="766.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (52 samples, 0.89%)</title><rect x="1030.0" y="739.0" width="10.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1033.0" y="750.0"></text>
</g>
<g>
<title>Unsafe_Unpark (9 samples, 0.15%)</title><rect x="1030.2" y="723.0" width="1.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1033.2" y="734.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_lock (3 samples, 0.05%)</title><rect x="1031.2" y="707.0" width="0.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1034.2" y="718.0"></text>
</g>
<g>
<title>__pthread_cond_signal (42 samples, 0.72%)</title><rect x="1032.0" y="723.0" width="8.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1035.0" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (39 samples, 0.67%)</title><rect x="1032.6" y="707.0" width="7.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1035.6" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (39 samples, 0.67%)</title><rect x="1032.6" y="691.0" width="7.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1035.6" y="702.0"></text>
</g>
<g>
<title>__x64_sys_futex (38 samples, 0.65%)</title><rect x="1032.8" y="675.0" width="7.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1035.8" y="686.0"></text>
</g>
<g>
<title>do_futex (34 samples, 0.58%)</title><rect x="1033.6" y="659.0" width="6.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1036.6" y="670.0"></text>
</g>
<g>
<title>futex_wake (34 samples, 0.58%)</title><rect x="1033.6" y="643.0" width="6.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1036.6" y="654.0"></text>
</g>
<g>
<title>mark_wake_futex (3 samples, 0.05%)</title><rect x="1033.8" y="627.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1036.8" y="638.0"></text>
</g>
<g>
<title>wake_up_q (29 samples, 0.50%)</title><rect x="1034.6" y="627.0" width="5.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1037.6" y="638.0"></text>
</g>
<g>
<title>try_to_wake_up (29 samples, 0.50%)</title><rect x="1034.6" y="611.0" width="5.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1037.6" y="622.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (29 samples, 0.50%)</title><rect x="1034.6" y="595.0" width="5.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1037.6" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/ConsistentHashImpl.all (20 samples, 0.34%)</title><rect x="1040.7" y="867.0" width="4.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1043.7" y="878.0"></text>
</g>
<g>
<title>java/util/Set.copyOf (20 samples, 0.34%)</title><rect x="1040.7" y="851.0" width="4.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1043.7" y="862.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (9 samples, 0.15%)</title><rect x="1040.7" y="835.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1043.7" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.next (3 samples, 0.05%)</title><rect x="1041.1" y="819.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1044.1" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.nextNode (3 samples, 0.05%)</title><rect x="1041.1" y="803.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1044.1" y="814.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (4 samples, 0.07%)</title><rect x="1041.7" y="819.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1044.7" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (2 samples, 0.03%)</title><rect x="1041.7" y="803.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1044.7" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.keySet (2 samples, 0.03%)</title><rect x="1042.1" y="803.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1045.1" y="814.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (8 samples, 0.14%)</title><rect x="1042.5" y="835.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1045.5" y="846.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (8 samples, 0.14%)</title><rect x="1042.5" y="819.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1045.5" y="830.0"></text>
</g>
<g>
<title>java/util/HashSet.add (6 samples, 0.10%)</title><rect x="1042.5" y="803.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1045.5" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.put (6 samples, 0.10%)</title><rect x="1042.5" y="787.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1045.5" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (5 samples, 0.09%)</title><rect x="1042.7" y="771.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1045.7" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (2 samples, 0.03%)</title><rect x="1042.7" y="755.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1045.7" y="766.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (2 samples, 0.03%)</title><rect x="1043.1" y="755.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1046.1" y="766.0"></text>
</g>
<g>
<title>java/util/Set.of (3 samples, 0.05%)</title><rect x="1044.1" y="835.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1047.1" y="846.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$SetN.&lt;init&gt; (3 samples, 0.05%)</title><rect x="1044.1" y="819.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1047.1" y="830.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$SetN.probe (3 samples, 0.05%)</title><rect x="1044.1" y="803.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1047.1" y="814.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (3 samples, 0.05%)</title><rect x="1044.1" y="787.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1047.1" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (3 samples, 0.05%)</title><rect x="1044.1" y="771.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1047.1" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/RF.from (16 samples, 0.27%)</title><rect x="1044.7" y="867.0" width="3.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1047.7" y="878.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splitToList (14 samples, 0.24%)</title><rect x="1044.9" y="851.0" width="2.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1047.9" y="862.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.hasNext (7 samples, 0.12%)</title><rect x="1045.5" y="835.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1048.5" y="846.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.tryToComputeNext (6 samples, 0.10%)</title><rect x="1045.7" y="819.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1048.7" y="830.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (6 samples, 0.10%)</title><rect x="1045.7" y="803.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1048.7" y="814.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (6 samples, 0.10%)</title><rect x="1045.7" y="787.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1048.7" y="798.0"></text>
</g>
<g>
<title>java/lang/String.subSequence (6 samples, 0.10%)</title><rect x="1045.7" y="771.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1048.7" y="782.0"></text>
</g>
<g>
<title>java/lang/String.substring (6 samples, 0.10%)</title><rect x="1045.7" y="755.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1048.7" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (6 samples, 0.10%)</title><rect x="1045.7" y="739.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1048.7" y="750.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.next (3 samples, 0.05%)</title><rect x="1046.9" y="835.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1049.9" y="846.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (14 samples, 0.24%)</title><rect x="1048.0" y="899.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1051.0" y="910.0"></text>
</g>
<g>
<title>java/util/HashMap.get (14 samples, 0.24%)</title><rect x="1048.0" y="883.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1051.0" y="894.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (11 samples, 0.19%)</title><rect x="1048.0" y="867.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1051.0" y="878.0"></text>
</g>
<g>
<title>java/lang/String.equals (9 samples, 0.15%)</title><rect x="1048.4" y="851.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1051.4" y="862.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (3 samples, 0.05%)</title><rect x="1050.2" y="867.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1053.2" y="878.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.03%)</title><rect x="1050.4" y="851.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1053.4" y="862.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (2 samples, 0.03%)</title><rect x="1050.4" y="835.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1053.4" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (8 samples, 0.14%)</title><rect x="1050.8" y="899.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1053.8" y="910.0"></text>
</g>
<g>
<title>java/lang/String.substring (8 samples, 0.14%)</title><rect x="1050.8" y="883.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1053.8" y="894.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (7 samples, 0.12%)</title><rect x="1051.0" y="867.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1054.0" y="878.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.03%)</title><rect x="1051.2" y="851.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1054.2" y="862.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4 samples, 0.07%)</title><rect x="1051.6" y="851.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1054.6" y="862.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (7 samples, 0.12%)</title><rect x="1052.4" y="931.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1055.4" y="942.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (3 samples, 0.05%)</title><rect x="1052.4" y="915.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1055.4" y="926.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.03%)</title><rect x="1052.6" y="899.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1055.6" y="910.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.03%)</title><rect x="1052.6" y="883.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1055.6" y="894.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.07%)</title><rect x="1053.0" y="915.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1056.0" y="926.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.07%)</title><rect x="1053.0" y="899.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1056.0" y="910.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (6 samples, 0.10%)</title><rect x="1053.8" y="931.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1056.8" y="942.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (6 samples, 0.10%)</title><rect x="1053.8" y="915.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1056.8" y="926.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (6 samples, 0.10%)</title><rect x="1053.8" y="899.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1056.8" y="910.0"></text>
</g>
<g>
<title>java/lang/Character.digit (3 samples, 0.05%)</title><rect x="1054.0" y="883.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1057.0" y="894.0"></text>
</g>
<g>
<title>java/lang/Character.digit (3 samples, 0.05%)</title><rect x="1054.0" y="867.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1057.0" y="878.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.digit (3 samples, 0.05%)</title><rect x="1054.0" y="851.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1057.0" y="862.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.03%)</title><rect x="1054.6" y="883.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1057.6" y="894.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (2 samples, 0.03%)</title><rect x="1054.6" y="867.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1057.6" y="878.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.05%)</title><rect x="1055.0" y="931.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1058.0" y="942.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.05%)</title><rect x="1055.0" y="915.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1058.0" y="926.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.05%)</title><rect x="1055.0" y="899.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1058.0" y="910.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (79 samples, 1.35%)</title><rect x="1055.6" y="947.0" width="16.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1058.6" y="958.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (72 samples, 1.23%)</title><rect x="1056.2" y="931.0" width="14.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1059.2" y="942.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.27%)</title><rect x="1056.6" y="915.0" width="3.3" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="1059.6" y="926.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.27%)</title><rect x="1056.6" y="899.0" width="3.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1059.6" y="910.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (11 samples, 0.19%)</title><rect x="1056.6" y="883.0" width="2.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1059.6" y="894.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.03%)</title><rect x="1057.3" y="867.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1060.3" y="878.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (5 samples, 0.09%)</title><rect x="1057.9" y="867.0" width="1.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1060.9" y="878.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (2 samples, 0.03%)</title><rect x="1058.9" y="883.0" width="0.4" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="1061.9" y="894.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 0.05%)</title><rect x="1059.3" y="883.0" width="0.6" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="1062.3" y="894.0"></text>
</g>
<g>
<title>__libc_recv (54 samples, 0.92%)</title><rect x="1059.9" y="915.0" width="10.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1062.9" y="926.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (47 samples, 0.80%)</title><rect x="1061.3" y="899.0" width="9.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1064.3" y="910.0"></text>
</g>
<g>
<title>do_syscall_64 (47 samples, 0.80%)</title><rect x="1061.3" y="883.0" width="9.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1064.3" y="894.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (43 samples, 0.74%)</title><rect x="1062.1" y="867.0" width="8.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1065.1" y="878.0"></text>
</g>
<g>
<title>__sys_recvfrom (43 samples, 0.74%)</title><rect x="1062.1" y="851.0" width="8.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1065.1" y="862.0"></text>
</g>
<g>
<title>inet_recvmsg (27 samples, 0.46%)</title><rect x="1062.3" y="835.0" width="5.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1065.3" y="846.0"></text>
</g>
<g>
<title>tcp_recvmsg (27 samples, 0.46%)</title><rect x="1062.3" y="819.0" width="5.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1065.3" y="830.0"></text>
</g>
<g>
<title>__kfree_skb (4 samples, 0.07%)</title><rect x="1062.7" y="803.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1065.7" y="814.0"></text>
</g>
<g>
<title>skb_release_all (3 samples, 0.05%)</title><rect x="1062.7" y="787.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1065.7" y="798.0"></text>
</g>
<g>
<title>skb_release_head_state (3 samples, 0.05%)</title><rect x="1062.7" y="771.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1065.7" y="782.0"></text>
</g>
<g>
<title>sock_rfree (2 samples, 0.03%)</title><rect x="1062.9" y="755.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1065.9" y="766.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (7 samples, 0.12%)</title><rect x="1063.5" y="803.0" width="1.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1066.5" y="814.0"></text>
</g>
<g>
<title>__ip_queue_xmit (7 samples, 0.12%)</title><rect x="1063.5" y="787.0" width="1.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1066.5" y="798.0"></text>
</g>
<g>
<title>ip_local_out (2 samples, 0.03%)</title><rect x="1063.5" y="771.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1066.5" y="782.0"></text>
</g>
<g>
<title>__ip_local_out (2 samples, 0.03%)</title><rect x="1063.5" y="755.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1066.5" y="766.0"></text>
</g>
<g>
<title>nf_hook_slow (2 samples, 0.03%)</title><rect x="1063.5" y="739.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1066.5" y="750.0"></text>
</g>
<g>
<title>ip_output (5 samples, 0.09%)</title><rect x="1063.9" y="771.0" width="1.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1066.9" y="782.0"></text>
</g>
<g>
<title>ip_finish_output2 (4 samples, 0.07%)</title><rect x="1063.9" y="755.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1066.9" y="766.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (4 samples, 0.07%)</title><rect x="1063.9" y="739.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1066.9" y="750.0"></text>
</g>
<g>
<title>do_softirq.part.0 (4 samples, 0.07%)</title><rect x="1063.9" y="723.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1066.9" y="734.0"></text>
</g>
<g>
<title>do_softirq_own_stack (4 samples, 0.07%)</title><rect x="1063.9" y="707.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1066.9" y="718.0"></text>
</g>
<g>
<title>__softirqentry_text_start (4 samples, 0.07%)</title><rect x="1063.9" y="691.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1066.9" y="702.0"></text>
</g>
<g>
<title>net_rx_action (4 samples, 0.07%)</title><rect x="1063.9" y="675.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1066.9" y="686.0"></text>
</g>
<g>
<title>process_backlog (4 samples, 0.07%)</title><rect x="1063.9" y="659.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1066.9" y="670.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (4 samples, 0.07%)</title><rect x="1063.9" y="643.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1066.9" y="654.0"></text>
</g>
<g>
<title>ip_rcv (4 samples, 0.07%)</title><rect x="1063.9" y="627.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1066.9" y="638.0"></text>
</g>
<g>
<title>ip_local_deliver (3 samples, 0.05%)</title><rect x="1063.9" y="611.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1066.9" y="622.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (2 samples, 0.03%)</title><rect x="1063.9" y="595.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1066.9" y="606.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (2 samples, 0.03%)</title><rect x="1063.9" y="579.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1066.9" y="590.0"></text>
</g>
<g>
<title>tcp_v4_rcv (2 samples, 0.03%)</title><rect x="1063.9" y="563.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1066.9" y="574.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (10 samples, 0.17%)</title><rect x="1065.3" y="803.0" width="2.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1068.3" y="814.0"></text>
</g>
<g>
<title>__skb_datagram_iter (10 samples, 0.17%)</title><rect x="1065.3" y="787.0" width="2.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1068.3" y="798.0"></text>
</g>
<g>
<title>_copy_to_iter (2 samples, 0.03%)</title><rect x="1065.5" y="771.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1068.5" y="782.0"></text>
</g>
<g>
<title>copyout (2 samples, 0.03%)</title><rect x="1065.5" y="755.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1068.5" y="766.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (2 samples, 0.03%)</title><rect x="1065.5" y="739.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1068.5" y="750.0"></text>
</g>
<g>
<title>simple_copy_to_iter (7 samples, 0.12%)</title><rect x="1065.9" y="771.0" width="1.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1068.9" y="782.0"></text>
</g>
<g>
<title>__check_object_size (4 samples, 0.07%)</title><rect x="1066.5" y="755.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1069.5" y="766.0"></text>
</g>
<g>
<title>__virt_addr_valid (3 samples, 0.05%)</title><rect x="1066.5" y="739.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1069.5" y="750.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (2 samples, 0.03%)</title><rect x="1067.4" y="803.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1070.4" y="814.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (2 samples, 0.03%)</title><rect x="1067.4" y="787.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1070.4" y="798.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.03%)</title><rect x="1067.4" y="771.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1070.4" y="782.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.03%)</title><rect x="1067.4" y="755.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1070.4" y="766.0"></text>
</g>
<g>
<title>sock_recvmsg (9 samples, 0.15%)</title><rect x="1067.8" y="835.0" width="1.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1070.8" y="846.0"></text>
</g>
<g>
<title>security_socket_recvmsg (8 samples, 0.14%)</title><rect x="1068.0" y="819.0" width="1.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1071.0" y="830.0"></text>
</g>
<g>
<title>sock_has_perm (4 samples, 0.07%)</title><rect x="1068.8" y="803.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1071.8" y="814.0"></text>
</g>
<g>
<title>sockfd_lookup_light (6 samples, 0.10%)</title><rect x="1069.6" y="835.0" width="1.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1072.6" y="846.0"></text>
</g>
<g>
<title>__fget_light (5 samples, 0.09%)</title><rect x="1069.8" y="819.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1072.8" y="830.0"></text>
</g>
<g>
<title>__fget (4 samples, 0.07%)</title><rect x="1070.0" y="803.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1073.0" y="814.0"></text>
</g>
<g>
<title>one/nio/net/Session.listen (4 samples, 0.07%)</title><rect x="1070.8" y="931.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1073.8" y="942.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.listen (4 samples, 0.07%)</title><rect x="1070.8" y="915.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1073.8" y="926.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="1070.8" y="899.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1073.8" y="910.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (2 samples, 0.03%)</title><rect x="1071.2" y="899.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1074.2" y="910.0"></text>
</g>
<g>
<title>start_thread (585 samples, 10.02%)</title><rect x="1071.8" y="995.0" width="118.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1074.8" y="1006.0">start_thread</text>
</g>
<g>
<title>thread_native_entry(Thread*) (585 samples, 10.02%)</title><rect x="1071.8" y="979.0" width="118.2" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1074.8" y="990.0">thread_native_..</text>
</g>
<g>
<title>GangWorker::loop() (207 samples, 3.54%)</title><rect x="1072.0" y="963.0" width="41.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1075.0" y="974.0">Gan..</text>
</g>
<g>
<title>G1CMConcurrentMarkingTask::work(unsigned int) (7 samples, 0.12%)</title><rect x="1072.0" y="947.0" width="1.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1075.0" y="958.0"></text>
</g>
<g>
<title>G1CMTask::do_marking_step(double, bool, bool) (7 samples, 0.12%)</title><rect x="1072.0" y="931.0" width="1.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1075.0" y="942.0"></text>
</g>
<g>
<title>G1CMTask::drain_local_queue(bool) [clone .part.153] (4 samples, 0.07%)</title><rect x="1072.0" y="915.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1075.0" y="926.0"></text>
</g>
<g>
<title>void G1CMTask::process_grey_task_entry&lt;true&gt;(G1TaskQueueEntry) (4 samples, 0.07%)</title><rect x="1072.0" y="899.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1075.0" y="910.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1CMOopClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1CMOopClosure*, oopDesc*, Klass*) (4 samples, 0.07%)</title><rect x="1072.0" y="883.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1075.0" y="894.0"></text>
</g>
<g>
<title>void G1CMTask::process_grey_task_entry&lt;true&gt;(G1TaskQueueEntry) (3 samples, 0.05%)</title><rect x="1072.8" y="915.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1075.8" y="926.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (190 samples, 3.25%)</title><rect x="1073.6" y="947.0" width="38.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1076.6" y="958.0">G1P..</text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (36 samples, 0.62%)</title><rect x="1073.6" y="931.0" width="7.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1076.6" y="942.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (5 samples, 0.09%)</title><rect x="1073.8" y="915.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1076.8" y="926.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (3 samples, 0.05%)</title><rect x="1074.2" y="899.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1077.2" y="910.0"></text>
</g>
<g>
<title>SpinPause (29 samples, 0.50%)</title><rect x="1075.0" y="915.0" width="5.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1078.0" y="926.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (145 samples, 2.48%)</title><rect x="1080.9" y="931.0" width="29.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1083.9" y="942.0">G1..</text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (145 samples, 2.48%)</title><rect x="1080.9" y="915.0" width="29.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1083.9" y="926.0">G1..</text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (144 samples, 2.47%)</title><rect x="1080.9" y="899.0" width="29.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1083.9" y="910.0">G1..</text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (144 samples, 2.47%)</title><rect x="1080.9" y="883.0" width="29.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1083.9" y="894.0">Di..</text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (142 samples, 2.43%)</title><rect x="1080.9" y="867.0" width="28.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1083.9" y="878.0">G1..</text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (42 samples, 0.72%)</title><rect x="1081.1" y="851.0" width="8.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1084.1" y="862.0"></text>
</g>
<g>
<title>G1CardTable::mark_card_deferred(unsigned long) (3 samples, 0.05%)</title><rect x="1083.7" y="835.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1086.7" y="846.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (22 samples, 0.38%)</title><rect x="1084.3" y="835.0" width="4.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1087.3" y="846.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (7 samples, 0.12%)</title><rect x="1087.4" y="819.0" width="1.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1090.4" y="830.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (2 samples, 0.03%)</title><rect x="1089.0" y="835.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1092.0" y="846.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.121] (99 samples, 1.70%)</title><rect x="1089.6" y="851.0" width="20.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1092.6" y="862.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (91 samples, 1.56%)</title><rect x="1089.6" y="835.0" width="18.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1092.6" y="846.0"></text>
</g>
<g>
<title>G1BlockOffsetTablePart::forward_to_block_containing_addr_slow(HeapWord*, HeapWord*, void const*) (8 samples, 0.14%)</title><rect x="1096.0" y="819.0" width="1.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1099.0" y="830.0"></text>
</g>
<g>
<title>Klass::start_of_vtable() const (3 samples, 0.05%)</title><rect x="1097.9" y="819.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1100.9" y="830.0"></text>
</g>
<g>
<title>oopDesc::size() (2 samples, 0.03%)</title><rect x="1098.5" y="819.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1101.5" y="830.0"></text>
</g>
<g>
<title>void G1ScanObjsDuringUpdateRSClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) (28 samples, 0.48%)</title><rect x="1099.1" y="819.0" width="5.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1102.1" y="830.0"></text>
</g>
<g>
<title>void OopOopIterateBoundedDispatch&lt;G1ScanObjsDuringUpdateRSClosure&gt;::Table::oop_oop_iterate_bounded&lt;ObjArrayKlass, unsigned int&gt;(G1ScanObjsDuringUpdateRSClosure*, oopDesc*, Klass*, MemRegion) (2 samples, 0.03%)</title><rect x="1104.7" y="819.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1107.7" y="830.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1ScanObjsDuringUpdateRSClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1ScanObjsDuringUpdateRSClosure*, oopDesc*, Klass*) (14 samples, 0.24%)</title><rect x="1105.1" y="819.0" width="2.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1108.1" y="830.0"></text>
</g>
<g>
<title>void G1ScanObjsDuringUpdateRSClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) (2 samples, 0.03%)</title><rect x="1107.6" y="803.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1110.6" y="814.0"></text>
</g>
<g>
<title>oopDesc::size() (3 samples, 0.05%)</title><rect x="1108.0" y="835.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1111.0" y="846.0"></text>
</g>
<g>
<title>oopDesc::size_given_klass(Klass*) (3 samples, 0.05%)</title><rect x="1108.6" y="835.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1111.6" y="846.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1ScanObjsDuringUpdateRSClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1ScanObjsDuringUpdateRSClosure*, oopDesc*, Klass*) (2 samples, 0.03%)</title><rect x="1109.2" y="835.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1112.2" y="846.0"></text>
</g>
<g>
<title>G1RemSet::scan_rem_set(G1ParScanThreadState*, unsigned int) (4 samples, 0.07%)</title><rect x="1110.2" y="931.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1113.2" y="942.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const (4 samples, 0.07%)</title><rect x="1110.2" y="915.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1113.2" y="926.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::do_heap_region(HeapRegion*) (4 samples, 0.07%)</title><rect x="1110.2" y="899.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1113.2" y="910.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::scan_rem_set_roots(HeapRegion*) (3 samples, 0.05%)</title><rect x="1110.4" y="883.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1113.4" y="894.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (5 samples, 0.09%)</title><rect x="1111.0" y="931.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1114.0" y="942.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (4 samples, 0.07%)</title><rect x="1111.2" y="915.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1114.2" y="926.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (4 samples, 0.07%)</title><rect x="1111.2" y="899.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1114.2" y="910.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (4 samples, 0.07%)</title><rect x="1111.2" y="883.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1114.2" y="894.0"></text>
</g>
<g>
<title>G1ParallelCleaningTask::work(unsigned int) (3 samples, 0.05%)</title><rect x="1112.0" y="947.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1115.0" y="958.0"></text>
</g>
<g>
<title>G1RebuildRemSetTask::work(unsigned int) (2 samples, 0.03%)</title><rect x="1112.6" y="947.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1115.6" y="958.0"></text>
</g>
<g>
<title>HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const (2 samples, 0.03%)</title><rect x="1112.6" y="931.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1115.6" y="942.0"></text>
</g>
<g>
<title>G1RebuildRemSetTask::G1RebuildRemSetHeapRegionClosure::do_heap_region(HeapRegion*) (2 samples, 0.03%)</title><rect x="1112.6" y="915.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1115.6" y="926.0"></text>
</g>
<g>
<title>G1RedirtyLoggedCardsTask::work(unsigned int) (2 samples, 0.03%)</title><rect x="1113.0" y="947.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1116.0" y="958.0"></text>
</g>
<g>
<title>JavaThread::run() (359 samples, 6.15%)</title><rect x="1113.8" y="963.0" width="72.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1116.8" y="974.0">JavaThre..</text>
</g>
<g>
<title>JavaThread::thread_main_inner() (359 samples, 6.15%)</title><rect x="1113.8" y="947.0" width="72.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1116.8" y="958.0">JavaThre..</text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (354 samples, 6.06%)</title><rect x="1113.8" y="931.0" width="71.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1116.8" y="942.0">CompileB..</text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (353 samples, 6.04%)</title><rect x="1113.8" y="915.0" width="71.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1116.8" y="926.0">CompileB..</text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (334 samples, 5.72%)</title><rect x="1113.8" y="899.0" width="67.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1116.8" y="910.0">C2Compi..</text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (334 samples, 5.72%)</title><rect x="1113.8" y="883.0" width="67.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1116.8" y="894.0">Compile..</text>
</g>
<g>
<title>CallGenerator::for_inline(ciMethod*, float) (2 samples, 0.03%)</title><rect x="1113.8" y="867.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1116.8" y="878.0"></text>
</g>
<g>
<title>InlineTree::check_can_parse(ciMethod*) (2 samples, 0.03%)</title><rect x="1113.8" y="851.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1116.8" y="862.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (2 samples, 0.03%)</title><rect x="1113.8" y="835.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1116.8" y="846.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (2 samples, 0.03%)</title><rect x="1113.8" y="819.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1116.8" y="830.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (2 samples, 0.03%)</title><rect x="1113.8" y="803.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1116.8" y="814.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (2 samples, 0.03%)</title><rect x="1113.8" y="787.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1116.8" y="798.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (2 samples, 0.03%)</title><rect x="1113.8" y="771.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1116.8" y="782.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (2 samples, 0.03%)</title><rect x="1113.8" y="755.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1116.8" y="766.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (176 samples, 3.01%)</title><rect x="1114.2" y="867.0" width="35.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1117.2" y="878.0">Com..</text>
</g>
<g>
<title>Compile::Output() (7 samples, 0.12%)</title><rect x="1114.2" y="851.0" width="1.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1117.2" y="862.0"></text>
</g>
<g>
<title>Compile::init_buffer(unsigned int*) (4 samples, 0.07%)</title><rect x="1114.4" y="835.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1117.4" y="846.0"></text>
</g>
<g>
<title>Compile::shorten_branches(unsigned int*, int&amp;, int&amp;, int&amp;) (3 samples, 0.05%)</title><rect x="1114.6" y="819.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1117.6" y="830.0"></text>
</g>
<g>
<title>Compile::scratch_emit_size(Node const*) (3 samples, 0.05%)</title><rect x="1114.6" y="803.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1117.6" y="814.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (2 samples, 0.03%)</title><rect x="1115.2" y="835.0" width="0.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1118.2" y="846.0"></text>
</g>
<g>
<title>Compile::fill_buffer(CodeBuffer*, unsigned int*) (5 samples, 0.09%)</title><rect x="1115.6" y="851.0" width="1.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1118.6" y="862.0"></text>
</g>
<g>
<title>Compile::Process_OopMap_Node(MachNode*, int) (2 samples, 0.03%)</title><rect x="1116.0" y="835.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1119.0" y="846.0"></text>
</g>
<g>
<title>Matcher::match() (17 samples, 0.29%)</title><rect x="1116.7" y="851.0" width="3.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1119.7" y="862.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (15 samples, 0.26%)</title><rect x="1117.1" y="835.0" width="3.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1120.1" y="846.0"></text>
</g>
<g>
<title>Matcher::match_tree(Node const*) (9 samples, 0.15%)</title><rect x="1117.9" y="819.0" width="1.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1120.9" y="830.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (6 samples, 0.10%)</title><rect x="1118.1" y="803.0" width="1.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1121.1" y="814.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (2 samples, 0.03%)</title><rect x="1118.5" y="787.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1121.5" y="798.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (2 samples, 0.03%)</title><rect x="1118.5" y="771.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1121.5" y="782.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (2 samples, 0.03%)</title><rect x="1118.5" y="755.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1121.5" y="766.0"></text>
</g>
<g>
<title>Node::clone() const (2 samples, 0.03%)</title><rect x="1119.7" y="819.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1122.7" y="830.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (18 samples, 0.31%)</title><rect x="1120.1" y="851.0" width="3.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1123.1" y="862.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (15 samples, 0.26%)</title><rect x="1120.7" y="835.0" width="3.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1123.7" y="846.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_late(VectorSet&amp;, Node_Stack&amp;) (6 samples, 0.10%)</title><rect x="1120.9" y="819.0" width="1.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1123.9" y="830.0"></text>
</g>
<g>
<title>Node_Backward_Iterator::next() (2 samples, 0.03%)</title><rect x="1120.9" y="803.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1123.9" y="814.0"></text>
</g>
<g>
<title>PhaseCFG::insert_anti_dependences(Block*, Node*, bool) (4 samples, 0.07%)</title><rect x="1121.3" y="803.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1124.3" y="814.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_local(Block*, GrowableArray&lt;int&gt;&amp;, VectorSet&amp;, long*) (3 samples, 0.05%)</title><rect x="1122.1" y="819.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1125.1" y="830.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (2 samples, 0.03%)</title><rect x="1122.7" y="819.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1125.7" y="830.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (2 samples, 0.03%)</title><rect x="1123.3" y="819.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1126.3" y="830.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (127 samples, 2.17%)</title><rect x="1123.7" y="851.0" width="25.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1126.7" y="862.0">P..</text>
</g>
<g>
<title>PhaseAggressiveCoalesce::insert_copies(Matcher&amp;) (4 samples, 0.07%)</title><rect x="1124.1" y="835.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1127.1" y="846.0"></text>
</g>
<g>
<title>PhaseChaitin::Select() (6 samples, 0.10%)</title><rect x="1124.9" y="835.0" width="1.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1127.9" y="846.0"></text>
</g>
<g>
<title>PhaseIFG::re_insert(unsigned int) (2 samples, 0.03%)</title><rect x="1125.7" y="819.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1128.7" y="830.0"></text>
</g>
<g>
<title>PhaseChaitin::Simplify() (6 samples, 0.10%)</title><rect x="1126.2" y="835.0" width="1.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1129.2" y="846.0"></text>
</g>
<g>
<title>PhaseIFG::remove_node(unsigned int) (5 samples, 0.09%)</title><rect x="1126.4" y="819.0" width="1.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1129.4" y="830.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (2 samples, 0.03%)</title><rect x="1127.0" y="803.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1130.0" y="814.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (14 samples, 0.24%)</title><rect x="1127.4" y="835.0" width="2.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1130.4" y="846.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (36 samples, 0.62%)</title><rect x="1130.2" y="835.0" width="7.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1133.2" y="846.0"></text>
</g>
<g>
<title>PhaseChaitin::add_input_to_liveout(Block*, Node*, IndexSet*, double, PhaseChaitin::Pressure&amp;, PhaseChaitin::Pressure&amp;) (6 samples, 0.10%)</title><rect x="1131.8" y="819.0" width="1.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1134.8" y="830.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (14 samples, 0.24%)</title><rect x="1133.0" y="819.0" width="2.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1136.0" y="830.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (3 samples, 0.05%)</title><rect x="1135.2" y="803.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1138.2" y="814.0"></text>
</g>
<g>
<title>PhaseChaitin::remove_bound_register_from_interfering_live_ranges(LRG&amp;, IndexSet*, unsigned int&amp;) (7 samples, 0.12%)</title><rect x="1135.8" y="819.0" width="1.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1138.8" y="830.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (2 samples, 0.03%)</title><rect x="1136.1" y="803.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1139.1" y="814.0"></text>
</g>
<g>
<title>RegMask::Size() const (2 samples, 0.03%)</title><rect x="1136.5" y="803.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1139.5" y="814.0"></text>
</g>
<g>
<title>RegMask::smear_to_sets(int) (2 samples, 0.03%)</title><rect x="1136.9" y="803.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1139.9" y="814.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (14 samples, 0.24%)</title><rect x="1138.1" y="835.0" width="2.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1141.1" y="846.0"></text>
</g>
<g>
<title>RegMask::Size() const (4 samples, 0.07%)</title><rect x="1139.7" y="819.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1142.7" y="830.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) [clone .constprop.87] (8 samples, 0.14%)</title><rect x="1140.9" y="835.0" width="1.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1143.9" y="846.0"></text>
</g>
<g>
<title>PhaseChaitin::merge_multidefs() (4 samples, 0.07%)</title><rect x="1142.5" y="835.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1145.5" y="846.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (8 samples, 0.14%)</title><rect x="1143.3" y="835.0" width="1.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1146.3" y="846.0"></text>
</g>
<g>
<title>PhaseChaitin::elide_copy(Node*, int, Block*, Node_List&amp;, Node_List&amp;, bool) (4 samples, 0.07%)</title><rect x="1144.1" y="819.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1147.1" y="830.0"></text>
</g>
<g>
<title>PhaseChaitin::stretch_base_pointer_live_ranges(ResourceArea*) (3 samples, 0.05%)</title><rect x="1144.9" y="835.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1147.9" y="846.0"></text>
</g>
<g>
<title>PhaseCoalesce::coalesce_driver() (3 samples, 0.05%)</title><rect x="1145.5" y="835.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1148.5" y="846.0"></text>
</g>
<g>
<title>PhaseConservativeCoalesce::coalesce(Block*) (2 samples, 0.03%)</title><rect x="1145.8" y="819.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1148.8" y="830.0"></text>
</g>
<g>
<title>PhaseIFG::Compute_Effective_Degree() (4 samples, 0.07%)</title><rect x="1146.2" y="835.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1149.2" y="846.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (2 samples, 0.03%)</title><rect x="1146.6" y="819.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1149.6" y="830.0"></text>
</g>
<g>
<title>PhaseIFG::SquareUp() (2 samples, 0.03%)</title><rect x="1147.0" y="835.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1150.0" y="846.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (9 samples, 0.15%)</title><rect x="1147.4" y="835.0" width="1.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1150.4" y="846.0"></text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&amp;) (6 samples, 0.10%)</title><rect x="1148.0" y="819.0" width="1.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1151.0" y="830.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (2 samples, 0.03%)</title><rect x="1148.8" y="803.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1151.8" y="814.0"></text>
</g>
<g>
<title>Compile::Optimize() (110 samples, 1.88%)</title><rect x="1149.8" y="867.0" width="22.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1152.8" y="878.0">C..</text>
</g>
<g>
<title>Compile::final_graph_reshaping() (7 samples, 0.12%)</title><rect x="1149.8" y="851.0" width="1.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1152.8" y="862.0"></text>
</g>
<g>
<title>Compile::final_graph_reshaping_walk(Node_Stack&amp;, Node*, Final_Reshape_Counts&amp;) (7 samples, 0.12%)</title><rect x="1149.8" y="835.0" width="1.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1152.8" y="846.0"></text>
</g>
<g>
<title>Compile::final_graph_reshaping_impl(Node*, Final_Reshape_Counts&amp;) [clone .part.250] (2 samples, 0.03%)</title><rect x="1150.4" y="819.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1153.4" y="830.0"></text>
</g>
<g>
<title>ConnectionGraph::do_analysis(Compile*, PhaseIterGVN*) (4 samples, 0.07%)</title><rect x="1151.4" y="851.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1154.4" y="862.0"></text>
</g>
<g>
<title>ConnectionGraph::compute_escape() (3 samples, 0.05%)</title><rect x="1151.4" y="835.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1154.4" y="846.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(bool, bool, bool) (75 samples, 1.28%)</title><rect x="1152.6" y="851.0" width="15.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1155.6" y="862.0"></text>
</g>
<g>
<title>IdealLoopTree::loop_predication(PhaseIdealLoop*) (2 samples, 0.03%)</title><rect x="1152.8" y="835.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1155.8" y="846.0"></text>
</g>
<g>
<title>PhaseIdealLoop::loop_predication_impl(IdealLoopTree*) [clone .part.72] (2 samples, 0.03%)</title><rect x="1152.8" y="819.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1155.8" y="830.0"></text>
</g>
<g>
<title>PhaseIdealLoop::Dominators() (4 samples, 0.07%)</title><rect x="1153.2" y="835.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1156.2" y="846.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_early(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (8 samples, 0.14%)</title><rect x="1154.0" y="835.0" width="1.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1157.0" y="846.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (41 samples, 0.70%)</title><rect x="1155.7" y="835.0" width="8.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1158.7" y="846.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (32 samples, 0.55%)</title><rect x="1157.1" y="819.0" width="6.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1160.1" y="830.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_late_ctrl(Node*, Node*) (29 samples, 0.50%)</title><rect x="1157.3" y="803.0" width="5.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1160.3" y="814.0"></text>
</g>
<g>
<title>PhaseIdealLoop::compute_lca_of_uses(Node*, Node*, bool) (3 samples, 0.05%)</title><rect x="1157.3" y="787.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1160.3" y="798.0"></text>
</g>
<g>
<title>PhaseIdealLoop::dom_lca_for_get_late_ctrl_internal(Node*, Node*, Node*) (2 samples, 0.03%)</title><rect x="1157.5" y="771.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1160.5" y="782.0"></text>
</g>
<g>
<title>PhaseIdealLoop::is_dominator(Node*, Node*) (26 samples, 0.45%)</title><rect x="1157.9" y="787.0" width="5.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1160.9" y="798.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_loop(Node*) const (2 samples, 0.03%)</title><rect x="1163.5" y="819.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1166.5" y="830.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_tree() (3 samples, 0.05%)</title><rect x="1163.9" y="835.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1166.9" y="846.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks(VectorSet&amp;, Node_Stack&amp;, bool) (6 samples, 0.10%)</title><rect x="1164.5" y="835.0" width="1.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1167.5" y="846.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks_post(Node*, bool) (2 samples, 0.03%)</title><rect x="1164.9" y="819.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1167.9" y="830.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks_pre(Node*) (2 samples, 0.03%)</title><rect x="1165.3" y="819.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1168.3" y="830.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_thru_phi(Node*, Node*, int) (2 samples, 0.03%)</title><rect x="1165.3" y="803.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1168.3" y="814.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (8 samples, 0.14%)</title><rect x="1165.8" y="835.0" width="1.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1168.8" y="846.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (8 samples, 0.14%)</title><rect x="1165.8" y="819.0" width="1.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1168.8" y="830.0"></text>
</g>
<g>
<title>StoreNode::Ideal(PhaseGVN*, bool) (2 samples, 0.03%)</title><rect x="1167.0" y="803.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1170.0" y="814.0"></text>
</g>
<g>
<title>InitializeNode::can_capture_store(StoreNode*, PhaseTransform*, bool) [clone .part.138] (2 samples, 0.03%)</title><rect x="1167.0" y="787.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1170.0" y="798.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.03%)</title><rect x="1167.0" y="771.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1170.0" y="782.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.03%)</title><rect x="1167.0" y="755.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1170.0" y="766.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.03%)</title><rect x="1167.0" y="739.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1170.0" y="750.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (18 samples, 0.31%)</title><rect x="1167.8" y="851.0" width="3.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1170.8" y="862.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (16 samples, 0.27%)</title><rect x="1167.8" y="835.0" width="3.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1170.8" y="846.0"></text>
</g>
<g>
<title>IfNode::Ideal(PhaseGVN*, bool) (2 samples, 0.03%)</title><rect x="1168.2" y="819.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1171.2" y="830.0"></text>
</g>
<g>
<title>NodeHash::hash_find_insert(Node*) (2 samples, 0.03%)</title><rect x="1168.8" y="819.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1171.8" y="830.0"></text>
</g>
<g>
<title>StoreNode::Ideal(PhaseGVN*, bool) (6 samples, 0.10%)</title><rect x="1169.6" y="819.0" width="1.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1172.6" y="830.0"></text>
</g>
<g>
<title>InitializeNode::can_capture_store(StoreNode*, PhaseTransform*, bool) [clone .part.138] (5 samples, 0.09%)</title><rect x="1169.6" y="803.0" width="1.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1172.6" y="814.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (5 samples, 0.09%)</title><rect x="1169.6" y="787.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1172.6" y="798.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (5 samples, 0.09%)</title><rect x="1169.6" y="771.0" width="1.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1172.6" y="782.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (5 samples, 0.09%)</title><rect x="1169.6" y="755.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1172.6" y="766.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (5 samples, 0.09%)</title><rect x="1169.6" y="739.0" width="1.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1172.6" y="750.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (5 samples, 0.09%)</title><rect x="1169.6" y="723.0" width="1.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1172.6" y="734.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (5 samples, 0.09%)</title><rect x="1169.6" y="707.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1172.6" y="718.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (4 samples, 0.07%)</title><rect x="1169.6" y="691.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1172.6" y="702.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (3 samples, 0.05%)</title><rect x="1169.6" y="675.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1172.6" y="686.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (3 samples, 0.05%)</title><rect x="1169.6" y="659.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1172.6" y="670.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.03%)</title><rect x="1169.6" y="643.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1172.6" y="654.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.03%)</title><rect x="1169.6" y="627.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1172.6" y="638.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.03%)</title><rect x="1169.6" y="611.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1172.6" y="622.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.03%)</title><rect x="1169.6" y="595.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1172.6" y="606.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.03%)</title><rect x="1169.6" y="579.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1172.6" y="590.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.03%)</title><rect x="1169.6" y="563.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1172.6" y="574.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.03%)</title><rect x="1169.6" y="547.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1172.6" y="558.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.03%)</title><rect x="1169.6" y="531.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1172.6" y="542.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.03%)</title><rect x="1169.6" y="515.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1172.6" y="526.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.03%)</title><rect x="1169.6" y="499.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1172.6" y="510.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.03%)</title><rect x="1169.6" y="483.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1172.6" y="494.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.131] (2 samples, 0.03%)</title><rect x="1169.6" y="467.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1172.6" y="478.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (2 samples, 0.03%)</title><rect x="1169.6" y="451.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1172.6" y="462.0"></text>
</g>
<g>
<title>PhaseRenumberLive::PhaseRenumberLive(PhaseGVN*, Unique_Node_List*, Unique_Node_List*, Phase::PhaseNumber) (2 samples, 0.03%)</title><rect x="1171.6" y="851.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1174.6" y="862.0"></text>
</g>
<g>
<title>PhaseRemoveUseless::PhaseRemoveUseless(PhaseGVN*, Unique_Node_List*, Phase::PhaseNumber) (2 samples, 0.03%)</title><rect x="1171.6" y="835.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1174.6" y="846.0"></text>
</g>
<g>
<title>Compile::inline_string_calls(bool) (3 samples, 0.05%)</title><rect x="1172.0" y="867.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1175.0" y="878.0"></text>
</g>
<g>
<title>PhaseRemoveUseless::PhaseRemoveUseless(PhaseGVN*, Unique_Node_List*, Phase::PhaseNumber) (2 samples, 0.03%)</title><rect x="1172.2" y="851.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1175.2" y="862.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (40 samples, 0.68%)</title><rect x="1172.6" y="867.0" width="8.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1175.6" y="878.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (39 samples, 0.67%)</title><rect x="1172.6" y="851.0" width="7.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1175.6" y="862.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (38 samples, 0.65%)</title><rect x="1172.6" y="835.0" width="7.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1175.6" y="846.0"></text>
</g>
<g>
<title>Parse::do_one_block() (38 samples, 0.65%)</title><rect x="1172.6" y="819.0" width="7.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1175.6" y="830.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (38 samples, 0.65%)</title><rect x="1172.6" y="803.0" width="7.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1175.6" y="814.0"></text>
</g>
<g>
<title>Parse::do_call() (34 samples, 0.58%)</title><rect x="1172.6" y="787.0" width="6.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1175.6" y="798.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (25 samples, 0.43%)</title><rect x="1172.6" y="771.0" width="5.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1175.6" y="782.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (25 samples, 0.43%)</title><rect x="1172.6" y="755.0" width="5.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1175.6" y="766.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (25 samples, 0.43%)</title><rect x="1172.6" y="739.0" width="5.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1175.6" y="750.0"></text>
</g>
<g>
<title>Parse::do_one_block() (25 samples, 0.43%)</title><rect x="1172.6" y="723.0" width="5.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1175.6" y="734.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (25 samples, 0.43%)</title><rect x="1172.6" y="707.0" width="5.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1175.6" y="718.0"></text>
</g>
<g>
<title>Parse::do_call() (24 samples, 0.41%)</title><rect x="1172.6" y="691.0" width="4.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1175.6" y="702.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (17 samples, 0.29%)</title><rect x="1173.2" y="675.0" width="3.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1176.2" y="686.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (17 samples, 0.29%)</title><rect x="1173.2" y="659.0" width="3.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1176.2" y="670.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (17 samples, 0.29%)</title><rect x="1173.2" y="643.0" width="3.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1176.2" y="654.0"></text>
</g>
<g>
<title>Parse::do_one_block() (17 samples, 0.29%)</title><rect x="1173.2" y="627.0" width="3.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1176.2" y="638.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (17 samples, 0.29%)</title><rect x="1173.2" y="611.0" width="3.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1176.2" y="622.0"></text>
</g>
<g>
<title>Parse::do_call() (15 samples, 0.26%)</title><rect x="1173.2" y="595.0" width="3.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1176.2" y="606.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (12 samples, 0.21%)</title><rect x="1173.2" y="579.0" width="2.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1176.2" y="590.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (12 samples, 0.21%)</title><rect x="1173.2" y="563.0" width="2.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1176.2" y="574.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (12 samples, 0.21%)</title><rect x="1173.2" y="547.0" width="2.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1176.2" y="558.0"></text>
</g>
<g>
<title>Parse::do_one_block() (12 samples, 0.21%)</title><rect x="1173.2" y="531.0" width="2.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1176.2" y="542.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (12 samples, 0.21%)</title><rect x="1173.2" y="515.0" width="2.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1176.2" y="526.0"></text>
</g>
<g>
<title>Parse::do_call() (11 samples, 0.19%)</title><rect x="1173.2" y="499.0" width="2.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1176.2" y="510.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (10 samples, 0.17%)</title><rect x="1173.4" y="483.0" width="2.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1176.4" y="494.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (10 samples, 0.17%)</title><rect x="1173.4" y="467.0" width="2.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1176.4" y="478.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (10 samples, 0.17%)</title><rect x="1173.4" y="451.0" width="2.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1176.4" y="462.0"></text>
</g>
<g>
<title>Parse::do_one_block() (10 samples, 0.17%)</title><rect x="1173.4" y="435.0" width="2.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1176.4" y="446.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (10 samples, 0.17%)</title><rect x="1173.4" y="419.0" width="2.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1176.4" y="430.0"></text>
</g>
<g>
<title>Parse::do_call() (9 samples, 0.15%)</title><rect x="1173.4" y="403.0" width="1.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1176.4" y="414.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (8 samples, 0.14%)</title><rect x="1173.4" y="387.0" width="1.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1176.4" y="398.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (8 samples, 0.14%)</title><rect x="1173.4" y="371.0" width="1.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1176.4" y="382.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (8 samples, 0.14%)</title><rect x="1173.4" y="355.0" width="1.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1176.4" y="366.0"></text>
</g>
<g>
<title>Parse::do_one_block() (8 samples, 0.14%)</title><rect x="1173.4" y="339.0" width="1.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1176.4" y="350.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (7 samples, 0.12%)</title><rect x="1173.6" y="323.0" width="1.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1176.6" y="334.0"></text>
</g>
<g>
<title>Parse::do_call() (6 samples, 0.10%)</title><rect x="1173.6" y="307.0" width="1.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1176.6" y="318.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (5 samples, 0.09%)</title><rect x="1173.6" y="291.0" width="1.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1176.6" y="302.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (5 samples, 0.09%)</title><rect x="1173.6" y="275.0" width="1.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1176.6" y="286.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (5 samples, 0.09%)</title><rect x="1173.6" y="259.0" width="1.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1176.6" y="270.0"></text>
</g>
<g>
<title>Parse::do_one_block() (5 samples, 0.09%)</title><rect x="1173.6" y="243.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1176.6" y="254.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (5 samples, 0.09%)</title><rect x="1173.6" y="227.0" width="1.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1176.6" y="238.0"></text>
</g>
<g>
<title>Parse::do_call() (5 samples, 0.09%)</title><rect x="1173.6" y="211.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1176.6" y="222.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.07%)</title><rect x="1173.8" y="195.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1176.8" y="206.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.07%)</title><rect x="1173.8" y="179.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1176.8" y="190.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.07%)</title><rect x="1173.8" y="163.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1176.8" y="174.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.05%)</title><rect x="1173.8" y="147.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1176.8" y="158.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.05%)</title><rect x="1173.8" y="131.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1176.8" y="142.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.05%)</title><rect x="1173.8" y="115.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1176.8" y="126.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="1174.0" y="99.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1177.0" y="110.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.03%)</title><rect x="1174.0" y="83.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1177.0" y="94.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.03%)</title><rect x="1174.0" y="67.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1177.0" y="78.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.03%)</title><rect x="1174.0" y="51.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1177.0" y="62.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.03%)</title><rect x="1174.0" y="35.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1177.0" y="46.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (3 samples, 0.05%)</title><rect x="1175.7" y="579.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1178.7" y="590.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.05%)</title><rect x="1175.7" y="563.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1178.7" y="574.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.05%)</title><rect x="1175.7" y="547.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1178.7" y="558.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.05%)</title><rect x="1175.7" y="531.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1178.7" y="542.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.05%)</title><rect x="1175.7" y="515.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1178.7" y="526.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.05%)</title><rect x="1175.7" y="499.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1178.7" y="510.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.03%)</title><rect x="1175.7" y="483.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1178.7" y="494.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="1175.7" y="467.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1178.7" y="478.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.03%)</title><rect x="1175.7" y="451.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1178.7" y="462.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.03%)</title><rect x="1175.7" y="435.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1178.7" y="446.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.03%)</title><rect x="1175.7" y="419.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1178.7" y="430.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.03%)</title><rect x="1175.7" y="403.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1178.7" y="414.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (2 samples, 0.03%)</title><rect x="1176.3" y="595.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1179.3" y="606.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (4 samples, 0.07%)</title><rect x="1176.7" y="675.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1179.7" y="686.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="1176.7" y="659.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1179.7" y="670.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.03%)</title><rect x="1176.7" y="643.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1179.7" y="654.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.03%)</title><rect x="1176.7" y="627.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1179.7" y="638.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.03%)</title><rect x="1176.7" y="611.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1179.7" y="622.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.03%)</title><rect x="1176.7" y="595.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1179.7" y="606.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.03%)</title><rect x="1176.7" y="579.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1179.7" y="590.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="1177.1" y="659.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1180.1" y="670.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="1177.1" y="643.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1180.1" y="654.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.03%)</title><rect x="1177.1" y="627.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1180.1" y="638.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (8 samples, 0.14%)</title><rect x="1177.7" y="771.0" width="1.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1180.7" y="782.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (6 samples, 0.10%)</title><rect x="1177.7" y="755.0" width="1.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1180.7" y="766.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (6 samples, 0.10%)</title><rect x="1177.7" y="739.0" width="1.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1180.7" y="750.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (6 samples, 0.10%)</title><rect x="1177.7" y="723.0" width="1.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1180.7" y="734.0"></text>
</g>
<g>
<title>Parse::do_one_block() (6 samples, 0.10%)</title><rect x="1177.7" y="707.0" width="1.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1180.7" y="718.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (6 samples, 0.10%)</title><rect x="1177.7" y="691.0" width="1.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1180.7" y="702.0"></text>
</g>
<g>
<title>Parse::do_call() (6 samples, 0.10%)</title><rect x="1177.7" y="675.0" width="1.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1180.7" y="686.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (6 samples, 0.10%)</title><rect x="1177.7" y="659.0" width="1.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1180.7" y="670.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (6 samples, 0.10%)</title><rect x="1177.7" y="643.0" width="1.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1180.7" y="654.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (6 samples, 0.10%)</title><rect x="1177.7" y="627.0" width="1.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1180.7" y="638.0"></text>
</g>
<g>
<title>Parse::do_one_block() (6 samples, 0.10%)</title><rect x="1177.7" y="611.0" width="1.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1180.7" y="622.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (6 samples, 0.10%)</title><rect x="1177.7" y="595.0" width="1.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1180.7" y="606.0"></text>
</g>
<g>
<title>Parse::do_call() (6 samples, 0.10%)</title><rect x="1177.7" y="579.0" width="1.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1180.7" y="590.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="1177.9" y="563.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1180.9" y="574.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.03%)</title><rect x="1177.9" y="547.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1180.9" y="558.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.03%)</title><rect x="1177.9" y="531.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1180.9" y="542.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.03%)</title><rect x="1177.9" y="515.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1180.9" y="526.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.03%)</title><rect x="1177.9" y="499.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1180.9" y="510.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (3 samples, 0.05%)</title><rect x="1178.3" y="563.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1181.3" y="574.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.05%)</title><rect x="1178.3" y="547.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1181.3" y="558.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.05%)</title><rect x="1178.3" y="531.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1181.3" y="542.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.05%)</title><rect x="1178.3" y="515.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1181.3" y="526.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.05%)</title><rect x="1178.3" y="499.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1181.3" y="510.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.05%)</title><rect x="1178.3" y="483.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1181.3" y="494.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.05%)</title><rect x="1178.3" y="467.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1181.3" y="478.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.05%)</title><rect x="1178.3" y="451.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1181.3" y="462.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.05%)</title><rect x="1178.3" y="435.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1181.3" y="446.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.05%)</title><rect x="1178.3" y="419.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1181.3" y="430.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.05%)</title><rect x="1178.3" y="403.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1181.3" y="414.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.05%)</title><rect x="1178.3" y="387.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1181.3" y="398.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.03%)</title><rect x="1178.3" y="371.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1181.3" y="382.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="1178.9" y="755.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1181.9" y="766.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="1178.9" y="739.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1181.9" y="750.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.03%)</title><rect x="1178.9" y="723.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1181.9" y="734.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.03%)</title><rect x="1178.9" y="707.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1181.9" y="718.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.03%)</title><rect x="1178.9" y="691.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1181.9" y="702.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.03%)</title><rect x="1178.9" y="675.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1181.9" y="686.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.03%)</title><rect x="1178.9" y="659.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1181.9" y="670.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="1178.9" y="643.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1181.9" y="654.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.03%)</title><rect x="1178.9" y="627.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1181.9" y="638.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.03%)</title><rect x="1178.9" y="611.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1181.9" y="622.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.03%)</title><rect x="1178.9" y="595.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1181.9" y="606.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.03%)</title><rect x="1178.9" y="579.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1181.9" y="590.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.03%)</title><rect x="1178.9" y="563.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1181.9" y="574.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="1178.9" y="547.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1181.9" y="558.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.03%)</title><rect x="1178.9" y="531.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1181.9" y="542.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.03%)</title><rect x="1178.9" y="515.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1181.9" y="526.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.03%)</title><rect x="1178.9" y="499.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1181.9" y="510.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.03%)</title><rect x="1178.9" y="483.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1181.9" y="494.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.03%)</title><rect x="1178.9" y="467.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1181.9" y="478.0"></text>
</g>
<g>
<title>PhaseRemoveUseless::PhaseRemoveUseless(PhaseGVN*, Unique_Node_List*, Phase::PhaseNumber) (2 samples, 0.03%)</title><rect x="1180.7" y="867.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1183.7" y="878.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (19 samples, 0.33%)</title><rect x="1181.3" y="899.0" width="3.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1184.3" y="910.0"></text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*) (19 samples, 0.33%)</title><rect x="1181.3" y="883.0" width="3.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1184.3" y="894.0"></text>
</g>
<g>
<title>Compilation::compile_method() (18 samples, 0.31%)</title><rect x="1181.5" y="867.0" width="3.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1184.5" y="878.0"></text>
</g>
<g>
<title>Compilation::compile_java_method() (18 samples, 0.31%)</title><rect x="1181.5" y="851.0" width="3.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1184.5" y="862.0"></text>
</g>
<g>
<title>Compilation::build_hir() [clone .part.93] (8 samples, 0.14%)</title><rect x="1181.5" y="835.0" width="1.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1184.5" y="846.0"></text>
</g>
<g>
<title>IR::IR(Compilation*, ciMethod*, int) (8 samples, 0.14%)</title><rect x="1181.5" y="819.0" width="1.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1184.5" y="830.0"></text>
</g>
<g>
<title>IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool) (8 samples, 0.14%)</title><rect x="1181.5" y="803.0" width="1.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1184.5" y="814.0"></text>
</g>
<g>
<title>GraphBuilder::GraphBuilder(Compilation*, IRScope*) (8 samples, 0.14%)</title><rect x="1181.5" y="787.0" width="1.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1184.5" y="798.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (8 samples, 0.14%)</title><rect x="1181.5" y="771.0" width="1.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1184.5" y="782.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (8 samples, 0.14%)</title><rect x="1181.5" y="755.0" width="1.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1184.5" y="766.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (8 samples, 0.14%)</title><rect x="1181.5" y="739.0" width="1.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1184.5" y="750.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (6 samples, 0.10%)</title><rect x="1181.5" y="723.0" width="1.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1184.5" y="734.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (6 samples, 0.10%)</title><rect x="1181.5" y="707.0" width="1.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1184.5" y="718.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (6 samples, 0.10%)</title><rect x="1181.5" y="691.0" width="1.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1184.5" y="702.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (6 samples, 0.10%)</title><rect x="1181.5" y="675.0" width="1.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1184.5" y="686.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (5 samples, 0.09%)</title><rect x="1181.5" y="659.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1184.5" y="670.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (5 samples, 0.09%)</title><rect x="1181.5" y="643.0" width="1.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1184.5" y="654.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (3 samples, 0.05%)</title><rect x="1181.5" y="627.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1184.5" y="638.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (2 samples, 0.03%)</title><rect x="1181.5" y="611.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1184.5" y="622.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (2 samples, 0.03%)</title><rect x="1181.5" y="595.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1184.5" y="606.0"></text>
</g>
<g>
<title>GraphBuilder::try_method_handle_inline(ciMethod*, bool) (2 samples, 0.03%)</title><rect x="1182.1" y="627.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1185.1" y="638.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (2 samples, 0.03%)</title><rect x="1182.1" y="611.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1185.1" y="622.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (2 samples, 0.03%)</title><rect x="1182.1" y="595.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1185.1" y="606.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (2 samples, 0.03%)</title><rect x="1182.1" y="579.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1185.1" y="590.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (2 samples, 0.03%)</title><rect x="1182.1" y="563.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1185.1" y="574.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (2 samples, 0.03%)</title><rect x="1182.1" y="547.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1185.1" y="558.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (2 samples, 0.03%)</title><rect x="1182.1" y="531.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1185.1" y="542.0"></text>
</g>
<g>
<title>GraphBuilder::try_method_handle_inline(ciMethod*, bool) (2 samples, 0.03%)</title><rect x="1182.1" y="515.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1185.1" y="526.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (2 samples, 0.03%)</title><rect x="1182.1" y="499.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1185.1" y="510.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (2 samples, 0.03%)</title><rect x="1182.1" y="483.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1185.1" y="494.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (2 samples, 0.03%)</title><rect x="1182.1" y="467.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1185.1" y="478.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (2 samples, 0.03%)</title><rect x="1182.1" y="451.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1185.1" y="462.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (2 samples, 0.03%)</title><rect x="1182.1" y="435.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1185.1" y="446.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (2 samples, 0.03%)</title><rect x="1182.1" y="419.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1185.1" y="430.0"></text>
</g>
<g>
<title>GraphBuilder::try_method_handle_inline(ciMethod*, bool) (2 samples, 0.03%)</title><rect x="1182.1" y="403.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1185.1" y="414.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (2 samples, 0.03%)</title><rect x="1182.1" y="387.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1185.1" y="398.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (2 samples, 0.03%)</title><rect x="1182.1" y="371.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1185.1" y="382.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (2 samples, 0.03%)</title><rect x="1182.7" y="723.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1185.7" y="734.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (2 samples, 0.03%)</title><rect x="1182.7" y="707.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1185.7" y="718.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (2 samples, 0.03%)</title><rect x="1182.7" y="691.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1185.7" y="702.0"></text>
</g>
<g>
<title>Compilation::emit_lir() (9 samples, 0.15%)</title><rect x="1183.3" y="835.0" width="1.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1186.3" y="846.0"></text>
</g>
<g>
<title>BlockList::iterate_forward(BlockClosure*) (5 samples, 0.09%)</title><rect x="1183.3" y="819.0" width="1.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1186.3" y="830.0"></text>
</g>
<g>
<title>non-virtual thunk to LIRGenerator::block_do(BlockBegin*) (5 samples, 0.09%)</title><rect x="1183.3" y="803.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1186.3" y="814.0"></text>
</g>
<g>
<title>LinearScan::do_linear_scan() (4 samples, 0.07%)</title><rect x="1184.3" y="819.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1187.3" y="830.0"></text>
</g>
<g>
<title>LinearScan::build_intervals() (4 samples, 0.07%)</title><rect x="1184.3" y="803.0" width="0.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1187.3" y="814.0"></text>
</g>
<g>
<title>ServiceThread::service_thread_entry(JavaThread*, Thread*) (4 samples, 0.07%)</title><rect x="1185.6" y="931.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1188.6" y="942.0"></text>
</g>
<g>
<title>JvmtiDeferredEvent::post() (4 samples, 0.07%)</title><rect x="1185.6" y="915.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1188.6" y="926.0"></text>
</g>
<g>
<title>JvmtiExport::post_compiled_method_load(nmethod*) (4 samples, 0.07%)</title><rect x="1185.6" y="899.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1188.6" y="910.0"></text>
</g>
<g>
<title>JvmtiCodeBlobEvents::build_jvmti_addr_location_map(nmethod*, _jvmtiAddrLocationMap**, int*) (2 samples, 0.03%)</title><rect x="1185.6" y="883.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1188.6" y="894.0"></text>
</g>
<g>
<title>ScopeDesc::sender() const (2 samples, 0.03%)</title><rect x="1185.6" y="867.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1188.6" y="878.0"></text>
</g>
<g>
<title>ScopeDesc::decode_body() (2 samples, 0.03%)</title><rect x="1185.6" y="851.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1188.6" y="862.0"></text>
</g>
<g>
<title>create_inline_record(nmethod*) (2 samples, 0.03%)</title><rect x="1186.0" y="883.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1189.0" y="894.0"></text>
</g>
<g>
<title>VMThread::run() (16 samples, 0.27%)</title><rect x="1186.4" y="963.0" width="3.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1189.4" y="974.0"></text>
</g>
<g>
<title>VMThread::loop() (16 samples, 0.27%)</title><rect x="1186.4" y="947.0" width="3.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1189.4" y="958.0"></text>
</g>
<g>
<title>SafepointSynchronize::begin() (5 samples, 0.09%)</title><rect x="1186.6" y="931.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1189.6" y="942.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.54] (5 samples, 0.09%)</title><rect x="1187.8" y="931.0" width="1.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1190.8" y="942.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (5 samples, 0.09%)</title><rect x="1187.8" y="915.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1190.8" y="926.0"></text>
</g>
<g>
<title>VM_G1CollectForAllocation::doit() (5 samples, 0.09%)</title><rect x="1187.8" y="899.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1190.8" y="910.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (5 samples, 0.09%)</title><rect x="1187.8" y="883.0" width="1.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1190.8" y="894.0"></text>
</g>
<g>
<title>G1CollectedHeap::free_collection_set(G1CollectionSet*, EvacuationInfo&amp;, unsigned long const*) (2 samples, 0.03%)</title><rect x="1187.8" y="867.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1190.8" y="878.0"></text>
</g>
<g>
<title>WorkGang::run_task(AbstractGangTask*, unsigned int) (2 samples, 0.03%)</title><rect x="1187.8" y="851.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1190.8" y="862.0"></text>
</g>
<g>
<title>SemaphoreGangTaskDispatcher::coordinator_execute_on_workers(AbstractGangTask*, unsigned int) (2 samples, 0.03%)</title><rect x="1187.8" y="835.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1190.8" y="846.0"></text>
</g>
<g>
<title>sem_post@@GLIBC_2.2.5 (2 samples, 0.03%)</title><rect x="1187.8" y="819.0" width="0.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1190.8" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="1187.8" y="803.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1190.8" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="1187.8" y="787.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1190.8" y="798.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.03%)</title><rect x="1187.8" y="771.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1190.8" y="782.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.03%)</title><rect x="1187.8" y="755.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1190.8" y="766.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.03%)</title><rect x="1187.8" y="739.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1190.8" y="750.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.03%)</title><rect x="1187.8" y="723.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1190.8" y="734.0"></text>
</g>
<g>
<title>__GI_sched_yield (3 samples, 0.05%)</title><rect x="1188.8" y="931.0" width="0.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1191.8" y="942.0"></text>
</g>
<g>
<title>WatcherThread::run() (2 samples, 0.03%)</title><rect x="1189.6" y="963.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1192.6" y="974.0"></text>
</g>
<g>
<title>WatcherThread::sleep() const (2 samples, 0.03%)</title><rect x="1189.6" y="947.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1192.6" y="958.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (2 samples, 0.03%)</title><rect x="1189.6" y="931.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1192.6" y="942.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (2 samples, 0.03%)</title><rect x="1189.6" y="915.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1192.6" y="926.0"></text>
</g>
<g>
<title>__lll_unlock_wake (2 samples, 0.03%)</title><rect x="1189.6" y="899.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1192.6" y="910.0"></text>
</g>
</g>
</svg>
