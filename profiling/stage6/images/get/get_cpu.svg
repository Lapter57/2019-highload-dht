<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1062" onload="init(evt)" viewBox="0 0 1200 1062" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1045"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1045"> </text>
<g id="frames">
<g>
<title>all (12,356 samples, 100.00%)</title><rect x="10.0" y="1011.0" width="1180.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="13.0" y="1022.0">all</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (3 samples, 0.02%)</title><rect x="10.0" y="995.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="13.0" y="1006.0"></text>
</g>
<g>
<title>InstanceKlass::klass_holder() const (8 samples, 0.06%)</title><rect x="10.5" y="995.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="13.5" y="1006.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (26 samples, 0.21%)</title><rect x="11.7" y="995.0" width="2.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="14.7" y="1006.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (9 samples, 0.07%)</title><rect x="11.8" y="979.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="14.8" y="990.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (5 samples, 0.04%)</title><rect x="11.9" y="963.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="14.9" y="974.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (5 samples, 0.04%)</title><rect x="11.9" y="947.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="14.9" y="958.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (14 samples, 0.11%)</title><rect x="12.9" y="979.0" width="1.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="15.9" y="990.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (14 samples, 0.11%)</title><rect x="12.9" y="963.0" width="1.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="15.9" y="974.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (12 samples, 0.10%)</title><rect x="12.9" y="947.0" width="1.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="15.9" y="958.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (5 samples, 0.04%)</title><rect x="13.2" y="931.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="16.2" y="942.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (15 samples, 0.12%)</title><rect x="14.2" y="995.0" width="1.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="17.2" y="1006.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (12 samples, 0.10%)</title><rect x="14.5" y="979.0" width="1.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="17.5" y="990.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (12 samples, 0.10%)</title><rect x="14.5" y="963.0" width="1.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="17.5" y="974.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (11 samples, 0.09%)</title><rect x="14.5" y="947.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="17.5" y="958.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (9 samples, 0.07%)</title><rect x="14.7" y="931.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="17.7" y="942.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (3 samples, 0.02%)</title><rect x="15.0" y="915.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="18.0" y="926.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (96 samples, 0.78%)</title><rect x="15.6" y="995.0" width="9.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="18.6" y="1006.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (3 samples, 0.02%)</title><rect x="16.4" y="979.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="19.4" y="990.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (79 samples, 0.64%)</title><rect x="16.7" y="979.0" width="7.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="19.7" y="990.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (74 samples, 0.60%)</title><rect x="17.2" y="963.0" width="7.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="20.2" y="974.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (71 samples, 0.57%)</title><rect x="17.2" y="947.0" width="6.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="20.2" y="958.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_in_new_tlab(Klass*, HeapWord*, unsigned long, unsigned long, Thread*) (6 samples, 0.05%)</title><rect x="17.6" y="931.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="20.6" y="942.0"></text>
</g>
<g>
<title>LeakProfiler::is_running() (5 samples, 0.04%)</title><rect x="17.7" y="915.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="20.7" y="926.0"></text>
</g>
<g>
<title>G1Allocator::unsafe_max_tlab_alloc() (3 samples, 0.02%)</title><rect x="18.2" y="931.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="21.2" y="942.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (50 samples, 0.40%)</title><rect x="18.8" y="931.0" width="4.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="21.8" y="942.0"></text>
</g>
<g>
<title>G1Allocator::unsafe_max_tlab_alloc() (8 samples, 0.06%)</title><rect x="19.1" y="915.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="22.1" y="926.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (16 samples, 0.13%)</title><rect x="19.9" y="915.0" width="1.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="22.9" y="926.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (16 samples, 0.13%)</title><rect x="19.9" y="899.0" width="1.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="22.9" y="910.0"></text>
</g>
<g>
<title>G1AllocRegion::new_alloc_region_and_allocate(unsigned long, bool) (6 samples, 0.05%)</title><rect x="19.9" y="883.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="22.9" y="894.0"></text>
</g>
<g>
<title>G1CollectedHeap::new_mutator_alloc_region(unsigned long, bool) (6 samples, 0.05%)</title><rect x="19.9" y="867.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="22.9" y="878.0"></text>
</g>
<g>
<title>G1RemSetTrackingPolicy::update_at_allocate(HeapRegion*) (3 samples, 0.02%)</title><rect x="20.0" y="851.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="23.0" y="862.0"></text>
</g>
<g>
<title>MutatorAllocRegion::retire(bool) (9 samples, 0.07%)</title><rect x="20.6" y="883.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="23.6" y="894.0"></text>
</g>
<g>
<title>G1CollectedHeap::retire_mutator_alloc_region(HeapRegion*, unsigned long) (8 samples, 0.06%)</title><rect x="20.7" y="867.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="23.7" y="878.0"></text>
</g>
<g>
<title>G1CollectionSet::add_eden_region(HeapRegion*) (8 samples, 0.06%)</title><rect x="20.7" y="851.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="23.7" y="862.0"></text>
</g>
<g>
<title>G1Policy::predict_region_elapsed_time_ms(HeapRegion*, bool) const (8 samples, 0.06%)</title><rect x="20.7" y="835.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="23.7" y="846.0"></text>
</g>
<g>
<title>G1Policy::predict_yg_surv_rate(int, SurvRateGroup*) const (3 samples, 0.02%)</title><rect x="21.1" y="819.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="24.1" y="830.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (11 samples, 0.09%)</title><rect x="21.6" y="915.0" width="1.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="24.6" y="926.0"></text>
</g>
<g>
<title>CollectedHeap::fill_with_dummy_object(HeapWord*, HeapWord*, bool) (5 samples, 0.04%)</title><rect x="21.7" y="899.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="24.7" y="910.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (3 samples, 0.02%)</title><rect x="22.3" y="899.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="25.3" y="910.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::fill(HeapWord*, HeapWord*, unsigned long) (5 samples, 0.04%)</title><rect x="22.6" y="915.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="25.6" y="926.0"></text>
</g>
<g>
<title>__memset_avx2_unaligned_erms (4 samples, 0.03%)</title><rect x="23.1" y="915.0" width="0.4" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="26.1" y="926.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.02%)</title><rect x="23.9" y="947.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="26.9" y="958.0"></text>
</g>
<g>
<title>Klass::class_loader() const (6 samples, 0.05%)</title><rect x="24.2" y="979.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="27.2" y="990.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (164 samples, 1.33%)</title><rect x="24.8" y="995.0" width="15.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="27.8" y="1006.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (158 samples, 1.28%)</title><rect x="25.4" y="979.0" width="15.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="28.4" y="990.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (95 samples, 0.77%)</title><rect x="25.7" y="963.0" width="9.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="28.7" y="974.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.75] (70 samples, 0.57%)</title><rect x="25.8" y="947.0" width="6.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="28.8" y="958.0"></text>
</g>
<g>
<title>SpinPause (24 samples, 0.19%)</title><rect x="32.4" y="947.0" width="2.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="35.4" y="958.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.97] (59 samples, 0.48%)</title><rect x="34.7" y="963.0" width="5.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="37.7" y="974.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (51 samples, 0.41%)</title><rect x="35.3" y="947.0" width="4.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="38.3" y="958.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.75] (32 samples, 0.26%)</title><rect x="35.6" y="931.0" width="3.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="38.6" y="942.0"></text>
</g>
<g>
<title>SpinPause (6 samples, 0.05%)</title><rect x="38.7" y="931.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="41.7" y="942.0"></text>
</g>
<g>
<title>__lll_unlock_wake (5 samples, 0.04%)</title><rect x="39.2" y="931.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="42.2" y="942.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (3 samples, 0.02%)</title><rect x="40.5" y="995.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="43.5" y="1006.0"></text>
</g>
<g>
<title>[not_walkable] (23 samples, 0.19%)</title><rect x="40.8" y="995.0" width="2.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="43.8" y="1006.0"></text>
</g>
<g>
<title>[not_walkable_Java] (50 samples, 0.40%)</title><rect x="42.9" y="995.0" width="4.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="45.9" y="1006.0"></text>
</g>
<g>
<title>CardTableBarrierSet::on_slowpath_allocation_exit(JavaThread*, oopDesc*) (4 samples, 0.03%)</title><rect x="43.1" y="979.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="46.1" y="990.0"></text>
</g>
<g>
<title>G1BarrierSetRuntime::write_ref_array_post_entry(HeapWord*, unsigned long) (5 samples, 0.04%)</title><rect x="43.7" y="979.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="46.7" y="990.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (19 samples, 0.15%)</title><rect x="44.4" y="979.0" width="1.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="47.4" y="990.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (16 samples, 0.13%)</title><rect x="44.6" y="963.0" width="1.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="47.6" y="974.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (4 samples, 0.03%)</title><rect x="44.7" y="947.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="47.7" y="958.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (11 samples, 0.09%)</title><rect x="45.0" y="947.0" width="1.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="48.0" y="958.0"></text>
</g>
<g>
<title>ImmutableOopMapSet::find_map_at_offset(int) const (3 samples, 0.02%)</title><rect x="45.1" y="931.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="48.1" y="942.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (5 samples, 0.04%)</title><rect x="45.6" y="931.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="48.6" y="942.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (4 samples, 0.03%)</title><rect x="45.6" y="915.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="48.6" y="926.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (4 samples, 0.03%)</title><rect x="45.6" y="899.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="48.6" y="910.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (4 samples, 0.03%)</title><rect x="46.2" y="979.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="49.2" y="990.0"></text>
</g>
<g>
<title>SharedRuntime::on_slowpath_allocation_exit(JavaThread*) (10 samples, 0.08%)</title><rect x="46.8" y="979.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="49.8" y="990.0"></text>
</g>
<g>
<title>[unknown] (31 samples, 0.25%)</title><rect x="47.7" y="995.0" width="3.0" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="50.7" y="1006.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (18 samples, 0.15%)</title><rect x="48.1" y="979.0" width="1.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="51.1" y="990.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (14 samples, 0.11%)</title><rect x="48.5" y="963.0" width="1.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="51.5" y="974.0"></text>
</g>
<g>
<title>do_syscall_64 (14 samples, 0.11%)</title><rect x="48.5" y="947.0" width="1.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="51.5" y="958.0"></text>
</g>
<g>
<title>__x64_sys_futex (12 samples, 0.10%)</title><rect x="48.7" y="931.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="51.7" y="942.0"></text>
</g>
<g>
<title>do_futex (9 samples, 0.07%)</title><rect x="48.7" y="915.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="51.7" y="926.0"></text>
</g>
<g>
<title>futex_wait (9 samples, 0.07%)</title><rect x="48.7" y="899.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="51.7" y="910.0"></text>
</g>
<g>
<title>futex_wait_queue_me (4 samples, 0.03%)</title><rect x="48.9" y="883.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="51.9" y="894.0"></text>
</g>
<g>
<title>_dl_update_slotinfo (3 samples, 0.02%)</title><rect x="50.2" y="979.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="53.2" y="990.0"></text>
</g>
<g>
<title>[unknown_Java] (364 samples, 2.95%)</title><rect x="50.7" y="995.0" width="34.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="53.7" y="1006.0">[u..</text>
</g>
<g>
<title>[unknown] (3 samples, 0.02%)</title><rect x="81.5" y="979.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="84.5" y="990.0"></text>
</g>
<g>
<title>__GI___clock_gettime (3 samples, 0.02%)</title><rect x="81.8" y="979.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="84.8" y="990.0"></text>
</g>
<g>
<title>__pthread_cond_signal (27 samples, 0.22%)</title><rect x="82.1" y="979.0" width="2.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="85.1" y="990.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (21 samples, 0.17%)</title><rect x="82.7" y="963.0" width="2.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="85.7" y="974.0"></text>
</g>
<g>
<title>do_syscall_64 (21 samples, 0.17%)</title><rect x="82.7" y="947.0" width="2.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="85.7" y="958.0"></text>
</g>
<g>
<title>__x64_sys_futex (21 samples, 0.17%)</title><rect x="82.7" y="931.0" width="2.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="85.7" y="942.0"></text>
</g>
<g>
<title>do_futex (19 samples, 0.15%)</title><rect x="82.9" y="915.0" width="1.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="85.9" y="926.0"></text>
</g>
<g>
<title>futex_wake (19 samples, 0.15%)</title><rect x="82.9" y="899.0" width="1.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="85.9" y="910.0"></text>
</g>
<g>
<title>wake_up_q (17 samples, 0.14%)</title><rect x="83.1" y="883.0" width="1.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="86.1" y="894.0"></text>
</g>
<g>
<title>try_to_wake_up (17 samples, 0.14%)</title><rect x="83.1" y="867.0" width="1.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="86.1" y="878.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (17 samples, 0.14%)</title><rect x="83.1" y="851.0" width="1.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="86.1" y="862.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (3 samples, 0.02%)</title><rect x="84.7" y="979.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="87.7" y="990.0"></text>
</g>
<g>
<title>apic_timer_interrupt (3 samples, 0.02%)</title><rect x="85.0" y="979.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="88.0" y="990.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (3 samples, 0.02%)</title><rect x="85.0" y="963.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="88.0" y="974.0"></text>
</g>
<g>
<title>irq_exit (3 samples, 0.02%)</title><rect x="85.0" y="947.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="88.0" y="958.0"></text>
</g>
<g>
<title>__softirqentry_text_start (3 samples, 0.02%)</title><rect x="85.0" y="931.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="88.0" y="942.0"></text>
</g>
<g>
<title>java/lang/Thread.run (8,315 samples, 67.30%)</title><rect x="85.9" y="995.0" width="794.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="88.9" y="1006.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (8,315 samples, 67.30%)</title><rect x="85.9" y="979.0" width="794.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="88.9" y="990.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (8,315 samples, 67.30%)</title><rect x="85.9" y="963.0" width="794.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="88.9" y="974.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>itable stub (8 samples, 0.06%)</title><rect x="86.4" y="947.0" width="0.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="89.4" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (702 samples, 5.68%)</title><rect x="87.2" y="947.0" width="67.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="90.2" y="958.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (692 samples, 5.60%)</title><rect x="87.8" y="931.0" width="66.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="90.8" y="942.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (691 samples, 5.59%)</title><rect x="87.9" y="915.0" width="66.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="90.9" y="926.0">java/ut..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$128/1729551726.apply (687 samples, 5.56%)</title><rect x="88.3" y="899.0" width="65.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="91.3" y="910.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (687 samples, 5.56%)</title><rect x="88.3" y="883.0" width="65.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="91.3" y="894.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (686 samples, 5.55%)</title><rect x="88.4" y="867.0" width="65.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="91.4" y="878.0">jdk/int..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (3 samples, 0.02%)</title><rect x="88.4" y="851.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="91.4" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (3 samples, 0.02%)</title><rect x="88.4" y="835.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="91.4" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (667 samples, 5.40%)</title><rect x="88.7" y="851.0" width="63.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="91.7" y="862.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (667 samples, 5.40%)</title><rect x="88.7" y="835.0" width="63.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="91.7" y="846.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (666 samples, 5.39%)</title><rect x="88.8" y="819.0" width="63.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="91.8" y="830.0">jdk/int..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (342 samples, 2.77%)</title><rect x="89.0" y="803.0" width="32.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="92.0" y="814.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (341 samples, 2.76%)</title><rect x="89.1" y="787.0" width="32.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="92.1" y="798.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (336 samples, 2.72%)</title><rect x="89.4" y="771.0" width="32.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="92.4" y="782.0">ja..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$209/384755526.apply (333 samples, 2.70%)</title><rect x="89.6" y="755.0" width="31.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="92.6" y="766.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (331 samples, 2.68%)</title><rect x="89.8" y="739.0" width="31.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="92.8" y="750.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (331 samples, 2.68%)</title><rect x="89.8" y="723.0" width="31.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="92.8" y="734.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$149/2119912657.apply (331 samples, 2.68%)</title><rect x="89.8" y="707.0" width="31.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="92.8" y="718.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (330 samples, 2.67%)</title><rect x="89.9" y="691.0" width="31.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="92.9" y="702.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (328 samples, 2.65%)</title><rect x="90.1" y="675.0" width="31.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="93.1" y="686.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (291 samples, 2.36%)</title><rect x="90.1" y="659.0" width="27.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="93.1" y="670.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (291 samples, 2.36%)</title><rect x="90.1" y="643.0" width="27.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="93.1" y="654.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$232/1335640103.apply (282 samples, 2.28%)</title><rect x="90.6" y="627.0" width="26.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="93.6" y="638.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (281 samples, 2.27%)</title><rect x="90.7" y="611.0" width="26.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="93.7" y="622.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (10 samples, 0.08%)</title><rect x="91.5" y="595.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="94.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (10 samples, 0.08%)</title><rect x="91.5" y="579.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="94.5" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (3 samples, 0.02%)</title><rect x="91.5" y="563.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="94.5" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (3 samples, 0.02%)</title><rect x="91.5" y="547.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="94.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (3 samples, 0.02%)</title><rect x="91.5" y="531.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="94.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (7 samples, 0.06%)</title><rect x="91.7" y="563.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="94.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (7 samples, 0.06%)</title><rect x="91.7" y="547.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="94.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (7 samples, 0.06%)</title><rect x="91.7" y="531.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="94.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (7 samples, 0.06%)</title><rect x="91.7" y="515.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="94.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (6 samples, 0.05%)</title><rect x="91.7" y="499.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="94.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (6 samples, 0.05%)</title><rect x="91.7" y="483.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="94.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (4 samples, 0.03%)</title><rect x="91.8" y="467.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="94.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (4 samples, 0.03%)</title><rect x="91.8" y="451.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="94.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (4 samples, 0.03%)</title><rect x="91.8" y="435.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="94.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (4 samples, 0.03%)</title><rect x="91.8" y="419.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="94.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (4 samples, 0.03%)</title><rect x="91.8" y="403.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="94.8" y="414.0"></text>
</g>
<g>
<title>java/nio/channels/SocketChannel.write (4 samples, 0.03%)</title><rect x="91.8" y="387.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="94.8" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (4 samples, 0.03%)</title><rect x="91.8" y="371.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="94.8" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (4 samples, 0.03%)</title><rect x="91.8" y="355.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="94.8" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (4 samples, 0.03%)</title><rect x="91.8" y="339.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="94.8" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.writev (4 samples, 0.03%)</title><rect x="91.8" y="323.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="94.8" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (4 samples, 0.03%)</title><rect x="91.8" y="307.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="94.8" y="318.0"></text>
</g>
<g>
<title>.annobin_writev.c (4 samples, 0.03%)</title><rect x="91.8" y="291.0" width="0.4" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="94.8" y="302.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.03%)</title><rect x="91.8" y="275.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="94.8" y="286.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.03%)</title><rect x="91.8" y="259.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="94.8" y="270.0"></text>
</g>
<g>
<title>do_writev (4 samples, 0.03%)</title><rect x="91.8" y="243.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="94.8" y="254.0"></text>
</g>
<g>
<title>vfs_writev (4 samples, 0.03%)</title><rect x="91.8" y="227.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="94.8" y="238.0"></text>
</g>
<g>
<title>do_iter_write (4 samples, 0.03%)</title><rect x="91.8" y="211.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="94.8" y="222.0"></text>
</g>
<g>
<title>do_iter_readv_writev (3 samples, 0.02%)</title><rect x="91.9" y="195.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="94.9" y="206.0"></text>
</g>
<g>
<title>sock_write_iter (3 samples, 0.02%)</title><rect x="91.9" y="179.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="94.9" y="190.0"></text>
</g>
<g>
<title>sock_sendmsg (3 samples, 0.02%)</title><rect x="91.9" y="163.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="94.9" y="174.0"></text>
</g>
<g>
<title>tcp_sendmsg (3 samples, 0.02%)</title><rect x="91.9" y="147.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="94.9" y="158.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (3 samples, 0.02%)</title><rect x="91.9" y="131.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="94.9" y="142.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (3 samples, 0.02%)</title><rect x="91.9" y="115.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="94.9" y="126.0"></text>
</g>
<g>
<title>tcp_write_xmit (3 samples, 0.02%)</title><rect x="91.9" y="99.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="94.9" y="110.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (3 samples, 0.02%)</title><rect x="91.9" y="83.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="94.9" y="94.0"></text>
</g>
<g>
<title>__ip_queue_xmit (3 samples, 0.02%)</title><rect x="91.9" y="67.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="94.9" y="78.0"></text>
</g>
<g>
<title>ip_output (3 samples, 0.02%)</title><rect x="91.9" y="51.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="94.9" y="62.0"></text>
</g>
<g>
<title>ip_finish_output2 (3 samples, 0.02%)</title><rect x="91.9" y="35.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="94.9" y="46.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (90 samples, 0.73%)</title><rect x="92.4" y="595.0" width="8.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="95.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (89 samples, 0.72%)</title><rect x="92.5" y="579.0" width="8.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="95.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (14 samples, 0.11%)</title><rect x="92.5" y="563.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="95.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (14 samples, 0.11%)</title><rect x="92.5" y="547.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="95.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (13 samples, 0.11%)</title><rect x="92.6" y="531.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="95.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (4 samples, 0.03%)</title><rect x="92.8" y="515.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="95.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (4 samples, 0.03%)</title><rect x="92.8" y="499.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="95.8" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (4 samples, 0.03%)</title><rect x="92.8" y="483.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="95.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription (5 samples, 0.04%)</title><rect x="93.4" y="515.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="96.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (75 samples, 0.61%)</title><rect x="93.8" y="563.0" width="7.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="96.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (75 samples, 0.61%)</title><rect x="93.8" y="547.0" width="7.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="96.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (70 samples, 0.57%)</title><rect x="93.8" y="531.0" width="6.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="96.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (68 samples, 0.55%)</title><rect x="93.8" y="515.0" width="6.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="96.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (68 samples, 0.55%)</title><rect x="93.8" y="499.0" width="6.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="96.8" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (6 samples, 0.05%)</title><rect x="94.1" y="483.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="97.1" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (6 samples, 0.05%)</title><rect x="94.1" y="467.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="97.1" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (5 samples, 0.04%)</title><rect x="94.2" y="451.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="97.2" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (5 samples, 0.04%)</title><rect x="94.2" y="435.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="97.2" y="446.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.02%)</title><rect x="94.4" y="419.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="97.4" y="430.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (3 samples, 0.02%)</title><rect x="94.4" y="403.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="97.4" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (59 samples, 0.48%)</title><rect x="94.7" y="483.0" width="5.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="97.7" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (58 samples, 0.47%)</title><rect x="94.8" y="467.0" width="5.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="97.8" y="478.0"></text>
</g>
<g>
<title>__libc_write (55 samples, 0.45%)</title><rect x="95.0" y="451.0" width="5.2" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="98.0" y="462.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (48 samples, 0.39%)</title><rect x="95.7" y="435.0" width="4.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="98.7" y="446.0"></text>
</g>
<g>
<title>do_syscall_64 (48 samples, 0.39%)</title><rect x="95.7" y="419.0" width="4.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="98.7" y="430.0"></text>
</g>
<g>
<title>ksys_write (43 samples, 0.35%)</title><rect x="96.1" y="403.0" width="4.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="99.1" y="414.0"></text>
</g>
<g>
<title>vfs_write (38 samples, 0.31%)</title><rect x="96.6" y="387.0" width="3.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="99.6" y="398.0"></text>
</g>
<g>
<title>new_sync_write (32 samples, 0.26%)</title><rect x="96.8" y="371.0" width="3.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="99.8" y="382.0"></text>
</g>
<g>
<title>pipe_write (31 samples, 0.25%)</title><rect x="96.9" y="355.0" width="3.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="99.9" y="366.0"></text>
</g>
<g>
<title>__wake_up_common_lock (19 samples, 0.15%)</title><rect x="97.2" y="339.0" width="1.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="100.2" y="350.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (19 samples, 0.15%)</title><rect x="97.2" y="323.0" width="1.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="100.2" y="334.0"></text>
</g>
<g>
<title>copy_page_from_iter (4 samples, 0.03%)</title><rect x="99.0" y="339.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="102.0" y="350.0"></text>
</g>
<g>
<title>copyin (4 samples, 0.03%)</title><rect x="99.0" y="323.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="102.0" y="334.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (4 samples, 0.03%)</title><rect x="99.0" y="307.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="102.0" y="318.0"></text>
</g>
<g>
<title>file_update_time (3 samples, 0.02%)</title><rect x="99.4" y="339.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="102.4" y="350.0"></text>
</g>
<g>
<title>security_file_permission (4 samples, 0.03%)</title><rect x="99.9" y="371.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="102.9" y="382.0"></text>
</g>
<g>
<title>file_has_perm (4 samples, 0.03%)</title><rect x="99.9" y="355.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="102.9" y="366.0"></text>
</g>
<g>
<title>avc_has_perm (3 samples, 0.02%)</title><rect x="100.0" y="339.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="103.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (5 samples, 0.04%)</title><rect x="100.5" y="531.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="103.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (173 samples, 1.40%)</title><rect x="101.0" y="595.0" width="16.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="104.0" y="606.0"></text>
</g>
<g>
<title>java/lang/Long.toString (5 samples, 0.04%)</title><rect x="101.1" y="579.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="104.1" y="590.0"></text>
</g>
<g>
<title>java/lang/Long.getChars (4 samples, 0.03%)</title><rect x="101.1" y="563.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="104.1" y="574.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (6 samples, 0.05%)</title><rect x="101.8" y="579.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="104.8" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (6 samples, 0.05%)</title><rect x="101.8" y="563.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="104.8" y="574.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (3 samples, 0.02%)</title><rect x="101.8" y="547.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="104.8" y="558.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (3 samples, 0.02%)</title><rect x="102.1" y="547.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="105.1" y="558.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (3 samples, 0.02%)</title><rect x="102.1" y="531.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="105.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (129 samples, 1.04%)</title><rect x="102.3" y="579.0" width="12.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="105.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectCookies (6 samples, 0.05%)</title><rect x="102.4" y="563.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="105.4" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (6 samples, 0.05%)</title><rect x="102.4" y="547.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="105.4" y="558.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (6 samples, 0.05%)</title><rect x="102.4" y="531.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="105.4" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (6 samples, 0.05%)</title><rect x="102.4" y="515.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="105.4" y="526.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (5 samples, 0.04%)</title><rect x="102.5" y="499.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="105.5" y="510.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (5 samples, 0.04%)</title><rect x="102.5" y="483.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="105.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (67 samples, 0.54%)</title><rect x="103.0" y="563.0" width="6.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="106.0" y="574.0"></text>
</g>
<g>
<title>java/lang/String.length (3 samples, 0.02%)</title><rect x="103.5" y="547.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="106.5" y="558.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (8 samples, 0.06%)</title><rect x="103.8" y="547.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="106.8" y="558.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (4 samples, 0.03%)</title><rect x="103.8" y="531.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="106.8" y="542.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (3 samples, 0.02%)</title><rect x="103.8" y="515.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="106.8" y="526.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (9 samples, 0.07%)</title><rect x="104.7" y="547.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="107.7" y="558.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (9 samples, 0.07%)</title><rect x="104.7" y="531.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="107.7" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntryIterator.next (6 samples, 0.05%)</title><rect x="105.0" y="515.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="108.0" y="526.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntryIterator.next (6 samples, 0.05%)</title><rect x="105.0" y="499.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="108.0" y="510.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.nextEntry (6 samples, 0.05%)</title><rect x="105.0" y="483.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="108.0" y="494.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (28 samples, 0.23%)</title><rect x="105.6" y="547.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="108.6" y="558.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (28 samples, 0.23%)</title><rect x="105.6" y="531.0" width="2.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="108.6" y="542.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.02%)</title><rect x="106.1" y="515.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="109.1" y="526.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (19 samples, 0.15%)</title><rect x="106.5" y="515.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="109.5" y="526.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntryIterator.&lt;init&gt; (19 samples, 0.15%)</title><rect x="106.5" y="499.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="109.5" y="510.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.&lt;init&gt; (18 samples, 0.15%)</title><rect x="106.6" y="483.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="109.6" y="494.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (7 samples, 0.06%)</title><rect x="107.6" y="467.0" width="0.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="110.6" y="478.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$248/471895969.test (12 samples, 0.10%)</title><rect x="108.3" y="547.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="111.3" y="558.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (12 samples, 0.10%)</title><rect x="108.3" y="531.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="111.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$$Lambda$194/1679023824.test (5 samples, 0.04%)</title><rect x="108.3" y="515.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="111.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.lambda$static$0 (5 samples, 0.04%)</title><rect x="108.3" y="499.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="111.3" y="510.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (5 samples, 0.04%)</title><rect x="108.3" y="483.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="111.3" y="494.0"></text>
</g>
<g>
<title>java/lang/String.length (4 samples, 0.03%)</title><rect x="108.4" y="467.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="111.4" y="478.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (4 samples, 0.03%)</title><rect x="108.4" y="451.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="111.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$77/1464555023.test (7 samples, 0.06%)</title><rect x="108.7" y="515.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="111.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (7 samples, 0.06%)</title><rect x="108.7" y="499.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="111.7" y="510.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$66/254801937.test (7 samples, 0.06%)</title><rect x="108.7" y="483.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="111.7" y="494.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (7 samples, 0.06%)</title><rect x="108.7" y="467.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="111.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$65/270056930.test (7 samples, 0.06%)</title><rect x="108.7" y="451.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="111.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (7 samples, 0.06%)</title><rect x="108.7" y="435.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="111.7" y="446.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (5 samples, 0.04%)</title><rect x="108.7" y="419.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="111.7" y="430.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.03%)</title><rect x="108.8" y="403.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="111.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (54 samples, 0.44%)</title><rect x="109.5" y="563.0" width="5.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="112.5" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (54 samples, 0.44%)</title><rect x="109.5" y="547.0" width="5.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="112.5" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (54 samples, 0.44%)</title><rect x="109.5" y="531.0" width="5.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="112.5" y="542.0"></text>
</g>
<g>
<title>java/util/AbstractMap.isEmpty (4 samples, 0.03%)</title><rect x="109.6" y="515.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="112.6" y="526.0"></text>
</g>
<g>
<title>java/util/TreeMap.size (4 samples, 0.03%)</title><rect x="109.6" y="499.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="112.6" y="510.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (49 samples, 0.40%)</title><rect x="110.0" y="515.0" width="4.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="113.0" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$115/937225413.accept (45 samples, 0.36%)</title><rect x="110.4" y="499.0" width="4.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="113.4" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (45 samples, 0.36%)</title><rect x="110.4" y="483.0" width="4.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="113.4" y="494.0"></text>
</g>
<g>
<title>java/lang/String.trim (18 samples, 0.15%)</title><rect x="110.8" y="467.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="113.8" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (17 samples, 0.14%)</title><rect x="110.8" y="451.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="113.8" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (11 samples, 0.09%)</title><rect x="111.4" y="435.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="114.4" y="446.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (5 samples, 0.04%)</title><rect x="111.6" y="419.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="114.6" y="430.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (4 samples, 0.03%)</title><rect x="111.7" y="403.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="114.7" y="414.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.02%)</title><rect x="111.7" y="387.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="114.7" y="398.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4 samples, 0.03%)</title><rect x="112.1" y="419.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="115.1" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (7 samples, 0.06%)</title><rect x="112.5" y="467.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="115.5" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7 samples, 0.06%)</title><rect x="112.5" y="451.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="115.5" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$118/2131634163.get$Lambda (7 samples, 0.06%)</title><rect x="112.5" y="435.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="115.5" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$118/2131634163.&lt;init&gt; (5 samples, 0.04%)</title><rect x="112.7" y="419.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="115.7" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (3 samples, 0.02%)</title><rect x="113.1" y="467.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="116.1" y="478.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (13 samples, 0.11%)</title><rect x="113.4" y="467.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="116.4" y="478.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (7 samples, 0.06%)</title><rect x="114.0" y="451.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="117.0" y="462.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (7 samples, 0.06%)</title><rect x="114.0" y="435.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="117.0" y="446.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (7 samples, 0.06%)</title><rect x="114.0" y="419.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="117.0" y="430.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (7 samples, 0.06%)</title><rect x="114.0" y="403.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="117.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (8 samples, 0.06%)</title><rect x="114.9" y="579.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="117.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (7 samples, 0.06%)</title><rect x="115.0" y="563.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="118.0" y="574.0"></text>
</g>
<g>
<title>java/lang/String.equals (7 samples, 0.06%)</title><rect x="115.0" y="547.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="118.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (20 samples, 0.16%)</title><rect x="115.6" y="579.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="118.6" y="590.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3 samples, 0.02%)</title><rect x="115.7" y="563.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="118.7" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3 samples, 0.02%)</title><rect x="115.7" y="547.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="118.7" y="558.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (14 samples, 0.11%)</title><rect x="116.0" y="563.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="119.0" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap$Entry.&lt;init&gt; (3 samples, 0.02%)</title><rect x="116.3" y="547.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="119.3" y="558.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (6 samples, 0.05%)</title><rect x="116.6" y="547.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="119.6" y="558.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (6 samples, 0.05%)</title><rect x="116.6" y="531.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="119.6" y="542.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (6 samples, 0.05%)</title><rect x="116.6" y="515.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="119.6" y="526.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (4 samples, 0.03%)</title><rect x="116.8" y="499.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="119.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (37 samples, 0.30%)</title><rect x="117.9" y="659.0" width="3.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="120.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (13 samples, 0.11%)</title><rect x="118.5" y="643.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="121.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (12 samples, 0.10%)</title><rect x="118.6" y="627.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="121.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (12 samples, 0.10%)</title><rect x="118.6" y="611.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="121.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (12 samples, 0.10%)</title><rect x="118.6" y="595.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="121.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (12 samples, 0.10%)</title><rect x="118.6" y="579.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="121.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (6 samples, 0.05%)</title><rect x="118.8" y="563.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="121.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$199/1509846524.run (6 samples, 0.05%)</title><rect x="118.8" y="547.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="121.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (6 samples, 0.05%)</title><rect x="118.8" y="531.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="121.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (4 samples, 0.03%)</title><rect x="118.8" y="515.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="121.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (4 samples, 0.03%)</title><rect x="118.8" y="499.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="121.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (4 samples, 0.03%)</title><rect x="118.8" y="483.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="121.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$290/1089333161.run (3 samples, 0.02%)</title><rect x="118.9" y="467.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="121.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (3 samples, 0.02%)</title><rect x="118.9" y="451.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="121.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (4 samples, 0.03%)</title><rect x="119.3" y="563.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="122.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (3 samples, 0.02%)</title><rect x="119.4" y="547.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="122.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (3 samples, 0.02%)</title><rect x="119.4" y="531.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="122.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.&lt;init&gt; (14 samples, 0.11%)</title><rect x="119.7" y="643.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="122.7" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (7 samples, 0.06%)</title><rect x="121.6" y="803.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="124.6" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (7 samples, 0.06%)</title><rect x="121.6" y="787.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="124.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.&lt;init&gt; (3 samples, 0.02%)</title><rect x="121.6" y="771.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="124.6" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (3 samples, 0.02%)</title><rect x="121.6" y="755.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="124.6" y="766.0"></text>
</g>
<g>
<title>java/util/function/Function$$Lambda$33/433287555.apply (3 samples, 0.02%)</title><rect x="122.0" y="771.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="125.0" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (315 samples, 2.55%)</title><rect x="122.3" y="803.0" width="30.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="125.3" y="814.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (3 samples, 0.02%)</title><rect x="122.5" y="787.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="125.5" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (3 samples, 0.02%)</title><rect x="122.5" y="771.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="125.5" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (4 samples, 0.03%)</title><rect x="122.8" y="787.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="125.8" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (4 samples, 0.03%)</title><rect x="122.8" y="771.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="125.8" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (4 samples, 0.03%)</title><rect x="122.8" y="755.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="125.8" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (3 samples, 0.02%)</title><rect x="122.8" y="739.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="125.8" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (3 samples, 0.02%)</title><rect x="122.8" y="723.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="125.8" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (3 samples, 0.02%)</title><rect x="122.8" y="707.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="125.8" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (3 samples, 0.02%)</title><rect x="122.8" y="691.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="125.8" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (3 samples, 0.02%)</title><rect x="122.8" y="675.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="125.8" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (3 samples, 0.02%)</title><rect x="122.8" y="659.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="125.8" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (3 samples, 0.02%)</title><rect x="122.8" y="643.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="125.8" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (3 samples, 0.02%)</title><rect x="122.8" y="627.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="125.8" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.enq (3 samples, 0.02%)</title><rect x="122.8" y="611.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="125.8" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetTail (3 samples, 0.02%)</title><rect x="122.8" y="595.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="125.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (306 samples, 2.48%)</title><rect x="123.2" y="787.0" width="29.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="126.2" y="798.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (282 samples, 2.28%)</title><rect x="123.2" y="771.0" width="26.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="126.2" y="782.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (282 samples, 2.28%)</title><rect x="123.2" y="755.0" width="26.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="126.2" y="766.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (282 samples, 2.28%)</title><rect x="123.2" y="739.0" width="26.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="126.2" y="750.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$154/1584594711.apply (280 samples, 2.27%)</title><rect x="123.4" y="723.0" width="26.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="126.4" y="734.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$get$0 (279 samples, 2.26%)</title><rect x="123.5" y="707.0" width="26.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="126.5" y="718.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createExchangeImpl (279 samples, 2.26%)</title><rect x="123.5" y="691.0" width="26.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="126.5" y="702.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (129 samples, 1.04%)</title><rect x="123.9" y="675.0" width="12.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="126.9" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (129 samples, 1.04%)</title><rect x="123.9" y="659.0" width="12.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="126.9" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (129 samples, 1.04%)</title><rect x="123.9" y="643.0" width="12.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="126.9" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.&lt;init&gt; (5 samples, 0.04%)</title><rect x="123.9" y="627.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="126.9" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (4 samples, 0.03%)</title><rect x="124.0" y="611.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="127.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$201/376986198.apply (118 samples, 0.96%)</title><rect x="124.4" y="627.0" width="11.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="127.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$1 (118 samples, 0.96%)</title><rect x="124.4" y="611.0" width="11.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="127.4" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (118 samples, 0.96%)</title><rect x="124.4" y="595.0" width="11.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="127.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (118 samples, 0.96%)</title><rect x="124.4" y="579.0" width="11.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="127.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getSettingsString (97 samples, 0.79%)</title><rect x="124.4" y="563.0" width="9.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="127.4" y="574.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encodeToString (4 samples, 0.03%)</title><rect x="124.4" y="547.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="127.4" y="558.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encode (4 samples, 0.03%)</title><rect x="124.4" y="531.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="127.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getClientSettings (85 samples, 0.69%)</title><rect x="124.8" y="547.0" width="8.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="127.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getParameter (83 samples, 0.67%)</title><rect x="125.0" y="531.0" width="7.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="128.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getIntegerNetProperty (82 samples, 0.66%)</title><rect x="125.1" y="515.0" width="7.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="128.1" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/896644936.linkToTargetMethod (3 samples, 0.02%)</title><rect x="125.2" y="499.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="128.2" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.02%)</title><rect x="125.2" y="483.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="128.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$61/1212772528.get$Lambda (3 samples, 0.02%)</title><rect x="125.2" y="467.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="128.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$61/1212772528.&lt;init&gt; (3 samples, 0.02%)</title><rect x="125.2" y="451.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="128.2" y="462.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (78 samples, 0.63%)</title><rect x="125.5" y="499.0" width="7.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="128.5" y="510.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (61 samples, 0.49%)</title><rect x="125.7" y="483.0" width="5.8" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="128.7" y="494.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (5 samples, 0.04%)</title><rect x="126.5" y="467.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="129.5" y="478.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.269] (4 samples, 0.03%)</title><rect x="126.5" y="451.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="129.5" y="462.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (7 samples, 0.06%)</title><rect x="127.0" y="467.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="130.0" y="478.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (4 samples, 0.03%)</title><rect x="127.2" y="451.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="130.2" y="462.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (3 samples, 0.02%)</title><rect x="127.8" y="467.0" width="0.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="130.8" y="478.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (6 samples, 0.05%)</title><rect x="128.2" y="467.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="131.2" y="478.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (4 samples, 0.03%)</title><rect x="128.4" y="451.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="131.4" y="462.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (3 samples, 0.02%)</title><rect x="128.4" y="435.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="131.4" y="446.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (28 samples, 0.23%)</title><rect x="128.8" y="467.0" width="2.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="131.8" y="478.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (8 samples, 0.06%)</title><rect x="129.2" y="451.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="132.2" y="462.0"></text>
</g>
<g>
<title>Klass::is_subclass_of(Klass const*) const (4 samples, 0.03%)</title><rect x="129.6" y="435.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="132.6" y="446.0"></text>
</g>
<g>
<title>PcDescContainer::find_pc_desc_internal(unsigned char*, bool, PcDescSearch const&amp;) (9 samples, 0.07%)</title><rect x="129.9" y="451.0" width="0.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="132.9" y="462.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (7 samples, 0.06%)</title><rect x="130.8" y="451.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="133.8" y="462.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (6 samples, 0.05%)</title><rect x="130.9" y="435.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="133.9" y="446.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (3 samples, 0.02%)</title><rect x="130.9" y="419.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="133.9" y="430.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (3 samples, 0.02%)</title><rect x="131.2" y="419.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="134.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$61/1212772528.run (14 samples, 0.11%)</title><rect x="131.6" y="483.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="134.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$getIntegerNetProperty$11 (11 samples, 0.09%)</title><rect x="131.9" y="467.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="134.9" y="478.0"></text>
</g>
<g>
<title>sun/net/NetProperties.getInteger (11 samples, 0.09%)</title><rect x="131.9" y="451.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="134.9" y="462.0"></text>
</g>
<g>
<title>java/lang/System.getProperty (8 samples, 0.06%)</title><rect x="132.0" y="435.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="135.0" y="446.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (6 samples, 0.05%)</title><rect x="132.1" y="419.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="135.1" y="430.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (5 samples, 0.04%)</title><rect x="132.2" y="403.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="135.2" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (3 samples, 0.02%)</title><rect x="132.4" y="387.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="135.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.toByteArray (8 samples, 0.06%)</title><rect x="132.9" y="547.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="135.9" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (6 samples, 0.05%)</title><rect x="132.9" y="531.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="135.9" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (6 samples, 0.05%)</title><rect x="132.9" y="515.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="135.9" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (6 samples, 0.05%)</title><rect x="132.9" y="499.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="135.9" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (6 samples, 0.05%)</title><rect x="132.9" y="483.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="135.9" y="494.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (5 samples, 0.04%)</title><rect x="132.9" y="467.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="135.9" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (3 samples, 0.02%)</title><rect x="132.9" y="451.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="135.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (21 samples, 0.17%)</title><rect x="133.7" y="563.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="136.7" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (21 samples, 0.17%)</title><rect x="133.7" y="547.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="136.7" y="558.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (11 samples, 0.09%)</title><rect x="134.2" y="531.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="137.2" y="542.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (11 samples, 0.09%)</title><rect x="134.2" y="515.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="137.2" y="526.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (11 samples, 0.09%)</title><rect x="134.2" y="499.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="137.2" y="510.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (8 samples, 0.06%)</title><rect x="134.5" y="483.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="137.5" y="494.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (3 samples, 0.02%)</title><rect x="135.3" y="531.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="138.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$309/980063472.apply (6 samples, 0.05%)</title><rect x="135.7" y="627.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="138.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (6 samples, 0.05%)</title><rect x="135.7" y="611.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="138.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpResponseImpl.&lt;init&gt; (5 samples, 0.04%)</title><rect x="135.8" y="595.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="138.8" y="606.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (3 samples, 0.02%)</title><rect x="135.9" y="579.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="138.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (145 samples, 1.17%)</title><rect x="136.3" y="675.0" width="13.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="139.3" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (145 samples, 1.17%)</title><rect x="136.3" y="659.0" width="13.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="139.3" y="670.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (4 samples, 0.03%)</title><rect x="136.6" y="643.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="139.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (3 samples, 0.02%)</title><rect x="137.0" y="643.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="140.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (4 samples, 0.03%)</title><rect x="137.5" y="643.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="140.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (7 samples, 0.06%)</title><rect x="137.9" y="643.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="140.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (29 samples, 0.23%)</title><rect x="138.6" y="643.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="141.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (23 samples, 0.19%)</title><rect x="138.6" y="627.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="141.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (15 samples, 0.12%)</title><rect x="139.4" y="611.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="142.4" y="622.0"></text>
</g>
<g>
<title>java/util/HashMap.get (7 samples, 0.06%)</title><rect x="139.5" y="595.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="142.5" y="606.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (4 samples, 0.03%)</title><rect x="139.5" y="579.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="142.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.equals (3 samples, 0.02%)</title><rect x="139.6" y="563.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="142.6" y="574.0"></text>
</g>
<g>
<title>java/util/Objects.equals (3 samples, 0.02%)</title><rect x="139.6" y="547.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="142.6" y="558.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.equals (3 samples, 0.02%)</title><rect x="139.6" y="531.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="142.6" y="542.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress$InetSocketAddressHolder.equals (3 samples, 0.02%)</title><rect x="139.6" y="515.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="142.6" y="526.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (3 samples, 0.02%)</title><rect x="139.9" y="579.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="142.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.remove (6 samples, 0.05%)</title><rect x="140.3" y="595.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="143.3" y="606.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.next (3 samples, 0.02%)</title><rect x="140.5" y="579.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="143.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.isOpen (5 samples, 0.04%)</title><rect x="140.9" y="627.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="143.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (90 samples, 0.73%)</title><rect x="141.4" y="643.0" width="8.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="144.4" y="654.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (89 samples, 0.72%)</title><rect x="141.5" y="627.0" width="8.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="144.5" y="638.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (56 samples, 0.45%)</title><rect x="142.0" y="611.0" width="5.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="145.0" y="622.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;5292148ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)0, 5292148ul&gt;::oop_access_barrier(void*, oopDesc*) (4 samples, 0.03%)</title><rect x="142.6" y="595.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="145.6" y="606.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (3 samples, 0.02%)</title><rect x="143.2" y="595.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="146.2" y="606.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.269] (3 samples, 0.02%)</title><rect x="143.2" y="579.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="146.2" y="590.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (6 samples, 0.05%)</title><rect x="143.6" y="595.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="146.6" y="606.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (10 samples, 0.08%)</title><rect x="145.0" y="595.0" width="1.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="148.0" y="606.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (9 samples, 0.07%)</title><rect x="145.1" y="579.0" width="0.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="148.1" y="590.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (7 samples, 0.06%)</title><rect x="145.1" y="563.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="148.1" y="574.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (14 samples, 0.11%)</title><rect x="146.0" y="595.0" width="1.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="149.0" y="606.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (5 samples, 0.04%)</title><rect x="146.6" y="579.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="149.6" y="590.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (3 samples, 0.02%)</title><rect x="147.0" y="579.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="150.0" y="590.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (3 samples, 0.02%)</title><rect x="147.0" y="563.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="150.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$163/1956467138.run (21 samples, 0.17%)</title><rect x="147.6" y="611.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="150.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (17 samples, 0.14%)</title><rect x="148.0" y="595.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="151.0" y="606.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (17 samples, 0.14%)</title><rect x="148.0" y="579.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="151.0" y="590.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (16 samples, 0.13%)</title><rect x="148.1" y="563.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="151.1" y="574.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (16 samples, 0.13%)</title><rect x="148.1" y="547.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="151.1" y="558.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (13 samples, 0.11%)</title><rect x="148.4" y="531.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="151.4" y="542.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (12 samples, 0.10%)</title><rect x="148.5" y="515.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="151.5" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (4 samples, 0.03%)</title><rect x="148.6" y="499.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="151.6" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListSet.iterator (7 samples, 0.06%)</title><rect x="149.0" y="499.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="152.0" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$KeySet.iterator (3 samples, 0.02%)</title><rect x="149.1" y="483.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="152.1" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$KeyIterator.&lt;init&gt; (3 samples, 0.02%)</title><rect x="149.1" y="467.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="152.1" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (5 samples, 0.04%)</title><rect x="150.1" y="771.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="153.1" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (5 samples, 0.04%)</title><rect x="150.1" y="755.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="153.1" y="766.0"></text>
</g>
<g>
<title>itable stub (4 samples, 0.03%)</title><rect x="150.1" y="739.0" width="0.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="153.1" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getConnectionFor (17 samples, 0.14%)</title><rect x="150.8" y="771.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="153.8" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (10 samples, 0.08%)</title><rect x="150.8" y="755.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="153.8" y="766.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (7 samples, 0.06%)</title><rect x="151.1" y="739.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="154.1" y="750.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (3 samples, 0.02%)</title><rect x="151.1" y="723.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="154.1" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (4 samples, 0.03%)</title><rect x="151.3" y="723.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="154.3" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyFor (7 samples, 0.06%)</title><rect x="151.7" y="755.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="154.7" y="766.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (3 samples, 0.02%)</title><rect x="151.8" y="739.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="154.8" y="750.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.02%)</title><rect x="151.8" y="723.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="154.8" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyString (3 samples, 0.02%)</title><rect x="152.1" y="739.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="155.1" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/888960014.linkToTargetMethod (3 samples, 0.02%)</title><rect x="152.1" y="723.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="155.1" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1103745955.invoke (3 samples, 0.02%)</title><rect x="152.1" y="707.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="155.1" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/642648282.invoke (3 samples, 0.02%)</title><rect x="152.1" y="691.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="155.1" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.02%)</title><rect x="152.1" y="675.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="155.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.requestFilters (15 samples, 0.12%)</title><rect x="152.5" y="851.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="155.5" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.request (7 samples, 0.06%)</title><rect x="153.0" y="835.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="156.0" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (4 samples, 0.03%)</title><rect x="153.3" y="819.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="156.3" y="830.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.get (3 samples, 0.02%)</title><rect x="153.3" y="803.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="156.3" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$135/145822461.get (3 samples, 0.02%)</title><rect x="153.9" y="931.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="156.9" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.lock (4 samples, 0.03%)</title><rect x="154.2" y="947.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="157.2" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (4 samples, 0.03%)</title><rect x="154.2" y="931.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="157.2" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.tryAcquire (4 samples, 0.03%)</title><rect x="154.2" y="915.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="157.2" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (4 samples, 0.03%)</title><rect x="154.2" y="899.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="157.2" y="910.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (4 samples, 0.03%)</title><rect x="154.2" y="883.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="157.2" y="894.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (4 samples, 0.03%)</title><rect x="154.2" y="867.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="157.2" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (9 samples, 0.07%)</title><rect x="154.6" y="947.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="157.6" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (9 samples, 0.07%)</title><rect x="154.6" y="931.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="157.6" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.tryRelease (4 samples, 0.03%)</title><rect x="155.1" y="915.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="158.1" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.setState (4 samples, 0.03%)</title><rect x="155.1" y="899.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="158.1" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (1,012 samples, 8.19%)</title><rect x="155.4" y="947.0" width="96.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="158.4" y="958.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (966 samples, 7.82%)</title><rect x="156.3" y="931.0" width="92.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="159.3" y="942.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (686 samples, 5.55%)</title><rect x="156.8" y="915.0" width="65.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="159.8" y="926.0">java/ut..</text>
</g>
<g>
<title>java/lang/Thread.interrupted (27 samples, 0.22%)</title><rect x="157.0" y="899.0" width="2.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="160.0" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (5 samples, 0.04%)</title><rect x="159.6" y="899.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="162.6" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (30 samples, 0.24%)</title><rect x="160.1" y="899.0" width="2.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="163.1" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (3 samples, 0.02%)</title><rect x="161.0" y="883.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="164.0" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (3 samples, 0.02%)</title><rect x="161.0" y="867.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="164.0" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (3 samples, 0.02%)</title><rect x="161.0" y="851.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="164.0" y="862.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (3 samples, 0.02%)</title><rect x="161.0" y="835.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="164.0" y="846.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (3 samples, 0.02%)</title><rect x="161.0" y="819.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="164.0" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquire (18 samples, 0.15%)</title><rect x="161.3" y="883.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="164.3" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (100 samples, 0.81%)</title><rect x="163.0" y="899.0" width="9.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="166.0" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (99 samples, 0.80%)</title><rect x="163.1" y="883.0" width="9.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="166.1" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (97 samples, 0.79%)</title><rect x="163.1" y="867.0" width="9.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="166.1" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (95 samples, 0.77%)</title><rect x="163.3" y="851.0" width="9.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="166.3" y="862.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (95 samples, 0.77%)</title><rect x="163.3" y="835.0" width="9.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="166.3" y="846.0"></text>
</g>
<g>
<title>Unsafe_Unpark (10 samples, 0.08%)</title><rect x="163.3" y="819.0" width="0.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="166.3" y="830.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (3 samples, 0.02%)</title><rect x="163.6" y="803.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="166.6" y="814.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_lock (3 samples, 0.02%)</title><rect x="163.9" y="803.0" width="0.2" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="166.9" y="814.0"></text>
</g>
<g>
<title>__pthread_cond_signal (85 samples, 0.69%)</title><rect x="164.2" y="819.0" width="8.2" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="167.2" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (75 samples, 0.61%)</title><rect x="165.2" y="803.0" width="7.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="168.2" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (75 samples, 0.61%)</title><rect x="165.2" y="787.0" width="7.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="168.2" y="798.0"></text>
</g>
<g>
<title>__x64_sys_futex (72 samples, 0.58%)</title><rect x="165.4" y="771.0" width="6.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="168.4" y="782.0"></text>
</g>
<g>
<title>do_futex (71 samples, 0.57%)</title><rect x="165.5" y="755.0" width="6.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="168.5" y="766.0"></text>
</g>
<g>
<title>futex_wake (71 samples, 0.57%)</title><rect x="165.5" y="739.0" width="6.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="168.5" y="750.0"></text>
</g>
<g>
<title>mark_wake_futex (3 samples, 0.02%)</title><rect x="166.1" y="723.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="169.1" y="734.0"></text>
</g>
<g>
<title>wake_up_q (61 samples, 0.49%)</title><rect x="166.4" y="723.0" width="5.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="169.4" y="734.0"></text>
</g>
<g>
<title>try_to_wake_up (60 samples, 0.49%)</title><rect x="166.5" y="707.0" width="5.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="169.5" y="718.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (59 samples, 0.48%)</title><rect x="166.6" y="691.0" width="5.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="169.6" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (521 samples, 4.22%)</title><rect x="172.5" y="899.0" width="49.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="175.5" y="910.0">java/..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (520 samples, 4.21%)</title><rect x="172.6" y="883.0" width="49.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="175.6" y="894.0">jdk/i..</text>
</g>
<g>
<title>Unsafe_Park (200 samples, 1.62%)</title><rect x="173.7" y="867.0" width="19.1" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="176.7" y="878.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (5 samples, 0.04%)</title><rect x="174.4" y="851.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="177.4" y="862.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (54 samples, 0.44%)</title><rect x="175.2" y="851.0" width="5.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="178.2" y="862.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (15 samples, 0.12%)</title><rect x="177.5" y="835.0" width="1.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="180.5" y="846.0"></text>
</g>
<g>
<title>__tls_get_addr (13 samples, 0.11%)</title><rect x="179.1" y="835.0" width="1.3" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="182.1" y="846.0"></text>
</g>
<g>
<title>Thread::is_interrupted(Thread*, bool) (3 samples, 0.02%)</title><rect x="180.4" y="851.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="183.4" y="862.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (6 samples, 0.05%)</title><rect x="180.7" y="851.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="183.7" y="862.0"></text>
</g>
<g>
<title>__lll_unlock_wake (93 samples, 0.75%)</title><rect x="181.3" y="851.0" width="8.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="184.3" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (56 samples, 0.45%)</title><rect x="184.9" y="835.0" width="5.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="187.9" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (56 samples, 0.45%)</title><rect x="184.9" y="819.0" width="5.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="187.9" y="830.0"></text>
</g>
<g>
<title>__x64_sys_futex (32 samples, 0.26%)</title><rect x="187.1" y="803.0" width="3.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="190.1" y="814.0"></text>
</g>
<g>
<title>do_futex (28 samples, 0.23%)</title><rect x="187.4" y="787.0" width="2.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="190.4" y="798.0"></text>
</g>
<g>
<title>futex_wake (27 samples, 0.22%)</title><rect x="187.5" y="771.0" width="2.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="190.5" y="782.0"></text>
</g>
<g>
<title>get_futex_key (3 samples, 0.02%)</title><rect x="189.5" y="755.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="192.5" y="766.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (3 samples, 0.02%)</title><rect x="190.3" y="851.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="193.3" y="862.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (4 samples, 0.03%)</title><rect x="190.6" y="851.0" width="0.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="193.6" y="862.0"></text>
</g>
<g>
<title>__tls_get_addr (5 samples, 0.04%)</title><rect x="191.0" y="851.0" width="0.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="194.0" y="862.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (3 samples, 0.02%)</title><rect x="191.6" y="851.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="194.6" y="862.0"></text>
</g>
<g>
<title>pthread_mutex_trylock (6 samples, 0.05%)</title><rect x="192.2" y="851.0" width="0.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="195.2" y="862.0"></text>
</g>
<g>
<title>[unknown] (309 samples, 2.50%)</title><rect x="192.8" y="867.0" width="29.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="195.8" y="878.0">[u..</text>
</g>
<g>
<title>__condvar_dec_grefs (8 samples, 0.06%)</title><rect x="192.8" y="851.0" width="0.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="195.8" y="862.0"></text>
</g>
<g>
<title>__pthread_cond_wait (271 samples, 2.19%)</title><rect x="193.6" y="851.0" width="25.8" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="196.6" y="862.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (212 samples, 1.72%)</title><rect x="199.2" y="835.0" width="20.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="202.2" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (212 samples, 1.72%)</title><rect x="199.2" y="819.0" width="20.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="202.2" y="830.0"></text>
</g>
<g>
<title>__x64_sys_futex (187 samples, 1.51%)</title><rect x="201.6" y="803.0" width="17.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="204.6" y="814.0"></text>
</g>
<g>
<title>do_futex (183 samples, 1.48%)</title><rect x="202.0" y="787.0" width="17.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="205.0" y="798.0"></text>
</g>
<g>
<title>futex_wait (174 samples, 1.41%)</title><rect x="202.8" y="771.0" width="16.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="205.8" y="782.0"></text>
</g>
<g>
<title>futex_wait_queue_me (113 samples, 0.91%)</title><rect x="205.0" y="755.0" width="10.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="208.0" y="766.0"></text>
</g>
<g>
<title>_cond_resched (3 samples, 0.02%)</title><rect x="207.8" y="739.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="210.8" y="750.0"></text>
</g>
<g>
<title>plist_add (9 samples, 0.07%)</title><rect x="208.1" y="739.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="211.1" y="750.0"></text>
</g>
<g>
<title>schedule (72 samples, 0.58%)</title><rect x="208.9" y="739.0" width="6.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="211.9" y="750.0"></text>
</g>
<g>
<title>__sched_text_start (67 samples, 0.54%)</title><rect x="209.4" y="723.0" width="6.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="212.4" y="734.0"></text>
</g>
<g>
<title>finish_task_switch (61 samples, 0.49%)</title><rect x="210.0" y="707.0" width="5.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="213.0" y="718.0"></text>
</g>
<g>
<title>futex_wait_setup (38 samples, 0.31%)</title><rect x="215.8" y="755.0" width="3.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="218.8" y="766.0"></text>
</g>
<g>
<title>_raw_spin_lock (3 samples, 0.02%)</title><rect x="217.0" y="739.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="220.0" y="750.0"></text>
</g>
<g>
<title>get_futex_key (11 samples, 0.09%)</title><rect x="217.3" y="739.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="220.3" y="750.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.0 (3 samples, 0.02%)</title><rect x="218.1" y="723.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="221.1" y="734.0"></text>
</g>
<g>
<title>get_futex_value_locked (10 samples, 0.08%)</title><rect x="218.4" y="739.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="221.4" y="750.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (8 samples, 0.06%)</title><rect x="219.4" y="851.0" width="0.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="222.4" y="862.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (4 samples, 0.03%)</title><rect x="220.2" y="851.0" width="0.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="223.2" y="862.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (3 samples, 0.02%)</title><rect x="220.6" y="851.0" width="0.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="223.6" y="862.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (5 samples, 0.04%)</title><rect x="220.9" y="851.0" width="0.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="223.9" y="862.0"></text>
</g>
<g>
<title>pthread_mutex_trylock (9 samples, 0.07%)</title><rect x="221.4" y="851.0" width="0.9" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="224.4" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (61 samples, 0.49%)</title><rect x="222.4" y="915.0" width="5.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="225.4" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (61 samples, 0.49%)</title><rect x="222.4" y="899.0" width="5.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="225.4" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (49 samples, 0.40%)</title><rect x="222.8" y="883.0" width="4.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="225.8" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (22 samples, 0.18%)</title><rect x="223.6" y="867.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="226.6" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (21 samples, 0.17%)</title><rect x="223.7" y="851.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="226.7" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.setBlocker (11 samples, 0.09%)</title><rect x="223.7" y="835.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="226.7" y="846.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (10 samples, 0.08%)</title><rect x="224.8" y="835.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="227.8" y="846.0"></text>
</g>
<g>
<title>Unsafe_Park (4 samples, 0.03%)</title><rect x="224.8" y="819.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="227.8" y="830.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.05%)</title><rect x="225.2" y="819.0" width="0.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="228.2" y="830.0"></text>
</g>
<g>
<title>__pthread_cond_wait (6 samples, 0.05%)</title><rect x="225.2" y="803.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="228.2" y="814.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.02%)</title><rect x="225.4" y="787.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="228.4" y="798.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.02%)</title><rect x="225.4" y="771.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="228.4" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.setHead (18 samples, 0.15%)</title><rect x="225.7" y="867.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="228.7" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (8 samples, 0.06%)</title><rect x="227.5" y="883.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="230.5" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (5 samples, 0.04%)</title><rect x="227.7" y="867.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="230.7" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (3 samples, 0.02%)</title><rect x="227.9" y="851.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="230.9" y="862.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (3 samples, 0.02%)</title><rect x="227.9" y="835.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="230.9" y="846.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (3 samples, 0.02%)</title><rect x="227.9" y="819.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="230.9" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (213 samples, 1.72%)</title><rect x="228.2" y="915.0" width="20.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="231.2" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (213 samples, 1.72%)</title><rect x="228.2" y="899.0" width="20.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="231.2" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (213 samples, 1.72%)</title><rect x="228.2" y="883.0" width="20.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="231.2" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (213 samples, 1.72%)</title><rect x="228.2" y="867.0" width="20.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="231.2" y="878.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (213 samples, 1.72%)</title><rect x="228.2" y="851.0" width="20.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="231.2" y="862.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (3 samples, 0.02%)</title><rect x="228.6" y="835.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="231.6" y="846.0"></text>
</g>
<g>
<title>Unsafe_Unpark (36 samples, 0.29%)</title><rect x="228.9" y="835.0" width="3.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="231.9" y="846.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (5 samples, 0.04%)</title><rect x="229.3" y="819.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="232.3" y="830.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.229] (3 samples, 0.02%)</title><rect x="229.9" y="819.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="232.9" y="830.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (5 samples, 0.04%)</title><rect x="230.2" y="819.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="233.2" y="830.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (5 samples, 0.04%)</title><rect x="230.7" y="819.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="233.7" y="830.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_lock (6 samples, 0.05%)</title><rect x="231.4" y="819.0" width="0.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="234.4" y="830.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (3 samples, 0.02%)</title><rect x="231.9" y="819.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="234.9" y="830.0"></text>
</g>
<g>
<title>__pthread_cond_signal (169 samples, 1.37%)</title><rect x="232.3" y="835.0" width="16.2" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="235.3" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (148 samples, 1.20%)</title><rect x="234.3" y="819.0" width="14.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="237.3" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (148 samples, 1.20%)</title><rect x="234.3" y="803.0" width="14.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="237.3" y="814.0"></text>
</g>
<g>
<title>__x64_sys_futex (137 samples, 1.11%)</title><rect x="235.4" y="787.0" width="13.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="238.4" y="798.0"></text>
</g>
<g>
<title>do_futex (137 samples, 1.11%)</title><rect x="235.4" y="771.0" width="13.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="238.4" y="782.0"></text>
</g>
<g>
<title>futex_wake (133 samples, 1.08%)</title><rect x="235.8" y="755.0" width="12.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="238.8" y="766.0"></text>
</g>
<g>
<title>mark_wake_futex (9 samples, 0.07%)</title><rect x="237.3" y="739.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="240.3" y="750.0"></text>
</g>
<g>
<title>wake_q_add_safe (4 samples, 0.03%)</title><rect x="238.1" y="739.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="241.1" y="750.0"></text>
</g>
<g>
<title>wake_up_q (104 samples, 0.84%)</title><rect x="238.5" y="739.0" width="10.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="241.5" y="750.0"></text>
</g>
<g>
<title>try_to_wake_up (103 samples, 0.83%)</title><rect x="238.6" y="723.0" width="9.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="241.6" y="734.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (102 samples, 0.83%)</title><rect x="238.7" y="707.0" width="9.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="241.7" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.take (35 samples, 0.28%)</title><rect x="248.6" y="931.0" width="3.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="251.6" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.take (35 samples, 0.28%)</title><rect x="248.6" y="915.0" width="3.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="251.6" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.awaitNanos (34 samples, 0.28%)</title><rect x="248.7" y="899.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="251.7" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkNanos (30 samples, 0.24%)</title><rect x="249.0" y="883.0" width="2.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="252.0" y="894.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (29 samples, 0.23%)</title><rect x="249.1" y="867.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="252.1" y="878.0"></text>
</g>
<g>
<title>Unsafe_Park (10 samples, 0.08%)</title><rect x="249.1" y="851.0" width="1.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="252.1" y="862.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (4 samples, 0.03%)</title><rect x="249.1" y="835.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="252.1" y="846.0"></text>
</g>
<g>
<title>__lll_unlock_wake (4 samples, 0.03%)</title><rect x="249.6" y="835.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="252.6" y="846.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.14%)</title><rect x="250.1" y="851.0" width="1.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="253.1" y="862.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (14 samples, 0.11%)</title><rect x="250.2" y="835.0" width="1.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="253.2" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (13 samples, 0.11%)</title><rect x="250.3" y="819.0" width="1.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="253.3" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (13 samples, 0.11%)</title><rect x="250.3" y="803.0" width="1.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="253.3" y="814.0"></text>
</g>
<g>
<title>__x64_sys_futex (13 samples, 0.11%)</title><rect x="250.3" y="787.0" width="1.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="253.3" y="798.0"></text>
</g>
<g>
<title>do_futex (9 samples, 0.07%)</title><rect x="250.4" y="771.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="253.4" y="782.0"></text>
</g>
<g>
<title>futex_wait (9 samples, 0.07%)</title><rect x="250.4" y="755.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="253.4" y="766.0"></text>
</g>
<g>
<title>futex_wait_queue_me (7 samples, 0.06%)</title><rect x="250.4" y="739.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="253.4" y="750.0"></text>
</g>
<g>
<title>schedule (5 samples, 0.04%)</title><rect x="250.6" y="723.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="253.6" y="734.0"></text>
</g>
<g>
<title>__sched_text_start (5 samples, 0.04%)</title><rect x="250.6" y="707.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="253.6" y="718.0"></text>
</g>
<g>
<title>finish_task_switch (5 samples, 0.04%)</title><rect x="250.6" y="691.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="253.6" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$247/1271722553.run (618 samples, 5.00%)</title><rect x="252.1" y="947.0" width="59.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="255.1" y="958.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (618 samples, 5.00%)</title><rect x="252.1" y="931.0" width="59.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="255.1" y="942.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (616 samples, 4.99%)</title><rect x="252.3" y="915.0" width="58.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="255.3" y="926.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (611 samples, 4.94%)</title><rect x="252.8" y="899.0" width="58.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="255.8" y="910.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (608 samples, 4.92%)</title><rect x="253.0" y="883.0" width="58.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="256.0" y="894.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (608 samples, 4.92%)</title><rect x="253.0" y="867.0" width="58.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="256.0" y="878.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (608 samples, 4.92%)</title><rect x="253.0" y="851.0" width="58.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="256.0" y="862.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (607 samples, 4.91%)</title><rect x="253.1" y="835.0" width="58.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="256.1" y="846.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (607 samples, 4.91%)</title><rect x="253.1" y="819.0" width="58.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="256.1" y="830.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (3 samples, 0.02%)</title><rect x="253.3" y="803.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="256.3" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (3 samples, 0.02%)</title><rect x="253.3" y="787.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="256.3" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (3 samples, 0.02%)</title><rect x="253.3" y="771.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="256.3" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (3 samples, 0.02%)</title><rect x="253.3" y="755.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="256.3" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (3 samples, 0.02%)</title><rect x="253.3" y="739.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="256.3" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (3 samples, 0.02%)</title><rect x="253.3" y="723.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="256.3" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (3 samples, 0.02%)</title><rect x="253.3" y="707.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="256.3" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (3 samples, 0.02%)</title><rect x="253.3" y="691.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="256.3" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (601 samples, 4.86%)</title><rect x="253.6" y="803.0" width="57.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="256.6" y="814.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (601 samples, 4.86%)</title><rect x="253.6" y="787.0" width="57.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="256.6" y="798.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (108 samples, 0.87%)</title><rect x="254.0" y="771.0" width="10.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="257.0" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (80 samples, 0.65%)</title><rect x="255.3" y="755.0" width="7.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="258.3" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (80 samples, 0.65%)</title><rect x="255.3" y="739.0" width="7.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="258.3" y="750.0"></text>
</g>
<g>
<title>itable stub (4 samples, 0.03%)</title><rect x="255.3" y="723.0" width="0.4" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="258.3" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (76 samples, 0.62%)</title><rect x="255.7" y="723.0" width="7.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="258.7" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (64 samples, 0.52%)</title><rect x="256.6" y="707.0" width="6.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="259.6" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (37 samples, 0.30%)</title><rect x="256.9" y="691.0" width="3.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="259.9" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$267/1020030449.apply (12 samples, 0.10%)</title><rect x="257.2" y="675.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="260.2" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (12 samples, 0.10%)</title><rect x="257.2" y="659.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="260.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (12 samples, 0.10%)</title><rect x="257.2" y="643.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="260.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (9 samples, 0.07%)</title><rect x="257.5" y="627.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="260.5" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (6 samples, 0.05%)</title><rect x="257.8" y="611.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="260.8" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (6 samples, 0.05%)</title><rect x="257.8" y="595.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="260.8" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (6 samples, 0.05%)</title><rect x="257.8" y="579.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="260.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$201/376986198.apply (5 samples, 0.04%)</title><rect x="257.9" y="563.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="260.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$1 (5 samples, 0.04%)</title><rect x="257.9" y="547.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="260.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (5 samples, 0.04%)</title><rect x="257.9" y="531.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="260.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (5 samples, 0.04%)</title><rect x="257.9" y="515.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="260.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getSettingsString (4 samples, 0.03%)</title><rect x="257.9" y="499.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="260.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getClientSettings (4 samples, 0.03%)</title><rect x="257.9" y="483.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="260.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getParameter (4 samples, 0.03%)</title><rect x="257.9" y="467.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="260.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getIntegerNetProperty (4 samples, 0.03%)</title><rect x="257.9" y="451.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="260.9" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/896644936.linkToTargetMethod (4 samples, 0.03%)</title><rect x="257.9" y="435.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="260.9" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.03%)</title><rect x="257.9" y="419.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="260.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$132/1112562714.apply (21 samples, 0.17%)</title><rect x="258.4" y="675.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="261.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (21 samples, 0.17%)</title><rect x="258.4" y="659.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="261.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (21 samples, 0.17%)</title><rect x="258.4" y="643.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="261.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (21 samples, 0.17%)</title><rect x="258.4" y="627.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="261.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (21 samples, 0.17%)</title><rect x="258.4" y="611.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="261.4" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (21 samples, 0.17%)</title><rect x="258.4" y="595.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="261.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$288/1452226218.run (21 samples, 0.17%)</title><rect x="258.4" y="579.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="261.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (21 samples, 0.17%)</title><rect x="258.4" y="563.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="261.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (10 samples, 0.08%)</title><rect x="258.4" y="547.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="261.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (10 samples, 0.08%)</title><rect x="258.4" y="531.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="261.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (10 samples, 0.08%)</title><rect x="258.4" y="515.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="261.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (10 samples, 0.08%)</title><rect x="258.4" y="499.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="261.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (10 samples, 0.08%)</title><rect x="258.4" y="483.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="261.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (10 samples, 0.08%)</title><rect x="258.4" y="467.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="261.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$199/1509846524.run (10 samples, 0.08%)</title><rect x="258.4" y="451.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="261.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (10 samples, 0.08%)</title><rect x="258.4" y="435.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="261.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (3 samples, 0.02%)</title><rect x="258.4" y="419.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="261.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.tryAsyncReceive (7 samples, 0.06%)</title><rect x="258.7" y="419.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="261.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (7 samples, 0.06%)</title><rect x="258.7" y="403.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="261.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (7 samples, 0.06%)</title><rect x="258.7" y="387.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="261.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (7 samples, 0.06%)</title><rect x="258.7" y="371.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="261.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (7 samples, 0.06%)</title><rect x="258.7" y="355.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="261.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (7 samples, 0.06%)</title><rect x="258.7" y="339.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="261.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$290/1089333161.run (6 samples, 0.05%)</title><rect x="258.8" y="323.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="261.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (6 samples, 0.05%)</title><rect x="258.8" y="307.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="261.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (5 samples, 0.04%)</title><rect x="258.9" y="291.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="261.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (5 samples, 0.04%)</title><rect x="258.9" y="275.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="261.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (5 samples, 0.04%)</title><rect x="258.9" y="259.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="261.9" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (3 samples, 0.02%)</title><rect x="258.9" y="243.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="261.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (11 samples, 0.09%)</title><rect x="259.4" y="547.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="262.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (11 samples, 0.09%)</title><rect x="259.4" y="531.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="262.4" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (11 samples, 0.09%)</title><rect x="259.4" y="515.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="262.4" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (11 samples, 0.09%)</title><rect x="259.4" y="499.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="262.4" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (11 samples, 0.09%)</title><rect x="259.4" y="483.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="262.4" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (11 samples, 0.09%)</title><rect x="259.4" y="467.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="262.4" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeThrowable (9 samples, 0.07%)</title><rect x="259.5" y="451.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="262.5" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.encodeThrowable (9 samples, 0.07%)</title><rect x="259.5" y="435.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="262.5" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletionException.&lt;init&gt; (9 samples, 0.07%)</title><rect x="259.5" y="419.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="262.5" y="430.0"></text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (9 samples, 0.07%)</title><rect x="259.5" y="403.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="262.5" y="414.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (9 samples, 0.07%)</title><rect x="259.5" y="387.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="262.5" y="398.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (9 samples, 0.07%)</title><rect x="259.5" y="371.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="262.5" y="382.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (9 samples, 0.07%)</title><rect x="259.5" y="355.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="262.5" y="366.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (9 samples, 0.07%)</title><rect x="259.5" y="339.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="262.5" y="350.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (9 samples, 0.07%)</title><rect x="259.5" y="323.0" width="0.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="262.5" y="334.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (9 samples, 0.07%)</title><rect x="259.5" y="307.0" width="0.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="262.5" y="318.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (9 samples, 0.07%)</title><rect x="259.5" y="291.0" width="0.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="262.5" y="302.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;, Thread*) (9 samples, 0.07%)</title><rect x="259.5" y="275.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="262.5" y="286.0"></text>
</g>
<g>
<title>BacktraceBuilder::push(Method*, int, Thread*) (3 samples, 0.02%)</title><rect x="259.9" y="259.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="262.9" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (20 samples, 0.16%)</title><rect x="260.4" y="691.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="263.4" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (20 samples, 0.16%)</title><rect x="260.4" y="675.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="263.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$235/542698874.apply (19 samples, 0.15%)</title><rect x="260.5" y="659.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="263.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (18 samples, 0.15%)</title><rect x="260.6" y="643.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="263.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (18 samples, 0.15%)</title><rect x="260.6" y="627.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="263.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$148/2053429061.apply (15 samples, 0.12%)</title><rect x="260.9" y="611.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="263.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (14 samples, 0.11%)</title><rect x="261.0" y="595.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="264.0" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (4 samples, 0.03%)</title><rect x="261.0" y="579.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="264.0" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (4 samples, 0.03%)</title><rect x="261.0" y="563.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="264.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (3 samples, 0.02%)</title><rect x="261.1" y="547.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="264.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (3 samples, 0.02%)</title><rect x="261.1" y="531.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="264.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (9 samples, 0.07%)</title><rect x="261.5" y="579.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="264.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.continueRequest (7 samples, 0.06%)</title><rect x="261.6" y="563.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="264.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.subscribe (4 samples, 0.03%)</title><rect x="261.9" y="547.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="264.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.copy (4 samples, 0.03%)</title><rect x="261.9" y="531.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="264.9" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (3 samples, 0.02%)</title><rect x="262.3" y="691.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="265.3" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (3 samples, 0.02%)</title><rect x="262.3" y="675.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="265.3" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (3 samples, 0.02%)</title><rect x="262.3" y="659.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="265.3" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$277/496276186.get (3 samples, 0.02%)</title><rect x="262.7" y="707.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="265.7" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.pollFirst (14 samples, 0.11%)</title><rect x="263.0" y="755.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="266.0" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.unlink (9 samples, 0.07%)</title><rect x="263.5" y="739.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="266.5" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.unlinkLast (9 samples, 0.07%)</title><rect x="263.5" y="723.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="266.5" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.skipDeletedSuccessors (6 samples, 0.05%)</title><rect x="263.6" y="707.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="266.6" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.hasOutgoing (4 samples, 0.03%)</title><rect x="264.3" y="771.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="267.3" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (4 samples, 0.03%)</title><rect x="264.3" y="755.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="267.3" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (4 samples, 0.03%)</title><rect x="264.3" y="739.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="267.3" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (483 samples, 3.91%)</title><rect x="264.7" y="771.0" width="46.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="267.7" y="782.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (483 samples, 3.91%)</title><rect x="264.7" y="755.0" width="46.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="267.7" y="766.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (482 samples, 3.90%)</title><rect x="264.8" y="739.0" width="46.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="267.8" y="750.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (482 samples, 3.90%)</title><rect x="264.8" y="723.0" width="46.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="267.8" y="734.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (475 samples, 3.84%)</title><rect x="265.4" y="707.0" width="45.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="268.4" y="718.0">jdk/..</text>
</g>
<g>
<title>java/nio/channels/SocketChannel.write (464 samples, 3.76%)</title><rect x="265.7" y="691.0" width="44.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="268.7" y="702.0">java..</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (464 samples, 3.76%)</title><rect x="265.7" y="675.0" width="44.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="268.7" y="686.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (463 samples, 3.75%)</title><rect x="265.8" y="659.0" width="44.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="268.8" y="670.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (463 samples, 3.75%)</title><rect x="265.8" y="643.0" width="44.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="268.8" y="654.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/IOVecWrapper.setBuffer (4 samples, 0.03%)</title><rect x="265.9" y="627.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="268.9" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.writev (447 samples, 3.62%)</title><rect x="266.4" y="627.0" width="42.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="269.4" y="638.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (447 samples, 3.62%)</title><rect x="266.4" y="611.0" width="42.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="269.4" y="622.0">sun/..</text>
</g>
<g>
<title>.annobin_writev.c (434 samples, 3.51%)</title><rect x="266.8" y="595.0" width="41.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="269.8" y="606.0">.an..</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (4 samples, 0.03%)</title><rect x="268.8" y="579.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="271.8" y="590.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (409 samples, 3.31%)</title><rect x="269.2" y="579.0" width="39.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="272.2" y="590.0">ent..</text>
</g>
<g>
<title>do_syscall_64 (409 samples, 3.31%)</title><rect x="269.2" y="563.0" width="39.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="272.2" y="574.0">do_..</text>
</g>
<g>
<title>do_writev (401 samples, 3.25%)</title><rect x="269.7" y="547.0" width="38.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="272.7" y="558.0">do_..</text>
</g>
<g>
<title>__fdget_pos (4 samples, 0.03%)</title><rect x="269.7" y="531.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="272.7" y="542.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.03%)</title><rect x="269.7" y="515.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="272.7" y="526.0"></text>
</g>
<g>
<title>vfs_writev (397 samples, 3.21%)</title><rect x="270.0" y="531.0" width="38.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="273.0" y="542.0">vfs..</text>
</g>
<g>
<title>do_iter_write (390 samples, 3.16%)</title><rect x="270.4" y="515.0" width="37.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="273.4" y="526.0">do_..</text>
</g>
<g>
<title>__fsnotify_parent (5 samples, 0.04%)</title><rect x="270.5" y="499.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="273.5" y="510.0"></text>
</g>
<g>
<title>do_iter_readv_writev (377 samples, 3.05%)</title><rect x="271.0" y="499.0" width="36.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="274.0" y="510.0">do_..</text>
</g>
<g>
<title>sock_write_iter (373 samples, 3.02%)</title><rect x="271.4" y="483.0" width="35.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="274.4" y="494.0">soc..</text>
</g>
<g>
<title>sock_sendmsg (371 samples, 3.00%)</title><rect x="271.6" y="467.0" width="35.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="274.6" y="478.0">soc..</text>
</g>
<g>
<title>security_socket_sendmsg (10 samples, 0.08%)</title><rect x="271.7" y="451.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="274.7" y="462.0"></text>
</g>
<g>
<title>sock_has_perm (7 samples, 0.06%)</title><rect x="272.0" y="435.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="275.0" y="446.0"></text>
</g>
<g>
<title>tcp_sendmsg (360 samples, 2.91%)</title><rect x="272.6" y="451.0" width="34.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="275.6" y="462.0">tc..</text>
</g>
<g>
<title>tcp_sendmsg_locked (355 samples, 2.87%)</title><rect x="273.1" y="435.0" width="33.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="276.1" y="446.0">tc..</text>
</g>
<g>
<title>__check_object_size (4 samples, 0.03%)</title><rect x="273.5" y="419.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="276.5" y="430.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (326 samples, 2.64%)</title><rect x="273.9" y="419.0" width="31.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="276.9" y="430.0">__..</text>
</g>
<g>
<title>tcp_write_xmit (326 samples, 2.64%)</title><rect x="273.9" y="403.0" width="31.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="276.9" y="414.0">tc..</text>
</g>
<g>
<title>__tcp_transmit_skb (311 samples, 2.52%)</title><rect x="274.2" y="387.0" width="29.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="277.2" y="398.0">__..</text>
</g>
<g>
<title>__ip_queue_xmit (299 samples, 2.42%)</title><rect x="274.4" y="371.0" width="28.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="277.4" y="382.0">__..</text>
</g>
<g>
<title>ip_local_out (67 samples, 0.54%)</title><rect x="274.7" y="355.0" width="6.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="277.7" y="366.0"></text>
</g>
<g>
<title>__ip_local_out (67 samples, 0.54%)</title><rect x="274.7" y="339.0" width="6.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="277.7" y="350.0"></text>
</g>
<g>
<title>nf_hook_slow (66 samples, 0.53%)</title><rect x="274.8" y="323.0" width="6.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="277.8" y="334.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (21 samples, 0.17%)</title><rect x="275.2" y="307.0" width="2.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="278.2" y="318.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (6 samples, 0.05%)</title><rect x="277.3" y="307.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="280.3" y="318.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (5 samples, 0.04%)</title><rect x="277.4" y="291.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="280.4" y="302.0"></text>
</g>
<g>
<title>iptable_security_hook	[iptable_security] (3 samples, 0.02%)</title><rect x="278.0" y="307.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="281.0" y="318.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (22 samples, 0.18%)</title><rect x="278.4" y="307.0" width="2.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="281.4" y="318.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get	[nf_conntrack] (4 samples, 0.03%)</title><rect x="278.5" y="291.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="281.5" y="302.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet	[nf_conntrack] (11 samples, 0.09%)</title><rect x="279.3" y="291.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="282.3" y="302.0"></text>
</g>
<g>
<title>nf_ct_seq_offset	[nf_conntrack] (3 samples, 0.02%)</title><rect x="280.1" y="275.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="283.1" y="286.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn	[nf_nat] (7 samples, 0.06%)</title><rect x="280.5" y="307.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="283.5" y="318.0"></text>
</g>
<g>
<title>ip_output (229 samples, 1.85%)</title><rect x="281.1" y="355.0" width="21.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="284.1" y="366.0">i..</text>
</g>
<g>
<title>ip_finish_output2 (217 samples, 1.76%)</title><rect x="281.1" y="339.0" width="20.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="284.1" y="350.0"></text>
</g>
<g>
<title>__dev_queue_xmit (19 samples, 0.15%)</title><rect x="281.7" y="323.0" width="1.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="284.7" y="334.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (12 samples, 0.10%)</title><rect x="282.0" y="307.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="285.0" y="318.0"></text>
</g>
<g>
<title>loopback_xmit (11 samples, 0.09%)</title><rect x="282.1" y="291.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="285.1" y="302.0"></text>
</g>
<g>
<title>eth_type_trans (3 samples, 0.02%)</title><rect x="282.1" y="275.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="285.1" y="286.0"></text>
</g>
<g>
<title>netif_rx (6 samples, 0.05%)</title><rect x="282.4" y="275.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="285.4" y="286.0"></text>
</g>
<g>
<title>netif_rx_internal (6 samples, 0.05%)</title><rect x="282.4" y="259.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="285.4" y="270.0"></text>
</g>
<g>
<title>enqueue_to_backlog (4 samples, 0.03%)</title><rect x="282.4" y="243.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="285.4" y="254.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (192 samples, 1.55%)</title><rect x="283.5" y="323.0" width="18.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="286.5" y="334.0"></text>
</g>
<g>
<title>do_softirq.part.0 (192 samples, 1.55%)</title><rect x="283.5" y="307.0" width="18.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="286.5" y="318.0"></text>
</g>
<g>
<title>do_softirq_own_stack (187 samples, 1.51%)</title><rect x="284.0" y="291.0" width="17.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="287.0" y="302.0"></text>
</g>
<g>
<title>__softirqentry_text_start (187 samples, 1.51%)</title><rect x="284.0" y="275.0" width="17.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="287.0" y="286.0"></text>
</g>
<g>
<title>net_rx_action (182 samples, 1.47%)</title><rect x="284.4" y="259.0" width="17.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="287.4" y="270.0"></text>
</g>
<g>
<title>__kfree_skb_flush (4 samples, 0.03%)</title><rect x="284.6" y="243.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="287.6" y="254.0"></text>
</g>
<g>
<title>process_backlog (176 samples, 1.42%)</title><rect x="284.9" y="243.0" width="16.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="287.9" y="254.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (174 samples, 1.41%)</title><rect x="285.1" y="227.0" width="16.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="288.1" y="238.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (3 samples, 0.02%)</title><rect x="285.2" y="211.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="288.2" y="222.0"></text>
</g>
<g>
<title>ip_rcv (169 samples, 1.37%)</title><rect x="285.6" y="211.0" width="16.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="288.6" y="222.0"></text>
</g>
<g>
<title>ip_local_deliver (138 samples, 1.12%)</title><rect x="285.7" y="195.0" width="13.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="288.7" y="206.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (113 samples, 0.91%)</title><rect x="285.8" y="179.0" width="10.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="288.8" y="190.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (113 samples, 0.91%)</title><rect x="285.8" y="163.0" width="10.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="288.8" y="174.0"></text>
</g>
<g>
<title>tcp_v4_rcv (112 samples, 0.91%)</title><rect x="285.9" y="147.0" width="10.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="288.9" y="158.0"></text>
</g>
<g>
<title>__inet_lookup_established (12 samples, 0.10%)</title><rect x="286.5" y="131.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="289.5" y="142.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (4 samples, 0.03%)</title><rect x="287.6" y="131.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="290.6" y="142.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (4 samples, 0.03%)</title><rect x="287.6" y="115.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="290.6" y="126.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (4 samples, 0.03%)</title><rect x="287.6" y="99.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="290.6" y="110.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (90 samples, 0.73%)</title><rect x="288.0" y="131.0" width="8.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="291.0" y="142.0"></text>
</g>
<g>
<title>tcp_rcv_established (90 samples, 0.73%)</title><rect x="288.0" y="115.0" width="8.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="291.0" y="126.0"></text>
</g>
<g>
<title>sk_reset_timer (6 samples, 0.05%)</title><rect x="288.6" y="99.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="291.6" y="110.0"></text>
</g>
<g>
<title>mod_timer (5 samples, 0.04%)</title><rect x="288.7" y="83.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="291.7" y="94.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.02%)</title><rect x="288.9" y="67.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="291.9" y="78.0"></text>
</g>
<g>
<title>sock_def_readable (69 samples, 0.56%)</title><rect x="289.1" y="99.0" width="6.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="292.1" y="110.0"></text>
</g>
<g>
<title>__wake_up_common_lock (65 samples, 0.53%)</title><rect x="289.5" y="83.0" width="6.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="292.5" y="94.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (65 samples, 0.53%)</title><rect x="289.5" y="67.0" width="6.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="292.5" y="78.0"></text>
</g>
<g>
<title>tcp_event_data_recv (4 samples, 0.03%)</title><rect x="295.7" y="99.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="298.7" y="110.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (3 samples, 0.02%)</title><rect x="296.3" y="99.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="299.3" y="110.0"></text>
</g>
<g>
<title>ktime_get (3 samples, 0.02%)</title><rect x="296.3" y="83.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="299.3" y="94.0"></text>
</g>
<g>
<title>read_tsc (3 samples, 0.02%)</title><rect x="296.3" y="67.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="299.3" y="78.0"></text>
</g>
<g>
<title>nf_hook_slow (24 samples, 0.19%)</title><rect x="296.6" y="179.0" width="2.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="299.6" y="190.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (15 samples, 0.12%)</title><rect x="296.8" y="163.0" width="1.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="299.8" y="174.0"></text>
</g>
<g>
<title>conntrack_mt	[xt_conntrack] (4 samples, 0.03%)</title><rect x="297.8" y="147.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="300.8" y="158.0"></text>
</g>
<g>
<title>nf_hook_slow (28 samples, 0.23%)</title><rect x="299.1" y="195.0" width="2.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="302.1" y="206.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (20 samples, 0.16%)</title><rect x="299.3" y="179.0" width="1.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="302.3" y="190.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (3 samples, 0.02%)</title><rect x="301.5" y="179.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="304.5" y="190.0"></text>
</g>
<g>
<title>nf_hook_slow (10 samples, 0.08%)</title><rect x="302.0" y="339.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="305.0" y="350.0"></text>
</g>
<g>
<title>selinux_ipv4_postroute (3 samples, 0.02%)</title><rect x="302.7" y="323.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="305.7" y="334.0"></text>
</g>
<g>
<title>ip_queue_xmit (3 samples, 0.02%)</title><rect x="303.2" y="371.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="306.2" y="382.0"></text>
</g>
<g>
<title>ktime_get (4 samples, 0.03%)</title><rect x="303.9" y="387.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="306.9" y="398.0"></text>
</g>
<g>
<title>read_tsc (3 samples, 0.02%)</title><rect x="304.0" y="371.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="307.0" y="382.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (4 samples, 0.03%)</title><rect x="304.3" y="387.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="307.3" y="398.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (3 samples, 0.02%)</title><rect x="304.7" y="387.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="307.7" y="398.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (11 samples, 0.09%)</title><rect x="305.2" y="419.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="308.2" y="430.0"></text>
</g>
<g>
<title>__alloc_skb (9 samples, 0.07%)</title><rect x="305.3" y="403.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="308.3" y="414.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (4 samples, 0.03%)</title><rect x="305.6" y="387.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="308.6" y="398.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (4 samples, 0.03%)</title><rect x="305.6" y="371.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="308.6" y="382.0"></text>
</g>
<g>
<title>tcp_send_mss (5 samples, 0.04%)</title><rect x="306.3" y="419.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="309.3" y="430.0"></text>
</g>
<g>
<title>tcp_current_mss (4 samples, 0.03%)</title><rect x="306.4" y="403.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="309.4" y="414.0"></text>
</g>
<g>
<title>security_file_permission (6 samples, 0.05%)</title><rect x="307.1" y="499.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="310.1" y="510.0"></text>
</g>
<g>
<title>selinux_file_permission (4 samples, 0.03%)</title><rect x="307.3" y="483.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="310.3" y="494.0"></text>
</g>
<g>
<title>__inode_security_revalidate (3 samples, 0.02%)</title><rect x="307.4" y="467.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="310.4" y="478.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (3 samples, 0.02%)</title><rect x="308.0" y="547.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="311.0" y="558.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (3 samples, 0.02%)</title><rect x="308.2" y="595.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="311.2" y="606.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (3 samples, 0.02%)</title><rect x="308.5" y="595.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="311.5" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (10 samples, 0.08%)</title><rect x="309.1" y="627.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="312.1" y="638.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (5 samples, 0.04%)</title><rect x="309.2" y="611.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="312.2" y="622.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (3 samples, 0.02%)</title><rect x="309.4" y="595.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="312.4" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (4 samples, 0.03%)</title><rect x="309.7" y="611.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="312.7" y="622.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (6 samples, 0.05%)</title><rect x="310.1" y="691.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="313.1" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (951 samples, 7.70%)</title><rect x="311.1" y="947.0" width="90.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="314.1" y="958.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (940 samples, 7.61%)</title><rect x="312.2" y="931.0" width="89.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="315.2" y="942.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (402 samples, 3.25%)</title><rect x="312.6" y="915.0" width="38.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="315.6" y="926.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$199/1509846524.run (402 samples, 3.25%)</title><rect x="312.6" y="899.0" width="38.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="315.6" y="910.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (402 samples, 3.25%)</title><rect x="312.6" y="883.0" width="38.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="315.6" y="894.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (73 samples, 0.59%)</title><rect x="312.9" y="867.0" width="7.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="315.9" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (73 samples, 0.59%)</title><rect x="312.9" y="851.0" width="7.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="315.9" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (73 samples, 0.59%)</title><rect x="312.9" y="835.0" width="7.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="315.9" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (73 samples, 0.59%)</title><rect x="312.9" y="819.0" width="7.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="315.9" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (68 samples, 0.55%)</title><rect x="313.2" y="803.0" width="6.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="316.2" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (68 samples, 0.55%)</title><rect x="313.2" y="787.0" width="6.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="316.2" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (66 samples, 0.53%)</title><rect x="313.3" y="771.0" width="6.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="316.3" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (66 samples, 0.53%)</title><rect x="313.3" y="755.0" width="6.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="316.3" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (63 samples, 0.51%)</title><rect x="313.6" y="739.0" width="6.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="316.6" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (57 samples, 0.46%)</title><rect x="314.2" y="723.0" width="5.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="317.2" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (57 samples, 0.46%)</title><rect x="314.2" y="707.0" width="5.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="317.2" y="718.0"></text>
</g>
<g>
<title>__libc_write (54 samples, 0.44%)</title><rect x="314.5" y="691.0" width="5.1" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="317.5" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (45 samples, 0.36%)</title><rect x="315.3" y="675.0" width="4.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="318.3" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (45 samples, 0.36%)</title><rect x="315.3" y="659.0" width="4.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="318.3" y="670.0"></text>
</g>
<g>
<title>ksys_write (41 samples, 0.33%)</title><rect x="315.7" y="643.0" width="3.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="318.7" y="654.0"></text>
</g>
<g>
<title>__fdget_pos (3 samples, 0.02%)</title><rect x="315.8" y="627.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="318.8" y="638.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.02%)</title><rect x="315.8" y="611.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="318.8" y="622.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.02%)</title><rect x="315.8" y="595.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="318.8" y="606.0"></text>
</g>
<g>
<title>vfs_write (37 samples, 0.30%)</title><rect x="316.1" y="627.0" width="3.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="319.1" y="638.0"></text>
</g>
<g>
<title>new_sync_write (32 samples, 0.26%)</title><rect x="316.3" y="611.0" width="3.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="319.3" y="622.0"></text>
</g>
<g>
<title>pipe_write (31 samples, 0.25%)</title><rect x="316.4" y="595.0" width="2.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="319.4" y="606.0"></text>
</g>
<g>
<title>__wake_up_common_lock (27 samples, 0.22%)</title><rect x="316.4" y="579.0" width="2.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="319.4" y="590.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (27 samples, 0.22%)</title><rect x="316.4" y="563.0" width="2.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="319.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (3 samples, 0.02%)</title><rect x="319.9" y="867.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="322.9" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (321 samples, 2.60%)</title><rect x="320.4" y="867.0" width="30.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="323.4" y="878.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (319 samples, 2.58%)</title><rect x="320.4" y="851.0" width="30.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="323.4" y="862.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (318 samples, 2.57%)</title><rect x="320.5" y="835.0" width="30.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="323.5" y="846.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (318 samples, 2.57%)</title><rect x="320.5" y="819.0" width="30.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="323.5" y="830.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (153 samples, 1.24%)</title><rect x="320.9" y="803.0" width="14.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="323.9" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (153 samples, 1.24%)</title><rect x="320.9" y="787.0" width="14.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="323.9" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (152 samples, 1.23%)</title><rect x="321.0" y="771.0" width="14.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="324.0" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (149 samples, 1.21%)</title><rect x="321.2" y="755.0" width="14.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="324.2" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (16 samples, 0.13%)</title><rect x="321.2" y="739.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="324.2" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (16 samples, 0.13%)</title><rect x="321.2" y="723.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="324.2" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (12 samples, 0.10%)</title><rect x="321.3" y="707.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="324.3" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_L_I (4 samples, 0.03%)</title><rect x="321.5" y="691.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="324.5" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadOnly.getAcquire (3 samples, 0.02%)</title><rect x="321.6" y="675.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="324.6" y="686.0"></text>
</g>
<g>
<title>java/util/Objects.requireNonNull (3 samples, 0.02%)</title><rect x="321.6" y="659.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="324.6" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (6 samples, 0.05%)</title><rect x="321.9" y="691.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="324.9" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (5 samples, 0.04%)</title><rect x="322.0" y="675.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="325.0" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (3 samples, 0.02%)</title><rect x="322.5" y="707.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="325.5" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (132 samples, 1.07%)</title><rect x="322.9" y="739.0" width="12.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="325.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (130 samples, 1.05%)</title><rect x="322.9" y="723.0" width="12.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="325.9" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (130 samples, 1.05%)</title><rect x="322.9" y="707.0" width="12.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="325.9" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (114 samples, 0.92%)</title><rect x="322.9" y="691.0" width="10.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="325.9" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (114 samples, 0.92%)</title><rect x="322.9" y="675.0" width="10.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="325.9" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (110 samples, 0.89%)</title><rect x="322.9" y="659.0" width="10.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="325.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$270/294090489.apply (3 samples, 0.02%)</title><rect x="323.5" y="643.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="326.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$wrapForUpgrade$10 (3 samples, 0.02%)</title><rect x="323.5" y="627.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="326.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkForUpgradeAsync (3 samples, 0.02%)</title><rect x="323.5" y="611.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="326.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$132/1112562714.apply (84 samples, 0.68%)</title><rect x="323.8" y="643.0" width="8.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="326.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (84 samples, 0.68%)</title><rect x="323.8" y="627.0" width="8.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="326.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (80 samples, 0.65%)</title><rect x="324.0" y="611.0" width="7.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="327.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (78 samples, 0.63%)</title><rect x="324.2" y="595.0" width="7.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="327.2" y="606.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers$$Lambda$120/1352876739.apply (5 samples, 0.04%)</title><rect x="324.2" y="579.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="327.2" y="590.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers.lambda$ofByteArray$12 (5 samples, 0.04%)</title><rect x="324.2" y="563.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="327.2" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.ofByteArray (5 samples, 0.04%)</title><rect x="324.2" y="547.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="327.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.&lt;init&gt; (5 samples, 0.04%)</title><rect x="324.2" y="531.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="327.2" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (5 samples, 0.04%)</title><rect x="324.2" y="515.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="327.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (72 samples, 0.58%)</title><rect x="324.7" y="579.0" width="6.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="327.7" y="590.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (16 samples, 0.13%)</title><rect x="324.9" y="563.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="327.9" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (5 samples, 0.04%)</title><rect x="324.9" y="547.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="327.9" y="558.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (5 samples, 0.04%)</title><rect x="324.9" y="531.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="327.9" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (5 samples, 0.04%)</title><rect x="324.9" y="515.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="327.9" y="526.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (5 samples, 0.04%)</title><rect x="324.9" y="499.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="327.9" y="510.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (5 samples, 0.04%)</title><rect x="324.9" y="483.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="327.9" y="494.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (9 samples, 0.07%)</title><rect x="325.4" y="547.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="328.4" y="558.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (9 samples, 0.07%)</title><rect x="325.4" y="531.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="328.4" y="542.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (8 samples, 0.06%)</title><rect x="325.5" y="515.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="328.5" y="526.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (8 samples, 0.06%)</title><rect x="325.5" y="499.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="328.5" y="510.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (6 samples, 0.05%)</title><rect x="325.5" y="483.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="328.5" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList$ArrayListSpliterator.forEachRemaining (3 samples, 0.02%)</title><rect x="325.6" y="467.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="328.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.fixupContentLen (9 samples, 0.07%)</title><rect x="326.6" y="563.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="329.6" y="574.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (8 samples, 0.06%)</title><rect x="326.7" y="547.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="329.7" y="558.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.03%)</title><rect x="327.1" y="531.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="330.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (41 samples, 0.33%)</title><rect x="327.4" y="563.0" width="4.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="330.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$288/1452226218.run (40 samples, 0.32%)</title><rect x="327.5" y="547.0" width="3.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="330.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (40 samples, 0.32%)</title><rect x="327.5" y="531.0" width="3.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="330.5" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.03%)</title><rect x="327.9" y="515.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="330.9" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.03%)</title><rect x="327.9" y="499.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="330.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$292/1528731011.get$Lambda (4 samples, 0.03%)</title><rect x="327.9" y="483.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="330.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$292/1528731011.&lt;init&gt; (4 samples, 0.03%)</title><rect x="327.9" y="467.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="330.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (6 samples, 0.05%)</title><rect x="328.5" y="515.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="331.5" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (4 samples, 0.03%)</title><rect x="328.6" y="499.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="331.6" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (4 samples, 0.03%)</title><rect x="328.6" y="483.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="331.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (16 samples, 0.13%)</title><rect x="329.1" y="515.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="332.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (16 samples, 0.13%)</title><rect x="329.1" y="499.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="332.1" y="510.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.put (12 samples, 0.10%)</title><rect x="329.4" y="483.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="332.4" y="494.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.hash (11 samples, 0.09%)</title><rect x="329.5" y="467.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="332.5" y="478.0"></text>
</g>
<g>
<title>java/lang/System.identityHashCode (11 samples, 0.09%)</title><rect x="329.5" y="451.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="332.5" y="462.0"></text>
</g>
<g>
<title>JVM_IHashCode (8 samples, 0.06%)</title><rect x="329.7" y="435.0" width="0.8" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="332.7" y="446.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (4 samples, 0.03%)</title><rect x="330.0" y="419.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="333.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (6 samples, 0.05%)</title><rect x="330.6" y="515.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="333.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.dbgString (5 samples, 0.04%)</title><rect x="330.7" y="499.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="333.7" y="510.0"></text>
</g>
<g>
<title>java/lang/Class.getSimpleName (3 samples, 0.02%)</title><rect x="330.7" y="483.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="333.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$236/388216554.apply (16 samples, 0.13%)</title><rect x="331.8" y="643.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="334.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (16 samples, 0.13%)</title><rect x="331.8" y="627.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="334.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (16 samples, 0.13%)</title><rect x="331.8" y="611.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="334.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.response (7 samples, 0.06%)</title><rect x="332.5" y="595.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="335.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (5 samples, 0.04%)</title><rect x="332.7" y="579.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="335.7" y="590.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.get (4 samples, 0.03%)</title><rect x="332.7" y="563.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="335.7" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (3 samples, 0.02%)</title><rect x="333.4" y="659.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="336.4" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (3 samples, 0.02%)</title><rect x="333.4" y="643.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="336.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$278/649988588.apply (16 samples, 0.13%)</title><rect x="333.7" y="691.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="336.7" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (16 samples, 0.13%)</title><rect x="333.7" y="675.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="336.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.unsubscribe (3 samples, 0.02%)</title><rect x="333.9" y="659.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="336.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.headers (3 samples, 0.02%)</title><rect x="334.2" y="659.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="337.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Response.&lt;init&gt; (5 samples, 0.04%)</title><rect x="334.5" y="659.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="337.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Response.&lt;init&gt; (3 samples, 0.02%)</title><rect x="334.7" y="643.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="337.7" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (148 samples, 1.20%)</title><rect x="335.6" y="803.0" width="14.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="338.6" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.maybeStartHeaders (10 samples, 0.08%)</title><rect x="336.1" y="787.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="339.1" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (26 samples, 0.21%)</title><rect x="337.1" y="787.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="340.1" y="798.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (10 samples, 0.08%)</title><rect x="337.7" y="771.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="340.7" y="782.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (10 samples, 0.08%)</title><rect x="337.7" y="755.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="340.7" y="766.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (4 samples, 0.03%)</title><rect x="337.9" y="739.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="340.9" y="750.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.isLatin1 (4 samples, 0.03%)</title><rect x="338.2" y="739.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="341.2" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (7 samples, 0.06%)</title><rect x="338.7" y="771.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="341.7" y="782.0"></text>
</g>
<g>
<title>java/nio/Buffer.nextGetIndex (5 samples, 0.04%)</title><rect x="338.7" y="755.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="341.7" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (9 samples, 0.07%)</title><rect x="339.6" y="787.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="342.6" y="798.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (3 samples, 0.02%)</title><rect x="339.7" y="771.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="342.7" y="782.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (3 samples, 0.02%)</title><rect x="339.7" y="755.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="342.7" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (5 samples, 0.04%)</title><rect x="340.0" y="771.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="343.0" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (8 samples, 0.06%)</title><rect x="340.4" y="787.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="343.4" y="798.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (5 samples, 0.04%)</title><rect x="340.5" y="771.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="343.5" y="782.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (5 samples, 0.04%)</title><rect x="340.5" y="755.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="343.5" y="766.0"></text>
</g>
<g>
<title>java/lang/String.length (4 samples, 0.03%)</title><rect x="340.6" y="739.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="343.6" y="750.0"></text>
</g>
<g>
<title>java/lang/String.coder (3 samples, 0.02%)</title><rect x="340.7" y="723.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="343.7" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (3 samples, 0.02%)</title><rect x="340.7" y="707.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="343.7" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (36 samples, 0.29%)</title><rect x="341.2" y="787.0" width="3.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="344.2" y="798.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (34 samples, 0.28%)</title><rect x="341.4" y="771.0" width="3.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="344.4" y="782.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (34 samples, 0.28%)</title><rect x="341.4" y="755.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="344.4" y="766.0"></text>
</g>
<g>
<title>java/util/AbstractMap.isEmpty (8 samples, 0.06%)</title><rect x="341.6" y="739.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="344.6" y="750.0"></text>
</g>
<g>
<title>java/util/TreeMap.size (8 samples, 0.06%)</title><rect x="341.6" y="723.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="344.6" y="734.0"></text>
</g>
<g>
<title>itable stub (6 samples, 0.05%)</title><rect x="341.6" y="707.0" width="0.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="344.6" y="718.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (24 samples, 0.19%)</title><rect x="342.3" y="739.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="345.3" y="750.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$115/937225413.accept (22 samples, 0.18%)</title><rect x="342.5" y="723.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="345.5" y="734.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (19 samples, 0.15%)</title><rect x="342.8" y="707.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="345.8" y="718.0"></text>
</g>
<g>
<title>java/lang/String.trim (12 samples, 0.10%)</title><rect x="342.8" y="691.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="345.8" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (12 samples, 0.10%)</title><rect x="342.8" y="675.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="345.8" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (10 samples, 0.08%)</title><rect x="343.0" y="659.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="346.0" y="670.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.02%)</title><rect x="343.0" y="643.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="346.0" y="654.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (3 samples, 0.02%)</title><rect x="343.0" y="627.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="346.0" y="638.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4 samples, 0.03%)</title><rect x="343.3" y="643.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="346.3" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (3 samples, 0.02%)</title><rect x="343.7" y="643.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="346.7" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (4 samples, 0.03%)</title><rect x="344.3" y="691.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="347.3" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (52 samples, 0.42%)</title><rect x="344.7" y="787.0" width="5.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="347.7" y="798.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.02%)</title><rect x="345.4" y="771.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="348.4" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (42 samples, 0.34%)</title><rect x="345.7" y="771.0" width="4.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="348.7" y="782.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (11 samples, 0.09%)</title><rect x="346.1" y="755.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="349.1" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (10 samples, 0.08%)</title><rect x="346.2" y="739.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="349.2" y="750.0"></text>
</g>
<g>
<title>java/lang/String.trim (16 samples, 0.13%)</title><rect x="347.1" y="755.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="350.1" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (15 samples, 0.12%)</title><rect x="347.2" y="739.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="350.2" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (6 samples, 0.05%)</title><rect x="348.0" y="723.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="351.0" y="734.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 0.03%)</title><rect x="348.0" y="707.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="351.0" y="718.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (11 samples, 0.09%)</title><rect x="348.6" y="755.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="351.6" y="766.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (6 samples, 0.05%)</title><rect x="348.7" y="739.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="351.7" y="750.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (4 samples, 0.03%)</title><rect x="348.9" y="723.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="351.9" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (4 samples, 0.03%)</title><rect x="348.9" y="707.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="351.9" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser$$Lambda$282/1262603830.apply (4 samples, 0.03%)</title><rect x="349.3" y="739.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="352.3" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.lambda$addHeaderFromString$0 (4 samples, 0.03%)</title><rect x="349.3" y="723.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="352.3" y="734.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (3 samples, 0.02%)</title><rect x="349.4" y="707.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="352.4" y="718.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (3 samples, 0.02%)</title><rect x="349.4" y="691.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="352.4" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$214/1397508456.accept (12 samples, 0.10%)</title><rect x="349.7" y="803.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="352.7" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.advance (10 samples, 0.08%)</title><rect x="349.9" y="787.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="352.9" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.unsubscribe (6 samples, 0.05%)</title><rect x="350.3" y="771.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="353.3" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (533 samples, 4.31%)</title><rect x="351.0" y="915.0" width="50.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="354.0" y="926.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (527 samples, 4.27%)</title><rect x="351.6" y="899.0" width="50.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="354.6" y="910.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (3 samples, 0.02%)</title><rect x="351.7" y="883.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="354.7" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (3 samples, 0.02%)</title><rect x="351.7" y="867.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="354.7" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (3 samples, 0.02%)</title><rect x="351.7" y="851.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="354.7" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (3 samples, 0.02%)</title><rect x="351.7" y="835.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="354.7" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (3 samples, 0.02%)</title><rect x="351.7" y="819.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="354.7" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (3 samples, 0.02%)</title><rect x="351.7" y="803.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="354.7" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (3 samples, 0.02%)</title><rect x="351.7" y="787.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="354.7" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (3 samples, 0.02%)</title><rect x="351.7" y="771.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="354.7" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (522 samples, 4.22%)</title><rect x="352.0" y="883.0" width="49.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="355.0" y="894.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$199/1509846524.run (522 samples, 4.22%)</title><rect x="352.0" y="867.0" width="49.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="355.0" y="878.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (522 samples, 4.22%)</title><rect x="352.0" y="851.0" width="49.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="355.0" y="862.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (8 samples, 0.06%)</title><rect x="352.2" y="835.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="355.2" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (6 samples, 0.05%)</title><rect x="352.4" y="819.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="355.4" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (5 samples, 0.04%)</title><rect x="352.5" y="803.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="355.5" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.tryAsyncReceive (500 samples, 4.05%)</title><rect x="353.0" y="835.0" width="47.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="356.0" y="846.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (500 samples, 4.05%)</title><rect x="353.0" y="819.0" width="47.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="356.0" y="830.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (500 samples, 4.05%)</title><rect x="353.0" y="803.0" width="47.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="356.0" y="814.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (500 samples, 4.05%)</title><rect x="353.0" y="787.0" width="47.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="356.0" y="798.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (500 samples, 4.05%)</title><rect x="353.0" y="771.0" width="47.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="356.0" y="782.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (498 samples, 4.03%)</title><rect x="353.2" y="755.0" width="47.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="356.2" y="766.0">jdk/..</text>
</g>
<g>
<title>java/util/List.of (3 samples, 0.02%)</title><rect x="353.6" y="739.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="356.6" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$290/1089333161.run (311 samples, 2.52%)</title><rect x="353.9" y="739.0" width="29.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="356.9" y="750.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (311 samples, 2.52%)</title><rect x="353.9" y="723.0" width="29.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="356.9" y="734.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (308 samples, 2.49%)</title><rect x="354.2" y="707.0" width="29.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="357.2" y="718.0">jd..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (18 samples, 0.15%)</title><rect x="354.3" y="691.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="357.3" y="702.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (6 samples, 0.05%)</title><rect x="354.4" y="675.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="357.4" y="686.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (6 samples, 0.05%)</title><rect x="354.4" y="659.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="357.4" y="670.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (5 samples, 0.04%)</title><rect x="354.5" y="643.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="357.5" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (5 samples, 0.04%)</title><rect x="354.5" y="627.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="357.5" y="638.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (5 samples, 0.04%)</title><rect x="354.5" y="611.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="357.5" y="622.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (4 samples, 0.03%)</title><rect x="354.6" y="595.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="357.6" y="606.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (3 samples, 0.02%)</title><rect x="354.7" y="579.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="357.7" y="590.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (10 samples, 0.08%)</title><rect x="355.0" y="675.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="358.0" y="686.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (10 samples, 0.08%)</title><rect x="355.0" y="659.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="358.0" y="670.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (9 samples, 0.07%)</title><rect x="355.1" y="643.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="358.1" y="654.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (5 samples, 0.04%)</title><rect x="355.1" y="627.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="358.1" y="638.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (4 samples, 0.03%)</title><rect x="355.1" y="611.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="358.1" y="622.0"></text>
</g>
<g>
<title>java/util/Optional.map (3 samples, 0.02%)</title><rect x="356.0" y="691.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="359.0" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (284 samples, 2.30%)</title><rect x="356.3" y="691.0" width="27.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="359.3" y="702.0">j..</text>
</g>
<g>
<title>java/time/Instant.now (6 samples, 0.05%)</title><rect x="356.3" y="675.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="359.3" y="686.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (6 samples, 0.05%)</title><rect x="356.3" y="659.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="359.3" y="670.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (6 samples, 0.05%)</title><rect x="356.3" y="643.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="359.3" y="654.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (5 samples, 0.04%)</title><rect x="356.3" y="627.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="359.3" y="638.0"></text>
</g>
<g>
<title>gettimeofday (3 samples, 0.02%)</title><rect x="356.4" y="611.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="359.4" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (278 samples, 2.25%)</title><rect x="356.9" y="675.0" width="26.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="359.9" y="686.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (169 samples, 1.37%)</title><rect x="356.9" y="659.0" width="16.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="359.9" y="670.0"></text>
</g>
<g>
<title>java/time/Instant.plus (79 samples, 0.64%)</title><rect x="359.6" y="643.0" width="7.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="362.6" y="654.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (72 samples, 0.58%)</title><rect x="360.3" y="627.0" width="6.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="363.3" y="638.0"></text>
</g>
<g>
<title>java/time/Instant.plus (72 samples, 0.58%)</title><rect x="360.3" y="611.0" width="6.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="363.3" y="622.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (13 samples, 0.11%)</title><rect x="365.9" y="595.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="368.9" y="606.0"></text>
</g>
<g>
<title>java/time/Instant.create (13 samples, 0.11%)</title><rect x="365.9" y="579.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="368.9" y="590.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (9 samples, 0.07%)</title><rect x="367.3" y="643.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="370.3" y="654.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (9 samples, 0.07%)</title><rect x="367.3" y="627.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="370.3" y="638.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.&lt;init&gt; (8 samples, 0.06%)</title><rect x="367.3" y="611.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="370.3" y="622.0"></text>
</g>
<g>
<title>java/util/LinkedList.node (4 samples, 0.03%)</title><rect x="367.6" y="595.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="370.6" y="606.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.next (5 samples, 0.04%)</title><rect x="368.3" y="643.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="371.3" y="654.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.checkForComodification (4 samples, 0.03%)</title><rect x="368.4" y="627.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="371.4" y="638.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (42 samples, 0.34%)</title><rect x="369.0" y="643.0" width="4.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="372.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (13 samples, 0.11%)</title><rect x="373.0" y="659.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="376.0" y="670.0"></text>
</g>
<g>
<title>java/util/HashMap.get (9 samples, 0.07%)</title><rect x="373.1" y="643.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="376.1" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (4 samples, 0.03%)</title><rect x="373.1" y="627.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="376.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.equals (4 samples, 0.03%)</title><rect x="373.1" y="611.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="376.1" y="622.0"></text>
</g>
<g>
<title>java/util/Objects.equals (3 samples, 0.02%)</title><rect x="373.2" y="595.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="376.2" y="606.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.equals (3 samples, 0.02%)</title><rect x="373.2" y="579.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="376.2" y="590.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress$InetSocketAddressHolder.equals (3 samples, 0.02%)</title><rect x="373.2" y="563.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="376.2" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (5 samples, 0.04%)</title><rect x="373.5" y="627.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="376.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (5 samples, 0.04%)</title><rect x="373.5" y="611.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="376.5" y="622.0"></text>
</g>
<g>
<title>java/util/Objects.hash (5 samples, 0.04%)</title><rect x="373.5" y="595.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="376.5" y="606.0"></text>
</g>
<g>
<title>java/util/Arrays.hashCode (5 samples, 0.04%)</title><rect x="373.5" y="579.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="376.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection.cacheKey (3 samples, 0.02%)</title><rect x="374.0" y="643.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="377.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.&lt;init&gt; (3 samples, 0.02%)</title><rect x="374.0" y="627.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="377.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (96 samples, 0.78%)</title><rect x="374.2" y="659.0" width="9.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="377.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (96 samples, 0.78%)</title><rect x="374.2" y="643.0" width="9.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="377.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (15 samples, 0.12%)</title><rect x="374.2" y="627.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="377.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (15 samples, 0.12%)</title><rect x="374.2" y="611.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="377.2" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (14 samples, 0.11%)</title><rect x="374.3" y="595.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="377.3" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (3 samples, 0.02%)</title><rect x="374.4" y="579.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="377.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (3 samples, 0.02%)</title><rect x="374.4" y="563.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="377.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.&lt;init&gt; (3 samples, 0.02%)</title><rect x="374.7" y="579.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="377.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription (7 samples, 0.06%)</title><rect x="375.0" y="579.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="378.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (81 samples, 0.66%)</title><rect x="375.7" y="627.0" width="7.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="378.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (81 samples, 0.66%)</title><rect x="375.7" y="611.0" width="7.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="378.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (75 samples, 0.61%)</title><rect x="375.8" y="595.0" width="7.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="378.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (75 samples, 0.61%)</title><rect x="375.8" y="579.0" width="7.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="378.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (75 samples, 0.61%)</title><rect x="375.8" y="563.0" width="7.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="378.8" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (8 samples, 0.06%)</title><rect x="376.5" y="547.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="379.5" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (8 samples, 0.06%)</title><rect x="376.5" y="531.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="379.5" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (8 samples, 0.06%)</title><rect x="376.5" y="515.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="379.5" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (8 samples, 0.06%)</title><rect x="376.5" y="499.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="379.5" y="510.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.02%)</title><rect x="377.0" y="483.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="380.0" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (59 samples, 0.48%)</title><rect x="377.3" y="547.0" width="5.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="380.3" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (58 samples, 0.47%)</title><rect x="377.4" y="531.0" width="5.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="380.4" y="542.0"></text>
</g>
<g>
<title>__libc_write (57 samples, 0.46%)</title><rect x="377.5" y="515.0" width="5.4" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="380.5" y="526.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (50 samples, 0.40%)</title><rect x="378.2" y="499.0" width="4.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="381.2" y="510.0"></text>
</g>
<g>
<title>do_syscall_64 (50 samples, 0.40%)</title><rect x="378.2" y="483.0" width="4.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="381.2" y="494.0"></text>
</g>
<g>
<title>ksys_write (46 samples, 0.37%)</title><rect x="378.5" y="467.0" width="4.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="381.5" y="478.0"></text>
</g>
<g>
<title>vfs_write (43 samples, 0.35%)</title><rect x="378.8" y="451.0" width="4.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="381.8" y="462.0"></text>
</g>
<g>
<title>new_sync_write (35 samples, 0.28%)</title><rect x="379.0" y="435.0" width="3.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="382.0" y="446.0"></text>
</g>
<g>
<title>pipe_write (35 samples, 0.28%)</title><rect x="379.0" y="419.0" width="3.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="382.0" y="430.0"></text>
</g>
<g>
<title>__wake_up_common_lock (26 samples, 0.21%)</title><rect x="379.6" y="403.0" width="2.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="382.6" y="414.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (26 samples, 0.21%)</title><rect x="379.6" y="387.0" width="2.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="382.6" y="398.0"></text>
</g>
<g>
<title>security_file_permission (6 samples, 0.05%)</title><rect x="382.4" y="435.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="385.4" y="446.0"></text>
</g>
<g>
<title>file_has_perm (4 samples, 0.03%)</title><rect x="382.4" y="419.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="385.4" y="430.0"></text>
</g>
<g>
<title>avc_has_perm (4 samples, 0.03%)</title><rect x="382.4" y="403.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="385.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (4 samples, 0.03%)</title><rect x="382.9" y="595.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="385.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$292/1528731011.accept (20 samples, 0.16%)</title><rect x="383.6" y="739.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="386.6" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$1 (20 samples, 0.16%)</title><rect x="383.6" y="723.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="386.6" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onComplete (20 samples, 0.16%)</title><rect x="383.6" y="707.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="386.6" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (16 samples, 0.13%)</title><rect x="383.6" y="691.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="386.6" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (16 samples, 0.13%)</title><rect x="383.6" y="675.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="386.6" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (16 samples, 0.13%)</title><rect x="383.6" y="659.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="386.6" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (16 samples, 0.13%)</title><rect x="383.6" y="643.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="386.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (5 samples, 0.04%)</title><rect x="383.6" y="627.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="386.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (3 samples, 0.02%)</title><rect x="383.8" y="611.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="386.8" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (3 samples, 0.02%)</title><rect x="383.8" y="595.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="386.8" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (3 samples, 0.02%)</title><rect x="383.8" y="579.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="386.8" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (3 samples, 0.02%)</title><rect x="383.8" y="563.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="386.8" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (3 samples, 0.02%)</title><rect x="383.8" y="547.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="386.8" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (3 samples, 0.02%)</title><rect x="383.8" y="531.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="386.8" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (3 samples, 0.02%)</title><rect x="383.8" y="515.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="386.8" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.enq (3 samples, 0.02%)</title><rect x="383.8" y="499.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="386.8" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetTail (3 samples, 0.02%)</title><rect x="383.8" y="483.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="386.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$295/1644078329.accept (4 samples, 0.03%)</title><rect x="384.1" y="627.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="387.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$2 (4 samples, 0.03%)</title><rect x="384.1" y="611.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="387.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$ClientRefCountTracker.tryRelease (4 samples, 0.03%)</title><rect x="384.1" y="595.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="387.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.unreference (4 samples, 0.03%)</title><rect x="384.1" y="579.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="387.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$297/1321510655.accept (7 samples, 0.06%)</title><rect x="384.5" y="627.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="387.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.lambda$add$0 (5 samples, 0.04%)</title><rect x="384.6" y="611.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="387.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.remove (5 samples, 0.04%)</title><rect x="384.6" y="595.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="387.6" y="606.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.remove (3 samples, 0.02%)</title><rect x="384.8" y="579.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="387.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$216/1072692812.accept (4 samples, 0.03%)</title><rect x="385.1" y="691.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="388.1" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.advance (4 samples, 0.03%)</title><rect x="385.1" y="675.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="388.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (135 samples, 1.09%)</title><rect x="385.5" y="739.0" width="12.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="388.5" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (135 samples, 1.09%)</title><rect x="385.5" y="723.0" width="12.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="388.5" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (135 samples, 1.09%)</title><rect x="385.5" y="707.0" width="12.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="388.5" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (131 samples, 1.06%)</title><rect x="385.5" y="691.0" width="12.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="388.5" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (131 samples, 1.06%)</title><rect x="385.5" y="675.0" width="12.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="388.5" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (129 samples, 1.04%)</title><rect x="385.7" y="659.0" width="12.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="388.7" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (129 samples, 1.04%)</title><rect x="385.7" y="643.0" width="12.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="388.7" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (10 samples, 0.08%)</title><rect x="385.8" y="627.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="388.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (10 samples, 0.08%)</title><rect x="385.8" y="611.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="388.8" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (10 samples, 0.08%)</title><rect x="385.8" y="595.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="388.8" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (10 samples, 0.08%)</title><rect x="385.8" y="579.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="388.8" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (10 samples, 0.08%)</title><rect x="385.8" y="563.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="388.8" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (10 samples, 0.08%)</title><rect x="385.8" y="547.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="388.8" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (10 samples, 0.08%)</title><rect x="385.8" y="531.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="388.8" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (10 samples, 0.08%)</title><rect x="385.8" y="515.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="388.8" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.enq (10 samples, 0.08%)</title><rect x="385.8" y="499.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="388.8" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetTail (10 samples, 0.08%)</title><rect x="385.8" y="483.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="388.8" y="494.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.02%)</title><rect x="385.8" y="467.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="388.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$300/1036110883.accept (7 samples, 0.06%)</title><rect x="386.1" y="467.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="389.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$300/1036110883.accept (118 samples, 0.96%)</title><rect x="386.7" y="627.0" width="11.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="389.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (118 samples, 0.96%)</title><rect x="386.7" y="611.0" width="11.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="389.7" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (118 samples, 0.96%)</title><rect x="386.7" y="595.0" width="11.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="389.7" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeValue (3 samples, 0.02%)</title><rect x="386.7" y="579.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="389.7" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (3 samples, 0.02%)</title><rect x="386.7" y="563.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="389.7" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (3 samples, 0.02%)</title><rect x="386.7" y="547.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="389.7" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (115 samples, 0.93%)</title><rect x="387.0" y="579.0" width="11.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="390.0" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (3 samples, 0.02%)</title><rect x="387.1" y="563.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="390.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$309/980063472.apply (3 samples, 0.02%)</title><rect x="387.1" y="547.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="390.1" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (109 samples, 0.88%)</title><rect x="387.5" y="563.0" width="10.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="390.5" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (107 samples, 0.87%)</title><rect x="387.7" y="547.0" width="10.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="390.7" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (103 samples, 0.83%)</title><rect x="387.7" y="531.0" width="9.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="390.7" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (86 samples, 0.70%)</title><rect x="388.0" y="515.0" width="8.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="391.0" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (86 samples, 0.70%)</title><rect x="388.0" y="499.0" width="8.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="391.0" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (86 samples, 0.70%)</title><rect x="388.0" y="483.0" width="8.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="391.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.lockedPush (3 samples, 0.02%)</title><rect x="388.0" y="467.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="391.0" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (83 samples, 0.67%)</title><rect x="388.3" y="467.0" width="7.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="391.3" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (82 samples, 0.66%)</title><rect x="388.4" y="451.0" width="7.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="391.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (82 samples, 0.66%)</title><rect x="388.4" y="435.0" width="7.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="391.4" y="446.0"></text>
</g>
<g>
<title>Unsafe_Unpark (13 samples, 0.11%)</title><rect x="388.8" y="419.0" width="1.2" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="391.8" y="430.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (4 samples, 0.03%)</title><rect x="389.1" y="403.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="392.1" y="414.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_lock (4 samples, 0.03%)</title><rect x="389.5" y="403.0" width="0.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="392.5" y="414.0"></text>
</g>
<g>
<title>__pthread_cond_signal (65 samples, 0.53%)</title><rect x="390.0" y="419.0" width="6.2" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="393.0" y="430.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (47 samples, 0.38%)</title><rect x="391.7" y="403.0" width="4.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="394.7" y="414.0"></text>
</g>
<g>
<title>do_syscall_64 (47 samples, 0.38%)</title><rect x="391.7" y="387.0" width="4.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="394.7" y="398.0"></text>
</g>
<g>
<title>__x64_sys_futex (45 samples, 0.36%)</title><rect x="391.7" y="371.0" width="4.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="394.7" y="382.0"></text>
</g>
<g>
<title>do_futex (43 samples, 0.35%)</title><rect x="391.9" y="355.0" width="4.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="394.9" y="366.0"></text>
</g>
<g>
<title>futex_wake (42 samples, 0.34%)</title><rect x="392.0" y="339.0" width="4.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="395.0" y="350.0"></text>
</g>
<g>
<title>wake_up_q (38 samples, 0.31%)</title><rect x="392.4" y="323.0" width="3.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="395.4" y="334.0"></text>
</g>
<g>
<title>try_to_wake_up (38 samples, 0.31%)</title><rect x="392.4" y="307.0" width="3.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="395.4" y="318.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (38 samples, 0.31%)</title><rect x="392.4" y="291.0" width="3.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="395.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (14 samples, 0.11%)</title><rect x="396.2" y="515.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="399.2" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (14 samples, 0.11%)</title><rect x="396.2" y="499.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="399.2" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (14 samples, 0.11%)</title><rect x="396.2" y="483.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="399.2" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (14 samples, 0.11%)</title><rect x="396.2" y="467.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="399.2" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (14 samples, 0.11%)</title><rect x="396.2" y="451.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="399.2" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (14 samples, 0.11%)</title><rect x="396.2" y="435.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="399.2" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (14 samples, 0.11%)</title><rect x="396.2" y="419.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="399.2" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.enq (14 samples, 0.11%)</title><rect x="396.2" y="403.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="399.2" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetTail (14 samples, 0.11%)</title><rect x="396.2" y="387.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="399.2" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$306/99915046.accept (5 samples, 0.04%)</title><rect x="396.9" y="371.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="399.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$138/443747487.accept (3 samples, 0.02%)</title><rect x="397.6" y="531.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="400.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.lambda$sendAsync$0 (3 samples, 0.02%)</title><rect x="397.6" y="515.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="400.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.unreference (3 samples, 0.02%)</title><rect x="397.6" y="499.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="400.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.join (4 samples, 0.03%)</title><rect x="398.0" y="691.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="401.0" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (10 samples, 0.08%)</title><rect x="398.4" y="739.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="401.4" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (10 samples, 0.08%)</title><rect x="398.4" y="723.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="401.4" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (10 samples, 0.08%)</title><rect x="398.4" y="707.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="401.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (9 samples, 0.07%)</title><rect x="398.5" y="691.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="401.5" y="702.0"></text>
</g>
<g>
<title>java/util/ArrayList.addAll (9 samples, 0.07%)</title><rect x="398.5" y="675.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="401.5" y="686.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (8 samples, 0.06%)</title><rect x="398.6" y="659.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="401.6" y="670.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (4 samples, 0.03%)</title><rect x="399.0" y="643.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="402.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.tryDecrement (7 samples, 0.06%)</title><rect x="399.4" y="739.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="402.4" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.decreaseAndGet (6 samples, 0.05%)</title><rect x="399.4" y="723.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="402.4" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.sliceWithLimitedCapacity (8 samples, 0.06%)</title><rect x="400.0" y="739.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="403.0" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (3 samples, 0.02%)</title><rect x="400.0" y="723.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="403.0" y="734.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (3 samples, 0.02%)</title><rect x="400.0" y="707.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="403.0" y="718.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.slice (5 samples, 0.04%)</title><rect x="400.3" y="723.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="403.3" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (3 samples, 0.02%)</title><rect x="400.4" y="707.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="403.4" y="718.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.02%)</title><rect x="400.4" y="691.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="403.4" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.02%)</title><rect x="400.4" y="675.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="403.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (11 samples, 0.09%)</title><rect x="400.8" y="835.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="403.8" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (8 samples, 0.06%)</title><rect x="401.1" y="819.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="404.1" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (8 samples, 0.06%)</title><rect x="401.1" y="803.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="404.1" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (8 samples, 0.06%)</title><rect x="401.1" y="787.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="404.1" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (3 samples, 0.02%)</title><rect x="401.4" y="771.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="404.4" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$107/2098846329.run (5,005 samples, 40.51%)</title><rect x="401.9" y="947.0" width="478.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="404.9" y="958.0">ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$107/20..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$317/1070440207.run (4,998 samples, 40.45%)</title><rect x="402.6" y="931.0" width="477.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="405.6" y="942.0">ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$317/10..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$entity$0 (4,995 samples, 40.43%)</title><rect x="402.9" y="915.0" width="477.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="405.9" y="926.0">ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$entity$0</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.get (4,955 samples, 40.10%)</title><rect x="403.0" y="899.0" width="473.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="406.0" y="910.0">ru/mail/polis/service/shakhmin/HttpService.get</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (5 samples, 0.04%)</title><rect x="405.8" y="883.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="408.8" y="894.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (5 samples, 0.04%)</title><rect x="405.8" y="867.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="408.8" y="878.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (5 samples, 0.04%)</title><rect x="405.8" y="851.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="408.8" y="862.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 0.04%)</title><rect x="405.8" y="835.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="408.8" y="846.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3 samples, 0.02%)</title><rect x="406.3" y="883.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="409.3" y="894.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3 samples, 0.02%)</title><rect x="406.3" y="867.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="409.3" y="878.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (3 samples, 0.02%)</title><rect x="406.3" y="851.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="409.3" y="862.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (3 samples, 0.02%)</title><rect x="406.3" y="835.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="409.3" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (3 samples, 0.02%)</title><rect x="406.6" y="883.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="409.6" y="894.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.getCell (4,022 samples, 32.55%)</title><rect x="407.6" y="883.0" width="384.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="410.6" y="894.0">ru/mail/polis/dao/shakhmin/LSMDao.getCell</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (186 samples, 1.51%)</title><rect x="407.8" y="867.0" width="17.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="410.8" y="878.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (167 samples, 1.35%)</title><rect x="407.9" y="851.0" width="15.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="410.9" y="862.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (4 samples, 0.03%)</title><rect x="407.9" y="835.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="410.9" y="846.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (106 samples, 0.86%)</title><rect x="408.3" y="835.0" width="10.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="411.3" y="846.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (106 samples, 0.86%)</title><rect x="408.3" y="819.0" width="10.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="411.3" y="830.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (103 samples, 0.83%)</title><rect x="408.6" y="803.0" width="9.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="411.6" y="814.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (95 samples, 0.77%)</title><rect x="409.4" y="787.0" width="9.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="412.4" y="798.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (94 samples, 0.76%)</title><rect x="409.5" y="771.0" width="9.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="412.5" y="782.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (6 samples, 0.05%)</title><rect x="409.5" y="755.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="412.5" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$318/862230459.compare (88 samples, 0.71%)</title><rect x="410.1" y="755.0" width="8.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="413.1" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (87 samples, 0.70%)</title><rect x="410.1" y="739.0" width="8.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="413.1" y="750.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$113/1571970597.compare (87 samples, 0.70%)</title><rect x="410.1" y="723.0" width="8.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="413.1" y="734.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (87 samples, 0.70%)</title><rect x="410.1" y="707.0" width="8.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="413.1" y="718.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$113/1571970597.compare (87 samples, 0.70%)</title><rect x="410.1" y="691.0" width="8.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="413.1" y="702.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (87 samples, 0.70%)</title><rect x="410.1" y="675.0" width="8.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="413.1" y="686.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$111/2125643409.compare (87 samples, 0.70%)</title><rect x="410.1" y="659.0" width="8.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="413.1" y="670.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (87 samples, 0.70%)</title><rect x="410.1" y="643.0" width="8.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="413.1" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (60 samples, 0.49%)</title><rect x="410.1" y="627.0" width="5.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="413.1" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (60 samples, 0.49%)</title><rect x="410.1" y="611.0" width="5.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="413.1" y="622.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (3 samples, 0.02%)</title><rect x="411.0" y="595.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="414.0" y="606.0"></text>
</g>
<g>
<title>java/nio/Buffer.remaining (6 samples, 0.05%)</title><rect x="411.3" y="595.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="414.3" y="606.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (38 samples, 0.31%)</title><rect x="411.9" y="595.0" width="3.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="414.9" y="606.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (8 samples, 0.06%)</title><rect x="414.3" y="579.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="417.3" y="590.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (8 samples, 0.06%)</title><rect x="414.3" y="563.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="417.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/util/ArraysSupport.vectorizedMismatch (4 samples, 0.03%)</title><rect x="415.1" y="579.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="418.1" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$110/1344849970.apply (25 samples, 0.20%)</title><rect x="416.0" y="627.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="419.0" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (25 samples, 0.20%)</title><rect x="416.0" y="611.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="419.0" y="622.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (23 samples, 0.19%)</title><rect x="416.2" y="595.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="419.2" y="606.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (23 samples, 0.19%)</title><rect x="416.2" y="579.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="419.2" y="590.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (16 samples, 0.13%)</title><rect x="416.8" y="563.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="419.8" y="574.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (16 samples, 0.13%)</title><rect x="416.8" y="547.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="419.8" y="558.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (15 samples, 0.12%)</title><rect x="416.9" y="531.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="419.9" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (9 samples, 0.07%)</title><rect x="417.5" y="515.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="420.5" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (9 samples, 0.07%)</title><rect x="417.5" y="499.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="420.5" y="510.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (9 samples, 0.07%)</title><rect x="417.5" y="483.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="420.5" y="494.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (6 samples, 0.05%)</title><rect x="417.6" y="467.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="420.6" y="478.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (6 samples, 0.05%)</title><rect x="417.6" y="451.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="420.6" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (6 samples, 0.05%)</title><rect x="417.6" y="435.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="420.6" y="446.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (5 samples, 0.04%)</title><rect x="417.7" y="419.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="420.7" y="430.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (56 samples, 0.45%)</title><rect x="418.5" y="835.0" width="5.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="421.5" y="846.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (56 samples, 0.45%)</title><rect x="418.5" y="819.0" width="5.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="421.5" y="830.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (56 samples, 0.45%)</title><rect x="418.5" y="803.0" width="5.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="421.5" y="814.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (56 samples, 0.45%)</title><rect x="418.5" y="787.0" width="5.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="421.5" y="798.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (55 samples, 0.45%)</title><rect x="418.5" y="771.0" width="5.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="421.5" y="782.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (55 samples, 0.45%)</title><rect x="418.5" y="755.0" width="5.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="421.5" y="766.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (27 samples, 0.22%)</title><rect x="418.5" y="739.0" width="2.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="421.5" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (3 samples, 0.02%)</title><rect x="418.6" y="723.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="421.6" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (23 samples, 0.19%)</title><rect x="418.9" y="723.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="421.9" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (23 samples, 0.19%)</title><rect x="418.9" y="707.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="421.9" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (22 samples, 0.18%)</title><rect x="419.0" y="691.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="422.0" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (10 samples, 0.08%)</title><rect x="419.0" y="675.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="422.0" y="686.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (9 samples, 0.07%)</title><rect x="419.1" y="659.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="422.1" y="670.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (9 samples, 0.07%)</title><rect x="419.1" y="643.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="422.1" y="654.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (8 samples, 0.06%)</title><rect x="419.2" y="627.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="422.2" y="638.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (7 samples, 0.06%)</title><rect x="419.3" y="611.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="422.3" y="622.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (5 samples, 0.04%)</title><rect x="419.5" y="595.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="422.5" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.03%)</title><rect x="419.6" y="579.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="422.6" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.02%)</title><rect x="419.7" y="563.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="422.7" y="574.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (3 samples, 0.02%)</title><rect x="419.7" y="547.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="422.7" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (8 samples, 0.06%)</title><rect x="420.0" y="675.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="423.0" y="686.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (4 samples, 0.03%)</title><rect x="420.1" y="659.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="423.1" y="670.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (4 samples, 0.03%)</title><rect x="420.1" y="643.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="423.1" y="654.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (4 samples, 0.03%)</title><rect x="420.1" y="627.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="423.1" y="638.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (4 samples, 0.03%)</title><rect x="420.1" y="611.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="423.1" y="622.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (4 samples, 0.03%)</title><rect x="420.1" y="595.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="423.1" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.03%)</title><rect x="420.1" y="579.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="423.1" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.03%)</title><rect x="420.1" y="563.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="423.1" y="574.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (3 samples, 0.02%)</title><rect x="420.5" y="659.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="423.5" y="670.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (3 samples, 0.02%)</title><rect x="420.5" y="643.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="423.5" y="654.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (3 samples, 0.02%)</title><rect x="420.5" y="627.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="423.5" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.timestampAt (3 samples, 0.02%)</title><rect x="420.7" y="675.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="423.7" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$318/862230459.compare (28 samples, 0.23%)</title><rect x="421.1" y="739.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="424.1" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (28 samples, 0.23%)</title><rect x="421.1" y="723.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="424.1" y="734.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$113/1571970597.compare (28 samples, 0.23%)</title><rect x="421.1" y="707.0" width="2.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="424.1" y="718.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (28 samples, 0.23%)</title><rect x="421.1" y="691.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="424.1" y="702.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$113/1571970597.compare (27 samples, 0.22%)</title><rect x="421.2" y="675.0" width="2.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="424.2" y="686.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (27 samples, 0.22%)</title><rect x="421.2" y="659.0" width="2.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="424.2" y="670.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$111/2125643409.compare (27 samples, 0.22%)</title><rect x="421.2" y="643.0" width="2.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="424.2" y="654.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (27 samples, 0.22%)</title><rect x="421.2" y="627.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="424.2" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (21 samples, 0.17%)</title><rect x="421.2" y="611.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="424.2" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (21 samples, 0.17%)</title><rect x="421.2" y="595.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="424.2" y="606.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (13 samples, 0.11%)</title><rect x="421.8" y="579.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="424.8" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$110/1344849970.apply (6 samples, 0.05%)</title><rect x="423.2" y="611.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="426.2" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (6 samples, 0.05%)</title><rect x="423.2" y="595.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="426.2" y="606.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (6 samples, 0.05%)</title><rect x="423.2" y="579.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="426.2" y="590.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (5 samples, 0.04%)</title><rect x="423.3" y="563.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="426.3" y="574.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (4 samples, 0.03%)</title><rect x="423.4" y="547.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="426.4" y="558.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (4 samples, 0.03%)</title><rect x="423.4" y="531.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="426.4" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$320/1881074320.apply (18 samples, 0.15%)</title><rect x="423.8" y="851.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="426.8" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (18 samples, 0.15%)</title><rect x="423.8" y="835.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="426.8" y="846.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (17 samples, 0.14%)</title><rect x="423.8" y="819.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="426.8" y="830.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (17 samples, 0.14%)</title><rect x="423.8" y="803.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="426.8" y="814.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (11 samples, 0.09%)</title><rect x="424.4" y="787.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="427.4" y="798.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (11 samples, 0.09%)</title><rect x="424.4" y="771.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="427.4" y="782.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (6 samples, 0.05%)</title><rect x="424.4" y="755.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="427.4" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (6 samples, 0.05%)</title><rect x="424.4" y="739.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="427.4" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 0.04%)</title><rect x="424.5" y="723.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="427.5" y="734.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (5 samples, 0.04%)</title><rect x="424.5" y="707.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="427.5" y="718.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (3 samples, 0.02%)</title><rect x="424.6" y="691.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="427.6" y="702.0"></text>
</g>
<g>
<title>register_finalizer Runtime1 stub (3 samples, 0.02%)</title><rect x="424.6" y="675.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="427.6" y="686.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (5 samples, 0.04%)</title><rect x="424.9" y="755.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="427.9" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.rowsIterator (3,825 samples, 30.96%)</title><rect x="425.5" y="867.0" width="365.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="428.5" y="878.0">ru/mail/polis/dao/shakhmin/LSMDao.rowsIterator</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (3,349 samples, 27.10%)</title><rect x="425.5" y="851.0" width="319.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="428.5" y="862.0">ru/mail/polis/dao/shakhmin/Table.joinIterat..</text>
</g>
<g>
<title>java/util/ArrayList.add (16 samples, 0.13%)</title><rect x="426.3" y="835.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="429.3" y="846.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (16 samples, 0.13%)</title><rect x="426.3" y="819.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="429.3" y="830.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (15 samples, 0.12%)</title><rect x="426.4" y="803.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="429.4" y="814.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (15 samples, 0.12%)</title><rect x="426.4" y="787.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="429.4" y="798.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (12 samples, 0.10%)</title><rect x="426.7" y="771.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="429.7" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (7 samples, 0.06%)</title><rect x="427.0" y="755.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="430.0" y="766.0"></text>
</g>
<g>
<title>java/util/TreeMap.descendingMap (22 samples, 0.18%)</title><rect x="427.8" y="835.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="430.8" y="846.0"></text>
</g>
<g>
<title>java/util/TreeMap$DescendingSubMap.&lt;init&gt; (22 samples, 0.18%)</title><rect x="427.8" y="819.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="430.8" y="830.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap.&lt;init&gt; (22 samples, 0.18%)</title><rect x="427.8" y="803.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="430.8" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.next (4 samples, 0.03%)</title><rect x="428.7" y="787.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="431.7" y="798.0"></text>
</g>
<g>
<title>jint_disjoint_arraycopy (5 samples, 0.04%)</title><rect x="429.4" y="787.0" width="0.5" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="432.4" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.next (200 samples, 1.62%)</title><rect x="429.9" y="835.0" width="19.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="432.9" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (200 samples, 1.62%)</title><rect x="429.9" y="819.0" width="19.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="432.9" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.descend (179 samples, 1.45%)</title><rect x="431.9" y="803.0" width="17.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="434.9" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (163 samples, 1.32%)</title><rect x="433.4" y="787.0" width="15.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="436.4" y="798.0"></text>
</g>
<g>
<title>java/lang/Long.compareTo (12 samples, 0.10%)</title><rect x="435.7" y="771.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="438.7" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (18 samples, 0.15%)</title><rect x="436.9" y="771.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="439.9" y="782.0"></text>
</g>
<g>
<title>java/lang/Long.compareTo (10 samples, 0.08%)</title><rect x="437.6" y="755.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="440.6" y="766.0"></text>
</g>
<g>
<title>java/lang/Long.compareTo (4 samples, 0.03%)</title><rect x="438.2" y="739.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="441.2" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (109 samples, 0.88%)</title><rect x="438.6" y="771.0" width="10.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="441.6" y="782.0"></text>
</g>
<g>
<title>java/lang/Long.compareTo (24 samples, 0.19%)</title><rect x="444.1" y="755.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="447.1" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (27 samples, 0.22%)</title><rect x="446.4" y="755.0" width="2.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="449.4" y="766.0"></text>
</g>
<g>
<title>java/lang/Long.compareTo (18 samples, 0.15%)</title><rect x="447.3" y="739.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="450.3" y="750.0"></text>
</g>
<g>
<title>java/lang/Long.compareTo (5 samples, 0.04%)</title><rect x="448.5" y="723.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="451.5" y="734.0"></text>
</g>
<g>
<title>java/lang/Long.compare (5 samples, 0.04%)</title><rect x="448.5" y="707.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="451.5" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (11 samples, 0.09%)</title><rect x="449.0" y="835.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="452.0" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (11 samples, 0.09%)</title><rect x="449.0" y="819.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="452.0" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (11 samples, 0.09%)</title><rect x="449.0" y="803.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="452.0" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.hiNode (9 samples, 0.07%)</title><rect x="449.1" y="787.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="452.1" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findLast (9 samples, 0.07%)</title><rect x="449.1" y="771.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="452.1" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.descendingMap (15 samples, 0.12%)</title><rect x="450.1" y="835.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="453.1" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.descendingMap (15 samples, 0.12%)</title><rect x="450.1" y="819.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="453.1" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.&lt;init&gt; (11 samples, 0.09%)</title><rect x="450.4" y="803.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="453.4" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.iterator (142 samples, 1.15%)</title><rect x="451.5" y="835.0" width="13.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="454.5" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (3 samples, 0.02%)</title><rect x="452.1" y="819.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="455.1" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (3 samples, 0.02%)</title><rect x="452.1" y="803.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="455.1" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (3 samples, 0.02%)</title><rect x="452.1" y="787.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="455.1" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$NonfairSync.readerShouldBlock (3 samples, 0.02%)</title><rect x="452.1" y="771.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="455.1" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.apparentlyFirstQueuedIsExclusive (3 samples, 0.02%)</title><rect x="452.1" y="755.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="455.1" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock.readLock (3 samples, 0.02%)</title><rect x="452.5" y="819.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="455.5" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (118 samples, 0.96%)</title><rect x="452.7" y="819.0" width="11.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="455.7" y="830.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3 samples, 0.02%)</title><rect x="452.8" y="803.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="455.8" y="814.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3 samples, 0.02%)</title><rect x="452.8" y="787.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="455.8" y="798.0"></text>
</g>
<g>
<title>java/util/TreeMap.descendingMap (10 samples, 0.08%)</title><rect x="453.1" y="803.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="456.1" y="814.0"></text>
</g>
<g>
<title>java/util/TreeMap$DescendingSubMap.&lt;init&gt; (10 samples, 0.08%)</title><rect x="453.1" y="787.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="456.1" y="798.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap.&lt;init&gt; (10 samples, 0.08%)</title><rect x="453.1" y="771.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="456.1" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.descendingMap (3 samples, 0.02%)</title><rect x="454.2" y="803.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="457.2" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.descendingMap (3 samples, 0.02%)</title><rect x="454.2" y="787.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="457.2" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.iterator (97 samples, 0.79%)</title><rect x="454.5" y="803.0" width="9.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="457.5" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (91 samples, 0.74%)</title><rect x="454.6" y="787.0" width="8.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="457.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (90 samples, 0.73%)</title><rect x="454.7" y="771.0" width="8.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="457.7" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (90 samples, 0.73%)</title><rect x="454.7" y="755.0" width="8.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="457.7" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (85 samples, 0.69%)</title><rect x="455.2" y="739.0" width="8.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="458.2" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (85 samples, 0.69%)</title><rect x="455.2" y="723.0" width="8.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="458.2" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (4 samples, 0.03%)</title><rect x="455.4" y="707.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="458.4" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 0.03%)</title><rect x="455.4" y="691.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="458.4" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (3 samples, 0.02%)</title><rect x="455.5" y="675.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="458.5" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (79 samples, 0.64%)</title><rect x="455.8" y="707.0" width="7.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="458.8" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (26 samples, 0.21%)</title><rect x="460.9" y="691.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="463.9" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (25 samples, 0.20%)</title><rect x="461.0" y="675.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="464.0" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (19 samples, 0.15%)</title><rect x="461.5" y="659.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="464.5" y="670.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (13 samples, 0.11%)</title><rect x="461.9" y="643.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="464.9" y="654.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (7 samples, 0.06%)</title><rect x="462.4" y="627.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="465.4" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (4 samples, 0.03%)</title><rect x="463.3" y="787.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="466.3" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.iterator (3 samples, 0.02%)</title><rect x="463.7" y="803.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="466.7" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.reduceIterators (11 samples, 0.09%)</title><rect x="464.0" y="819.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="467.0" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (8 samples, 0.06%)</title><rect x="464.3" y="803.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="467.3" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.iterator (2,935 samples, 23.75%)</title><rect x="465.1" y="835.0" width="280.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="468.1" y="846.0">ru/mail/polis/dao/shakhmin/SSTable.ite..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.&lt;init&gt; (2,934 samples, 23.75%)</title><rect x="465.2" y="819.0" width="280.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="468.2" y="830.0">ru/mail/polis/dao/shakhmin/SSTable$SST..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.position (2,932 samples, 23.73%)</title><rect x="465.2" y="803.0" width="280.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="468.2" y="814.0">ru/mail/polis/dao/shakhmin/SSTable.pos..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (272 samples, 2.20%)</title><rect x="472.8" y="787.0" width="26.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="475.8" y="798.0">j..</text>
</g>
<g>
<title>java/nio/Buffer.position (30 samples, 0.24%)</title><rect x="476.2" y="771.0" width="2.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="479.2" y="782.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (11 samples, 0.09%)</title><rect x="478.0" y="755.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="481.0" y="766.0"></text>
</g>
<g>
<title>java/nio/Buffer.remaining (5 samples, 0.04%)</title><rect x="479.1" y="771.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="482.1" y="782.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (181 samples, 1.46%)</title><rect x="479.6" y="771.0" width="17.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="482.6" y="782.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (13 samples, 0.11%)</title><rect x="484.2" y="755.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="487.2" y="766.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.ix (8 samples, 0.06%)</title><rect x="484.6" y="739.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="487.6" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (75 samples, 0.61%)</title><rect x="485.4" y="755.0" width="7.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="488.4" y="766.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (15 samples, 0.12%)</title><rect x="490.8" y="739.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="493.8" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.ix (3 samples, 0.02%)</title><rect x="492.3" y="739.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="495.3" y="750.0"></text>
</g>
<g>
<title>jdk/internal/util/ArraysSupport.vectorizedMismatch (45 samples, 0.36%)</title><rect x="492.6" y="755.0" width="4.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="495.6" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.base (21 samples, 0.17%)</title><rect x="494.9" y="739.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="497.9" y="750.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (9 samples, 0.07%)</title><rect x="496.9" y="771.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="499.9" y="782.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (4 samples, 0.03%)</title><rect x="496.9" y="755.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="499.9" y="766.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getByte (5 samples, 0.04%)</title><rect x="497.2" y="755.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="500.2" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (11 samples, 0.09%)</title><rect x="497.7" y="771.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="500.7" y="782.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (3 samples, 0.02%)</title><rect x="498.0" y="755.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="501.0" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.ix (5 samples, 0.04%)</title><rect x="498.3" y="755.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="501.3" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (1,026 samples, 8.30%)</title><rect x="499.0" y="787.0" width="97.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="502.0" y="798.0">ru/mail/pol..</text>
</g>
<g>
<title>java/nio/DirectByteBuffer.getInt (375 samples, 3.03%)</title><rect x="499.8" y="771.0" width="35.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="502.8" y="782.0">jav..</text>
</g>
<g>
<title>java/nio/Buffer.nextGetIndex (16 samples, 0.13%)</title><rect x="499.8" y="755.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="502.8" y="766.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.getInt (359 samples, 2.91%)</title><rect x="501.3" y="755.0" width="34.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="504.3" y="766.0">ja..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getIntUnaligned (358 samples, 2.90%)</title><rect x="501.4" y="739.0" width="34.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="504.4" y="750.0">jd..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.convEndian (354 samples, 2.87%)</title><rect x="501.8" y="723.0" width="33.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="504.8" y="734.0">jd..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (418 samples, 3.38%)</title><rect x="535.6" y="771.0" width="40.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="538.6" y="782.0">jav..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (343 samples, 2.78%)</title><rect x="538.4" y="755.0" width="32.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="541.4" y="766.0">ja..</text>
</g>
<g>
<title>java/nio/Buffer.capacity (8 samples, 0.06%)</title><rect x="541.6" y="739.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="544.6" y="750.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (3 samples, 0.02%)</title><rect x="542.3" y="739.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="545.3" y="750.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (6 samples, 0.05%)</title><rect x="542.6" y="739.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="545.6" y="750.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (293 samples, 2.37%)</title><rect x="543.2" y="739.0" width="28.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="546.2" y="750.0">j..</text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (286 samples, 2.31%)</title><rect x="543.8" y="723.0" width="27.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="546.8" y="734.0">j..</text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (269 samples, 2.18%)</title><rect x="545.5" y="707.0" width="25.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="548.5" y="718.0">j..</text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (269 samples, 2.18%)</title><rect x="545.5" y="691.0" width="25.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="548.5" y="702.0">j..</text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (266 samples, 2.15%)</title><rect x="545.8" y="675.0" width="25.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="548.8" y="686.0">j..</text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (139 samples, 1.12%)</title><rect x="555.9" y="659.0" width="13.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="558.9" y="670.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (44 samples, 0.36%)</title><rect x="557.3" y="643.0" width="4.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="560.3" y="654.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (35 samples, 0.28%)</title><rect x="558.2" y="627.0" width="3.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="561.2" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (31 samples, 0.25%)</title><rect x="558.6" y="611.0" width="2.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="561.6" y="622.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (25 samples, 0.20%)</title><rect x="559.1" y="595.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="562.1" y="606.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (80 samples, 0.65%)</title><rect x="561.5" y="643.0" width="7.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="564.5" y="654.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (15 samples, 0.12%)</title><rect x="566.0" y="627.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="569.0" y="638.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (18 samples, 0.15%)</title><rect x="567.4" y="627.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="570.4" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (16 samples, 0.13%)</title><rect x="567.6" y="611.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="570.6" y="622.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (13 samples, 0.11%)</title><rect x="567.9" y="595.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="570.9" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (18 samples, 0.15%)</title><rect x="569.4" y="659.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="572.4" y="670.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (46 samples, 0.37%)</title><rect x="571.2" y="755.0" width="4.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="574.2" y="766.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (196 samples, 1.59%)</title><rect x="575.6" y="771.0" width="18.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="578.6" y="782.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (183 samples, 1.48%)</title><rect x="576.8" y="755.0" width="17.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="579.8" y="766.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (180 samples, 1.46%)</title><rect x="577.1" y="739.0" width="17.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="580.1" y="750.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (162 samples, 1.31%)</title><rect x="578.8" y="723.0" width="15.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="581.8" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (162 samples, 1.31%)</title><rect x="578.8" y="707.0" width="15.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="581.8" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (162 samples, 1.31%)</title><rect x="578.8" y="691.0" width="15.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="581.8" y="702.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (133 samples, 1.08%)</title><rect x="579.8" y="675.0" width="12.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="582.8" y="686.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (52 samples, 0.42%)</title><rect x="580.8" y="659.0" width="5.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="583.8" y="670.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (52 samples, 0.42%)</title><rect x="580.8" y="643.0" width="5.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="583.8" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (44 samples, 0.36%)</title><rect x="581.6" y="627.0" width="4.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="584.6" y="638.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (34 samples, 0.28%)</title><rect x="582.5" y="611.0" width="3.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="585.5" y="622.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (71 samples, 0.57%)</title><rect x="585.8" y="659.0" width="6.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="588.8" y="670.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (70 samples, 0.57%)</title><rect x="585.9" y="643.0" width="6.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="588.9" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (25 samples, 0.20%)</title><rect x="587.8" y="627.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="590.8" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (25 samples, 0.20%)</title><rect x="590.2" y="627.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="593.2" y="638.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (17 samples, 0.14%)</title><rect x="590.9" y="611.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="593.9" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (18 samples, 0.15%)</title><rect x="592.6" y="675.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="595.6" y="686.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (28 samples, 0.23%)</title><rect x="594.3" y="771.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="597.3" y="782.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (28 samples, 0.23%)</title><rect x="594.3" y="755.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="597.3" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (28 samples, 0.23%)</title><rect x="594.3" y="739.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="597.3" y="750.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (28 samples, 0.23%)</title><rect x="594.3" y="723.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="597.3" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (1,552 samples, 12.56%)</title><rect x="596.9" y="787.0" width="148.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="599.9" y="798.0">ru/mail/polis/dao/s..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (701 samples, 5.67%)</title><rect x="607.4" y="771.0" width="67.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="610.4" y="782.0">java/ni..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (700 samples, 5.67%)</title><rect x="607.5" y="755.0" width="66.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="610.5" y="766.0">java/ni..</text>
</g>
<g>
<title>java/nio/Buffer.limit (5 samples, 0.04%)</title><rect x="612.2" y="739.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="615.2" y="750.0"></text>
</g>
<g>
<title>java/nio/Buffer.markValue (3 samples, 0.02%)</title><rect x="612.7" y="739.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="615.7" y="750.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (3 samples, 0.02%)</title><rect x="613.0" y="739.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="616.0" y="750.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (640 samples, 5.18%)</title><rect x="613.3" y="739.0" width="61.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="616.3" y="750.0">java/n..</text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (633 samples, 5.12%)</title><rect x="613.9" y="723.0" width="60.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="616.9" y="734.0">java/n..</text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (528 samples, 4.27%)</title><rect x="624.0" y="707.0" width="50.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="627.0" y="718.0">java/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (319 samples, 2.58%)</title><rect x="643.8" y="691.0" width="30.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="646.8" y="702.0">ja..</text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (291 samples, 2.36%)</title><rect x="646.5" y="675.0" width="27.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="649.5" y="686.0">j..</text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (155 samples, 1.25%)</title><rect x="658.5" y="659.0" width="14.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="661.5" y="670.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (43 samples, 0.35%)</title><rect x="662.3" y="643.0" width="4.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="665.3" y="654.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (35 samples, 0.28%)</title><rect x="663.0" y="627.0" width="3.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="666.0" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (25 samples, 0.20%)</title><rect x="664.0" y="611.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="667.0" y="622.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (15 samples, 0.12%)</title><rect x="664.9" y="595.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="667.9" y="606.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (72 samples, 0.58%)</title><rect x="666.4" y="643.0" width="6.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="669.4" y="654.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (6 samples, 0.05%)</title><rect x="667.4" y="627.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="670.4" y="638.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (55 samples, 0.45%)</title><rect x="668.0" y="627.0" width="5.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="671.0" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (9 samples, 0.07%)</title><rect x="669.0" y="611.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="672.0" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (36 samples, 0.29%)</title><rect x="669.8" y="611.0" width="3.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="672.8" y="622.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (30 samples, 0.24%)</title><rect x="670.4" y="595.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="673.4" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (10 samples, 0.08%)</title><rect x="673.3" y="659.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="676.3" y="670.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (284 samples, 2.30%)</title><rect x="674.4" y="771.0" width="27.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="677.4" y="782.0">j..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (262 samples, 2.12%)</title><rect x="676.5" y="755.0" width="25.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="679.5" y="766.0">j..</text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (252 samples, 2.04%)</title><rect x="677.5" y="739.0" width="24.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="680.5" y="750.0">j..</text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (208 samples, 1.68%)</title><rect x="681.7" y="723.0" width="19.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="684.7" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (207 samples, 1.68%)</title><rect x="681.7" y="707.0" width="19.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="684.7" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (202 samples, 1.63%)</title><rect x="682.2" y="691.0" width="19.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="685.2" y="702.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (172 samples, 1.39%)</title><rect x="682.8" y="675.0" width="16.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="685.8" y="686.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (42 samples, 0.34%)</title><rect x="683.6" y="659.0" width="4.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="686.6" y="670.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (41 samples, 0.33%)</title><rect x="683.7" y="643.0" width="3.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="686.7" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (40 samples, 0.32%)</title><rect x="683.8" y="627.0" width="3.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="686.8" y="638.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (30 samples, 0.24%)</title><rect x="684.7" y="611.0" width="2.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="687.7" y="622.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (122 samples, 0.99%)</title><rect x="687.6" y="659.0" width="11.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="690.6" y="670.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (122 samples, 0.99%)</title><rect x="687.6" y="643.0" width="11.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="690.6" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.03%)</title><rect x="688.5" y="627.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="691.5" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (108 samples, 0.87%)</title><rect x="688.9" y="627.0" width="10.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="691.9" y="638.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (21 samples, 0.17%)</title><rect x="695.0" y="611.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="698.0" y="622.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (23 samples, 0.19%)</title><rect x="697.0" y="611.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="700.0" y="622.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (14 samples, 0.11%)</title><rect x="699.2" y="675.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="702.2" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteOrder.nativeOrder (10 samples, 0.08%)</title><rect x="700.6" y="675.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="703.6" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (5 samples, 0.04%)</title><rect x="701.0" y="659.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="704.0" y="670.0"></text>
</g>
<g>
<title>java/nio/DirectLongBufferS.get (428 samples, 3.46%)</title><rect x="701.5" y="771.0" width="40.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="704.5" y="782.0">jav..</text>
</g>
<g>
<title>java/lang/ref/Reference.reachabilityFence (161 samples, 1.30%)</title><rect x="702.8" y="755.0" width="15.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="705.8" y="766.0"></text>
</g>
<g>
<title>java/nio/Bits.swap (226 samples, 1.83%)</title><rect x="718.1" y="755.0" width="21.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="721.1" y="766.0">j..</text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (17 samples, 0.14%)</title><rect x="739.7" y="755.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="742.7" y="766.0"></text>
</g>
<g>
<title>java/nio/DirectLongBufferS.ix (8 samples, 0.06%)</title><rect x="741.3" y="755.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="744.3" y="766.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getLong (3 samples, 0.02%)</title><rect x="742.1" y="755.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="745.1" y="766.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (17 samples, 0.14%)</title><rect x="742.4" y="771.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="745.4" y="782.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (17 samples, 0.14%)</title><rect x="742.4" y="755.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="745.4" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (17 samples, 0.14%)</title><rect x="742.4" y="739.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="745.4" y="750.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (17 samples, 0.14%)</title><rect x="742.4" y="723.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="745.4" y="734.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (12 samples, 0.10%)</title><rect x="744.0" y="771.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="747.0" y="782.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (12 samples, 0.10%)</title><rect x="744.0" y="755.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="747.0" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (12 samples, 0.10%)</title><rect x="744.0" y="739.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="747.0" y="750.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (12 samples, 0.10%)</title><rect x="744.0" y="723.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="747.0" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.reduceIterators (476 samples, 3.85%)</title><rect x="745.4" y="851.0" width="45.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="748.4" y="862.0">ru/m..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (424 samples, 3.43%)</title><rect x="745.4" y="835.0" width="40.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="748.4" y="846.0">com..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (421 samples, 3.41%)</title><rect x="745.6" y="819.0" width="40.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="748.6" y="830.0">com..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (4 samples, 0.03%)</title><rect x="749.7" y="803.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="752.7" y="814.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.&lt;init&gt; (3 samples, 0.02%)</title><rect x="749.8" y="787.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="752.8" y="798.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (5 samples, 0.04%)</title><rect x="750.4" y="803.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="753.4" y="814.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (366 samples, 2.96%)</title><rect x="750.9" y="803.0" width="34.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="753.9" y="814.0">ja..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (366 samples, 2.96%)</title><rect x="750.9" y="787.0" width="34.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="753.9" y="798.0">ja..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (364 samples, 2.95%)</title><rect x="751.1" y="771.0" width="34.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="754.1" y="782.0">ja..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (363 samples, 2.94%)</title><rect x="751.2" y="755.0" width="34.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="754.2" y="766.0">ja..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (352 samples, 2.85%)</title><rect x="752.2" y="739.0" width="33.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="755.2" y="750.0">co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (349 samples, 2.82%)</title><rect x="752.5" y="723.0" width="33.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="755.5" y="734.0">co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (176 samples, 1.42%)</title><rect x="753.5" y="707.0" width="16.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="756.5" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (15 samples, 0.12%)</title><rect x="754.1" y="691.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="757.1" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (154 samples, 1.25%)</title><rect x="755.6" y="691.0" width="14.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="758.6" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (153 samples, 1.24%)</title><rect x="755.7" y="675.0" width="14.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="758.7" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (150 samples, 1.21%)</title><rect x="756.0" y="659.0" width="14.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="759.0" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (75 samples, 0.61%)</title><rect x="756.1" y="643.0" width="7.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="759.1" y="654.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (54 samples, 0.44%)</title><rect x="756.4" y="627.0" width="5.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="759.4" y="638.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (54 samples, 0.44%)</title><rect x="756.4" y="611.0" width="5.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="759.4" y="622.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (48 samples, 0.39%)</title><rect x="757.0" y="595.0" width="4.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="760.0" y="606.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (48 samples, 0.39%)</title><rect x="757.0" y="579.0" width="4.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="760.0" y="590.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (24 samples, 0.19%)</title><rect x="759.3" y="563.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="762.3" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (17 samples, 0.14%)</title><rect x="760.0" y="547.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="763.0" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (17 samples, 0.14%)</title><rect x="760.0" y="531.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="763.0" y="542.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (13 samples, 0.11%)</title><rect x="760.3" y="515.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="763.3" y="526.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (6 samples, 0.05%)</title><rect x="761.0" y="499.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="764.0" y="510.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (5 samples, 0.04%)</title><rect x="761.6" y="627.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="764.6" y="638.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (5 samples, 0.04%)</title><rect x="761.6" y="611.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="764.6" y="622.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (5 samples, 0.04%)</title><rect x="761.6" y="595.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="764.6" y="606.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (5 samples, 0.04%)</title><rect x="761.6" y="579.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="764.6" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.03%)</title><rect x="761.7" y="563.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="764.7" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.03%)</title><rect x="761.7" y="547.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="764.7" y="558.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.03%)</title><rect x="761.7" y="531.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="764.7" y="542.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (3 samples, 0.02%)</title><rect x="761.8" y="515.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="764.8" y="526.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (3 samples, 0.02%)</title><rect x="761.8" y="499.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="764.8" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (3 samples, 0.02%)</title><rect x="761.8" y="483.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="764.8" y="494.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (3 samples, 0.02%)</title><rect x="761.8" y="467.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="764.8" y="478.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (13 samples, 0.11%)</title><rect x="762.1" y="627.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="765.1" y="638.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (13 samples, 0.11%)</title><rect x="762.1" y="611.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="765.1" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (13 samples, 0.11%)</title><rect x="762.1" y="595.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="765.1" y="606.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (13 samples, 0.11%)</title><rect x="762.1" y="579.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="765.1" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (43 samples, 0.35%)</title><rect x="763.3" y="643.0" width="4.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="766.3" y="654.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (12 samples, 0.10%)</title><rect x="763.7" y="627.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="766.7" y="638.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (12 samples, 0.10%)</title><rect x="763.7" y="611.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="766.7" y="622.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (9 samples, 0.07%)</title><rect x="764.0" y="595.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="767.0" y="606.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (9 samples, 0.07%)</title><rect x="764.0" y="579.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="767.0" y="590.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (8 samples, 0.06%)</title><rect x="764.1" y="563.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="767.1" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (8 samples, 0.06%)</title><rect x="764.1" y="547.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="767.1" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (7 samples, 0.06%)</title><rect x="764.2" y="531.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="767.2" y="542.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (3 samples, 0.02%)</title><rect x="764.5" y="515.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="767.5" y="526.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (13 samples, 0.11%)</title><rect x="764.8" y="627.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="767.8" y="638.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (12 samples, 0.10%)</title><rect x="764.9" y="611.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="767.9" y="622.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (12 samples, 0.10%)</title><rect x="764.9" y="595.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="767.9" y="606.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (12 samples, 0.10%)</title><rect x="764.9" y="579.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="767.9" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (12 samples, 0.10%)</title><rect x="764.9" y="563.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="767.9" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (12 samples, 0.10%)</title><rect x="764.9" y="547.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="767.9" y="558.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (10 samples, 0.08%)</title><rect x="764.9" y="531.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="767.9" y="542.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (5 samples, 0.04%)</title><rect x="765.1" y="515.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="768.1" y="526.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (5 samples, 0.04%)</title><rect x="765.1" y="499.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="768.1" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (5 samples, 0.04%)</title><rect x="765.1" y="483.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="768.1" y="494.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (3 samples, 0.02%)</title><rect x="765.3" y="467.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="768.3" y="478.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (3 samples, 0.02%)</title><rect x="765.6" y="515.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="768.6" y="526.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (3 samples, 0.02%)</title><rect x="765.6" y="499.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="768.6" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (3 samples, 0.02%)</title><rect x="765.6" y="483.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="768.6" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectLongBufferS.get (10 samples, 0.08%)</title><rect x="766.1" y="627.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="769.1" y="638.0"></text>
</g>
<g>
<title>java/nio/Bits.swap (10 samples, 0.08%)</title><rect x="766.1" y="611.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="769.1" y="622.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (3 samples, 0.02%)</title><rect x="767.0" y="627.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="770.0" y="638.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (3 samples, 0.02%)</title><rect x="767.0" y="611.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="770.0" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (3 samples, 0.02%)</title><rect x="767.0" y="595.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="770.0" y="606.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (3 samples, 0.02%)</title><rect x="767.0" y="579.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="770.0" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.timestampAt (15 samples, 0.12%)</title><rect x="767.4" y="643.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="770.4" y="654.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (14 samples, 0.11%)</title><rect x="767.5" y="627.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="770.5" y="638.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (13 samples, 0.11%)</title><rect x="767.6" y="611.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="770.6" y="622.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (7 samples, 0.06%)</title><rect x="768.2" y="595.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="771.2" y="606.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (4 samples, 0.03%)</title><rect x="768.5" y="579.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="771.5" y="590.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (4 samples, 0.03%)</title><rect x="768.5" y="563.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="771.5" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.03%)</title><rect x="768.5" y="547.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="771.5" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.03%)</title><rect x="768.5" y="531.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="771.5" y="542.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.03%)</title><rect x="768.5" y="515.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="771.5" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.valueAt (15 samples, 0.12%)</title><rect x="768.8" y="643.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="771.8" y="654.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (10 samples, 0.08%)</title><rect x="768.9" y="627.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="771.9" y="638.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (10 samples, 0.08%)</title><rect x="768.9" y="611.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="771.9" y="622.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (10 samples, 0.08%)</title><rect x="768.9" y="595.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="771.9" y="606.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (10 samples, 0.08%)</title><rect x="768.9" y="579.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="771.9" y="590.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (10 samples, 0.08%)</title><rect x="768.9" y="563.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="771.9" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (10 samples, 0.08%)</title><rect x="768.9" y="547.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="771.9" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (10 samples, 0.08%)</title><rect x="768.9" y="531.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="771.9" y="542.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (9 samples, 0.07%)</title><rect x="768.9" y="515.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="771.9" y="526.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (4 samples, 0.03%)</title><rect x="768.9" y="499.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="771.9" y="510.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (3 samples, 0.02%)</title><rect x="769.0" y="483.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="772.0" y="494.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (3 samples, 0.02%)</title><rect x="769.0" y="467.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="772.0" y="478.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (5 samples, 0.04%)</title><rect x="769.3" y="499.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="772.3" y="510.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (4 samples, 0.03%)</title><rect x="769.9" y="627.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="772.9" y="638.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (4 samples, 0.03%)</title><rect x="769.9" y="611.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="772.9" y="622.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (3 samples, 0.02%)</title><rect x="770.0" y="595.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="773.0" y="606.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (3 samples, 0.02%)</title><rect x="770.0" y="579.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="773.0" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.02%)</title><rect x="770.0" y="563.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="773.0" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.02%)</title><rect x="770.0" y="547.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="773.0" y="558.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (3 samples, 0.02%)</title><rect x="770.0" y="531.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="773.0" y="542.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (3 samples, 0.02%)</title><rect x="770.0" y="515.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="773.0" y="526.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (3 samples, 0.02%)</title><rect x="770.0" y="499.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="773.0" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$318/862230459.compare (163 samples, 1.32%)</title><rect x="770.3" y="707.0" width="15.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="773.3" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (161 samples, 1.30%)</title><rect x="770.5" y="691.0" width="15.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="773.5" y="702.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$113/1571970597.compare (161 samples, 1.30%)</title><rect x="770.5" y="675.0" width="15.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="773.5" y="686.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (161 samples, 1.30%)</title><rect x="770.5" y="659.0" width="15.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="773.5" y="670.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$113/1571970597.compare (159 samples, 1.29%)</title><rect x="770.7" y="643.0" width="15.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="773.7" y="654.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (159 samples, 1.29%)</title><rect x="770.7" y="627.0" width="15.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="773.7" y="638.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$111/2125643409.compare (159 samples, 1.29%)</title><rect x="770.7" y="611.0" width="15.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="773.7" y="622.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (159 samples, 1.29%)</title><rect x="770.7" y="595.0" width="15.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="773.7" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (98 samples, 0.79%)</title><rect x="770.7" y="579.0" width="9.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="773.7" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (97 samples, 0.79%)</title><rect x="770.8" y="563.0" width="9.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="773.8" y="574.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (5 samples, 0.04%)</title><rect x="771.9" y="547.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="774.9" y="558.0"></text>
</g>
<g>
<title>java/nio/Buffer.remaining (5 samples, 0.04%)</title><rect x="772.4" y="547.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="775.4" y="558.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (70 samples, 0.57%)</title><rect x="772.9" y="547.0" width="6.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="775.9" y="558.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (10 samples, 0.08%)</title><rect x="776.6" y="531.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="779.6" y="542.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (4 samples, 0.03%)</title><rect x="776.8" y="515.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="779.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getByte (4 samples, 0.03%)</title><rect x="777.2" y="515.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="780.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/util/ArraysSupport.vectorizedMismatch (21 samples, 0.17%)</title><rect x="777.5" y="531.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="780.5" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compare (3 samples, 0.02%)</title><rect x="779.5" y="547.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="782.5" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$110/1344849970.apply (60 samples, 0.49%)</title><rect x="780.1" y="579.0" width="5.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="783.1" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (60 samples, 0.49%)</title><rect x="780.1" y="563.0" width="5.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="783.1" y="574.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (48 samples, 0.39%)</title><rect x="780.9" y="547.0" width="4.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="783.9" y="558.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (47 samples, 0.38%)</title><rect x="781.0" y="531.0" width="4.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="784.0" y="542.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (3 samples, 0.02%)</title><rect x="782.1" y="515.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="785.1" y="526.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (31 samples, 0.25%)</title><rect x="782.5" y="515.0" width="3.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="785.5" y="526.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (31 samples, 0.25%)</title><rect x="782.5" y="499.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="785.5" y="510.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (28 samples, 0.23%)</title><rect x="782.8" y="483.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="785.8" y="494.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (12 samples, 0.10%)</title><rect x="784.3" y="467.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="787.3" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (11 samples, 0.09%)</title><rect x="784.4" y="451.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="787.4" y="462.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (10 samples, 0.08%)</title><rect x="784.4" y="435.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="787.4" y="446.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (3 samples, 0.02%)</title><rect x="784.5" y="419.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="787.5" y="430.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (3 samples, 0.02%)</title><rect x="784.5" y="403.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="787.5" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (3 samples, 0.02%)</title><rect x="784.5" y="387.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="787.5" y="398.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (6 samples, 0.05%)</title><rect x="784.8" y="419.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="787.8" y="430.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (6 samples, 0.05%)</title><rect x="784.8" y="403.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="787.8" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (6 samples, 0.05%)</title><rect x="784.8" y="387.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="787.8" y="398.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (4 samples, 0.03%)</title><rect x="785.0" y="371.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="788.0" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (4 samples, 0.03%)</title><rect x="785.5" y="547.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="788.5" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (51 samples, 0.41%)</title><rect x="785.9" y="835.0" width="4.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="788.9" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (51 samples, 0.41%)</title><rect x="785.9" y="819.0" width="4.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="788.9" y="830.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (50 samples, 0.40%)</title><rect x="786.0" y="803.0" width="4.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="789.0" y="814.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (31 samples, 0.25%)</title><rect x="786.4" y="787.0" width="3.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="789.4" y="798.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (31 samples, 0.25%)</title><rect x="786.4" y="771.0" width="3.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="789.4" y="782.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (31 samples, 0.25%)</title><rect x="786.4" y="755.0" width="3.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="789.4" y="766.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (28 samples, 0.23%)</title><rect x="786.7" y="739.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="789.7" y="750.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (25 samples, 0.20%)</title><rect x="787.0" y="723.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="790.0" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$318/862230459.compare (24 samples, 0.19%)</title><rect x="787.1" y="707.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="790.1" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (24 samples, 0.19%)</title><rect x="787.1" y="691.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="790.1" y="702.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$113/1571970597.compare (24 samples, 0.19%)</title><rect x="787.1" y="675.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="790.1" y="686.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (24 samples, 0.19%)</title><rect x="787.1" y="659.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="790.1" y="670.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$113/1571970597.compare (23 samples, 0.19%)</title><rect x="787.2" y="643.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="790.2" y="654.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (23 samples, 0.19%)</title><rect x="787.2" y="627.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="790.2" y="638.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$111/2125643409.compare (23 samples, 0.19%)</title><rect x="787.2" y="611.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="790.2" y="622.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (23 samples, 0.19%)</title><rect x="787.2" y="595.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="790.2" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (20 samples, 0.16%)</title><rect x="787.2" y="579.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="790.2" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (19 samples, 0.15%)</title><rect x="787.3" y="563.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="790.3" y="574.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (11 samples, 0.09%)</title><rect x="787.8" y="547.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="790.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/util/ArraysSupport.vectorizedMismatch (4 samples, 0.03%)</title><rect x="788.5" y="531.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="791.5" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$110/1344849970.apply (3 samples, 0.02%)</title><rect x="789.1" y="579.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="792.1" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (3 samples, 0.02%)</title><rect x="789.1" y="563.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="792.1" y="574.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (15 samples, 0.12%)</title><rect x="789.4" y="787.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="792.4" y="798.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (15 samples, 0.12%)</title><rect x="789.4" y="771.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="792.4" y="782.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (15 samples, 0.12%)</title><rect x="789.4" y="755.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="792.4" y="766.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (15 samples, 0.12%)</title><rect x="789.4" y="739.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="792.4" y="750.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (15 samples, 0.12%)</title><rect x="789.4" y="723.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="792.4" y="734.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (14 samples, 0.11%)</title><rect x="789.5" y="707.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="792.5" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (9 samples, 0.07%)</title><rect x="789.5" y="691.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="792.5" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (9 samples, 0.07%)</title><rect x="789.5" y="675.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="792.5" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (9 samples, 0.07%)</title><rect x="789.5" y="659.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="792.5" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (8 samples, 0.06%)</title><rect x="789.6" y="643.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="792.6" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (6 samples, 0.05%)</title><rect x="789.6" y="627.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="792.6" y="638.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (3 samples, 0.02%)</title><rect x="789.7" y="611.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="792.7" y="622.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (3 samples, 0.02%)</title><rect x="789.7" y="595.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="792.7" y="606.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (3 samples, 0.02%)</title><rect x="789.7" y="579.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="792.7" y="590.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (3 samples, 0.02%)</title><rect x="789.7" y="563.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="792.7" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$318/862230459.compare (5 samples, 0.04%)</title><rect x="790.3" y="691.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="793.3" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (5 samples, 0.04%)</title><rect x="790.3" y="675.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="793.3" y="686.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$113/1571970597.compare (5 samples, 0.04%)</title><rect x="790.3" y="659.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="793.3" y="670.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (5 samples, 0.04%)</title><rect x="790.3" y="643.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="793.3" y="654.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$113/1571970597.compare (4 samples, 0.03%)</title><rect x="790.4" y="627.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="793.4" y="638.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (4 samples, 0.03%)</title><rect x="790.4" y="611.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="793.4" y="622.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$111/2125643409.compare (4 samples, 0.03%)</title><rect x="790.4" y="595.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="793.4" y="606.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (4 samples, 0.03%)</title><rect x="790.4" y="579.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="793.4" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (3 samples, 0.02%)</title><rect x="790.4" y="563.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="793.4" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (3 samples, 0.02%)</title><rect x="790.4" y="547.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="793.4" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (9 samples, 0.07%)</title><rect x="790.8" y="867.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="793.8" y="878.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (7 samples, 0.06%)</title><rect x="790.8" y="851.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="793.8" y="862.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (7 samples, 0.06%)</title><rect x="790.8" y="835.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="793.8" y="846.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (7 samples, 0.06%)</title><rect x="790.8" y="819.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="793.8" y="830.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (7 samples, 0.06%)</title><rect x="790.8" y="803.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="793.8" y="814.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (4 samples, 0.03%)</title><rect x="790.9" y="787.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="793.9" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.03%)</title><rect x="790.9" y="771.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="793.9" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.03%)</title><rect x="790.9" y="755.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="793.9" y="766.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (3 samples, 0.02%)</title><rect x="790.9" y="739.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="793.9" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.getResponsesFromReplicas (312 samples, 2.53%)</title><rect x="791.8" y="883.0" width="29.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="794.8" y="894.0">ru..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.02%)</title><rect x="791.9" y="867.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="794.9" y="878.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1000975683.invoke (3 samples, 0.02%)</title><rect x="791.9" y="851.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="794.9" y="862.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.02%)</title><rect x="791.9" y="835.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="794.9" y="846.0"></text>
</g>
<g>
<title>java/net/URI.create (46 samples, 0.37%)</title><rect x="792.1" y="867.0" width="4.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="795.1" y="878.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (45 samples, 0.36%)</title><rect x="792.2" y="851.0" width="4.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="795.2" y="862.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (44 samples, 0.36%)</title><rect x="792.3" y="835.0" width="4.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="795.3" y="846.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (40 samples, 0.32%)</title><rect x="792.7" y="819.0" width="3.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="795.7" y="830.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChars (3 samples, 0.02%)</title><rect x="792.9" y="803.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="795.9" y="814.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (3 samples, 0.02%)</title><rect x="792.9" y="787.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="795.9" y="798.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (27 samples, 0.22%)</title><rect x="793.2" y="803.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="796.2" y="814.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (10 samples, 0.08%)</title><rect x="794.2" y="787.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="797.2" y="798.0"></text>
</g>
<g>
<title>java/net/URI$Parser.at (3 samples, 0.02%)</title><rect x="794.3" y="771.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="797.3" y="782.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (5 samples, 0.04%)</title><rect x="794.6" y="771.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="797.6" y="782.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (3 samples, 0.02%)</title><rect x="794.8" y="755.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="797.8" y="766.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (7 samples, 0.06%)</title><rect x="795.1" y="787.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="798.1" y="798.0"></text>
</g>
<g>
<title>java/lang/String.charAt (6 samples, 0.05%)</title><rect x="795.1" y="771.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="798.1" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (5 samples, 0.04%)</title><rect x="795.2" y="755.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="798.2" y="766.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (8 samples, 0.06%)</title><rect x="795.8" y="803.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="798.8" y="814.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest.newBuilder (8 samples, 0.06%)</title><rect x="796.5" y="867.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="799.5" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.&lt;init&gt; (7 samples, 0.06%)</title><rect x="796.6" y="851.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="799.6" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkURI (6 samples, 0.05%)</title><rect x="796.7" y="835.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="799.7" y="846.0"></text>
</g>
<g>
<title>java/lang/String.equals (3 samples, 0.02%)</title><rect x="796.7" y="819.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="799.7" y="830.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (3 samples, 0.02%)</title><rect x="797.0" y="819.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="800.0" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (3 samples, 0.02%)</title><rect x="797.0" y="803.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="800.0" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (171 samples, 1.38%)</title><rect x="797.6" y="867.0" width="16.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="800.6" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (171 samples, 1.38%)</title><rect x="797.6" y="851.0" width="16.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="800.6" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (171 samples, 1.38%)</title><rect x="797.6" y="835.0" width="16.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="800.6" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (171 samples, 1.38%)</title><rect x="797.6" y="819.0" width="16.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="800.6" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (110 samples, 0.89%)</title><rect x="798.1" y="803.0" width="10.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="801.1" y="814.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (12 samples, 0.10%)</title><rect x="798.3" y="787.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="801.3" y="798.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (9 samples, 0.07%)</title><rect x="798.5" y="771.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="801.5" y="782.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (9 samples, 0.07%)</title><rect x="798.5" y="755.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="801.5" y="766.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (7 samples, 0.06%)</title><rect x="798.7" y="739.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="801.7" y="750.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (5 samples, 0.04%)</title><rect x="798.7" y="723.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="801.7" y="734.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (3 samples, 0.02%)</title><rect x="798.7" y="707.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="801.7" y="718.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (16 samples, 0.13%)</title><rect x="799.4" y="787.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="802.4" y="798.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (16 samples, 0.13%)</title><rect x="799.4" y="771.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="802.4" y="782.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (12 samples, 0.10%)</title><rect x="799.7" y="755.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="802.7" y="766.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (12 samples, 0.10%)</title><rect x="799.7" y="739.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="802.7" y="750.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$115/937225413.accept (12 samples, 0.10%)</title><rect x="799.7" y="723.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="802.7" y="734.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (12 samples, 0.10%)</title><rect x="799.7" y="707.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="802.7" y="718.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (10 samples, 0.08%)</title><rect x="799.7" y="691.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="802.7" y="702.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$118/2131634163.accept (9 samples, 0.07%)</title><rect x="799.7" y="675.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="802.7" y="686.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (9 samples, 0.07%)</title><rect x="799.7" y="659.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="802.7" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$64/1610702581.test (7 samples, 0.06%)</title><rect x="799.9" y="643.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="802.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$2 (4 samples, 0.03%)</title><rect x="800.2" y="627.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="803.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (76 samples, 0.62%)</title><rect x="801.0" y="787.0" width="7.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="804.0" y="798.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (76 samples, 0.62%)</title><rect x="801.0" y="771.0" width="7.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="804.0" y="782.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (75 samples, 0.61%)</title><rect x="801.1" y="755.0" width="7.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="804.1" y="766.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (46 samples, 0.37%)</title><rect x="801.5" y="739.0" width="4.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="804.5" y="750.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (9 samples, 0.07%)</title><rect x="802.5" y="723.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="805.5" y="734.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (3 samples, 0.02%)</title><rect x="802.7" y="707.0" width="0.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="805.7" y="718.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (9 samples, 0.07%)</title><rect x="803.9" y="723.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="806.9" y="734.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (7 samples, 0.06%)</title><rect x="804.1" y="707.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="807.1" y="718.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (5 samples, 0.04%)</title><rect x="804.1" y="691.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="807.1" y="702.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (12 samples, 0.10%)</title><rect x="804.8" y="723.0" width="1.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="807.8" y="734.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (4 samples, 0.03%)</title><rect x="805.0" y="707.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="808.0" y="718.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (5 samples, 0.04%)</title><rect x="805.4" y="707.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="808.4" y="718.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (20 samples, 0.16%)</title><rect x="806.3" y="739.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="809.3" y="750.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (16 samples, 0.13%)</title><rect x="806.7" y="723.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="809.7" y="734.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (5 samples, 0.04%)</title><rect x="806.7" y="707.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="809.7" y="718.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (5 samples, 0.04%)</title><rect x="806.7" y="691.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="809.7" y="702.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (4 samples, 0.03%)</title><rect x="806.7" y="675.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="809.7" y="686.0"></text>
</g>
<g>
<title>sun/net/NetProperties.get (9 samples, 0.07%)</title><rect x="807.3" y="707.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="810.3" y="718.0"></text>
</g>
<g>
<title>java/lang/System.getProperty (4 samples, 0.03%)</title><rect x="807.3" y="691.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="810.3" y="702.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (4 samples, 0.03%)</title><rect x="807.3" y="675.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="810.3" y="686.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (4 samples, 0.03%)</title><rect x="807.3" y="659.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="810.3" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (4 samples, 0.03%)</title><rect x="807.3" y="643.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="810.3" y="654.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (5 samples, 0.04%)</title><rect x="807.7" y="691.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="810.7" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (4 samples, 0.03%)</title><rect x="807.8" y="675.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="810.8" y="686.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (3 samples, 0.02%)</title><rect x="807.8" y="659.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="810.8" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (3 samples, 0.02%)</title><rect x="807.8" y="643.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="810.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (13 samples, 0.11%)</title><rect x="808.6" y="803.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="811.6" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (6 samples, 0.05%)</title><rect x="809.1" y="787.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="812.1" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (6 samples, 0.05%)</title><rect x="809.1" y="771.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="812.1" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (43 samples, 0.35%)</title><rect x="809.8" y="803.0" width="4.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="812.8" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (39 samples, 0.32%)</title><rect x="809.8" y="787.0" width="3.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="812.8" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.&lt;init&gt; (3 samples, 0.02%)</title><rect x="809.8" y="771.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="812.8" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (36 samples, 0.29%)</title><rect x="810.1" y="771.0" width="3.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="813.1" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (35 samples, 0.28%)</title><rect x="810.2" y="755.0" width="3.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="813.2" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (32 samples, 0.26%)</title><rect x="810.3" y="739.0" width="3.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="813.3" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (32 samples, 0.26%)</title><rect x="810.3" y="723.0" width="3.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="813.3" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (32 samples, 0.26%)</title><rect x="810.3" y="707.0" width="3.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="813.3" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (32 samples, 0.26%)</title><rect x="810.3" y="691.0" width="3.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="813.3" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (32 samples, 0.26%)</title><rect x="810.3" y="675.0" width="3.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="813.3" y="686.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (32 samples, 0.26%)</title><rect x="810.3" y="659.0" width="3.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="813.3" y="670.0"></text>
</g>
<g>
<title>Unsafe_Unpark (5 samples, 0.04%)</title><rect x="810.3" y="643.0" width="0.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="813.3" y="654.0"></text>
</g>
<g>
<title>__pthread_cond_signal (27 samples, 0.22%)</title><rect x="810.8" y="643.0" width="2.5" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="813.8" y="654.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (24 samples, 0.19%)</title><rect x="811.1" y="627.0" width="2.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="814.1" y="638.0"></text>
</g>
<g>
<title>do_syscall_64 (24 samples, 0.19%)</title><rect x="811.1" y="611.0" width="2.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="814.1" y="622.0"></text>
</g>
<g>
<title>__x64_sys_futex (23 samples, 0.19%)</title><rect x="811.2" y="595.0" width="2.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="814.2" y="606.0"></text>
</g>
<g>
<title>do_futex (23 samples, 0.19%)</title><rect x="811.2" y="579.0" width="2.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="814.2" y="590.0"></text>
</g>
<g>
<title>futex_wake (21 samples, 0.17%)</title><rect x="811.3" y="563.0" width="2.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="814.3" y="574.0"></text>
</g>
<g>
<title>wake_up_q (19 samples, 0.15%)</title><rect x="811.5" y="547.0" width="1.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="814.5" y="558.0"></text>
</g>
<g>
<title>try_to_wake_up (19 samples, 0.15%)</title><rect x="811.5" y="531.0" width="1.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="814.5" y="542.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (19 samples, 0.15%)</title><rect x="811.5" y="515.0" width="1.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="814.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (4 samples, 0.03%)</title><rect x="813.5" y="787.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="816.5" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (4 samples, 0.03%)</title><rect x="813.5" y="771.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="816.5" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (4 samples, 0.03%)</title><rect x="813.5" y="755.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="816.5" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.&lt;init&gt; (3 samples, 0.02%)</title><rect x="813.6" y="739.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="816.6" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (3 samples, 0.02%)</title><rect x="813.6" y="723.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="816.6" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (26 samples, 0.21%)</title><rect x="814.2" y="867.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="817.2" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (25 samples, 0.20%)</title><rect x="814.3" y="851.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="817.3" y="862.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (23 samples, 0.19%)</title><rect x="814.4" y="835.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="817.4" y="846.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (23 samples, 0.19%)</title><rect x="814.4" y="819.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="817.4" y="830.0"></text>
</g>
<g>
<title>java/util/AbstractMap.isEmpty (3 samples, 0.02%)</title><rect x="814.6" y="803.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="817.6" y="814.0"></text>
</g>
<g>
<title>java/util/TreeMap.size (3 samples, 0.02%)</title><rect x="814.6" y="787.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="817.6" y="798.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (17 samples, 0.14%)</title><rect x="815.0" y="803.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="818.0" y="814.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$115/937225413.accept (17 samples, 0.14%)</title><rect x="815.0" y="787.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="818.0" y="798.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (16 samples, 0.13%)</title><rect x="815.1" y="771.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="818.1" y="782.0"></text>
</g>
<g>
<title>java/lang/String.trim (7 samples, 0.06%)</title><rect x="815.4" y="755.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="818.4" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (7 samples, 0.06%)</title><rect x="815.4" y="739.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="818.4" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (7 samples, 0.06%)</title><rect x="815.4" y="723.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="818.4" y="734.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (6 samples, 0.05%)</title><rect x="815.4" y="707.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="818.4" y="718.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (6 samples, 0.05%)</title><rect x="815.4" y="691.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="818.4" y="702.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.02%)</title><rect x="815.4" y="675.0" width="0.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="818.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$63/1433666880.test (3 samples, 0.02%)</title><rect x="815.7" y="675.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="818.7" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.02%)</title><rect x="816.0" y="755.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="819.0" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.02%)</title><rect x="816.0" y="739.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="819.0" y="750.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$118/2131634163.get$Lambda (3 samples, 0.02%)</title><rect x="816.0" y="723.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="819.0" y="734.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$118/2131634163.&lt;init&gt; (3 samples, 0.02%)</title><rect x="816.0" y="707.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="819.0" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.setHeader (21 samples, 0.17%)</title><rect x="816.7" y="867.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="819.7" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.setHeader (19 samples, 0.15%)</title><rect x="816.9" y="851.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="819.9" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkNameAndValue (15 samples, 0.12%)</title><rect x="816.9" y="835.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="819.9" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$63/1433666880.test (7 samples, 0.06%)</title><rect x="816.9" y="819.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="819.9" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$1 (5 samples, 0.04%)</title><rect x="817.1" y="803.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="820.1" y="814.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.contains (5 samples, 0.04%)</title><rect x="817.1" y="787.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="820.1" y="798.0"></text>
</g>
<g>
<title>java/util/TreeSet.contains (3 samples, 0.02%)</title><rect x="817.3" y="771.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="820.3" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.isValidName (8 samples, 0.06%)</title><rect x="817.5" y="819.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="820.5" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (4 samples, 0.03%)</title><rect x="818.3" y="835.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="821.3" y="846.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (3 samples, 0.02%)</title><rect x="818.4" y="819.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="821.4" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.getFirstResponses (30 samples, 0.24%)</title><rect x="818.7" y="867.0" width="2.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="821.7" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.orTimeout (27 samples, 0.22%)</title><rect x="818.8" y="851.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="821.8" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Delayer.delay (24 samples, 0.19%)</title><rect x="818.8" y="835.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="821.8" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor.schedule (24 samples, 0.19%)</title><rect x="818.8" y="819.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="821.8" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor.delayedExecute (23 samples, 0.19%)</title><rect x="818.9" y="803.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="821.9" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.add (22 samples, 0.18%)</title><rect x="818.9" y="787.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="821.9" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.add (22 samples, 0.18%)</title><rect x="818.9" y="771.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="821.9" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.offer (22 samples, 0.18%)</title><rect x="818.9" y="755.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="821.9" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (5 samples, 0.04%)</title><rect x="819.0" y="739.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="822.0" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (5 samples, 0.04%)</title><rect x="819.0" y="723.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="822.0" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (16 samples, 0.13%)</title><rect x="819.5" y="739.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="822.5" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (16 samples, 0.13%)</title><rect x="819.5" y="723.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="822.5" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (16 samples, 0.13%)</title><rect x="819.5" y="707.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="822.5" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (16 samples, 0.13%)</title><rect x="819.5" y="691.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="822.5" y="702.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (16 samples, 0.13%)</title><rect x="819.5" y="675.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="822.5" y="686.0"></text>
</g>
<g>
<title>__pthread_cond_signal (14 samples, 0.11%)</title><rect x="819.7" y="659.0" width="1.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="822.7" y="670.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 0.09%)</title><rect x="819.9" y="643.0" width="1.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="822.9" y="654.0"></text>
</g>
<g>
<title>do_syscall_64 (11 samples, 0.09%)</title><rect x="819.9" y="627.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="822.9" y="638.0"></text>
</g>
<g>
<title>__x64_sys_futex (11 samples, 0.09%)</title><rect x="819.9" y="611.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="822.9" y="622.0"></text>
</g>
<g>
<title>do_futex (11 samples, 0.09%)</title><rect x="819.9" y="595.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="822.9" y="606.0"></text>
</g>
<g>
<title>futex_wake (11 samples, 0.09%)</title><rect x="819.9" y="579.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="822.9" y="590.0"></text>
</g>
<g>
<title>wake_up_q (9 samples, 0.07%)</title><rect x="820.1" y="563.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="823.1" y="574.0"></text>
</g>
<g>
<title>try_to_wake_up (9 samples, 0.07%)</title><rect x="820.1" y="547.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="823.1" y="558.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (9 samples, 0.07%)</title><rect x="820.1" y="531.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="823.1" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Timeout.&lt;init&gt; (3 samples, 0.02%)</title><rect x="821.1" y="835.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="824.1" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.sendResponse (506 samples, 4.10%)</title><rect x="821.6" y="883.0" width="48.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="824.6" y="894.0">ru/m..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (506 samples, 4.10%)</title><rect x="821.6" y="867.0" width="48.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="824.6" y="878.0">one/..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (6 samples, 0.05%)</title><rect x="821.8" y="851.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="824.8" y="862.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (6 samples, 0.05%)</title><rect x="821.8" y="835.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="824.8" y="846.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (6 samples, 0.05%)</title><rect x="821.8" y="819.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="824.8" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (496 samples, 4.01%)</title><rect x="822.3" y="851.0" width="47.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="825.3" y="862.0">one/..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (16 samples, 0.13%)</title><rect x="822.3" y="835.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="825.3" y="846.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (13 samples, 0.11%)</title><rect x="822.6" y="819.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="825.6" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (5 samples, 0.04%)</title><rect x="822.7" y="803.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="825.7" y="814.0"></text>
</g>
<g>
<title>java/lang/String.charAt (3 samples, 0.02%)</title><rect x="822.8" y="787.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="825.8" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (7 samples, 0.06%)</title><rect x="823.2" y="803.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="826.2" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (7 samples, 0.06%)</title><rect x="823.2" y="787.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="826.2" y="798.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (480 samples, 3.88%)</title><rect x="823.9" y="835.0" width="45.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="826.9" y="846.0">one/..</text>
</g>
<g>
<title>one/nio/net/Session.write (478 samples, 3.87%)</title><rect x="824.0" y="819.0" width="45.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="827.0" y="830.0">one/..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (474 samples, 3.84%)</title><rect x="824.3" y="803.0" width="45.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="827.3" y="814.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (473 samples, 3.83%)</title><rect x="824.4" y="787.0" width="45.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="827.4" y="798.0">one/..</text>
</g>
<g>
<title>.annobin_send.c (455 samples, 3.68%)</title><rect x="824.6" y="771.0" width="43.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="827.6" y="782.0">.ann..</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (6 samples, 0.05%)</title><rect x="825.4" y="755.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="828.4" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (440 samples, 3.56%)</title><rect x="826.0" y="755.0" width="42.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="829.0" y="766.0">entr..</text>
</g>
<g>
<title>do_syscall_64 (440 samples, 3.56%)</title><rect x="826.0" y="739.0" width="42.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="829.0" y="750.0">do_s..</text>
</g>
<g>
<title>__x64_sys_sendto (430 samples, 3.48%)</title><rect x="827.0" y="723.0" width="41.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="830.0" y="734.0">__x..</text>
</g>
<g>
<title>__sys_sendto (429 samples, 3.47%)</title><rect x="827.1" y="707.0" width="41.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="830.1" y="718.0">__s..</text>
</g>
<g>
<title>sock_sendmsg (414 samples, 3.35%)</title><rect x="827.9" y="691.0" width="39.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="830.9" y="702.0">soc..</text>
</g>
<g>
<title>security_socket_sendmsg (7 samples, 0.06%)</title><rect x="828.0" y="675.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="831.0" y="686.0"></text>
</g>
<g>
<title>sock_has_perm (6 samples, 0.05%)</title><rect x="828.1" y="659.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="831.1" y="670.0"></text>
</g>
<g>
<title>tcp_sendmsg (406 samples, 3.29%)</title><rect x="828.6" y="675.0" width="38.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="831.6" y="686.0">tcp..</text>
</g>
<g>
<title>release_sock (3 samples, 0.02%)</title><rect x="828.6" y="659.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="831.6" y="670.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (403 samples, 3.26%)</title><rect x="828.9" y="659.0" width="38.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="831.9" y="670.0">tcp..</text>
</g>
<g>
<title>__check_object_size (5 samples, 0.04%)</title><rect x="828.9" y="643.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="831.9" y="654.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (365 samples, 2.95%)</title><rect x="829.4" y="643.0" width="34.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="832.4" y="654.0">__..</text>
</g>
<g>
<title>tcp_write_xmit (365 samples, 2.95%)</title><rect x="829.4" y="627.0" width="34.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="832.4" y="638.0">tc..</text>
</g>
<g>
<title>__tcp_transmit_skb (349 samples, 2.82%)</title><rect x="829.8" y="611.0" width="33.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="832.8" y="622.0">__..</text>
</g>
<g>
<title>__ip_queue_xmit (329 samples, 2.66%)</title><rect x="830.8" y="595.0" width="31.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="833.8" y="606.0">__..</text>
</g>
<g>
<title>__sk_dst_check (3 samples, 0.02%)</title><rect x="831.0" y="579.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="834.0" y="590.0"></text>
</g>
<g>
<title>ip_local_out (81 samples, 0.66%)</title><rect x="831.4" y="579.0" width="7.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="834.4" y="590.0"></text>
</g>
<g>
<title>__ip_local_out (81 samples, 0.66%)</title><rect x="831.4" y="563.0" width="7.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="834.4" y="574.0"></text>
</g>
<g>
<title>nf_hook_slow (79 samples, 0.64%)</title><rect x="831.6" y="547.0" width="7.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="834.6" y="558.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (26 samples, 0.21%)</title><rect x="832.0" y="531.0" width="2.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="835.0" y="542.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag	[nf_defrag_ipv4] (3 samples, 0.02%)</title><rect x="834.9" y="531.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="837.9" y="542.0"></text>
</g>
<g>
<title>ipv4_conntrack_local	[nf_conntrack] (3 samples, 0.02%)</title><rect x="835.2" y="531.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="838.2" y="542.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (30 samples, 0.24%)</title><rect x="835.5" y="531.0" width="2.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="838.5" y="542.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get	[nf_conntrack] (13 samples, 0.11%)</title><rect x="835.9" y="515.0" width="1.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="838.9" y="526.0"></text>
</g>
<g>
<title>get_l4proto	[nf_conntrack] (3 samples, 0.02%)</title><rect x="837.1" y="515.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="840.1" y="526.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet	[nf_conntrack] (8 samples, 0.06%)</title><rect x="837.4" y="515.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="840.4" y="526.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn	[nf_nat] (3 samples, 0.02%)</title><rect x="838.4" y="531.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="841.4" y="542.0"></text>
</g>
<g>
<title>selinux_ipv4_output (5 samples, 0.04%)</title><rect x="838.7" y="531.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="841.7" y="542.0"></text>
</g>
<g>
<title>ip_output (242 samples, 1.96%)</title><rect x="839.1" y="579.0" width="23.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="842.1" y="590.0">i..</text>
</g>
<g>
<title>ip_finish_output2 (221 samples, 1.79%)</title><rect x="839.5" y="563.0" width="21.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="842.5" y="574.0">i..</text>
</g>
<g>
<title>__dev_queue_xmit (24 samples, 0.19%)</title><rect x="840.1" y="547.0" width="2.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="843.1" y="558.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (18 samples, 0.15%)</title><rect x="840.6" y="531.0" width="1.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="843.6" y="542.0"></text>
</g>
<g>
<title>loopback_xmit (17 samples, 0.14%)</title><rect x="840.7" y="515.0" width="1.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="843.7" y="526.0"></text>
</g>
<g>
<title>eth_type_trans (7 samples, 0.06%)</title><rect x="840.7" y="499.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="843.7" y="510.0"></text>
</g>
<g>
<title>netif_rx (9 samples, 0.07%)</title><rect x="841.3" y="499.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="844.3" y="510.0"></text>
</g>
<g>
<title>netif_rx_internal (9 samples, 0.07%)</title><rect x="841.3" y="483.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="844.3" y="494.0"></text>
</g>
<g>
<title>enqueue_to_backlog (7 samples, 0.06%)</title><rect x="841.4" y="467.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="844.4" y="478.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (191 samples, 1.55%)</title><rect x="842.4" y="547.0" width="18.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="845.4" y="558.0"></text>
</g>
<g>
<title>do_softirq.part.0 (190 samples, 1.54%)</title><rect x="842.5" y="531.0" width="18.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="845.5" y="542.0"></text>
</g>
<g>
<title>do_softirq_own_stack (190 samples, 1.54%)</title><rect x="842.5" y="515.0" width="18.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="845.5" y="526.0"></text>
</g>
<g>
<title>__softirqentry_text_start (190 samples, 1.54%)</title><rect x="842.5" y="499.0" width="18.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="845.5" y="510.0"></text>
</g>
<g>
<title>net_rx_action (181 samples, 1.46%)</title><rect x="843.2" y="483.0" width="17.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="846.2" y="494.0"></text>
</g>
<g>
<title>process_backlog (176 samples, 1.42%)</title><rect x="843.7" y="467.0" width="16.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="846.7" y="478.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (170 samples, 1.38%)</title><rect x="844.3" y="451.0" width="16.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="847.3" y="462.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (4 samples, 0.03%)</title><rect x="844.4" y="435.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="847.4" y="446.0"></text>
</g>
<g>
<title>ip_rcv (165 samples, 1.34%)</title><rect x="844.8" y="435.0" width="15.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="847.8" y="446.0"></text>
</g>
<g>
<title>ip_local_deliver (129 samples, 1.04%)</title><rect x="844.8" y="419.0" width="12.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="847.8" y="430.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (106 samples, 0.86%)</title><rect x="845.1" y="403.0" width="10.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="848.1" y="414.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (105 samples, 0.85%)</title><rect x="845.1" y="387.0" width="10.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="848.1" y="398.0"></text>
</g>
<g>
<title>tcp_v4_rcv (101 samples, 0.82%)</title><rect x="845.5" y="371.0" width="9.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="848.5" y="382.0"></text>
</g>
<g>
<title>__inet_lookup_established (9 samples, 0.07%)</title><rect x="845.8" y="355.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="848.8" y="366.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (4 samples, 0.03%)</title><rect x="846.8" y="355.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="849.8" y="366.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (4 samples, 0.03%)</title><rect x="846.8" y="339.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="849.8" y="350.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (3 samples, 0.02%)</title><rect x="846.9" y="323.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="849.9" y="334.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (84 samples, 0.68%)</title><rect x="847.2" y="355.0" width="8.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="850.2" y="366.0"></text>
</g>
<g>
<title>tcp_rcv_established (83 samples, 0.67%)</title><rect x="847.2" y="339.0" width="8.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="850.2" y="350.0"></text>
</g>
<g>
<title>sk_reset_timer (8 samples, 0.06%)</title><rect x="847.5" y="323.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="850.5" y="334.0"></text>
</g>
<g>
<title>mod_timer (8 samples, 0.06%)</title><rect x="847.5" y="307.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="850.5" y="318.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (6 samples, 0.05%)</title><rect x="847.5" y="291.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="850.5" y="302.0"></text>
</g>
<g>
<title>tcp_ack (25 samples, 0.20%)</title><rect x="848.3" y="323.0" width="2.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="851.3" y="334.0"></text>
</g>
<g>
<title>__kfree_skb (8 samples, 0.06%)</title><rect x="849.0" y="307.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="852.0" y="318.0"></text>
</g>
<g>
<title>skb_release_data (4 samples, 0.03%)</title><rect x="849.4" y="291.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="852.4" y="302.0"></text>
</g>
<g>
<title>tcp_data_queue (46 samples, 0.37%)</title><rect x="850.8" y="323.0" width="4.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="853.8" y="334.0"></text>
</g>
<g>
<title>sock_def_readable (36 samples, 0.29%)</title><rect x="851.1" y="307.0" width="3.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="854.1" y="318.0"></text>
</g>
<g>
<title>__wake_up_common_lock (35 samples, 0.28%)</title><rect x="851.2" y="291.0" width="3.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="854.2" y="302.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (35 samples, 0.28%)</title><rect x="851.2" y="275.0" width="3.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="854.2" y="286.0"></text>
</g>
<g>
<title>tcp_event_data_recv (4 samples, 0.03%)</title><rect x="854.5" y="307.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="857.5" y="318.0"></text>
</g>
<g>
<title>tcp_queue_rcv (3 samples, 0.02%)</title><rect x="854.9" y="307.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="857.9" y="318.0"></text>
</g>
<g>
<title>nf_hook_slow (20 samples, 0.16%)</title><rect x="855.2" y="403.0" width="1.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="858.2" y="414.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (16 samples, 0.13%)</title><rect x="855.4" y="387.0" width="1.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="858.4" y="398.0"></text>
</g>
<g>
<title>conntrack_mt	[xt_conntrack] (5 samples, 0.04%)</title><rect x="856.4" y="371.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="859.4" y="382.0"></text>
</g>
<g>
<title>ip_rcv_finish (4 samples, 0.03%)</title><rect x="857.2" y="419.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="860.2" y="430.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.0 (4 samples, 0.03%)</title><rect x="857.2" y="403.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="860.2" y="414.0"></text>
</g>
<g>
<title>nf_hook_slow (31 samples, 0.25%)</title><rect x="857.6" y="419.0" width="2.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="860.6" y="430.0"></text>
</g>
<g>
<title>ip_sabotage_in	[br_netfilter] (4 samples, 0.03%)</title><rect x="858.0" y="403.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="861.0" y="414.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (16 samples, 0.13%)</title><rect x="858.4" y="403.0" width="1.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="861.4" y="414.0"></text>
</g>
<g>
<title>nf_nat_ipv4_in	[nf_nat] (3 samples, 0.02%)</title><rect x="860.2" y="403.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="863.2" y="414.0"></text>
</g>
<g>
<title>nf_hook_slow (15 samples, 0.12%)</title><rect x="860.8" y="563.0" width="1.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="863.8" y="574.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (5 samples, 0.04%)</title><rect x="860.9" y="547.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="863.9" y="558.0"></text>
</g>
<g>
<title>nf_nat_ipv4_out	[nf_nat] (3 samples, 0.02%)</title><rect x="861.7" y="547.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="864.7" y="558.0"></text>
</g>
<g>
<title>selinux_ip_postroute (3 samples, 0.02%)</title><rect x="862.0" y="547.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="865.0" y="558.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (4 samples, 0.03%)</title><rect x="862.4" y="595.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="865.4" y="606.0"></text>
</g>
<g>
<title>ktime_get (3 samples, 0.02%)</title><rect x="863.1" y="611.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="866.1" y="622.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (5 samples, 0.04%)</title><rect x="863.4" y="611.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="866.4" y="622.0"></text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.02%)</title><rect x="863.6" y="595.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="866.6" y="606.0"></text>
</g>
<g>
<title>mod_timer (3 samples, 0.02%)</title><rect x="863.6" y="579.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="866.6" y="590.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.02%)</title><rect x="863.6" y="563.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="866.6" y="574.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (4 samples, 0.03%)</title><rect x="863.9" y="611.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="866.9" y="622.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (18 samples, 0.15%)</title><rect x="864.3" y="643.0" width="1.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="867.3" y="654.0"></text>
</g>
<g>
<title>__alloc_skb (17 samples, 0.14%)</title><rect x="864.4" y="627.0" width="1.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="867.4" y="638.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (7 samples, 0.06%)</title><rect x="864.8" y="611.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="867.8" y="622.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (7 samples, 0.06%)</title><rect x="864.8" y="595.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="867.8" y="606.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (6 samples, 0.05%)</title><rect x="865.5" y="611.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="868.5" y="622.0"></text>
</g>
<g>
<title>skb_entail (4 samples, 0.03%)</title><rect x="866.1" y="643.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="869.1" y="654.0"></text>
</g>
<g>
<title>tcp_send_mss (9 samples, 0.07%)</title><rect x="866.5" y="643.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="869.5" y="654.0"></text>
</g>
<g>
<title>tcp_current_mss (9 samples, 0.07%)</title><rect x="866.5" y="627.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="869.5" y="638.0"></text>
</g>
<g>
<title>ipv4_mtu (3 samples, 0.02%)</title><rect x="867.1" y="611.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="870.1" y="622.0"></text>
</g>
<g>
<title>sockfd_lookup_light (7 samples, 0.06%)</title><rect x="867.4" y="691.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="870.4" y="702.0"></text>
</g>
<g>
<title>__fget_light (6 samples, 0.05%)</title><rect x="867.5" y="675.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="870.5" y="686.0"></text>
</g>
<g>
<title>__fget (4 samples, 0.03%)</title><rect x="867.7" y="659.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="870.7" y="670.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.12%)</title><rect x="868.1" y="771.0" width="1.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="871.1" y="782.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.12%)</title><rect x="868.1" y="755.0" width="1.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="871.1" y="766.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (10 samples, 0.08%)</title><rect x="868.1" y="739.0" width="0.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="871.1" y="750.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (4 samples, 0.03%)</title><rect x="868.6" y="723.0" width="0.4" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="871.6" y="734.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (3 samples, 0.02%)</title><rect x="869.0" y="739.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="872.0" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/Value.from (22 samples, 0.18%)</title><rect x="869.9" y="883.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="872.9" y="894.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Cell.getData (19 samples, 0.15%)</title><rect x="870.2" y="867.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="873.2" y="878.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (16 samples, 0.13%)</title><rect x="870.3" y="851.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="873.3" y="862.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (16 samples, 0.13%)</title><rect x="870.3" y="835.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="873.3" y="846.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (13 samples, 0.11%)</title><rect x="870.4" y="819.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="873.4" y="830.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (13 samples, 0.11%)</title><rect x="870.4" y="803.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="873.4" y="814.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (12 samples, 0.10%)</title><rect x="870.5" y="787.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="873.5" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.02%)</title><rect x="870.7" y="771.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="873.7" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.02%)</title><rect x="870.7" y="755.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="873.7" y="766.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (5 samples, 0.04%)</title><rect x="871.0" y="771.0" width="0.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="874.0" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/ConsistentHashImpl.replicas (43 samples, 0.35%)</title><rect x="872.1" y="883.0" width="4.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="875.1" y="894.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (11 samples, 0.09%)</title><rect x="872.1" y="867.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="875.1" y="878.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (11 samples, 0.09%)</title><rect x="872.1" y="851.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="875.1" y="862.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap$AscendingEntrySetView.iterator (8 samples, 0.06%)</title><rect x="872.1" y="835.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="875.1" y="846.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap.absLowest (6 samples, 0.05%)</title><rect x="872.3" y="819.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="875.3" y="830.0"></text>
</g>
<g>
<title>java/util/TreeMap.getCeilingEntry (5 samples, 0.04%)</title><rect x="872.4" y="803.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="875.4" y="814.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (5 samples, 0.04%)</title><rect x="872.4" y="787.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="875.4" y="798.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (3 samples, 0.02%)</title><rect x="872.6" y="771.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="875.6" y="782.0"></text>
</g>
<g>
<title>java/util/TreeMap$DescendingSubMap$DescendingEntrySetView.iterator (3 samples, 0.02%)</title><rect x="872.8" y="835.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="875.8" y="846.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$DescendingSubMapEntryIterator.&lt;init&gt; (3 samples, 0.02%)</title><rect x="872.8" y="819.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="875.8" y="830.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapIterator.&lt;init&gt; (3 samples, 0.02%)</title><rect x="872.8" y="803.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="875.8" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/ConsistentHashImpl.firstReplica (31 samples, 0.25%)</title><rect x="873.2" y="867.0" width="3.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="876.2" y="878.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.hashBytes (29 samples, 0.23%)</title><rect x="873.3" y="851.0" width="2.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="876.3" y="862.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.newHasher (5 samples, 0.04%)</title><rect x="873.3" y="835.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="876.3" y="846.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction.newHasher (4 samples, 0.03%)</title><rect x="873.4" y="819.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="876.4" y="830.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.&lt;init&gt; (4 samples, 0.03%)</title><rect x="873.4" y="803.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="876.4" y="814.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.&lt;init&gt; (4 samples, 0.03%)</title><rect x="873.4" y="787.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="876.4" y="798.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.&lt;init&gt; (4 samples, 0.03%)</title><rect x="873.4" y="771.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="876.4" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (4 samples, 0.03%)</title><rect x="873.4" y="755.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="876.4" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.03%)</title><rect x="873.4" y="739.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="876.4" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.03%)</title><rect x="873.4" y="723.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="876.4" y="734.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.03%)</title><rect x="873.4" y="707.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="876.4" y="718.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.hash (14 samples, 0.11%)</title><rect x="873.8" y="835.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="876.8" y="846.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.munch (4 samples, 0.03%)</title><rect x="873.8" y="819.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="876.8" y="830.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.compact (4 samples, 0.03%)</title><rect x="873.8" y="803.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="876.8" y="814.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.makeHash (10 samples, 0.08%)</title><rect x="874.2" y="819.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="877.2" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (9 samples, 0.07%)</title><rect x="874.3" y="803.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="877.3" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (9 samples, 0.07%)</title><rect x="874.3" y="787.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="877.3" y="798.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (8 samples, 0.06%)</title><rect x="874.4" y="771.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="877.4" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (8 samples, 0.06%)</title><rect x="874.4" y="755.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="877.4" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteOrder.nativeOrder (3 samples, 0.02%)</title><rect x="874.8" y="739.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="877.8" y="750.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.putBytes (10 samples, 0.08%)</title><rect x="875.1" y="835.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="878.1" y="846.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.putBytesInternal (10 samples, 0.08%)</title><rect x="875.1" y="819.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="878.1" y="830.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (10 samples, 0.08%)</title><rect x="875.1" y="803.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="878.1" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/MetaRequest.&lt;init&gt; (39 samples, 0.32%)</title><rect x="876.2" y="899.0" width="3.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="879.2" y="910.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (26 samples, 0.21%)</title><rect x="877.4" y="883.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="880.4" y="894.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (11 samples, 0.09%)</title><rect x="877.8" y="867.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="880.8" y="878.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (8 samples, 0.06%)</title><rect x="878.1" y="851.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="881.1" y="862.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.02%)</title><rect x="878.6" y="835.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="881.6" y="846.0"></text>
</g>
<g>
<title>java/lang/String.substring (5 samples, 0.04%)</title><rect x="879.1" y="867.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="882.1" y="878.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (3 samples, 0.02%)</title><rect x="879.2" y="851.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="882.2" y="862.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (4 samples, 0.03%)</title><rect x="879.5" y="867.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="882.5" y="878.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.03%)</title><rect x="879.5" y="851.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="882.5" y="862.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.03%)</title><rect x="879.5" y="835.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="882.5" y="846.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (4 samples, 0.03%)</title><rect x="879.5" y="819.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="882.5" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (726 samples, 5.88%)</title><rect x="880.0" y="995.0" width="69.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="883.0" y="1006.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (726 samples, 5.88%)</title><rect x="880.0" y="979.0" width="69.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="883.0" y="990.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (476 samples, 3.85%)</title><rect x="881.9" y="963.0" width="45.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="884.9" y="974.0">java..</text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LILL_Z (5 samples, 0.04%)</title><rect x="882.3" y="947.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="885.3" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (465 samples, 3.76%)</title><rect x="882.8" y="947.0" width="44.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="885.8" y="958.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.nextLocalTask (3 samples, 0.02%)</title><rect x="882.8" y="931.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="885.8" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.poll (4 samples, 0.03%)</title><rect x="883.1" y="931.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="886.1" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (458 samples, 3.71%)</title><rect x="883.4" y="931.0" width="43.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="886.4" y="942.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (458 samples, 3.71%)</title><rect x="883.4" y="915.0" width="43.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="886.4" y="926.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (458 samples, 3.71%)</title><rect x="883.4" y="899.0" width="43.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="886.4" y="910.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (139 samples, 1.12%)</title><rect x="883.6" y="883.0" width="13.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="886.6" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (138 samples, 1.12%)</title><rect x="883.7" y="867.0" width="13.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="886.7" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (132 samples, 1.07%)</title><rect x="884.1" y="851.0" width="12.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="887.1" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (131 samples, 1.06%)</title><rect x="884.2" y="835.0" width="12.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="887.2" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Canceller.accept (10 samples, 0.08%)</title><rect x="884.2" y="819.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="887.2" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Canceller.accept (10 samples, 0.08%)</title><rect x="884.2" y="803.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="887.2" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$ScheduledFutureTask.cancel (10 samples, 0.08%)</title><rect x="884.2" y="787.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="887.2" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.remove (7 samples, 0.06%)</title><rect x="884.5" y="771.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="887.5" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.remove (7 samples, 0.06%)</title><rect x="884.5" y="755.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="887.5" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (7 samples, 0.06%)</title><rect x="884.5" y="739.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="887.5" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (5 samples, 0.04%)</title><rect x="884.7" y="723.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="887.7" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (3 samples, 0.02%)</title><rect x="884.8" y="707.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="887.8" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (121 samples, 0.98%)</title><rect x="885.2" y="819.0" width="11.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="888.2" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (110 samples, 0.89%)</title><rect x="885.4" y="803.0" width="10.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="888.4" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (110 samples, 0.89%)</title><rect x="885.4" y="787.0" width="10.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="888.4" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (110 samples, 0.89%)</title><rect x="885.4" y="771.0" width="10.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="888.4" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (110 samples, 0.89%)</title><rect x="885.4" y="755.0" width="10.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="888.4" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (107 samples, 0.87%)</title><rect x="885.6" y="739.0" width="10.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="888.6" y="750.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (107 samples, 0.87%)</title><rect x="885.6" y="723.0" width="10.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="888.6" y="734.0"></text>
</g>
<g>
<title>Unsafe_Unpark (14 samples, 0.11%)</title><rect x="885.8" y="707.0" width="1.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="888.8" y="718.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (3 samples, 0.02%)</title><rect x="886.4" y="691.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="889.4" y="702.0"></text>
</g>
<g>
<title>__pthread_cond_signal (90 samples, 0.73%)</title><rect x="887.2" y="707.0" width="8.6" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="890.2" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (74 samples, 0.60%)</title><rect x="888.7" y="691.0" width="7.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="891.7" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (74 samples, 0.60%)</title><rect x="888.7" y="675.0" width="7.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="891.7" y="686.0"></text>
</g>
<g>
<title>__x64_sys_futex (69 samples, 0.56%)</title><rect x="889.2" y="659.0" width="6.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="892.2" y="670.0"></text>
</g>
<g>
<title>do_futex (68 samples, 0.55%)</title><rect x="889.3" y="643.0" width="6.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="892.3" y="654.0"></text>
</g>
<g>
<title>futex_wake (68 samples, 0.55%)</title><rect x="889.3" y="627.0" width="6.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="892.3" y="638.0"></text>
</g>
<g>
<title>mark_wake_futex (7 samples, 0.06%)</title><rect x="890.0" y="611.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="893.0" y="622.0"></text>
</g>
<g>
<title>wake_up_q (53 samples, 0.43%)</title><rect x="890.7" y="611.0" width="5.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="893.7" y="622.0"></text>
</g>
<g>
<title>try_to_wake_up (53 samples, 0.43%)</title><rect x="890.7" y="595.0" width="5.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="893.7" y="606.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (51 samples, 0.41%)</title><rect x="890.9" y="579.0" width="4.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="893.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (9 samples, 0.07%)</title><rect x="895.9" y="803.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="898.9" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (9 samples, 0.07%)</title><rect x="895.9" y="787.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="898.9" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (9 samples, 0.07%)</title><rect x="895.9" y="771.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="898.9" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (9 samples, 0.07%)</title><rect x="895.9" y="755.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="898.9" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (9 samples, 0.07%)</title><rect x="895.9" y="739.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="898.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (9 samples, 0.07%)</title><rect x="895.9" y="723.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="898.9" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (9 samples, 0.07%)</title><rect x="895.9" y="707.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="898.9" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.enq (9 samples, 0.07%)</title><rect x="895.9" y="691.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="898.9" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetTail (9 samples, 0.07%)</title><rect x="895.9" y="675.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="898.9" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Canceller.accept (3 samples, 0.02%)</title><rect x="896.3" y="659.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="899.3" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (317 samples, 2.57%)</title><rect x="896.9" y="883.0" width="30.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="899.9" y="894.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (12 samples, 0.10%)</title><rect x="896.9" y="867.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="899.9" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (12 samples, 0.10%)</title><rect x="896.9" y="851.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="899.9" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (12 samples, 0.10%)</title><rect x="896.9" y="835.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="899.9" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (12 samples, 0.10%)</title><rect x="896.9" y="819.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="899.9" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (11 samples, 0.09%)</title><rect x="896.9" y="803.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="899.9" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (11 samples, 0.09%)</title><rect x="896.9" y="787.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="899.9" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (11 samples, 0.09%)</title><rect x="896.9" y="771.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="899.9" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (11 samples, 0.09%)</title><rect x="896.9" y="755.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="899.9" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.enq (11 samples, 0.09%)</title><rect x="896.9" y="739.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="899.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetTail (11 samples, 0.09%)</title><rect x="896.9" y="723.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="899.9" y="734.0"></text>
</g>
<g>
<title>itable stub (4 samples, 0.03%)</title><rect x="897.4" y="707.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="900.4" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService$$Lambda$140/507376197.accept (28 samples, 0.23%)</title><rect x="898.1" y="867.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="901.1" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.lambda$getFirstResponses$6 (28 samples, 0.23%)</title><rect x="898.1" y="851.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="901.1" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (24 samples, 0.19%)</title><rect x="898.1" y="835.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="901.1" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (24 samples, 0.19%)</title><rect x="898.1" y="819.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="901.1" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (23 samples, 0.19%)</title><rect x="898.2" y="803.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="901.2" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (23 samples, 0.19%)</title><rect x="898.2" y="787.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="901.2" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (23 samples, 0.19%)</title><rect x="898.2" y="771.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="901.2" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (23 samples, 0.19%)</title><rect x="898.2" y="755.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="901.2" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (23 samples, 0.19%)</title><rect x="898.2" y="739.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="901.2" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (23 samples, 0.19%)</title><rect x="898.2" y="723.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="901.2" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (23 samples, 0.19%)</title><rect x="898.2" y="707.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="901.2" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (23 samples, 0.19%)</title><rect x="898.2" y="691.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="901.2" y="702.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (23 samples, 0.19%)</title><rect x="898.2" y="675.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="901.2" y="686.0"></text>
</g>
<g>
<title>__pthread_cond_signal (21 samples, 0.17%)</title><rect x="898.3" y="659.0" width="2.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="901.3" y="670.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (17 samples, 0.14%)</title><rect x="898.7" y="643.0" width="1.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="901.7" y="654.0"></text>
</g>
<g>
<title>do_syscall_64 (17 samples, 0.14%)</title><rect x="898.7" y="627.0" width="1.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="901.7" y="638.0"></text>
</g>
<g>
<title>__x64_sys_futex (16 samples, 0.13%)</title><rect x="898.8" y="611.0" width="1.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="901.8" y="622.0"></text>
</g>
<g>
<title>do_futex (16 samples, 0.13%)</title><rect x="898.8" y="595.0" width="1.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="901.8" y="606.0"></text>
</g>
<g>
<title>futex_wake (16 samples, 0.13%)</title><rect x="898.8" y="579.0" width="1.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="901.8" y="590.0"></text>
</g>
<g>
<title>mark_wake_futex (3 samples, 0.02%)</title><rect x="899.0" y="563.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="902.0" y="574.0"></text>
</g>
<g>
<title>wake_up_q (11 samples, 0.09%)</title><rect x="899.3" y="563.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="902.3" y="574.0"></text>
</g>
<g>
<title>try_to_wake_up (11 samples, 0.09%)</title><rect x="899.3" y="547.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="902.3" y="558.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (11 samples, 0.09%)</title><rect x="899.3" y="531.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="902.3" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.add (3 samples, 0.02%)</title><rect x="900.3" y="835.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="903.3" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService$$Lambda$321/825868292.accept (277 samples, 2.24%)</title><rect x="900.7" y="867.0" width="26.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="903.7" y="878.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.lambda$get$0 (276 samples, 2.23%)</title><rect x="900.8" y="851.0" width="26.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="903.8" y="862.0">r..</text>
</g>
<g>
<title>java/util/ArrayList.add (4 samples, 0.03%)</title><rect x="901.1" y="835.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="904.1" y="846.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3 samples, 0.02%)</title><rect x="901.2" y="819.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="904.2" y="830.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (3 samples, 0.02%)</title><rect x="901.2" y="803.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="904.2" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.sendResponse (232 samples, 1.88%)</title><rect x="902.0" y="835.0" width="22.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="905.0" y="846.0">r..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (232 samples, 1.88%)</title><rect x="902.0" y="819.0" width="22.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="905.0" y="830.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (227 samples, 1.84%)</title><rect x="902.2" y="803.0" width="21.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="905.2" y="814.0">o..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (9 samples, 0.07%)</title><rect x="902.2" y="787.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="905.2" y="798.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (6 samples, 0.05%)</title><rect x="902.4" y="771.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="905.4" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (218 samples, 1.76%)</title><rect x="903.0" y="787.0" width="20.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="906.0" y="798.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (218 samples, 1.76%)</title><rect x="903.0" y="771.0" width="20.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="906.0" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (217 samples, 1.76%)</title><rect x="903.1" y="755.0" width="20.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="906.1" y="766.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (215 samples, 1.74%)</title><rect x="903.3" y="739.0" width="20.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="906.3" y="750.0"></text>
</g>
<g>
<title>.annobin_send.c (207 samples, 1.68%)</title><rect x="903.4" y="723.0" width="19.8" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="906.4" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (200 samples, 1.62%)</title><rect x="904.1" y="707.0" width="19.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="907.1" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (200 samples, 1.62%)</title><rect x="904.1" y="691.0" width="19.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="907.1" y="702.0"></text>
</g>
<g>
<title>__x64_sys_sendto (196 samples, 1.59%)</title><rect x="904.4" y="675.0" width="18.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="907.4" y="686.0"></text>
</g>
<g>
<title>__sys_sendto (196 samples, 1.59%)</title><rect x="904.4" y="659.0" width="18.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="907.4" y="670.0"></text>
</g>
<g>
<title>sock_sendmsg (189 samples, 1.53%)</title><rect x="904.7" y="643.0" width="18.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="907.7" y="654.0"></text>
</g>
<g>
<title>security_socket_sendmsg (4 samples, 0.03%)</title><rect x="904.7" y="627.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="907.7" y="638.0"></text>
</g>
<g>
<title>sock_has_perm (4 samples, 0.03%)</title><rect x="904.7" y="611.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="907.7" y="622.0"></text>
</g>
<g>
<title>tcp_sendmsg (185 samples, 1.50%)</title><rect x="905.1" y="627.0" width="17.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="908.1" y="638.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (183 samples, 1.48%)</title><rect x="905.3" y="611.0" width="17.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="908.3" y="622.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (168 samples, 1.36%)</title><rect x="905.5" y="595.0" width="16.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="908.5" y="606.0"></text>
</g>
<g>
<title>tcp_write_xmit (168 samples, 1.36%)</title><rect x="905.5" y="579.0" width="16.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="908.5" y="590.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (160 samples, 1.29%)</title><rect x="905.7" y="563.0" width="15.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="908.7" y="574.0"></text>
</g>
<g>
<title>__ip_queue_xmit (155 samples, 1.25%)</title><rect x="905.9" y="547.0" width="14.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="908.9" y="558.0"></text>
</g>
<g>
<title>ip_local_out (31 samples, 0.25%)</title><rect x="906.0" y="531.0" width="2.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="909.0" y="542.0"></text>
</g>
<g>
<title>__ip_local_out (31 samples, 0.25%)</title><rect x="906.0" y="515.0" width="2.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="909.0" y="526.0"></text>
</g>
<g>
<title>nf_hook_slow (30 samples, 0.24%)</title><rect x="906.1" y="499.0" width="2.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="909.1" y="510.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (6 samples, 0.05%)</title><rect x="906.1" y="483.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="909.1" y="494.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (13 samples, 0.11%)</title><rect x="907.3" y="483.0" width="1.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="910.3" y="494.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet	[nf_conntrack] (8 samples, 0.06%)</title><rect x="907.7" y="467.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="910.7" y="478.0"></text>
</g>
<g>
<title>nf_ct_seq_offset	[nf_conntrack] (4 samples, 0.03%)</title><rect x="908.1" y="451.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="911.1" y="462.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn	[nf_nat] (4 samples, 0.03%)</title><rect x="908.6" y="483.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="911.6" y="494.0"></text>
</g>
<g>
<title>ip_output (123 samples, 1.00%)</title><rect x="908.9" y="531.0" width="11.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="911.9" y="542.0"></text>
</g>
<g>
<title>ip_finish_output2 (115 samples, 0.93%)</title><rect x="909.0" y="515.0" width="11.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="912.0" y="526.0"></text>
</g>
<g>
<title>__dev_queue_xmit (10 samples, 0.08%)</title><rect x="909.3" y="499.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="912.3" y="510.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (9 samples, 0.07%)</title><rect x="909.4" y="483.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="912.4" y="494.0"></text>
</g>
<g>
<title>loopback_xmit (8 samples, 0.06%)</title><rect x="909.5" y="467.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="912.5" y="478.0"></text>
</g>
<g>
<title>netif_rx (3 samples, 0.02%)</title><rect x="909.7" y="451.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="912.7" y="462.0"></text>
</g>
<g>
<title>netif_rx_internal (3 samples, 0.02%)</title><rect x="909.7" y="435.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="912.7" y="446.0"></text>
</g>
<g>
<title>tcp_wfree (3 samples, 0.02%)</title><rect x="910.0" y="451.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="913.0" y="462.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (102 samples, 0.83%)</title><rect x="910.3" y="499.0" width="9.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="913.3" y="510.0"></text>
</g>
<g>
<title>do_softirq.part.0 (102 samples, 0.83%)</title><rect x="910.3" y="483.0" width="9.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="913.3" y="494.0"></text>
</g>
<g>
<title>do_softirq_own_stack (100 samples, 0.81%)</title><rect x="910.5" y="467.0" width="9.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="913.5" y="478.0"></text>
</g>
<g>
<title>__softirqentry_text_start (100 samples, 0.81%)</title><rect x="910.5" y="451.0" width="9.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="913.5" y="462.0"></text>
</g>
<g>
<title>net_rx_action (99 samples, 0.80%)</title><rect x="910.6" y="435.0" width="9.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="913.6" y="446.0"></text>
</g>
<g>
<title>process_backlog (97 samples, 0.79%)</title><rect x="910.8" y="419.0" width="9.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="913.8" y="430.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (95 samples, 0.77%)</title><rect x="910.9" y="403.0" width="9.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="913.9" y="414.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (3 samples, 0.02%)</title><rect x="910.9" y="387.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="913.9" y="398.0"></text>
</g>
<g>
<title>ip_rcv (92 samples, 0.74%)</title><rect x="911.2" y="387.0" width="8.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="914.2" y="398.0"></text>
</g>
<g>
<title>ip_local_deliver (71 samples, 0.57%)</title><rect x="911.2" y="371.0" width="6.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="914.2" y="382.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (56 samples, 0.45%)</title><rect x="911.4" y="355.0" width="5.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="914.4" y="366.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (55 samples, 0.45%)</title><rect x="911.5" y="339.0" width="5.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="914.5" y="350.0"></text>
</g>
<g>
<title>tcp_v4_rcv (53 samples, 0.43%)</title><rect x="911.7" y="323.0" width="5.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="914.7" y="334.0"></text>
</g>
<g>
<title>__inet_lookup_established (5 samples, 0.04%)</title><rect x="912.0" y="307.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="915.0" y="318.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (44 samples, 0.36%)</title><rect x="912.6" y="307.0" width="4.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="915.6" y="318.0"></text>
</g>
<g>
<title>tcp_rcv_established (44 samples, 0.36%)</title><rect x="912.6" y="291.0" width="4.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="915.6" y="302.0"></text>
</g>
<g>
<title>sk_reset_timer (4 samples, 0.03%)</title><rect x="912.6" y="275.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="915.6" y="286.0"></text>
</g>
<g>
<title>mod_timer (4 samples, 0.03%)</title><rect x="912.6" y="259.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="915.6" y="270.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.03%)</title><rect x="912.6" y="243.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="915.6" y="254.0"></text>
</g>
<g>
<title>tcp_ack (12 samples, 0.10%)</title><rect x="913.0" y="275.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="916.0" y="286.0"></text>
</g>
<g>
<title>__kfree_skb (4 samples, 0.03%)</title><rect x="913.3" y="259.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="916.3" y="270.0"></text>
</g>
<g>
<title>tcp_data_queue (28 samples, 0.23%)</title><rect x="914.1" y="275.0" width="2.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="917.1" y="286.0"></text>
</g>
<g>
<title>sock_def_readable (25 samples, 0.20%)</title><rect x="914.4" y="259.0" width="2.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="917.4" y="270.0"></text>
</g>
<g>
<title>__wake_up_common_lock (23 samples, 0.19%)</title><rect x="914.6" y="243.0" width="2.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="917.6" y="254.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (23 samples, 0.19%)</title><rect x="914.6" y="227.0" width="2.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="917.6" y="238.0"></text>
</g>
<g>
<title>nf_hook_slow (13 samples, 0.11%)</title><rect x="916.8" y="355.0" width="1.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="919.8" y="366.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (12 samples, 0.10%)</title><rect x="916.8" y="339.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="919.8" y="350.0"></text>
</g>
<g>
<title>conntrack_mt	[xt_conntrack] (3 samples, 0.02%)</title><rect x="917.4" y="323.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="920.4" y="334.0"></text>
</g>
<g>
<title>nf_hook_slow (19 samples, 0.15%)</title><rect x="918.2" y="371.0" width="1.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="921.2" y="382.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (13 samples, 0.11%)</title><rect x="918.4" y="355.0" width="1.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="921.4" y="366.0"></text>
</g>
<g>
<title>nf_hook_slow (6 samples, 0.05%)</title><rect x="920.1" y="515.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="923.1" y="526.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (5 samples, 0.04%)</title><rect x="921.7" y="595.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="924.7" y="606.0"></text>
</g>
<g>
<title>__alloc_skb (4 samples, 0.03%)</title><rect x="921.8" y="579.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="924.8" y="590.0"></text>
</g>
<g>
<title>sockfd_lookup_light (3 samples, 0.02%)</title><rect x="922.8" y="643.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="925.8" y="654.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.02%)</title><rect x="922.8" y="627.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="925.8" y="638.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.02%)</title><rect x="922.8" y="611.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="925.8" y="622.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.04%)</title><rect x="923.3" y="723.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="926.3" y="734.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.04%)</title><rect x="923.3" y="707.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="926.3" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/Value.from (23 samples, 0.19%)</title><rect x="924.1" y="835.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="927.1" y="846.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (6 samples, 0.05%)</title><rect x="924.1" y="819.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="927.1" y="830.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (6 samples, 0.05%)</title><rect x="924.1" y="803.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="927.1" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (6 samples, 0.05%)</title><rect x="924.1" y="787.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="927.1" y="798.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (17 samples, 0.14%)</title><rect x="924.7" y="819.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="927.7" y="830.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (5 samples, 0.04%)</title><rect x="925.1" y="803.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="928.1" y="814.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (4 samples, 0.03%)</title><rect x="925.2" y="787.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="928.2" y="798.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (4 samples, 0.03%)</title><rect x="925.2" y="771.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="928.2" y="782.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (4 samples, 0.03%)</title><rect x="925.2" y="755.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="928.2" y="766.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (4 samples, 0.03%)</title><rect x="925.2" y="739.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="928.2" y="750.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (4 samples, 0.03%)</title><rect x="925.2" y="723.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="928.2" y="734.0"></text>
</g>
<g>
<title>java/util/Collection.stream (5 samples, 0.04%)</title><rect x="925.6" y="803.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="928.6" y="814.0"></text>
</g>
<g>
<title>java/util/List.spliterator (3 samples, 0.02%)</title><rect x="925.6" y="787.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="928.6" y="798.0"></text>
</g>
<g>
<title>java/util/AbstractList$RandomAccessSpliterator.&lt;init&gt; (3 samples, 0.02%)</title><rect x="925.6" y="771.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="928.6" y="782.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (3 samples, 0.02%)</title><rect x="926.0" y="803.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="929.0" y="814.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (3 samples, 0.02%)</title><rect x="926.0" y="787.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="929.0" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/Value.merge (6 samples, 0.05%)</title><rect x="926.3" y="835.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="929.3" y="846.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.max (6 samples, 0.05%)</title><rect x="926.3" y="819.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="929.3" y="830.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.reduce (5 samples, 0.04%)</title><rect x="926.4" y="803.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="929.4" y="814.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (5 samples, 0.04%)</title><rect x="926.4" y="787.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="929.4" y="798.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (5 samples, 0.04%)</title><rect x="926.4" y="771.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="929.4" y="782.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (4 samples, 0.03%)</title><rect x="926.4" y="755.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="929.4" y="766.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (3 samples, 0.02%)</title><rect x="926.4" y="739.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="929.4" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/Value.transform (3 samples, 0.02%)</title><rect x="926.9" y="835.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="929.9" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (3 samples, 0.02%)</title><rect x="926.9" y="819.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="929.9" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (55 samples, 0.45%)</title><rect x="927.4" y="963.0" width="5.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="930.4" y="974.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (55 samples, 0.45%)</title><rect x="927.4" y="947.0" width="5.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="930.4" y="958.0"></text>
</g>
<g>
<title>Unsafe_Park (18 samples, 0.15%)</title><rect x="927.6" y="931.0" width="1.7" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="930.6" y="942.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (4 samples, 0.03%)</title><rect x="927.8" y="915.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="930.8" y="926.0"></text>
</g>
<g>
<title>__lll_unlock_wake (7 samples, 0.06%)</title><rect x="928.2" y="915.0" width="0.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="931.2" y="926.0"></text>
</g>
<g>
<title>[unknown] (35 samples, 0.28%)</title><rect x="929.3" y="931.0" width="3.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="932.3" y="942.0"></text>
</g>
<g>
<title>__pthread_cond_wait (29 samples, 0.23%)</title><rect x="929.3" y="915.0" width="2.8" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="932.3" y="926.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (22 samples, 0.18%)</title><rect x="930.0" y="899.0" width="2.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="933.0" y="910.0"></text>
</g>
<g>
<title>do_syscall_64 (22 samples, 0.18%)</title><rect x="930.0" y="883.0" width="2.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="933.0" y="894.0"></text>
</g>
<g>
<title>__x64_sys_futex (19 samples, 0.15%)</title><rect x="930.2" y="867.0" width="1.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="933.2" y="878.0"></text>
</g>
<g>
<title>do_futex (18 samples, 0.15%)</title><rect x="930.3" y="851.0" width="1.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="933.3" y="862.0"></text>
</g>
<g>
<title>futex_wait (17 samples, 0.14%)</title><rect x="930.4" y="835.0" width="1.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="933.4" y="846.0"></text>
</g>
<g>
<title>futex_wait_queue_me (10 samples, 0.08%)</title><rect x="930.8" y="819.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="933.8" y="830.0"></text>
</g>
<g>
<title>schedule (7 samples, 0.06%)</title><rect x="931.1" y="803.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="934.1" y="814.0"></text>
</g>
<g>
<title>__sched_text_start (5 samples, 0.04%)</title><rect x="931.3" y="787.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="934.3" y="798.0"></text>
</g>
<g>
<title>finish_task_switch (4 samples, 0.03%)</title><rect x="931.4" y="771.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="934.4" y="782.0"></text>
</g>
<g>
<title>futex_wait_setup (3 samples, 0.02%)</title><rect x="931.8" y="819.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="934.8" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkUntil (172 samples, 1.39%)</title><rect x="932.6" y="963.0" width="16.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="935.6" y="974.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (171 samples, 1.38%)</title><rect x="932.7" y="947.0" width="16.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="935.7" y="958.0"></text>
</g>
<g>
<title>Unsafe_Park (61 samples, 0.49%)</title><rect x="933.1" y="931.0" width="5.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="936.1" y="942.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (13 samples, 0.11%)</title><rect x="933.3" y="915.0" width="1.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="936.3" y="926.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (3 samples, 0.02%)</title><rect x="934.0" y="899.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="937.0" y="910.0"></text>
</g>
<g>
<title>__lll_unlock_wake (36 samples, 0.29%)</title><rect x="934.8" y="915.0" width="3.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="937.8" y="926.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (15 samples, 0.12%)</title><rect x="936.8" y="899.0" width="1.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="939.8" y="910.0"></text>
</g>
<g>
<title>do_syscall_64 (15 samples, 0.12%)</title><rect x="936.8" y="883.0" width="1.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="939.8" y="894.0"></text>
</g>
<g>
<title>__x64_sys_futex (6 samples, 0.05%)</title><rect x="937.7" y="867.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="940.7" y="878.0"></text>
</g>
<g>
<title>do_futex (6 samples, 0.05%)</title><rect x="937.7" y="851.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="940.7" y="862.0"></text>
</g>
<g>
<title>futex_wake (6 samples, 0.05%)</title><rect x="937.7" y="835.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="940.7" y="846.0"></text>
</g>
<g>
<title>[unknown] (106 samples, 0.86%)</title><rect x="938.9" y="931.0" width="10.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="941.9" y="942.0"></text>
</g>
<g>
<title>__condvar_dec_grefs (3 samples, 0.02%)</title><rect x="938.9" y="915.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="941.9" y="926.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (97 samples, 0.79%)</title><rect x="939.2" y="915.0" width="9.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="942.2" y="926.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (73 samples, 0.59%)</title><rect x="941.5" y="899.0" width="7.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="944.5" y="910.0"></text>
</g>
<g>
<title>do_syscall_64 (73 samples, 0.59%)</title><rect x="941.5" y="883.0" width="7.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="944.5" y="894.0"></text>
</g>
<g>
<title>__x64_sys_futex (69 samples, 0.56%)</title><rect x="941.9" y="867.0" width="6.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="944.9" y="878.0"></text>
</g>
<g>
<title>do_futex (62 samples, 0.50%)</title><rect x="942.0" y="851.0" width="5.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="945.0" y="862.0"></text>
</g>
<g>
<title>futex_wait (59 samples, 0.48%)</title><rect x="942.3" y="835.0" width="5.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="945.3" y="846.0"></text>
</g>
<g>
<title>futex_wait_queue_me (39 samples, 0.32%)</title><rect x="942.8" y="819.0" width="3.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="945.8" y="830.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (12 samples, 0.10%)</title><rect x="943.8" y="803.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="946.8" y="814.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (10 samples, 0.08%)</title><rect x="943.8" y="787.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="946.8" y="798.0"></text>
</g>
<g>
<title>schedule (15 samples, 0.12%)</title><rect x="945.1" y="803.0" width="1.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="948.1" y="814.0"></text>
</g>
<g>
<title>__sched_text_start (14 samples, 0.11%)</title><rect x="945.2" y="787.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="948.2" y="798.0"></text>
</g>
<g>
<title>finish_task_switch (12 samples, 0.10%)</title><rect x="945.4" y="771.0" width="1.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="948.4" y="782.0"></text>
</g>
<g>
<title>futex_wait_setup (8 samples, 0.06%)</title><rect x="946.6" y="819.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="949.6" y="830.0"></text>
</g>
<g>
<title>get_futex_value_locked (5 samples, 0.04%)</title><rect x="946.8" y="803.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="949.8" y="814.0"></text>
</g>
<g>
<title>hrtimer_cancel (4 samples, 0.03%)</title><rect x="947.3" y="819.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="950.3" y="830.0"></text>
</g>
<g>
<title>hrtimer_try_to_cancel (4 samples, 0.03%)</title><rect x="947.3" y="803.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="950.3" y="814.0"></text>
</g>
<g>
<title>get_timespec64 (6 samples, 0.05%)</title><rect x="947.9" y="851.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="950.9" y="862.0"></text>
</g>
<g>
<title>_copy_from_user (6 samples, 0.05%)</title><rect x="947.9" y="835.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="950.9" y="846.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (4 samples, 0.03%)</title><rect x="948.1" y="819.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="951.1" y="830.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (3 samples, 0.02%)</title><rect x="949.1" y="963.0" width="0.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="952.1" y="974.0"></text>
</g>
<g>
<title>gettimeofday (3 samples, 0.02%)</title><rect x="949.1" y="947.0" width="0.2" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="952.1" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (1,030 samples, 8.34%)</title><rect x="949.3" y="995.0" width="98.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="952.3" y="1006.0">jdk/internal..</text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.keyFor (9 samples, 0.07%)</title><rect x="950.1" y="979.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="953.1" y="990.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.findKey (9 samples, 0.07%)</title><rect x="950.1" y="963.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="953.1" y="974.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3 samples, 0.02%)</title><rect x="951.1" y="979.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="954.1" y="990.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3 samples, 0.02%)</title><rect x="951.1" y="963.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="954.1" y="974.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (400 samples, 3.24%)</title><rect x="951.4" y="979.0" width="38.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="954.4" y="990.0">jav..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$241/404115466.accept (391 samples, 3.16%)</title><rect x="951.4" y="963.0" width="37.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="954.4" y="974.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (391 samples, 3.16%)</title><rect x="951.4" y="947.0" width="37.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="954.4" y="958.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (391 samples, 3.16%)</title><rect x="951.4" y="931.0" width="37.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="954.4" y="942.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (391 samples, 3.16%)</title><rect x="951.4" y="915.0" width="37.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="954.4" y="926.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (391 samples, 3.16%)</title><rect x="951.4" y="899.0" width="37.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="954.4" y="910.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (6 samples, 0.05%)</title><rect x="951.4" y="883.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="954.4" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (6 samples, 0.05%)</title><rect x="951.4" y="867.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="954.4" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (4 samples, 0.03%)</title><rect x="951.6" y="851.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="954.6" y="862.0"></text>
</g>
<g>
<title>java/util/HashSet.add (3 samples, 0.02%)</title><rect x="951.6" y="835.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="954.6" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.put (3 samples, 0.02%)</title><rect x="951.6" y="819.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="954.6" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (3 samples, 0.02%)</title><rect x="951.6" y="803.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="954.6" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (385 samples, 3.12%)</title><rect x="952.0" y="883.0" width="36.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="955.0" y="894.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (385 samples, 3.12%)</title><rect x="952.0" y="867.0" width="36.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="955.0" y="878.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (385 samples, 3.12%)</title><rect x="952.0" y="851.0" width="36.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="955.0" y="862.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (385 samples, 3.12%)</title><rect x="952.0" y="835.0" width="36.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="955.0" y="846.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (385 samples, 3.12%)</title><rect x="952.0" y="819.0" width="36.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="955.0" y="830.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$181/1894615385.run (381 samples, 3.08%)</title><rect x="952.3" y="803.0" width="36.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="955.3" y="814.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (381 samples, 3.08%)</title><rect x="952.3" y="787.0" width="36.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="955.3" y="798.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (45 samples, 0.36%)</title><rect x="952.4" y="771.0" width="4.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="955.4" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (45 samples, 0.36%)</title><rect x="952.4" y="755.0" width="4.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="955.4" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (44 samples, 0.36%)</title><rect x="952.5" y="739.0" width="4.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="955.5" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (43 samples, 0.35%)</title><rect x="952.6" y="723.0" width="4.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="955.6" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (43 samples, 0.35%)</title><rect x="952.6" y="707.0" width="4.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="955.6" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (43 samples, 0.35%)</title><rect x="952.6" y="691.0" width="4.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="955.6" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (42 samples, 0.34%)</title><rect x="952.7" y="675.0" width="4.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="955.7" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (39 samples, 0.32%)</title><rect x="952.8" y="659.0" width="3.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="955.8" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (33 samples, 0.27%)</title><rect x="952.8" y="643.0" width="3.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="955.8" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (33 samples, 0.27%)</title><rect x="952.8" y="627.0" width="3.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="955.8" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (33 samples, 0.27%)</title><rect x="952.8" y="611.0" width="3.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="955.8" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (33 samples, 0.27%)</title><rect x="952.8" y="595.0" width="3.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="955.8" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (33 samples, 0.27%)</title><rect x="952.8" y="579.0" width="3.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="955.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (33 samples, 0.27%)</title><rect x="952.8" y="563.0" width="3.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="955.8" y="574.0"></text>
</g>
<g>
<title>Unsafe_Unpark (6 samples, 0.05%)</title><rect x="952.9" y="547.0" width="0.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="955.9" y="558.0"></text>
</g>
<g>
<title>__pthread_cond_signal (26 samples, 0.21%)</title><rect x="953.4" y="547.0" width="2.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="956.4" y="558.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (21 samples, 0.17%)</title><rect x="953.9" y="531.0" width="2.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="956.9" y="542.0"></text>
</g>
<g>
<title>do_syscall_64 (21 samples, 0.17%)</title><rect x="953.9" y="515.0" width="2.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="956.9" y="526.0"></text>
</g>
<g>
<title>__x64_sys_futex (20 samples, 0.16%)</title><rect x="954.0" y="499.0" width="1.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="957.0" y="510.0"></text>
</g>
<g>
<title>do_futex (20 samples, 0.16%)</title><rect x="954.0" y="483.0" width="1.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="957.0" y="494.0"></text>
</g>
<g>
<title>futex_wake (20 samples, 0.16%)</title><rect x="954.0" y="467.0" width="1.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="957.0" y="478.0"></text>
</g>
<g>
<title>wake_up_q (19 samples, 0.15%)</title><rect x="954.1" y="451.0" width="1.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="957.1" y="462.0"></text>
</g>
<g>
<title>try_to_wake_up (18 samples, 0.15%)</title><rect x="954.2" y="435.0" width="1.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="957.2" y="446.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (18 samples, 0.15%)</title><rect x="954.2" y="419.0" width="1.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="957.2" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (3 samples, 0.02%)</title><rect x="956.0" y="643.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="959.0" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (3 samples, 0.02%)</title><rect x="956.0" y="627.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="959.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (4 samples, 0.03%)</title><rect x="956.9" y="771.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="959.9" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (4 samples, 0.03%)</title><rect x="956.9" y="755.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="959.9" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (3 samples, 0.02%)</title><rect x="957.0" y="739.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="960.0" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (3 samples, 0.02%)</title><rect x="957.0" y="723.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="960.0" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (327 samples, 2.65%)</title><rect x="957.3" y="771.0" width="31.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="960.3" y="782.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.getBuffer (3 samples, 0.02%)</title><rect x="957.3" y="755.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="960.3" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection$$Lambda$172/2114713671.get (3 samples, 0.02%)</title><rect x="957.3" y="739.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="960.3" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getBuffer (3 samples, 0.02%)</title><rect x="957.3" y="723.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="960.3" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (3 samples, 0.02%)</title><rect x="957.3" y="707.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="960.3" y="718.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.02%)</title><rect x="957.3" y="691.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="960.3" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.02%)</title><rect x="957.3" y="675.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="960.3" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (324 samples, 2.62%)</title><rect x="957.6" y="755.0" width="30.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="960.6" y="766.0">su..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (3 samples, 0.02%)</title><rect x="957.6" y="739.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="960.6" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (3 samples, 0.02%)</title><rect x="957.6" y="723.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="960.6" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (3 samples, 0.02%)</title><rect x="957.6" y="707.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="960.6" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (3 samples, 0.02%)</title><rect x="957.6" y="691.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="960.6" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (320 samples, 2.59%)</title><rect x="957.9" y="739.0" width="30.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="960.9" y="750.0">su..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (319 samples, 2.58%)</title><rect x="958.0" y="723.0" width="30.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="961.0" y="734.0">su..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (305 samples, 2.47%)</title><rect x="958.0" y="707.0" width="29.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="961.0" y="718.0">su..</text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (3 samples, 0.02%)</title><rect x="958.0" y="691.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="961.0" y="702.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (3 samples, 0.02%)</title><rect x="958.0" y="675.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="961.0" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (3 samples, 0.02%)</title><rect x="958.0" y="659.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="961.0" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (302 samples, 2.44%)</title><rect x="958.3" y="691.0" width="28.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="961.3" y="702.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (302 samples, 2.44%)</title><rect x="958.3" y="675.0" width="28.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="961.3" y="686.0">su..</text>
</g>
<g>
<title>__libc_read (298 samples, 2.41%)</title><rect x="958.4" y="659.0" width="28.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="961.4" y="670.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (271 samples, 2.19%)</title><rect x="961.0" y="643.0" width="25.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="964.0" y="654.0">e..</text>
</g>
<g>
<title>do_syscall_64 (271 samples, 2.19%)</title><rect x="961.0" y="627.0" width="25.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="964.0" y="638.0">d..</text>
</g>
<g>
<title>ksys_read (261 samples, 2.11%)</title><rect x="961.9" y="611.0" width="25.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="964.9" y="622.0">k..</text>
</g>
<g>
<title>__fdget_pos (6 samples, 0.05%)</title><rect x="961.9" y="595.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="964.9" y="606.0"></text>
</g>
<g>
<title>__fget_light (6 samples, 0.05%)</title><rect x="961.9" y="579.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="964.9" y="590.0"></text>
</g>
<g>
<title>vfs_read (254 samples, 2.06%)</title><rect x="962.6" y="595.0" width="24.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="965.6" y="606.0">v..</text>
</g>
<g>
<title>fsnotify (5 samples, 0.04%)</title><rect x="963.0" y="579.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="966.0" y="590.0"></text>
</g>
<g>
<title>new_sync_read (240 samples, 1.94%)</title><rect x="963.5" y="579.0" width="22.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="966.5" y="590.0">n..</text>
</g>
<g>
<title>sock_read_iter (237 samples, 1.92%)</title><rect x="963.8" y="563.0" width="22.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="966.8" y="574.0">s..</text>
</g>
<g>
<title>inet_recvmsg (231 samples, 1.87%)</title><rect x="964.0" y="547.0" width="22.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="967.0" y="558.0">i..</text>
</g>
<g>
<title>tcp_recvmsg (229 samples, 1.85%)</title><rect x="964.1" y="531.0" width="21.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="967.1" y="542.0">t..</text>
</g>
<g>
<title>__kfree_skb (5 samples, 0.04%)</title><rect x="965.1" y="515.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="968.1" y="526.0"></text>
</g>
<g>
<title>skb_release_all (5 samples, 0.04%)</title><rect x="965.1" y="499.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="968.1" y="510.0"></text>
</g>
<g>
<title>skb_release_head_state (4 samples, 0.03%)</title><rect x="965.2" y="483.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="968.2" y="494.0"></text>
</g>
<g>
<title>__tcp_send_ack.part.0 (7 samples, 0.06%)</title><rect x="965.7" y="515.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="968.7" y="526.0"></text>
</g>
<g>
<title>__alloc_skb (6 samples, 0.05%)</title><rect x="965.8" y="499.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="968.8" y="510.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (3 samples, 0.02%)</title><rect x="965.9" y="483.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="968.9" y="494.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (3 samples, 0.02%)</title><rect x="965.9" y="467.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="968.9" y="478.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (187 samples, 1.51%)</title><rect x="966.3" y="515.0" width="17.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="969.3" y="526.0"></text>
</g>
<g>
<title>__ip_queue_xmit (180 samples, 1.46%)</title><rect x="966.8" y="499.0" width="17.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="969.8" y="510.0"></text>
</g>
<g>
<title>ip_local_out (52 samples, 0.42%)</title><rect x="966.9" y="483.0" width="5.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="969.9" y="494.0"></text>
</g>
<g>
<title>__ip_local_out (52 samples, 0.42%)</title><rect x="966.9" y="467.0" width="5.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="969.9" y="478.0"></text>
</g>
<g>
<title>nf_hook_slow (50 samples, 0.40%)</title><rect x="967.1" y="451.0" width="4.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="970.1" y="462.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (10 samples, 0.08%)</title><rect x="967.2" y="435.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="970.2" y="446.0"></text>
</g>
<g>
<title>iptable_filter_hook	[iptable_filter] (3 samples, 0.02%)</title><rect x="968.2" y="435.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="971.2" y="446.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (4 samples, 0.03%)</title><rect x="968.4" y="435.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="971.4" y="446.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (3 samples, 0.02%)</title><rect x="968.5" y="419.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="971.5" y="430.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (19 samples, 0.15%)</title><rect x="969.3" y="435.0" width="1.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="972.3" y="446.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get	[nf_conntrack] (4 samples, 0.03%)</title><rect x="969.4" y="419.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="972.4" y="430.0"></text>
</g>
<g>
<title>hash_conntrack_raw	[nf_conntrack] (3 samples, 0.02%)</title><rect x="970.0" y="419.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="973.0" y="430.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet	[nf_conntrack] (8 samples, 0.06%)</title><rect x="970.3" y="419.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="973.3" y="430.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn	[nf_nat] (3 samples, 0.02%)</title><rect x="971.1" y="435.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="974.1" y="446.0"></text>
</g>
<g>
<title>selinux_ipv4_output (5 samples, 0.04%)</title><rect x="971.4" y="435.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="974.4" y="446.0"></text>
</g>
<g>
<title>ip_output (127 samples, 1.03%)</title><rect x="971.9" y="483.0" width="12.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="974.9" y="494.0"></text>
</g>
<g>
<title>ip_finish_output2 (110 samples, 0.89%)</title><rect x="971.9" y="467.0" width="10.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="974.9" y="478.0"></text>
</g>
<g>
<title>__dev_queue_xmit (11 samples, 0.09%)</title><rect x="972.5" y="451.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="975.5" y="462.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (8 samples, 0.06%)</title><rect x="972.6" y="435.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="975.6" y="446.0"></text>
</g>
<g>
<title>loopback_xmit (8 samples, 0.06%)</title><rect x="972.6" y="419.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="975.6" y="430.0"></text>
</g>
<g>
<title>eth_type_trans (4 samples, 0.03%)</title><rect x="972.7" y="403.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="975.7" y="414.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (92 samples, 0.74%)</title><rect x="973.6" y="451.0" width="8.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="976.6" y="462.0"></text>
</g>
<g>
<title>do_softirq.part.0 (91 samples, 0.74%)</title><rect x="973.7" y="435.0" width="8.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="976.7" y="446.0"></text>
</g>
<g>
<title>do_softirq_own_stack (90 samples, 0.73%)</title><rect x="973.8" y="419.0" width="8.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="976.8" y="430.0"></text>
</g>
<g>
<title>__softirqentry_text_start (90 samples, 0.73%)</title><rect x="973.8" y="403.0" width="8.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="976.8" y="414.0"></text>
</g>
<g>
<title>net_rx_action (86 samples, 0.70%)</title><rect x="974.2" y="387.0" width="8.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="977.2" y="398.0"></text>
</g>
<g>
<title>process_backlog (82 samples, 0.66%)</title><rect x="974.6" y="371.0" width="7.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="977.6" y="382.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (82 samples, 0.66%)</title><rect x="974.6" y="355.0" width="7.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="977.6" y="366.0"></text>
</g>
<g>
<title>ip_rcv (81 samples, 0.66%)</title><rect x="974.6" y="339.0" width="7.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="977.6" y="350.0"></text>
</g>
<g>
<title>ip_local_deliver (51 samples, 0.41%)</title><rect x="974.8" y="323.0" width="4.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="977.8" y="334.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (34 samples, 0.28%)</title><rect x="974.9" y="307.0" width="3.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="977.9" y="318.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (33 samples, 0.27%)</title><rect x="975.0" y="291.0" width="3.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="978.0" y="302.0"></text>
</g>
<g>
<title>tcp_v4_rcv (29 samples, 0.23%)</title><rect x="975.4" y="275.0" width="2.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="978.4" y="286.0"></text>
</g>
<g>
<title>__inet_lookup_established (4 samples, 0.03%)</title><rect x="975.6" y="259.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="978.6" y="270.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (22 samples, 0.18%)</title><rect x="976.1" y="259.0" width="2.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="979.1" y="270.0"></text>
</g>
<g>
<title>tcp_rcv_established (21 samples, 0.17%)</title><rect x="976.2" y="243.0" width="2.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="979.2" y="254.0"></text>
</g>
<g>
<title>tcp_ack (18 samples, 0.15%)</title><rect x="976.4" y="227.0" width="1.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="979.4" y="238.0"></text>
</g>
<g>
<title>__kfree_skb (6 samples, 0.05%)</title><rect x="976.7" y="211.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="979.7" y="222.0"></text>
</g>
<g>
<title>__slab_free (3 samples, 0.02%)</title><rect x="976.7" y="195.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="979.7" y="206.0"></text>
</g>
<g>
<title>skb_release_data (3 samples, 0.02%)</title><rect x="977.0" y="195.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="980.0" y="206.0"></text>
</g>
<g>
<title>nf_hook_slow (16 samples, 0.13%)</title><rect x="978.2" y="307.0" width="1.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="981.2" y="318.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (15 samples, 0.12%)</title><rect x="978.3" y="291.0" width="1.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="981.3" y="302.0"></text>
</g>
<g>
<title>nf_hook_slow (26 samples, 0.21%)</title><rect x="979.9" y="323.0" width="2.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="982.9" y="334.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (20 samples, 0.16%)</title><rect x="980.0" y="307.0" width="1.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="983.0" y="318.0"></text>
</g>
<g>
<title>nf_hook_slow (16 samples, 0.13%)</title><rect x="982.5" y="467.0" width="1.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="985.5" y="478.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (5 samples, 0.04%)</title><rect x="982.6" y="451.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="985.6" y="462.0"></text>
</g>
<g>
<title>nf_confirm	[nf_conntrack] (3 samples, 0.02%)</title><rect x="983.1" y="451.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="986.1" y="462.0"></text>
</g>
<g>
<title>selinux_ip_postroute (7 samples, 0.06%)</title><rect x="983.3" y="451.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="986.3" y="462.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (11 samples, 0.09%)</title><rect x="984.6" y="515.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="987.6" y="526.0"></text>
</g>
<g>
<title>__skb_datagram_iter (11 samples, 0.09%)</title><rect x="984.6" y="499.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="987.6" y="510.0"></text>
</g>
<g>
<title>_copy_to_iter (4 samples, 0.03%)</title><rect x="984.6" y="483.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="987.6" y="494.0"></text>
</g>
<g>
<title>simple_copy_to_iter (7 samples, 0.06%)</title><rect x="985.0" y="483.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="988.0" y="494.0"></text>
</g>
<g>
<title>__check_object_size (5 samples, 0.04%)</title><rect x="985.2" y="467.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="988.2" y="478.0"></text>
</g>
<g>
<title>sock_recvmsg (4 samples, 0.03%)</title><rect x="986.0" y="547.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="989.0" y="558.0"></text>
</g>
<g>
<title>security_socket_recvmsg (4 samples, 0.03%)</title><rect x="986.0" y="531.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="989.0" y="542.0"></text>
</g>
<g>
<title>security_file_permission (5 samples, 0.04%)</title><rect x="986.4" y="579.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="989.4" y="590.0"></text>
</g>
<g>
<title>file_has_perm (3 samples, 0.02%)</title><rect x="986.4" y="563.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="989.4" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (14 samples, 0.11%)</title><rect x="987.2" y="707.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="990.2" y="718.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (4 samples, 0.03%)</title><rect x="987.3" y="691.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="990.3" y="702.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (4 samples, 0.03%)</title><rect x="987.3" y="675.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="990.3" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (9 samples, 0.07%)</title><rect x="987.6" y="691.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="990.6" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.next (5 samples, 0.04%)</title><rect x="988.0" y="675.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="991.0" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$244/1205372074.accept (9 samples, 0.07%)</title><rect x="988.8" y="963.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="991.8" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (9 samples, 0.07%)</title><rect x="988.8" y="947.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="991.8" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$240/135343777.run (9 samples, 0.07%)</title><rect x="988.8" y="931.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="991.8" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (8 samples, 0.06%)</title><rect x="988.9" y="915.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="991.9" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (8 samples, 0.06%)</title><rect x="988.9" y="899.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="991.9" y="910.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (3 samples, 0.02%)</title><rect x="989.3" y="883.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="992.3" y="894.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.next (14 samples, 0.11%)</title><rect x="989.6" y="979.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="992.6" y="990.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.nextNode (14 samples, 0.11%)</title><rect x="989.6" y="963.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="992.6" y="974.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (21 samples, 0.17%)</title><rect x="991.0" y="979.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="994.0" y="990.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (21 samples, 0.17%)</title><rect x="991.0" y="963.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="994.0" y="974.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (3 samples, 0.02%)</title><rect x="991.1" y="947.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="994.1" y="958.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (13 samples, 0.11%)</title><rect x="991.4" y="947.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="994.4" y="958.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (13 samples, 0.11%)</title><rect x="991.4" y="931.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="994.4" y="942.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (13 samples, 0.11%)</title><rect x="991.4" y="915.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="994.4" y="926.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (12 samples, 0.10%)</title><rect x="991.4" y="899.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="994.4" y="910.0"></text>
</g>
<g>
<title>java/util/ArrayList$ArrayListSpliterator.forEachRemaining (3 samples, 0.02%)</title><rect x="991.4" y="883.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="994.4" y="894.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySpliterator.forEachRemaining (7 samples, 0.06%)</title><rect x="991.6" y="883.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="994.6" y="894.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (5 samples, 0.04%)</title><rect x="991.8" y="867.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="994.8" y="878.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.accept (5 samples, 0.04%)</title><rect x="991.8" y="851.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="994.8" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$239/516844372.accept (5 samples, 0.04%)</title><rect x="991.8" y="835.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="994.8" y="846.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (4 samples, 0.03%)</title><rect x="991.9" y="819.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="994.9" y="830.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.getOpFlags (4 samples, 0.03%)</title><rect x="992.6" y="947.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="995.6" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (108 samples, 0.87%)</title><rect x="993.0" y="979.0" width="10.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="996.0" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$188/903113097.run (60 samples, 0.49%)</title><rect x="993.2" y="963.0" width="5.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="996.2" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (60 samples, 0.49%)</title><rect x="993.2" y="947.0" width="5.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="996.2" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (59 samples, 0.48%)</title><rect x="993.3" y="931.0" width="5.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="996.3" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (59 samples, 0.48%)</title><rect x="993.3" y="915.0" width="5.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="996.3" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicInteger.compareAndSet (3 samples, 0.02%)</title><rect x="993.3" y="899.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="996.3" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (3 samples, 0.02%)</title><rect x="993.6" y="899.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="996.6" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (3 samples, 0.02%)</title><rect x="993.6" y="883.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="996.6" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (53 samples, 0.43%)</title><rect x="993.8" y="899.0" width="5.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="996.8" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (53 samples, 0.43%)</title><rect x="993.8" y="883.0" width="5.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="996.8" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$181/1894615385.run (48 samples, 0.39%)</title><rect x="993.9" y="867.0" width="4.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="996.9" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (48 samples, 0.39%)</title><rect x="993.9" y="851.0" width="4.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="996.9" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (48 samples, 0.39%)</title><rect x="993.9" y="835.0" width="4.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="996.9" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (40 samples, 0.32%)</title><rect x="994.7" y="819.0" width="3.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="997.7" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (19 samples, 0.15%)</title><rect x="994.8" y="803.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="997.8" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (19 samples, 0.15%)</title><rect x="994.8" y="787.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="997.8" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (18 samples, 0.15%)</title><rect x="994.9" y="771.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="997.9" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (11 samples, 0.09%)</title><rect x="994.9" y="755.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="997.9" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (11 samples, 0.09%)</title><rect x="994.9" y="739.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="997.9" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (10 samples, 0.08%)</title><rect x="995.0" y="723.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="998.0" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (10 samples, 0.08%)</title><rect x="995.0" y="707.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="998.0" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (6 samples, 0.05%)</title><rect x="995.4" y="691.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="998.4" y="702.0"></text>
</g>
<g>
<title>java/util/HashSet.add (4 samples, 0.03%)</title><rect x="995.6" y="675.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="998.6" y="686.0"></text>
</g>
<g>
<title>java/util/HashMap.put (3 samples, 0.02%)</title><rect x="995.7" y="659.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="998.7" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.increase (7 samples, 0.06%)</title><rect x="995.9" y="755.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="998.9" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.getAndAccumulate (3 samples, 0.02%)</title><rect x="996.3" y="739.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="999.3" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (20 samples, 0.16%)</title><rect x="996.6" y="803.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="999.6" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (20 samples, 0.16%)</title><rect x="996.6" y="787.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="999.6" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (20 samples, 0.16%)</title><rect x="996.6" y="771.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="999.6" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (20 samples, 0.16%)</title><rect x="996.6" y="755.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="999.6" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (20 samples, 0.16%)</title><rect x="996.6" y="739.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="999.6" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (20 samples, 0.16%)</title><rect x="996.6" y="723.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="999.6" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (15 samples, 0.12%)</title><rect x="996.7" y="707.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="999.7" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (14 samples, 0.11%)</title><rect x="996.8" y="691.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="999.8" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (14 samples, 0.11%)</title><rect x="996.8" y="675.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="999.8" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (14 samples, 0.11%)</title><rect x="996.8" y="659.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="999.8" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (14 samples, 0.11%)</title><rect x="996.8" y="643.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="999.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (14 samples, 0.11%)</title><rect x="996.8" y="627.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="999.8" y="638.0"></text>
</g>
<g>
<title>__pthread_cond_signal (11 samples, 0.09%)</title><rect x="997.1" y="611.0" width="1.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1000.1" y="622.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.08%)</title><rect x="997.2" y="595.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1000.2" y="606.0"></text>
</g>
<g>
<title>do_syscall_64 (10 samples, 0.08%)</title><rect x="997.2" y="579.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1000.2" y="590.0"></text>
</g>
<g>
<title>__x64_sys_futex (10 samples, 0.08%)</title><rect x="997.2" y="563.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1000.2" y="574.0"></text>
</g>
<g>
<title>do_futex (10 samples, 0.08%)</title><rect x="997.2" y="547.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1000.2" y="558.0"></text>
</g>
<g>
<title>futex_wake (10 samples, 0.08%)</title><rect x="997.2" y="531.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1000.2" y="542.0"></text>
</g>
<g>
<title>wake_up_q (8 samples, 0.06%)</title><rect x="997.4" y="515.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1000.4" y="526.0"></text>
</g>
<g>
<title>try_to_wake_up (7 samples, 0.06%)</title><rect x="997.5" y="499.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1000.5" y="510.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (7 samples, 0.06%)</title><rect x="997.5" y="483.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1000.5" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (3 samples, 0.02%)</title><rect x="998.1" y="707.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1001.1" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (3 samples, 0.02%)</title><rect x="998.1" y="691.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1001.1" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (4 samples, 0.03%)</title><rect x="998.5" y="867.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1001.5" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$192/1926392655.run (46 samples, 0.37%)</title><rect x="998.9" y="963.0" width="4.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1001.9" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (46 samples, 0.37%)</title><rect x="998.9" y="947.0" width="4.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1001.9" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (37 samples, 0.30%)</title><rect x="998.9" y="931.0" width="3.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1001.9" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (37 samples, 0.30%)</title><rect x="998.9" y="915.0" width="3.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1001.9" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (36 samples, 0.29%)</title><rect x="999.0" y="899.0" width="3.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1002.0" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.enqueue (4 samples, 0.03%)</title><rect x="999.0" y="883.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1002.0" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (27 samples, 0.22%)</title><rect x="999.4" y="883.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1002.4" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (27 samples, 0.22%)</title><rect x="999.4" y="867.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1002.4" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (27 samples, 0.22%)</title><rect x="999.4" y="851.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1002.4" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (27 samples, 0.22%)</title><rect x="999.4" y="835.0" width="2.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1002.4" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (27 samples, 0.22%)</title><rect x="999.4" y="819.0" width="2.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1002.4" y="830.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (27 samples, 0.22%)</title><rect x="999.4" y="803.0" width="2.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1002.4" y="814.0"></text>
</g>
<g>
<title>__pthread_cond_signal (24 samples, 0.19%)</title><rect x="999.6" y="787.0" width="2.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1002.6" y="798.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (21 samples, 0.17%)</title><rect x="999.9" y="771.0" width="2.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1002.9" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (21 samples, 0.17%)</title><rect x="999.9" y="755.0" width="2.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1002.9" y="766.0"></text>
</g>
<g>
<title>__x64_sys_futex (18 samples, 0.15%)</title><rect x="1000.1" y="739.0" width="1.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1003.1" y="750.0"></text>
</g>
<g>
<title>do_futex (18 samples, 0.15%)</title><rect x="1000.1" y="723.0" width="1.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1003.1" y="734.0"></text>
</g>
<g>
<title>futex_wake (17 samples, 0.14%)</title><rect x="1000.2" y="707.0" width="1.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1003.2" y="718.0"></text>
</g>
<g>
<title>wake_up_q (14 samples, 0.11%)</title><rect x="1000.5" y="691.0" width="1.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1003.5" y="702.0"></text>
</g>
<g>
<title>try_to_wake_up (14 samples, 0.11%)</title><rect x="1000.5" y="675.0" width="1.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1003.5" y="686.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (14 samples, 0.11%)</title><rect x="1000.5" y="659.0" width="1.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1003.5" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (4 samples, 0.03%)</title><rect x="1002.1" y="883.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1005.1" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (4 samples, 0.03%)</title><rect x="1002.1" y="867.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1005.1" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (3 samples, 0.02%)</title><rect x="1002.1" y="851.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1005.1" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (9 samples, 0.07%)</title><rect x="1002.4" y="931.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1005.4" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (37 samples, 0.30%)</title><rect x="1003.3" y="979.0" width="3.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1006.3" y="990.0"></text>
</g>
<g>
<title>java/time/Instant.now (7 samples, 0.06%)</title><rect x="1003.7" y="963.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1006.7" y="974.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (7 samples, 0.06%)</title><rect x="1003.7" y="947.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1006.7" y="958.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (6 samples, 0.05%)</title><rect x="1003.8" y="931.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1006.8" y="942.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (3 samples, 0.02%)</title><rect x="1004.1" y="915.0" width="0.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1007.1" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (26 samples, 0.21%)</title><rect x="1004.3" y="963.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1007.3" y="974.0"></text>
</g>
<g>
<title>itable stub (4 samples, 0.03%)</title><rect x="1005.0" y="947.0" width="0.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1008.0" y="958.0"></text>
</g>
<g>
<title>java/time/Instant.until (4 samples, 0.03%)</title><rect x="1005.5" y="947.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1008.5" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (8 samples, 0.06%)</title><rect x="1006.1" y="947.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1009.1" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.&lt;init&gt; (7 samples, 0.06%)</title><rect x="1006.8" y="979.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1009.8" y="990.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (7 samples, 0.06%)</title><rect x="1006.8" y="963.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1009.8" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.events (28 samples, 0.23%)</title><rect x="1007.5" y="979.0" width="2.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1010.5" y="990.0"></text>
</g>
<g>
<title>java/util/Collection.stream (16 samples, 0.13%)</title><rect x="1007.5" y="963.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1010.5" y="974.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (16 samples, 0.13%)</title><rect x="1007.5" y="947.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1010.5" y="958.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$Head.&lt;init&gt; (16 samples, 0.13%)</title><rect x="1007.5" y="931.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1010.5" y="942.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.&lt;init&gt; (16 samples, 0.13%)</title><rect x="1007.5" y="915.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1010.5" y="926.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.&lt;init&gt; (16 samples, 0.13%)</title><rect x="1007.5" y="899.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1010.5" y="910.0"></text>
</g>
<g>
<title>java/util/stream/PipelineHelper.&lt;init&gt; (12 samples, 0.10%)</title><rect x="1007.9" y="883.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1010.9" y="894.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (12 samples, 0.10%)</title><rect x="1009.0" y="963.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1012.0" y="974.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.&lt;init&gt; (12 samples, 0.10%)</title><rect x="1009.0" y="947.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1012.0" y="958.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$StatelessOp.&lt;init&gt; (12 samples, 0.10%)</title><rect x="1009.0" y="931.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1012.0" y="942.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.&lt;init&gt; (12 samples, 0.10%)</title><rect x="1009.0" y="915.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1012.0" y="926.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.&lt;init&gt; (11 samples, 0.09%)</title><rect x="1009.1" y="899.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1012.1" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (5 samples, 0.04%)</title><rect x="1010.2" y="979.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1013.2" y="990.0"></text>
</g>
<g>
<title>java/util/HashSet.add (4 samples, 0.03%)</title><rect x="1010.2" y="963.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1013.2" y="974.0"></text>
</g>
<g>
<title>java/util/HashMap.put (4 samples, 0.03%)</title><rect x="1010.2" y="947.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1013.2" y="958.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (4 samples, 0.03%)</title><rect x="1010.2" y="931.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1013.2" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$244/1205372074.accept (3 samples, 0.02%)</title><rect x="1010.7" y="979.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1013.7" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.isReferenced (9 samples, 0.07%)</title><rect x="1010.9" y="979.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1013.9" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.facade (9 samples, 0.07%)</title><rect x="1010.9" y="963.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1013.9" y="974.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (329 samples, 2.66%)</title><rect x="1012.0" y="979.0" width="31.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1015.0" y="990.0">su..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (328 samples, 2.65%)</title><rect x="1012.1" y="963.0" width="31.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1015.1" y="974.0">su..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (327 samples, 2.65%)</title><rect x="1012.1" y="947.0" width="31.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1015.1" y="958.0">su..</text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (160 samples, 1.29%)</title><rect x="1012.2" y="931.0" width="15.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1015.2" y="942.0"></text>
</g>
<g>
<title>.annobin_epoll_wait.c (152 samples, 1.23%)</title><rect x="1012.4" y="915.0" width="14.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1015.4" y="926.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (131 samples, 1.06%)</title><rect x="1014.4" y="899.0" width="12.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1017.4" y="910.0"></text>
</g>
<g>
<title>do_syscall_64 (131 samples, 1.06%)</title><rect x="1014.4" y="883.0" width="12.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1017.4" y="894.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (122 samples, 0.99%)</title><rect x="1015.2" y="867.0" width="11.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1018.2" y="878.0"></text>
</g>
<g>
<title>do_epoll_wait (119 samples, 0.96%)</title><rect x="1015.5" y="851.0" width="11.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1018.5" y="862.0"></text>
</g>
<g>
<title>ep_poll (112 samples, 0.91%)</title><rect x="1015.9" y="835.0" width="10.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1018.9" y="846.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (33 samples, 0.27%)</title><rect x="1017.1" y="819.0" width="3.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1020.1" y="830.0"></text>
</g>
<g>
<title>ep_send_events_proc (23 samples, 0.19%)</title><rect x="1017.9" y="803.0" width="2.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1020.9" y="814.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (16 samples, 0.13%)</title><rect x="1018.6" y="787.0" width="1.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1021.6" y="798.0"></text>
</g>
<g>
<title>pipe_poll (5 samples, 0.04%)</title><rect x="1019.1" y="771.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1022.1" y="782.0"></text>
</g>
<g>
<title>sock_poll (6 samples, 0.05%)</title><rect x="1019.5" y="771.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1022.5" y="782.0"></text>
</g>
<g>
<title>tcp_poll (3 samples, 0.02%)</title><rect x="1019.8" y="755.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1022.8" y="766.0"></text>
</g>
<g>
<title>ktime_get_ts64 (3 samples, 0.02%)</title><rect x="1020.3" y="819.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1023.3" y="830.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (60 samples, 0.49%)</title><rect x="1020.6" y="819.0" width="5.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1023.6" y="830.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (24 samples, 0.19%)</title><rect x="1021.1" y="803.0" width="2.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1024.1" y="814.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (22 samples, 0.18%)</title><rect x="1021.1" y="787.0" width="2.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1024.1" y="798.0"></text>
</g>
<g>
<title>hrtimer_try_to_cancel (11 samples, 0.09%)</title><rect x="1023.4" y="803.0" width="1.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1026.4" y="814.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (7 samples, 0.06%)</title><rect x="1023.6" y="787.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1026.6" y="798.0"></text>
</g>
<g>
<title>schedule (20 samples, 0.16%)</title><rect x="1024.4" y="803.0" width="1.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1027.4" y="814.0"></text>
</g>
<g>
<title>__sched_text_start (19 samples, 0.15%)</title><rect x="1024.5" y="787.0" width="1.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1027.5" y="798.0"></text>
</g>
<g>
<title>finish_task_switch (19 samples, 0.15%)</title><rect x="1024.5" y="771.0" width="1.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1027.5" y="782.0"></text>
</g>
<g>
<title>fput_many (3 samples, 0.02%)</title><rect x="1026.6" y="835.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1029.6" y="846.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_EPoll_wait (3 samples, 0.02%)</title><rect x="1026.9" y="915.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1029.9" y="926.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (3 samples, 0.02%)</title><rect x="1027.2" y="915.0" width="0.3" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1030.2" y="926.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (142 samples, 1.15%)</title><rect x="1027.5" y="931.0" width="13.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1030.5" y="942.0"></text>
</g>
<g>
<title>java/util/HashMap.get (7 samples, 0.06%)</title><rect x="1027.9" y="915.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1030.9" y="926.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (7 samples, 0.06%)</title><rect x="1027.9" y="899.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1030.9" y="910.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (121 samples, 0.98%)</title><rect x="1028.7" y="915.0" width="11.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1031.7" y="926.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.drain (117 samples, 0.95%)</title><rect x="1029.1" y="899.0" width="11.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1032.1" y="910.0"></text>
</g>
<g>
<title>__libc_read (115 samples, 0.93%)</title><rect x="1029.3" y="883.0" width="11.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1032.3" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (87 samples, 0.70%)</title><rect x="1031.9" y="867.0" width="8.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1034.9" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (87 samples, 0.70%)</title><rect x="1031.9" y="851.0" width="8.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1034.9" y="862.0"></text>
</g>
<g>
<title>ksys_read (79 samples, 0.64%)</title><rect x="1032.7" y="835.0" width="7.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1035.7" y="846.0"></text>
</g>
<g>
<title>__fdget_pos (5 samples, 0.04%)</title><rect x="1032.7" y="819.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1035.7" y="830.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.03%)</title><rect x="1032.8" y="803.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1035.8" y="814.0"></text>
</g>
<g>
<title>__fget (4 samples, 0.03%)</title><rect x="1032.8" y="787.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1035.8" y="798.0"></text>
</g>
<g>
<title>fput_many (4 samples, 0.03%)</title><rect x="1033.3" y="819.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1036.3" y="830.0"></text>
</g>
<g>
<title>vfs_read (69 samples, 0.56%)</title><rect x="1033.7" y="819.0" width="6.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1036.7" y="830.0"></text>
</g>
<g>
<title>fsnotify (5 samples, 0.04%)</title><rect x="1033.9" y="803.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1036.9" y="814.0"></text>
</g>
<g>
<title>new_sync_read (51 samples, 0.41%)</title><rect x="1034.3" y="803.0" width="4.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1037.3" y="814.0"></text>
</g>
<g>
<title>pipe_read (46 samples, 0.37%)</title><rect x="1034.8" y="787.0" width="4.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1037.8" y="798.0"></text>
</g>
<g>
<title>__wake_up_common_lock (9 samples, 0.07%)</title><rect x="1035.2" y="771.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1038.2" y="782.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (7 samples, 0.06%)</title><rect x="1035.4" y="755.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1038.4" y="766.0"></text>
</g>
<g>
<title>copy_page_to_iter (9 samples, 0.07%)</title><rect x="1036.2" y="771.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1039.2" y="782.0"></text>
</g>
<g>
<title>copyout (7 samples, 0.06%)</title><rect x="1036.4" y="755.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1039.4" y="766.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (5 samples, 0.04%)</title><rect x="1036.6" y="739.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1039.6" y="750.0"></text>
</g>
<g>
<title>generic_pipe_buf_confirm (4 samples, 0.03%)</title><rect x="1037.1" y="771.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1040.1" y="782.0"></text>
</g>
<g>
<title>mutex_lock (5 samples, 0.04%)</title><rect x="1037.5" y="771.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1040.5" y="782.0"></text>
</g>
<g>
<title>touch_atime (13 samples, 0.11%)</title><rect x="1038.0" y="771.0" width="1.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1041.0" y="782.0"></text>
</g>
<g>
<title>__sb_start_write (3 samples, 0.02%)</title><rect x="1038.3" y="755.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1041.3" y="766.0"></text>
</g>
<g>
<title>atime_needs_update (5 samples, 0.04%)</title><rect x="1038.5" y="755.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1041.5" y="766.0"></text>
</g>
<g>
<title>security_file_permission (11 samples, 0.09%)</title><rect x="1039.2" y="803.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1042.2" y="814.0"></text>
</g>
<g>
<title>file_has_perm (6 samples, 0.05%)</title><rect x="1039.2" y="787.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1042.2" y="798.0"></text>
</g>
<g>
<title>avc_has_perm (5 samples, 0.04%)</title><rect x="1039.3" y="771.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1042.3" y="782.0"></text>
</g>
<g>
<title>selinux_file_permission (5 samples, 0.04%)</title><rect x="1039.8" y="787.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1042.8" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (8 samples, 0.06%)</title><rect x="1040.3" y="915.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1043.3" y="926.0"></text>
</g>
<g>
<title>java/util/HashSet.add (6 samples, 0.05%)</title><rect x="1040.4" y="899.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1043.4" y="910.0"></text>
</g>
<g>
<title>java/util/HashMap.put (6 samples, 0.05%)</title><rect x="1040.4" y="883.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1043.4" y="894.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (6 samples, 0.05%)</title><rect x="1040.4" y="867.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1043.4" y="878.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (3 samples, 0.02%)</title><rect x="1040.6" y="851.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1043.6" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processUpdateQueue (6 samples, 0.05%)</title><rect x="1041.0" y="931.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1044.0" y="942.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processDeregisterQueue (15 samples, 0.12%)</title><rect x="1041.9" y="931.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1044.9" y="942.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.next (14 samples, 0.11%)</title><rect x="1041.9" y="915.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1044.9" y="926.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.nextNode (13 samples, 0.11%)</title><rect x="1042.0" y="899.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1045.0" y="910.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (31 samples, 0.25%)</title><rect x="1043.4" y="979.0" width="3.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1046.4" y="990.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (31 samples, 0.25%)</title><rect x="1043.4" y="963.0" width="3.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1046.4" y="974.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (31 samples, 0.25%)</title><rect x="1043.4" y="947.0" width="3.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1046.4" y="958.0"></text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (25 samples, 0.20%)</title><rect x="1043.4" y="931.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1046.4" y="942.0"></text>
</g>
<g>
<title>.annobin_epoll_wait.c (25 samples, 0.20%)</title><rect x="1043.4" y="915.0" width="2.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1046.4" y="926.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (16 samples, 0.13%)</title><rect x="1044.3" y="899.0" width="1.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1047.3" y="910.0"></text>
</g>
<g>
<title>do_syscall_64 (16 samples, 0.13%)</title><rect x="1044.3" y="883.0" width="1.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1047.3" y="894.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (9 samples, 0.07%)</title><rect x="1044.9" y="867.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1047.9" y="878.0"></text>
</g>
<g>
<title>do_epoll_wait (9 samples, 0.07%)</title><rect x="1044.9" y="851.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1047.9" y="862.0"></text>
</g>
<g>
<title>ep_poll (8 samples, 0.06%)</title><rect x="1044.9" y="835.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1047.9" y="846.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (8 samples, 0.06%)</title><rect x="1044.9" y="819.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1047.9" y="830.0"></text>
</g>
<g>
<title>ep_send_events_proc (6 samples, 0.05%)</title><rect x="1045.0" y="803.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1048.0" y="814.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (3 samples, 0.02%)</title><rect x="1045.3" y="787.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1048.3" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (4 samples, 0.03%)</title><rect x="1045.8" y="931.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1048.8" y="942.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (3 samples, 0.02%)</title><rect x="1045.9" y="915.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1048.9" y="926.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (13 samples, 0.11%)</title><rect x="1046.5" y="979.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1049.5" y="990.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (13 samples, 0.11%)</title><rect x="1046.5" y="963.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1049.5" y="974.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (11 samples, 0.09%)</title><rect x="1046.5" y="947.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1049.5" y="958.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.&lt;init&gt; (7 samples, 0.06%)</title><rect x="1046.7" y="931.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1049.7" y="942.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.&lt;init&gt; (7 samples, 0.06%)</title><rect x="1046.7" y="915.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1049.7" y="926.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (790 samples, 6.39%)</title><rect x="1047.9" y="995.0" width="75.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1050.9" y="1006.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (6 samples, 0.05%)</title><rect x="1048.3" y="979.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1051.3" y="990.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (6 samples, 0.05%)</title><rect x="1048.3" y="963.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1051.3" y="974.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (5 samples, 0.04%)</title><rect x="1048.4" y="947.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1051.4" y="958.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (189 samples, 1.53%)</title><rect x="1048.9" y="979.0" width="18.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1051.9" y="990.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (13 samples, 0.11%)</title><rect x="1049.1" y="963.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1052.1" y="974.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (10 samples, 0.08%)</title><rect x="1049.4" y="947.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1052.4" y="958.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.getInt (3 samples, 0.02%)</title><rect x="1050.1" y="931.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1053.1" y="942.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getInt (3 samples, 0.02%)</title><rect x="1050.1" y="915.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1053.1" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (173 samples, 1.40%)</title><rect x="1050.4" y="963.0" width="16.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1053.4" y="974.0"></text>
</g>
<g>
<title>.annobin_epoll_wait.c (144 samples, 1.17%)</title><rect x="1051.2" y="947.0" width="13.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1054.2" y="958.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (128 samples, 1.04%)</title><rect x="1052.8" y="931.0" width="12.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1055.8" y="942.0"></text>
</g>
<g>
<title>do_syscall_64 (128 samples, 1.04%)</title><rect x="1052.8" y="915.0" width="12.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1055.8" y="926.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (123 samples, 1.00%)</title><rect x="1053.2" y="899.0" width="11.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1056.2" y="910.0"></text>
</g>
<g>
<title>do_epoll_wait (122 samples, 0.99%)</title><rect x="1053.3" y="883.0" width="11.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1056.3" y="894.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.02%)</title><rect x="1053.5" y="867.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1056.5" y="878.0"></text>
</g>
<g>
<title>ep_poll (111 samples, 0.90%)</title><rect x="1053.8" y="867.0" width="10.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1056.8" y="878.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (57 samples, 0.46%)</title><rect x="1054.5" y="851.0" width="5.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1057.5" y="862.0"></text>
</g>
<g>
<title>ep_send_events_proc (39 samples, 0.32%)</title><rect x="1055.6" y="835.0" width="3.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1058.6" y="846.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (32 samples, 0.26%)</title><rect x="1056.3" y="819.0" width="3.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1059.3" y="830.0"></text>
</g>
<g>
<title>sock_poll (23 samples, 0.19%)</title><rect x="1057.2" y="803.0" width="2.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1060.2" y="814.0"></text>
</g>
<g>
<title>tcp_poll (5 samples, 0.04%)</title><rect x="1058.9" y="787.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1061.9" y="798.0"></text>
</g>
<g>
<title>mutex_lock (4 samples, 0.03%)</title><rect x="1059.4" y="835.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1062.4" y="846.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (47 samples, 0.38%)</title><rect x="1059.9" y="851.0" width="4.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1062.9" y="862.0"></text>
</g>
<g>
<title>schedule (40 samples, 0.32%)</title><rect x="1060.6" y="835.0" width="3.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1063.6" y="846.0"></text>
</g>
<g>
<title>__sched_text_start (36 samples, 0.29%)</title><rect x="1061.0" y="819.0" width="3.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1064.0" y="830.0"></text>
</g>
<g>
<title>finish_task_switch (32 samples, 0.26%)</title><rect x="1061.4" y="803.0" width="3.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1064.4" y="814.0"></text>
</g>
<g>
<title>fput_many (6 samples, 0.05%)</title><rect x="1064.4" y="867.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1067.4" y="878.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (3 samples, 0.02%)</title><rect x="1065.0" y="947.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1068.0" y="958.0"></text>
</g>
<g>
<title>__GI___clock_gettime (8 samples, 0.06%)</title><rect x="1065.3" y="947.0" width="0.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1068.3" y="958.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (3 samples, 0.02%)</title><rect x="1066.3" y="947.0" width="0.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1069.3" y="958.0"></text>
</g>
<g>
<title>_init (3 samples, 0.02%)</title><rect x="1066.6" y="947.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1069.6" y="958.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (591 samples, 4.78%)</title><rect x="1066.9" y="979.0" width="56.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1069.9" y="990.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (584 samples, 4.73%)</title><rect x="1067.4" y="963.0" width="55.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1070.4" y="974.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (411 samples, 3.33%)</title><rect x="1068.0" y="947.0" width="39.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1071.0" y="958.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (339 samples, 2.74%)</title><rect x="1069.6" y="931.0" width="32.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1072.6" y="942.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (332 samples, 2.69%)</title><rect x="1070.2" y="915.0" width="31.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1073.2" y="926.0">on..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (315 samples, 2.55%)</title><rect x="1070.2" y="899.0" width="30.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1073.2" y="910.0">Re..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (24 samples, 0.19%)</title><rect x="1070.2" y="883.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1073.2" y="894.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (6 samples, 0.05%)</title><rect x="1070.7" y="867.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1073.7" y="878.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (6 samples, 0.05%)</title><rect x="1070.7" y="851.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1073.7" y="862.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.02%)</title><rect x="1071.0" y="835.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1074.0" y="846.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (5 samples, 0.04%)</title><rect x="1071.3" y="867.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1074.3" y="878.0"></text>
</g>
<g>
<title>java/lang/String.length (3 samples, 0.02%)</title><rect x="1071.5" y="851.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1074.5" y="862.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.02%)</title><rect x="1071.8" y="867.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1074.8" y="878.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (5 samples, 0.04%)</title><rect x="1072.1" y="867.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1075.1" y="878.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (5 samples, 0.04%)</title><rect x="1072.1" y="851.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1075.1" y="862.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (5 samples, 0.04%)</title><rect x="1072.1" y="835.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1075.1" y="846.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (5 samples, 0.04%)</title><rect x="1072.1" y="819.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1075.1" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.entity (291 samples, 2.36%)</title><rect x="1072.5" y="883.0" width="27.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1075.5" y="894.0">r..</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (11 samples, 0.09%)</title><rect x="1072.7" y="867.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1075.7" y="878.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (6 samples, 0.05%)</title><rect x="1073.1" y="851.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1076.1" y="862.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (5 samples, 0.04%)</title><rect x="1073.2" y="835.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1076.2" y="846.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (3 samples, 0.02%)</title><rect x="1073.4" y="819.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1076.4" y="830.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (3 samples, 0.02%)</title><rect x="1073.4" y="803.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1076.4" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.executeAsync (177 samples, 1.43%)</title><rect x="1073.8" y="867.0" width="16.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1076.8" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (177 samples, 1.43%)</title><rect x="1073.8" y="851.0" width="16.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1076.8" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (177 samples, 1.43%)</title><rect x="1073.8" y="835.0" width="16.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1076.8" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (162 samples, 1.31%)</title><rect x="1074.0" y="819.0" width="15.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1077.0" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (162 samples, 1.31%)</title><rect x="1074.0" y="803.0" width="15.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1077.0" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (162 samples, 1.31%)</title><rect x="1074.0" y="787.0" width="15.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1077.0" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (162 samples, 1.31%)</title><rect x="1074.0" y="771.0" width="15.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1077.0" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (162 samples, 1.31%)</title><rect x="1074.0" y="755.0" width="15.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1077.0" y="766.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (162 samples, 1.31%)</title><rect x="1074.0" y="739.0" width="15.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1077.0" y="750.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (3 samples, 0.02%)</title><rect x="1074.0" y="723.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1077.0" y="734.0"></text>
</g>
<g>
<title>Unsafe_Unpark (20 samples, 0.16%)</title><rect x="1074.4" y="723.0" width="2.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1077.4" y="734.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (5 samples, 0.04%)</title><rect x="1074.7" y="707.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1077.7" y="718.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_lock (6 samples, 0.05%)</title><rect x="1075.2" y="707.0" width="0.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1078.2" y="718.0"></text>
</g>
<g>
<title>__pthread_cond_signal (134 samples, 1.08%)</title><rect x="1076.4" y="723.0" width="12.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1079.4" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (120 samples, 0.97%)</title><rect x="1077.7" y="707.0" width="11.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1080.7" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (120 samples, 0.97%)</title><rect x="1077.7" y="691.0" width="11.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1080.7" y="702.0"></text>
</g>
<g>
<title>__x64_sys_futex (113 samples, 0.91%)</title><rect x="1078.4" y="675.0" width="10.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1081.4" y="686.0"></text>
</g>
<g>
<title>do_futex (110 samples, 0.89%)</title><rect x="1078.6" y="659.0" width="10.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1081.6" y="670.0"></text>
</g>
<g>
<title>futex_wake (110 samples, 0.89%)</title><rect x="1078.6" y="643.0" width="10.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1081.6" y="654.0"></text>
</g>
<g>
<title>hash_futex (3 samples, 0.02%)</title><rect x="1079.6" y="627.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1082.6" y="638.0"></text>
</g>
<g>
<title>mark_wake_futex (3 samples, 0.02%)</title><rect x="1079.9" y="627.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1082.9" y="638.0"></text>
</g>
<g>
<title>wake_up_q (92 samples, 0.74%)</title><rect x="1080.4" y="627.0" width="8.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1083.4" y="638.0"></text>
</g>
<g>
<title>try_to_wake_up (91 samples, 0.74%)</title><rect x="1080.5" y="611.0" width="8.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1083.5" y="622.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (91 samples, 0.74%)</title><rect x="1080.5" y="595.0" width="8.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1083.5" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (4 samples, 0.03%)</title><rect x="1089.5" y="819.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1092.5" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (4 samples, 0.03%)</title><rect x="1089.5" y="803.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1092.5" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (7 samples, 0.06%)</title><rect x="1089.9" y="819.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1092.9" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (7 samples, 0.06%)</title><rect x="1089.9" y="803.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1092.9" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (4 samples, 0.03%)</title><rect x="1090.0" y="787.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1093.0" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.setPrevRelaxed (3 samples, 0.02%)</title><rect x="1090.1" y="771.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1093.1" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (3 samples, 0.02%)</title><rect x="1090.1" y="755.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1093.1" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.set (3 samples, 0.02%)</title><rect x="1090.1" y="739.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1093.1" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/ConsistentHashImpl.all (73 samples, 0.59%)</title><rect x="1090.7" y="867.0" width="7.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1093.7" y="878.0"></text>
</g>
<g>
<title>java/util/Set.copyOf (73 samples, 0.59%)</title><rect x="1090.7" y="851.0" width="7.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1093.7" y="862.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (14 samples, 0.11%)</title><rect x="1090.9" y="835.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1093.9" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.next (5 samples, 0.04%)</title><rect x="1091.2" y="819.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1094.2" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.nextNode (5 samples, 0.04%)</title><rect x="1091.2" y="803.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1094.2" y="814.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (3 samples, 0.02%)</title><rect x="1091.6" y="819.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1094.6" y="830.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (3 samples, 0.02%)</title><rect x="1091.9" y="819.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1094.9" y="830.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$ListItr.&lt;init&gt; (3 samples, 0.02%)</title><rect x="1091.9" y="803.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1094.9" y="814.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (45 samples, 0.36%)</title><rect x="1092.2" y="835.0" width="4.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1095.2" y="846.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (36 samples, 0.29%)</title><rect x="1092.6" y="819.0" width="3.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1095.6" y="830.0"></text>
</g>
<g>
<title>java/util/HashSet.add (19 samples, 0.15%)</title><rect x="1092.7" y="803.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1095.7" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.put (17 samples, 0.14%)</title><rect x="1092.9" y="787.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1095.9" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (16 samples, 0.13%)</title><rect x="1093.0" y="771.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1096.0" y="782.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (4 samples, 0.03%)</title><rect x="1093.4" y="755.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1096.4" y="766.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (6 samples, 0.05%)</title><rect x="1093.9" y="755.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1096.9" y="766.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeyIterator.next (6 samples, 0.05%)</title><rect x="1094.5" y="803.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1097.5" y="814.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.nextEntry (3 samples, 0.02%)</title><rect x="1094.8" y="787.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1097.8" y="798.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (3 samples, 0.02%)</title><rect x="1094.8" y="771.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1097.8" y="782.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.hasNext (3 samples, 0.02%)</title><rect x="1095.1" y="803.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1098.1" y="814.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (7 samples, 0.06%)</title><rect x="1095.4" y="803.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1098.4" y="814.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (5 samples, 0.04%)</title><rect x="1095.6" y="787.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1098.6" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.&lt;init&gt; (3 samples, 0.02%)</title><rect x="1096.2" y="819.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1099.2" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.&lt;init&gt; (3 samples, 0.02%)</title><rect x="1096.2" y="803.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1099.2" y="814.0"></text>
</g>
<g>
<title>java/util/Set.of (12 samples, 0.10%)</title><rect x="1096.5" y="835.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1099.5" y="846.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$Set12.&lt;init&gt; (4 samples, 0.03%)</title><rect x="1096.6" y="819.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1099.6" y="830.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$SetN.&lt;init&gt; (7 samples, 0.06%)</title><rect x="1097.0" y="819.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1100.0" y="830.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$SetN.probe (4 samples, 0.03%)</title><rect x="1097.3" y="803.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1100.3" y="814.0"></text>
</g>
<g>
<title>java/lang/Math.floorMod (3 samples, 0.02%)</title><rect x="1097.4" y="787.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1100.4" y="798.0"></text>
</g>
<g>
<title>java/lang/Math.floorDiv (3 samples, 0.02%)</title><rect x="1097.4" y="771.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1100.4" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/RF.from (28 samples, 0.23%)</title><rect x="1097.7" y="867.0" width="2.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1100.7" y="878.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.on (5 samples, 0.04%)</title><rect x="1097.7" y="851.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1100.7" y="862.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.on (5 samples, 0.04%)</title><rect x="1097.7" y="835.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1100.7" y="846.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.&lt;init&gt; (5 samples, 0.04%)</title><rect x="1097.7" y="819.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1100.7" y="830.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.&lt;init&gt; (5 samples, 0.04%)</title><rect x="1097.7" y="803.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1100.7" y="814.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splitToList (21 samples, 0.17%)</title><rect x="1098.1" y="851.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1101.1" y="862.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.hasNext (13 samples, 0.11%)</title><rect x="1098.2" y="835.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1101.2" y="846.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.tryToComputeNext (10 samples, 0.08%)</title><rect x="1098.5" y="819.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1101.5" y="830.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (8 samples, 0.06%)</title><rect x="1098.7" y="803.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1101.7" y="814.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (8 samples, 0.06%)</title><rect x="1098.7" y="787.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1101.7" y="798.0"></text>
</g>
<g>
<title>java/lang/String.subSequence (4 samples, 0.03%)</title><rect x="1099.1" y="771.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1102.1" y="782.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.03%)</title><rect x="1099.1" y="755.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1102.1" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.02%)</title><rect x="1099.2" y="739.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1102.2" y="750.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3 samples, 0.02%)</title><rect x="1099.2" y="723.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1102.2" y="734.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splittingIterator (4 samples, 0.03%)</title><rect x="1099.7" y="835.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1102.7" y="846.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (4 samples, 0.03%)</title><rect x="1099.7" y="819.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1102.7" y="830.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (4 samples, 0.03%)</title><rect x="1099.7" y="803.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1102.7" y="814.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1$1.&lt;init&gt; (4 samples, 0.03%)</title><rect x="1099.7" y="787.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1102.7" y="798.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.&lt;init&gt; (3 samples, 0.02%)</title><rect x="1099.8" y="771.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1102.8" y="782.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (6 samples, 0.05%)</title><rect x="1100.4" y="899.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1103.4" y="910.0"></text>
</g>
<g>
<title>java/util/HashMap.get (6 samples, 0.05%)</title><rect x="1100.4" y="883.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1103.4" y="894.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (4 samples, 0.03%)</title><rect x="1100.4" y="867.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1103.4" y="878.0"></text>
</g>
<g>
<title>java/lang/String.equals (4 samples, 0.03%)</title><rect x="1100.4" y="851.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1103.4" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (10 samples, 0.08%)</title><rect x="1101.0" y="899.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1104.0" y="910.0"></text>
</g>
<g>
<title>java/lang/String.substring (10 samples, 0.08%)</title><rect x="1101.0" y="883.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1104.0" y="894.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (10 samples, 0.08%)</title><rect x="1101.0" y="867.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1104.0" y="878.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (10 samples, 0.08%)</title><rect x="1101.0" y="851.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1104.0" y="862.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (5 samples, 0.04%)</title><rect x="1101.0" y="835.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1104.0" y="846.0"></text>
</g>
<g>
<title>itable stub (5 samples, 0.04%)</title><rect x="1101.5" y="835.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1104.5" y="846.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (28 samples, 0.23%)</title><rect x="1101.9" y="931.0" width="2.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1104.9" y="942.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (14 samples, 0.11%)</title><rect x="1102.0" y="915.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1105.0" y="926.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (11 samples, 0.09%)</title><rect x="1103.4" y="915.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1106.4" y="926.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (11 samples, 0.09%)</title><rect x="1103.4" y="899.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1106.4" y="910.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (10 samples, 0.08%)</title><rect x="1103.5" y="883.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1106.5" y="894.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (9 samples, 0.07%)</title><rect x="1103.5" y="867.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1106.5" y="878.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (9 samples, 0.07%)</title><rect x="1104.6" y="931.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1107.6" y="942.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (8 samples, 0.06%)</title><rect x="1104.6" y="915.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1107.6" y="926.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (8 samples, 0.06%)</title><rect x="1104.6" y="899.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1107.6" y="910.0"></text>
</g>
<g>
<title>java/lang/Character.digit (4 samples, 0.03%)</title><rect x="1104.8" y="883.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1107.8" y="894.0"></text>
</g>
<g>
<title>java/lang/Character.digit (4 samples, 0.03%)</title><rect x="1104.8" y="867.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1107.8" y="878.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (17 samples, 0.14%)</title><rect x="1105.5" y="931.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1108.5" y="942.0"></text>
</g>
<g>
<title>java/lang/String.length (3 samples, 0.02%)</title><rect x="1105.5" y="915.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1108.5" y="926.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (12 samples, 0.10%)</title><rect x="1105.8" y="915.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1108.8" y="926.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (11 samples, 0.09%)</title><rect x="1105.9" y="899.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1108.9" y="910.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (4 samples, 0.03%)</title><rect x="1106.5" y="883.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1109.5" y="894.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (4 samples, 0.03%)</title><rect x="1106.5" y="867.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1109.5" y="878.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (4 samples, 0.03%)</title><rect x="1106.5" y="851.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1109.5" y="862.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (166 samples, 1.34%)</title><rect x="1107.3" y="947.0" width="15.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1110.3" y="958.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (166 samples, 1.34%)</title><rect x="1107.3" y="931.0" width="15.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1110.3" y="942.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 0.22%)</title><rect x="1108.2" y="915.0" width="2.5" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="1111.2" y="926.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 0.22%)</title><rect x="1108.2" y="899.0" width="2.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1111.2" y="910.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (18 samples, 0.15%)</title><rect x="1108.2" y="883.0" width="1.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1111.2" y="894.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (3 samples, 0.02%)</title><rect x="1108.8" y="867.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1111.8" y="878.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (4 samples, 0.03%)</title><rect x="1109.1" y="867.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1112.1" y="878.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (4 samples, 0.03%)</title><rect x="1109.5" y="867.0" width="0.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1112.5" y="878.0"></text>
</g>
<g>
<title>__libc_recv (3 samples, 0.02%)</title><rect x="1109.9" y="883.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1112.9" y="894.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (4 samples, 0.03%)</title><rect x="1110.2" y="883.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1113.2" y="894.0"></text>
</g>
<g>
<title>__libc_recv (129 samples, 1.04%)</title><rect x="1110.7" y="915.0" width="12.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1113.7" y="926.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (108 samples, 0.87%)</title><rect x="1112.7" y="899.0" width="10.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1115.7" y="910.0"></text>
</g>
<g>
<title>do_syscall_64 (108 samples, 0.87%)</title><rect x="1112.7" y="883.0" width="10.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1115.7" y="894.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (97 samples, 0.79%)</title><rect x="1113.8" y="867.0" width="9.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1116.8" y="878.0"></text>
</g>
<g>
<title>__sys_recvfrom (94 samples, 0.76%)</title><rect x="1114.1" y="851.0" width="9.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1117.1" y="862.0"></text>
</g>
<g>
<title>import_single_range (3 samples, 0.02%)</title><rect x="1114.5" y="835.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1117.5" y="846.0"></text>
</g>
<g>
<title>inet_recvmsg (63 samples, 0.51%)</title><rect x="1114.7" y="835.0" width="6.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1117.7" y="846.0"></text>
</g>
<g>
<title>tcp_recvmsg (63 samples, 0.51%)</title><rect x="1114.7" y="819.0" width="6.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1117.7" y="830.0"></text>
</g>
<g>
<title>__kfree_skb (10 samples, 0.08%)</title><rect x="1115.6" y="803.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1118.6" y="814.0"></text>
</g>
<g>
<title>skb_release_all (10 samples, 0.08%)</title><rect x="1115.6" y="787.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1118.6" y="798.0"></text>
</g>
<g>
<title>skb_release_head_state (10 samples, 0.08%)</title><rect x="1115.6" y="771.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1118.6" y="782.0"></text>
</g>
<g>
<title>dst_release (3 samples, 0.02%)</title><rect x="1115.7" y="755.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1118.7" y="766.0"></text>
</g>
<g>
<title>sock_rfree (6 samples, 0.05%)</title><rect x="1116.0" y="755.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1119.0" y="766.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (3 samples, 0.02%)</title><rect x="1116.6" y="803.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1119.6" y="814.0"></text>
</g>
<g>
<title>release_sock (3 samples, 0.02%)</title><rect x="1117.1" y="803.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1120.1" y="814.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (31 samples, 0.25%)</title><rect x="1117.4" y="803.0" width="3.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1120.4" y="814.0"></text>
</g>
<g>
<title>__skb_datagram_iter (30 samples, 0.24%)</title><rect x="1117.5" y="787.0" width="2.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1120.5" y="798.0"></text>
</g>
<g>
<title>_copy_to_iter (11 samples, 0.09%)</title><rect x="1117.5" y="771.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1120.5" y="782.0"></text>
</g>
<g>
<title>copyout (11 samples, 0.09%)</title><rect x="1117.5" y="755.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1120.5" y="766.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (11 samples, 0.09%)</title><rect x="1117.5" y="739.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1120.5" y="750.0"></text>
</g>
<g>
<title>simple_copy_to_iter (19 samples, 0.15%)</title><rect x="1118.6" y="771.0" width="1.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1121.6" y="782.0"></text>
</g>
<g>
<title>__check_object_size (17 samples, 0.14%)</title><rect x="1118.8" y="755.0" width="1.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1121.8" y="766.0"></text>
</g>
<g>
<title>__check_heap_object (5 samples, 0.04%)</title><rect x="1119.3" y="739.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1122.3" y="750.0"></text>
</g>
<g>
<title>__virt_addr_valid (5 samples, 0.04%)</title><rect x="1119.8" y="739.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1122.8" y="750.0"></text>
</g>
<g>
<title>sock_recvmsg (12 samples, 0.10%)</title><rect x="1120.8" y="835.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1123.8" y="846.0"></text>
</g>
<g>
<title>security_socket_recvmsg (12 samples, 0.10%)</title><rect x="1120.8" y="819.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1123.8" y="830.0"></text>
</g>
<g>
<title>sock_has_perm (10 samples, 0.08%)</title><rect x="1121.0" y="803.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1124.0" y="814.0"></text>
</g>
<g>
<title>sockfd_lookup_light (12 samples, 0.10%)</title><rect x="1121.9" y="835.0" width="1.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1124.9" y="846.0"></text>
</g>
<g>
<title>__fdget (3 samples, 0.02%)</title><rect x="1121.9" y="819.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1124.9" y="830.0"></text>
</g>
<g>
<title>__fget_light (9 samples, 0.07%)</title><rect x="1122.2" y="819.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1125.2" y="830.0"></text>
</g>
<g>
<title>__fget (6 samples, 0.05%)</title><rect x="1122.5" y="803.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1125.5" y="814.0"></text>
</g>
<g>
<title>start_thread (696 samples, 5.63%)</title><rect x="1123.5" y="995.0" width="66.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1126.5" y="1006.0">start_t..</text>
</g>
<g>
<title>thread_native_entry(Thread*) (696 samples, 5.63%)</title><rect x="1123.5" y="979.0" width="66.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1126.5" y="990.0">thread_..</text>
</g>
<g>
<title>GangWorker::loop() (323 samples, 2.61%)</title><rect x="1123.5" y="963.0" width="30.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1126.5" y="974.0">Ga..</text>
</g>
<g>
<title>G1CMConcurrentMarkingTask::work(unsigned int) (21 samples, 0.17%)</title><rect x="1123.5" y="947.0" width="2.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1126.5" y="958.0"></text>
</g>
<g>
<title>G1CMTask::do_marking_step(double, bool, bool) (21 samples, 0.17%)</title><rect x="1123.5" y="931.0" width="2.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1126.5" y="942.0"></text>
</g>
<g>
<title>G1CMTask::drain_local_queue(bool) [clone .part.153] (15 samples, 0.12%)</title><rect x="1123.7" y="915.0" width="1.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1126.7" y="926.0"></text>
</g>
<g>
<title>void G1CMTask::process_grey_task_entry&lt;true&gt;(G1TaskQueueEntry) (11 samples, 0.09%)</title><rect x="1124.1" y="899.0" width="1.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1127.1" y="910.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1CMOopClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1CMOopClosure*, oopDesc*, Klass*) (10 samples, 0.08%)</title><rect x="1124.2" y="883.0" width="1.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1127.2" y="894.0"></text>
</g>
<g>
<title>G1FreeCollectionSetTask::work(unsigned int) (4 samples, 0.03%)</title><rect x="1125.5" y="947.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1128.5" y="958.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (279 samples, 2.26%)</title><rect x="1125.9" y="947.0" width="26.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1128.9" y="958.0">G..</text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (121 samples, 0.98%)</title><rect x="1125.9" y="931.0" width="11.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1128.9" y="942.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (6 samples, 0.05%)</title><rect x="1126.1" y="915.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1129.1" y="926.0"></text>
</g>
<g>
<title>ParallelTaskTerminator::offer_termination(TerminatorTerminator*) (7 samples, 0.06%)</title><rect x="1126.8" y="915.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1129.8" y="926.0"></text>
</g>
<g>
<title>SpinPause (105 samples, 0.85%)</title><rect x="1127.4" y="915.0" width="10.1" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1130.4" y="926.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (132 samples, 1.07%)</title><rect x="1137.5" y="931.0" width="12.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1140.5" y="942.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (132 samples, 1.07%)</title><rect x="1137.5" y="915.0" width="12.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1140.5" y="926.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (132 samples, 1.07%)</title><rect x="1137.5" y="899.0" width="12.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1140.5" y="910.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (132 samples, 1.07%)</title><rect x="1137.5" y="883.0" width="12.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1140.5" y="894.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (128 samples, 1.04%)</title><rect x="1137.7" y="867.0" width="12.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1140.7" y="878.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (38 samples, 0.31%)</title><rect x="1137.9" y="851.0" width="3.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1140.9" y="862.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (24 samples, 0.19%)</title><rect x="1138.7" y="835.0" width="2.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1141.7" y="846.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (10 samples, 0.08%)</title><rect x="1140.1" y="819.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1143.1" y="830.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (5 samples, 0.04%)</title><rect x="1141.0" y="835.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1144.0" y="846.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.121] (88 samples, 0.71%)</title><rect x="1141.5" y="851.0" width="8.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1144.5" y="862.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (82 samples, 0.66%)</title><rect x="1141.6" y="835.0" width="7.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1144.6" y="846.0"></text>
</g>
<g>
<title>G1BlockOffsetTablePart::forward_to_block_containing_addr_slow(HeapWord*, HeapWord*, void const*) (10 samples, 0.08%)</title><rect x="1143.5" y="819.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1146.5" y="830.0"></text>
</g>
<g>
<title>void G1ScanObjsDuringUpdateRSClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) (32 samples, 0.26%)</title><rect x="1144.8" y="819.0" width="3.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1147.8" y="830.0"></text>
</g>
<g>
<title>void OopOopIterateBoundedDispatch&lt;G1ScanObjsDuringUpdateRSClosure&gt;::Table::oop_oop_iterate_bounded&lt;ObjArrayKlass, unsigned int&gt;(G1ScanObjsDuringUpdateRSClosure*, oopDesc*, Klass*, MemRegion) (9 samples, 0.07%)</title><rect x="1147.9" y="819.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1150.9" y="830.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1ScanObjsDuringUpdateRSClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1ScanObjsDuringUpdateRSClosure*, oopDesc*, Klass*) (7 samples, 0.06%)</title><rect x="1148.7" y="819.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1151.7" y="830.0"></text>
</g>
<g>
<title>oopDesc::size() (3 samples, 0.02%)</title><rect x="1149.4" y="835.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1152.4" y="846.0"></text>
</g>
<g>
<title>G1RemSet::scan_rem_set(G1ParScanThreadState*, unsigned int) (9 samples, 0.07%)</title><rect x="1150.1" y="931.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1153.1" y="942.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const (9 samples, 0.07%)</title><rect x="1150.1" y="915.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1153.1" y="926.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::do_heap_region(HeapRegion*) (9 samples, 0.07%)</title><rect x="1150.1" y="899.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1153.1" y="910.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::scan_rem_set_roots(HeapRegion*) (7 samples, 0.06%)</title><rect x="1150.3" y="883.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1153.3" y="894.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (16 samples, 0.13%)</title><rect x="1150.9" y="931.0" width="1.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1153.9" y="942.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (10 samples, 0.08%)</title><rect x="1151.3" y="915.0" width="1.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1154.3" y="926.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (10 samples, 0.08%)</title><rect x="1151.3" y="899.0" width="1.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1154.3" y="910.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (10 samples, 0.08%)</title><rect x="1151.3" y="883.0" width="1.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1154.3" y="894.0"></text>
</g>
<g>
<title>frame::oops_do_internal(OopClosure*, CodeBlobClosure*, RegisterMap*, bool) (5 samples, 0.04%)</title><rect x="1151.5" y="867.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1154.5" y="878.0"></text>
</g>
<g>
<title>OopMapSet::oops_do(frame const*, RegisterMap const*, OopClosure*) (4 samples, 0.03%)</title><rect x="1151.5" y="851.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1154.5" y="862.0"></text>
</g>
<g>
<title>G1ParallelCleaningTask::work(unsigned int) (3 samples, 0.02%)</title><rect x="1152.6" y="947.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1155.6" y="958.0"></text>
</g>
<g>
<title>SymbolTable::possibly_parallel_unlink(int*, int*) (3 samples, 0.02%)</title><rect x="1152.6" y="931.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1155.6" y="942.0"></text>
</g>
<g>
<title>G1RebuildRemSetTask::work(unsigned int) (10 samples, 0.08%)</title><rect x="1152.9" y="947.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1155.9" y="958.0"></text>
</g>
<g>
<title>HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const (10 samples, 0.08%)</title><rect x="1152.9" y="931.0" width="0.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1155.9" y="942.0"></text>
</g>
<g>
<title>G1RebuildRemSetTask::G1RebuildRemSetHeapRegionClosure::do_heap_region(HeapRegion*) (9 samples, 0.07%)</title><rect x="1152.9" y="915.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1155.9" y="926.0"></text>
</g>
<g>
<title>ParallelSPCleanupTask::work(unsigned int) (3 samples, 0.02%)</title><rect x="1153.9" y="947.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1156.9" y="958.0"></text>
</g>
<g>
<title>JavaThread::run() (355 samples, 2.87%)</title><rect x="1154.4" y="963.0" width="33.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1157.4" y="974.0">Ja..</text>
</g>
<g>
<title>JavaThread::thread_main_inner() (355 samples, 2.87%)</title><rect x="1154.4" y="947.0" width="33.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1157.4" y="958.0">Ja..</text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (350 samples, 2.83%)</title><rect x="1154.4" y="931.0" width="33.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1157.4" y="942.0">Co..</text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (349 samples, 2.82%)</title><rect x="1154.4" y="915.0" width="33.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1157.4" y="926.0">Co..</text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (334 samples, 2.70%)</title><rect x="1154.4" y="899.0" width="31.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1157.4" y="910.0">C2..</text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (334 samples, 2.70%)</title><rect x="1154.4" y="883.0" width="31.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1157.4" y="894.0">Co..</text>
</g>
<g>
<title>Compile::Code_Gen() (169 samples, 1.37%)</title><rect x="1154.4" y="867.0" width="16.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1157.4" y="878.0"></text>
</g>
<g>
<title>Compile::Output() (5 samples, 0.04%)</title><rect x="1154.4" y="851.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1157.4" y="862.0"></text>
</g>
<g>
<title>Compile::init_buffer(unsigned int*) (3 samples, 0.02%)</title><rect x="1154.6" y="835.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1157.6" y="846.0"></text>
</g>
<g>
<title>Compile::shorten_branches(unsigned int*, int&amp;, int&amp;, int&amp;) (3 samples, 0.02%)</title><rect x="1154.6" y="819.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1157.6" y="830.0"></text>
</g>
<g>
<title>Compile::fill_buffer(CodeBuffer*, unsigned int*) (6 samples, 0.05%)</title><rect x="1154.9" y="851.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1157.9" y="862.0"></text>
</g>
<g>
<title>Matcher::match() (8 samples, 0.06%)</title><rect x="1155.4" y="851.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1158.4" y="862.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (6 samples, 0.05%)</title><rect x="1155.5" y="835.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1158.5" y="846.0"></text>
</g>
<g>
<title>Arena::contains(void const*) const (3 samples, 0.02%)</title><rect x="1155.6" y="819.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1158.6" y="830.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (17 samples, 0.14%)</title><rect x="1156.3" y="851.0" width="1.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1159.3" y="862.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (15 samples, 0.12%)</title><rect x="1156.5" y="835.0" width="1.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1159.5" y="846.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_late(VectorSet&amp;, Node_Stack&amp;) (3 samples, 0.02%)</title><rect x="1156.7" y="819.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1159.7" y="830.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (5 samples, 0.04%)</title><rect x="1157.4" y="819.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1160.4" y="830.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (131 samples, 1.06%)</title><rect x="1158.0" y="851.0" width="12.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1161.0" y="862.0"></text>
</g>
<g>
<title>PhaseAggressiveCoalesce::insert_copies(Matcher&amp;) (5 samples, 0.04%)</title><rect x="1158.1" y="835.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1161.1" y="846.0"></text>
</g>
<g>
<title>PhaseChaitin::Select() (5 samples, 0.04%)</title><rect x="1158.6" y="835.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1161.6" y="846.0"></text>
</g>
<g>
<title>PhaseChaitin::Simplify() (6 samples, 0.05%)</title><rect x="1159.1" y="835.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1162.1" y="846.0"></text>
</g>
<g>
<title>PhaseIFG::remove_node(unsigned int) (5 samples, 0.04%)</title><rect x="1159.2" y="819.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1162.2" y="830.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (13 samples, 0.11%)</title><rect x="1159.6" y="835.0" width="1.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1162.6" y="846.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (30 samples, 0.24%)</title><rect x="1160.9" y="835.0" width="2.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1163.9" y="846.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (14 samples, 0.11%)</title><rect x="1161.6" y="819.0" width="1.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1164.6" y="830.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (5 samples, 0.04%)</title><rect x="1162.5" y="803.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1165.5" y="814.0"></text>
</g>
<g>
<title>PhaseChaitin::remove_bound_register_from_interfering_live_ranges(LRG&amp;, IndexSet*, unsigned int&amp;) (6 samples, 0.05%)</title><rect x="1163.0" y="819.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1166.0" y="830.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (3 samples, 0.02%)</title><rect x="1163.2" y="803.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1166.2" y="814.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_virtual() (3 samples, 0.02%)</title><rect x="1163.7" y="835.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1166.7" y="846.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (11 samples, 0.09%)</title><rect x="1164.2" y="835.0" width="1.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1167.2" y="846.0"></text>
</g>
<g>
<title>RegMask::Size() const (6 samples, 0.05%)</title><rect x="1164.5" y="819.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1167.5" y="830.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) [clone .constprop.87] (8 samples, 0.06%)</title><rect x="1165.3" y="835.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1168.3" y="846.0"></text>
</g>
<g>
<title>RegMask::Size() const (5 samples, 0.04%)</title><rect x="1165.4" y="819.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1168.4" y="830.0"></text>
</g>
<g>
<title>PhaseChaitin::merge_multidefs() (4 samples, 0.03%)</title><rect x="1166.0" y="835.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1169.0" y="846.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (15 samples, 0.12%)</title><rect x="1166.4" y="835.0" width="1.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1169.4" y="846.0"></text>
</g>
<g>
<title>PhaseChaitin::elide_copy(Node*, int, Block*, Node_List&amp;, Node_List&amp;, bool) (8 samples, 0.06%)</title><rect x="1166.9" y="819.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1169.9" y="830.0"></text>
</g>
<g>
<title>PhaseCoalesce::coalesce_driver() (5 samples, 0.04%)</title><rect x="1167.8" y="835.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1170.8" y="846.0"></text>
</g>
<g>
<title>PhaseConservativeCoalesce::coalesce(Block*) (5 samples, 0.04%)</title><rect x="1167.8" y="819.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1170.8" y="830.0"></text>
</g>
<g>
<title>PhaseIFG::Compute_Effective_Degree() (5 samples, 0.04%)</title><rect x="1168.3" y="835.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1171.3" y="846.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (12 samples, 0.10%)</title><rect x="1169.0" y="835.0" width="1.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1172.0" y="846.0"></text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&amp;) (4 samples, 0.03%)</title><rect x="1169.8" y="819.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1172.8" y="830.0"></text>
</g>
<g>
<title>Compile::Optimize() (118 samples, 0.96%)</title><rect x="1170.6" y="867.0" width="11.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1173.6" y="878.0"></text>
</g>
<g>
<title>Compile::final_graph_reshaping() (5 samples, 0.04%)</title><rect x="1170.6" y="851.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1173.6" y="862.0"></text>
</g>
<g>
<title>Compile::final_graph_reshaping_walk(Node_Stack&amp;, Node*, Final_Reshape_Counts&amp;) (4 samples, 0.03%)</title><rect x="1170.7" y="835.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1173.7" y="846.0"></text>
</g>
<g>
<title>Compile::remove_speculative_types(PhaseIterGVN&amp;) [clone .part.254] (3 samples, 0.02%)</title><rect x="1171.1" y="851.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1174.1" y="862.0"></text>
</g>
<g>
<title>ConnectionGraph::do_analysis(Compile*, PhaseIterGVN*) (3 samples, 0.02%)</title><rect x="1171.4" y="851.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1174.4" y="862.0"></text>
</g>
<g>
<title>ConnectionGraph::compute_escape() (3 samples, 0.02%)</title><rect x="1171.4" y="835.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1174.4" y="846.0"></text>
</g>
<g>
<title>PhaseCCP::analyze() (6 samples, 0.05%)</title><rect x="1171.9" y="851.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1174.9" y="862.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(bool, bool, bool) (78 samples, 0.63%)</title><rect x="1172.5" y="851.0" width="7.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1175.5" y="862.0"></text>
</g>
<g>
<title>PhaseIdealLoop::Dominators() (4 samples, 0.03%)</title><rect x="1172.9" y="835.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1175.9" y="846.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_early(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (11 samples, 0.09%)</title><rect x="1173.3" y="835.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1176.3" y="846.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (41 samples, 0.33%)</title><rect x="1174.3" y="835.0" width="4.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1177.3" y="846.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (36 samples, 0.29%)</title><rect x="1174.8" y="819.0" width="3.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1177.8" y="830.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_late_ctrl(Node*, Node*) (31 samples, 0.25%)</title><rect x="1175.2" y="803.0" width="3.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1178.2" y="814.0"></text>
</g>
<g>
<title>PhaseIdealLoop::is_dominator(Node*, Node*) (26 samples, 0.21%)</title><rect x="1175.7" y="787.0" width="2.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1178.7" y="798.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks(VectorSet&amp;, Node_Stack&amp;, bool) (8 samples, 0.06%)</title><rect x="1178.4" y="835.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1181.4" y="846.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks_pre(Node*) (4 samples, 0.03%)</title><rect x="1178.7" y="819.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1181.7" y="830.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (7 samples, 0.06%)</title><rect x="1179.2" y="835.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1182.2" y="846.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (7 samples, 0.06%)</title><rect x="1179.2" y="819.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1182.2" y="830.0"></text>
</g>
<g>
<title>NodeHash::hash_find_insert(Node*) (4 samples, 0.03%)</title><rect x="1179.2" y="803.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1182.2" y="814.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (14 samples, 0.11%)</title><rect x="1180.0" y="851.0" width="1.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1183.0" y="862.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (13 samples, 0.11%)</title><rect x="1180.1" y="835.0" width="1.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1183.1" y="846.0"></text>
</g>
<g>
<title>StoreNode::Ideal(PhaseGVN*, bool) (3 samples, 0.02%)</title><rect x="1180.9" y="819.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1183.9" y="830.0"></text>
</g>
<g>
<title>PhaseMacroExpand::expand_macro_nodes() (3 samples, 0.02%)</title><rect x="1181.4" y="851.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1184.4" y="862.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (3 samples, 0.02%)</title><rect x="1181.4" y="835.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1184.4" y="846.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (3 samples, 0.02%)</title><rect x="1181.4" y="819.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1184.4" y="830.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (39 samples, 0.32%)</title><rect x="1182.1" y="867.0" width="3.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1185.1" y="878.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (39 samples, 0.32%)</title><rect x="1182.1" y="851.0" width="3.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1185.1" y="862.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (39 samples, 0.32%)</title><rect x="1182.1" y="835.0" width="3.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1185.1" y="846.0"></text>
</g>
<g>
<title>Parse::do_one_block() (39 samples, 0.32%)</title><rect x="1182.1" y="819.0" width="3.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1185.1" y="830.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (38 samples, 0.31%)</title><rect x="1182.2" y="803.0" width="3.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1185.2" y="814.0"></text>
</g>
<g>
<title>Parse::do_call() (37 samples, 0.30%)</title><rect x="1182.2" y="787.0" width="3.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1185.2" y="798.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (29 samples, 0.23%)</title><rect x="1182.4" y="771.0" width="2.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1185.4" y="782.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (29 samples, 0.23%)</title><rect x="1182.4" y="755.0" width="2.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1185.4" y="766.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (29 samples, 0.23%)</title><rect x="1182.4" y="739.0" width="2.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1185.4" y="750.0"></text>
</g>
<g>
<title>Parse::do_one_block() (29 samples, 0.23%)</title><rect x="1182.4" y="723.0" width="2.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1185.4" y="734.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (29 samples, 0.23%)</title><rect x="1182.4" y="707.0" width="2.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1185.4" y="718.0"></text>
</g>
<g>
<title>Parse::do_call() (29 samples, 0.23%)</title><rect x="1182.4" y="691.0" width="2.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1185.4" y="702.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (3 samples, 0.02%)</title><rect x="1182.4" y="675.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1185.4" y="686.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (18 samples, 0.15%)</title><rect x="1182.6" y="675.0" width="1.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1185.6" y="686.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (17 samples, 0.14%)</title><rect x="1182.6" y="659.0" width="1.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1185.6" y="670.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (16 samples, 0.13%)</title><rect x="1182.7" y="643.0" width="1.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1185.7" y="654.0"></text>
</g>
<g>
<title>Parse::do_one_block() (16 samples, 0.13%)</title><rect x="1182.7" y="627.0" width="1.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1185.7" y="638.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (16 samples, 0.13%)</title><rect x="1182.7" y="611.0" width="1.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1185.7" y="622.0"></text>
</g>
<g>
<title>Parse::do_call() (13 samples, 0.11%)</title><rect x="1182.7" y="595.0" width="1.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1185.7" y="606.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (12 samples, 0.10%)</title><rect x="1182.7" y="579.0" width="1.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1185.7" y="590.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (12 samples, 0.10%)</title><rect x="1182.7" y="563.0" width="1.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1185.7" y="574.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (12 samples, 0.10%)</title><rect x="1182.7" y="547.0" width="1.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1185.7" y="558.0"></text>
</g>
<g>
<title>Parse::do_one_block() (12 samples, 0.10%)</title><rect x="1182.7" y="531.0" width="1.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1185.7" y="542.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (12 samples, 0.10%)</title><rect x="1182.7" y="515.0" width="1.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1185.7" y="526.0"></text>
</g>
<g>
<title>Parse::do_call() (12 samples, 0.10%)</title><rect x="1182.7" y="499.0" width="1.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1185.7" y="510.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (9 samples, 0.07%)</title><rect x="1182.8" y="483.0" width="0.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1185.8" y="494.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (9 samples, 0.07%)</title><rect x="1182.8" y="467.0" width="0.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1185.8" y="478.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (8 samples, 0.06%)</title><rect x="1182.8" y="451.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1185.8" y="462.0"></text>
</g>
<g>
<title>Parse::do_one_block() (8 samples, 0.06%)</title><rect x="1182.8" y="435.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1185.8" y="446.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (8 samples, 0.06%)</title><rect x="1182.8" y="419.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1185.8" y="430.0"></text>
</g>
<g>
<title>Parse::do_call() (8 samples, 0.06%)</title><rect x="1182.8" y="403.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1185.8" y="414.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (8 samples, 0.06%)</title><rect x="1182.8" y="387.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1185.8" y="398.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (8 samples, 0.06%)</title><rect x="1182.8" y="371.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1185.8" y="382.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (8 samples, 0.06%)</title><rect x="1182.8" y="355.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1185.8" y="366.0"></text>
</g>
<g>
<title>Parse::do_one_block() (8 samples, 0.06%)</title><rect x="1182.8" y="339.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1185.8" y="350.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (8 samples, 0.06%)</title><rect x="1182.8" y="323.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1185.8" y="334.0"></text>
</g>
<g>
<title>Parse::do_call() (6 samples, 0.05%)</title><rect x="1182.9" y="307.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1185.9" y="318.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.03%)</title><rect x="1183.0" y="291.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1186.0" y="302.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.03%)</title><rect x="1183.0" y="275.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1186.0" y="286.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.02%)</title><rect x="1183.1" y="259.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1186.1" y="270.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.02%)</title><rect x="1183.1" y="243.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1186.1" y="254.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.02%)</title><rect x="1183.1" y="227.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1186.1" y="238.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (3 samples, 0.02%)</title><rect x="1184.0" y="595.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1187.0" y="606.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (6 samples, 0.05%)</title><rect x="1184.4" y="675.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1187.4" y="686.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (5 samples, 0.04%)</title><rect x="1184.4" y="659.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1187.4" y="670.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (5 samples, 0.04%)</title><rect x="1184.4" y="643.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1187.4" y="654.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (5 samples, 0.04%)</title><rect x="1184.4" y="627.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1187.4" y="638.0"></text>
</g>
<g>
<title>Parse::do_one_block() (5 samples, 0.04%)</title><rect x="1184.4" y="611.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1187.4" y="622.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (5 samples, 0.04%)</title><rect x="1184.4" y="595.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1187.4" y="606.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.03%)</title><rect x="1184.4" y="579.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1187.4" y="590.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.02%)</title><rect x="1184.5" y="563.0" width="0.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1187.5" y="574.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.02%)</title><rect x="1184.5" y="547.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1187.5" y="558.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.02%)</title><rect x="1184.5" y="531.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1187.5" y="542.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.02%)</title><rect x="1184.5" y="515.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1187.5" y="526.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.02%)</title><rect x="1184.5" y="499.0" width="0.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1187.5" y="510.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.02%)</title><rect x="1184.5" y="483.0" width="0.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1187.5" y="494.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (6 samples, 0.05%)</title><rect x="1185.1" y="771.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1188.1" y="782.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.03%)</title><rect x="1185.1" y="755.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1188.1" y="766.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.03%)</title><rect x="1185.1" y="739.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1188.1" y="750.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.03%)</title><rect x="1185.1" y="723.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1188.1" y="734.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.03%)</title><rect x="1185.1" y="707.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1188.1" y="718.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 0.03%)</title><rect x="1185.1" y="691.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1188.1" y="702.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.03%)</title><rect x="1185.1" y="675.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1188.1" y="686.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.02%)</title><rect x="1185.1" y="659.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1188.1" y="670.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.02%)</title><rect x="1185.1" y="643.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1188.1" y="654.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.02%)</title><rect x="1185.1" y="627.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1188.1" y="638.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.02%)</title><rect x="1185.1" y="611.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1188.1" y="622.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.02%)</title><rect x="1185.1" y="595.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1188.1" y="606.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.02%)</title><rect x="1185.1" y="579.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1188.1" y="590.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.02%)</title><rect x="1185.1" y="563.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1188.1" y="574.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.02%)</title><rect x="1185.1" y="547.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1188.1" y="558.0"></text>
</g>
<g>
<title>PhaseRemoveUseless::PhaseRemoveUseless(PhaseGVN*, Unique_Node_List*, Phase::PhaseNumber) (4 samples, 0.03%)</title><rect x="1185.8" y="867.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1188.8" y="878.0"></text>
</g>
<g>
<title>Compile::identify_useful_nodes(Unique_Node_List&amp;) (4 samples, 0.03%)</title><rect x="1185.8" y="851.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1188.8" y="862.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (15 samples, 0.12%)</title><rect x="1186.3" y="899.0" width="1.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1189.3" y="910.0"></text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*) (15 samples, 0.12%)</title><rect x="1186.3" y="883.0" width="1.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1189.3" y="894.0"></text>
</g>
<g>
<title>Compilation::compile_method() (15 samples, 0.12%)</title><rect x="1186.3" y="867.0" width="1.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1189.3" y="878.0"></text>
</g>
<g>
<title>Compilation::compile_java_method() (13 samples, 0.11%)</title><rect x="1186.3" y="851.0" width="1.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1189.3" y="862.0"></text>
</g>
<g>
<title>Compilation::build_hir() [clone .part.93] (6 samples, 0.05%)</title><rect x="1186.3" y="835.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1189.3" y="846.0"></text>
</g>
<g>
<title>IR::IR(Compilation*, ciMethod*, int) (5 samples, 0.04%)</title><rect x="1186.4" y="819.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1189.4" y="830.0"></text>
</g>
<g>
<title>IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool) (5 samples, 0.04%)</title><rect x="1186.4" y="803.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1189.4" y="814.0"></text>
</g>
<g>
<title>GraphBuilder::GraphBuilder(Compilation*, IRScope*) (5 samples, 0.04%)</title><rect x="1186.4" y="787.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1189.4" y="798.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (5 samples, 0.04%)</title><rect x="1186.4" y="771.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1189.4" y="782.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (5 samples, 0.04%)</title><rect x="1186.4" y="755.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1189.4" y="766.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (3 samples, 0.02%)</title><rect x="1186.5" y="739.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1189.5" y="750.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (3 samples, 0.02%)</title><rect x="1186.5" y="723.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1189.5" y="734.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (3 samples, 0.02%)</title><rect x="1186.5" y="707.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1189.5" y="718.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (3 samples, 0.02%)</title><rect x="1186.5" y="691.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1189.5" y="702.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (3 samples, 0.02%)</title><rect x="1186.5" y="675.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1189.5" y="686.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (3 samples, 0.02%)</title><rect x="1186.5" y="659.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1189.5" y="670.0"></text>
</g>
<g>
<title>Compilation::emit_lir() (5 samples, 0.04%)</title><rect x="1187.0" y="835.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1190.0" y="846.0"></text>
</g>
<g>
<title>LinearScan::do_linear_scan() (3 samples, 0.02%)</title><rect x="1187.2" y="819.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1190.2" y="830.0"></text>
</g>
<g>
<title>ServiceThread::service_thread_entry(JavaThread*, Thread*) (4 samples, 0.03%)</title><rect x="1187.9" y="931.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1190.9" y="942.0"></text>
</g>
<g>
<title>JvmtiDeferredEvent::post() (4 samples, 0.03%)</title><rect x="1187.9" y="915.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1190.9" y="926.0"></text>
</g>
<g>
<title>JvmtiExport::post_compiled_method_load(nmethod*) (4 samples, 0.03%)</title><rect x="1187.9" y="899.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1190.9" y="910.0"></text>
</g>
<g>
<title>create_inline_record(nmethod*) (3 samples, 0.02%)</title><rect x="1188.0" y="883.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1191.0" y="894.0"></text>
</g>
<g>
<title>VMThread::run() (16 samples, 0.13%)</title><rect x="1188.3" y="963.0" width="1.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1191.3" y="974.0"></text>
</g>
<g>
<title>VMThread::loop() (16 samples, 0.13%)</title><rect x="1188.3" y="947.0" width="1.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1191.3" y="958.0"></text>
</g>
<g>
<title>SafepointSynchronize::begin() (4 samples, 0.03%)</title><rect x="1188.3" y="931.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1191.3" y="942.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.54] (9 samples, 0.07%)</title><rect x="1188.7" y="931.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1191.7" y="942.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (9 samples, 0.07%)</title><rect x="1188.7" y="915.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1191.7" y="926.0"></text>
</g>
<g>
<title>VM_G1CollectForAllocation::doit() (9 samples, 0.07%)</title><rect x="1188.7" y="899.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1191.7" y="910.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (8 samples, 0.06%)</title><rect x="1188.7" y="883.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1191.7" y="894.0"></text>
</g>
<g>
<title>__GI_sched_yield (3 samples, 0.02%)</title><rect x="1189.5" y="931.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1192.5" y="942.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.02%)</title><rect x="1189.5" y="915.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1192.5" y="926.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.02%)</title><rect x="1189.5" y="899.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1192.5" y="910.0"></text>
</g>
</g>
</svg>
