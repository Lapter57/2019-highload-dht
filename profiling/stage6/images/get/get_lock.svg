<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="630" onload="init(evt)" viewBox="0 0 1200 630" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="613"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="613"> </text>
<g id="frames">
<g>
<title>all (31,426 samples, 100.00%)</title><rect x="10.0" y="579.0" width="1180.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="13.0" y="590.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (19,314 samples, 61.46%)</title><rect x="10.0" y="563.0" width="725.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.0" y="574.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (19,314 samples, 61.46%)</title><rect x="10.0" y="547.0" width="725.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.0" y="558.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (19,314 samples, 61.46%)</title><rect x="10.0" y="531.0" width="725.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="13.0" y="542.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (6,710 samples, 21.35%)</title><rect x="10.0" y="515.0" width="252.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.0" y="526.0">java/util/concurrent/CompletableF..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (6,710 samples, 21.35%)</title><rect x="10.0" y="499.0" width="252.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.0" y="510.0">java/util/concurrent/CompletableF..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (6,710 samples, 21.35%)</title><rect x="10.0" y="483.0" width="252.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="13.0" y="494.0">java/util/concurrent/CompletableF..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$133/1711595431.apply (6,710 samples, 21.35%)</title><rect x="10.0" y="467.0" width="252.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.0" y="478.0">jdk/internal/net/http/MultiExchan..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (6,710 samples, 21.35%)</title><rect x="10.0" y="451.0" width="252.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.0" y="462.0">jdk/internal/net/http/MultiExchan..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (6,710 samples, 21.35%)</title><rect x="10.0" y="435.0" width="252.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.0" y="446.0">jdk/internal/net/http/MultiExchan..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (6,693 samples, 21.30%)</title><rect x="10.0" y="419.0" width="251.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.0" y="430.0">jdk/internal/net/http/Exchange.re..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (6,693 samples, 21.30%)</title><rect x="10.0" y="403.0" width="251.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.0" y="414.0">jdk/internal/net/http/Exchange.re..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (6,693 samples, 21.30%)</title><rect x="10.0" y="387.0" width="251.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="13.0" y="398.0">jdk/internal/net/http/Exchange.re..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (3,689 samples, 11.74%)</title><rect x="10.0" y="371.0" width="138.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.0" y="382.0">java/util/concurr..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (3,689 samples, 11.74%)</title><rect x="10.0" y="355.0" width="138.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="13.0" y="366.0">java/util/concurr..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (3,689 samples, 11.74%)</title><rect x="10.0" y="339.0" width="138.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="13.0" y="350.0">java/util/concurr..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$174/1093022843.apply (3,689 samples, 11.74%)</title><rect x="10.0" y="323.0" width="138.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="13.0" y="334.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (3,689 samples, 11.74%)</title><rect x="10.0" y="307.0" width="138.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.0" y="318.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (3,689 samples, 11.74%)</title><rect x="10.0" y="291.0" width="138.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="13.0" y="302.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$139/1035318298.apply (3,689 samples, 11.74%)</title><rect x="10.0" y="275.0" width="138.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.0" y="286.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (3,689 samples, 11.74%)</title><rect x="10.0" y="259.0" width="138.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="13.0" y="270.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (3,689 samples, 11.74%)</title><rect x="10.0" y="243.0" width="138.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="13.0" y="254.0">jdk/internal/net/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (3,689 samples, 11.74%)</title><rect x="10.0" y="227.0" width="138.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.0" y="238.0">java/util/concurr..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (3,689 samples, 11.74%)</title><rect x="10.0" y="211.0" width="138.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="13.0" y="222.0">java/util/concurr..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$189/1784125001.apply (3,689 samples, 11.74%)</title><rect x="10.0" y="195.0" width="138.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.0" y="206.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (3,689 samples, 11.74%)</title><rect x="10.0" y="179.0" width="138.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="13.0" y="190.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (3,689 samples, 11.74%)</title><rect x="10.0" y="163.0" width="138.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="13.0" y="174.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (3,689 samples, 11.74%)</title><rect x="10.0" y="147.0" width="138.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.0" y="158.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (1,032 samples, 3.28%)</title><rect x="10.0" y="131.0" width="38.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="13.0" y="142.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (1,032 samples, 3.28%)</title><rect x="10.0" y="115.0" width="38.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.0" y="126.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (1,032 samples, 3.28%)</title><rect x="10.0" y="99.0" width="38.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.0" y="110.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (1,032 samples, 3.28%)</title><rect x="10.0" y="83.0" width="38.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.0" y="94.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (1,032 samples, 3.28%)</title><rect x="10.0" y="67.0" width="38.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.0" y="78.0">jdk..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (598 samples, 1.90%)</title><rect x="10.0" y="51.0" width="22.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="13.0" y="62.0">j..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (434 samples, 1.38%)</title><rect x="32.5" y="51.0" width="16.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="35.5" y="62.0"></text>
</g>
<g>
<title>java.lang.Object (434 samples, 1.38%)</title><rect x="32.5" y="35.0" width="16.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="35.5" y="46.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (2,657 samples, 8.45%)</title><rect x="48.8" y="131.0" width="99.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="51.8" y="142.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (2,657 samples, 8.45%)</title><rect x="48.8" y="115.0" width="99.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="51.8" y="126.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (2,657 samples, 8.45%)</title><rect x="48.8" y="99.0" width="99.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="51.8" y="110.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (2,657 samples, 8.45%)</title><rect x="48.8" y="83.0" width="99.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="51.8" y="94.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (2,657 samples, 8.45%)</title><rect x="48.8" y="67.0" width="99.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="51.8" y="78.0">jdk/internal..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (1,895 samples, 6.03%)</title><rect x="48.8" y="51.0" width="71.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="51.8" y="62.0">jdk.inte..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (762 samples, 2.42%)</title><rect x="119.9" y="51.0" width="28.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="122.9" y="62.0">su..</text>
</g>
<g>
<title>java.lang.Object (762 samples, 2.42%)</title><rect x="119.9" y="35.0" width="28.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="122.9" y="46.0">ja..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (3,004 samples, 9.56%)</title><rect x="148.5" y="371.0" width="112.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="151.5" y="382.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (3,004 samples, 9.56%)</title><rect x="148.5" y="355.0" width="112.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="151.5" y="366.0">jdk/internal/n..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (2,987 samples, 9.50%)</title><rect x="148.5" y="339.0" width="112.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="151.5" y="350.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (2,987 samples, 9.50%)</title><rect x="148.5" y="323.0" width="112.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="151.5" y="334.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (2,987 samples, 9.50%)</title><rect x="148.5" y="307.0" width="112.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="151.5" y="318.0">java/util/conc..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$144/821458659.apply (2,987 samples, 9.50%)</title><rect x="148.5" y="291.0" width="112.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="151.5" y="302.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$get$0 (2,987 samples, 9.50%)</title><rect x="148.5" y="275.0" width="112.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="151.5" y="286.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createExchangeImpl (2,987 samples, 9.50%)</title><rect x="148.5" y="259.0" width="112.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="151.5" y="270.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (2,987 samples, 9.50%)</title><rect x="148.5" y="243.0" width="112.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="151.5" y="254.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (2,987 samples, 9.50%)</title><rect x="148.5" y="227.0" width="112.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="151.5" y="238.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (2,983 samples, 9.49%)</title><rect x="148.5" y="211.0" width="112.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="151.5" y="222.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (2,983 samples, 9.49%)</title><rect x="148.5" y="195.0" width="112.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="151.5" y="206.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool (2,983 samples, 9.49%)</title><rect x="148.5" y="179.0" width="112.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="151.5" y="190.0">jdk.internal.n..</text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getConnectionFor (17 samples, 0.05%)</title><rect x="260.7" y="339.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="263.7" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http2ClientImpl (17 samples, 0.05%)</title><rect x="260.7" y="323.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="263.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.requestFilters (17 samples, 0.05%)</title><rect x="261.3" y="419.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="264.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.request (17 samples, 0.05%)</title><rect x="261.3" y="403.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="264.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (12 samples, 0.04%)</title><rect x="261.5" y="387.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="264.5" y="398.0"></text>
</g>
<g>
<title>java.lang.Class (12 samples, 0.04%)</title><rect x="261.5" y="371.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="264.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (2,303 samples, 7.33%)</title><rect x="262.0" y="515.0" width="86.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="265.0" y="526.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (2,302 samples, 7.33%)</title><rect x="262.0" y="499.0" width="86.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="265.0" y="510.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (441 samples, 1.40%)</title><rect x="262.0" y="483.0" width="16.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="265.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (441 samples, 1.40%)</title><rect x="262.0" y="467.0" width="16.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="265.0" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (441 samples, 1.40%)</title><rect x="262.0" y="451.0" width="16.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="265.0" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (441 samples, 1.40%)</title><rect x="262.0" y="435.0" width="16.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="265.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (441 samples, 1.40%)</title><rect x="262.0" y="419.0" width="16.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="265.0" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (441 samples, 1.40%)</title><rect x="262.0" y="403.0" width="16.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="265.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1,861 samples, 5.92%)</title><rect x="278.5" y="483.0" width="69.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="281.5" y="494.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1,861 samples, 5.92%)</title><rect x="278.5" y="467.0" width="69.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="281.5" y="478.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (1,861 samples, 5.92%)</title><rect x="278.5" y="451.0" width="69.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="281.5" y="462.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1,861 samples, 5.92%)</title><rect x="278.5" y="435.0" width="69.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="281.5" y="446.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1,861 samples, 5.92%)</title><rect x="278.5" y="419.0" width="69.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="281.5" y="430.0">java/ut..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1,861 samples, 5.92%)</title><rect x="278.5" y="403.0" width="69.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="281.5" y="414.0">jdk/int..</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (1,861 samples, 5.92%)</title><rect x="278.5" y="387.0" width="69.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="281.5" y="398.0">java.ut..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (10,295 samples, 32.76%)</title><rect x="348.7" y="515.0" width="386.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="351.7" y="526.0">jdk/internal/net/http/common/SequentialScheduler$Sche..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (10,295 samples, 32.76%)</title><rect x="348.7" y="499.0" width="386.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="351.7" y="510.0">jdk/internal/net/http/common/SequentialScheduler$Comp..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (3,178 samples, 10.11%)</title><rect x="348.7" y="483.0" width="119.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="351.7" y="494.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$166/1615159449.run (3,178 samples, 10.11%)</title><rect x="348.7" y="467.0" width="119.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="351.7" y="478.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (3,178 samples, 10.11%)</title><rect x="348.7" y="451.0" width="119.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="351.7" y="462.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (3,163 samples, 10.06%)</title><rect x="348.7" y="435.0" width="118.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="351.7" y="446.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (3,163 samples, 10.06%)</title><rect x="348.7" y="419.0" width="118.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="351.7" y="430.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (3,163 samples, 10.06%)</title><rect x="348.7" y="403.0" width="118.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="351.7" y="414.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (3,163 samples, 10.06%)</title><rect x="348.7" y="387.0" width="118.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="351.7" y="398.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (3,163 samples, 10.06%)</title><rect x="348.7" y="371.0" width="118.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="351.7" y="382.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (3,163 samples, 10.06%)</title><rect x="348.7" y="355.0" width="118.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="351.7" y="366.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (3,163 samples, 10.06%)</title><rect x="348.7" y="339.0" width="118.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="351.7" y="350.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (3,163 samples, 10.06%)</title><rect x="348.7" y="323.0" width="118.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="351.7" y="334.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (3,163 samples, 10.06%)</title><rect x="348.7" y="307.0" width="118.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="351.7" y="318.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (2,546 samples, 8.10%)</title><rect x="348.7" y="291.0" width="95.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="351.7" y="302.0">jdk.interna..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (617 samples, 1.96%)</title><rect x="444.2" y="291.0" width="23.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="447.2" y="302.0">s..</text>
</g>
<g>
<title>java.lang.Object (617 samples, 1.96%)</title><rect x="444.2" y="275.0" width="23.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="447.2" y="286.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (15 samples, 0.05%)</title><rect x="467.4" y="435.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="470.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (15 samples, 0.05%)</title><rect x="467.4" y="419.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="470.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (15 samples, 0.05%)</title><rect x="467.4" y="403.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="470.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (15 samples, 0.05%)</title><rect x="467.4" y="387.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="470.4" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (15 samples, 0.05%)</title><rect x="467.4" y="371.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="470.4" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (15 samples, 0.05%)</title><rect x="467.4" y="355.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="470.4" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (15 samples, 0.05%)</title><rect x="467.4" y="339.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="470.4" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (15 samples, 0.05%)</title><rect x="467.4" y="323.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="470.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (15 samples, 0.05%)</title><rect x="467.4" y="307.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="470.4" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (15 samples, 0.05%)</title><rect x="467.4" y="291.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="470.4" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (15 samples, 0.05%)</title><rect x="467.4" y="275.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="470.4" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (15 samples, 0.05%)</title><rect x="467.4" y="259.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="470.4" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (15 samples, 0.05%)</title><rect x="467.4" y="243.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="470.4" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (15 samples, 0.05%)</title><rect x="467.4" y="227.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="470.4" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$192/1158665635.apply (15 samples, 0.05%)</title><rect x="467.4" y="211.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="470.4" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (15 samples, 0.05%)</title><rect x="467.4" y="195.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="470.4" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (15 samples, 0.05%)</title><rect x="467.4" y="179.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="470.4" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.response (15 samples, 0.05%)</title><rect x="467.4" y="163.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="470.4" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (15 samples, 0.05%)</title><rect x="467.4" y="147.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="470.4" y="158.0"></text>
</g>
<g>
<title>java.lang.Class (15 samples, 0.05%)</title><rect x="467.4" y="131.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="470.4" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (7,117 samples, 22.65%)</title><rect x="468.0" y="483.0" width="267.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="471.0" y="494.0">jdk/internal/net/http/common/Sequent..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (7,117 samples, 22.65%)</title><rect x="468.0" y="467.0" width="267.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="471.0" y="478.0">jdk/internal/net/http/common/Sequent..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (7,117 samples, 22.65%)</title><rect x="468.0" y="451.0" width="267.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="471.0" y="462.0">jdk/internal/net/http/common/Sequent..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$166/1615159449.run (7,117 samples, 22.65%)</title><rect x="468.0" y="435.0" width="267.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="471.0" y="446.0">jdk/internal/net/http/Http1AsyncRece..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (7,117 samples, 22.65%)</title><rect x="468.0" y="419.0" width="267.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="471.0" y="430.0">jdk/internal/net/http/Http1AsyncRece..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.tryAsyncReceive (7,117 samples, 22.65%)</title><rect x="468.0" y="403.0" width="267.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="471.0" y="414.0">jdk/internal/net/http/Http1Response$..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (7,117 samples, 22.65%)</title><rect x="468.0" y="387.0" width="267.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="471.0" y="398.0">jdk/internal/net/http/Http1Response$..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (7,117 samples, 22.65%)</title><rect x="468.0" y="371.0" width="267.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="471.0" y="382.0">jdk/internal/net/http/Http1Response$..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (7,117 samples, 22.65%)</title><rect x="468.0" y="355.0" width="267.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="471.0" y="366.0">jdk/internal/net/http/Http1Response$..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (7,117 samples, 22.65%)</title><rect x="468.0" y="339.0" width="267.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="471.0" y="350.0">jdk/internal/net/http/ResponseConten..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (7,117 samples, 22.65%)</title><rect x="468.0" y="323.0" width="267.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="471.0" y="334.0">jdk/internal/net/http/ResponseConten..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$233/1245151766.run (7,117 samples, 22.65%)</title><rect x="468.0" y="307.0" width="267.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="471.0" y="318.0">jdk/internal/net/http/Http1Response$..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (7,117 samples, 22.65%)</title><rect x="468.0" y="291.0" width="267.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="471.0" y="302.0">jdk/internal/net/http/Http1Response...</text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (7,117 samples, 22.65%)</title><rect x="468.0" y="275.0" width="267.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="471.0" y="286.0">jdk/internal/net/http/HttpConnection..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (7,117 samples, 22.65%)</title><rect x="468.0" y="259.0" width="267.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="471.0" y="270.0">jdk/internal/net/http/ConnectionPool..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (7,117 samples, 22.65%)</title><rect x="468.0" y="243.0" width="267.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="471.0" y="254.0">jdk/internal/net/http/ConnectionPool..</text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool (3,178 samples, 10.11%)</title><rect x="468.0" y="227.0" width="119.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="471.0" y="238.0">jdk.internal.ne..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (3,939 samples, 12.53%)</title><rect x="587.3" y="227.0" width="147.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="590.3" y="238.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (3,939 samples, 12.53%)</title><rect x="587.3" y="211.0" width="147.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="590.3" y="222.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (975 samples, 3.10%)</title><rect x="587.3" y="195.0" width="36.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="590.3" y="206.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (975 samples, 3.10%)</title><rect x="587.3" y="179.0" width="36.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="590.3" y="190.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (975 samples, 3.10%)</title><rect x="587.3" y="163.0" width="36.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="590.3" y="174.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (975 samples, 3.10%)</title><rect x="587.3" y="147.0" width="36.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="590.3" y="158.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (975 samples, 3.10%)</title><rect x="587.3" y="131.0" width="36.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="590.3" y="142.0">jdk..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (659 samples, 2.10%)</title><rect x="587.3" y="115.0" width="24.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="590.3" y="126.0">j..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (316 samples, 1.01%)</title><rect x="612.1" y="115.0" width="11.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="615.1" y="126.0"></text>
</g>
<g>
<title>java.lang.Object (316 samples, 1.01%)</title><rect x="612.1" y="99.0" width="11.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="615.1" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (2,964 samples, 9.43%)</title><rect x="623.9" y="195.0" width="111.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="626.9" y="206.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (2,964 samples, 9.43%)</title><rect x="623.9" y="179.0" width="111.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="626.9" y="190.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (2,964 samples, 9.43%)</title><rect x="623.9" y="163.0" width="111.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="626.9" y="174.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (2,964 samples, 9.43%)</title><rect x="623.9" y="147.0" width="111.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="626.9" y="158.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (2,964 samples, 9.43%)</title><rect x="623.9" y="131.0" width="111.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="626.9" y="142.0">jdk/internal/..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (2,544 samples, 8.10%)</title><rect x="623.9" y="115.0" width="95.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="626.9" y="126.0">jdk.interna..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (420 samples, 1.34%)</title><rect x="719.4" y="115.0" width="15.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="722.4" y="126.0"></text>
</g>
<g>
<title>java.lang.Object (420 samples, 1.34%)</title><rect x="719.4" y="99.0" width="15.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="722.4" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (193 samples, 0.61%)</title><rect x="735.2" y="563.0" width="7.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="738.2" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (193 samples, 0.61%)</title><rect x="735.2" y="547.0" width="7.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="738.2" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (193 samples, 0.61%)</title><rect x="735.2" y="531.0" width="7.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="738.2" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (193 samples, 0.61%)</title><rect x="735.2" y="515.0" width="7.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="738.2" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (193 samples, 0.61%)</title><rect x="735.2" y="499.0" width="7.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="738.2" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (193 samples, 0.61%)</title><rect x="735.2" y="483.0" width="7.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="738.2" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (141 samples, 0.45%)</title><rect x="735.2" y="467.0" width="5.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="738.2" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService$$Lambda$254/2026265775.apply (141 samples, 0.45%)</title><rect x="735.2" y="451.0" width="5.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="738.2" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.lambda$get$3 (141 samples, 0.45%)</title><rect x="735.2" y="435.0" width="5.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="738.2" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.getResponsesFromReplicas (141 samples, 0.45%)</title><rect x="735.2" y="419.0" width="5.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="738.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (91 samples, 0.29%)</title><rect x="735.2" y="403.0" width="3.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="738.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (91 samples, 0.29%)</title><rect x="735.2" y="387.0" width="3.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="738.2" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (91 samples, 0.29%)</title><rect x="735.2" y="371.0" width="3.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="738.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (91 samples, 0.29%)</title><rect x="735.2" y="355.0" width="3.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="738.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (91 samples, 0.29%)</title><rect x="735.2" y="339.0" width="3.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="738.2" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (91 samples, 0.29%)</title><rect x="735.2" y="323.0" width="3.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="738.2" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (91 samples, 0.29%)</title><rect x="735.2" y="307.0" width="3.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="738.2" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (91 samples, 0.29%)</title><rect x="735.2" y="291.0" width="3.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="738.2" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (32 samples, 0.10%)</title><rect x="735.2" y="275.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="738.2" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (32 samples, 0.10%)</title><rect x="735.2" y="259.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="738.2" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (32 samples, 0.10%)</title><rect x="735.2" y="243.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="738.2" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (32 samples, 0.10%)</title><rect x="735.2" y="227.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="738.2" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (32 samples, 0.10%)</title><rect x="735.2" y="211.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="738.2" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (32 samples, 0.10%)</title><rect x="735.2" y="195.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="738.2" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (32 samples, 0.10%)</title><rect x="735.2" y="179.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="738.2" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (32 samples, 0.10%)</title><rect x="735.2" y="163.0" width="1.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="738.2" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (59 samples, 0.19%)</title><rect x="736.4" y="275.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="739.4" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (59 samples, 0.19%)</title><rect x="736.4" y="259.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="739.4" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (59 samples, 0.19%)</title><rect x="736.4" y="243.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="739.4" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (59 samples, 0.19%)</title><rect x="736.4" y="227.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="739.4" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (59 samples, 0.19%)</title><rect x="736.4" y="211.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="739.4" y="222.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (59 samples, 0.19%)</title><rect x="736.4" y="195.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="739.4" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (59 samples, 0.19%)</title><rect x="736.4" y="179.0" width="2.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="739.4" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.getFirstResponses (50 samples, 0.16%)</title><rect x="738.6" y="403.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="741.6" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.orTimeout (50 samples, 0.16%)</title><rect x="738.6" y="387.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="741.6" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Delayer.delay (50 samples, 0.16%)</title><rect x="738.6" y="371.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="741.6" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor.schedule (50 samples, 0.16%)</title><rect x="738.6" y="355.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="741.6" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor.delayedExecute (50 samples, 0.16%)</title><rect x="738.6" y="339.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="741.6" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.add (50 samples, 0.16%)</title><rect x="738.6" y="323.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="741.6" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.add (50 samples, 0.16%)</title><rect x="738.6" y="307.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="741.6" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.offer (50 samples, 0.16%)</title><rect x="738.6" y="291.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="741.6" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (50 samples, 0.16%)</title><rect x="738.6" y="275.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="741.6" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (50 samples, 0.16%)</title><rect x="738.6" y="259.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="741.6" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (50 samples, 0.16%)</title><rect x="738.6" y="243.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="741.6" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (50 samples, 0.16%)</title><rect x="738.6" y="227.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="741.6" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (50 samples, 0.16%)</title><rect x="738.6" y="211.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="741.6" y="222.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (50 samples, 0.16%)</title><rect x="738.6" y="195.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="741.6" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (50 samples, 0.16%)</title><rect x="738.6" y="179.0" width="1.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="741.6" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (52 samples, 0.17%)</title><rect x="740.5" y="467.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="743.5" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (48 samples, 0.15%)</title><rect x="740.5" y="451.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="743.5" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (48 samples, 0.15%)</title><rect x="740.5" y="435.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="743.5" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (48 samples, 0.15%)</title><rect x="740.5" y="419.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="743.5" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (48 samples, 0.15%)</title><rect x="740.5" y="403.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="743.5" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Canceller.accept (48 samples, 0.15%)</title><rect x="740.5" y="387.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="743.5" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Canceller.accept (48 samples, 0.15%)</title><rect x="740.5" y="371.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="743.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$ScheduledFutureTask.cancel (48 samples, 0.15%)</title><rect x="740.5" y="355.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="743.5" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.remove (48 samples, 0.15%)</title><rect x="740.5" y="339.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="743.5" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.remove (48 samples, 0.15%)</title><rect x="740.5" y="323.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="743.5" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (48 samples, 0.15%)</title><rect x="740.5" y="307.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="743.5" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (48 samples, 0.15%)</title><rect x="740.5" y="291.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="743.5" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (48 samples, 0.15%)</title><rect x="740.5" y="275.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="743.5" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (48 samples, 0.15%)</title><rect x="740.5" y="259.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="743.5" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (48 samples, 0.15%)</title><rect x="740.5" y="243.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="743.5" y="254.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (48 samples, 0.15%)</title><rect x="740.5" y="227.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="743.5" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (48 samples, 0.15%)</title><rect x="740.5" y="211.0" width="1.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="743.5" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (11,806 samples, 37.57%)</title><rect x="742.5" y="563.0" width="443.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="745.5" y="574.0">jdk/internal/net/http/HttpClientImpl$SelectorManager.run</text>
</g>
<g>
<title>java/util/ArrayList.forEach (46 samples, 0.15%)</title><rect x="742.5" y="547.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="745.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$198/1799291049.accept (46 samples, 0.15%)</title><rect x="742.5" y="531.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="745.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (46 samples, 0.15%)</title><rect x="742.5" y="515.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="745.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (46 samples, 0.15%)</title><rect x="742.5" y="499.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="745.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (46 samples, 0.15%)</title><rect x="742.5" y="483.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="745.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (46 samples, 0.15%)</title><rect x="742.5" y="467.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="745.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (46 samples, 0.15%)</title><rect x="742.5" y="451.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="745.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (46 samples, 0.15%)</title><rect x="742.5" y="435.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="745.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (46 samples, 0.15%)</title><rect x="742.5" y="419.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="745.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (46 samples, 0.15%)</title><rect x="742.5" y="403.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="745.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (46 samples, 0.15%)</title><rect x="742.5" y="387.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="745.5" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$157/1360780123.run (46 samples, 0.15%)</title><rect x="742.5" y="371.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="745.5" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (46 samples, 0.15%)</title><rect x="742.5" y="355.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="745.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (46 samples, 0.15%)</title><rect x="742.5" y="339.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="745.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (46 samples, 0.15%)</title><rect x="742.5" y="323.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="745.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (46 samples, 0.15%)</title><rect x="742.5" y="307.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="745.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (46 samples, 0.15%)</title><rect x="742.5" y="291.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="745.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (46 samples, 0.15%)</title><rect x="742.5" y="275.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="745.5" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (46 samples, 0.15%)</title><rect x="742.5" y="259.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="745.5" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (46 samples, 0.15%)</title><rect x="742.5" y="243.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="745.5" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (46 samples, 0.15%)</title><rect x="742.5" y="227.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="745.5" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (43 samples, 0.14%)</title><rect x="742.5" y="211.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="745.5" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (43 samples, 0.14%)</title><rect x="742.5" y="195.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="745.5" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (43 samples, 0.14%)</title><rect x="742.5" y="179.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="745.5" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (43 samples, 0.14%)</title><rect x="742.5" y="163.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="745.5" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (43 samples, 0.14%)</title><rect x="742.5" y="147.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="745.5" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (43 samples, 0.14%)</title><rect x="742.5" y="131.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="745.5" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (43 samples, 0.14%)</title><rect x="742.5" y="115.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="745.5" y="126.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (43 samples, 0.14%)</title><rect x="742.5" y="99.0" width="1.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="745.5" y="110.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (8,625 samples, 27.45%)</title><rect x="744.2" y="547.0" width="323.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="747.2" y="558.0">jdk.internal.net.http.HttpClientImpl$Selecto..</text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (183 samples, 0.58%)</title><rect x="1068.0" y="547.0" width="6.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1071.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$159/717507571.run (42 samples, 0.13%)</title><rect x="1068.0" y="531.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1071.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (42 samples, 0.13%)</title><rect x="1068.0" y="515.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1071.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (42 samples, 0.13%)</title><rect x="1068.0" y="499.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1071.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (42 samples, 0.13%)</title><rect x="1068.0" y="483.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1071.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (42 samples, 0.13%)</title><rect x="1068.0" y="467.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1071.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (42 samples, 0.13%)</title><rect x="1068.0" y="451.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1071.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$157/1360780123.run (42 samples, 0.13%)</title><rect x="1068.0" y="435.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1071.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (42 samples, 0.13%)</title><rect x="1068.0" y="419.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1071.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (42 samples, 0.13%)</title><rect x="1068.0" y="403.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1071.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (42 samples, 0.13%)</title><rect x="1068.0" y="387.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1071.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (42 samples, 0.13%)</title><rect x="1068.0" y="371.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1071.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (42 samples, 0.13%)</title><rect x="1068.0" y="355.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1071.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (42 samples, 0.13%)</title><rect x="1068.0" y="339.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1071.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (42 samples, 0.13%)</title><rect x="1068.0" y="323.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1071.0" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (42 samples, 0.13%)</title><rect x="1068.0" y="307.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1071.0" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (42 samples, 0.13%)</title><rect x="1068.0" y="291.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1071.0" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (33 samples, 0.11%)</title><rect x="1068.0" y="275.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1071.0" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (33 samples, 0.11%)</title><rect x="1068.0" y="259.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1071.0" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (33 samples, 0.11%)</title><rect x="1068.0" y="243.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1071.0" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (33 samples, 0.11%)</title><rect x="1068.0" y="227.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1071.0" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (33 samples, 0.11%)</title><rect x="1068.0" y="211.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1071.0" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (33 samples, 0.11%)</title><rect x="1068.0" y="195.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1071.0" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (33 samples, 0.11%)</title><rect x="1068.0" y="179.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1071.0" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (33 samples, 0.11%)</title><rect x="1068.0" y="163.0" width="1.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1071.0" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (9 samples, 0.03%)</title><rect x="1069.3" y="275.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1072.3" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (9 samples, 0.03%)</title><rect x="1069.3" y="259.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1072.3" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (9 samples, 0.03%)</title><rect x="1069.3" y="243.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1072.3" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (9 samples, 0.03%)</title><rect x="1069.3" y="227.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1072.3" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (9 samples, 0.03%)</title><rect x="1069.3" y="211.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1072.3" y="222.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (9 samples, 0.03%)</title><rect x="1069.3" y="195.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1072.3" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (9 samples, 0.03%)</title><rect x="1069.3" y="179.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1072.3" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$161/782771317.run (141 samples, 0.45%)</title><rect x="1069.6" y="531.0" width="5.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1072.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (141 samples, 0.45%)</title><rect x="1069.6" y="515.0" width="5.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1072.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (141 samples, 0.45%)</title><rect x="1069.6" y="499.0" width="5.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1072.6" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (141 samples, 0.45%)</title><rect x="1069.6" y="483.0" width="5.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1072.6" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (141 samples, 0.45%)</title><rect x="1069.6" y="467.0" width="5.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1072.6" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (127 samples, 0.40%)</title><rect x="1069.6" y="451.0" width="4.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1072.6" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (127 samples, 0.40%)</title><rect x="1069.6" y="435.0" width="4.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1072.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (127 samples, 0.40%)</title><rect x="1069.6" y="419.0" width="4.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1072.6" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (127 samples, 0.40%)</title><rect x="1069.6" y="403.0" width="4.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1072.6" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (127 samples, 0.40%)</title><rect x="1069.6" y="387.0" width="4.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1072.6" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (127 samples, 0.40%)</title><rect x="1069.6" y="371.0" width="4.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1072.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (127 samples, 0.40%)</title><rect x="1069.6" y="355.0" width="4.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1072.6" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (127 samples, 0.40%)</title><rect x="1069.6" y="339.0" width="4.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1072.6" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (14 samples, 0.04%)</title><rect x="1074.4" y="451.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1077.4" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (14 samples, 0.04%)</title><rect x="1074.4" y="435.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1077.4" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (14 samples, 0.04%)</title><rect x="1074.4" y="419.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1077.4" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (14 samples, 0.04%)</title><rect x="1074.4" y="403.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1077.4" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (14 samples, 0.04%)</title><rect x="1074.4" y="387.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1077.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (14 samples, 0.04%)</title><rect x="1074.4" y="371.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1077.4" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (14 samples, 0.04%)</title><rect x="1074.4" y="355.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1077.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (2,480 samples, 7.89%)</title><rect x="1074.9" y="547.0" width="93.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1077.9" y="558.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (2,480 samples, 7.89%)</title><rect x="1074.9" y="531.0" width="93.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1077.9" y="542.0">jdk/interna..</text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool (2,480 samples, 7.89%)</title><rect x="1074.9" y="515.0" width="93.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1077.9" y="526.0">jdk.interna..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (460 samples, 1.46%)</title><rect x="1168.0" y="547.0" width="17.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1171.0" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (460 samples, 1.46%)</title><rect x="1168.0" y="531.0" width="17.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1171.0" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (460 samples, 1.46%)</title><rect x="1168.0" y="515.0" width="17.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1171.0" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (460 samples, 1.46%)</title><rect x="1168.0" y="499.0" width="17.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1171.0" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (460 samples, 1.46%)</title><rect x="1168.0" y="483.0" width="17.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1171.0" y="494.0"></text>
</g>
<g>
<title>java.lang.Object (460 samples, 1.46%)</title><rect x="1168.0" y="467.0" width="17.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1171.0" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (12 samples, 0.04%)</title><rect x="1185.3" y="547.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1188.3" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (12 samples, 0.04%)</title><rect x="1185.3" y="531.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1188.3" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (12 samples, 0.04%)</title><rect x="1185.3" y="515.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1188.3" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (12 samples, 0.04%)</title><rect x="1185.3" y="499.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1188.3" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (12 samples, 0.04%)</title><rect x="1185.3" y="483.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1188.3" y="494.0"></text>
</g>
<g>
<title>java.lang.Object (12 samples, 0.04%)</title><rect x="1185.3" y="467.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1188.3" y="478.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (113 samples, 0.36%)</title><rect x="1185.8" y="563.0" width="4.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1188.8" y="574.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (113 samples, 0.36%)</title><rect x="1185.8" y="547.0" width="4.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1188.8" y="558.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (113 samples, 0.36%)</title><rect x="1185.8" y="531.0" width="4.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1188.8" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (113 samples, 0.36%)</title><rect x="1185.8" y="515.0" width="4.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1188.8" y="526.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (113 samples, 0.36%)</title><rect x="1185.8" y="499.0" width="4.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1188.8" y="510.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (113 samples, 0.36%)</title><rect x="1185.8" y="483.0" width="4.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1188.8" y="494.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (113 samples, 0.36%)</title><rect x="1185.8" y="467.0" width="4.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1188.8" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.entity (113 samples, 0.36%)</title><rect x="1185.8" y="451.0" width="4.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1188.8" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.executeAsync (113 samples, 0.36%)</title><rect x="1185.8" y="435.0" width="4.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1188.8" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (113 samples, 0.36%)</title><rect x="1185.8" y="419.0" width="4.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1188.8" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (113 samples, 0.36%)</title><rect x="1185.8" y="403.0" width="4.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1188.8" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (112 samples, 0.36%)</title><rect x="1185.8" y="387.0" width="4.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1188.8" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (112 samples, 0.36%)</title><rect x="1185.8" y="371.0" width="4.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1188.8" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (112 samples, 0.36%)</title><rect x="1185.8" y="355.0" width="4.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1188.8" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (112 samples, 0.36%)</title><rect x="1185.8" y="339.0" width="4.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1188.8" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (112 samples, 0.36%)</title><rect x="1185.8" y="323.0" width="4.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1188.8" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (112 samples, 0.36%)</title><rect x="1185.8" y="307.0" width="4.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1188.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (112 samples, 0.36%)</title><rect x="1185.8" y="291.0" width="4.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1188.8" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (112 samples, 0.36%)</title><rect x="1185.8" y="275.0" width="4.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1188.8" y="286.0"></text>
</g>
</g>
</svg>
