<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="966" onload="init(evt)" viewBox="0 0 1200 966" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="949"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="949"> </text>
<g id="frames">
<g>
<title>all (29,508 samples, 100.00%)</title><rect x="10.0" y="915.0" width="1180.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="13.0" y="926.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (19,197 samples, 65.06%)</title><rect x="10.0" y="899.0" width="767.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="13.0" y="910.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (19,197 samples, 65.06%)</title><rect x="10.0" y="883.0" width="767.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.0" y="894.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (19,197 samples, 65.06%)</title><rect x="10.0" y="867.0" width="767.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="13.0" y="878.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (7,515 samples, 25.47%)</title><rect x="10.0" y="851.0" width="300.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.0" y="862.0">java/util/concurrent/CompletableFuture$A..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (7,515 samples, 25.47%)</title><rect x="10.0" y="835.0" width="300.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.0" y="846.0">java/util/concurrent/CompletableFuture.p..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (7,515 samples, 25.47%)</title><rect x="10.0" y="819.0" width="300.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="13.0" y="830.0">java/util/concurrent/CompletableFuture$U..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$128/1729551726.apply (7,515 samples, 25.47%)</title><rect x="10.0" y="803.0" width="300.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.0" y="814.0">jdk/internal/net/http/MultiExchange$$Lam..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (7,515 samples, 25.47%)</title><rect x="10.0" y="787.0" width="300.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.0" y="798.0">jdk/internal/net/http/MultiExchange.lamb..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (7,515 samples, 25.47%)</title><rect x="10.0" y="771.0" width="300.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="13.0" y="782.0">jdk/internal/net/http/MultiExchange.resp..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (7,496 samples, 25.40%)</title><rect x="10.0" y="755.0" width="299.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.0" y="766.0">jdk/internal/net/http/Exchange.responseA..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (7,496 samples, 25.40%)</title><rect x="10.0" y="739.0" width="299.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="13.0" y="750.0">jdk/internal/net/http/Exchange.responseA..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (7,496 samples, 25.40%)</title><rect x="10.0" y="723.0" width="299.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="13.0" y="734.0">jdk/internal/net/http/Exchange.responseA..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (6,752 samples, 22.88%)</title><rect x="10.0" y="707.0" width="270.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.0" y="718.0">java/util/concurrent/CompletableFutu..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (6,752 samples, 22.88%)</title><rect x="10.0" y="691.0" width="270.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="13.0" y="702.0">java/util/concurrent/CompletableFutu..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (6,752 samples, 22.88%)</title><rect x="10.0" y="675.0" width="270.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="13.0" y="686.0">java/util/concurrent/CompletableFutu..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$209/384755526.apply (6,752 samples, 22.88%)</title><rect x="10.0" y="659.0" width="270.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="13.0" y="670.0">jdk/internal/net/http/Exchange$$Lamb..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (6,752 samples, 22.88%)</title><rect x="10.0" y="643.0" width="270.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="13.0" y="654.0">jdk/internal/net/http/Exchange.lambd..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (6,752 samples, 22.88%)</title><rect x="10.0" y="627.0" width="270.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="13.0" y="638.0">jdk/internal/net/http/Exchange.check..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$149/2119912657.apply (6,752 samples, 22.88%)</title><rect x="10.0" y="611.0" width="270.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.0" y="622.0">jdk/internal/net/http/Exchange$$Lamb..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (6,752 samples, 22.88%)</title><rect x="10.0" y="595.0" width="270.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.0" y="606.0">jdk/internal/net/http/Exchange.lambd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (6,752 samples, 22.88%)</title><rect x="10.0" y="579.0" width="270.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.0" y="590.0">jdk/internal/net/http/Http1Exchange...</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (6,752 samples, 22.88%)</title><rect x="10.0" y="563.0" width="270.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.0" y="574.0">java/util/concurrent/CompletableFutu..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (6,752 samples, 22.88%)</title><rect x="10.0" y="547.0" width="270.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.0" y="558.0">java/util/concurrent/CompletableFutu..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$232/1335640103.apply (6,752 samples, 22.88%)</title><rect x="10.0" y="531.0" width="270.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="13.0" y="542.0">jdk/internal/net/http/Http1Exchange$..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (6,752 samples, 22.88%)</title><rect x="10.0" y="515.0" width="270.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.0" y="526.0">jdk/internal/net/http/Http1Exchange...</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (6,752 samples, 22.88%)</title><rect x="10.0" y="499.0" width="270.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="13.0" y="510.0">jdk/internal/net/http/Http1Exchange...</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (6,752 samples, 22.88%)</title><rect x="10.0" y="483.0" width="270.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.0" y="494.0">jdk/internal/net/http/SocketTube.con..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (1,332 samples, 4.51%)</title><rect x="10.0" y="467.0" width="53.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.0" y="478.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (1,332 samples, 4.51%)</title><rect x="10.0" y="451.0" width="53.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="13.0" y="462.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (1,332 samples, 4.51%)</title><rect x="10.0" y="435.0" width="53.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.0" y="446.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (1,332 samples, 4.51%)</title><rect x="10.0" y="419.0" width="53.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="13.0" y="430.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (1,332 samples, 4.51%)</title><rect x="10.0" y="403.0" width="53.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.0" y="414.0">jdk/i..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (1,009 samples, 3.42%)</title><rect x="10.0" y="387.0" width="40.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="13.0" y="398.0">jdk..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (323 samples, 1.09%)</title><rect x="50.3" y="387.0" width="13.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="53.3" y="398.0"></text>
</g>
<g>
<title>java.lang.Object (323 samples, 1.09%)</title><rect x="50.3" y="371.0" width="13.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="53.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (5,420 samples, 18.37%)</title><rect x="63.3" y="467.0" width="216.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="66.3" y="478.0">jdk/internal/net/http/Socket..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (5,420 samples, 18.37%)</title><rect x="63.3" y="451.0" width="216.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="66.3" y="462.0">jdk/internal/net/http/Socket..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (5,420 samples, 18.37%)</title><rect x="63.3" y="435.0" width="216.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="66.3" y="446.0">jdk/internal/net/http/Socket..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (5,420 samples, 18.37%)</title><rect x="63.3" y="419.0" width="216.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="66.3" y="430.0">jdk/internal/net/http/HttpCl..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (5,420 samples, 18.37%)</title><rect x="63.3" y="403.0" width="216.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="66.3" y="414.0">jdk/internal/net/http/HttpCl..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (4,754 samples, 16.11%)</title><rect x="63.3" y="387.0" width="190.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="66.3" y="398.0">jdk.internal.net.http.Htt..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (666 samples, 2.26%)</title><rect x="253.4" y="387.0" width="26.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="256.4" y="398.0">s..</text>
</g>
<g>
<title>java.lang.Object (666 samples, 2.26%)</title><rect x="253.4" y="371.0" width="26.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="256.4" y="382.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (744 samples, 2.52%)</title><rect x="280.0" y="707.0" width="29.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="283.0" y="718.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (744 samples, 2.52%)</title><rect x="280.0" y="691.0" width="29.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="283.0" y="702.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (710 samples, 2.41%)</title><rect x="280.0" y="675.0" width="28.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="283.0" y="686.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (710 samples, 2.41%)</title><rect x="280.0" y="659.0" width="28.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="283.0" y="670.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (710 samples, 2.41%)</title><rect x="280.0" y="643.0" width="28.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="283.0" y="654.0">ja..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$154/1584594711.apply (710 samples, 2.41%)</title><rect x="280.0" y="627.0" width="28.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="283.0" y="638.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$get$0 (710 samples, 2.41%)</title><rect x="280.0" y="611.0" width="28.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="283.0" y="622.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createExchangeImpl (710 samples, 2.41%)</title><rect x="280.0" y="595.0" width="28.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="283.0" y="606.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (710 samples, 2.41%)</title><rect x="280.0" y="579.0" width="28.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="283.0" y="590.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (710 samples, 2.41%)</title><rect x="280.0" y="563.0" width="28.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="283.0" y="574.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (706 samples, 2.39%)</title><rect x="280.0" y="547.0" width="28.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="283.0" y="558.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (706 samples, 2.39%)</title><rect x="280.0" y="531.0" width="28.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="283.0" y="542.0">jd..</text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool (706 samples, 2.39%)</title><rect x="280.0" y="515.0" width="28.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="283.0" y="526.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getConnectionFor (34 samples, 0.12%)</title><rect x="308.4" y="675.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="311.4" y="686.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http2ClientImpl (34 samples, 0.12%)</title><rect x="308.4" y="659.0" width="1.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="311.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.requestFilters (19 samples, 0.06%)</title><rect x="309.8" y="755.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="312.8" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.request (19 samples, 0.06%)</title><rect x="309.8" y="739.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="312.8" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (14 samples, 0.05%)</title><rect x="310.0" y="723.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="313.0" y="734.0"></text>
</g>
<g>
<title>java.lang.Class (14 samples, 0.05%)</title><rect x="310.0" y="707.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="313.0" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (2,146 samples, 7.27%)</title><rect x="310.5" y="851.0" width="85.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="313.5" y="862.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (2,144 samples, 7.27%)</title><rect x="310.5" y="835.0" width="85.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="313.5" y="846.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (262 samples, 0.89%)</title><rect x="310.5" y="819.0" width="10.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="313.5" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (262 samples, 0.89%)</title><rect x="310.5" y="803.0" width="10.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="313.5" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (262 samples, 0.89%)</title><rect x="310.5" y="787.0" width="10.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="313.5" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (262 samples, 0.89%)</title><rect x="310.5" y="771.0" width="10.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="313.5" y="782.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (262 samples, 0.89%)</title><rect x="310.5" y="755.0" width="10.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="313.5" y="766.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (262 samples, 0.89%)</title><rect x="310.5" y="739.0" width="10.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="313.5" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1,882 samples, 6.38%)</title><rect x="321.0" y="819.0" width="75.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="324.0" y="830.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1,882 samples, 6.38%)</title><rect x="321.0" y="803.0" width="75.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="324.0" y="814.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (1,882 samples, 6.38%)</title><rect x="321.0" y="787.0" width="75.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="324.0" y="798.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1,882 samples, 6.38%)</title><rect x="321.0" y="771.0" width="75.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="324.0" y="782.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1,882 samples, 6.38%)</title><rect x="321.0" y="755.0" width="75.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="324.0" y="766.0">java/uti..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1,882 samples, 6.38%)</title><rect x="321.0" y="739.0" width="75.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="324.0" y="750.0">jdk/inte..</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (1,882 samples, 6.38%)</title><rect x="321.0" y="723.0" width="75.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="324.0" y="734.0">java.uti..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$247/1271722553.run (49 samples, 0.17%)</title><rect x="396.3" y="851.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="399.3" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (49 samples, 0.17%)</title><rect x="396.3" y="835.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="399.3" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (49 samples, 0.17%)</title><rect x="396.3" y="819.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="399.3" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (49 samples, 0.17%)</title><rect x="396.3" y="803.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="399.3" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (49 samples, 0.17%)</title><rect x="396.3" y="787.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="399.3" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (49 samples, 0.17%)</title><rect x="396.3" y="771.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="399.3" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (49 samples, 0.17%)</title><rect x="396.3" y="755.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="399.3" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (49 samples, 0.17%)</title><rect x="396.3" y="739.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="399.3" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (49 samples, 0.17%)</title><rect x="396.3" y="723.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="399.3" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (49 samples, 0.17%)</title><rect x="396.3" y="707.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="399.3" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (49 samples, 0.17%)</title><rect x="396.3" y="691.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="399.3" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (49 samples, 0.17%)</title><rect x="396.3" y="675.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="399.3" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (49 samples, 0.17%)</title><rect x="396.3" y="659.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="399.3" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (49 samples, 0.17%)</title><rect x="396.3" y="643.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="399.3" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (49 samples, 0.17%)</title><rect x="396.3" y="627.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="399.3" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (49 samples, 0.17%)</title><rect x="396.3" y="611.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="399.3" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (49 samples, 0.17%)</title><rect x="396.3" y="595.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="399.3" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$132/1112562714.apply (49 samples, 0.17%)</title><rect x="396.3" y="579.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="399.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (49 samples, 0.17%)</title><rect x="396.3" y="563.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="399.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (49 samples, 0.17%)</title><rect x="396.3" y="547.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="399.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (49 samples, 0.17%)</title><rect x="396.3" y="531.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="399.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (49 samples, 0.17%)</title><rect x="396.3" y="515.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="399.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (49 samples, 0.17%)</title><rect x="396.3" y="499.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="399.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$288/1452226218.run (49 samples, 0.17%)</title><rect x="396.3" y="483.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="399.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (49 samples, 0.17%)</title><rect x="396.3" y="467.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="399.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (49 samples, 0.17%)</title><rect x="396.3" y="451.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="399.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (49 samples, 0.17%)</title><rect x="396.3" y="435.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="399.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (49 samples, 0.17%)</title><rect x="396.3" y="419.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="399.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (49 samples, 0.17%)</title><rect x="396.3" y="403.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="399.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (49 samples, 0.17%)</title><rect x="396.3" y="387.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="399.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (49 samples, 0.17%)</title><rect x="396.3" y="371.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="399.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$199/1509846524.run (49 samples, 0.17%)</title><rect x="396.3" y="355.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="399.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (49 samples, 0.17%)</title><rect x="396.3" y="339.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="399.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.tryAsyncReceive (49 samples, 0.17%)</title><rect x="396.3" y="323.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="399.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (49 samples, 0.17%)</title><rect x="396.3" y="307.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="399.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (49 samples, 0.17%)</title><rect x="396.3" y="291.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="399.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (49 samples, 0.17%)</title><rect x="396.3" y="275.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="399.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (49 samples, 0.17%)</title><rect x="396.3" y="259.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="399.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (49 samples, 0.17%)</title><rect x="396.3" y="243.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="399.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$290/1089333161.run (49 samples, 0.17%)</title><rect x="396.3" y="227.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="399.3" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (49 samples, 0.17%)</title><rect x="396.3" y="211.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="399.3" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (49 samples, 0.17%)</title><rect x="396.3" y="195.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="399.3" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (49 samples, 0.17%)</title><rect x="396.3" y="179.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="399.3" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (49 samples, 0.17%)</title><rect x="396.3" y="163.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="399.3" y="174.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool (16 samples, 0.05%)</title><rect x="396.3" y="147.0" width="0.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="399.3" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (33 samples, 0.11%)</title><rect x="397.0" y="147.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="400.0" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (33 samples, 0.11%)</title><rect x="397.0" y="131.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="400.0" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (29 samples, 0.10%)</title><rect x="397.1" y="115.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="400.1" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (29 samples, 0.10%)</title><rect x="397.1" y="99.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="400.1" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (29 samples, 0.10%)</title><rect x="397.1" y="83.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="400.1" y="94.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (29 samples, 0.10%)</title><rect x="397.1" y="67.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="400.1" y="78.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (29 samples, 0.10%)</title><rect x="397.1" y="51.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="400.1" y="62.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (24 samples, 0.08%)</title><rect x="397.1" y="35.0" width="1.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="400.1" y="46.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (9,346 samples, 31.67%)</title><rect x="398.3" y="851.0" width="373.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="401.3" y="862.0">jdk/internal/net/http/common/SequentialScheduler$Sc..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (9,346 samples, 31.67%)</title><rect x="398.3" y="835.0" width="373.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="401.3" y="846.0">jdk/internal/net/http/common/SequentialScheduler$Co..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (3,621 samples, 12.27%)</title><rect x="398.3" y="819.0" width="144.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="401.3" y="830.0">jdk/internal/net/h..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$199/1509846524.run (3,621 samples, 12.27%)</title><rect x="398.3" y="803.0" width="144.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="401.3" y="814.0">jdk/internal/net/h..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (3,621 samples, 12.27%)</title><rect x="398.3" y="787.0" width="144.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="401.3" y="798.0">jdk/internal/net/h..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (3,579 samples, 12.13%)</title><rect x="398.3" y="771.0" width="143.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="401.3" y="782.0">jdk/internal/net/h..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (3,579 samples, 12.13%)</title><rect x="398.3" y="755.0" width="143.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="401.3" y="766.0">jdk/internal/net/h..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (3,579 samples, 12.13%)</title><rect x="398.3" y="739.0" width="143.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="401.3" y="750.0">jdk/internal/net/h..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (3,579 samples, 12.13%)</title><rect x="398.3" y="723.0" width="143.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="401.3" y="734.0">jdk/internal/net/h..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (3,579 samples, 12.13%)</title><rect x="398.3" y="707.0" width="143.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="401.3" y="718.0">jdk/internal/net/h..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (3,579 samples, 12.13%)</title><rect x="398.3" y="691.0" width="143.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="401.3" y="702.0">jdk/internal/net/h..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (3,579 samples, 12.13%)</title><rect x="398.3" y="675.0" width="143.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="401.3" y="686.0">jdk/internal/net/h..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (3,579 samples, 12.13%)</title><rect x="398.3" y="659.0" width="143.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="401.3" y="670.0">jdk/internal/net/h..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (3,579 samples, 12.13%)</title><rect x="398.3" y="643.0" width="143.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="401.3" y="654.0">jdk/internal/net/h..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (3,058 samples, 10.36%)</title><rect x="398.3" y="627.0" width="122.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="401.3" y="638.0">jdk.internal.ne..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (521 samples, 1.77%)</title><rect x="520.6" y="627.0" width="20.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="523.6" y="638.0"></text>
</g>
<g>
<title>java.lang.Object (521 samples, 1.77%)</title><rect x="520.6" y="611.0" width="20.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="523.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (42 samples, 0.14%)</title><rect x="541.4" y="771.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="544.4" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (42 samples, 0.14%)</title><rect x="541.4" y="755.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="544.4" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (42 samples, 0.14%)</title><rect x="541.4" y="739.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="544.4" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (42 samples, 0.14%)</title><rect x="541.4" y="723.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="544.4" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (42 samples, 0.14%)</title><rect x="541.4" y="707.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="544.4" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (42 samples, 0.14%)</title><rect x="541.4" y="691.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="544.4" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (42 samples, 0.14%)</title><rect x="541.4" y="675.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="544.4" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (42 samples, 0.14%)</title><rect x="541.4" y="659.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="544.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (42 samples, 0.14%)</title><rect x="541.4" y="643.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="544.4" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (42 samples, 0.14%)</title><rect x="541.4" y="627.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="544.4" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (42 samples, 0.14%)</title><rect x="541.4" y="611.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="544.4" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (42 samples, 0.14%)</title><rect x="541.4" y="595.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="544.4" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (42 samples, 0.14%)</title><rect x="541.4" y="579.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="544.4" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (42 samples, 0.14%)</title><rect x="541.4" y="563.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="544.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$236/388216554.apply (42 samples, 0.14%)</title><rect x="541.4" y="547.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="544.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (42 samples, 0.14%)</title><rect x="541.4" y="531.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="544.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (42 samples, 0.14%)</title><rect x="541.4" y="515.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="544.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.response (42 samples, 0.14%)</title><rect x="541.4" y="499.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="544.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (42 samples, 0.14%)</title><rect x="541.4" y="483.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="544.4" y="494.0"></text>
</g>
<g>
<title>java.lang.Class (42 samples, 0.14%)</title><rect x="541.4" y="467.0" width="1.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="544.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (5,725 samples, 19.40%)</title><rect x="543.1" y="819.0" width="228.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="546.1" y="830.0">jdk/internal/net/http/common/S..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (5,725 samples, 19.40%)</title><rect x="543.1" y="803.0" width="228.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="546.1" y="814.0">jdk/internal/net/http/common/S..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (5,725 samples, 19.40%)</title><rect x="543.1" y="787.0" width="228.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="546.1" y="798.0">jdk/internal/net/http/common/S..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$199/1509846524.run (5,725 samples, 19.40%)</title><rect x="543.1" y="771.0" width="228.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="546.1" y="782.0">jdk/internal/net/http/Http1Asy..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (5,725 samples, 19.40%)</title><rect x="543.1" y="755.0" width="228.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="546.1" y="766.0">jdk/internal/net/http/Http1Asy..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.tryAsyncReceive (5,725 samples, 19.40%)</title><rect x="543.1" y="739.0" width="228.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="546.1" y="750.0">jdk/internal/net/http/Http1Res..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (5,725 samples, 19.40%)</title><rect x="543.1" y="723.0" width="228.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="546.1" y="734.0">jdk/internal/net/http/Http1Res..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (5,725 samples, 19.40%)</title><rect x="543.1" y="707.0" width="228.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="546.1" y="718.0">jdk/internal/net/http/Http1Res..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (5,725 samples, 19.40%)</title><rect x="543.1" y="691.0" width="228.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="546.1" y="702.0">jdk/internal/net/http/Http1Res..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (5,725 samples, 19.40%)</title><rect x="543.1" y="675.0" width="228.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="546.1" y="686.0">jdk/internal/net/http/Response..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (5,725 samples, 19.40%)</title><rect x="543.1" y="659.0" width="228.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="546.1" y="670.0">jdk/internal/net/http/Response..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$290/1089333161.run (5,725 samples, 19.40%)</title><rect x="543.1" y="643.0" width="228.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="546.1" y="654.0">jdk/internal/net/http/Http1Res..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (5,725 samples, 19.40%)</title><rect x="543.1" y="627.0" width="228.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="546.1" y="638.0">jdk/internal/net/http/Http1Res..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (5,725 samples, 19.40%)</title><rect x="543.1" y="611.0" width="228.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="546.1" y="622.0">jdk/internal/net/http/HttpConn..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (5,725 samples, 19.40%)</title><rect x="543.1" y="595.0" width="228.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="546.1" y="606.0">jdk/internal/net/http/Connecti..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (5,725 samples, 19.40%)</title><rect x="543.1" y="579.0" width="228.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="546.1" y="590.0">jdk/internal/net/http/Connecti..</text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool (1,816 samples, 6.15%)</title><rect x="543.1" y="563.0" width="72.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="546.1" y="574.0">jdk.inte..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (3,909 samples, 13.25%)</title><rect x="615.7" y="563.0" width="156.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="618.7" y="574.0">jdk/internal/net/htt..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (3,909 samples, 13.25%)</title><rect x="615.7" y="547.0" width="156.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="618.7" y="558.0">jdk/internal/net/htt..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (807 samples, 2.73%)</title><rect x="615.7" y="531.0" width="32.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="618.7" y="542.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (807 samples, 2.73%)</title><rect x="615.7" y="515.0" width="32.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="618.7" y="526.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (807 samples, 2.73%)</title><rect x="615.7" y="499.0" width="32.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="618.7" y="510.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (807 samples, 2.73%)</title><rect x="615.7" y="483.0" width="32.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="618.7" y="494.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (807 samples, 2.73%)</title><rect x="615.7" y="467.0" width="32.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="618.7" y="478.0">jd..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (514 samples, 1.74%)</title><rect x="615.7" y="451.0" width="20.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="618.7" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (293 samples, 0.99%)</title><rect x="636.3" y="451.0" width="11.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="639.3" y="462.0"></text>
</g>
<g>
<title>java.lang.Object (293 samples, 0.99%)</title><rect x="636.3" y="435.0" width="11.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="639.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (3,102 samples, 10.51%)</title><rect x="648.0" y="531.0" width="124.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="651.0" y="542.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (3,102 samples, 10.51%)</title><rect x="648.0" y="515.0" width="124.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="651.0" y="526.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (3,102 samples, 10.51%)</title><rect x="648.0" y="499.0" width="124.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="651.0" y="510.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (3,102 samples, 10.51%)</title><rect x="648.0" y="483.0" width="124.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="651.0" y="494.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (3,102 samples, 10.51%)</title><rect x="648.0" y="467.0" width="124.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="651.0" y="478.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (2,601 samples, 8.81%)</title><rect x="648.0" y="451.0" width="104.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="651.0" y="462.0">jdk.internal..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (501 samples, 1.70%)</title><rect x="752.0" y="451.0" width="20.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="755.0" y="462.0"></text>
</g>
<g>
<title>java.lang.Object (501 samples, 1.70%)</title><rect x="752.0" y="435.0" width="20.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="755.0" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$107/2098846329.run (141 samples, 0.48%)</title><rect x="772.0" y="851.0" width="5.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="775.0" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$317/1070440207.run (141 samples, 0.48%)</title><rect x="772.0" y="835.0" width="5.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="775.0" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$entity$0 (141 samples, 0.48%)</title><rect x="772.0" y="819.0" width="5.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="775.0" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.get (141 samples, 0.48%)</title><rect x="772.0" y="803.0" width="5.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="775.0" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.getResponsesFromReplicas (138 samples, 0.47%)</title><rect x="772.0" y="787.0" width="5.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="775.0" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (77 samples, 0.26%)</title><rect x="772.0" y="771.0" width="3.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="775.0" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (77 samples, 0.26%)</title><rect x="772.0" y="755.0" width="3.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="775.0" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (77 samples, 0.26%)</title><rect x="772.0" y="739.0" width="3.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="775.0" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (77 samples, 0.26%)</title><rect x="772.0" y="723.0" width="3.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="775.0" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (77 samples, 0.26%)</title><rect x="772.0" y="707.0" width="3.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="775.0" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (77 samples, 0.26%)</title><rect x="772.0" y="691.0" width="3.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="775.0" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (77 samples, 0.26%)</title><rect x="772.0" y="675.0" width="3.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="775.0" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (77 samples, 0.26%)</title><rect x="772.0" y="659.0" width="3.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="775.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (19 samples, 0.06%)</title><rect x="772.0" y="643.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="775.0" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (19 samples, 0.06%)</title><rect x="772.0" y="627.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="775.0" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (19 samples, 0.06%)</title><rect x="772.0" y="611.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="775.0" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (19 samples, 0.06%)</title><rect x="772.0" y="595.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="775.0" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (19 samples, 0.06%)</title><rect x="772.0" y="579.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="775.0" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (19 samples, 0.06%)</title><rect x="772.0" y="563.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="775.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (19 samples, 0.06%)</title><rect x="772.0" y="547.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="775.0" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (19 samples, 0.06%)</title><rect x="772.0" y="531.0" width="0.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="775.0" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (58 samples, 0.20%)</title><rect x="772.8" y="643.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="775.8" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (58 samples, 0.20%)</title><rect x="772.8" y="627.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="775.8" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (58 samples, 0.20%)</title><rect x="772.8" y="611.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="775.8" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (58 samples, 0.20%)</title><rect x="772.8" y="595.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="775.8" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (58 samples, 0.20%)</title><rect x="772.8" y="579.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="775.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (58 samples, 0.20%)</title><rect x="772.8" y="563.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="775.8" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (58 samples, 0.20%)</title><rect x="772.8" y="547.0" width="2.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="775.8" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.getFirstResponses (61 samples, 0.21%)</title><rect x="775.1" y="771.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="778.1" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.orTimeout (61 samples, 0.21%)</title><rect x="775.1" y="755.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="778.1" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Delayer.delay (61 samples, 0.21%)</title><rect x="775.1" y="739.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="778.1" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor.schedule (61 samples, 0.21%)</title><rect x="775.1" y="723.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="778.1" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor.delayedExecute (61 samples, 0.21%)</title><rect x="775.1" y="707.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="778.1" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.add (61 samples, 0.21%)</title><rect x="775.1" y="691.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="778.1" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.add (61 samples, 0.21%)</title><rect x="775.1" y="675.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="778.1" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.offer (61 samples, 0.21%)</title><rect x="775.1" y="659.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="778.1" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (61 samples, 0.21%)</title><rect x="775.1" y="643.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="778.1" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (61 samples, 0.21%)</title><rect x="775.1" y="627.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="778.1" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (61 samples, 0.21%)</title><rect x="775.1" y="611.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="778.1" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (61 samples, 0.21%)</title><rect x="775.1" y="595.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="778.1" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (61 samples, 0.21%)</title><rect x="775.1" y="579.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="778.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (61 samples, 0.21%)</title><rect x="775.1" y="563.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="778.1" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (61 samples, 0.21%)</title><rect x="775.1" y="547.0" width="2.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="778.1" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (33 samples, 0.11%)</title><rect x="777.7" y="899.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="780.7" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (33 samples, 0.11%)</title><rect x="777.7" y="883.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="780.7" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (33 samples, 0.11%)</title><rect x="777.7" y="867.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="780.7" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (33 samples, 0.11%)</title><rect x="777.7" y="851.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="780.7" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (33 samples, 0.11%)</title><rect x="777.7" y="835.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="780.7" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (33 samples, 0.11%)</title><rect x="777.7" y="819.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="780.7" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (33 samples, 0.11%)</title><rect x="777.7" y="803.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="780.7" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (31 samples, 0.11%)</title><rect x="777.7" y="787.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="780.7" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (31 samples, 0.11%)</title><rect x="777.7" y="771.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="780.7" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (31 samples, 0.11%)</title><rect x="777.7" y="755.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="780.7" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (31 samples, 0.11%)</title><rect x="777.7" y="739.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="780.7" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Canceller.accept (31 samples, 0.11%)</title><rect x="777.7" y="723.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="780.7" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Canceller.accept (31 samples, 0.11%)</title><rect x="777.7" y="707.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="780.7" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$ScheduledFutureTask.cancel (31 samples, 0.11%)</title><rect x="777.7" y="691.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="780.7" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.remove (31 samples, 0.11%)</title><rect x="777.7" y="675.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="780.7" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.remove (31 samples, 0.11%)</title><rect x="777.7" y="659.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="780.7" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (31 samples, 0.11%)</title><rect x="777.7" y="643.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="780.7" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (31 samples, 0.11%)</title><rect x="777.7" y="627.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="780.7" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (31 samples, 0.11%)</title><rect x="777.7" y="611.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="780.7" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (31 samples, 0.11%)</title><rect x="777.7" y="595.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="780.7" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (31 samples, 0.11%)</title><rect x="777.7" y="579.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="780.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (31 samples, 0.11%)</title><rect x="777.7" y="563.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="780.7" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (31 samples, 0.11%)</title><rect x="777.7" y="547.0" width="1.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="780.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (10,263 samples, 34.78%)</title><rect x="779.0" y="899.0" width="410.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="782.0" y="910.0">jdk/internal/net/http/HttpClientImpl$SelectorManager.run</text>
</g>
<g>
<title>java/util/ArrayList.forEach (42 samples, 0.14%)</title><rect x="779.0" y="883.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="782.0" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$241/404115466.accept (42 samples, 0.14%)</title><rect x="779.0" y="867.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="782.0" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (42 samples, 0.14%)</title><rect x="779.0" y="851.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="782.0" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (42 samples, 0.14%)</title><rect x="779.0" y="835.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="782.0" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (42 samples, 0.14%)</title><rect x="779.0" y="819.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="782.0" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (42 samples, 0.14%)</title><rect x="779.0" y="803.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="782.0" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (42 samples, 0.14%)</title><rect x="779.0" y="787.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="782.0" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (42 samples, 0.14%)</title><rect x="779.0" y="771.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="782.0" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (42 samples, 0.14%)</title><rect x="779.0" y="755.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="782.0" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (42 samples, 0.14%)</title><rect x="779.0" y="739.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="782.0" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (42 samples, 0.14%)</title><rect x="779.0" y="723.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="782.0" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$181/1894615385.run (42 samples, 0.14%)</title><rect x="779.0" y="707.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="782.0" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (42 samples, 0.14%)</title><rect x="779.0" y="691.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="782.0" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (40 samples, 0.14%)</title><rect x="779.0" y="675.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="782.0" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (40 samples, 0.14%)</title><rect x="779.0" y="659.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="782.0" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (40 samples, 0.14%)</title><rect x="779.0" y="643.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="782.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (40 samples, 0.14%)</title><rect x="779.0" y="627.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="782.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (40 samples, 0.14%)</title><rect x="779.0" y="611.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="782.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (40 samples, 0.14%)</title><rect x="779.0" y="595.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="782.0" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (40 samples, 0.14%)</title><rect x="779.0" y="579.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="782.0" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (40 samples, 0.14%)</title><rect x="779.0" y="563.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="782.0" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (39 samples, 0.13%)</title><rect x="779.0" y="547.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="782.0" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (39 samples, 0.13%)</title><rect x="779.0" y="531.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="782.0" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (39 samples, 0.13%)</title><rect x="779.0" y="515.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="782.0" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (39 samples, 0.13%)</title><rect x="779.0" y="499.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="782.0" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (39 samples, 0.13%)</title><rect x="779.0" y="483.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="782.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (39 samples, 0.13%)</title><rect x="779.0" y="467.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="782.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (39 samples, 0.13%)</title><rect x="779.0" y="451.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="782.0" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (39 samples, 0.13%)</title><rect x="779.0" y="435.0" width="1.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="782.0" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (9,010 samples, 30.53%)</title><rect x="780.7" y="883.0" width="360.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="783.7" y="894.0">jdk.internal.net.http.HttpClientImpl$SelectorMana..</text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (186 samples, 0.63%)</title><rect x="1141.0" y="883.0" width="7.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1144.0" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$188/903113097.run (72 samples, 0.24%)</title><rect x="1141.0" y="867.0" width="2.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1144.0" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (72 samples, 0.24%)</title><rect x="1141.0" y="851.0" width="2.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1144.0" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (72 samples, 0.24%)</title><rect x="1141.0" y="835.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1144.0" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (72 samples, 0.24%)</title><rect x="1141.0" y="819.0" width="2.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1144.0" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (72 samples, 0.24%)</title><rect x="1141.0" y="803.0" width="2.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1144.0" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (72 samples, 0.24%)</title><rect x="1141.0" y="787.0" width="2.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1144.0" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$181/1894615385.run (72 samples, 0.24%)</title><rect x="1141.0" y="771.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1144.0" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (72 samples, 0.24%)</title><rect x="1141.0" y="755.0" width="2.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1144.0" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (72 samples, 0.24%)</title><rect x="1141.0" y="739.0" width="2.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1144.0" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (72 samples, 0.24%)</title><rect x="1141.0" y="723.0" width="2.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1144.0" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (72 samples, 0.24%)</title><rect x="1141.0" y="707.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1144.0" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (72 samples, 0.24%)</title><rect x="1141.0" y="691.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1144.0" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (72 samples, 0.24%)</title><rect x="1141.0" y="675.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1144.0" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (72 samples, 0.24%)</title><rect x="1141.0" y="659.0" width="2.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1144.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (72 samples, 0.24%)</title><rect x="1141.0" y="643.0" width="2.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1144.0" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (72 samples, 0.24%)</title><rect x="1141.0" y="627.0" width="2.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1144.0" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (62 samples, 0.21%)</title><rect x="1141.0" y="611.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1144.0" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (62 samples, 0.21%)</title><rect x="1141.0" y="595.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1144.0" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (62 samples, 0.21%)</title><rect x="1141.0" y="579.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1144.0" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (62 samples, 0.21%)</title><rect x="1141.0" y="563.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1144.0" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (62 samples, 0.21%)</title><rect x="1141.0" y="547.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1144.0" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (62 samples, 0.21%)</title><rect x="1141.0" y="531.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1144.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (62 samples, 0.21%)</title><rect x="1141.0" y="515.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1144.0" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (62 samples, 0.21%)</title><rect x="1141.0" y="499.0" width="2.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1144.0" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (10 samples, 0.03%)</title><rect x="1143.5" y="611.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1146.5" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (10 samples, 0.03%)</title><rect x="1143.5" y="595.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1146.5" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (10 samples, 0.03%)</title><rect x="1143.5" y="579.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1146.5" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (10 samples, 0.03%)</title><rect x="1143.5" y="563.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1146.5" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (10 samples, 0.03%)</title><rect x="1143.5" y="547.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1146.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (10 samples, 0.03%)</title><rect x="1143.5" y="531.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1146.5" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (10 samples, 0.03%)</title><rect x="1143.5" y="515.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1146.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$192/1926392655.run (114 samples, 0.39%)</title><rect x="1143.9" y="867.0" width="4.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1146.9" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (114 samples, 0.39%)</title><rect x="1143.9" y="851.0" width="4.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1146.9" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (114 samples, 0.39%)</title><rect x="1143.9" y="835.0" width="4.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1146.9" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (114 samples, 0.39%)</title><rect x="1143.9" y="819.0" width="4.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1146.9" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (114 samples, 0.39%)</title><rect x="1143.9" y="803.0" width="4.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1146.9" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (102 samples, 0.35%)</title><rect x="1143.9" y="787.0" width="4.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1146.9" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (102 samples, 0.35%)</title><rect x="1143.9" y="771.0" width="4.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1146.9" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (102 samples, 0.35%)</title><rect x="1143.9" y="755.0" width="4.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1146.9" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (102 samples, 0.35%)</title><rect x="1143.9" y="739.0" width="4.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1146.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (102 samples, 0.35%)</title><rect x="1143.9" y="723.0" width="4.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1146.9" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (102 samples, 0.35%)</title><rect x="1143.9" y="707.0" width="4.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1146.9" y="718.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (102 samples, 0.35%)</title><rect x="1143.9" y="691.0" width="4.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1146.9" y="702.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (102 samples, 0.35%)</title><rect x="1143.9" y="675.0" width="4.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1146.9" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (12 samples, 0.04%)</title><rect x="1147.9" y="787.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1150.9" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (12 samples, 0.04%)</title><rect x="1147.9" y="771.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1150.9" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (12 samples, 0.04%)</title><rect x="1147.9" y="755.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1150.9" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (12 samples, 0.04%)</title><rect x="1147.9" y="739.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1150.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (12 samples, 0.04%)</title><rect x="1147.9" y="723.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1150.9" y="734.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (12 samples, 0.04%)</title><rect x="1147.9" y="707.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1150.9" y="718.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (12 samples, 0.04%)</title><rect x="1147.9" y="691.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1150.9" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (734 samples, 2.49%)</title><rect x="1148.4" y="883.0" width="29.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1151.4" y="894.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (734 samples, 2.49%)</title><rect x="1148.4" y="867.0" width="29.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1151.4" y="878.0">jd..</text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool (734 samples, 2.49%)</title><rect x="1148.4" y="851.0" width="29.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1151.4" y="862.0">jd..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (286 samples, 0.97%)</title><rect x="1177.8" y="883.0" width="11.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1180.8" y="894.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (286 samples, 0.97%)</title><rect x="1177.8" y="867.0" width="11.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1180.8" y="878.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (286 samples, 0.97%)</title><rect x="1177.8" y="851.0" width="11.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1180.8" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (286 samples, 0.97%)</title><rect x="1177.8" y="835.0" width="11.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1180.8" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (286 samples, 0.97%)</title><rect x="1177.8" y="819.0" width="11.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1180.8" y="830.0"></text>
</g>
<g>
<title>java.lang.Object (286 samples, 0.97%)</title><rect x="1177.8" y="803.0" width="11.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1180.8" y="814.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (15 samples, 0.05%)</title><rect x="1189.4" y="899.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1192.4" y="910.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (15 samples, 0.05%)</title><rect x="1189.4" y="883.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1192.4" y="894.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (15 samples, 0.05%)</title><rect x="1189.4" y="867.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1192.4" y="878.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (15 samples, 0.05%)</title><rect x="1189.4" y="851.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1192.4" y="862.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (15 samples, 0.05%)</title><rect x="1189.4" y="835.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1192.4" y="846.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (15 samples, 0.05%)</title><rect x="1189.4" y="819.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1192.4" y="830.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (15 samples, 0.05%)</title><rect x="1189.4" y="803.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1192.4" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.entity (15 samples, 0.05%)</title><rect x="1189.4" y="787.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1192.4" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.executeAsync (15 samples, 0.05%)</title><rect x="1189.4" y="771.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1192.4" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (15 samples, 0.05%)</title><rect x="1189.4" y="755.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1192.4" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (15 samples, 0.05%)</title><rect x="1189.4" y="739.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1192.4" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (13 samples, 0.04%)</title><rect x="1189.4" y="723.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1192.4" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (13 samples, 0.04%)</title><rect x="1189.4" y="707.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1192.4" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (13 samples, 0.04%)</title><rect x="1189.4" y="691.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1192.4" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (13 samples, 0.04%)</title><rect x="1189.4" y="675.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1192.4" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (13 samples, 0.04%)</title><rect x="1189.4" y="659.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1192.4" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (13 samples, 0.04%)</title><rect x="1189.4" y="643.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1192.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (13 samples, 0.04%)</title><rect x="1189.4" y="627.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1192.4" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (13 samples, 0.04%)</title><rect x="1189.4" y="611.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1192.4" y="622.0"></text>
</g>
</g>
</svg>
