<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="646" onload="init(evt)" viewBox="0 0 1200 646" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="629"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="629"> </text>
<g id="frames">
<g>
<title>all (281,004 samples, 100.00%)</title><rect x="10.0" y="595.0" width="1180.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="13.0" y="606.0">all</text>
</g>
<g>
<title>[NIO Acceptor 0.0.0.0:8080 tid=25374] (555 samples, 0.20%)</title><rect x="10.0" y="579.0" width="2.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="590.0"></text>
</g>
<g>
<title>one/nio/server/AcceptorThread.run (555 samples, 0.20%)</title><rect x="10.0" y="563.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="13.0" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.createSession (544 samples, 0.19%)</title><rect x="10.1" y="547.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.1" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.createSession (544 samples, 0.19%)</title><rect x="10.1" y="531.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.1" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/StorageSession.&lt;init&gt; (540 samples, 0.19%)</title><rect x="10.1" y="515.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.1" y="526.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.&lt;init&gt; (540 samples, 0.19%)</title><rect x="10.1" y="499.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="13.1" y="510.0"></text>
</g>
<g>
<title>byte[] (66 samples, 0.02%)</title><rect x="10.1" y="483.0" width="0.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="13.1" y="494.0"></text>
</g>
<g>
<title>byte[] (474 samples, 0.17%)</title><rect x="10.3" y="483.0" width="2.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="13.3" y="494.0"></text>
</g>
<g>
<title>[NIO Selector #0 tid=25370] (29,347 samples, 10.44%)</title><rect x="12.3" y="579.0" width="123.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="15.3" y="590.0">[NIO Selector #..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (29,347 samples, 10.44%)</title><rect x="12.3" y="563.0" width="123.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="15.3" y="574.0">one/nio/server/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (1,841 samples, 0.66%)</title><rect x="12.3" y="547.0" width="7.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="15.3" y="558.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (1,841 samples, 0.66%)</title><rect x="12.3" y="531.0" width="7.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="15.3" y="542.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (27,506 samples, 9.79%)</title><rect x="20.1" y="547.0" width="115.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="23.1" y="558.0">one/nio/net/Se..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (27,506 samples, 9.79%)</title><rect x="20.1" y="531.0" width="115.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="23.1" y="542.0">one/nio/http/H..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (27,420 samples, 9.76%)</title><rect x="20.1" y="515.0" width="115.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="23.1" y="526.0">one/nio/http/H..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (7,772 samples, 2.77%)</title><rect x="20.1" y="499.0" width="32.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="23.1" y="510.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (7,772 samples, 2.77%)</title><rect x="20.1" y="483.0" width="32.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="23.1" y="494.0">on..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (5,124 samples, 1.82%)</title><rect x="20.1" y="467.0" width="21.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="23.1" y="478.0">R..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1,818 samples, 0.65%)</title><rect x="20.1" y="451.0" width="7.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="23.1" y="462.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,818 samples, 0.65%)</title><rect x="20.1" y="435.0" width="7.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="23.1" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,818 samples, 0.65%)</title><rect x="20.1" y="419.0" width="7.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="23.1" y="430.0"></text>
</g>
<g>
<title>java.lang.String (835 samples, 0.30%)</title><rect x="20.1" y="403.0" width="3.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="23.1" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (983 samples, 0.35%)</title><rect x="23.6" y="403.0" width="4.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="26.6" y="414.0"></text>
</g>
<g>
<title>byte[] (983 samples, 0.35%)</title><rect x="23.6" y="387.0" width="4.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="26.6" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.entity (3,306 samples, 1.18%)</title><rect x="27.7" y="451.0" width="13.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="30.7" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,192 samples, 0.42%)</title><rect x="27.7" y="435.0" width="5.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="30.7" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,192 samples, 0.42%)</title><rect x="27.7" y="419.0" width="5.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="30.7" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer$$Lambda$81/1409716107.get$Lambda (1,192 samples, 0.42%)</title><rect x="27.7" y="403.0" width="5.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="30.7" y="414.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.AsyncHttpServer$$Lambda$81 (1,192 samples, 0.42%)</title><rect x="27.7" y="387.0" width="5.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="30.7" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.executeAsync (2,114 samples, 0.75%)</title><rect x="32.7" y="435.0" width="8.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="35.7" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,011 samples, 0.36%)</title><rect x="32.7" y="419.0" width="4.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="35.7" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,011 samples, 0.36%)</title><rect x="32.7" y="403.0" width="4.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="35.7" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer$$Lambda$65/1115085888.get$Lambda (1,011 samples, 0.36%)</title><rect x="32.7" y="387.0" width="4.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="35.7" y="398.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.AsyncHttpServer$$Lambda$65 (1,011 samples, 0.36%)</title><rect x="32.7" y="371.0" width="4.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="35.7" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1,103 samples, 0.39%)</title><rect x="37.0" y="419.0" width="4.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="40.0" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1,103 samples, 0.39%)</title><rect x="37.0" y="403.0" width="4.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="40.0" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (1,103 samples, 0.39%)</title><rect x="37.0" y="387.0" width="4.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="40.0" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (2,648 samples, 0.94%)</title><rect x="41.6" y="467.0" width="11.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="44.6" y="478.0"></text>
</g>
<g>
<title>java/lang/String.substring (2,648 samples, 0.94%)</title><rect x="41.6" y="451.0" width="11.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="44.6" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2,648 samples, 0.94%)</title><rect x="41.6" y="435.0" width="11.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="44.6" y="446.0"></text>
</g>
<g>
<title>java.lang.String (1,010 samples, 0.36%)</title><rect x="41.6" y="419.0" width="4.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="44.6" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,638 samples, 0.58%)</title><rect x="45.8" y="419.0" width="6.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="48.8" y="430.0"></text>
</g>
<g>
<title>byte[] (1,638 samples, 0.58%)</title><rect x="45.8" y="403.0" width="6.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="48.8" y="414.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (13,764 samples, 4.90%)</title><rect x="52.7" y="499.0" width="57.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="55.7" y="510.0">one/ni..</text>
</g>
<g>
<title>one.nio.http.Request (2,132 samples, 0.76%)</title><rect x="52.7" y="483.0" width="9.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="55.7" y="494.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (3,824 samples, 1.36%)</title><rect x="61.7" y="483.0" width="16.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="64.7" y="494.0"></text>
</g>
<g>
<title>java.lang.String[] (3,519 samples, 1.25%)</title><rect x="61.7" y="467.0" width="14.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="64.7" y="478.0"></text>
</g>
<g>
<title>java.lang.String[] (305 samples, 0.11%)</title><rect x="76.4" y="467.0" width="1.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="79.4" y="478.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (7,808 samples, 2.78%)</title><rect x="77.7" y="483.0" width="32.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="80.7" y="494.0">on..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (7,808 samples, 2.78%)</title><rect x="77.7" y="467.0" width="32.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="80.7" y="478.0">on..</text>
</g>
<g>
<title>char[] (3,316 samples, 1.18%)</title><rect x="77.7" y="451.0" width="13.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="80.7" y="462.0"></text>
</g>
<g>
<title>char[] (581 samples, 0.21%)</title><rect x="91.6" y="451.0" width="2.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="94.6" y="462.0"></text>
</g>
<g>
<title>java.lang.String (965 samples, 0.34%)</title><rect x="94.1" y="451.0" width="4.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="97.1" y="462.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2,946 samples, 1.05%)</title><rect x="98.1" y="451.0" width="12.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="101.1" y="462.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2,946 samples, 1.05%)</title><rect x="98.1" y="435.0" width="12.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="101.1" y="446.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (2,946 samples, 1.05%)</title><rect x="98.1" y="419.0" width="12.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="101.1" y="430.0"></text>
</g>
<g>
<title>byte[] (2,946 samples, 1.05%)</title><rect x="98.1" y="403.0" width="12.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="101.1" y="414.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5,884 samples, 2.09%)</title><rect x="110.5" y="499.0" width="24.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="113.5" y="510.0">o..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (5,884 samples, 2.09%)</title><rect x="110.5" y="483.0" width="24.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="113.5" y="494.0">o..</text>
</g>
<g>
<title>char[] (2,783 samples, 0.99%)</title><rect x="110.5" y="467.0" width="11.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="113.5" y="478.0"></text>
</g>
<g>
<title>java.lang.String (1,227 samples, 0.44%)</title><rect x="122.2" y="467.0" width="5.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="125.2" y="478.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,874 samples, 0.67%)</title><rect x="127.3" y="467.0" width="7.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="130.3" y="478.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,874 samples, 0.67%)</title><rect x="127.3" y="451.0" width="7.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="130.3" y="462.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1,874 samples, 0.67%)</title><rect x="127.3" y="435.0" width="7.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="130.3" y="446.0"></text>
</g>
<g>
<title>byte[] (1,874 samples, 0.67%)</title><rect x="127.3" y="419.0" width="7.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="130.3" y="430.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (86 samples, 0.03%)</title><rect x="135.2" y="515.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="138.2" y="526.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (86 samples, 0.03%)</title><rect x="135.2" y="499.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="138.2" y="510.0"></text>
</g>
<g>
<title>one/nio/net/SocketClosedException.&lt;init&gt; (80 samples, 0.03%)</title><rect x="135.2" y="483.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="138.2" y="494.0"></text>
</g>
<g>
<title>java/net/SocketException.&lt;init&gt; (80 samples, 0.03%)</title><rect x="135.2" y="467.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="138.2" y="478.0"></text>
</g>
<g>
<title>java/io/IOException.&lt;init&gt; (80 samples, 0.03%)</title><rect x="135.2" y="451.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="138.2" y="462.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (80 samples, 0.03%)</title><rect x="135.2" y="435.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="138.2" y="446.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (80 samples, 0.03%)</title><rect x="135.2" y="419.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="138.2" y="430.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (80 samples, 0.03%)</title><rect x="135.2" y="403.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="138.2" y="414.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (80 samples, 0.03%)</title><rect x="135.2" y="387.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="138.2" y="398.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=25371] (29,404 samples, 10.46%)</title><rect x="135.6" y="579.0" width="123.4" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="138.6" y="590.0">[NIO Selector #..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (29,404 samples, 10.46%)</title><rect x="135.6" y="563.0" width="123.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="138.6" y="574.0">one/nio/server/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (1,859 samples, 0.66%)</title><rect x="135.6" y="547.0" width="7.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="138.6" y="558.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (1,859 samples, 0.66%)</title><rect x="135.6" y="531.0" width="7.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="138.6" y="542.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (27,545 samples, 9.80%)</title><rect x="143.4" y="547.0" width="115.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="146.4" y="558.0">one/nio/net/Se..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (27,545 samples, 9.80%)</title><rect x="143.4" y="531.0" width="115.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="146.4" y="542.0">one/nio/http/H..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (27,473 samples, 9.78%)</title><rect x="143.4" y="515.0" width="115.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="146.4" y="526.0">one/nio/http/H..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (7,885 samples, 2.81%)</title><rect x="143.4" y="499.0" width="33.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="146.4" y="510.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (7,885 samples, 2.81%)</title><rect x="143.4" y="483.0" width="33.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="146.4" y="494.0">on..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (5,164 samples, 1.84%)</title><rect x="143.4" y="467.0" width="21.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="146.4" y="478.0">R..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1,809 samples, 0.64%)</title><rect x="143.4" y="451.0" width="7.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="146.4" y="462.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,809 samples, 0.64%)</title><rect x="143.4" y="435.0" width="7.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="146.4" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,809 samples, 0.64%)</title><rect x="143.4" y="419.0" width="7.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="146.4" y="430.0"></text>
</g>
<g>
<title>java.lang.String (824 samples, 0.29%)</title><rect x="143.4" y="403.0" width="3.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="146.4" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (985 samples, 0.35%)</title><rect x="146.8" y="403.0" width="4.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="149.8" y="414.0"></text>
</g>
<g>
<title>byte[] (985 samples, 0.35%)</title><rect x="146.8" y="387.0" width="4.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="149.8" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.entity (3,355 samples, 1.19%)</title><rect x="151.0" y="451.0" width="14.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="154.0" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,193 samples, 0.42%)</title><rect x="151.0" y="435.0" width="5.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="154.0" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,193 samples, 0.42%)</title><rect x="151.0" y="419.0" width="5.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="154.0" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer$$Lambda$81/1409716107.get$Lambda (1,193 samples, 0.42%)</title><rect x="151.0" y="403.0" width="5.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="154.0" y="414.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.AsyncHttpServer$$Lambda$81 (1,193 samples, 0.42%)</title><rect x="151.0" y="387.0" width="5.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="154.0" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.executeAsync (2,162 samples, 0.77%)</title><rect x="156.0" y="435.0" width="9.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="159.0" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,041 samples, 0.37%)</title><rect x="156.0" y="419.0" width="4.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="159.0" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,041 samples, 0.37%)</title><rect x="156.0" y="403.0" width="4.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="159.0" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer$$Lambda$65/1115085888.get$Lambda (1,041 samples, 0.37%)</title><rect x="156.0" y="387.0" width="4.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="159.0" y="398.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.AsyncHttpServer$$Lambda$65 (1,041 samples, 0.37%)</title><rect x="156.0" y="371.0" width="4.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="159.0" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1,121 samples, 0.40%)</title><rect x="160.4" y="419.0" width="4.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="163.4" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1,121 samples, 0.40%)</title><rect x="160.4" y="403.0" width="4.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="163.4" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (1,110 samples, 0.40%)</title><rect x="160.4" y="387.0" width="4.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="163.4" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (2,721 samples, 0.97%)</title><rect x="165.1" y="467.0" width="11.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="168.1" y="478.0"></text>
</g>
<g>
<title>java/lang/String.substring (2,721 samples, 0.97%)</title><rect x="165.1" y="451.0" width="11.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="168.1" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2,721 samples, 0.97%)</title><rect x="165.1" y="435.0" width="11.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="168.1" y="446.0"></text>
</g>
<g>
<title>java.lang.String (1,020 samples, 0.36%)</title><rect x="165.1" y="419.0" width="4.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="168.1" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,701 samples, 0.61%)</title><rect x="169.3" y="419.0" width="7.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="172.3" y="430.0"></text>
</g>
<g>
<title>byte[] (1,701 samples, 0.61%)</title><rect x="169.3" y="403.0" width="7.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="172.3" y="414.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (13,714 samples, 4.88%)</title><rect x="176.5" y="499.0" width="57.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="179.5" y="510.0">one/ni..</text>
</g>
<g>
<title>one.nio.http.Request (2,239 samples, 0.80%)</title><rect x="176.5" y="483.0" width="9.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="179.5" y="494.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (3,830 samples, 1.36%)</title><rect x="185.9" y="483.0" width="16.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="188.9" y="494.0"></text>
</g>
<g>
<title>java.lang.String[] (3,541 samples, 1.26%)</title><rect x="185.9" y="467.0" width="14.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="188.9" y="478.0"></text>
</g>
<g>
<title>java.lang.String[] (289 samples, 0.10%)</title><rect x="200.8" y="467.0" width="1.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="203.8" y="478.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (7,645 samples, 2.72%)</title><rect x="202.0" y="483.0" width="32.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="205.0" y="494.0">on..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (7,645 samples, 2.72%)</title><rect x="202.0" y="467.0" width="32.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="205.0" y="478.0">on..</text>
</g>
<g>
<title>char[] (3,160 samples, 1.12%)</title><rect x="202.0" y="451.0" width="13.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="205.0" y="462.0"></text>
</g>
<g>
<title>char[] (582 samples, 0.21%)</title><rect x="215.2" y="451.0" width="2.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="218.2" y="462.0"></text>
</g>
<g>
<title>java.lang.String (948 samples, 0.34%)</title><rect x="217.7" y="451.0" width="4.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="220.7" y="462.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2,955 samples, 1.05%)</title><rect x="221.7" y="451.0" width="12.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="224.7" y="462.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2,955 samples, 1.05%)</title><rect x="221.7" y="435.0" width="12.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="224.7" y="446.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (2,955 samples, 1.05%)</title><rect x="221.7" y="419.0" width="12.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="224.7" y="430.0"></text>
</g>
<g>
<title>byte[] (2,955 samples, 1.05%)</title><rect x="221.7" y="403.0" width="12.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="224.7" y="414.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5,874 samples, 2.09%)</title><rect x="234.1" y="499.0" width="24.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="237.1" y="510.0">o..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (5,874 samples, 2.09%)</title><rect x="234.1" y="483.0" width="24.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="237.1" y="494.0">o..</text>
</g>
<g>
<title>char[] (2,776 samples, 0.99%)</title><rect x="234.1" y="467.0" width="11.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="237.1" y="478.0"></text>
</g>
<g>
<title>java.lang.String (1,231 samples, 0.44%)</title><rect x="245.7" y="467.0" width="5.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="248.7" y="478.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,867 samples, 0.66%)</title><rect x="250.9" y="467.0" width="7.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="253.9" y="478.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,867 samples, 0.66%)</title><rect x="250.9" y="451.0" width="7.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="253.9" y="462.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1,867 samples, 0.66%)</title><rect x="250.9" y="435.0" width="7.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="253.9" y="446.0"></text>
</g>
<g>
<title>byte[] (1,867 samples, 0.66%)</title><rect x="250.9" y="419.0" width="7.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="253.9" y="430.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (72 samples, 0.03%)</title><rect x="258.7" y="515.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="261.7" y="526.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (72 samples, 0.03%)</title><rect x="258.7" y="499.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="261.7" y="510.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=25372] (29,387 samples, 10.46%)</title><rect x="259.0" y="579.0" width="123.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="262.0" y="590.0">[NIO Selector #..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (29,387 samples, 10.46%)</title><rect x="259.0" y="563.0" width="123.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="262.0" y="574.0">one/nio/server/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (1,991 samples, 0.71%)</title><rect x="259.0" y="547.0" width="8.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="262.0" y="558.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (1,991 samples, 0.71%)</title><rect x="259.0" y="531.0" width="8.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="262.0" y="542.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (27,396 samples, 9.75%)</title><rect x="267.4" y="547.0" width="115.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="270.4" y="558.0">one/nio/net/Se..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (27,396 samples, 9.75%)</title><rect x="267.4" y="531.0" width="115.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="270.4" y="542.0">one/nio/http/H..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (27,328 samples, 9.73%)</title><rect x="267.4" y="515.0" width="114.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="270.4" y="526.0">one/nio/http/H..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (7,742 samples, 2.76%)</title><rect x="267.4" y="499.0" width="32.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="270.4" y="510.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (7,742 samples, 2.76%)</title><rect x="267.4" y="483.0" width="32.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="270.4" y="494.0">on..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (5,103 samples, 1.82%)</title><rect x="267.4" y="467.0" width="21.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="270.4" y="478.0">R..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1,825 samples, 0.65%)</title><rect x="267.4" y="451.0" width="7.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="270.4" y="462.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,825 samples, 0.65%)</title><rect x="267.4" y="435.0" width="7.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="270.4" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,825 samples, 0.65%)</title><rect x="267.4" y="419.0" width="7.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="270.4" y="430.0"></text>
</g>
<g>
<title>java.lang.String (788 samples, 0.28%)</title><rect x="267.4" y="403.0" width="3.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="270.4" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,037 samples, 0.37%)</title><rect x="270.7" y="403.0" width="4.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="273.7" y="414.0"></text>
</g>
<g>
<title>byte[] (1,037 samples, 0.37%)</title><rect x="270.7" y="387.0" width="4.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="273.7" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.entity (3,278 samples, 1.17%)</title><rect x="275.1" y="451.0" width="13.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="278.1" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,234 samples, 0.44%)</title><rect x="275.1" y="435.0" width="5.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="278.1" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,234 samples, 0.44%)</title><rect x="275.1" y="419.0" width="5.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="278.1" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer$$Lambda$81/1409716107.get$Lambda (1,234 samples, 0.44%)</title><rect x="275.1" y="403.0" width="5.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="278.1" y="414.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.AsyncHttpServer$$Lambda$81 (1,234 samples, 0.44%)</title><rect x="275.1" y="387.0" width="5.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="278.1" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.executeAsync (2,044 samples, 0.73%)</title><rect x="280.2" y="435.0" width="8.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="283.2" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (915 samples, 0.33%)</title><rect x="280.2" y="419.0" width="3.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="283.2" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (915 samples, 0.33%)</title><rect x="280.2" y="403.0" width="3.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="283.2" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer$$Lambda$65/1115085888.get$Lambda (915 samples, 0.33%)</title><rect x="280.2" y="387.0" width="3.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="283.2" y="398.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.AsyncHttpServer$$Lambda$65 (915 samples, 0.33%)</title><rect x="280.2" y="371.0" width="3.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="283.2" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1,129 samples, 0.40%)</title><rect x="284.1" y="419.0" width="4.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="287.1" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1,129 samples, 0.40%)</title><rect x="284.1" y="403.0" width="4.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="287.1" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (1,126 samples, 0.40%)</title><rect x="284.1" y="387.0" width="4.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="287.1" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (2,639 samples, 0.94%)</title><rect x="288.8" y="467.0" width="11.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="291.8" y="478.0"></text>
</g>
<g>
<title>java/lang/String.substring (2,639 samples, 0.94%)</title><rect x="288.8" y="451.0" width="11.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="291.8" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2,639 samples, 0.94%)</title><rect x="288.8" y="435.0" width="11.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="291.8" y="446.0"></text>
</g>
<g>
<title>java.lang.String (1,047 samples, 0.37%)</title><rect x="288.8" y="419.0" width="4.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="291.8" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,592 samples, 0.57%)</title><rect x="293.2" y="419.0" width="6.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="296.2" y="430.0"></text>
</g>
<g>
<title>byte[] (1,592 samples, 0.57%)</title><rect x="293.2" y="403.0" width="6.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="296.2" y="414.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (13,714 samples, 4.88%)</title><rect x="299.9" y="499.0" width="57.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="302.9" y="510.0">one/ni..</text>
</g>
<g>
<title>one.nio.http.Request (2,269 samples, 0.81%)</title><rect x="299.9" y="483.0" width="9.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="302.9" y="494.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (3,706 samples, 1.32%)</title><rect x="309.4" y="483.0" width="15.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="312.4" y="494.0"></text>
</g>
<g>
<title>java.lang.String[] (3,433 samples, 1.22%)</title><rect x="309.4" y="467.0" width="14.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="312.4" y="478.0"></text>
</g>
<g>
<title>java.lang.String[] (273 samples, 0.10%)</title><rect x="323.9" y="467.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="326.9" y="478.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (7,739 samples, 2.75%)</title><rect x="325.0" y="483.0" width="32.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="328.0" y="494.0">on..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (7,739 samples, 2.75%)</title><rect x="325.0" y="467.0" width="32.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="328.0" y="478.0">on..</text>
</g>
<g>
<title>char[] (3,134 samples, 1.12%)</title><rect x="325.0" y="451.0" width="13.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="328.0" y="462.0"></text>
</g>
<g>
<title>char[] (647 samples, 0.23%)</title><rect x="338.2" y="451.0" width="2.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="341.2" y="462.0"></text>
</g>
<g>
<title>java.lang.String (937 samples, 0.33%)</title><rect x="340.9" y="451.0" width="3.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="343.9" y="462.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3,021 samples, 1.08%)</title><rect x="344.8" y="451.0" width="12.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="347.8" y="462.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3,021 samples, 1.08%)</title><rect x="344.8" y="435.0" width="12.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="347.8" y="446.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (3,021 samples, 1.08%)</title><rect x="344.8" y="419.0" width="12.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="347.8" y="430.0"></text>
</g>
<g>
<title>byte[] (3,021 samples, 1.08%)</title><rect x="344.8" y="403.0" width="12.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="347.8" y="414.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5,872 samples, 2.09%)</title><rect x="357.5" y="499.0" width="24.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="360.5" y="510.0">o..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (5,872 samples, 2.09%)</title><rect x="357.5" y="483.0" width="24.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="360.5" y="494.0">o..</text>
</g>
<g>
<title>char[] (2,804 samples, 1.00%)</title><rect x="357.5" y="467.0" width="11.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="360.5" y="478.0"></text>
</g>
<g>
<title>java.lang.String (1,133 samples, 0.40%)</title><rect x="369.3" y="467.0" width="4.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="372.3" y="478.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,935 samples, 0.69%)</title><rect x="374.0" y="467.0" width="8.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="377.0" y="478.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,935 samples, 0.69%)</title><rect x="374.0" y="451.0" width="8.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="377.0" y="462.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1,935 samples, 0.69%)</title><rect x="374.0" y="435.0" width="8.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="377.0" y="446.0"></text>
</g>
<g>
<title>byte[] (1,935 samples, 0.69%)</title><rect x="374.0" y="419.0" width="8.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="377.0" y="430.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (68 samples, 0.02%)</title><rect x="382.2" y="515.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="385.2" y="526.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (68 samples, 0.02%)</title><rect x="382.2" y="499.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="385.2" y="510.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=25373] (29,374 samples, 10.45%)</title><rect x="382.4" y="579.0" width="123.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="385.4" y="590.0">[NIO Selector #..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (29,374 samples, 10.45%)</title><rect x="382.4" y="563.0" width="123.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="385.4" y="574.0">one/nio/server/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (1,995 samples, 0.71%)</title><rect x="382.4" y="547.0" width="8.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="385.4" y="558.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (1,995 samples, 0.71%)</title><rect x="382.4" y="531.0" width="8.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="385.4" y="542.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (27,379 samples, 9.74%)</title><rect x="390.8" y="547.0" width="115.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="393.8" y="558.0">one/nio/net/Se..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (27,379 samples, 9.74%)</title><rect x="390.8" y="531.0" width="115.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="393.8" y="542.0">one/nio/http/H..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (27,323 samples, 9.72%)</title><rect x="390.8" y="515.0" width="114.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="393.8" y="526.0">one/nio/http/H..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (7,764 samples, 2.76%)</title><rect x="390.8" y="499.0" width="32.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="393.8" y="510.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (7,764 samples, 2.76%)</title><rect x="390.8" y="483.0" width="32.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="393.8" y="494.0">on..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (5,024 samples, 1.79%)</title><rect x="390.8" y="467.0" width="21.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="393.8" y="478.0">R..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1,755 samples, 0.62%)</title><rect x="390.8" y="451.0" width="7.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="393.8" y="462.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,755 samples, 0.62%)</title><rect x="390.8" y="435.0" width="7.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="393.8" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,755 samples, 0.62%)</title><rect x="390.8" y="419.0" width="7.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="393.8" y="430.0"></text>
</g>
<g>
<title>java.lang.String (742 samples, 0.26%)</title><rect x="390.8" y="403.0" width="3.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="393.8" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,013 samples, 0.36%)</title><rect x="393.9" y="403.0" width="4.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="396.9" y="414.0"></text>
</g>
<g>
<title>byte[] (1,013 samples, 0.36%)</title><rect x="393.9" y="387.0" width="4.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="396.9" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.entity (3,269 samples, 1.16%)</title><rect x="398.2" y="451.0" width="13.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="401.2" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,193 samples, 0.42%)</title><rect x="398.2" y="435.0" width="5.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="401.2" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,193 samples, 0.42%)</title><rect x="398.2" y="419.0" width="5.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="401.2" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer$$Lambda$81/1409716107.get$Lambda (1,193 samples, 0.42%)</title><rect x="398.2" y="403.0" width="5.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="401.2" y="414.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.AsyncHttpServer$$Lambda$81 (1,193 samples, 0.42%)</title><rect x="398.2" y="387.0" width="5.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="401.2" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.executeAsync (2,076 samples, 0.74%)</title><rect x="403.2" y="435.0" width="8.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="406.2" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (943 samples, 0.34%)</title><rect x="403.2" y="419.0" width="4.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="406.2" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (943 samples, 0.34%)</title><rect x="403.2" y="403.0" width="4.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="406.2" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer$$Lambda$65/1115085888.get$Lambda (943 samples, 0.34%)</title><rect x="403.2" y="387.0" width="4.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="406.2" y="398.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.AsyncHttpServer$$Lambda$65 (943 samples, 0.34%)</title><rect x="403.2" y="371.0" width="4.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="406.2" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1,133 samples, 0.40%)</title><rect x="407.2" y="419.0" width="4.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="410.2" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1,133 samples, 0.40%)</title><rect x="407.2" y="403.0" width="4.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="410.2" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (1,132 samples, 0.40%)</title><rect x="407.2" y="387.0" width="4.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="410.2" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (2,740 samples, 0.98%)</title><rect x="411.9" y="467.0" width="11.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="414.9" y="478.0"></text>
</g>
<g>
<title>java/lang/String.substring (2,740 samples, 0.98%)</title><rect x="411.9" y="451.0" width="11.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="414.9" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2,740 samples, 0.98%)</title><rect x="411.9" y="435.0" width="11.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="414.9" y="446.0"></text>
</g>
<g>
<title>java.lang.String (1,052 samples, 0.37%)</title><rect x="411.9" y="419.0" width="4.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="414.9" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,688 samples, 0.60%)</title><rect x="416.3" y="419.0" width="7.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="419.3" y="430.0"></text>
</g>
<g>
<title>byte[] (1,688 samples, 0.60%)</title><rect x="416.3" y="403.0" width="7.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="419.3" y="414.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (13,640 samples, 4.85%)</title><rect x="423.4" y="499.0" width="57.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="426.4" y="510.0">one/ni..</text>
</g>
<g>
<title>one.nio.http.Request (2,208 samples, 0.79%)</title><rect x="423.4" y="483.0" width="9.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="426.4" y="494.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (3,879 samples, 1.38%)</title><rect x="432.7" y="483.0" width="16.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="435.7" y="494.0"></text>
</g>
<g>
<title>java.lang.String[] (3,565 samples, 1.27%)</title><rect x="432.7" y="467.0" width="15.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="435.7" y="478.0"></text>
</g>
<g>
<title>java.lang.String[] (314 samples, 0.11%)</title><rect x="447.7" y="467.0" width="1.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="450.7" y="478.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (7,553 samples, 2.69%)</title><rect x="449.0" y="483.0" width="31.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="452.0" y="494.0">on..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (7,553 samples, 2.69%)</title><rect x="449.0" y="467.0" width="31.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="452.0" y="478.0">on..</text>
</g>
<g>
<title>char[] (3,161 samples, 1.12%)</title><rect x="449.0" y="451.0" width="13.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="452.0" y="462.0"></text>
</g>
<g>
<title>char[] (548 samples, 0.20%)</title><rect x="462.3" y="451.0" width="2.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="465.3" y="462.0"></text>
</g>
<g>
<title>java.lang.String (930 samples, 0.33%)</title><rect x="464.6" y="451.0" width="3.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="467.6" y="462.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2,914 samples, 1.04%)</title><rect x="468.5" y="451.0" width="12.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="471.5" y="462.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2,914 samples, 1.04%)</title><rect x="468.5" y="435.0" width="12.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="471.5" y="446.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (2,914 samples, 1.04%)</title><rect x="468.5" y="419.0" width="12.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="471.5" y="430.0"></text>
</g>
<g>
<title>byte[] (2,914 samples, 1.04%)</title><rect x="468.5" y="403.0" width="12.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="471.5" y="414.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5,919 samples, 2.11%)</title><rect x="480.7" y="499.0" width="24.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="483.7" y="510.0">o..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (5,919 samples, 2.11%)</title><rect x="480.7" y="483.0" width="24.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="483.7" y="494.0">o..</text>
</g>
<g>
<title>char[] (2,825 samples, 1.01%)</title><rect x="480.7" y="467.0" width="11.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="483.7" y="478.0"></text>
</g>
<g>
<title>java.lang.String (1,239 samples, 0.44%)</title><rect x="492.6" y="467.0" width="5.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="495.6" y="478.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,855 samples, 0.66%)</title><rect x="497.8" y="467.0" width="7.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="500.8" y="478.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,855 samples, 0.66%)</title><rect x="497.8" y="451.0" width="7.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="500.8" y="462.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1,855 samples, 0.66%)</title><rect x="497.8" y="435.0" width="7.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="500.8" y="446.0"></text>
</g>
<g>
<title>byte[] (1,855 samples, 0.66%)</title><rect x="497.8" y="419.0" width="7.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="500.8" y="430.0"></text>
</g>
<g>
<title>[worker-0 tid=25395] (32,654 samples, 11.62%)</title><rect x="505.8" y="579.0" width="137.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="508.8" y="590.0">[worker-0 tid=253..</text>
</g>
<g>
<title>java/lang/Thread.run (32,654 samples, 11.62%)</title><rect x="505.8" y="563.0" width="137.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="508.8" y="574.0">java/lang/Thread...</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (32,654 samples, 11.62%)</title><rect x="505.8" y="547.0" width="137.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="508.8" y="558.0">java/util/concurr..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (32,654 samples, 11.62%)</title><rect x="505.8" y="531.0" width="137.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="508.8" y="542.0">java/util/concurr..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer$$Lambda$65/1115085888.run (32,631 samples, 11.61%)</title><rect x="505.9" y="515.0" width="137.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="508.9" y="526.0">ru/mail/polis/ser..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.lambda$executeAsync$3 (32,631 samples, 11.61%)</title><rect x="505.9" y="499.0" width="137.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="508.9" y="510.0">ru/mail/polis/ser..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer$$Lambda$81/1409716107.get (32,589 samples, 11.60%)</title><rect x="506.1" y="483.0" width="136.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="509.1" y="494.0">ru/mail/polis/ser..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.lambda$entity$0 (32,589 samples, 11.60%)</title><rect x="506.1" y="467.0" width="136.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="509.1" y="478.0">ru/mail/polis/ser..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.get (32,589 samples, 11.60%)</title><rect x="506.1" y="451.0" width="136.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="509.1" y="462.0">ru/mail/polis/ser..</text>
</g>
<g>
<title>java/lang/String.getBytes (164 samples, 0.06%)</title><rect x="506.1" y="435.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="509.1" y="446.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (164 samples, 0.06%)</title><rect x="506.1" y="419.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="509.1" y="430.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (164 samples, 0.06%)</title><rect x="506.1" y="403.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="509.1" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (164 samples, 0.06%)</title><rect x="506.1" y="387.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="509.1" y="398.0"></text>
</g>
<g>
<title>byte[] (164 samples, 0.06%)</title><rect x="506.1" y="371.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="509.1" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (32,343 samples, 11.51%)</title><rect x="507.1" y="435.0" width="135.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="510.1" y="446.0">ru/mail/polis/dao..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (2,341 samples, 0.83%)</title><rect x="507.1" y="419.0" width="9.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="510.1" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (2,341 samples, 0.83%)</title><rect x="507.1" y="403.0" width="9.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="510.1" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (2,341 samples, 0.83%)</title><rect x="507.1" y="387.0" width="9.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="510.1" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (2,341 samples, 0.83%)</title><rect x="507.1" y="371.0" width="9.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="510.1" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (2,341 samples, 0.83%)</title><rect x="507.1" y="355.0" width="9.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="510.1" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (2,152 samples, 0.77%)</title><rect x="507.1" y="339.0" width="9.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="510.1" y="350.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (1,102 samples, 0.39%)</title><rect x="507.1" y="323.0" width="4.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="510.1" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (1,102 samples, 0.39%)</title><rect x="507.1" y="307.0" width="4.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="510.1" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (1,102 samples, 0.39%)</title><rect x="507.1" y="291.0" width="4.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="510.1" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,102 samples, 0.39%)</title><rect x="507.1" y="275.0" width="4.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="510.1" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,102 samples, 0.39%)</title><rect x="507.1" y="259.0" width="4.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="510.1" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/123226378.compare (1,102 samples, 0.39%)</title><rect x="507.1" y="243.0" width="4.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="510.1" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (1,102 samples, 0.39%)</title><rect x="507.1" y="227.0" width="4.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="510.1" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (1,102 samples, 0.39%)</title><rect x="507.1" y="211.0" width="4.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="510.1" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (1,102 samples, 0.39%)</title><rect x="507.1" y="195.0" width="4.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="510.1" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (1,102 samples, 0.39%)</title><rect x="507.1" y="179.0" width="4.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="510.1" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (1,102 samples, 0.39%)</title><rect x="507.1" y="163.0" width="4.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="510.1" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$67/1497891062.compare (1,102 samples, 0.39%)</title><rect x="507.1" y="147.0" width="4.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="510.1" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (1,102 samples, 0.39%)</title><rect x="507.1" y="131.0" width="4.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="510.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$66/474651931.apply (1,102 samples, 0.39%)</title><rect x="507.1" y="115.0" width="4.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="510.1" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (1,102 samples, 0.39%)</title><rect x="507.1" y="99.0" width="4.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="510.1" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (1,099 samples, 0.39%)</title><rect x="507.1" y="83.0" width="4.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="510.1" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (1,099 samples, 0.39%)</title><rect x="507.1" y="67.0" width="4.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="510.1" y="78.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (1,099 samples, 0.39%)</title><rect x="507.1" y="51.0" width="4.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="510.1" y="62.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (1,050 samples, 0.37%)</title><rect x="511.7" y="323.0" width="4.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="514.7" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (1,050 samples, 0.37%)</title><rect x="511.7" y="307.0" width="4.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="514.7" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (1,050 samples, 0.37%)</title><rect x="511.7" y="291.0" width="4.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="514.7" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (1,050 samples, 0.37%)</title><rect x="511.7" y="275.0" width="4.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="514.7" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,050 samples, 0.37%)</title><rect x="511.7" y="259.0" width="4.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="514.7" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,050 samples, 0.37%)</title><rect x="511.7" y="243.0" width="4.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="514.7" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (815 samples, 0.29%)</title><rect x="511.7" y="227.0" width="3.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="514.7" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (815 samples, 0.29%)</title><rect x="511.7" y="211.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="514.7" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (815 samples, 0.29%)</title><rect x="511.7" y="195.0" width="3.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="514.7" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (815 samples, 0.29%)</title><rect x="511.7" y="179.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="514.7" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (193 samples, 0.07%)</title><rect x="511.9" y="163.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="514.9" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (104 samples, 0.04%)</title><rect x="511.9" y="147.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="514.9" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (104 samples, 0.04%)</title><rect x="511.9" y="131.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="514.9" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (104 samples, 0.04%)</title><rect x="511.9" y="115.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="514.9" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (89 samples, 0.03%)</title><rect x="512.3" y="147.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="515.3" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (89 samples, 0.03%)</title><rect x="512.3" y="131.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="515.3" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (234 samples, 0.08%)</title><rect x="512.7" y="163.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="515.7" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (125 samples, 0.04%)</title><rect x="512.7" y="147.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="515.7" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (125 samples, 0.04%)</title><rect x="512.7" y="131.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="515.7" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (125 samples, 0.04%)</title><rect x="512.7" y="115.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="515.7" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (109 samples, 0.04%)</title><rect x="513.2" y="147.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="516.2" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (109 samples, 0.04%)</title><rect x="513.2" y="131.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="516.2" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.timestampAt (95 samples, 0.03%)</title><rect x="513.7" y="163.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="516.7" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (95 samples, 0.03%)</title><rect x="513.7" y="147.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="516.7" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (95 samples, 0.03%)</title><rect x="513.7" y="131.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="516.7" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (95 samples, 0.03%)</title><rect x="513.7" y="115.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="516.7" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.valueAt (200 samples, 0.07%)</title><rect x="514.1" y="163.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="517.1" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (101 samples, 0.04%)</title><rect x="514.1" y="147.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="517.1" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (101 samples, 0.04%)</title><rect x="514.1" y="131.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="517.1" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (101 samples, 0.04%)</title><rect x="514.1" y="115.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="517.1" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (99 samples, 0.04%)</title><rect x="514.5" y="147.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="517.5" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (99 samples, 0.04%)</title><rect x="514.5" y="131.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="517.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/123226378.compare (235 samples, 0.08%)</title><rect x="515.2" y="227.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="518.2" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (235 samples, 0.08%)</title><rect x="515.2" y="211.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="518.2" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (235 samples, 0.08%)</title><rect x="515.2" y="195.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="518.2" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (235 samples, 0.08%)</title><rect x="515.2" y="179.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="518.2" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (235 samples, 0.08%)</title><rect x="515.2" y="163.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="518.2" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (235 samples, 0.08%)</title><rect x="515.2" y="147.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="518.2" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$67/1497891062.compare (235 samples, 0.08%)</title><rect x="515.2" y="131.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="518.2" y="142.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (235 samples, 0.08%)</title><rect x="515.2" y="115.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="518.2" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$66/474651931.apply (235 samples, 0.08%)</title><rect x="515.2" y="99.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="518.2" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (235 samples, 0.08%)</title><rect x="515.2" y="83.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="518.2" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (235 samples, 0.08%)</title><rect x="515.2" y="67.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="518.2" y="78.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (235 samples, 0.08%)</title><rect x="515.2" y="51.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="518.2" y="62.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (235 samples, 0.08%)</title><rect x="515.2" y="35.0" width="0.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="518.2" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$72/878358964.apply (189 samples, 0.07%)</title><rect x="516.1" y="339.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="519.1" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (189 samples, 0.07%)</title><rect x="516.1" y="323.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="519.1" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (189 samples, 0.07%)</title><rect x="516.1" y="307.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="519.1" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (189 samples, 0.07%)</title><rect x="516.1" y="291.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="519.1" y="302.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (189 samples, 0.07%)</title><rect x="516.1" y="275.0" width="0.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="519.1" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.iterator (29,925 samples, 10.65%)</title><rect x="517.3" y="419.0" width="125.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="520.3" y="430.0">ru/mail/polis/d..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.rowsIterator (29,921 samples, 10.65%)</title><rect x="517.3" y="403.0" width="125.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="520.3" y="414.0">ru/mail/polis/d..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (25,851 samples, 9.20%)</title><rect x="517.3" y="387.0" width="108.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="520.3" y="398.0">ru/mail/polis..</text>
</g>
<g>
<title>java/util/ArrayList.add (110 samples, 0.04%)</title><rect x="517.3" y="371.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="520.3" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (110 samples, 0.04%)</title><rect x="517.3" y="355.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="520.3" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (110 samples, 0.04%)</title><rect x="517.3" y="339.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="520.3" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (110 samples, 0.04%)</title><rect x="517.3" y="323.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="520.3" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (110 samples, 0.04%)</title><rect x="517.3" y="307.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="520.3" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (110 samples, 0.04%)</title><rect x="517.3" y="291.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="520.3" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.iterator (118 samples, 0.04%)</title><rect x="517.8" y="371.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="520.8" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (73 samples, 0.03%)</title><rect x="517.8" y="355.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="520.8" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.iterator (25,609 samples, 9.11%)</title><rect x="518.3" y="371.0" width="107.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="521.3" y="382.0">ru/mail/polis..</text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.SSTable$SSTableIterator (216 samples, 0.08%)</title><rect x="518.3" y="355.0" width="0.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="521.3" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.&lt;init&gt; (25,393 samples, 9.04%)</title><rect x="519.2" y="355.0" width="106.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="522.2" y="366.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.position (25,393 samples, 9.04%)</title><rect x="519.2" y="339.0" width="106.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="522.2" y="350.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (12,711 samples, 4.52%)</title><rect x="519.2" y="323.0" width="53.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="522.2" y="334.0">ru/ma..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (6,355 samples, 2.26%)</title><rect x="519.2" y="307.0" width="26.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="522.2" y="318.0">j..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (6,355 samples, 2.26%)</title><rect x="519.2" y="291.0" width="26.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="522.2" y="302.0">j..</text>
</g>
<g>
<title>java.nio.DirectByteBufferR (6,355 samples, 2.26%)</title><rect x="519.2" y="275.0" width="26.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="522.2" y="286.0">j..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (6,356 samples, 2.26%)</title><rect x="545.9" y="307.0" width="26.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="548.9" y="318.0">j..</text>
</g>
<g>
<title>java.nio.DirectByteBufferR (6,356 samples, 2.26%)</title><rect x="545.9" y="291.0" width="26.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="548.9" y="302.0">j..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (12,682 samples, 4.51%)</title><rect x="572.6" y="323.0" width="53.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="575.6" y="334.0">ru/ma..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (6,347 samples, 2.26%)</title><rect x="572.6" y="307.0" width="26.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="575.6" y="318.0">j..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (6,347 samples, 2.26%)</title><rect x="572.6" y="291.0" width="26.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="575.6" y="302.0">j..</text>
</g>
<g>
<title>java.nio.DirectByteBufferR (6,347 samples, 2.26%)</title><rect x="572.6" y="275.0" width="26.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="575.6" y="286.0">j..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (6,335 samples, 2.25%)</title><rect x="599.2" y="307.0" width="26.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="602.2" y="318.0">j..</text>
</g>
<g>
<title>java.nio.DirectByteBufferR (6,335 samples, 2.25%)</title><rect x="599.2" y="291.0" width="26.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="602.2" y="302.0">j..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.reduceIterators (4,070 samples, 1.45%)</title><rect x="625.8" y="387.0" width="17.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="628.8" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (3,629 samples, 1.29%)</title><rect x="625.9" y="371.0" width="15.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="628.9" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (3,627 samples, 1.29%)</title><rect x="625.9" y="355.0" width="15.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="628.9" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (113 samples, 0.04%)</title><rect x="625.9" y="339.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="628.9" y="350.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (113 samples, 0.04%)</title><rect x="625.9" y="323.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="628.9" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (3,486 samples, 1.24%)</title><rect x="626.5" y="339.0" width="14.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="629.5" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (3,486 samples, 1.24%)</title><rect x="626.5" y="323.0" width="14.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="629.5" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (3,429 samples, 1.22%)</title><rect x="626.7" y="307.0" width="14.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="629.7" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (3,429 samples, 1.22%)</title><rect x="626.7" y="291.0" width="14.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="629.7" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (3,429 samples, 1.22%)</title><rect x="626.7" y="275.0" width="14.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="629.7" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (3,429 samples, 1.22%)</title><rect x="626.7" y="259.0" width="14.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="629.7" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (2,463 samples, 0.88%)</title><rect x="626.7" y="243.0" width="10.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="629.7" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (2,463 samples, 0.88%)</title><rect x="626.7" y="227.0" width="10.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="629.7" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (2,463 samples, 0.88%)</title><rect x="626.7" y="211.0" width="10.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="629.7" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (2,463 samples, 0.88%)</title><rect x="626.7" y="195.0" width="10.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="629.7" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.of (168 samples, 0.06%)</title><rect x="626.7" y="179.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="629.7" y="190.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Row (168 samples, 0.06%)</title><rect x="626.7" y="163.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="629.7" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (626 samples, 0.22%)</title><rect x="627.4" y="179.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="630.4" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (289 samples, 0.10%)</title><rect x="627.4" y="163.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="630.4" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (289 samples, 0.10%)</title><rect x="627.4" y="147.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="630.4" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (289 samples, 0.10%)</title><rect x="627.4" y="131.0" width="1.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="630.4" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (337 samples, 0.12%)</title><rect x="628.6" y="163.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="631.6" y="174.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (337 samples, 0.12%)</title><rect x="628.6" y="147.0" width="1.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="631.6" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (611 samples, 0.22%)</title><rect x="630.0" y="179.0" width="2.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="633.0" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (314 samples, 0.11%)</title><rect x="630.0" y="163.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="633.0" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (314 samples, 0.11%)</title><rect x="630.0" y="147.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="633.0" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (314 samples, 0.11%)</title><rect x="630.0" y="131.0" width="1.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="633.0" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (297 samples, 0.11%)</title><rect x="631.3" y="163.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="634.3" y="174.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (297 samples, 0.11%)</title><rect x="631.3" y="147.0" width="1.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="634.3" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.timestampAt (300 samples, 0.11%)</title><rect x="632.6" y="179.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="635.6" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (300 samples, 0.11%)</title><rect x="632.6" y="163.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="635.6" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (300 samples, 0.11%)</title><rect x="632.6" y="147.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="635.6" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (300 samples, 0.11%)</title><rect x="632.6" y="131.0" width="1.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="635.6" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.valueAt (642 samples, 0.23%)</title><rect x="633.8" y="179.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="636.8" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (313 samples, 0.11%)</title><rect x="633.8" y="163.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="636.8" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (313 samples, 0.11%)</title><rect x="633.8" y="147.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="636.8" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (313 samples, 0.11%)</title><rect x="633.8" y="131.0" width="1.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="636.8" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (329 samples, 0.12%)</title><rect x="635.2" y="163.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="638.2" y="174.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (329 samples, 0.12%)</title><rect x="635.2" y="147.0" width="1.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="638.2" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Value.of (116 samples, 0.04%)</title><rect x="636.5" y="179.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="639.5" y="190.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Value (116 samples, 0.04%)</title><rect x="636.5" y="163.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="639.5" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/123226378.compare (966 samples, 0.34%)</title><rect x="637.0" y="243.0" width="4.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="640.0" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (966 samples, 0.34%)</title><rect x="637.0" y="227.0" width="4.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="640.0" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (966 samples, 0.34%)</title><rect x="637.0" y="211.0" width="4.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="640.0" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (966 samples, 0.34%)</title><rect x="637.0" y="195.0" width="4.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="640.0" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (966 samples, 0.34%)</title><rect x="637.0" y="179.0" width="4.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="640.0" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (966 samples, 0.34%)</title><rect x="637.0" y="163.0" width="4.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="640.0" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$67/1497891062.compare (966 samples, 0.34%)</title><rect x="637.0" y="147.0" width="4.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="640.0" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (966 samples, 0.34%)</title><rect x="637.0" y="131.0" width="4.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="640.0" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$66/474651931.apply (966 samples, 0.34%)</title><rect x="637.0" y="115.0" width="4.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="640.0" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (966 samples, 0.34%)</title><rect x="637.0" y="99.0" width="4.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="640.0" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (936 samples, 0.33%)</title><rect x="637.0" y="83.0" width="4.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="640.0" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (936 samples, 0.33%)</title><rect x="637.0" y="67.0" width="4.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="640.0" y="78.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (936 samples, 0.33%)</title><rect x="637.0" y="51.0" width="4.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="640.0" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (435 samples, 0.15%)</title><rect x="641.1" y="371.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="644.1" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (431 samples, 0.15%)</title><rect x="641.1" y="355.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="644.1" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (431 samples, 0.15%)</title><rect x="641.1" y="339.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="644.1" y="350.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (224 samples, 0.08%)</title><rect x="641.1" y="323.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="644.1" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (224 samples, 0.08%)</title><rect x="641.1" y="307.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="644.1" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (224 samples, 0.08%)</title><rect x="641.1" y="291.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="644.1" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (224 samples, 0.08%)</title><rect x="641.1" y="275.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="644.1" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (224 samples, 0.08%)</title><rect x="641.1" y="259.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="644.1" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/123226378.compare (224 samples, 0.08%)</title><rect x="641.1" y="243.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="644.1" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (224 samples, 0.08%)</title><rect x="641.1" y="227.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="644.1" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (224 samples, 0.08%)</title><rect x="641.1" y="211.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="644.1" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (224 samples, 0.08%)</title><rect x="641.1" y="195.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="644.1" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (224 samples, 0.08%)</title><rect x="641.1" y="179.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="644.1" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (224 samples, 0.08%)</title><rect x="641.1" y="163.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="644.1" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$67/1497891062.compare (224 samples, 0.08%)</title><rect x="641.1" y="147.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="644.1" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (224 samples, 0.08%)</title><rect x="641.1" y="131.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="644.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$66/474651931.apply (224 samples, 0.08%)</title><rect x="641.1" y="115.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="644.1" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (224 samples, 0.08%)</title><rect x="641.1" y="99.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="644.1" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (221 samples, 0.08%)</title><rect x="641.1" y="83.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="644.1" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (221 samples, 0.08%)</title><rect x="641.1" y="67.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="644.1" y="78.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (221 samples, 0.08%)</title><rect x="641.1" y="51.0" width="0.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="644.1" y="62.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (207 samples, 0.07%)</title><rect x="642.0" y="323.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="645.0" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (207 samples, 0.07%)</title><rect x="642.0" y="307.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="645.0" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (207 samples, 0.07%)</title><rect x="642.0" y="291.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="645.0" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (207 samples, 0.07%)</title><rect x="642.0" y="275.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="645.0" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (207 samples, 0.07%)</title><rect x="642.0" y="259.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="645.0" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (207 samples, 0.07%)</title><rect x="642.0" y="243.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="645.0" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (149 samples, 0.05%)</title><rect x="642.0" y="227.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="645.0" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (149 samples, 0.05%)</title><rect x="642.0" y="211.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="645.0" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (149 samples, 0.05%)</title><rect x="642.0" y="195.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="645.0" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (149 samples, 0.05%)</title><rect x="642.0" y="179.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="645.0" y="190.0"></text>
</g>
<g>
<title>[worker-1 tid=25394] (32,457 samples, 11.55%)</title><rect x="642.9" y="579.0" width="136.3" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="645.9" y="590.0">[worker-1 tid=253..</text>
</g>
<g>
<title>java/lang/Thread.run (32,457 samples, 11.55%)</title><rect x="642.9" y="563.0" width="136.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="645.9" y="574.0">java/lang/Thread...</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (32,457 samples, 11.55%)</title><rect x="642.9" y="547.0" width="136.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="645.9" y="558.0">java/util/concurr..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (32,457 samples, 11.55%)</title><rect x="642.9" y="531.0" width="136.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="645.9" y="542.0">java/util/concurr..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer$$Lambda$65/1115085888.run (32,437 samples, 11.54%)</title><rect x="643.0" y="515.0" width="136.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="646.0" y="526.0">ru/mail/polis/ser..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.lambda$executeAsync$3 (32,437 samples, 11.54%)</title><rect x="643.0" y="499.0" width="136.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="646.0" y="510.0">ru/mail/polis/ser..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer$$Lambda$81/1409716107.get (32,410 samples, 11.53%)</title><rect x="643.1" y="483.0" width="136.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="646.1" y="494.0">ru/mail/polis/ser..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.lambda$entity$0 (32,410 samples, 11.53%)</title><rect x="643.1" y="467.0" width="136.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="646.1" y="478.0">ru/mail/polis/ser..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.get (32,410 samples, 11.53%)</title><rect x="643.1" y="451.0" width="136.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="646.1" y="462.0">ru/mail/polis/ser..</text>
</g>
<g>
<title>java/lang/String.getBytes (173 samples, 0.06%)</title><rect x="643.1" y="435.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="646.1" y="446.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (173 samples, 0.06%)</title><rect x="643.1" y="419.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="646.1" y="430.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (173 samples, 0.06%)</title><rect x="643.1" y="403.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="646.1" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (173 samples, 0.06%)</title><rect x="643.1" y="387.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="646.1" y="398.0"></text>
</g>
<g>
<title>byte[] (173 samples, 0.06%)</title><rect x="643.1" y="371.0" width="0.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="646.1" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (32,170 samples, 11.45%)</title><rect x="644.1" y="435.0" width="135.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="647.1" y="446.0">ru/mail/polis/dao..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (2,328 samples, 0.83%)</title><rect x="644.1" y="419.0" width="9.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="647.1" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (2,328 samples, 0.83%)</title><rect x="644.1" y="403.0" width="9.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="647.1" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (2,328 samples, 0.83%)</title><rect x="644.1" y="387.0" width="9.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="647.1" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (2,328 samples, 0.83%)</title><rect x="644.1" y="371.0" width="9.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="647.1" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (2,328 samples, 0.83%)</title><rect x="644.1" y="355.0" width="9.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="647.1" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (2,136 samples, 0.76%)</title><rect x="644.1" y="339.0" width="9.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="647.1" y="350.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (1,132 samples, 0.40%)</title><rect x="644.1" y="323.0" width="4.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="647.1" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (1,132 samples, 0.40%)</title><rect x="644.1" y="307.0" width="4.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="647.1" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (1,132 samples, 0.40%)</title><rect x="644.1" y="291.0" width="4.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="647.1" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,132 samples, 0.40%)</title><rect x="644.1" y="275.0" width="4.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="647.1" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,132 samples, 0.40%)</title><rect x="644.1" y="259.0" width="4.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="647.1" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/123226378.compare (1,132 samples, 0.40%)</title><rect x="644.1" y="243.0" width="4.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="647.1" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (1,132 samples, 0.40%)</title><rect x="644.1" y="227.0" width="4.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="647.1" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (1,132 samples, 0.40%)</title><rect x="644.1" y="211.0" width="4.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="647.1" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (1,132 samples, 0.40%)</title><rect x="644.1" y="195.0" width="4.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="647.1" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (1,132 samples, 0.40%)</title><rect x="644.1" y="179.0" width="4.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="647.1" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (1,132 samples, 0.40%)</title><rect x="644.1" y="163.0" width="4.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="647.1" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$67/1497891062.compare (1,132 samples, 0.40%)</title><rect x="644.1" y="147.0" width="4.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="647.1" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (1,132 samples, 0.40%)</title><rect x="644.1" y="131.0" width="4.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="647.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$66/474651931.apply (1,132 samples, 0.40%)</title><rect x="644.1" y="115.0" width="4.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="647.1" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (1,132 samples, 0.40%)</title><rect x="644.1" y="99.0" width="4.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="647.1" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (1,127 samples, 0.40%)</title><rect x="644.1" y="83.0" width="4.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="647.1" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (1,127 samples, 0.40%)</title><rect x="644.1" y="67.0" width="4.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="647.1" y="78.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (1,127 samples, 0.40%)</title><rect x="644.1" y="51.0" width="4.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="647.1" y="62.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (1,002 samples, 0.36%)</title><rect x="648.9" y="323.0" width="4.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="651.9" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (1,002 samples, 0.36%)</title><rect x="648.9" y="307.0" width="4.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="651.9" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (1,002 samples, 0.36%)</title><rect x="648.9" y="291.0" width="4.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="651.9" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (1,002 samples, 0.36%)</title><rect x="648.9" y="275.0" width="4.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="651.9" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,002 samples, 0.36%)</title><rect x="648.9" y="259.0" width="4.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="651.9" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,002 samples, 0.36%)</title><rect x="648.9" y="243.0" width="4.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="651.9" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (770 samples, 0.27%)</title><rect x="648.9" y="227.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="651.9" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (770 samples, 0.27%)</title><rect x="648.9" y="211.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="651.9" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (770 samples, 0.27%)</title><rect x="648.9" y="195.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="651.9" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (770 samples, 0.27%)</title><rect x="648.9" y="179.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="651.9" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (207 samples, 0.07%)</title><rect x="649.0" y="163.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="652.0" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (106 samples, 0.04%)</title><rect x="649.0" y="147.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="652.0" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (106 samples, 0.04%)</title><rect x="649.0" y="131.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="652.0" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (106 samples, 0.04%)</title><rect x="649.0" y="115.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="652.0" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (101 samples, 0.04%)</title><rect x="649.5" y="147.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="652.5" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (101 samples, 0.04%)</title><rect x="649.5" y="131.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="652.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (190 samples, 0.07%)</title><rect x="649.9" y="163.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="652.9" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (103 samples, 0.04%)</title><rect x="649.9" y="147.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="652.9" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (103 samples, 0.04%)</title><rect x="649.9" y="131.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="652.9" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (103 samples, 0.04%)</title><rect x="649.9" y="115.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="652.9" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (87 samples, 0.03%)</title><rect x="650.3" y="147.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="653.3" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (87 samples, 0.03%)</title><rect x="650.3" y="131.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="653.3" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.timestampAt (101 samples, 0.04%)</title><rect x="650.7" y="163.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="653.7" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (101 samples, 0.04%)</title><rect x="650.7" y="147.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="653.7" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (101 samples, 0.04%)</title><rect x="650.7" y="131.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="653.7" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (101 samples, 0.04%)</title><rect x="650.7" y="115.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="653.7" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.valueAt (180 samples, 0.06%)</title><rect x="651.1" y="163.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="654.1" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (86 samples, 0.03%)</title><rect x="651.1" y="147.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="654.1" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (86 samples, 0.03%)</title><rect x="651.1" y="131.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="654.1" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (86 samples, 0.03%)</title><rect x="651.1" y="115.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="654.1" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (94 samples, 0.03%)</title><rect x="651.5" y="147.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="654.5" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (94 samples, 0.03%)</title><rect x="651.5" y="131.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="654.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/123226378.compare (232 samples, 0.08%)</title><rect x="652.1" y="227.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="655.1" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (232 samples, 0.08%)</title><rect x="652.1" y="211.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="655.1" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (232 samples, 0.08%)</title><rect x="652.1" y="195.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="655.1" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (232 samples, 0.08%)</title><rect x="652.1" y="179.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="655.1" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (232 samples, 0.08%)</title><rect x="652.1" y="163.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="655.1" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (232 samples, 0.08%)</title><rect x="652.1" y="147.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="655.1" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$67/1497891062.compare (232 samples, 0.08%)</title><rect x="652.1" y="131.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="655.1" y="142.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (232 samples, 0.08%)</title><rect x="652.1" y="115.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="655.1" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$66/474651931.apply (232 samples, 0.08%)</title><rect x="652.1" y="99.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="655.1" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (232 samples, 0.08%)</title><rect x="652.1" y="83.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="655.1" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (232 samples, 0.08%)</title><rect x="652.1" y="67.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="655.1" y="78.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (232 samples, 0.08%)</title><rect x="652.1" y="51.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="655.1" y="62.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (232 samples, 0.08%)</title><rect x="652.1" y="35.0" width="1.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="655.1" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$72/878358964.apply (192 samples, 0.07%)</title><rect x="653.1" y="339.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="656.1" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (192 samples, 0.07%)</title><rect x="653.1" y="323.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="656.1" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (189 samples, 0.07%)</title><rect x="653.1" y="307.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="656.1" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (189 samples, 0.07%)</title><rect x="653.1" y="291.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="656.1" y="302.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (189 samples, 0.07%)</title><rect x="653.1" y="275.0" width="0.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="656.1" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.iterator (29,753 samples, 10.59%)</title><rect x="654.3" y="419.0" width="124.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="657.3" y="430.0">ru/mail/polis/d..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.rowsIterator (29,744 samples, 10.58%)</title><rect x="654.3" y="403.0" width="124.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="657.3" y="414.0">ru/mail/polis/d..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (25,714 samples, 9.15%)</title><rect x="654.3" y="387.0" width="108.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="657.3" y="398.0">ru/mail/polis..</text>
</g>
<g>
<title>java/util/ArrayList.add (103 samples, 0.04%)</title><rect x="654.3" y="371.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="657.3" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (103 samples, 0.04%)</title><rect x="654.3" y="355.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="657.3" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (103 samples, 0.04%)</title><rect x="654.3" y="339.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="657.3" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (103 samples, 0.04%)</title><rect x="654.3" y="323.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="657.3" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (103 samples, 0.04%)</title><rect x="654.3" y="307.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="657.3" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (103 samples, 0.04%)</title><rect x="654.3" y="291.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="657.3" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.iterator (115 samples, 0.04%)</title><rect x="654.8" y="371.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="657.8" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (79 samples, 0.03%)</title><rect x="654.8" y="355.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="657.8" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.iterator (25,483 samples, 9.07%)</title><rect x="655.3" y="371.0" width="107.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="658.3" y="382.0">ru/mail/polis..</text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.SSTable$SSTableIterator (214 samples, 0.08%)</title><rect x="655.3" y="355.0" width="0.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="658.3" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.&lt;init&gt; (25,269 samples, 8.99%)</title><rect x="656.2" y="355.0" width="106.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="659.2" y="366.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.position (25,269 samples, 8.99%)</title><rect x="656.2" y="339.0" width="106.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="659.2" y="350.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (12,523 samples, 4.46%)</title><rect x="656.2" y="323.0" width="52.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="659.2" y="334.0">ru/ma..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (6,192 samples, 2.20%)</title><rect x="656.2" y="307.0" width="26.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="659.2" y="318.0">j..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (6,192 samples, 2.20%)</title><rect x="656.2" y="291.0" width="26.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="659.2" y="302.0">j..</text>
</g>
<g>
<title>java.nio.DirectByteBufferR (6,192 samples, 2.20%)</title><rect x="656.2" y="275.0" width="26.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="659.2" y="286.0">j..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (6,331 samples, 2.25%)</title><rect x="682.2" y="307.0" width="26.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="685.2" y="318.0">j..</text>
</g>
<g>
<title>java.nio.DirectByteBufferR (6,331 samples, 2.25%)</title><rect x="682.2" y="291.0" width="26.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="685.2" y="302.0">j..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (12,746 samples, 4.54%)</title><rect x="708.8" y="323.0" width="53.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="711.8" y="334.0">ru/ma..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (6,373 samples, 2.27%)</title><rect x="708.8" y="307.0" width="26.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="711.8" y="318.0">j..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (6,373 samples, 2.27%)</title><rect x="708.8" y="291.0" width="26.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="711.8" y="302.0">j..</text>
</g>
<g>
<title>java.nio.DirectByteBufferR (6,373 samples, 2.27%)</title><rect x="708.8" y="275.0" width="26.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="711.8" y="286.0">j..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (6,373 samples, 2.27%)</title><rect x="735.5" y="307.0" width="26.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="738.5" y="318.0">j..</text>
</g>
<g>
<title>java.nio.DirectByteBufferR (6,373 samples, 2.27%)</title><rect x="735.5" y="291.0" width="26.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="738.5" y="302.0">j..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.reduceIterators (4,030 samples, 1.43%)</title><rect x="762.3" y="387.0" width="16.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="765.3" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (3,549 samples, 1.26%)</title><rect x="762.3" y="371.0" width="14.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="765.3" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (3,542 samples, 1.26%)</title><rect x="762.4" y="355.0" width="14.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="765.4" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (92 samples, 0.03%)</title><rect x="762.5" y="339.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="765.5" y="350.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (92 samples, 0.03%)</title><rect x="762.5" y="323.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="765.5" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (3,412 samples, 1.21%)</title><rect x="762.9" y="339.0" width="14.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="765.9" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (3,412 samples, 1.21%)</title><rect x="762.9" y="323.0" width="14.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="765.9" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.grow (60 samples, 0.02%)</title><rect x="762.9" y="307.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="765.9" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (60 samples, 0.02%)</title><rect x="762.9" y="291.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="765.9" y="302.0"></text>
</g>
<g>
<title>java.lang.Object[] (60 samples, 0.02%)</title><rect x="762.9" y="275.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="765.9" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (3,352 samples, 1.19%)</title><rect x="763.2" y="307.0" width="14.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="766.2" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (3,352 samples, 1.19%)</title><rect x="763.2" y="291.0" width="14.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="766.2" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (3,352 samples, 1.19%)</title><rect x="763.2" y="275.0" width="14.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="766.2" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (3,352 samples, 1.19%)</title><rect x="763.2" y="259.0" width="14.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="766.2" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (2,428 samples, 0.86%)</title><rect x="763.2" y="243.0" width="10.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="766.2" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (2,428 samples, 0.86%)</title><rect x="763.2" y="227.0" width="10.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="766.2" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (2,428 samples, 0.86%)</title><rect x="763.2" y="211.0" width="10.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="766.2" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (2,428 samples, 0.86%)</title><rect x="763.2" y="195.0" width="10.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="766.2" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.of (167 samples, 0.06%)</title><rect x="763.2" y="179.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="766.2" y="190.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Row (167 samples, 0.06%)</title><rect x="763.2" y="163.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="766.2" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (639 samples, 0.23%)</title><rect x="763.9" y="179.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="766.9" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (319 samples, 0.11%)</title><rect x="763.9" y="163.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="766.9" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (319 samples, 0.11%)</title><rect x="763.9" y="147.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="766.9" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (319 samples, 0.11%)</title><rect x="763.9" y="131.0" width="1.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="766.9" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (320 samples, 0.11%)</title><rect x="765.2" y="163.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="768.2" y="174.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (320 samples, 0.11%)</title><rect x="765.2" y="147.0" width="1.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="768.2" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (577 samples, 0.21%)</title><rect x="766.5" y="179.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="769.5" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (312 samples, 0.11%)</title><rect x="766.5" y="163.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="769.5" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (312 samples, 0.11%)</title><rect x="766.5" y="147.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="769.5" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (312 samples, 0.11%)</title><rect x="766.5" y="131.0" width="1.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="769.5" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (265 samples, 0.09%)</title><rect x="767.9" y="163.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="770.9" y="174.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (265 samples, 0.09%)</title><rect x="767.9" y="147.0" width="1.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="770.9" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.timestampAt (315 samples, 0.11%)</title><rect x="769.0" y="179.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="772.0" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (315 samples, 0.11%)</title><rect x="769.0" y="163.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="772.0" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (315 samples, 0.11%)</title><rect x="769.0" y="147.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="772.0" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (315 samples, 0.11%)</title><rect x="769.0" y="131.0" width="1.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="772.0" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.valueAt (620 samples, 0.22%)</title><rect x="770.3" y="179.0" width="2.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="773.3" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (285 samples, 0.10%)</title><rect x="770.3" y="163.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="773.3" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (285 samples, 0.10%)</title><rect x="770.3" y="147.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="773.3" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (285 samples, 0.10%)</title><rect x="770.3" y="131.0" width="1.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="773.3" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (335 samples, 0.12%)</title><rect x="771.5" y="163.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="774.5" y="174.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (335 samples, 0.12%)</title><rect x="771.5" y="147.0" width="1.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="774.5" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Value.of (110 samples, 0.04%)</title><rect x="772.9" y="179.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="775.9" y="190.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Value (110 samples, 0.04%)</title><rect x="772.9" y="163.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="775.9" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/123226378.compare (924 samples, 0.33%)</title><rect x="773.4" y="243.0" width="3.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="776.4" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (924 samples, 0.33%)</title><rect x="773.4" y="227.0" width="3.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="776.4" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (924 samples, 0.33%)</title><rect x="773.4" y="211.0" width="3.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="776.4" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (924 samples, 0.33%)</title><rect x="773.4" y="195.0" width="3.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="776.4" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (924 samples, 0.33%)</title><rect x="773.4" y="179.0" width="3.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="776.4" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (924 samples, 0.33%)</title><rect x="773.4" y="163.0" width="3.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="776.4" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$67/1497891062.compare (924 samples, 0.33%)</title><rect x="773.4" y="147.0" width="3.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="776.4" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (924 samples, 0.33%)</title><rect x="773.4" y="131.0" width="3.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="776.4" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$66/474651931.apply (924 samples, 0.33%)</title><rect x="773.4" y="115.0" width="3.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="776.4" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (924 samples, 0.33%)</title><rect x="773.4" y="99.0" width="3.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="776.4" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (903 samples, 0.32%)</title><rect x="773.4" y="83.0" width="3.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="776.4" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (903 samples, 0.32%)</title><rect x="773.4" y="67.0" width="3.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="776.4" y="78.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (903 samples, 0.32%)</title><rect x="773.4" y="51.0" width="3.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="776.4" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (471 samples, 0.17%)</title><rect x="777.2" y="371.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="780.2" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (462 samples, 0.16%)</title><rect x="777.3" y="355.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="780.3" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (462 samples, 0.16%)</title><rect x="777.3" y="339.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="780.3" y="350.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (232 samples, 0.08%)</title><rect x="777.3" y="323.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="780.3" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (232 samples, 0.08%)</title><rect x="777.3" y="307.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="780.3" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (232 samples, 0.08%)</title><rect x="777.3" y="291.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="780.3" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (232 samples, 0.08%)</title><rect x="777.3" y="275.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="780.3" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (232 samples, 0.08%)</title><rect x="777.3" y="259.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="780.3" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/123226378.compare (232 samples, 0.08%)</title><rect x="777.3" y="243.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="780.3" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (232 samples, 0.08%)</title><rect x="777.3" y="227.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="780.3" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (232 samples, 0.08%)</title><rect x="777.3" y="211.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="780.3" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (232 samples, 0.08%)</title><rect x="777.3" y="195.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="780.3" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (232 samples, 0.08%)</title><rect x="777.3" y="179.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="780.3" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (232 samples, 0.08%)</title><rect x="777.3" y="163.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="780.3" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$67/1497891062.compare (232 samples, 0.08%)</title><rect x="777.3" y="147.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="780.3" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (232 samples, 0.08%)</title><rect x="777.3" y="131.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="780.3" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$66/474651931.apply (232 samples, 0.08%)</title><rect x="777.3" y="115.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="780.3" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (232 samples, 0.08%)</title><rect x="777.3" y="99.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="780.3" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (227 samples, 0.08%)</title><rect x="777.3" y="83.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="780.3" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (227 samples, 0.08%)</title><rect x="777.3" y="67.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="780.3" y="78.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (227 samples, 0.08%)</title><rect x="777.3" y="51.0" width="0.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="780.3" y="62.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (229 samples, 0.08%)</title><rect x="778.2" y="323.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="781.2" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (229 samples, 0.08%)</title><rect x="778.2" y="307.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="781.2" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (229 samples, 0.08%)</title><rect x="778.2" y="291.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="781.2" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (229 samples, 0.08%)</title><rect x="778.2" y="275.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="781.2" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (229 samples, 0.08%)</title><rect x="778.2" y="259.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="781.2" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (229 samples, 0.08%)</title><rect x="778.2" y="243.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="781.2" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (163 samples, 0.06%)</title><rect x="778.2" y="227.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="781.2" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (163 samples, 0.06%)</title><rect x="778.2" y="211.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="781.2" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (163 samples, 0.06%)</title><rect x="778.2" y="195.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="781.2" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (163 samples, 0.06%)</title><rect x="778.2" y="179.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="781.2" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/123226378.compare (66 samples, 0.02%)</title><rect x="778.9" y="227.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="781.9" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (66 samples, 0.02%)</title><rect x="778.9" y="211.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="781.9" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (66 samples, 0.02%)</title><rect x="778.9" y="195.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="781.9" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (66 samples, 0.02%)</title><rect x="778.9" y="179.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="781.9" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (66 samples, 0.02%)</title><rect x="778.9" y="163.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="781.9" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (66 samples, 0.02%)</title><rect x="778.9" y="147.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="781.9" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$67/1497891062.compare (66 samples, 0.02%)</title><rect x="778.9" y="131.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="781.9" y="142.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (66 samples, 0.02%)</title><rect x="778.9" y="115.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="781.9" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$66/474651931.apply (66 samples, 0.02%)</title><rect x="778.9" y="99.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="781.9" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (66 samples, 0.02%)</title><rect x="778.9" y="83.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="781.9" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (65 samples, 0.02%)</title><rect x="778.9" y="67.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="781.9" y="78.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (65 samples, 0.02%)</title><rect x="778.9" y="51.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="781.9" y="62.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (65 samples, 0.02%)</title><rect x="778.9" y="35.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="781.9" y="46.0"></text>
</g>
<g>
<title>[worker-2 tid=25392] (32,911 samples, 11.71%)</title><rect x="779.2" y="579.0" width="138.2" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="782.2" y="590.0">[worker-2 tid=253..</text>
</g>
<g>
<title>java/lang/Thread.run (32,911 samples, 11.71%)</title><rect x="779.2" y="563.0" width="138.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="782.2" y="574.0">java/lang/Thread...</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (32,911 samples, 11.71%)</title><rect x="779.2" y="547.0" width="138.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="782.2" y="558.0">java/util/concurr..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (32,911 samples, 11.71%)</title><rect x="779.2" y="531.0" width="138.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="782.2" y="542.0">java/util/concurr..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer$$Lambda$65/1115085888.run (32,886 samples, 11.70%)</title><rect x="779.3" y="515.0" width="138.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="782.3" y="526.0">ru/mail/polis/ser..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.lambda$executeAsync$3 (32,886 samples, 11.70%)</title><rect x="779.3" y="499.0" width="138.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="782.3" y="510.0">ru/mail/polis/ser..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer$$Lambda$81/1409716107.get (32,864 samples, 11.70%)</title><rect x="779.4" y="483.0" width="138.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="782.4" y="494.0">ru/mail/polis/ser..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.lambda$entity$0 (32,864 samples, 11.70%)</title><rect x="779.4" y="467.0" width="138.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="782.4" y="478.0">ru/mail/polis/ser..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.get (32,864 samples, 11.70%)</title><rect x="779.4" y="451.0" width="138.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="782.4" y="462.0">ru/mail/polis/ser..</text>
</g>
<g>
<title>java/lang/String.getBytes (160 samples, 0.06%)</title><rect x="779.4" y="435.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="782.4" y="446.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (160 samples, 0.06%)</title><rect x="779.4" y="419.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="782.4" y="430.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (160 samples, 0.06%)</title><rect x="779.4" y="403.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="782.4" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (160 samples, 0.06%)</title><rect x="779.4" y="387.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="782.4" y="398.0"></text>
</g>
<g>
<title>byte[] (160 samples, 0.06%)</title><rect x="779.4" y="371.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="782.4" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (32,637 samples, 11.61%)</title><rect x="780.4" y="435.0" width="137.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="783.4" y="446.0">ru/mail/polis/dao..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (2,441 samples, 0.87%)</title><rect x="780.4" y="419.0" width="10.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="783.4" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (2,441 samples, 0.87%)</title><rect x="780.4" y="403.0" width="10.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="783.4" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (2,441 samples, 0.87%)</title><rect x="780.4" y="387.0" width="10.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="783.4" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (2,441 samples, 0.87%)</title><rect x="780.4" y="371.0" width="10.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="783.4" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (2,441 samples, 0.87%)</title><rect x="780.4" y="355.0" width="10.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="783.4" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (2,241 samples, 0.80%)</title><rect x="780.4" y="339.0" width="9.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="783.4" y="350.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (1,213 samples, 0.43%)</title><rect x="780.4" y="323.0" width="5.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="783.4" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (1,213 samples, 0.43%)</title><rect x="780.4" y="307.0" width="5.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="783.4" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (1,213 samples, 0.43%)</title><rect x="780.4" y="291.0" width="5.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="783.4" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,213 samples, 0.43%)</title><rect x="780.4" y="275.0" width="5.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="783.4" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,213 samples, 0.43%)</title><rect x="780.4" y="259.0" width="5.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="783.4" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/123226378.compare (1,213 samples, 0.43%)</title><rect x="780.4" y="243.0" width="5.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="783.4" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (1,213 samples, 0.43%)</title><rect x="780.4" y="227.0" width="5.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="783.4" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (1,213 samples, 0.43%)</title><rect x="780.4" y="211.0" width="5.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="783.4" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (1,213 samples, 0.43%)</title><rect x="780.4" y="195.0" width="5.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="783.4" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (1,213 samples, 0.43%)</title><rect x="780.4" y="179.0" width="5.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="783.4" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (1,213 samples, 0.43%)</title><rect x="780.4" y="163.0" width="5.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="783.4" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$67/1497891062.compare (1,213 samples, 0.43%)</title><rect x="780.4" y="147.0" width="5.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="783.4" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (1,213 samples, 0.43%)</title><rect x="780.4" y="131.0" width="5.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="783.4" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$66/474651931.apply (1,213 samples, 0.43%)</title><rect x="780.4" y="115.0" width="5.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="783.4" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (1,213 samples, 0.43%)</title><rect x="780.4" y="99.0" width="5.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="783.4" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (1,212 samples, 0.43%)</title><rect x="780.4" y="83.0" width="5.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="783.4" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (1,212 samples, 0.43%)</title><rect x="780.4" y="67.0" width="5.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="783.4" y="78.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (1,212 samples, 0.43%)</title><rect x="780.4" y="51.0" width="5.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="783.4" y="62.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (1,026 samples, 0.37%)</title><rect x="785.5" y="323.0" width="4.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="788.5" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (1,026 samples, 0.37%)</title><rect x="785.5" y="307.0" width="4.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="788.5" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (1,026 samples, 0.37%)</title><rect x="785.5" y="291.0" width="4.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="788.5" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (1,026 samples, 0.37%)</title><rect x="785.5" y="275.0" width="4.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="788.5" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,026 samples, 0.37%)</title><rect x="785.5" y="259.0" width="4.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="788.5" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,026 samples, 0.37%)</title><rect x="785.5" y="243.0" width="4.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="788.5" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (801 samples, 0.29%)</title><rect x="785.5" y="227.0" width="3.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="788.5" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (801 samples, 0.29%)</title><rect x="785.5" y="211.0" width="3.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="788.5" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (801 samples, 0.29%)</title><rect x="785.5" y="195.0" width="3.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="788.5" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (801 samples, 0.29%)</title><rect x="785.5" y="179.0" width="3.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="788.5" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (204 samples, 0.07%)</title><rect x="785.6" y="163.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="788.6" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (107 samples, 0.04%)</title><rect x="785.6" y="147.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="788.6" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (107 samples, 0.04%)</title><rect x="785.6" y="131.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="788.6" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (107 samples, 0.04%)</title><rect x="785.6" y="115.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="788.6" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (97 samples, 0.03%)</title><rect x="786.1" y="147.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="789.1" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (97 samples, 0.03%)</title><rect x="786.1" y="131.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="789.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (214 samples, 0.08%)</title><rect x="786.5" y="163.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="789.5" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (103 samples, 0.04%)</title><rect x="786.5" y="147.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="789.5" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (103 samples, 0.04%)</title><rect x="786.5" y="131.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="789.5" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (103 samples, 0.04%)</title><rect x="786.5" y="115.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="789.5" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (111 samples, 0.04%)</title><rect x="786.9" y="147.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="789.9" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (111 samples, 0.04%)</title><rect x="786.9" y="131.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="789.9" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.timestampAt (105 samples, 0.04%)</title><rect x="787.4" y="163.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="790.4" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (105 samples, 0.04%)</title><rect x="787.4" y="147.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="790.4" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (105 samples, 0.04%)</title><rect x="787.4" y="131.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="790.4" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (105 samples, 0.04%)</title><rect x="787.4" y="115.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="790.4" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.valueAt (194 samples, 0.07%)</title><rect x="787.8" y="163.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="790.8" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (98 samples, 0.03%)</title><rect x="787.8" y="147.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="790.8" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (98 samples, 0.03%)</title><rect x="787.8" y="131.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="790.8" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (98 samples, 0.03%)</title><rect x="787.8" y="115.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="790.8" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (96 samples, 0.03%)</title><rect x="788.2" y="147.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="791.2" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (96 samples, 0.03%)</title><rect x="788.2" y="131.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="791.2" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/123226378.compare (225 samples, 0.08%)</title><rect x="788.8" y="227.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="791.8" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (225 samples, 0.08%)</title><rect x="788.8" y="211.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="791.8" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (225 samples, 0.08%)</title><rect x="788.8" y="195.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="791.8" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (225 samples, 0.08%)</title><rect x="788.8" y="179.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="791.8" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (225 samples, 0.08%)</title><rect x="788.8" y="163.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="791.8" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (225 samples, 0.08%)</title><rect x="788.8" y="147.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="791.8" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$67/1497891062.compare (225 samples, 0.08%)</title><rect x="788.8" y="131.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="791.8" y="142.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (225 samples, 0.08%)</title><rect x="788.8" y="115.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="791.8" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$66/474651931.apply (225 samples, 0.08%)</title><rect x="788.8" y="99.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="791.8" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (225 samples, 0.08%)</title><rect x="788.8" y="83.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="791.8" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (225 samples, 0.08%)</title><rect x="788.8" y="67.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="791.8" y="78.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (225 samples, 0.08%)</title><rect x="788.8" y="51.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="791.8" y="62.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (225 samples, 0.08%)</title><rect x="788.8" y="35.0" width="1.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="791.8" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$72/878358964.apply (200 samples, 0.07%)</title><rect x="789.8" y="339.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="792.8" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (200 samples, 0.07%)</title><rect x="789.8" y="323.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="792.8" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (200 samples, 0.07%)</title><rect x="789.8" y="307.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="792.8" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (200 samples, 0.07%)</title><rect x="789.8" y="291.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="792.8" y="302.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (200 samples, 0.07%)</title><rect x="789.8" y="275.0" width="0.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="792.8" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.iterator (30,107 samples, 10.71%)</title><rect x="791.0" y="419.0" width="126.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="794.0" y="430.0">ru/mail/polis/da..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.rowsIterator (30,096 samples, 10.71%)</title><rect x="791.0" y="403.0" width="126.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="794.0" y="414.0">ru/mail/polis/da..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (25,987 samples, 9.25%)</title><rect x="791.0" y="387.0" width="109.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="794.0" y="398.0">ru/mail/polis..</text>
</g>
<g>
<title>java/util/ArrayList.add (113 samples, 0.04%)</title><rect x="791.1" y="371.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="794.1" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (113 samples, 0.04%)</title><rect x="791.1" y="355.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="794.1" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (113 samples, 0.04%)</title><rect x="791.1" y="339.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="794.1" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (113 samples, 0.04%)</title><rect x="791.1" y="323.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="794.1" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (113 samples, 0.04%)</title><rect x="791.1" y="307.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="794.1" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (113 samples, 0.04%)</title><rect x="791.1" y="291.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="794.1" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.iterator (133 samples, 0.05%)</title><rect x="791.6" y="371.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="794.6" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (86 samples, 0.03%)</title><rect x="791.6" y="355.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="794.6" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.iterator (25,726 samples, 9.16%)</title><rect x="792.1" y="371.0" width="108.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="795.1" y="382.0">ru/mail/polis..</text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.SSTable$SSTableIterator (218 samples, 0.08%)</title><rect x="792.1" y="355.0" width="0.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="795.1" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.&lt;init&gt; (25,508 samples, 9.08%)</title><rect x="793.0" y="355.0" width="107.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="796.0" y="366.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.position (25,508 samples, 9.08%)</title><rect x="793.0" y="339.0" width="107.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="796.0" y="350.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (12,692 samples, 4.52%)</title><rect x="793.0" y="323.0" width="53.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="796.0" y="334.0">ru/ma..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (6,345 samples, 2.26%)</title><rect x="793.0" y="307.0" width="26.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="796.0" y="318.0">j..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (6,345 samples, 2.26%)</title><rect x="793.0" y="291.0" width="26.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="796.0" y="302.0">j..</text>
</g>
<g>
<title>java.nio.DirectByteBufferR (6,345 samples, 2.26%)</title><rect x="793.0" y="275.0" width="26.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="796.0" y="286.0">j..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (6,347 samples, 2.26%)</title><rect x="819.7" y="307.0" width="26.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="822.7" y="318.0">j..</text>
</g>
<g>
<title>java.nio.DirectByteBufferR (6,347 samples, 2.26%)</title><rect x="819.7" y="291.0" width="26.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="822.7" y="302.0">j..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (12,816 samples, 4.56%)</title><rect x="846.3" y="323.0" width="53.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="849.3" y="334.0">ru/ma..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (6,484 samples, 2.31%)</title><rect x="846.3" y="307.0" width="27.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="849.3" y="318.0">j..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (6,484 samples, 2.31%)</title><rect x="846.3" y="291.0" width="27.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="849.3" y="302.0">j..</text>
</g>
<g>
<title>java.nio.DirectByteBufferR (6,484 samples, 2.31%)</title><rect x="846.3" y="275.0" width="27.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="849.3" y="286.0">j..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (6,332 samples, 2.25%)</title><rect x="873.6" y="307.0" width="26.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="876.6" y="318.0">j..</text>
</g>
<g>
<title>java.nio.DirectByteBufferR (6,332 samples, 2.25%)</title><rect x="873.6" y="291.0" width="26.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="876.6" y="302.0">j..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.reduceIterators (4,109 samples, 1.46%)</title><rect x="900.2" y="387.0" width="17.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="903.2" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (3,655 samples, 1.30%)</title><rect x="900.2" y="371.0" width="15.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="903.2" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (3,651 samples, 1.30%)</title><rect x="900.2" y="355.0" width="15.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="903.2" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (123 samples, 0.04%)</title><rect x="900.3" y="339.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="903.3" y="350.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (123 samples, 0.04%)</title><rect x="900.3" y="323.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="903.3" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (3,490 samples, 1.24%)</title><rect x="900.9" y="339.0" width="14.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="903.9" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (3,490 samples, 1.24%)</title><rect x="900.9" y="323.0" width="14.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="903.9" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.grow (62 samples, 0.02%)</title><rect x="900.9" y="307.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="903.9" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (62 samples, 0.02%)</title><rect x="900.9" y="291.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="903.9" y="302.0"></text>
</g>
<g>
<title>java.lang.Object[] (62 samples, 0.02%)</title><rect x="900.9" y="275.0" width="0.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="903.9" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (3,428 samples, 1.22%)</title><rect x="901.1" y="307.0" width="14.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="904.1" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (3,428 samples, 1.22%)</title><rect x="901.1" y="291.0" width="14.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="904.1" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (3,428 samples, 1.22%)</title><rect x="901.1" y="275.0" width="14.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="904.1" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (3,428 samples, 1.22%)</title><rect x="901.1" y="259.0" width="14.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="904.1" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (2,479 samples, 0.88%)</title><rect x="901.1" y="243.0" width="10.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="904.1" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (2,479 samples, 0.88%)</title><rect x="901.1" y="227.0" width="10.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="904.1" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (2,479 samples, 0.88%)</title><rect x="901.1" y="211.0" width="10.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="904.1" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (2,479 samples, 0.88%)</title><rect x="901.1" y="195.0" width="10.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="904.1" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.of (145 samples, 0.05%)</title><rect x="901.1" y="179.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="904.1" y="190.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Row (145 samples, 0.05%)</title><rect x="901.1" y="163.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="904.1" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (612 samples, 0.22%)</title><rect x="901.8" y="179.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="904.8" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (323 samples, 0.11%)</title><rect x="901.8" y="163.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="904.8" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (323 samples, 0.11%)</title><rect x="901.8" y="147.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="904.8" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (323 samples, 0.11%)</title><rect x="901.8" y="131.0" width="1.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="904.8" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (289 samples, 0.10%)</title><rect x="903.1" y="163.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="906.1" y="174.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (289 samples, 0.10%)</title><rect x="903.1" y="147.0" width="1.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="906.1" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (641 samples, 0.23%)</title><rect x="904.3" y="179.0" width="2.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="907.3" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (327 samples, 0.12%)</title><rect x="904.3" y="163.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="907.3" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (327 samples, 0.12%)</title><rect x="904.3" y="147.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="907.3" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (327 samples, 0.12%)</title><rect x="904.3" y="131.0" width="1.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="907.3" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (314 samples, 0.11%)</title><rect x="905.7" y="163.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="908.7" y="174.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (314 samples, 0.11%)</title><rect x="905.7" y="147.0" width="1.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="908.7" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.timestampAt (327 samples, 0.12%)</title><rect x="907.0" y="179.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="910.0" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (327 samples, 0.12%)</title><rect x="907.0" y="163.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="910.0" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (327 samples, 0.12%)</title><rect x="907.0" y="147.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="910.0" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (327 samples, 0.12%)</title><rect x="907.0" y="131.0" width="1.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="910.0" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.valueAt (628 samples, 0.22%)</title><rect x="908.4" y="179.0" width="2.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="911.4" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (327 samples, 0.12%)</title><rect x="908.4" y="163.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="911.4" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (327 samples, 0.12%)</title><rect x="908.4" y="147.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="911.4" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (327 samples, 0.12%)</title><rect x="908.4" y="131.0" width="1.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="911.4" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (301 samples, 0.11%)</title><rect x="909.8" y="163.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="912.8" y="174.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (301 samples, 0.11%)</title><rect x="909.8" y="147.0" width="1.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="912.8" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Value.of (126 samples, 0.04%)</title><rect x="911.0" y="179.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="914.0" y="190.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Value (126 samples, 0.04%)</title><rect x="911.0" y="163.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="914.0" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/123226378.compare (949 samples, 0.34%)</title><rect x="911.6" y="243.0" width="3.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="914.6" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (949 samples, 0.34%)</title><rect x="911.6" y="227.0" width="3.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="914.6" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (949 samples, 0.34%)</title><rect x="911.6" y="211.0" width="3.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="914.6" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (949 samples, 0.34%)</title><rect x="911.6" y="195.0" width="3.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="914.6" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (949 samples, 0.34%)</title><rect x="911.6" y="179.0" width="3.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="914.6" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (949 samples, 0.34%)</title><rect x="911.6" y="163.0" width="3.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="914.6" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$67/1497891062.compare (949 samples, 0.34%)</title><rect x="911.6" y="147.0" width="3.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="914.6" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (949 samples, 0.34%)</title><rect x="911.6" y="131.0" width="3.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="914.6" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$66/474651931.apply (949 samples, 0.34%)</title><rect x="911.6" y="115.0" width="3.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="914.6" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (949 samples, 0.34%)</title><rect x="911.6" y="99.0" width="3.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="914.6" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (918 samples, 0.33%)</title><rect x="911.6" y="83.0" width="3.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="914.6" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (918 samples, 0.33%)</title><rect x="911.6" y="67.0" width="3.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="914.6" y="78.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (918 samples, 0.33%)</title><rect x="911.6" y="51.0" width="3.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="914.6" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (445 samples, 0.16%)</title><rect x="915.5" y="371.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="918.5" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (443 samples, 0.16%)</title><rect x="915.6" y="355.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="918.6" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (443 samples, 0.16%)</title><rect x="915.6" y="339.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="918.6" y="350.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (224 samples, 0.08%)</title><rect x="915.6" y="323.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="918.6" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (224 samples, 0.08%)</title><rect x="915.6" y="307.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="918.6" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (224 samples, 0.08%)</title><rect x="915.6" y="291.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="918.6" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (224 samples, 0.08%)</title><rect x="915.6" y="275.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="918.6" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (224 samples, 0.08%)</title><rect x="915.6" y="259.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="918.6" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/123226378.compare (224 samples, 0.08%)</title><rect x="915.6" y="243.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="918.6" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (224 samples, 0.08%)</title><rect x="915.6" y="227.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="918.6" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (224 samples, 0.08%)</title><rect x="915.6" y="211.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="918.6" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (224 samples, 0.08%)</title><rect x="915.6" y="195.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="918.6" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (224 samples, 0.08%)</title><rect x="915.6" y="179.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="918.6" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (224 samples, 0.08%)</title><rect x="915.6" y="163.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="918.6" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$67/1497891062.compare (224 samples, 0.08%)</title><rect x="915.6" y="147.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="918.6" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (224 samples, 0.08%)</title><rect x="915.6" y="131.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="918.6" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$66/474651931.apply (224 samples, 0.08%)</title><rect x="915.6" y="115.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="918.6" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (224 samples, 0.08%)</title><rect x="915.6" y="99.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="918.6" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (219 samples, 0.08%)</title><rect x="915.6" y="83.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="918.6" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (219 samples, 0.08%)</title><rect x="915.6" y="67.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="918.6" y="78.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (219 samples, 0.08%)</title><rect x="915.6" y="51.0" width="0.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="918.6" y="62.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (219 samples, 0.08%)</title><rect x="916.5" y="323.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="919.5" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (219 samples, 0.08%)</title><rect x="916.5" y="307.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="919.5" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (219 samples, 0.08%)</title><rect x="916.5" y="291.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="919.5" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (219 samples, 0.08%)</title><rect x="916.5" y="275.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="919.5" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (219 samples, 0.08%)</title><rect x="916.5" y="259.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="919.5" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (219 samples, 0.08%)</title><rect x="916.5" y="243.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="919.5" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (161 samples, 0.06%)</title><rect x="916.5" y="227.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="919.5" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (161 samples, 0.06%)</title><rect x="916.5" y="211.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="919.5" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (161 samples, 0.06%)</title><rect x="916.5" y="195.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="919.5" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (161 samples, 0.06%)</title><rect x="916.5" y="179.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="919.5" y="190.0"></text>
</g>
<g>
<title>[worker-3 tid=25393] (32,261 samples, 11.48%)</title><rect x="917.4" y="579.0" width="135.5" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="920.4" y="590.0">[worker-3 tid=253..</text>
</g>
<g>
<title>java/lang/Thread.run (32,261 samples, 11.48%)</title><rect x="917.4" y="563.0" width="135.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="920.4" y="574.0">java/lang/Thread...</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (32,261 samples, 11.48%)</title><rect x="917.4" y="547.0" width="135.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="920.4" y="558.0">java/util/concurr..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (32,261 samples, 11.48%)</title><rect x="917.4" y="531.0" width="135.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="920.4" y="542.0">java/util/concurr..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer$$Lambda$65/1115085888.run (32,230 samples, 11.47%)</title><rect x="917.5" y="515.0" width="135.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="920.5" y="526.0">ru/mail/polis/ser..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.lambda$executeAsync$3 (32,230 samples, 11.47%)</title><rect x="917.5" y="499.0" width="135.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="920.5" y="510.0">ru/mail/polis/ser..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer$$Lambda$81/1409716107.get (32,188 samples, 11.45%)</title><rect x="917.7" y="483.0" width="135.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="920.7" y="494.0">ru/mail/polis/ser..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.lambda$entity$0 (32,188 samples, 11.45%)</title><rect x="917.7" y="467.0" width="135.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="920.7" y="478.0">ru/mail/polis/ser..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.get (32,188 samples, 11.45%)</title><rect x="917.7" y="451.0" width="135.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="920.7" y="462.0">ru/mail/polis/ser..</text>
</g>
<g>
<title>java/lang/String.getBytes (162 samples, 0.06%)</title><rect x="917.7" y="435.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="920.7" y="446.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (162 samples, 0.06%)</title><rect x="917.7" y="419.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="920.7" y="430.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (162 samples, 0.06%)</title><rect x="917.7" y="403.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="920.7" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (162 samples, 0.06%)</title><rect x="917.7" y="387.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="920.7" y="398.0"></text>
</g>
<g>
<title>byte[] (162 samples, 0.06%)</title><rect x="917.7" y="371.0" width="0.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="920.7" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (31,959 samples, 11.37%)</title><rect x="918.7" y="435.0" width="134.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="921.7" y="446.0">ru/mail/polis/dao..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (2,350 samples, 0.84%)</title><rect x="918.7" y="419.0" width="9.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="921.7" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (2,350 samples, 0.84%)</title><rect x="918.7" y="403.0" width="9.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="921.7" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (2,350 samples, 0.84%)</title><rect x="918.7" y="387.0" width="9.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="921.7" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (2,350 samples, 0.84%)</title><rect x="918.7" y="371.0" width="9.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="921.7" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (2,350 samples, 0.84%)</title><rect x="918.7" y="355.0" width="9.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="921.7" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (2,163 samples, 0.77%)</title><rect x="918.7" y="339.0" width="9.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="921.7" y="350.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (1,097 samples, 0.39%)</title><rect x="918.7" y="323.0" width="4.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="921.7" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (1,097 samples, 0.39%)</title><rect x="918.7" y="307.0" width="4.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="921.7" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (1,097 samples, 0.39%)</title><rect x="918.7" y="291.0" width="4.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="921.7" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,097 samples, 0.39%)</title><rect x="918.7" y="275.0" width="4.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="921.7" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,097 samples, 0.39%)</title><rect x="918.7" y="259.0" width="4.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="921.7" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/123226378.compare (1,097 samples, 0.39%)</title><rect x="918.7" y="243.0" width="4.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="921.7" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (1,097 samples, 0.39%)</title><rect x="918.7" y="227.0" width="4.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="921.7" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (1,097 samples, 0.39%)</title><rect x="918.7" y="211.0" width="4.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="921.7" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (1,097 samples, 0.39%)</title><rect x="918.7" y="195.0" width="4.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="921.7" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (1,097 samples, 0.39%)</title><rect x="918.7" y="179.0" width="4.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="921.7" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (1,097 samples, 0.39%)</title><rect x="918.7" y="163.0" width="4.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="921.7" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$67/1497891062.compare (1,097 samples, 0.39%)</title><rect x="918.7" y="147.0" width="4.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="921.7" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (1,097 samples, 0.39%)</title><rect x="918.7" y="131.0" width="4.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="921.7" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$66/474651931.apply (1,097 samples, 0.39%)</title><rect x="918.7" y="115.0" width="4.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="921.7" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (1,097 samples, 0.39%)</title><rect x="918.7" y="99.0" width="4.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="921.7" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (1,094 samples, 0.39%)</title><rect x="918.7" y="83.0" width="4.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="921.7" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (1,094 samples, 0.39%)</title><rect x="918.7" y="67.0" width="4.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="921.7" y="78.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (1,094 samples, 0.39%)</title><rect x="918.7" y="51.0" width="4.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="921.7" y="62.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (1,065 samples, 0.38%)</title><rect x="923.3" y="323.0" width="4.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="926.3" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (1,065 samples, 0.38%)</title><rect x="923.3" y="307.0" width="4.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="926.3" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (1,065 samples, 0.38%)</title><rect x="923.3" y="291.0" width="4.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="926.3" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (1,065 samples, 0.38%)</title><rect x="923.3" y="275.0" width="4.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="926.3" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,065 samples, 0.38%)</title><rect x="923.3" y="259.0" width="4.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="926.3" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,065 samples, 0.38%)</title><rect x="923.3" y="243.0" width="4.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="926.3" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (824 samples, 0.29%)</title><rect x="923.3" y="227.0" width="3.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="926.3" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (824 samples, 0.29%)</title><rect x="923.3" y="211.0" width="3.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="926.3" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (824 samples, 0.29%)</title><rect x="923.3" y="195.0" width="3.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="926.3" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (824 samples, 0.29%)</title><rect x="923.3" y="179.0" width="3.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="926.3" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (215 samples, 0.08%)</title><rect x="923.4" y="163.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="926.4" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (112 samples, 0.04%)</title><rect x="923.4" y="147.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="926.4" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (112 samples, 0.04%)</title><rect x="923.4" y="131.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="926.4" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (112 samples, 0.04%)</title><rect x="923.4" y="115.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="926.4" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (103 samples, 0.04%)</title><rect x="923.9" y="147.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="926.9" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (103 samples, 0.04%)</title><rect x="923.9" y="131.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="926.9" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (201 samples, 0.07%)</title><rect x="924.3" y="163.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="927.3" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (95 samples, 0.03%)</title><rect x="924.3" y="147.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="927.3" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (95 samples, 0.03%)</title><rect x="924.3" y="131.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="927.3" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (95 samples, 0.03%)</title><rect x="924.3" y="115.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="927.3" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (106 samples, 0.04%)</title><rect x="924.7" y="147.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="927.7" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (106 samples, 0.04%)</title><rect x="924.7" y="131.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="927.7" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.timestampAt (118 samples, 0.04%)</title><rect x="925.2" y="163.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="928.2" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (118 samples, 0.04%)</title><rect x="925.2" y="147.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="928.2" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (118 samples, 0.04%)</title><rect x="925.2" y="131.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="928.2" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (118 samples, 0.04%)</title><rect x="925.2" y="115.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="928.2" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.valueAt (207 samples, 0.07%)</title><rect x="925.7" y="163.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="928.7" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (103 samples, 0.04%)</title><rect x="925.7" y="147.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="928.7" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (103 samples, 0.04%)</title><rect x="925.7" y="131.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="928.7" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (103 samples, 0.04%)</title><rect x="925.7" y="115.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="928.7" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (104 samples, 0.04%)</title><rect x="926.1" y="147.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="929.1" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (104 samples, 0.04%)</title><rect x="926.1" y="131.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="929.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/123226378.compare (241 samples, 0.09%)</title><rect x="926.8" y="227.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="929.8" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (241 samples, 0.09%)</title><rect x="926.8" y="211.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="929.8" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (241 samples, 0.09%)</title><rect x="926.8" y="195.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="929.8" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (241 samples, 0.09%)</title><rect x="926.8" y="179.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="929.8" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (241 samples, 0.09%)</title><rect x="926.8" y="163.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="929.8" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (241 samples, 0.09%)</title><rect x="926.8" y="147.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="929.8" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$67/1497891062.compare (241 samples, 0.09%)</title><rect x="926.8" y="131.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="929.8" y="142.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (241 samples, 0.09%)</title><rect x="926.8" y="115.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="929.8" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$66/474651931.apply (241 samples, 0.09%)</title><rect x="926.8" y="99.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="929.8" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (241 samples, 0.09%)</title><rect x="926.8" y="83.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="929.8" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (240 samples, 0.09%)</title><rect x="926.8" y="67.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="929.8" y="78.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (240 samples, 0.09%)</title><rect x="926.8" y="51.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="929.8" y="62.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (240 samples, 0.09%)</title><rect x="926.8" y="35.0" width="1.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="929.8" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$72/878358964.apply (187 samples, 0.07%)</title><rect x="927.8" y="339.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="930.8" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (187 samples, 0.07%)</title><rect x="927.8" y="323.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="930.8" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (185 samples, 0.07%)</title><rect x="927.8" y="307.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="930.8" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (185 samples, 0.07%)</title><rect x="927.8" y="291.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="930.8" y="302.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (185 samples, 0.07%)</title><rect x="927.8" y="275.0" width="0.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="930.8" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.iterator (29,520 samples, 10.51%)</title><rect x="928.9" y="419.0" width="124.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="931.9" y="430.0">ru/mail/polis/d..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.rowsIterator (29,517 samples, 10.50%)</title><rect x="928.9" y="403.0" width="124.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="931.9" y="414.0">ru/mail/polis/d..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (25,477 samples, 9.07%)</title><rect x="928.9" y="387.0" width="107.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="931.9" y="398.0">ru/mail/polis..</text>
</g>
<g>
<title>java/util/ArrayList.add (128 samples, 0.05%)</title><rect x="929.0" y="371.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="932.0" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (128 samples, 0.05%)</title><rect x="929.0" y="355.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="932.0" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (128 samples, 0.05%)</title><rect x="929.0" y="339.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="932.0" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (128 samples, 0.05%)</title><rect x="929.0" y="323.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="932.0" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (128 samples, 0.05%)</title><rect x="929.0" y="307.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="932.0" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (128 samples, 0.05%)</title><rect x="929.0" y="291.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="932.0" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.iterator (148 samples, 0.05%)</title><rect x="929.6" y="371.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="932.6" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (90 samples, 0.03%)</title><rect x="929.6" y="355.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="932.6" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.iterator (25,179 samples, 8.96%)</title><rect x="930.2" y="371.0" width="105.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="933.2" y="382.0">ru/mail/polis..</text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.SSTable$SSTableIterator (206 samples, 0.07%)</title><rect x="930.2" y="355.0" width="0.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="933.2" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.&lt;init&gt; (24,973 samples, 8.89%)</title><rect x="931.1" y="355.0" width="104.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="934.1" y="366.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.position (24,973 samples, 8.89%)</title><rect x="931.1" y="339.0" width="104.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="934.1" y="350.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (12,367 samples, 4.40%)</title><rect x="931.1" y="323.0" width="51.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="934.1" y="334.0">ru/ma..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (6,092 samples, 2.17%)</title><rect x="931.1" y="307.0" width="25.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="934.1" y="318.0">j..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (6,092 samples, 2.17%)</title><rect x="931.1" y="291.0" width="25.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="934.1" y="302.0">j..</text>
</g>
<g>
<title>java.nio.DirectByteBufferR (6,092 samples, 2.17%)</title><rect x="931.1" y="275.0" width="25.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="934.1" y="286.0">j..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (6,275 samples, 2.23%)</title><rect x="956.6" y="307.0" width="26.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="959.6" y="318.0">j..</text>
</g>
<g>
<title>java.nio.DirectByteBufferR (6,275 samples, 2.23%)</title><rect x="956.6" y="291.0" width="26.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="959.6" y="302.0">j..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (12,606 samples, 4.49%)</title><rect x="983.0" y="323.0" width="52.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="986.0" y="334.0">ru/ma..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (6,309 samples, 2.25%)</title><rect x="983.0" y="307.0" width="26.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="986.0" y="318.0">j..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (6,309 samples, 2.25%)</title><rect x="983.0" y="291.0" width="26.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="986.0" y="302.0">j..</text>
</g>
<g>
<title>java.nio.DirectByteBufferR (6,309 samples, 2.25%)</title><rect x="983.0" y="275.0" width="26.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="986.0" y="286.0">j..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (6,297 samples, 2.24%)</title><rect x="1009.5" y="307.0" width="26.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1012.5" y="318.0">j..</text>
</g>
<g>
<title>java.nio.DirectByteBufferR (6,297 samples, 2.24%)</title><rect x="1009.5" y="291.0" width="26.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1012.5" y="302.0">j..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.reduceIterators (4,040 samples, 1.44%)</title><rect x="1035.9" y="387.0" width="17.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1038.9" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (3,568 samples, 1.27%)</title><rect x="1036.0" y="371.0" width="15.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1039.0" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (3,563 samples, 1.27%)</title><rect x="1036.0" y="355.0" width="15.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1039.0" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (120 samples, 0.04%)</title><rect x="1036.1" y="339.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1039.1" y="350.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (120 samples, 0.04%)</title><rect x="1036.1" y="323.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1039.1" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (3,415 samples, 1.22%)</title><rect x="1036.6" y="339.0" width="14.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1039.6" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (3,415 samples, 1.22%)</title><rect x="1036.6" y="323.0" width="14.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1039.6" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.grow (64 samples, 0.02%)</title><rect x="1036.6" y="307.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1039.6" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (64 samples, 0.02%)</title><rect x="1036.6" y="291.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1039.6" y="302.0"></text>
</g>
<g>
<title>java.lang.Object[] (64 samples, 0.02%)</title><rect x="1036.6" y="275.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1039.6" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (3,351 samples, 1.19%)</title><rect x="1036.9" y="307.0" width="14.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1039.9" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (3,351 samples, 1.19%)</title><rect x="1036.9" y="291.0" width="14.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1039.9" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (3,351 samples, 1.19%)</title><rect x="1036.9" y="275.0" width="14.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1039.9" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (3,351 samples, 1.19%)</title><rect x="1036.9" y="259.0" width="14.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1039.9" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (2,418 samples, 0.86%)</title><rect x="1036.9" y="243.0" width="10.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1039.9" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (2,418 samples, 0.86%)</title><rect x="1036.9" y="227.0" width="10.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1039.9" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (2,418 samples, 0.86%)</title><rect x="1036.9" y="211.0" width="10.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1039.9" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (2,418 samples, 0.86%)</title><rect x="1036.9" y="195.0" width="10.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1039.9" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.of (172 samples, 0.06%)</title><rect x="1036.9" y="179.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1039.9" y="190.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Row (172 samples, 0.06%)</title><rect x="1036.9" y="163.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1039.9" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (573 samples, 0.20%)</title><rect x="1037.6" y="179.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1040.6" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (290 samples, 0.10%)</title><rect x="1037.6" y="163.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1040.6" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (290 samples, 0.10%)</title><rect x="1037.6" y="147.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1040.6" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (290 samples, 0.10%)</title><rect x="1037.6" y="131.0" width="1.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1040.6" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (283 samples, 0.10%)</title><rect x="1038.8" y="163.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1041.8" y="174.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (283 samples, 0.10%)</title><rect x="1038.8" y="147.0" width="1.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1041.8" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (617 samples, 0.22%)</title><rect x="1040.0" y="179.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1043.0" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (306 samples, 0.11%)</title><rect x="1040.0" y="163.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1043.0" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (306 samples, 0.11%)</title><rect x="1040.0" y="147.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1043.0" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (306 samples, 0.11%)</title><rect x="1040.0" y="131.0" width="1.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1043.0" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (311 samples, 0.11%)</title><rect x="1041.3" y="163.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1044.3" y="174.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (311 samples, 0.11%)</title><rect x="1041.3" y="147.0" width="1.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1044.3" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.timestampAt (329 samples, 0.12%)</title><rect x="1042.6" y="179.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1045.6" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (329 samples, 0.12%)</title><rect x="1042.6" y="163.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1045.6" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (329 samples, 0.12%)</title><rect x="1042.6" y="147.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1045.6" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (329 samples, 0.12%)</title><rect x="1042.6" y="131.0" width="1.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1045.6" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.valueAt (602 samples, 0.21%)</title><rect x="1044.0" y="179.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1047.0" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (286 samples, 0.10%)</title><rect x="1044.0" y="163.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1047.0" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (286 samples, 0.10%)</title><rect x="1044.0" y="147.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1047.0" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (286 samples, 0.10%)</title><rect x="1044.0" y="131.0" width="1.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1047.0" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (316 samples, 0.11%)</title><rect x="1045.2" y="163.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1048.2" y="174.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (316 samples, 0.11%)</title><rect x="1045.2" y="147.0" width="1.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1048.2" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Value.of (125 samples, 0.04%)</title><rect x="1046.5" y="179.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1049.5" y="190.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Value (125 samples, 0.04%)</title><rect x="1046.5" y="163.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1049.5" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/123226378.compare (933 samples, 0.33%)</title><rect x="1047.0" y="243.0" width="4.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1050.0" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (933 samples, 0.33%)</title><rect x="1047.0" y="227.0" width="4.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1050.0" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (933 samples, 0.33%)</title><rect x="1047.0" y="211.0" width="4.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1050.0" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (933 samples, 0.33%)</title><rect x="1047.0" y="195.0" width="4.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1050.0" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (933 samples, 0.33%)</title><rect x="1047.0" y="179.0" width="4.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1050.0" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (933 samples, 0.33%)</title><rect x="1047.0" y="163.0" width="4.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1050.0" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$67/1497891062.compare (933 samples, 0.33%)</title><rect x="1047.0" y="147.0" width="4.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1050.0" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (933 samples, 0.33%)</title><rect x="1047.0" y="131.0" width="4.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1050.0" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$66/474651931.apply (933 samples, 0.33%)</title><rect x="1047.0" y="115.0" width="4.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1050.0" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (933 samples, 0.33%)</title><rect x="1047.0" y="99.0" width="4.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1050.0" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (912 samples, 0.32%)</title><rect x="1047.0" y="83.0" width="3.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1050.0" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (912 samples, 0.32%)</title><rect x="1047.0" y="67.0" width="3.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1050.0" y="78.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (912 samples, 0.32%)</title><rect x="1047.0" y="51.0" width="3.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1050.0" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (457 samples, 0.16%)</title><rect x="1051.0" y="371.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1054.0" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (452 samples, 0.16%)</title><rect x="1051.0" y="355.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1054.0" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (452 samples, 0.16%)</title><rect x="1051.0" y="339.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1054.0" y="350.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (249 samples, 0.09%)</title><rect x="1051.0" y="323.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1054.0" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (249 samples, 0.09%)</title><rect x="1051.0" y="307.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1054.0" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (249 samples, 0.09%)</title><rect x="1051.0" y="291.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1054.0" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (249 samples, 0.09%)</title><rect x="1051.0" y="275.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1054.0" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (249 samples, 0.09%)</title><rect x="1051.0" y="259.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1054.0" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/123226378.compare (249 samples, 0.09%)</title><rect x="1051.0" y="243.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1054.0" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (249 samples, 0.09%)</title><rect x="1051.0" y="227.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1054.0" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (249 samples, 0.09%)</title><rect x="1051.0" y="211.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1054.0" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (249 samples, 0.09%)</title><rect x="1051.0" y="195.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1054.0" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (249 samples, 0.09%)</title><rect x="1051.0" y="179.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1054.0" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (249 samples, 0.09%)</title><rect x="1051.0" y="163.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1054.0" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$67/1497891062.compare (249 samples, 0.09%)</title><rect x="1051.0" y="147.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1054.0" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (249 samples, 0.09%)</title><rect x="1051.0" y="131.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1054.0" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$66/474651931.apply (249 samples, 0.09%)</title><rect x="1051.0" y="115.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1054.0" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (249 samples, 0.09%)</title><rect x="1051.0" y="99.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1054.0" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (246 samples, 0.09%)</title><rect x="1051.0" y="83.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1054.0" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (246 samples, 0.09%)</title><rect x="1051.0" y="67.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1054.0" y="78.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (246 samples, 0.09%)</title><rect x="1051.0" y="51.0" width="1.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1054.0" y="62.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (202 samples, 0.07%)</title><rect x="1052.0" y="323.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1055.0" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (202 samples, 0.07%)</title><rect x="1052.0" y="307.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1055.0" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (202 samples, 0.07%)</title><rect x="1052.0" y="291.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1055.0" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (202 samples, 0.07%)</title><rect x="1052.0" y="275.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1055.0" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (202 samples, 0.07%)</title><rect x="1052.0" y="259.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1055.0" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (202 samples, 0.07%)</title><rect x="1052.0" y="243.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1055.0" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (147 samples, 0.05%)</title><rect x="1052.0" y="227.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1055.0" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (147 samples, 0.05%)</title><rect x="1052.0" y="211.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1055.0" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (147 samples, 0.05%)</title><rect x="1052.0" y="195.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1055.0" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (147 samples, 0.05%)</title><rect x="1052.0" y="179.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1055.0" y="190.0"></text>
</g>
<g>
<title>[worker-4 tid=25396] (32,653 samples, 11.62%)</title><rect x="1052.9" y="579.0" width="137.1" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="1055.9" y="590.0">[worker-4 tid=253..</text>
</g>
<g>
<title>java/lang/Thread.run (32,653 samples, 11.62%)</title><rect x="1052.9" y="563.0" width="137.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1055.9" y="574.0">java/lang/Thread...</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (32,653 samples, 11.62%)</title><rect x="1052.9" y="547.0" width="137.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1055.9" y="558.0">java/util/concurr..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (32,653 samples, 11.62%)</title><rect x="1052.9" y="531.0" width="137.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1055.9" y="542.0">java/util/concurr..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer$$Lambda$65/1115085888.run (32,631 samples, 11.61%)</title><rect x="1053.0" y="515.0" width="137.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1056.0" y="526.0">ru/mail/polis/ser..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.lambda$executeAsync$3 (32,631 samples, 11.61%)</title><rect x="1053.0" y="499.0" width="137.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1056.0" y="510.0">ru/mail/polis/ser..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer$$Lambda$81/1409716107.get (32,595 samples, 11.60%)</title><rect x="1053.1" y="483.0" width="136.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1056.1" y="494.0">ru/mail/polis/ser..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.lambda$entity$0 (32,595 samples, 11.60%)</title><rect x="1053.1" y="467.0" width="136.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1056.1" y="478.0">ru/mail/polis/ser..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.get (32,595 samples, 11.60%)</title><rect x="1053.1" y="451.0" width="136.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1056.1" y="462.0">ru/mail/polis/ser..</text>
</g>
<g>
<title>java/lang/String.getBytes (165 samples, 0.06%)</title><rect x="1053.1" y="435.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1056.1" y="446.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (165 samples, 0.06%)</title><rect x="1053.1" y="419.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1056.1" y="430.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (165 samples, 0.06%)</title><rect x="1053.1" y="403.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1056.1" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (165 samples, 0.06%)</title><rect x="1053.1" y="387.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1056.1" y="398.0"></text>
</g>
<g>
<title>byte[] (165 samples, 0.06%)</title><rect x="1053.1" y="371.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1056.1" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (32,348 samples, 11.51%)</title><rect x="1054.2" y="435.0" width="135.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1057.2" y="446.0">ru/mail/polis/dao..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (2,313 samples, 0.82%)</title><rect x="1054.2" y="419.0" width="9.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1057.2" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (2,313 samples, 0.82%)</title><rect x="1054.2" y="403.0" width="9.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1057.2" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (2,313 samples, 0.82%)</title><rect x="1054.2" y="387.0" width="9.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1057.2" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (2,313 samples, 0.82%)</title><rect x="1054.2" y="371.0" width="9.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1057.2" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (2,313 samples, 0.82%)</title><rect x="1054.2" y="355.0" width="9.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1057.2" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (2,093 samples, 0.74%)</title><rect x="1054.2" y="339.0" width="8.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1057.2" y="350.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (1,125 samples, 0.40%)</title><rect x="1054.2" y="323.0" width="4.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1057.2" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (1,125 samples, 0.40%)</title><rect x="1054.2" y="307.0" width="4.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1057.2" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (1,125 samples, 0.40%)</title><rect x="1054.2" y="291.0" width="4.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1057.2" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,125 samples, 0.40%)</title><rect x="1054.2" y="275.0" width="4.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1057.2" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,125 samples, 0.40%)</title><rect x="1054.2" y="259.0" width="4.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1057.2" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/123226378.compare (1,125 samples, 0.40%)</title><rect x="1054.2" y="243.0" width="4.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1057.2" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (1,125 samples, 0.40%)</title><rect x="1054.2" y="227.0" width="4.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1057.2" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (1,125 samples, 0.40%)</title><rect x="1054.2" y="211.0" width="4.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1057.2" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (1,125 samples, 0.40%)</title><rect x="1054.2" y="195.0" width="4.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1057.2" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (1,125 samples, 0.40%)</title><rect x="1054.2" y="179.0" width="4.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1057.2" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (1,125 samples, 0.40%)</title><rect x="1054.2" y="163.0" width="4.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1057.2" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$67/1497891062.compare (1,125 samples, 0.40%)</title><rect x="1054.2" y="147.0" width="4.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1057.2" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (1,125 samples, 0.40%)</title><rect x="1054.2" y="131.0" width="4.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1057.2" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$66/474651931.apply (1,125 samples, 0.40%)</title><rect x="1054.2" y="115.0" width="4.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1057.2" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (1,125 samples, 0.40%)</title><rect x="1054.2" y="99.0" width="4.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1057.2" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (1,124 samples, 0.40%)</title><rect x="1054.2" y="83.0" width="4.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1057.2" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (1,124 samples, 0.40%)</title><rect x="1054.2" y="67.0" width="4.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1057.2" y="78.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (1,124 samples, 0.40%)</title><rect x="1054.2" y="51.0" width="4.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1057.2" y="62.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (968 samples, 0.34%)</title><rect x="1058.9" y="323.0" width="4.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1061.9" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (968 samples, 0.34%)</title><rect x="1058.9" y="307.0" width="4.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1061.9" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (968 samples, 0.34%)</title><rect x="1058.9" y="291.0" width="4.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1061.9" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (968 samples, 0.34%)</title><rect x="1058.9" y="275.0" width="4.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1061.9" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (968 samples, 0.34%)</title><rect x="1058.9" y="259.0" width="4.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1061.9" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (968 samples, 0.34%)</title><rect x="1058.9" y="243.0" width="4.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1061.9" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (757 samples, 0.27%)</title><rect x="1058.9" y="227.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1061.9" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (757 samples, 0.27%)</title><rect x="1058.9" y="211.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1061.9" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (757 samples, 0.27%)</title><rect x="1058.9" y="195.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1061.9" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (757 samples, 0.27%)</title><rect x="1058.9" y="179.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1061.9" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (197 samples, 0.07%)</title><rect x="1059.0" y="163.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1062.0" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (111 samples, 0.04%)</title><rect x="1059.0" y="147.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1062.0" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (111 samples, 0.04%)</title><rect x="1059.0" y="131.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1062.0" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (111 samples, 0.04%)</title><rect x="1059.0" y="115.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1062.0" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (86 samples, 0.03%)</title><rect x="1059.5" y="147.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1062.5" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (86 samples, 0.03%)</title><rect x="1059.5" y="131.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1062.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (205 samples, 0.07%)</title><rect x="1059.9" y="163.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1062.9" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (101 samples, 0.04%)</title><rect x="1059.9" y="147.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1062.9" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (101 samples, 0.04%)</title><rect x="1059.9" y="131.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1062.9" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (101 samples, 0.04%)</title><rect x="1059.9" y="115.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1062.9" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (104 samples, 0.04%)</title><rect x="1060.3" y="147.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1063.3" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (104 samples, 0.04%)</title><rect x="1060.3" y="131.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1063.3" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.timestampAt (82 samples, 0.03%)</title><rect x="1060.7" y="163.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1063.7" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (82 samples, 0.03%)</title><rect x="1060.7" y="147.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1063.7" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (82 samples, 0.03%)</title><rect x="1060.7" y="131.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1063.7" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (82 samples, 0.03%)</title><rect x="1060.7" y="115.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1063.7" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.valueAt (194 samples, 0.07%)</title><rect x="1061.1" y="163.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1064.1" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (105 samples, 0.04%)</title><rect x="1061.1" y="147.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1064.1" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (105 samples, 0.04%)</title><rect x="1061.1" y="131.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1064.1" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (105 samples, 0.04%)</title><rect x="1061.1" y="115.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1064.1" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (89 samples, 0.03%)</title><rect x="1061.5" y="147.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1064.5" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (89 samples, 0.03%)</title><rect x="1061.5" y="131.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1064.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/123226378.compare (211 samples, 0.08%)</title><rect x="1062.1" y="227.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1065.1" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (211 samples, 0.08%)</title><rect x="1062.1" y="211.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1065.1" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (211 samples, 0.08%)</title><rect x="1062.1" y="195.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1065.1" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (211 samples, 0.08%)</title><rect x="1062.1" y="179.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1065.1" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (211 samples, 0.08%)</title><rect x="1062.1" y="163.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1065.1" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (211 samples, 0.08%)</title><rect x="1062.1" y="147.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1065.1" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$67/1497891062.compare (211 samples, 0.08%)</title><rect x="1062.1" y="131.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1065.1" y="142.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (211 samples, 0.08%)</title><rect x="1062.1" y="115.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1065.1" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$66/474651931.apply (211 samples, 0.08%)</title><rect x="1062.1" y="99.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1065.1" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (211 samples, 0.08%)</title><rect x="1062.1" y="83.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1065.1" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (211 samples, 0.08%)</title><rect x="1062.1" y="67.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1065.1" y="78.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (211 samples, 0.08%)</title><rect x="1062.1" y="51.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1065.1" y="62.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (211 samples, 0.08%)</title><rect x="1062.1" y="35.0" width="0.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1065.1" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$72/878358964.apply (220 samples, 0.08%)</title><rect x="1063.0" y="339.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1066.0" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (220 samples, 0.08%)</title><rect x="1063.0" y="323.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1066.0" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (216 samples, 0.08%)</title><rect x="1063.0" y="307.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1066.0" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (216 samples, 0.08%)</title><rect x="1063.0" y="291.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1066.0" y="302.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (216 samples, 0.08%)</title><rect x="1063.0" y="275.0" width="0.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1066.0" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.iterator (29,955 samples, 10.66%)</title><rect x="1064.2" y="419.0" width="125.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1067.2" y="430.0">ru/mail/polis/d..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.rowsIterator (29,949 samples, 10.66%)</title><rect x="1064.2" y="403.0" width="125.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1067.2" y="414.0">ru/mail/polis/d..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (25,838 samples, 9.19%)</title><rect x="1064.2" y="387.0" width="108.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1067.2" y="398.0">ru/mail/polis..</text>
</g>
<g>
<title>java/util/ArrayList.add (109 samples, 0.04%)</title><rect x="1064.3" y="371.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1067.3" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (109 samples, 0.04%)</title><rect x="1064.3" y="355.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1067.3" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (109 samples, 0.04%)</title><rect x="1064.3" y="339.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1067.3" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (109 samples, 0.04%)</title><rect x="1064.3" y="323.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1067.3" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (109 samples, 0.04%)</title><rect x="1064.3" y="307.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1067.3" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (109 samples, 0.04%)</title><rect x="1064.3" y="291.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1067.3" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.iterator (123 samples, 0.04%)</title><rect x="1064.8" y="371.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1067.8" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (81 samples, 0.03%)</title><rect x="1064.8" y="355.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1067.8" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.iterator (25,587 samples, 9.11%)</title><rect x="1065.3" y="371.0" width="107.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1068.3" y="382.0">ru/mail/polis..</text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.SSTable$SSTableIterator (197 samples, 0.07%)</title><rect x="1065.3" y="355.0" width="0.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1068.3" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.&lt;init&gt; (25,390 samples, 9.04%)</title><rect x="1066.1" y="355.0" width="106.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1069.1" y="366.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.position (25,390 samples, 9.04%)</title><rect x="1066.1" y="339.0" width="106.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1069.1" y="350.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (12,723 samples, 4.53%)</title><rect x="1066.1" y="323.0" width="53.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1069.1" y="334.0">ru/ma..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (6,387 samples, 2.27%)</title><rect x="1066.1" y="307.0" width="26.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1069.1" y="318.0">j..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (6,387 samples, 2.27%)</title><rect x="1066.1" y="291.0" width="26.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1069.1" y="302.0">j..</text>
</g>
<g>
<title>java.nio.DirectByteBufferR (6,387 samples, 2.27%)</title><rect x="1066.1" y="275.0" width="26.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1069.1" y="286.0">j..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (6,336 samples, 2.25%)</title><rect x="1092.9" y="307.0" width="26.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1095.9" y="318.0">j..</text>
</g>
<g>
<title>java.nio.DirectByteBufferR (6,336 samples, 2.25%)</title><rect x="1092.9" y="291.0" width="26.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1095.9" y="302.0">j..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (12,667 samples, 4.51%)</title><rect x="1119.5" y="323.0" width="53.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1122.5" y="334.0">ru/ma..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (6,290 samples, 2.24%)</title><rect x="1119.5" y="307.0" width="26.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1122.5" y="318.0">j..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (6,290 samples, 2.24%)</title><rect x="1119.5" y="291.0" width="26.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1122.5" y="302.0">j..</text>
</g>
<g>
<title>java.nio.DirectByteBufferR (6,290 samples, 2.24%)</title><rect x="1119.5" y="275.0" width="26.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1122.5" y="286.0">j..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (6,377 samples, 2.27%)</title><rect x="1146.0" y="307.0" width="26.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1149.0" y="318.0">j..</text>
</g>
<g>
<title>java.nio.DirectByteBufferR (6,377 samples, 2.27%)</title><rect x="1146.0" y="291.0" width="26.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1149.0" y="302.0">j..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.reduceIterators (4,111 samples, 1.46%)</title><rect x="1172.7" y="387.0" width="17.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1175.7" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (3,651 samples, 1.30%)</title><rect x="1172.8" y="371.0" width="15.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1175.8" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (3,648 samples, 1.30%)</title><rect x="1172.8" y="355.0" width="15.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1175.8" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (102 samples, 0.04%)</title><rect x="1172.9" y="339.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1175.9" y="350.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (102 samples, 0.04%)</title><rect x="1172.9" y="323.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1175.9" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (3,507 samples, 1.25%)</title><rect x="1173.4" y="339.0" width="14.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1176.4" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (3,507 samples, 1.25%)</title><rect x="1173.4" y="323.0" width="14.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1176.4" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.grow (64 samples, 0.02%)</title><rect x="1173.4" y="307.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1176.4" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (64 samples, 0.02%)</title><rect x="1173.4" y="291.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1176.4" y="302.0"></text>
</g>
<g>
<title>java.lang.Object[] (64 samples, 0.02%)</title><rect x="1173.4" y="275.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1176.4" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (3,443 samples, 1.23%)</title><rect x="1173.7" y="307.0" width="14.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1176.7" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (3,443 samples, 1.23%)</title><rect x="1173.7" y="291.0" width="14.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1176.7" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (3,443 samples, 1.23%)</title><rect x="1173.7" y="275.0" width="14.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1176.7" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (3,443 samples, 1.23%)</title><rect x="1173.7" y="259.0" width="14.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1176.7" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (2,441 samples, 0.87%)</title><rect x="1173.7" y="243.0" width="10.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1176.7" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (2,441 samples, 0.87%)</title><rect x="1173.7" y="227.0" width="10.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1176.7" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (2,441 samples, 0.87%)</title><rect x="1173.7" y="211.0" width="10.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1176.7" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (2,441 samples, 0.87%)</title><rect x="1173.7" y="195.0" width="10.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1176.7" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.of (146 samples, 0.05%)</title><rect x="1173.7" y="179.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1176.7" y="190.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Row (146 samples, 0.05%)</title><rect x="1173.7" y="163.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1176.7" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (621 samples, 0.22%)</title><rect x="1174.3" y="179.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1177.3" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (325 samples, 0.12%)</title><rect x="1174.3" y="163.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1177.3" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (325 samples, 0.12%)</title><rect x="1174.3" y="147.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1177.3" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (325 samples, 0.12%)</title><rect x="1174.3" y="131.0" width="1.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1177.3" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (296 samples, 0.11%)</title><rect x="1175.6" y="163.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1178.6" y="174.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (296 samples, 0.11%)</title><rect x="1175.6" y="147.0" width="1.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1178.6" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (654 samples, 0.23%)</title><rect x="1176.9" y="179.0" width="2.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1179.9" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (336 samples, 0.12%)</title><rect x="1176.9" y="163.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1179.9" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (336 samples, 0.12%)</title><rect x="1176.9" y="147.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1179.9" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (336 samples, 0.12%)</title><rect x="1176.9" y="131.0" width="1.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1179.9" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (318 samples, 0.11%)</title><rect x="1178.3" y="163.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1181.3" y="174.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (318 samples, 0.11%)</title><rect x="1178.3" y="147.0" width="1.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1181.3" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.timestampAt (296 samples, 0.11%)</title><rect x="1179.6" y="179.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1182.6" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (296 samples, 0.11%)</title><rect x="1179.6" y="163.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1182.6" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (296 samples, 0.11%)</title><rect x="1179.6" y="147.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1182.6" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (296 samples, 0.11%)</title><rect x="1179.6" y="131.0" width="1.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1182.6" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.valueAt (606 samples, 0.22%)</title><rect x="1180.9" y="179.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1183.9" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (289 samples, 0.10%)</title><rect x="1180.9" y="163.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1183.9" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (289 samples, 0.10%)</title><rect x="1180.9" y="147.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1183.9" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (289 samples, 0.10%)</title><rect x="1180.9" y="131.0" width="1.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1183.9" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (317 samples, 0.11%)</title><rect x="1182.1" y="163.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1185.1" y="174.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (317 samples, 0.11%)</title><rect x="1182.1" y="147.0" width="1.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1185.1" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Value.of (118 samples, 0.04%)</title><rect x="1183.4" y="179.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1186.4" y="190.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Value (118 samples, 0.04%)</title><rect x="1183.4" y="163.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1186.4" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/123226378.compare (1,002 samples, 0.36%)</title><rect x="1183.9" y="243.0" width="4.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1186.9" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (1,002 samples, 0.36%)</title><rect x="1183.9" y="227.0" width="4.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1186.9" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (1,002 samples, 0.36%)</title><rect x="1183.9" y="211.0" width="4.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1186.9" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (1,002 samples, 0.36%)</title><rect x="1183.9" y="195.0" width="4.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1186.9" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (1,002 samples, 0.36%)</title><rect x="1183.9" y="179.0" width="4.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1186.9" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (1,002 samples, 0.36%)</title><rect x="1183.9" y="163.0" width="4.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1186.9" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$67/1497891062.compare (1,002 samples, 0.36%)</title><rect x="1183.9" y="147.0" width="4.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1186.9" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (1,002 samples, 0.36%)</title><rect x="1183.9" y="131.0" width="4.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1186.9" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$66/474651931.apply (1,002 samples, 0.36%)</title><rect x="1183.9" y="115.0" width="4.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1186.9" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (1,002 samples, 0.36%)</title><rect x="1183.9" y="99.0" width="4.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1186.9" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (977 samples, 0.35%)</title><rect x="1183.9" y="83.0" width="4.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1186.9" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (977 samples, 0.35%)</title><rect x="1183.9" y="67.0" width="4.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1186.9" y="78.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (977 samples, 0.35%)</title><rect x="1183.9" y="51.0" width="4.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1186.9" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (449 samples, 0.16%)</title><rect x="1188.1" y="371.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1191.1" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (446 samples, 0.16%)</title><rect x="1188.1" y="355.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1191.1" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (446 samples, 0.16%)</title><rect x="1188.1" y="339.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1191.1" y="350.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (239 samples, 0.09%)</title><rect x="1188.1" y="323.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1191.1" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (239 samples, 0.09%)</title><rect x="1188.1" y="307.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1191.1" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (239 samples, 0.09%)</title><rect x="1188.1" y="291.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1191.1" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (239 samples, 0.09%)</title><rect x="1188.1" y="275.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1191.1" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (239 samples, 0.09%)</title><rect x="1188.1" y="259.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1191.1" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/123226378.compare (239 samples, 0.09%)</title><rect x="1188.1" y="243.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1191.1" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (239 samples, 0.09%)</title><rect x="1188.1" y="227.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1191.1" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (239 samples, 0.09%)</title><rect x="1188.1" y="211.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1191.1" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (239 samples, 0.09%)</title><rect x="1188.1" y="195.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1191.1" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (239 samples, 0.09%)</title><rect x="1188.1" y="179.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1191.1" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (239 samples, 0.09%)</title><rect x="1188.1" y="163.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1191.1" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$67/1497891062.compare (239 samples, 0.09%)</title><rect x="1188.1" y="147.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1191.1" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (239 samples, 0.09%)</title><rect x="1188.1" y="131.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1191.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$66/474651931.apply (239 samples, 0.09%)</title><rect x="1188.1" y="115.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1191.1" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (239 samples, 0.09%)</title><rect x="1188.1" y="99.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1191.1" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (233 samples, 0.08%)</title><rect x="1188.1" y="83.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1191.1" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (233 samples, 0.08%)</title><rect x="1188.1" y="67.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1191.1" y="78.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (233 samples, 0.08%)</title><rect x="1188.1" y="51.0" width="1.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1191.1" y="62.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (207 samples, 0.07%)</title><rect x="1189.1" y="323.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1192.1" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (207 samples, 0.07%)</title><rect x="1189.1" y="307.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1192.1" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (207 samples, 0.07%)</title><rect x="1189.1" y="291.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1192.1" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (207 samples, 0.07%)</title><rect x="1189.1" y="275.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1192.1" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (207 samples, 0.07%)</title><rect x="1189.1" y="259.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1192.1" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (207 samples, 0.07%)</title><rect x="1189.1" y="243.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1192.1" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (149 samples, 0.05%)</title><rect x="1189.1" y="227.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1192.1" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (149 samples, 0.05%)</title><rect x="1189.1" y="211.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1192.1" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (149 samples, 0.05%)</title><rect x="1189.1" y="195.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1192.1" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (149 samples, 0.05%)</title><rect x="1189.1" y="179.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1192.1" y="190.0"></text>
</g>
</g>
</svg>
