<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="326" onload="init(evt)" viewBox="0 0 1200 326" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="309"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="309"> </text>
<g id="frames">
<g>
<title>all (10,018 samples, 100.00%)</title><rect x="10.0" y="275.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="286.0">all</text>
</g>
<g>
<title>[NIO Acceptor 0.0.0.0:8080 tid=21461] (10 samples, 0.10%)</title><rect x="10.1" y="259.0" width="1.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="13.1" y="270.0"></text>
</g>
<g>
<title>one/nio/server/AcceptorThread.run (10 samples, 0.10%)</title><rect x="10.1" y="243.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.1" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.createSession (10 samples, 0.10%)</title><rect x="10.1" y="227.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.1" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.createSession (10 samples, 0.10%)</title><rect x="10.1" y="211.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.1" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/StorageSession.&lt;init&gt; (7 samples, 0.07%)</title><rect x="10.5" y="195.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.5" y="206.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.&lt;init&gt; (7 samples, 0.07%)</title><rect x="10.5" y="179.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.5" y="190.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.07%)</title><rect x="10.5" y="163.0" width="0.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="13.5" y="174.0"></text>
</g>
<g>
<title>[NIO Selector #0 tid=21457] (1,123 samples, 11.21%)</title><rect x="11.3" y="259.0" width="132.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="14.3" y="270.0">[NIO Selector #0..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,123 samples, 11.21%)</title><rect x="11.3" y="243.0" width="132.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="14.3" y="254.0">one/nio/server/S..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (8 samples, 0.08%)</title><rect x="11.3" y="227.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="14.3" y="238.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (7 samples, 0.07%)</title><rect x="11.4" y="211.0" width="0.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="14.4" y="222.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (1,115 samples, 11.13%)</title><rect x="12.2" y="227.0" width="131.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="15.2" y="238.0">one/nio/net/Sess..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,115 samples, 11.13%)</title><rect x="12.2" y="211.0" width="131.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="15.2" y="222.0">one/nio/http/Htt..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,115 samples, 11.13%)</title><rect x="12.2" y="195.0" width="131.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="15.2" y="206.0">one/nio/http/Htt..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (306 samples, 3.05%)</title><rect x="12.2" y="179.0" width="36.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="15.2" y="190.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (306 samples, 3.05%)</title><rect x="12.2" y="163.0" width="36.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="15.2" y="174.0">one..</text>
</g>
<g>
<title>RequestHandler0_status.handleRequest (135 samples, 1.35%)</title><rect x="12.2" y="147.0" width="15.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="15.2" y="158.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (53 samples, 0.53%)</title><rect x="12.2" y="131.0" width="6.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="15.2" y="142.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (53 samples, 0.53%)</title><rect x="12.2" y="115.0" width="6.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="15.2" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (33 samples, 0.33%)</title><rect x="12.2" y="99.0" width="3.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="15.2" y="110.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (33 samples, 0.33%)</title><rect x="12.2" y="83.0" width="3.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="15.2" y="94.0"></text>
</g>
<g>
<title>byte[] (33 samples, 0.33%)</title><rect x="12.2" y="67.0" width="3.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="15.2" y="78.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (20 samples, 0.20%)</title><rect x="16.1" y="99.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="19.1" y="110.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (20 samples, 0.20%)</title><rect x="16.1" y="83.0" width="2.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="19.1" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.status (82 samples, 0.82%)</title><rect x="18.5" y="131.0" width="9.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="21.5" y="142.0"></text>
</g>
<g>
<title>one.nio.http.Response (15 samples, 0.15%)</title><rect x="18.5" y="115.0" width="1.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="21.5" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (67 samples, 0.67%)</title><rect x="20.2" y="115.0" width="7.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="23.2" y="126.0"></text>
</g>
<g>
<title>byte[] (33 samples, 0.33%)</title><rect x="20.2" y="99.0" width="3.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="23.2" y="110.0"></text>
</g>
<g>
<title>java.lang.String[] (18 samples, 0.18%)</title><rect x="24.1" y="99.0" width="2.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="27.1" y="110.0"></text>
</g>
<g>
<title>java.lang.String (16 samples, 0.16%)</title><rect x="26.3" y="99.0" width="1.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="29.3" y="110.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (109 samples, 1.09%)</title><rect x="28.1" y="147.0" width="12.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="31.1" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (44 samples, 0.44%)</title><rect x="28.1" y="131.0" width="5.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="31.1" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (44 samples, 0.44%)</title><rect x="28.1" y="115.0" width="5.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="31.1" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (44 samples, 0.44%)</title><rect x="28.1" y="99.0" width="5.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="31.1" y="110.0"></text>
</g>
<g>
<title>java.lang.String (19 samples, 0.19%)</title><rect x="28.1" y="83.0" width="2.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="31.1" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (25 samples, 0.25%)</title><rect x="30.4" y="83.0" width="2.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="33.4" y="94.0"></text>
</g>
<g>
<title>byte[] (25 samples, 0.25%)</title><rect x="30.4" y="67.0" width="2.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="33.4" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.entity (65 samples, 0.65%)</title><rect x="33.3" y="131.0" width="7.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="36.3" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (15 samples, 0.15%)</title><rect x="33.4" y="115.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="36.4" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (15 samples, 0.15%)</title><rect x="33.4" y="99.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="36.4" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer$$Lambda$61/846366140.get$Lambda (15 samples, 0.15%)</title><rect x="33.4" y="83.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="36.4" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.AsyncHttpServer$$Lambda$61 (15 samples, 0.15%)</title><rect x="33.4" y="67.0" width="1.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="36.4" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.executeAsync (49 samples, 0.49%)</title><rect x="35.2" y="115.0" width="5.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="38.2" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (20 samples, 0.20%)</title><rect x="35.2" y="99.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="38.2" y="110.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (20 samples, 0.20%)</title><rect x="35.2" y="83.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="38.2" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer$$Lambda$64/911017770.get$Lambda (20 samples, 0.20%)</title><rect x="35.2" y="67.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="38.2" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.AsyncHttpServer$$Lambda$64 (20 samples, 0.20%)</title><rect x="35.2" y="51.0" width="2.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="38.2" y="62.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (29 samples, 0.29%)</title><rect x="37.6" y="99.0" width="3.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="40.6" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (29 samples, 0.29%)</title><rect x="37.6" y="83.0" width="3.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="40.6" y="94.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (29 samples, 0.29%)</title><rect x="37.6" y="67.0" width="3.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="40.6" y="78.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (62 samples, 0.62%)</title><rect x="41.0" y="147.0" width="7.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="44.0" y="158.0"></text>
</g>
<g>
<title>java/lang/String.substring (62 samples, 0.62%)</title><rect x="41.0" y="131.0" width="7.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="44.0" y="142.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (62 samples, 0.62%)</title><rect x="41.0" y="115.0" width="7.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="44.0" y="126.0"></text>
</g>
<g>
<title>java.lang.String (25 samples, 0.25%)</title><rect x="41.0" y="99.0" width="2.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="44.0" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (37 samples, 0.37%)</title><rect x="43.9" y="99.0" width="4.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="46.9" y="110.0"></text>
</g>
<g>
<title>byte[] (37 samples, 0.37%)</title><rect x="43.9" y="83.0" width="4.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="46.9" y="94.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (418 samples, 4.17%)</title><rect x="48.3" y="179.0" width="49.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="51.3" y="190.0">one/n..</text>
</g>
<g>
<title>one.nio.http.Request (60 samples, 0.60%)</title><rect x="48.3" y="163.0" width="7.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="51.3" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (116 samples, 1.16%)</title><rect x="55.3" y="163.0" width="13.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="58.3" y="174.0"></text>
</g>
<g>
<title>java.lang.String[] (116 samples, 1.16%)</title><rect x="55.3" y="147.0" width="13.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="58.3" y="158.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (242 samples, 2.42%)</title><rect x="69.0" y="163.0" width="28.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="72.0" y="174.0">on..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (242 samples, 2.42%)</title><rect x="69.0" y="147.0" width="28.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="72.0" y="158.0">on..</text>
</g>
<g>
<title>char[] (134 samples, 1.34%)</title><rect x="69.0" y="131.0" width="15.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="72.0" y="142.0"></text>
</g>
<g>
<title>java.lang.String (29 samples, 0.29%)</title><rect x="84.8" y="131.0" width="3.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="87.8" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (79 samples, 0.79%)</title><rect x="88.2" y="131.0" width="9.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="91.2" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (79 samples, 0.79%)</title><rect x="88.2" y="115.0" width="9.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="91.2" y="126.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (79 samples, 0.79%)</title><rect x="88.2" y="99.0" width="9.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="91.2" y="110.0"></text>
</g>
<g>
<title>byte[] (79 samples, 0.79%)</title><rect x="88.2" y="83.0" width="9.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="91.2" y="94.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (23 samples, 0.23%)</title><rect x="97.5" y="179.0" width="2.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="100.5" y="190.0"></text>
</g>
<g>
<title>byte[] (23 samples, 0.23%)</title><rect x="97.5" y="163.0" width="2.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="100.5" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (47 samples, 0.47%)</title><rect x="100.2" y="179.0" width="5.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="103.2" y="190.0"></text>
</g>
<g>
<title>java/lang/String.substring (47 samples, 0.47%)</title><rect x="100.2" y="163.0" width="5.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="103.2" y="174.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (47 samples, 0.47%)</title><rect x="100.2" y="147.0" width="5.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="103.2" y="158.0"></text>
</g>
<g>
<title>java.lang.String (27 samples, 0.27%)</title><rect x="100.2" y="131.0" width="3.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="103.2" y="142.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (20 samples, 0.20%)</title><rect x="103.4" y="131.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="106.4" y="142.0"></text>
</g>
<g>
<title>byte[] (20 samples, 0.20%)</title><rect x="103.4" y="115.0" width="2.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="106.4" y="126.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (321 samples, 3.20%)</title><rect x="105.8" y="179.0" width="37.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="108.8" y="190.0">one..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (321 samples, 3.20%)</title><rect x="105.8" y="163.0" width="37.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="108.8" y="174.0">one..</text>
</g>
<g>
<title>char[] (156 samples, 1.56%)</title><rect x="105.8" y="147.0" width="18.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="108.8" y="158.0"></text>
</g>
<g>
<title>java.lang.String (47 samples, 0.47%)</title><rect x="124.1" y="147.0" width="5.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="127.1" y="158.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (118 samples, 1.18%)</title><rect x="129.7" y="147.0" width="13.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="132.7" y="158.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (118 samples, 1.18%)</title><rect x="129.7" y="131.0" width="13.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="132.7" y="142.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (118 samples, 1.18%)</title><rect x="129.7" y="115.0" width="13.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="132.7" y="126.0"></text>
</g>
<g>
<title>byte[] (118 samples, 1.18%)</title><rect x="129.7" y="99.0" width="13.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="132.7" y="110.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=21458] (1,112 samples, 11.10%)</title><rect x="143.6" y="259.0" width="131.0" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="146.6" y="270.0">[NIO Selector #1..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,112 samples, 11.10%)</title><rect x="143.6" y="243.0" width="131.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="146.6" y="254.0">one/nio/server/S..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (83 samples, 0.83%)</title><rect x="143.6" y="227.0" width="9.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="146.6" y="238.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (81 samples, 0.81%)</title><rect x="143.8" y="211.0" width="9.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="146.8" y="222.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (1,029 samples, 10.27%)</title><rect x="153.3" y="227.0" width="121.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="156.3" y="238.0">one/nio/net/Ses..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,029 samples, 10.27%)</title><rect x="153.3" y="211.0" width="121.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="156.3" y="222.0">one/nio/http/Ht..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,029 samples, 10.27%)</title><rect x="153.3" y="195.0" width="121.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="156.3" y="206.0">one/nio/http/Ht..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (320 samples, 3.19%)</title><rect x="153.3" y="179.0" width="37.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="156.3" y="190.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (320 samples, 3.19%)</title><rect x="153.3" y="163.0" width="37.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="156.3" y="174.0">one..</text>
</g>
<g>
<title>RequestHandler0_status.handleRequest (148 samples, 1.48%)</title><rect x="153.3" y="147.0" width="17.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="156.3" y="158.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (74 samples, 0.74%)</title><rect x="153.3" y="131.0" width="8.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="156.3" y="142.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (74 samples, 0.74%)</title><rect x="153.3" y="115.0" width="8.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="156.3" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (52 samples, 0.52%)</title><rect x="153.3" y="99.0" width="6.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="156.3" y="110.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (52 samples, 0.52%)</title><rect x="153.3" y="83.0" width="6.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="156.3" y="94.0"></text>
</g>
<g>
<title>byte[] (52 samples, 0.52%)</title><rect x="153.3" y="67.0" width="6.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="156.3" y="78.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (22 samples, 0.22%)</title><rect x="159.5" y="99.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="162.5" y="110.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (22 samples, 0.22%)</title><rect x="159.5" y="83.0" width="2.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="162.5" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.status (74 samples, 0.74%)</title><rect x="162.1" y="131.0" width="8.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="165.1" y="142.0"></text>
</g>
<g>
<title>one.nio.http.Response (13 samples, 0.13%)</title><rect x="162.1" y="115.0" width="1.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="165.1" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (61 samples, 0.61%)</title><rect x="163.6" y="115.0" width="7.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="166.6" y="126.0"></text>
</g>
<g>
<title>byte[] (24 samples, 0.24%)</title><rect x="163.6" y="99.0" width="2.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="166.6" y="110.0"></text>
</g>
<g>
<title>java.lang.String[] (21 samples, 0.21%)</title><rect x="166.4" y="99.0" width="2.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="169.4" y="110.0"></text>
</g>
<g>
<title>java.lang.String (16 samples, 0.16%)</title><rect x="168.9" y="99.0" width="1.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="171.9" y="110.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (120 samples, 1.20%)</title><rect x="170.8" y="147.0" width="14.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="173.8" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (54 samples, 0.54%)</title><rect x="170.8" y="131.0" width="6.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="173.8" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (54 samples, 0.54%)</title><rect x="170.8" y="115.0" width="6.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="173.8" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (54 samples, 0.54%)</title><rect x="170.8" y="99.0" width="6.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="173.8" y="110.0"></text>
</g>
<g>
<title>java.lang.String (23 samples, 0.23%)</title><rect x="170.8" y="83.0" width="2.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="173.8" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (31 samples, 0.31%)</title><rect x="173.5" y="83.0" width="3.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="176.5" y="94.0"></text>
</g>
<g>
<title>byte[] (31 samples, 0.31%)</title><rect x="173.5" y="67.0" width="3.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="176.5" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.entity (66 samples, 0.66%)</title><rect x="177.1" y="131.0" width="7.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="180.1" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (20 samples, 0.20%)</title><rect x="177.1" y="115.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="180.1" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (20 samples, 0.20%)</title><rect x="177.1" y="99.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="180.1" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer$$Lambda$61/846366140.get$Lambda (20 samples, 0.20%)</title><rect x="177.1" y="83.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="180.1" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.AsyncHttpServer$$Lambda$61 (20 samples, 0.20%)</title><rect x="177.1" y="67.0" width="2.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="180.1" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.executeAsync (46 samples, 0.46%)</title><rect x="179.5" y="115.0" width="5.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="182.5" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (22 samples, 0.22%)</title><rect x="179.5" y="99.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="182.5" y="110.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (22 samples, 0.22%)</title><rect x="179.5" y="83.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="182.5" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer$$Lambda$64/911017770.get$Lambda (22 samples, 0.22%)</title><rect x="179.5" y="67.0" width="2.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="182.5" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.AsyncHttpServer$$Lambda$64 (22 samples, 0.22%)</title><rect x="179.5" y="51.0" width="2.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="182.5" y="62.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (24 samples, 0.24%)</title><rect x="182.1" y="99.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="185.1" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (24 samples, 0.24%)</title><rect x="182.1" y="83.0" width="2.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="185.1" y="94.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (24 samples, 0.24%)</title><rect x="182.1" y="67.0" width="2.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="185.1" y="78.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (52 samples, 0.52%)</title><rect x="184.9" y="147.0" width="6.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="187.9" y="158.0"></text>
</g>
<g>
<title>java/lang/String.substring (52 samples, 0.52%)</title><rect x="184.9" y="131.0" width="6.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="187.9" y="142.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (52 samples, 0.52%)</title><rect x="184.9" y="115.0" width="6.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="187.9" y="126.0"></text>
</g>
<g>
<title>java.lang.String (17 samples, 0.17%)</title><rect x="184.9" y="99.0" width="2.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="187.9" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (35 samples, 0.35%)</title><rect x="186.9" y="99.0" width="4.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="189.9" y="110.0"></text>
</g>
<g>
<title>byte[] (35 samples, 0.35%)</title><rect x="186.9" y="83.0" width="4.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="189.9" y="94.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (375 samples, 3.74%)</title><rect x="191.0" y="179.0" width="44.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="194.0" y="190.0">one/..</text>
</g>
<g>
<title>one.nio.http.Request (53 samples, 0.53%)</title><rect x="191.0" y="163.0" width="6.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="194.0" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (115 samples, 1.15%)</title><rect x="197.3" y="163.0" width="13.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="200.3" y="174.0"></text>
</g>
<g>
<title>java.lang.String[] (115 samples, 1.15%)</title><rect x="197.3" y="147.0" width="13.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="200.3" y="158.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (207 samples, 2.07%)</title><rect x="210.8" y="163.0" width="24.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="213.8" y="174.0">o..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (207 samples, 2.07%)</title><rect x="210.8" y="147.0" width="24.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="213.8" y="158.0">o..</text>
</g>
<g>
<title>char[] (88 samples, 0.88%)</title><rect x="210.8" y="131.0" width="10.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="213.8" y="142.0"></text>
</g>
<g>
<title>java.lang.String (27 samples, 0.27%)</title><rect x="221.2" y="131.0" width="3.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="224.2" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (92 samples, 0.92%)</title><rect x="224.4" y="131.0" width="10.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="227.4" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (92 samples, 0.92%)</title><rect x="224.4" y="115.0" width="10.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="227.4" y="126.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (92 samples, 0.92%)</title><rect x="224.4" y="99.0" width="10.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="227.4" y="110.0"></text>
</g>
<g>
<title>byte[] (92 samples, 0.92%)</title><rect x="224.4" y="83.0" width="10.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="227.4" y="94.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (22 samples, 0.22%)</title><rect x="235.2" y="179.0" width="2.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="238.2" y="190.0"></text>
</g>
<g>
<title>byte[] (22 samples, 0.22%)</title><rect x="235.2" y="163.0" width="2.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="238.2" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (33 samples, 0.33%)</title><rect x="237.8" y="179.0" width="3.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="240.8" y="190.0"></text>
</g>
<g>
<title>java/lang/String.substring (33 samples, 0.33%)</title><rect x="237.8" y="163.0" width="3.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="240.8" y="174.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (33 samples, 0.33%)</title><rect x="237.8" y="147.0" width="3.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="240.8" y="158.0"></text>
</g>
<g>
<title>java.lang.String (14 samples, 0.14%)</title><rect x="237.8" y="131.0" width="1.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="240.8" y="142.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (19 samples, 0.19%)</title><rect x="239.5" y="131.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="242.5" y="142.0"></text>
</g>
<g>
<title>byte[] (19 samples, 0.19%)</title><rect x="239.5" y="115.0" width="2.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="242.5" y="126.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (279 samples, 2.78%)</title><rect x="241.7" y="179.0" width="32.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="244.7" y="190.0">on..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (279 samples, 2.78%)</title><rect x="241.7" y="163.0" width="32.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="244.7" y="174.0">on..</text>
</g>
<g>
<title>char[] (110 samples, 1.10%)</title><rect x="241.7" y="147.0" width="12.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="244.7" y="158.0"></text>
</g>
<g>
<title>java.lang.String (65 samples, 0.65%)</title><rect x="254.6" y="147.0" width="7.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="257.6" y="158.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (104 samples, 1.04%)</title><rect x="262.3" y="147.0" width="12.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="265.3" y="158.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (104 samples, 1.04%)</title><rect x="262.3" y="131.0" width="12.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="265.3" y="142.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (104 samples, 1.04%)</title><rect x="262.3" y="115.0" width="12.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="265.3" y="126.0"></text>
</g>
<g>
<title>byte[] (104 samples, 1.04%)</title><rect x="262.3" y="99.0" width="12.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="265.3" y="110.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=21459] (1,077 samples, 10.75%)</title><rect x="274.6" y="259.0" width="126.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="277.6" y="270.0">[NIO Selector #2..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,077 samples, 10.75%)</title><rect x="274.6" y="243.0" width="126.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="277.6" y="254.0">one/nio/server/S..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (60 samples, 0.60%)</title><rect x="274.6" y="227.0" width="7.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="277.6" y="238.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (59 samples, 0.59%)</title><rect x="274.7" y="211.0" width="6.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="277.7" y="222.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (1,017 samples, 10.15%)</title><rect x="281.6" y="227.0" width="119.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="284.6" y="238.0">one/nio/net/Ses..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,017 samples, 10.15%)</title><rect x="281.6" y="211.0" width="119.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="284.6" y="222.0">one/nio/http/Ht..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,017 samples, 10.15%)</title><rect x="281.6" y="195.0" width="119.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="284.6" y="206.0">one/nio/http/Ht..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (323 samples, 3.22%)</title><rect x="281.6" y="179.0" width="38.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="284.6" y="190.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (323 samples, 3.22%)</title><rect x="281.6" y="163.0" width="38.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="284.6" y="174.0">one..</text>
</g>
<g>
<title>RequestHandler0_status.handleRequest (150 samples, 1.50%)</title><rect x="281.6" y="147.0" width="17.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="284.6" y="158.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (76 samples, 0.76%)</title><rect x="281.6" y="131.0" width="9.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="284.6" y="142.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (76 samples, 0.76%)</title><rect x="281.6" y="115.0" width="9.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="284.6" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (53 samples, 0.53%)</title><rect x="281.6" y="99.0" width="6.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="284.6" y="110.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (53 samples, 0.53%)</title><rect x="281.6" y="83.0" width="6.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="284.6" y="94.0"></text>
</g>
<g>
<title>byte[] (53 samples, 0.53%)</title><rect x="281.6" y="67.0" width="6.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="284.6" y="78.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (23 samples, 0.23%)</title><rect x="287.9" y="99.0" width="2.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="290.9" y="110.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (23 samples, 0.23%)</title><rect x="287.9" y="83.0" width="2.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="290.9" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.status (74 samples, 0.74%)</title><rect x="290.6" y="131.0" width="8.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="293.6" y="142.0"></text>
</g>
<g>
<title>one.nio.http.Response (15 samples, 0.15%)</title><rect x="290.6" y="115.0" width="1.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="293.6" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (59 samples, 0.59%)</title><rect x="292.3" y="115.0" width="7.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="295.3" y="126.0"></text>
</g>
<g>
<title>byte[] (18 samples, 0.18%)</title><rect x="292.3" y="99.0" width="2.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="295.3" y="110.0"></text>
</g>
<g>
<title>java.lang.String[] (24 samples, 0.24%)</title><rect x="294.5" y="99.0" width="2.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="297.5" y="110.0"></text>
</g>
<g>
<title>java.lang.String (17 samples, 0.17%)</title><rect x="297.3" y="99.0" width="2.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="300.3" y="110.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (103 samples, 1.03%)</title><rect x="299.3" y="147.0" width="12.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="302.3" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (39 samples, 0.39%)</title><rect x="299.3" y="131.0" width="4.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="302.3" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (39 samples, 0.39%)</title><rect x="299.3" y="115.0" width="4.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="302.3" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (39 samples, 0.39%)</title><rect x="299.3" y="99.0" width="4.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="302.3" y="110.0"></text>
</g>
<g>
<title>java.lang.String (25 samples, 0.25%)</title><rect x="299.3" y="83.0" width="2.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="302.3" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (14 samples, 0.14%)</title><rect x="302.2" y="83.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="305.2" y="94.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.14%)</title><rect x="302.2" y="67.0" width="1.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="305.2" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.entity (64 samples, 0.64%)</title><rect x="303.9" y="131.0" width="7.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="306.9" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (16 samples, 0.16%)</title><rect x="303.9" y="115.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="306.9" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (16 samples, 0.16%)</title><rect x="303.9" y="99.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="306.9" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer$$Lambda$61/846366140.get$Lambda (16 samples, 0.16%)</title><rect x="303.9" y="83.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="306.9" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.AsyncHttpServer$$Lambda$61 (16 samples, 0.16%)</title><rect x="303.9" y="67.0" width="1.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="306.9" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.executeAsync (48 samples, 0.48%)</title><rect x="305.8" y="115.0" width="5.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="308.8" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (24 samples, 0.24%)</title><rect x="305.8" y="99.0" width="2.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="308.8" y="110.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (24 samples, 0.24%)</title><rect x="305.8" y="83.0" width="2.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="308.8" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer$$Lambda$64/911017770.get$Lambda (24 samples, 0.24%)</title><rect x="305.8" y="67.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="308.8" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.AsyncHttpServer$$Lambda$64 (24 samples, 0.24%)</title><rect x="305.8" y="51.0" width="2.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="308.8" y="62.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (24 samples, 0.24%)</title><rect x="308.6" y="99.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="311.6" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (24 samples, 0.24%)</title><rect x="308.6" y="83.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="311.6" y="94.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (23 samples, 0.23%)</title><rect x="308.6" y="67.0" width="2.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="311.6" y="78.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (70 samples, 0.70%)</title><rect x="311.4" y="147.0" width="8.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="314.4" y="158.0"></text>
</g>
<g>
<title>java/lang/String.substring (70 samples, 0.70%)</title><rect x="311.4" y="131.0" width="8.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="314.4" y="142.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (70 samples, 0.70%)</title><rect x="311.4" y="115.0" width="8.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="314.4" y="126.0"></text>
</g>
<g>
<title>java.lang.String (28 samples, 0.28%)</title><rect x="311.4" y="99.0" width="3.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="314.4" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (42 samples, 0.42%)</title><rect x="314.7" y="99.0" width="5.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="317.7" y="110.0"></text>
</g>
<g>
<title>byte[] (42 samples, 0.42%)</title><rect x="314.7" y="83.0" width="5.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="317.7" y="94.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (333 samples, 3.32%)</title><rect x="319.7" y="179.0" width="39.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="322.7" y="190.0">one..</text>
</g>
<g>
<title>one.nio.http.Request (51 samples, 0.51%)</title><rect x="319.7" y="163.0" width="6.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="322.7" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (95 samples, 0.95%)</title><rect x="325.7" y="163.0" width="11.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="328.7" y="174.0"></text>
</g>
<g>
<title>java.lang.String[] (95 samples, 0.95%)</title><rect x="325.7" y="147.0" width="11.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="328.7" y="158.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (187 samples, 1.87%)</title><rect x="336.9" y="163.0" width="22.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="339.9" y="174.0">o..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (187 samples, 1.87%)</title><rect x="336.9" y="147.0" width="22.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="339.9" y="158.0">o..</text>
</g>
<g>
<title>char[] (88 samples, 0.88%)</title><rect x="336.9" y="131.0" width="10.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="339.9" y="142.0"></text>
</g>
<g>
<title>java.lang.String (41 samples, 0.41%)</title><rect x="347.2" y="131.0" width="4.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="350.2" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (58 samples, 0.58%)</title><rect x="352.1" y="131.0" width="6.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="355.1" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (58 samples, 0.58%)</title><rect x="352.1" y="115.0" width="6.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="355.1" y="126.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (58 samples, 0.58%)</title><rect x="352.1" y="99.0" width="6.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="355.1" y="110.0"></text>
</g>
<g>
<title>byte[] (58 samples, 0.58%)</title><rect x="352.1" y="83.0" width="6.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="355.1" y="94.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (32 samples, 0.32%)</title><rect x="358.9" y="179.0" width="3.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="361.9" y="190.0"></text>
</g>
<g>
<title>byte[] (32 samples, 0.32%)</title><rect x="358.9" y="163.0" width="3.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="361.9" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (35 samples, 0.35%)</title><rect x="362.7" y="179.0" width="4.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="365.7" y="190.0"></text>
</g>
<g>
<title>java/lang/String.substring (35 samples, 0.35%)</title><rect x="362.7" y="163.0" width="4.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="365.7" y="174.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (35 samples, 0.35%)</title><rect x="362.7" y="147.0" width="4.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="365.7" y="158.0"></text>
</g>
<g>
<title>java.lang.String (19 samples, 0.19%)</title><rect x="362.7" y="131.0" width="2.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="365.7" y="142.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (16 samples, 0.16%)</title><rect x="364.9" y="131.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="367.9" y="142.0"></text>
</g>
<g>
<title>byte[] (16 samples, 0.16%)</title><rect x="364.9" y="115.0" width="1.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="367.9" y="126.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (294 samples, 2.93%)</title><rect x="366.8" y="179.0" width="34.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="369.8" y="190.0">on..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (294 samples, 2.93%)</title><rect x="366.8" y="163.0" width="34.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="369.8" y="174.0">on..</text>
</g>
<g>
<title>char[] (140 samples, 1.40%)</title><rect x="366.8" y="147.0" width="16.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="369.8" y="158.0"></text>
</g>
<g>
<title>java.lang.String (63 samples, 0.63%)</title><rect x="383.3" y="147.0" width="7.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="386.3" y="158.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (91 samples, 0.91%)</title><rect x="390.7" y="147.0" width="10.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="393.7" y="158.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (91 samples, 0.91%)</title><rect x="390.7" y="131.0" width="10.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="393.7" y="142.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (91 samples, 0.91%)</title><rect x="390.7" y="115.0" width="10.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="393.7" y="126.0"></text>
</g>
<g>
<title>byte[] (91 samples, 0.91%)</title><rect x="390.7" y="99.0" width="10.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="393.7" y="110.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=21460] (1,188 samples, 11.86%)</title><rect x="401.4" y="259.0" width="139.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="404.4" y="270.0">[NIO Selector #3 ..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,188 samples, 11.86%)</title><rect x="401.4" y="243.0" width="139.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="404.4" y="254.0">one/nio/server/Se..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (10 samples, 0.10%)</title><rect x="401.4" y="227.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="404.4" y="238.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (9 samples, 0.09%)</title><rect x="401.5" y="211.0" width="1.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="404.5" y="222.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (1,178 samples, 11.76%)</title><rect x="402.6" y="227.0" width="138.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="405.6" y="238.0">one/nio/net/Sessi..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,178 samples, 11.76%)</title><rect x="402.6" y="211.0" width="138.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="405.6" y="222.0">one/nio/http/Http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,178 samples, 11.76%)</title><rect x="402.6" y="195.0" width="138.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="405.6" y="206.0">one/nio/http/Http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (398 samples, 3.97%)</title><rect x="402.6" y="179.0" width="46.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="405.6" y="190.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (398 samples, 3.97%)</title><rect x="402.6" y="163.0" width="46.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="405.6" y="174.0">one/..</text>
</g>
<g>
<title>RequestHandler0_status.handleRequest (261 samples, 2.61%)</title><rect x="402.6" y="147.0" width="30.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="405.6" y="158.0">Re..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (131 samples, 1.31%)</title><rect x="402.6" y="131.0" width="15.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="405.6" y="142.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (131 samples, 1.31%)</title><rect x="402.6" y="115.0" width="15.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="405.6" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (87 samples, 0.87%)</title><rect x="402.6" y="99.0" width="10.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="405.6" y="110.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (87 samples, 0.87%)</title><rect x="402.6" y="83.0" width="10.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="405.6" y="94.0"></text>
</g>
<g>
<title>byte[] (87 samples, 0.87%)</title><rect x="402.6" y="67.0" width="10.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="405.6" y="78.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (44 samples, 0.44%)</title><rect x="412.8" y="99.0" width="5.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="415.8" y="110.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (44 samples, 0.44%)</title><rect x="412.8" y="83.0" width="5.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="415.8" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.status (130 samples, 1.30%)</title><rect x="418.0" y="131.0" width="15.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="421.0" y="142.0"></text>
</g>
<g>
<title>one.nio.http.Response (21 samples, 0.21%)</title><rect x="418.0" y="115.0" width="2.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="421.0" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (109 samples, 1.09%)</title><rect x="420.5" y="115.0" width="12.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="423.5" y="126.0"></text>
</g>
<g>
<title>byte[] (40 samples, 0.40%)</title><rect x="420.5" y="99.0" width="4.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="423.5" y="110.0"></text>
</g>
<g>
<title>java.lang.String[] (41 samples, 0.41%)</title><rect x="425.2" y="99.0" width="4.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="428.2" y="110.0"></text>
</g>
<g>
<title>java.lang.String (28 samples, 0.28%)</title><rect x="430.0" y="99.0" width="3.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="433.0" y="110.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (97 samples, 0.97%)</title><rect x="433.3" y="147.0" width="11.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="436.3" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (45 samples, 0.45%)</title><rect x="433.3" y="131.0" width="5.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="436.3" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (45 samples, 0.45%)</title><rect x="433.3" y="115.0" width="5.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="436.3" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (45 samples, 0.45%)</title><rect x="433.3" y="99.0" width="5.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="436.3" y="110.0"></text>
</g>
<g>
<title>java.lang.String (26 samples, 0.26%)</title><rect x="433.3" y="83.0" width="3.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="436.3" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (19 samples, 0.19%)</title><rect x="436.4" y="83.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="439.4" y="94.0"></text>
</g>
<g>
<title>byte[] (19 samples, 0.19%)</title><rect x="436.4" y="67.0" width="2.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="439.4" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.entity (52 samples, 0.52%)</title><rect x="438.6" y="131.0" width="6.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="441.6" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (18 samples, 0.18%)</title><rect x="438.6" y="115.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="441.6" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (18 samples, 0.18%)</title><rect x="438.6" y="99.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="441.6" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer$$Lambda$61/846366140.get$Lambda (18 samples, 0.18%)</title><rect x="438.6" y="83.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="441.6" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.AsyncHttpServer$$Lambda$61 (18 samples, 0.18%)</title><rect x="438.6" y="67.0" width="2.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="441.6" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.executeAsync (34 samples, 0.34%)</title><rect x="440.8" y="115.0" width="4.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="443.8" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (14 samples, 0.14%)</title><rect x="440.8" y="99.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="443.8" y="110.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (14 samples, 0.14%)</title><rect x="440.8" y="83.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="443.8" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer$$Lambda$64/911017770.get$Lambda (14 samples, 0.14%)</title><rect x="440.8" y="67.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="443.8" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.AsyncHttpServer$$Lambda$64 (14 samples, 0.14%)</title><rect x="440.8" y="51.0" width="1.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="443.8" y="62.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (20 samples, 0.20%)</title><rect x="442.4" y="99.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="445.4" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (20 samples, 0.20%)</title><rect x="442.4" y="83.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="445.4" y="94.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (20 samples, 0.20%)</title><rect x="442.4" y="67.0" width="2.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="445.4" y="78.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (40 samples, 0.40%)</title><rect x="444.8" y="147.0" width="4.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="447.8" y="158.0"></text>
</g>
<g>
<title>java/lang/String.substring (40 samples, 0.40%)</title><rect x="444.8" y="131.0" width="4.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="447.8" y="142.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (40 samples, 0.40%)</title><rect x="444.8" y="115.0" width="4.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="447.8" y="126.0"></text>
</g>
<g>
<title>java.lang.String (19 samples, 0.19%)</title><rect x="444.8" y="99.0" width="2.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="447.8" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (21 samples, 0.21%)</title><rect x="447.0" y="99.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="450.0" y="110.0"></text>
</g>
<g>
<title>byte[] (21 samples, 0.21%)</title><rect x="447.0" y="83.0" width="2.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="450.0" y="94.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (436 samples, 4.35%)</title><rect x="449.5" y="179.0" width="51.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="452.5" y="190.0">one/n..</text>
</g>
<g>
<title>one.nio.http.Request (66 samples, 0.66%)</title><rect x="449.5" y="163.0" width="7.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="452.5" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (161 samples, 1.61%)</title><rect x="457.2" y="163.0" width="19.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="460.2" y="174.0"></text>
</g>
<g>
<title>java.lang.String[] (161 samples, 1.61%)</title><rect x="457.2" y="147.0" width="19.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="460.2" y="158.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (209 samples, 2.09%)</title><rect x="476.2" y="163.0" width="24.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="479.2" y="174.0">o..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (209 samples, 2.09%)</title><rect x="476.2" y="147.0" width="24.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="479.2" y="158.0">o..</text>
</g>
<g>
<title>char[] (104 samples, 1.04%)</title><rect x="476.2" y="131.0" width="12.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="479.2" y="142.0"></text>
</g>
<g>
<title>java.lang.String (36 samples, 0.36%)</title><rect x="488.5" y="131.0" width="4.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="491.5" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (69 samples, 0.69%)</title><rect x="492.7" y="131.0" width="8.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="495.7" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (69 samples, 0.69%)</title><rect x="492.7" y="115.0" width="8.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="495.7" y="126.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (69 samples, 0.69%)</title><rect x="492.7" y="99.0" width="8.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="495.7" y="110.0"></text>
</g>
<g>
<title>byte[] (69 samples, 0.69%)</title><rect x="492.7" y="83.0" width="8.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="495.7" y="94.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (25 samples, 0.25%)</title><rect x="500.8" y="179.0" width="3.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="503.8" y="190.0"></text>
</g>
<g>
<title>byte[] (25 samples, 0.25%)</title><rect x="500.8" y="163.0" width="3.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="503.8" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (29 samples, 0.29%)</title><rect x="503.8" y="179.0" width="3.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="506.8" y="190.0"></text>
</g>
<g>
<title>java/lang/String.substring (29 samples, 0.29%)</title><rect x="503.8" y="163.0" width="3.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="506.8" y="174.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (29 samples, 0.29%)</title><rect x="503.8" y="147.0" width="3.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="506.8" y="158.0"></text>
</g>
<g>
<title>java.lang.String (13 samples, 0.13%)</title><rect x="503.8" y="131.0" width="1.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="506.8" y="142.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (16 samples, 0.16%)</title><rect x="505.3" y="131.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="508.3" y="142.0"></text>
</g>
<g>
<title>byte[] (16 samples, 0.16%)</title><rect x="505.3" y="115.0" width="1.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="508.3" y="126.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (290 samples, 2.89%)</title><rect x="507.2" y="179.0" width="34.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="510.2" y="190.0">on..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (290 samples, 2.89%)</title><rect x="507.2" y="163.0" width="34.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="510.2" y="174.0">on..</text>
</g>
<g>
<title>char[] (140 samples, 1.40%)</title><rect x="507.2" y="147.0" width="16.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="510.2" y="158.0"></text>
</g>
<g>
<title>java.lang.String (46 samples, 0.46%)</title><rect x="523.7" y="147.0" width="5.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="526.7" y="158.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (104 samples, 1.04%)</title><rect x="529.1" y="147.0" width="12.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="532.1" y="158.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (104 samples, 1.04%)</title><rect x="529.1" y="131.0" width="12.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="532.1" y="142.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (104 samples, 1.04%)</title><rect x="529.1" y="115.0" width="12.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="532.1" y="126.0"></text>
</g>
<g>
<title>byte[] (104 samples, 1.04%)</title><rect x="529.1" y="99.0" width="12.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="532.1" y="110.0"></text>
</g>
<g>
<title>[flusher-0 tid=21798] (142 samples, 1.42%)</title><rect x="541.3" y="259.0" width="16.8" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="544.3" y="270.0"></text>
</g>
<g>
<title>java/lang/Thread.run (142 samples, 1.42%)</title><rect x="541.3" y="243.0" width="16.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="544.3" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (142 samples, 1.42%)</title><rect x="541.3" y="227.0" width="16.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="544.3" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (142 samples, 1.42%)</title><rect x="541.3" y="211.0" width="16.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="544.3" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao$FlushingTask.run (142 samples, 1.42%)</title><rect x="541.3" y="195.0" width="16.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="544.3" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.flushAndLoad (142 samples, 1.42%)</title><rect x="541.3" y="179.0" width="16.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="544.3" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.flush (140 samples, 1.40%)</title><rect x="541.6" y="163.0" width="16.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="544.6" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (28 samples, 0.28%)</title><rect x="541.6" y="147.0" width="3.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="544.6" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (25 samples, 0.25%)</title><rect x="541.6" y="131.0" width="2.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="544.6" y="142.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.03%)</title><rect x="544.5" y="131.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="547.5" y="142.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (33 samples, 0.33%)</title><rect x="544.9" y="147.0" width="3.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="547.9" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (33 samples, 0.33%)</title><rect x="544.9" y="131.0" width="3.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="547.9" y="142.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (4 samples, 0.04%)</title><rect x="548.8" y="147.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="551.8" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (4 samples, 0.04%)</title><rect x="548.8" y="131.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="551.8" y="142.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (4 samples, 0.04%)</title><rect x="548.8" y="115.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="551.8" y="126.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (4 samples, 0.04%)</title><rect x="548.8" y="99.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="551.8" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (4 samples, 0.04%)</title><rect x="548.8" y="83.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="551.8" y="94.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.03%)</title><rect x="548.8" y="67.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="551.8" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (14 samples, 0.14%)</title><rect x="549.2" y="147.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="552.2" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (14 samples, 0.14%)</title><rect x="549.2" y="131.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="552.2" y="142.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (14 samples, 0.14%)</title><rect x="549.2" y="115.0" width="1.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="552.2" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Value.getData (60 samples, 0.60%)</title><rect x="550.9" y="147.0" width="7.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="553.9" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (60 samples, 0.60%)</title><rect x="550.9" y="131.0" width="7.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="553.9" y="142.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (60 samples, 0.60%)</title><rect x="550.9" y="115.0" width="7.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="553.9" y="126.0"></text>
</g>
<g>
<title>[flusher-1 tid=21829] (135 samples, 1.35%)</title><rect x="558.1" y="259.0" width="15.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="561.1" y="270.0"></text>
</g>
<g>
<title>java/lang/Thread.run (135 samples, 1.35%)</title><rect x="558.1" y="243.0" width="15.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="561.1" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (135 samples, 1.35%)</title><rect x="558.1" y="227.0" width="15.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="561.1" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (135 samples, 1.35%)</title><rect x="558.1" y="211.0" width="15.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="561.1" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao$FlushingTask.run (135 samples, 1.35%)</title><rect x="558.1" y="195.0" width="15.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="561.1" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.flushAndLoad (135 samples, 1.35%)</title><rect x="558.1" y="179.0" width="15.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="561.1" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.flush (134 samples, 1.34%)</title><rect x="558.2" y="163.0" width="15.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="561.2" y="174.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (13 samples, 0.13%)</title><rect x="558.2" y="147.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="561.2" y="158.0"></text>
</g>
<g>
<title>java.lang.Long (13 samples, 0.13%)</title><rect x="558.2" y="131.0" width="1.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="561.2" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (36 samples, 0.36%)</title><rect x="559.7" y="147.0" width="4.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="562.7" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (11 samples, 0.11%)</title><rect x="559.7" y="131.0" width="1.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="562.7" y="142.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (25 samples, 0.25%)</title><rect x="561.0" y="131.0" width="3.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="564.0" y="142.0"></text>
</g>
<g>
<title>byte[] (24 samples, 0.24%)</title><rect x="561.0" y="115.0" width="2.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="564.0" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (29 samples, 0.29%)</title><rect x="564.0" y="147.0" width="3.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="567.0" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (29 samples, 0.29%)</title><rect x="564.0" y="131.0" width="3.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="567.0" y="142.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (4 samples, 0.04%)</title><rect x="567.4" y="147.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="570.4" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (4 samples, 0.04%)</title><rect x="567.4" y="131.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="570.4" y="142.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (4 samples, 0.04%)</title><rect x="567.4" y="115.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="570.4" y="126.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (4 samples, 0.04%)</title><rect x="567.4" y="99.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="570.4" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (4 samples, 0.04%)</title><rect x="567.4" y="83.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="570.4" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (3 samples, 0.03%)</title><rect x="567.5" y="67.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="570.5" y="78.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.03%)</title><rect x="567.5" y="51.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="570.5" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (15 samples, 0.15%)</title><rect x="567.8" y="147.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="570.8" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (15 samples, 0.15%)</title><rect x="567.8" y="131.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="570.8" y="142.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (15 samples, 0.15%)</title><rect x="567.8" y="115.0" width="1.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="570.8" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Value.getData (37 samples, 0.37%)</title><rect x="569.6" y="147.0" width="4.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="572.6" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (37 samples, 0.37%)</title><rect x="569.6" y="131.0" width="4.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="572.6" y="142.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (37 samples, 0.37%)</title><rect x="569.6" y="115.0" width="4.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="572.6" y="126.0"></text>
</g>
<g>
<title>[worker-0 tid=21592] (1,038 samples, 10.36%)</title><rect x="574.2" y="259.0" width="122.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="577.2" y="270.0">[worker-0 tid=2..</text>
</g>
<g>
<title>java/lang/Thread.run (1,038 samples, 10.36%)</title><rect x="574.2" y="243.0" width="122.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="577.2" y="254.0">java/lang/Threa..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,038 samples, 10.36%)</title><rect x="574.2" y="227.0" width="122.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="577.2" y="238.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,038 samples, 10.36%)</title><rect x="574.2" y="211.0" width="122.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="577.2" y="222.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (51 samples, 0.51%)</title><rect x="574.2" y="195.0" width="6.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="577.2" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (51 samples, 0.51%)</title><rect x="574.2" y="179.0" width="6.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="577.2" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (50 samples, 0.50%)</title><rect x="574.2" y="163.0" width="5.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="577.2" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (50 samples, 0.50%)</title><rect x="574.2" y="147.0" width="5.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="577.2" y="158.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (50 samples, 0.50%)</title><rect x="574.2" y="131.0" width="5.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="577.2" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer$$Lambda$64/911017770.run (987 samples, 9.85%)</title><rect x="580.2" y="195.0" width="116.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="583.2" y="206.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.lambda$executeAsync$3 (987 samples, 9.85%)</title><rect x="580.2" y="179.0" width="116.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="583.2" y="190.0">ru/mail/polis/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (317 samples, 3.16%)</title><rect x="580.2" y="163.0" width="37.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="583.2" y="174.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (317 samples, 3.16%)</title><rect x="580.2" y="147.0" width="37.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="583.2" y="158.0">one..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (216 samples, 2.16%)</title><rect x="580.2" y="131.0" width="25.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="583.2" y="142.0">o..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (215 samples, 2.15%)</title><rect x="580.3" y="115.0" width="25.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="583.3" y="126.0">o..</text>
</g>
<g>
<title>byte[] (215 samples, 2.15%)</title><rect x="580.3" y="99.0" width="25.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="583.3" y="110.0">b..</text>
</g>
<g>
<title>one/nio/net/Session.write (101 samples, 1.01%)</title><rect x="605.7" y="131.0" width="11.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="608.7" y="142.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (101 samples, 1.01%)</title><rect x="605.7" y="115.0" width="11.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="608.7" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer$$Lambda$61/846366140.get (670 samples, 6.69%)</title><rect x="617.6" y="163.0" width="78.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="620.6" y="174.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.lambda$entity$1 (670 samples, 6.69%)</title><rect x="617.6" y="147.0" width="78.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="620.6" y="158.0">ru/mail/p..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (104 samples, 1.04%)</title><rect x="617.6" y="131.0" width="12.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="620.6" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (104 samples, 1.04%)</title><rect x="617.6" y="115.0" width="12.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="620.6" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (104 samples, 1.04%)</title><rect x="617.6" y="99.0" width="12.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="620.6" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.upsert (566 samples, 5.65%)</title><rect x="629.8" y="131.0" width="66.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="632.8" y="142.0">ru/mail..</text>
</g>
<g>
<title>java/lang/String.getBytes (61 samples, 0.61%)</title><rect x="629.8" y="115.0" width="7.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="632.8" y="126.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (61 samples, 0.61%)</title><rect x="629.8" y="99.0" width="7.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="632.8" y="110.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (61 samples, 0.61%)</title><rect x="629.8" y="83.0" width="7.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="632.8" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (61 samples, 0.61%)</title><rect x="629.8" y="67.0" width="7.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="632.8" y="78.0"></text>
</g>
<g>
<title>byte[] (61 samples, 0.61%)</title><rect x="629.8" y="51.0" width="7.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="632.8" y="62.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (108 samples, 1.08%)</title><rect x="637.0" y="115.0" width="12.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="640.0" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (108 samples, 1.08%)</title><rect x="637.0" y="99.0" width="12.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="640.0" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (108 samples, 1.08%)</title><rect x="637.0" y="83.0" width="12.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="640.0" y="94.0"></text>
</g>
<g>
<title>one.nio.http.Response (59 samples, 0.59%)</title><rect x="649.7" y="115.0" width="7.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="652.7" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (202 samples, 2.02%)</title><rect x="656.7" y="115.0" width="23.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="659.7" y="126.0">o..</text>
</g>
<g>
<title>byte[] (77 samples, 0.77%)</title><rect x="656.7" y="99.0" width="9.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="659.7" y="110.0"></text>
</g>
<g>
<title>java.lang.String[] (69 samples, 0.69%)</title><rect x="666.0" y="99.0" width="8.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="669.0" y="110.0"></text>
</g>
<g>
<title>java.lang.String (50 samples, 0.50%)</title><rect x="674.1" y="99.0" width="5.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="677.1" y="110.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (3 samples, 0.03%)</title><rect x="680.1" y="99.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="683.1" y="110.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (3 samples, 0.03%)</title><rect x="680.1" y="83.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="683.1" y="94.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (3 samples, 0.03%)</title><rect x="680.1" y="67.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="683.1" y="78.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (3 samples, 0.03%)</title><rect x="680.1" y="51.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="683.1" y="62.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.03%)</title><rect x="680.1" y="35.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="683.1" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.upsert (136 samples, 1.36%)</title><rect x="680.4" y="115.0" width="16.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="683.4" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.upsert (136 samples, 1.36%)</title><rect x="680.4" y="99.0" width="16.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="683.4" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.upsert (133 samples, 1.33%)</title><rect x="680.4" y="83.0" width="15.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="683.4" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (13 samples, 0.13%)</title><rect x="680.4" y="67.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="683.4" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (13 samples, 0.13%)</title><rect x="680.4" y="51.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="683.4" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Node (11 samples, 0.11%)</title><rect x="680.7" y="35.0" width="1.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="683.7" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.of (71 samples, 0.71%)</title><rect x="682.0" y="67.0" width="8.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="685.0" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Row (71 samples, 0.71%)</title><rect x="682.0" y="51.0" width="8.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="685.0" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Value.of (49 samples, 0.49%)</title><rect x="690.3" y="67.0" width="5.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="693.3" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Value (49 samples, 0.49%)</title><rect x="690.3" y="51.0" width="5.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="693.3" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.setToFlush (3 samples, 0.03%)</title><rect x="696.1" y="83.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="699.1" y="94.0"></text>
</g>
<g>
<title>[worker-1 tid=21595] (1,048 samples, 10.46%)</title><rect x="696.5" y="259.0" width="123.4" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="699.5" y="270.0">[worker-1 tid=2..</text>
</g>
<g>
<title>java/lang/Thread.run (1,048 samples, 10.46%)</title><rect x="696.5" y="243.0" width="123.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="699.5" y="254.0">java/lang/Threa..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,048 samples, 10.46%)</title><rect x="696.5" y="227.0" width="123.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="699.5" y="238.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,048 samples, 10.46%)</title><rect x="696.5" y="211.0" width="123.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="699.5" y="222.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (40 samples, 0.40%)</title><rect x="696.5" y="195.0" width="4.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="699.5" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (40 samples, 0.40%)</title><rect x="696.5" y="179.0" width="4.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="699.5" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (40 samples, 0.40%)</title><rect x="696.5" y="163.0" width="4.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="699.5" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (40 samples, 0.40%)</title><rect x="696.5" y="147.0" width="4.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="699.5" y="158.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (40 samples, 0.40%)</title><rect x="696.5" y="131.0" width="4.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="699.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer$$Lambda$64/911017770.run (1,008 samples, 10.06%)</title><rect x="701.2" y="195.0" width="118.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="704.2" y="206.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.lambda$executeAsync$3 (1,008 samples, 10.06%)</title><rect x="701.2" y="179.0" width="118.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="704.2" y="190.0">ru/mail/polis/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (284 samples, 2.83%)</title><rect x="701.2" y="163.0" width="33.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="704.2" y="174.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (284 samples, 2.83%)</title><rect x="701.2" y="147.0" width="33.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="704.2" y="158.0">on..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (191 samples, 1.91%)</title><rect x="701.2" y="131.0" width="22.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="704.2" y="142.0">o..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (191 samples, 1.91%)</title><rect x="701.2" y="115.0" width="22.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="704.2" y="126.0">o..</text>
</g>
<g>
<title>byte[] (191 samples, 1.91%)</title><rect x="701.2" y="99.0" width="22.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="704.2" y="110.0">b..</text>
</g>
<g>
<title>one/nio/net/Session.write (93 samples, 0.93%)</title><rect x="723.7" y="131.0" width="10.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="726.7" y="142.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (93 samples, 0.93%)</title><rect x="723.7" y="115.0" width="10.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="726.7" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer$$Lambda$61/846366140.get (724 samples, 7.23%)</title><rect x="734.6" y="163.0" width="85.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="737.6" y="174.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.lambda$entity$1 (724 samples, 7.23%)</title><rect x="734.6" y="147.0" width="85.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="737.6" y="158.0">ru/mail/po..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (123 samples, 1.23%)</title><rect x="734.6" y="131.0" width="14.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="737.6" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (123 samples, 1.23%)</title><rect x="734.6" y="115.0" width="14.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="737.6" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (123 samples, 1.23%)</title><rect x="734.6" y="99.0" width="14.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="737.6" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.upsert (601 samples, 6.00%)</title><rect x="749.1" y="131.0" width="70.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="752.1" y="142.0">ru/mail/..</text>
</g>
<g>
<title>java/lang/String.getBytes (60 samples, 0.60%)</title><rect x="749.1" y="115.0" width="7.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="752.1" y="126.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (60 samples, 0.60%)</title><rect x="749.1" y="99.0" width="7.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="752.1" y="110.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (60 samples, 0.60%)</title><rect x="749.1" y="83.0" width="7.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="752.1" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (60 samples, 0.60%)</title><rect x="749.1" y="67.0" width="7.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="752.1" y="78.0"></text>
</g>
<g>
<title>byte[] (60 samples, 0.60%)</title><rect x="749.1" y="51.0" width="7.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="752.1" y="62.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (127 samples, 1.27%)</title><rect x="756.2" y="115.0" width="14.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="759.2" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (127 samples, 1.27%)</title><rect x="756.2" y="99.0" width="14.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="759.2" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (127 samples, 1.27%)</title><rect x="756.2" y="83.0" width="14.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="759.2" y="94.0"></text>
</g>
<g>
<title>one.nio.http.Response (50 samples, 0.50%)</title><rect x="771.1" y="115.0" width="5.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="774.1" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (222 samples, 2.22%)</title><rect x="777.0" y="115.0" width="26.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="780.0" y="126.0">o..</text>
</g>
<g>
<title>byte[] (84 samples, 0.84%)</title><rect x="777.0" y="99.0" width="9.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="780.0" y="110.0"></text>
</g>
<g>
<title>java.lang.String[] (76 samples, 0.76%)</title><rect x="786.9" y="99.0" width="9.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="789.9" y="110.0"></text>
</g>
<g>
<title>java.lang.String (52 samples, 0.52%)</title><rect x="795.9" y="99.0" width="6.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="798.9" y="110.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (6 samples, 0.06%)</title><rect x="802.5" y="99.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="805.5" y="110.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (6 samples, 0.06%)</title><rect x="802.5" y="83.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="805.5" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (5 samples, 0.05%)</title><rect x="802.6" y="67.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="805.6" y="78.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.05%)</title><rect x="802.6" y="51.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="805.6" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.upsert (142 samples, 1.42%)</title><rect x="803.2" y="115.0" width="16.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="806.2" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.upsert (142 samples, 1.42%)</title><rect x="803.2" y="99.0" width="16.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="806.2" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.upsert (142 samples, 1.42%)</title><rect x="803.2" y="83.0" width="16.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="806.2" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (12 samples, 0.12%)</title><rect x="803.2" y="67.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="806.2" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (12 samples, 0.12%)</title><rect x="803.2" y="51.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="806.2" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Index (4 samples, 0.04%)</title><rect x="803.2" y="35.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="806.2" y="46.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Node (8 samples, 0.08%)</title><rect x="803.7" y="35.0" width="0.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="806.7" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.of (63 samples, 0.63%)</title><rect x="804.6" y="67.0" width="7.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="807.6" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Row (63 samples, 0.63%)</title><rect x="804.6" y="51.0" width="7.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="807.6" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Value.of (67 samples, 0.67%)</title><rect x="812.0" y="67.0" width="7.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="815.0" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Value (67 samples, 0.67%)</title><rect x="812.0" y="51.0" width="7.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="815.0" y="62.0"></text>
</g>
<g>
<title>[worker-2 tid=21593] (1,067 samples, 10.65%)</title><rect x="819.9" y="259.0" width="125.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="822.9" y="270.0">[worker-2 tid=2..</text>
</g>
<g>
<title>java/lang/Thread.run (1,067 samples, 10.65%)</title><rect x="819.9" y="243.0" width="125.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="822.9" y="254.0">java/lang/Threa..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,067 samples, 10.65%)</title><rect x="819.9" y="227.0" width="125.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="822.9" y="238.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,067 samples, 10.65%)</title><rect x="819.9" y="211.0" width="125.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="822.9" y="222.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (40 samples, 0.40%)</title><rect x="819.9" y="195.0" width="4.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="822.9" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (40 samples, 0.40%)</title><rect x="819.9" y="179.0" width="4.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="822.9" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (40 samples, 0.40%)</title><rect x="819.9" y="163.0" width="4.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="822.9" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (40 samples, 0.40%)</title><rect x="819.9" y="147.0" width="4.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="822.9" y="158.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (40 samples, 0.40%)</title><rect x="819.9" y="131.0" width="4.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="822.9" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer$$Lambda$64/911017770.run (1,027 samples, 10.25%)</title><rect x="824.6" y="195.0" width="121.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="827.6" y="206.0">ru/mail/polis/s..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.lambda$executeAsync$3 (1,027 samples, 10.25%)</title><rect x="824.6" y="179.0" width="121.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="827.6" y="190.0">ru/mail/polis/s..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (307 samples, 3.06%)</title><rect x="824.6" y="163.0" width="36.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="827.6" y="174.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (307 samples, 3.06%)</title><rect x="824.6" y="147.0" width="36.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="827.6" y="158.0">one..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (218 samples, 2.18%)</title><rect x="824.6" y="131.0" width="25.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="827.6" y="142.0">o..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (217 samples, 2.17%)</title><rect x="824.7" y="115.0" width="25.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="827.7" y="126.0">o..</text>
</g>
<g>
<title>byte[] (217 samples, 2.17%)</title><rect x="824.7" y="99.0" width="25.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="827.7" y="110.0">b..</text>
</g>
<g>
<title>one/nio/net/Session.write (89 samples, 0.89%)</title><rect x="850.3" y="131.0" width="10.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="853.3" y="142.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (89 samples, 0.89%)</title><rect x="850.3" y="115.0" width="10.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="853.3" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer$$Lambda$61/846366140.get (720 samples, 7.19%)</title><rect x="860.8" y="163.0" width="84.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="863.8" y="174.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.lambda$entity$1 (720 samples, 7.19%)</title><rect x="860.8" y="147.0" width="84.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="863.8" y="158.0">ru/mail/po..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (128 samples, 1.28%)</title><rect x="860.8" y="131.0" width="15.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="863.8" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (128 samples, 1.28%)</title><rect x="860.8" y="115.0" width="15.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="863.8" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (128 samples, 1.28%)</title><rect x="860.8" y="99.0" width="15.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="863.8" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.upsert (592 samples, 5.91%)</title><rect x="875.9" y="131.0" width="69.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="878.9" y="142.0">ru/mail..</text>
</g>
<g>
<title>java/lang/String.getBytes (61 samples, 0.61%)</title><rect x="875.9" y="115.0" width="7.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="878.9" y="126.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (61 samples, 0.61%)</title><rect x="875.9" y="99.0" width="7.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="878.9" y="110.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (61 samples, 0.61%)</title><rect x="875.9" y="83.0" width="7.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="878.9" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (61 samples, 0.61%)</title><rect x="875.9" y="67.0" width="7.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="878.9" y="78.0"></text>
</g>
<g>
<title>byte[] (61 samples, 0.61%)</title><rect x="875.9" y="51.0" width="7.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="878.9" y="62.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (111 samples, 1.11%)</title><rect x="883.0" y="115.0" width="13.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="886.0" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (111 samples, 1.11%)</title><rect x="883.0" y="99.0" width="13.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="886.0" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (111 samples, 1.11%)</title><rect x="883.0" y="83.0" width="13.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="886.0" y="94.0"></text>
</g>
<g>
<title>one.nio.http.Response (52 samples, 0.52%)</title><rect x="896.1" y="115.0" width="6.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="899.1" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (241 samples, 2.41%)</title><rect x="902.2" y="115.0" width="28.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="905.2" y="126.0">on..</text>
</g>
<g>
<title>byte[] (89 samples, 0.89%)</title><rect x="902.2" y="99.0" width="10.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="905.2" y="110.0"></text>
</g>
<g>
<title>java.lang.String[] (91 samples, 0.91%)</title><rect x="913.0" y="99.0" width="10.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="916.0" y="110.0"></text>
</g>
<g>
<title>java.lang.String (54 samples, 0.54%)</title><rect x="923.7" y="99.0" width="6.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="926.7" y="110.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (3 samples, 0.03%)</title><rect x="930.3" y="99.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="933.3" y="110.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.03%)</title><rect x="930.3" y="83.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="933.3" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.upsert (127 samples, 1.27%)</title><rect x="930.6" y="115.0" width="15.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="933.6" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.upsert (127 samples, 1.27%)</title><rect x="930.6" y="99.0" width="15.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="933.6" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.upsert (126 samples, 1.26%)</title><rect x="930.7" y="83.0" width="14.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="933.7" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (14 samples, 0.14%)</title><rect x="930.7" y="67.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="933.7" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (14 samples, 0.14%)</title><rect x="930.7" y="51.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="933.7" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Index (10 samples, 0.10%)</title><rect x="930.7" y="35.0" width="1.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="933.7" y="46.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Node (4 samples, 0.04%)</title><rect x="931.9" y="35.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="934.9" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.of (59 samples, 0.59%)</title><rect x="932.4" y="67.0" width="6.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="935.4" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Row (59 samples, 0.59%)</title><rect x="932.4" y="51.0" width="6.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="935.4" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Value.of (53 samples, 0.53%)</title><rect x="939.3" y="67.0" width="6.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="942.3" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Value (53 samples, 0.53%)</title><rect x="939.3" y="51.0" width="6.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="942.3" y="62.0"></text>
</g>
<g>
<title>[worker-3 tid=21594] (1,034 samples, 10.32%)</title><rect x="945.6" y="259.0" width="121.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="948.6" y="270.0">[worker-3 tid=2..</text>
</g>
<g>
<title>java/lang/Thread.run (1,034 samples, 10.32%)</title><rect x="945.6" y="243.0" width="121.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="948.6" y="254.0">java/lang/Threa..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,034 samples, 10.32%)</title><rect x="945.6" y="227.0" width="121.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="948.6" y="238.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,034 samples, 10.32%)</title><rect x="945.6" y="211.0" width="121.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="948.6" y="222.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (45 samples, 0.45%)</title><rect x="945.6" y="195.0" width="5.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="948.6" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (45 samples, 0.45%)</title><rect x="945.6" y="179.0" width="5.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="948.6" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (45 samples, 0.45%)</title><rect x="945.6" y="163.0" width="5.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="948.6" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (45 samples, 0.45%)</title><rect x="945.6" y="147.0" width="5.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="948.6" y="158.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (45 samples, 0.45%)</title><rect x="945.6" y="131.0" width="5.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="948.6" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer$$Lambda$64/911017770.run (989 samples, 9.87%)</title><rect x="950.9" y="195.0" width="116.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="953.9" y="206.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.lambda$executeAsync$3 (989 samples, 9.87%)</title><rect x="950.9" y="179.0" width="116.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="953.9" y="190.0">ru/mail/polis/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (274 samples, 2.74%)</title><rect x="950.9" y="163.0" width="32.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="953.9" y="174.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (274 samples, 2.74%)</title><rect x="950.9" y="147.0" width="32.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="953.9" y="158.0">on..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (179 samples, 1.79%)</title><rect x="950.9" y="131.0" width="21.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="953.9" y="142.0">o..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (179 samples, 1.79%)</title><rect x="950.9" y="115.0" width="21.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="953.9" y="126.0">o..</text>
</g>
<g>
<title>byte[] (179 samples, 1.79%)</title><rect x="950.9" y="99.0" width="21.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="953.9" y="110.0">b..</text>
</g>
<g>
<title>one/nio/net/Session.write (95 samples, 0.95%)</title><rect x="972.0" y="131.0" width="11.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="975.0" y="142.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (95 samples, 0.95%)</title><rect x="972.0" y="115.0" width="11.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="975.0" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer$$Lambda$61/846366140.get (715 samples, 7.14%)</title><rect x="983.2" y="163.0" width="84.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="986.2" y="174.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.lambda$entity$1 (715 samples, 7.14%)</title><rect x="983.2" y="147.0" width="84.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="986.2" y="158.0">ru/mail/po..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (102 samples, 1.02%)</title><rect x="983.2" y="131.0" width="12.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="986.2" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (102 samples, 1.02%)</title><rect x="983.2" y="115.0" width="12.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="986.2" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (102 samples, 1.02%)</title><rect x="983.2" y="99.0" width="12.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="986.2" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.upsert (613 samples, 6.12%)</title><rect x="995.2" y="131.0" width="72.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="998.2" y="142.0">ru/mail/..</text>
</g>
<g>
<title>java/lang/String.getBytes (60 samples, 0.60%)</title><rect x="995.2" y="115.0" width="7.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="998.2" y="126.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (60 samples, 0.60%)</title><rect x="995.2" y="99.0" width="7.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="998.2" y="110.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (60 samples, 0.60%)</title><rect x="995.2" y="83.0" width="7.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="998.2" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (60 samples, 0.60%)</title><rect x="995.2" y="67.0" width="7.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="998.2" y="78.0"></text>
</g>
<g>
<title>byte[] (60 samples, 0.60%)</title><rect x="995.2" y="51.0" width="7.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="998.2" y="62.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (120 samples, 1.20%)</title><rect x="1002.2" y="115.0" width="14.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1005.2" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (120 samples, 1.20%)</title><rect x="1002.2" y="99.0" width="14.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1005.2" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (120 samples, 1.20%)</title><rect x="1002.2" y="83.0" width="14.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1005.2" y="94.0"></text>
</g>
<g>
<title>one.nio.http.Response (59 samples, 0.59%)</title><rect x="1016.4" y="115.0" width="6.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1019.4" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (218 samples, 2.18%)</title><rect x="1023.3" y="115.0" width="25.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1026.3" y="126.0">o..</text>
</g>
<g>
<title>byte[] (82 samples, 0.82%)</title><rect x="1023.3" y="99.0" width="9.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1026.3" y="110.0"></text>
</g>
<g>
<title>java.lang.String[] (65 samples, 0.65%)</title><rect x="1033.1" y="99.0" width="7.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1036.1" y="110.0"></text>
</g>
<g>
<title>java.lang.String (62 samples, 0.62%)</title><rect x="1040.8" y="99.0" width="7.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1043.8" y="110.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (5 samples, 0.05%)</title><rect x="1048.4" y="99.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1051.4" y="110.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 0.05%)</title><rect x="1048.4" y="83.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1051.4" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3 samples, 0.03%)</title><rect x="1048.7" y="67.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1051.7" y="78.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.03%)</title><rect x="1048.7" y="51.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1051.7" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.upsert (156 samples, 1.56%)</title><rect x="1049.0" y="115.0" width="18.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1052.0" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.upsert (156 samples, 1.56%)</title><rect x="1049.0" y="99.0" width="18.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1052.0" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.upsert (154 samples, 1.54%)</title><rect x="1049.2" y="83.0" width="18.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1052.2" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (4 samples, 0.04%)</title><rect x="1049.2" y="67.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1052.2" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (4 samples, 0.04%)</title><rect x="1049.2" y="51.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1052.2" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.of (79 samples, 0.79%)</title><rect x="1049.7" y="67.0" width="9.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1052.7" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Row (79 samples, 0.79%)</title><rect x="1049.7" y="51.0" width="9.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1052.7" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Value.of (71 samples, 0.71%)</title><rect x="1059.0" y="67.0" width="8.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1062.0" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Value (71 samples, 0.71%)</title><rect x="1059.0" y="51.0" width="8.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1062.0" y="62.0"></text>
</g>
<g>
<title>[worker-4 tid=21596] (1,041 samples, 10.39%)</title><rect x="1067.4" y="259.0" width="122.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1070.4" y="270.0">[worker-4 tid=2..</text>
</g>
<g>
<title>java/lang/Thread.run (1,041 samples, 10.39%)</title><rect x="1067.4" y="243.0" width="122.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1070.4" y="254.0">java/lang/Threa..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,041 samples, 10.39%)</title><rect x="1067.4" y="227.0" width="122.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1070.4" y="238.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,041 samples, 10.39%)</title><rect x="1067.4" y="211.0" width="122.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1070.4" y="222.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (62 samples, 0.62%)</title><rect x="1067.4" y="195.0" width="7.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1070.4" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (62 samples, 0.62%)</title><rect x="1067.4" y="179.0" width="7.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1070.4" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (62 samples, 0.62%)</title><rect x="1067.4" y="163.0" width="7.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1070.4" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (62 samples, 0.62%)</title><rect x="1067.4" y="147.0" width="7.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1070.4" y="158.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (62 samples, 0.62%)</title><rect x="1067.4" y="131.0" width="7.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1070.4" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer$$Lambda$64/911017770.run (979 samples, 9.77%)</title><rect x="1074.7" y="195.0" width="115.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1077.7" y="206.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.lambda$executeAsync$3 (979 samples, 9.77%)</title><rect x="1074.7" y="179.0" width="115.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1077.7" y="190.0">ru/mail/polis/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (268 samples, 2.68%)</title><rect x="1074.7" y="163.0" width="31.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1077.7" y="174.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (268 samples, 2.68%)</title><rect x="1074.7" y="147.0" width="31.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1077.7" y="158.0">on..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (184 samples, 1.84%)</title><rect x="1074.7" y="131.0" width="21.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1077.7" y="142.0">o..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (183 samples, 1.83%)</title><rect x="1074.8" y="115.0" width="21.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1077.8" y="126.0">o..</text>
</g>
<g>
<title>byte[] (183 samples, 1.83%)</title><rect x="1074.8" y="99.0" width="21.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1077.8" y="110.0">b..</text>
</g>
<g>
<title>one/nio/net/Session.write (84 samples, 0.84%)</title><rect x="1096.4" y="131.0" width="9.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1099.4" y="142.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (84 samples, 0.84%)</title><rect x="1096.4" y="115.0" width="9.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1099.4" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer$$Lambda$61/846366140.get (711 samples, 7.10%)</title><rect x="1106.3" y="163.0" width="83.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1109.3" y="174.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.lambda$entity$1 (711 samples, 7.10%)</title><rect x="1106.3" y="147.0" width="83.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1109.3" y="158.0">ru/mail/p..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (137 samples, 1.37%)</title><rect x="1106.3" y="131.0" width="16.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1109.3" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (137 samples, 1.37%)</title><rect x="1106.3" y="115.0" width="16.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1109.3" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (137 samples, 1.37%)</title><rect x="1106.3" y="99.0" width="16.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1109.3" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.upsert (574 samples, 5.73%)</title><rect x="1122.4" y="131.0" width="67.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1125.4" y="142.0">ru/mail..</text>
</g>
<g>
<title>java/lang/String.getBytes (53 samples, 0.53%)</title><rect x="1122.4" y="115.0" width="6.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1125.4" y="126.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (53 samples, 0.53%)</title><rect x="1122.4" y="99.0" width="6.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1125.4" y="110.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (53 samples, 0.53%)</title><rect x="1122.4" y="83.0" width="6.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1125.4" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (53 samples, 0.53%)</title><rect x="1122.4" y="67.0" width="6.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1125.4" y="78.0"></text>
</g>
<g>
<title>byte[] (53 samples, 0.53%)</title><rect x="1122.4" y="51.0" width="6.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1125.4" y="62.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (121 samples, 1.21%)</title><rect x="1128.6" y="115.0" width="14.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1131.6" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (121 samples, 1.21%)</title><rect x="1128.6" y="99.0" width="14.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1131.6" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (121 samples, 1.21%)</title><rect x="1128.6" y="83.0" width="14.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1131.6" y="94.0"></text>
</g>
<g>
<title>one.nio.http.Response (48 samples, 0.48%)</title><rect x="1142.9" y="115.0" width="5.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1145.9" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (220 samples, 2.20%)</title><rect x="1148.5" y="115.0" width="26.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1151.5" y="126.0">o..</text>
</g>
<g>
<title>byte[] (90 samples, 0.90%)</title><rect x="1148.5" y="99.0" width="10.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1151.5" y="110.0"></text>
</g>
<g>
<title>java.lang.String[] (66 samples, 0.66%)</title><rect x="1159.1" y="99.0" width="7.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1162.1" y="110.0"></text>
</g>
<g>
<title>java.lang.String (57 samples, 0.57%)</title><rect x="1166.9" y="99.0" width="6.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1169.9" y="110.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (5 samples, 0.05%)</title><rect x="1173.9" y="99.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1176.9" y="110.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 0.05%)</title><rect x="1173.9" y="83.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1176.9" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4 samples, 0.04%)</title><rect x="1174.0" y="67.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1177.0" y="78.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.04%)</title><rect x="1174.0" y="51.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1177.0" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.upsert (132 samples, 1.32%)</title><rect x="1174.5" y="115.0" width="15.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1177.5" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.upsert (132 samples, 1.32%)</title><rect x="1174.5" y="99.0" width="15.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1177.5" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.upsert (130 samples, 1.30%)</title><rect x="1174.7" y="83.0" width="15.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1177.7" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (8 samples, 0.08%)</title><rect x="1174.7" y="67.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1177.7" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (8 samples, 0.08%)</title><rect x="1174.7" y="51.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1177.7" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Node (6 samples, 0.06%)</title><rect x="1174.9" y="35.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1177.9" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.of (72 samples, 0.72%)</title><rect x="1175.6" y="67.0" width="8.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1178.6" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Row (72 samples, 0.72%)</title><rect x="1175.6" y="51.0" width="8.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1178.6" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Value.of (50 samples, 0.50%)</title><rect x="1184.1" y="67.0" width="5.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1187.1" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Value (50 samples, 0.50%)</title><rect x="1184.1" y="51.0" width="5.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1187.1" y="62.0"></text>
</g>
</g>
</svg>
