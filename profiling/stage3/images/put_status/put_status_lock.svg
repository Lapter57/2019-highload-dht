<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="406" onload="init(evt)" viewBox="0 0 1200 406" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="389"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="389"> </text>
<g id="frames">
<g>
<title>all (60,901 samples, 100.00%)</title><rect x="10.0" y="355.0" width="1180.0" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="13.0" y="366.0">all</text>
</g>
<g>
<title>[NIO Selector #0 tid=21457] (286 samples, 0.47%)</title><rect x="10.0" y="339.0" width="5.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="13.0" y="350.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (286 samples, 0.47%)</title><rect x="10.0" y="323.0" width="5.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.0" y="334.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (286 samples, 0.47%)</title><rect x="10.0" y="307.0" width="5.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.0" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (285 samples, 0.47%)</title><rect x="10.0" y="291.0" width="5.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.0" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (285 samples, 0.47%)</title><rect x="10.0" y="275.0" width="5.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.0" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (285 samples, 0.47%)</title><rect x="10.0" y="259.0" width="5.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.0" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (285 samples, 0.47%)</title><rect x="10.0" y="243.0" width="5.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.0" y="254.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (285 samples, 0.47%)</title><rect x="10.0" y="227.0" width="5.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="13.0" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.entity (285 samples, 0.47%)</title><rect x="10.0" y="211.0" width="5.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.0" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.executeAsync (285 samples, 0.47%)</title><rect x="10.0" y="195.0" width="5.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.0" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (285 samples, 0.47%)</title><rect x="10.0" y="179.0" width="5.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.0" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (285 samples, 0.47%)</title><rect x="10.0" y="163.0" width="5.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.0" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (188 samples, 0.31%)</title><rect x="10.0" y="147.0" width="3.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.0" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (188 samples, 0.31%)</title><rect x="10.0" y="131.0" width="3.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="13.0" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (188 samples, 0.31%)</title><rect x="10.0" y="115.0" width="3.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="13.0" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (188 samples, 0.31%)</title><rect x="10.0" y="99.0" width="3.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.0" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (188 samples, 0.31%)</title><rect x="10.0" y="83.0" width="3.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.0" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (188 samples, 0.31%)</title><rect x="10.0" y="67.0" width="3.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="13.0" y="78.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (188 samples, 0.31%)</title><rect x="10.0" y="51.0" width="3.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.0" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (188 samples, 0.31%)</title><rect x="10.0" y="35.0" width="3.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="13.0" y="46.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (97 samples, 0.16%)</title><rect x="13.6" y="147.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="16.6" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (97 samples, 0.16%)</title><rect x="13.6" y="131.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="16.6" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (97 samples, 0.16%)</title><rect x="13.6" y="115.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="16.6" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (97 samples, 0.16%)</title><rect x="13.6" y="99.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="16.6" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (97 samples, 0.16%)</title><rect x="13.6" y="83.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="16.6" y="94.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (97 samples, 0.16%)</title><rect x="13.6" y="67.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="16.6" y="78.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (97 samples, 0.16%)</title><rect x="13.6" y="51.0" width="1.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="16.6" y="62.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=21458] (196 samples, 0.32%)</title><rect x="15.5" y="339.0" width="3.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="18.5" y="350.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (196 samples, 0.32%)</title><rect x="15.5" y="323.0" width="3.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="18.5" y="334.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (196 samples, 0.32%)</title><rect x="15.5" y="307.0" width="3.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="18.5" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (195 samples, 0.32%)</title><rect x="15.5" y="291.0" width="3.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="18.5" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (195 samples, 0.32%)</title><rect x="15.5" y="275.0" width="3.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="18.5" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (195 samples, 0.32%)</title><rect x="15.5" y="259.0" width="3.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="18.5" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (195 samples, 0.32%)</title><rect x="15.5" y="243.0" width="3.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="18.5" y="254.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (195 samples, 0.32%)</title><rect x="15.5" y="227.0" width="3.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="18.5" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.entity (195 samples, 0.32%)</title><rect x="15.5" y="211.0" width="3.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="18.5" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.executeAsync (195 samples, 0.32%)</title><rect x="15.5" y="195.0" width="3.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="18.5" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (195 samples, 0.32%)</title><rect x="15.5" y="179.0" width="3.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="18.5" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (195 samples, 0.32%)</title><rect x="15.5" y="163.0" width="3.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="18.5" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (156 samples, 0.26%)</title><rect x="15.5" y="147.0" width="3.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="18.5" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (156 samples, 0.26%)</title><rect x="15.5" y="131.0" width="3.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="18.5" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (156 samples, 0.26%)</title><rect x="15.5" y="115.0" width="3.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="18.5" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (156 samples, 0.26%)</title><rect x="15.5" y="99.0" width="3.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="18.5" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (156 samples, 0.26%)</title><rect x="15.5" y="83.0" width="3.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="18.5" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (156 samples, 0.26%)</title><rect x="15.5" y="67.0" width="3.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="18.5" y="78.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (156 samples, 0.26%)</title><rect x="15.5" y="51.0" width="3.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="18.5" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (156 samples, 0.26%)</title><rect x="15.5" y="35.0" width="3.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="18.5" y="46.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (39 samples, 0.06%)</title><rect x="18.6" y="147.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="21.6" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (39 samples, 0.06%)</title><rect x="18.6" y="131.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="21.6" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (39 samples, 0.06%)</title><rect x="18.6" y="115.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="21.6" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (39 samples, 0.06%)</title><rect x="18.6" y="99.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="21.6" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (39 samples, 0.06%)</title><rect x="18.6" y="83.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="21.6" y="94.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (39 samples, 0.06%)</title><rect x="18.6" y="67.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="21.6" y="78.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (39 samples, 0.06%)</title><rect x="18.6" y="51.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="21.6" y="62.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=21459] (227 samples, 0.37%)</title><rect x="19.3" y="339.0" width="4.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="22.3" y="350.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (227 samples, 0.37%)</title><rect x="19.3" y="323.0" width="4.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="22.3" y="334.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (227 samples, 0.37%)</title><rect x="19.3" y="307.0" width="4.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="22.3" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (226 samples, 0.37%)</title><rect x="19.3" y="291.0" width="4.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="22.3" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (226 samples, 0.37%)</title><rect x="19.3" y="275.0" width="4.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="22.3" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (226 samples, 0.37%)</title><rect x="19.3" y="259.0" width="4.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="22.3" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (226 samples, 0.37%)</title><rect x="19.3" y="243.0" width="4.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="22.3" y="254.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (226 samples, 0.37%)</title><rect x="19.3" y="227.0" width="4.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="22.3" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.entity (226 samples, 0.37%)</title><rect x="19.3" y="211.0" width="4.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="22.3" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.executeAsync (226 samples, 0.37%)</title><rect x="19.3" y="195.0" width="4.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="22.3" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (226 samples, 0.37%)</title><rect x="19.3" y="179.0" width="4.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="22.3" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (226 samples, 0.37%)</title><rect x="19.3" y="163.0" width="4.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="22.3" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (177 samples, 0.29%)</title><rect x="19.3" y="147.0" width="3.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="22.3" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (177 samples, 0.29%)</title><rect x="19.3" y="131.0" width="3.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="22.3" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (177 samples, 0.29%)</title><rect x="19.3" y="115.0" width="3.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="22.3" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (177 samples, 0.29%)</title><rect x="19.3" y="99.0" width="3.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="22.3" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (177 samples, 0.29%)</title><rect x="19.3" y="83.0" width="3.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="22.3" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (177 samples, 0.29%)</title><rect x="19.3" y="67.0" width="3.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="22.3" y="78.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (177 samples, 0.29%)</title><rect x="19.3" y="51.0" width="3.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="22.3" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (177 samples, 0.29%)</title><rect x="19.3" y="35.0" width="3.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="22.3" y="46.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (49 samples, 0.08%)</title><rect x="22.8" y="147.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="25.8" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (49 samples, 0.08%)</title><rect x="22.8" y="131.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="25.8" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (49 samples, 0.08%)</title><rect x="22.8" y="115.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="25.8" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (49 samples, 0.08%)</title><rect x="22.8" y="99.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="25.8" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (49 samples, 0.08%)</title><rect x="22.8" y="83.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="25.8" y="94.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (49 samples, 0.08%)</title><rect x="22.8" y="67.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="25.8" y="78.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (49 samples, 0.08%)</title><rect x="22.8" y="51.0" width="0.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="25.8" y="62.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=21460] (202 samples, 0.33%)</title><rect x="23.7" y="339.0" width="4.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="26.7" y="350.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (202 samples, 0.33%)</title><rect x="23.7" y="323.0" width="4.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="26.7" y="334.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (202 samples, 0.33%)</title><rect x="23.7" y="307.0" width="4.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="26.7" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (200 samples, 0.33%)</title><rect x="23.7" y="291.0" width="3.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="26.7" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (200 samples, 0.33%)</title><rect x="23.7" y="275.0" width="3.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="26.7" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (200 samples, 0.33%)</title><rect x="23.7" y="259.0" width="3.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="26.7" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (200 samples, 0.33%)</title><rect x="23.7" y="243.0" width="3.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="26.7" y="254.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (200 samples, 0.33%)</title><rect x="23.7" y="227.0" width="3.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="26.7" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.entity (200 samples, 0.33%)</title><rect x="23.7" y="211.0" width="3.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="26.7" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.executeAsync (200 samples, 0.33%)</title><rect x="23.7" y="195.0" width="3.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="26.7" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (200 samples, 0.33%)</title><rect x="23.7" y="179.0" width="3.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="26.7" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (200 samples, 0.33%)</title><rect x="23.7" y="163.0" width="3.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="26.7" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (147 samples, 0.24%)</title><rect x="23.7" y="147.0" width="2.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="26.7" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (147 samples, 0.24%)</title><rect x="23.7" y="131.0" width="2.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="26.7" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (147 samples, 0.24%)</title><rect x="23.7" y="115.0" width="2.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="26.7" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (147 samples, 0.24%)</title><rect x="23.7" y="99.0" width="2.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="26.7" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (147 samples, 0.24%)</title><rect x="23.7" y="83.0" width="2.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="26.7" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (147 samples, 0.24%)</title><rect x="23.7" y="67.0" width="2.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="26.7" y="78.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (147 samples, 0.24%)</title><rect x="23.7" y="51.0" width="2.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="26.7" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (147 samples, 0.24%)</title><rect x="23.7" y="35.0" width="2.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="26.7" y="46.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (53 samples, 0.09%)</title><rect x="26.6" y="147.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="29.6" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (53 samples, 0.09%)</title><rect x="26.6" y="131.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="29.6" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (53 samples, 0.09%)</title><rect x="26.6" y="115.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="29.6" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (53 samples, 0.09%)</title><rect x="26.6" y="99.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="29.6" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (53 samples, 0.09%)</title><rect x="26.6" y="83.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="29.6" y="94.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (53 samples, 0.09%)</title><rect x="26.6" y="67.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="29.6" y="78.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (53 samples, 0.09%)</title><rect x="26.6" y="51.0" width="1.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="29.6" y="62.0"></text>
</g>
<g>
<title>[worker-0 tid=21592] (11,856 samples, 19.47%)</title><rect x="27.7" y="339.0" width="229.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="30.7" y="350.0">[worker-0 tid=21592]</text>
</g>
<g>
<title>java/lang/Thread.run (11,856 samples, 19.47%)</title><rect x="27.7" y="323.0" width="229.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="30.7" y="334.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (11,856 samples, 19.47%)</title><rect x="27.7" y="307.0" width="229.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="30.7" y="318.0">java/util/concurrent/ThreadPoo..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (11,856 samples, 19.47%)</title><rect x="27.7" y="291.0" width="229.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="30.7" y="302.0">java/util/concurrent/ThreadPoo..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (758 samples, 1.24%)</title><rect x="27.7" y="275.0" width="14.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="30.7" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (758 samples, 1.24%)</title><rect x="27.7" y="259.0" width="14.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="30.7" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (97 samples, 0.16%)</title><rect x="27.7" y="243.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="30.7" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (97 samples, 0.16%)</title><rect x="27.7" y="227.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="30.7" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (97 samples, 0.16%)</title><rect x="27.7" y="211.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="30.7" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (97 samples, 0.16%)</title><rect x="27.7" y="195.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="30.7" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (97 samples, 0.16%)</title><rect x="27.7" y="179.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="30.7" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (97 samples, 0.16%)</title><rect x="27.7" y="163.0" width="1.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="30.7" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (661 samples, 1.09%)</title><rect x="29.5" y="243.0" width="12.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="32.5" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (661 samples, 1.09%)</title><rect x="29.5" y="227.0" width="12.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="32.5" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (661 samples, 1.09%)</title><rect x="29.5" y="211.0" width="12.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="32.5" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (661 samples, 1.09%)</title><rect x="29.5" y="195.0" width="12.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="32.5" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (661 samples, 1.09%)</title><rect x="29.5" y="179.0" width="12.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="32.5" y="190.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (661 samples, 1.09%)</title><rect x="29.5" y="163.0" width="12.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="32.5" y="174.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (661 samples, 1.09%)</title><rect x="29.5" y="147.0" width="12.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="32.5" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer$$Lambda$64/911017770.run (11,098 samples, 18.22%)</title><rect x="42.3" y="275.0" width="215.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="45.3" y="286.0">ru/mail/polis/service/shakhm..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.lambda$executeAsync$3 (11,098 samples, 18.22%)</title><rect x="42.3" y="259.0" width="215.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="45.3" y="270.0">ru/mail/polis/service/shakhm..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (6,567 samples, 10.78%)</title><rect x="42.3" y="243.0" width="127.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="45.3" y="254.0">one/nio/http/Htt..</text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.StorageSession (6,567 samples, 10.78%)</title><rect x="42.3" y="227.0" width="127.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="45.3" y="238.0">ru.mail.polis.se..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer$$Lambda$61/846366140.get (4,531 samples, 7.44%)</title><rect x="169.6" y="243.0" width="87.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="172.6" y="254.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.lambda$entity$1 (4,531 samples, 7.44%)</title><rect x="169.6" y="227.0" width="87.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="172.6" y="238.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.upsert (4,531 samples, 7.44%)</title><rect x="169.6" y="211.0" width="87.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="172.6" y="222.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.upsert (4,531 samples, 7.44%)</title><rect x="169.6" y="195.0" width="87.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="172.6" y="206.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.upsert (4,531 samples, 7.44%)</title><rect x="169.6" y="179.0" width="87.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="172.6" y="190.0">ru/mail/po..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.lock (4,531 samples, 7.44%)</title><rect x="169.6" y="163.0" width="87.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="172.6" y="174.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (4,531 samples, 7.44%)</title><rect x="169.6" y="147.0" width="87.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="172.6" y="158.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (4,531 samples, 7.44%)</title><rect x="169.6" y="131.0" width="87.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="172.6" y="142.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (4,531 samples, 7.44%)</title><rect x="169.6" y="115.0" width="87.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="172.6" y="126.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (4,531 samples, 7.44%)</title><rect x="169.6" y="99.0" width="87.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="172.6" y="110.0">java/util/..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (4,531 samples, 7.44%)</title><rect x="169.6" y="83.0" width="87.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="172.6" y="94.0">jdk/intern..</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync (4,531 samples, 7.44%)</title><rect x="169.6" y="67.0" width="87.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="172.6" y="78.0">java.util...</text>
</g>
<g>
<title>[worker-1 tid=21595] (11,886 samples, 19.52%)</title><rect x="257.4" y="339.0" width="230.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="260.4" y="350.0">[worker-1 tid=21595]</text>
</g>
<g>
<title>java/lang/Thread.run (11,886 samples, 19.52%)</title><rect x="257.4" y="323.0" width="230.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="260.4" y="334.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (11,886 samples, 19.52%)</title><rect x="257.4" y="307.0" width="230.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="260.4" y="318.0">java/util/concurrent/ThreadPoo..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (11,886 samples, 19.52%)</title><rect x="257.4" y="291.0" width="230.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="260.4" y="302.0">java/util/concurrent/ThreadPoo..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (718 samples, 1.18%)</title><rect x="257.4" y="275.0" width="13.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="260.4" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (718 samples, 1.18%)</title><rect x="257.4" y="259.0" width="13.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="260.4" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (111 samples, 0.18%)</title><rect x="257.4" y="243.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="260.4" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (111 samples, 0.18%)</title><rect x="257.4" y="227.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="260.4" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (111 samples, 0.18%)</title><rect x="257.4" y="211.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="260.4" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (111 samples, 0.18%)</title><rect x="257.4" y="195.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="260.4" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (111 samples, 0.18%)</title><rect x="257.4" y="179.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="260.4" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (111 samples, 0.18%)</title><rect x="257.4" y="163.0" width="2.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="260.4" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (607 samples, 1.00%)</title><rect x="259.5" y="243.0" width="11.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="262.5" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (607 samples, 1.00%)</title><rect x="259.5" y="227.0" width="11.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="262.5" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (607 samples, 1.00%)</title><rect x="259.5" y="211.0" width="11.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="262.5" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (607 samples, 1.00%)</title><rect x="259.5" y="195.0" width="11.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="262.5" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (607 samples, 1.00%)</title><rect x="259.5" y="179.0" width="11.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="262.5" y="190.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (607 samples, 1.00%)</title><rect x="259.5" y="163.0" width="11.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="262.5" y="174.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (607 samples, 1.00%)</title><rect x="259.5" y="147.0" width="11.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="262.5" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer$$Lambda$64/911017770.run (11,168 samples, 18.34%)</title><rect x="271.3" y="275.0" width="216.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="274.3" y="286.0">ru/mail/polis/service/shakhm..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.lambda$executeAsync$3 (11,168 samples, 18.34%)</title><rect x="271.3" y="259.0" width="216.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="274.3" y="270.0">ru/mail/polis/service/shakhm..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (6,463 samples, 10.61%)</title><rect x="271.3" y="243.0" width="125.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="274.3" y="254.0">one/nio/http/Ht..</text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.StorageSession (6,463 samples, 10.61%)</title><rect x="271.3" y="227.0" width="125.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="274.3" y="238.0">ru.mail.polis.s..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer$$Lambda$61/846366140.get (4,705 samples, 7.73%)</title><rect x="396.5" y="243.0" width="91.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="399.5" y="254.0">ru/mail/pol..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.lambda$entity$1 (4,705 samples, 7.73%)</title><rect x="396.5" y="227.0" width="91.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="399.5" y="238.0">ru/mail/pol..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.upsert (4,705 samples, 7.73%)</title><rect x="396.5" y="211.0" width="91.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="399.5" y="222.0">ru/mail/pol..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.upsert (4,705 samples, 7.73%)</title><rect x="396.5" y="195.0" width="91.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="399.5" y="206.0">ru/mail/pol..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.upsert (4,705 samples, 7.73%)</title><rect x="396.5" y="179.0" width="91.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="399.5" y="190.0">ru/mail/pol..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.lock (4,703 samples, 7.72%)</title><rect x="396.5" y="163.0" width="91.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="399.5" y="174.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (4,703 samples, 7.72%)</title><rect x="396.5" y="147.0" width="91.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="399.5" y="158.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (4,703 samples, 7.72%)</title><rect x="396.5" y="131.0" width="91.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="399.5" y="142.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (4,703 samples, 7.72%)</title><rect x="396.5" y="115.0" width="91.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="399.5" y="126.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (4,703 samples, 7.72%)</title><rect x="396.5" y="99.0" width="91.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="399.5" y="110.0">java/util/c..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (4,703 samples, 7.72%)</title><rect x="396.5" y="83.0" width="91.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="399.5" y="94.0">jdk/interna..</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync (4,703 samples, 7.72%)</title><rect x="396.5" y="67.0" width="91.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="399.5" y="78.0">java.util.c..</text>
</g>
<g>
<title>[worker-2 tid=21593] (12,070 samples, 19.82%)</title><rect x="487.7" y="339.0" width="233.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="490.7" y="350.0">[worker-2 tid=21593]</text>
</g>
<g>
<title>java/lang/Thread.run (12,070 samples, 19.82%)</title><rect x="487.7" y="323.0" width="233.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="490.7" y="334.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (12,070 samples, 19.82%)</title><rect x="487.7" y="307.0" width="233.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="490.7" y="318.0">java/util/concurrent/ThreadPool..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (12,070 samples, 19.82%)</title><rect x="487.7" y="291.0" width="233.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="490.7" y="302.0">java/util/concurrent/ThreadPool..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (754 samples, 1.24%)</title><rect x="487.7" y="275.0" width="14.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="490.7" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (754 samples, 1.24%)</title><rect x="487.7" y="259.0" width="14.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="490.7" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (88 samples, 0.14%)</title><rect x="487.7" y="243.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="490.7" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (88 samples, 0.14%)</title><rect x="487.7" y="227.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="490.7" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (88 samples, 0.14%)</title><rect x="487.7" y="211.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="490.7" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (88 samples, 0.14%)</title><rect x="487.7" y="195.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="490.7" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (88 samples, 0.14%)</title><rect x="487.7" y="179.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="490.7" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (88 samples, 0.14%)</title><rect x="487.7" y="163.0" width="1.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="490.7" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (666 samples, 1.09%)</title><rect x="489.4" y="243.0" width="12.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="492.4" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (666 samples, 1.09%)</title><rect x="489.4" y="227.0" width="12.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="492.4" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (666 samples, 1.09%)</title><rect x="489.4" y="211.0" width="12.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="492.4" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (666 samples, 1.09%)</title><rect x="489.4" y="195.0" width="12.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="492.4" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (666 samples, 1.09%)</title><rect x="489.4" y="179.0" width="12.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="492.4" y="190.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (666 samples, 1.09%)</title><rect x="489.4" y="163.0" width="12.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="492.4" y="174.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (666 samples, 1.09%)</title><rect x="489.4" y="147.0" width="12.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="492.4" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer$$Lambda$64/911017770.run (11,316 samples, 18.58%)</title><rect x="502.3" y="275.0" width="219.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="505.3" y="286.0">ru/mail/polis/service/shakhmi..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.lambda$executeAsync$3 (11,316 samples, 18.58%)</title><rect x="502.3" y="259.0" width="219.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="505.3" y="270.0">ru/mail/polis/service/shakhmi..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (6,662 samples, 10.94%)</title><rect x="502.3" y="243.0" width="129.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="505.3" y="254.0">one/nio/http/Htt..</text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.StorageSession (6,662 samples, 10.94%)</title><rect x="502.3" y="227.0" width="129.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="505.3" y="238.0">ru.mail.polis.se..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer$$Lambda$61/846366140.get (4,654 samples, 7.64%)</title><rect x="631.4" y="243.0" width="90.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="634.4" y="254.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.lambda$entity$1 (4,654 samples, 7.64%)</title><rect x="631.4" y="227.0" width="90.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="634.4" y="238.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.upsert (4,654 samples, 7.64%)</title><rect x="631.4" y="211.0" width="90.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="634.4" y="222.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.upsert (4,654 samples, 7.64%)</title><rect x="631.4" y="195.0" width="90.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="634.4" y="206.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.upsert (4,654 samples, 7.64%)</title><rect x="631.4" y="179.0" width="90.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="634.4" y="190.0">ru/mail/po..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.lock (4,654 samples, 7.64%)</title><rect x="631.4" y="163.0" width="90.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="634.4" y="174.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (4,654 samples, 7.64%)</title><rect x="631.4" y="147.0" width="90.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="634.4" y="158.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (4,654 samples, 7.64%)</title><rect x="631.4" y="131.0" width="90.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="634.4" y="142.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (4,654 samples, 7.64%)</title><rect x="631.4" y="115.0" width="90.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="634.4" y="126.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (4,654 samples, 7.64%)</title><rect x="631.4" y="99.0" width="90.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="634.4" y="110.0">java/util/..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (4,654 samples, 7.64%)</title><rect x="631.4" y="83.0" width="90.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="634.4" y="94.0">jdk/intern..</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync (4,654 samples, 7.64%)</title><rect x="631.4" y="67.0" width="90.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="634.4" y="78.0">java.util...</text>
</g>
<g>
<title>[worker-3 tid=21594] (12,142 samples, 19.94%)</title><rect x="721.5" y="339.0" width="235.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="724.5" y="350.0">[worker-3 tid=21594]</text>
</g>
<g>
<title>java/lang/Thread.run (12,142 samples, 19.94%)</title><rect x="721.5" y="323.0" width="235.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="724.5" y="334.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (12,142 samples, 19.94%)</title><rect x="721.5" y="307.0" width="235.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="724.5" y="318.0">java/util/concurrent/ThreadPool..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (12,142 samples, 19.94%)</title><rect x="721.5" y="291.0" width="235.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="724.5" y="302.0">java/util/concurrent/ThreadPool..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (719 samples, 1.18%)</title><rect x="721.5" y="275.0" width="14.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="724.5" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (719 samples, 1.18%)</title><rect x="721.5" y="259.0" width="14.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="724.5" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (92 samples, 0.15%)</title><rect x="721.5" y="243.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="724.5" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (92 samples, 0.15%)</title><rect x="721.5" y="227.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="724.5" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (92 samples, 0.15%)</title><rect x="721.5" y="211.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="724.5" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (92 samples, 0.15%)</title><rect x="721.5" y="195.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="724.5" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (92 samples, 0.15%)</title><rect x="721.5" y="179.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="724.5" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (92 samples, 0.15%)</title><rect x="721.5" y="163.0" width="1.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="724.5" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (627 samples, 1.03%)</title><rect x="723.3" y="243.0" width="12.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="726.3" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (627 samples, 1.03%)</title><rect x="723.3" y="227.0" width="12.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="726.3" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (627 samples, 1.03%)</title><rect x="723.3" y="211.0" width="12.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="726.3" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (627 samples, 1.03%)</title><rect x="723.3" y="195.0" width="12.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="726.3" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (627 samples, 1.03%)</title><rect x="723.3" y="179.0" width="12.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="726.3" y="190.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (627 samples, 1.03%)</title><rect x="723.3" y="163.0" width="12.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="726.3" y="174.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (627 samples, 1.03%)</title><rect x="723.3" y="147.0" width="12.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="726.3" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer$$Lambda$64/911017770.run (11,423 samples, 18.76%)</title><rect x="735.5" y="275.0" width="221.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="738.5" y="286.0">ru/mail/polis/service/shakhmi..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.lambda$executeAsync$3 (11,423 samples, 18.76%)</title><rect x="735.5" y="259.0" width="221.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="738.5" y="270.0">ru/mail/polis/service/shakhmi..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (6,600 samples, 10.84%)</title><rect x="735.5" y="243.0" width="127.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="738.5" y="254.0">one/nio/http/Htt..</text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.StorageSession (6,600 samples, 10.84%)</title><rect x="735.5" y="227.0" width="127.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="738.5" y="238.0">ru.mail.polis.se..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer$$Lambda$61/846366140.get (4,823 samples, 7.92%)</title><rect x="863.3" y="243.0" width="93.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="866.3" y="254.0">ru/mail/pol..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.lambda$entity$1 (4,823 samples, 7.92%)</title><rect x="863.3" y="227.0" width="93.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="866.3" y="238.0">ru/mail/pol..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.upsert (4,823 samples, 7.92%)</title><rect x="863.3" y="211.0" width="93.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="866.3" y="222.0">ru/mail/pol..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.upsert (4,823 samples, 7.92%)</title><rect x="863.3" y="195.0" width="93.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="866.3" y="206.0">ru/mail/pol..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.upsert (4,823 samples, 7.92%)</title><rect x="863.3" y="179.0" width="93.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="866.3" y="190.0">ru/mail/pol..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.lock (4,822 samples, 7.92%)</title><rect x="863.3" y="163.0" width="93.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="866.3" y="174.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (4,822 samples, 7.92%)</title><rect x="863.3" y="147.0" width="93.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="866.3" y="158.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (4,822 samples, 7.92%)</title><rect x="863.3" y="131.0" width="93.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="866.3" y="142.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (4,822 samples, 7.92%)</title><rect x="863.3" y="115.0" width="93.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="866.3" y="126.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (4,822 samples, 7.92%)</title><rect x="863.3" y="99.0" width="93.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="866.3" y="110.0">java/util/c..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (4,822 samples, 7.92%)</title><rect x="863.3" y="83.0" width="93.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="866.3" y="94.0">jdk/interna..</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync (4,822 samples, 7.92%)</title><rect x="863.3" y="67.0" width="93.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="866.3" y="78.0">java.util.c..</text>
</g>
<g>
<title>[worker-4 tid=21596] (12,036 samples, 19.76%)</title><rect x="956.8" y="339.0" width="233.2" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="959.8" y="350.0">[worker-4 tid=21596]</text>
</g>
<g>
<title>java/lang/Thread.run (12,036 samples, 19.76%)</title><rect x="956.8" y="323.0" width="233.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="959.8" y="334.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (12,036 samples, 19.76%)</title><rect x="956.8" y="307.0" width="233.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="959.8" y="318.0">java/util/concurrent/ThreadPool..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (12,036 samples, 19.76%)</title><rect x="956.8" y="291.0" width="233.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="959.8" y="302.0">java/util/concurrent/ThreadPool..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (704 samples, 1.16%)</title><rect x="956.8" y="275.0" width="13.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="959.8" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (704 samples, 1.16%)</title><rect x="956.8" y="259.0" width="13.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="959.8" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (91 samples, 0.15%)</title><rect x="956.8" y="243.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="959.8" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (91 samples, 0.15%)</title><rect x="956.8" y="227.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="959.8" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (91 samples, 0.15%)</title><rect x="956.8" y="211.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="959.8" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (91 samples, 0.15%)</title><rect x="956.8" y="195.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="959.8" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (91 samples, 0.15%)</title><rect x="956.8" y="179.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="959.8" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (91 samples, 0.15%)</title><rect x="956.8" y="163.0" width="1.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="959.8" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (613 samples, 1.01%)</title><rect x="958.6" y="243.0" width="11.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="961.6" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (613 samples, 1.01%)</title><rect x="958.6" y="227.0" width="11.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="961.6" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (613 samples, 1.01%)</title><rect x="958.6" y="211.0" width="11.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="961.6" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (613 samples, 1.01%)</title><rect x="958.6" y="195.0" width="11.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="961.6" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (613 samples, 1.01%)</title><rect x="958.6" y="179.0" width="11.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="961.6" y="190.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (613 samples, 1.01%)</title><rect x="958.6" y="163.0" width="11.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="961.6" y="174.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (613 samples, 1.01%)</title><rect x="958.6" y="147.0" width="11.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="961.6" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer$$Lambda$64/911017770.run (11,332 samples, 18.61%)</title><rect x="970.4" y="275.0" width="219.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="973.4" y="286.0">ru/mail/polis/service/shakhmi..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.lambda$executeAsync$3 (11,332 samples, 18.61%)</title><rect x="970.4" y="259.0" width="219.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="973.4" y="270.0">ru/mail/polis/service/shakhmi..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (6,492 samples, 10.66%)</title><rect x="970.4" y="243.0" width="125.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="973.4" y="254.0">one/nio/http/Ht..</text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.StorageSession (6,492 samples, 10.66%)</title><rect x="970.4" y="227.0" width="125.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="973.4" y="238.0">ru.mail.polis.s..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer$$Lambda$61/846366140.get (4,840 samples, 7.95%)</title><rect x="1096.2" y="243.0" width="93.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1099.2" y="254.0">ru/mail/pol..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.lambda$entity$1 (4,840 samples, 7.95%)</title><rect x="1096.2" y="227.0" width="93.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1099.2" y="238.0">ru/mail/pol..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.upsert (4,840 samples, 7.95%)</title><rect x="1096.2" y="211.0" width="93.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1099.2" y="222.0">ru/mail/pol..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.upsert (4,840 samples, 7.95%)</title><rect x="1096.2" y="195.0" width="93.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1099.2" y="206.0">ru/mail/pol..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.upsert (4,840 samples, 7.95%)</title><rect x="1096.2" y="179.0" width="93.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1099.2" y="190.0">ru/mail/pol..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.lock (4,840 samples, 7.95%)</title><rect x="1096.2" y="163.0" width="93.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1099.2" y="174.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (4,840 samples, 7.95%)</title><rect x="1096.2" y="147.0" width="93.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1099.2" y="158.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (4,840 samples, 7.95%)</title><rect x="1096.2" y="131.0" width="93.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1099.2" y="142.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (4,840 samples, 7.95%)</title><rect x="1096.2" y="115.0" width="93.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1099.2" y="126.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (4,840 samples, 7.95%)</title><rect x="1096.2" y="99.0" width="93.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1099.2" y="110.0">java/util/c..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (4,840 samples, 7.95%)</title><rect x="1096.2" y="83.0" width="93.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1099.2" y="94.0">jdk/interna..</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync (4,840 samples, 7.95%)</title><rect x="1096.2" y="67.0" width="93.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1099.2" y="78.0">java.util.c..</text>
</g>
</g>
</svg>
