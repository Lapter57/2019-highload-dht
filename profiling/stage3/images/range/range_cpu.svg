<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="870" onload="init(evt)" viewBox="0 0 1200 870" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="853"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="853"> </text>
<g id="frames">
<g>
<title>all (11,424 samples, 100.00%)</title><rect x="10.0" y="819.0" width="1180.0" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="13.0" y="830.0">all</text>
</g>
<g>
<title>[NIO Selector #0 tid=25370] (2,742 samples, 24.00%)</title><rect x="10.1" y="803.0" width="283.2" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="13.1" y="814.0">[NIO Selector #0 tid=25370]</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (17 samples, 0.15%)</title><rect x="10.2" y="787.0" width="1.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="13.2" y="798.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (16 samples, 0.14%)</title><rect x="10.3" y="771.0" width="1.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="13.3" y="782.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (16 samples, 0.14%)</title><rect x="10.3" y="755.0" width="1.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="13.3" y="766.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (14 samples, 0.12%)</title><rect x="10.3" y="739.0" width="1.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="13.3" y="750.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (13 samples, 0.11%)</title><rect x="10.4" y="723.0" width="1.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="13.4" y="734.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (6 samples, 0.05%)</title><rect x="10.6" y="707.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="13.6" y="718.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (4 samples, 0.04%)</title><rect x="10.7" y="691.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="13.7" y="702.0"></text>
</g>
<g>
<title>MutatorAllocRegion::retire(bool) (3 samples, 0.03%)</title><rect x="10.7" y="675.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="13.7" y="686.0"></text>
</g>
<g>
<title>__memset_avx2_unaligned_erms (3 samples, 0.03%)</title><rect x="11.4" y="707.0" width="0.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="14.4" y="718.0"></text>
</g>
<g>
<title>[not_walkable_Java] (3 samples, 0.03%)</title><rect x="12.0" y="787.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="15.0" y="798.0"></text>
</g>
<g>
<title>[unknown_Java] (26 samples, 0.23%)</title><rect x="12.3" y="787.0" width="2.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="15.3" y="798.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (2,694 samples, 23.58%)</title><rect x="15.1" y="787.0" width="278.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="18.1" y="798.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (3 samples, 0.03%)</title><rect x="15.2" y="771.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="18.2" y="782.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (3 samples, 0.03%)</title><rect x="15.2" y="755.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="18.2" y="766.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (21 samples, 0.18%)</title><rect x="15.5" y="771.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="18.5" y="782.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (21 samples, 0.18%)</title><rect x="15.5" y="755.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="18.5" y="766.0"></text>
</g>
<g>
<title>.annobin_epoll_wait.c (20 samples, 0.18%)</title><rect x="15.5" y="739.0" width="2.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="18.5" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (19 samples, 0.17%)</title><rect x="15.5" y="723.0" width="1.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="18.5" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (19 samples, 0.17%)</title><rect x="15.5" y="707.0" width="1.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="18.5" y="718.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (19 samples, 0.17%)</title><rect x="15.5" y="691.0" width="1.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="18.5" y="702.0"></text>
</g>
<g>
<title>do_epoll_wait (19 samples, 0.17%)</title><rect x="15.5" y="675.0" width="1.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="18.5" y="686.0"></text>
</g>
<g>
<title>ep_poll (19 samples, 0.17%)</title><rect x="15.5" y="659.0" width="1.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="18.5" y="670.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (19 samples, 0.17%)</title><rect x="15.5" y="643.0" width="1.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="18.5" y="654.0"></text>
</g>
<g>
<title>ep_send_events_proc (18 samples, 0.16%)</title><rect x="15.5" y="627.0" width="1.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="18.5" y="638.0"></text>
</g>
<g>
<title>__list_del_entry_valid (3 samples, 0.03%)</title><rect x="15.8" y="611.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="18.8" y="622.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (12 samples, 0.11%)</title><rect x="16.1" y="611.0" width="1.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="19.1" y="622.0"></text>
</g>
<g>
<title>sock_poll (9 samples, 0.08%)</title><rect x="16.4" y="595.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="19.4" y="606.0"></text>
</g>
<g>
<title>tcp_poll (6 samples, 0.05%)</title><rect x="16.7" y="579.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="19.7" y="590.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (4 samples, 0.04%)</title><rect x="16.9" y="563.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="19.9" y="574.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (2,669 samples, 23.36%)</title><rect x="17.6" y="771.0" width="275.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="20.6" y="782.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (2,655 samples, 23.24%)</title><rect x="17.7" y="755.0" width="274.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="20.7" y="766.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (2,597 samples, 22.73%)</title><rect x="18.0" y="739.0" width="268.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="21.0" y="750.0">one/nio/http/HttpSession.processHttp..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (2,587 samples, 22.65%)</title><rect x="18.1" y="723.0" width="267.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="21.1" y="734.0">one/nio/http/HttpSession.handleParse..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (2,587 samples, 22.65%)</title><rect x="18.1" y="707.0" width="267.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="21.1" y="718.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler2_entities.handleRequest (2,587 samples, 22.65%)</title><rect x="18.1" y="691.0" width="267.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="21.1" y="702.0">RequestHandler2_entities.handleRequest</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (5 samples, 0.04%)</title><rect x="18.1" y="675.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="21.1" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.entities (2,582 samples, 22.60%)</title><rect x="18.6" y="675.0" width="266.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="21.6" y="686.0">ru/mail/polis/service/shakhmin/Async..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.range (744 samples, 6.51%)</title><rect x="18.6" y="659.0" width="76.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="21.6" y="670.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.until (41 samples, 0.36%)</title><rect x="18.8" y="643.0" width="4.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="21.8" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$UntilIterator.&lt;init&gt; (41 samples, 0.36%)</title><rect x="18.8" y="627.0" width="4.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="21.8" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (39 samples, 0.34%)</title><rect x="18.8" y="611.0" width="4.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="21.8" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (39 samples, 0.34%)</title><rect x="18.8" y="595.0" width="4.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="21.8" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (39 samples, 0.34%)</title><rect x="18.8" y="579.0" width="4.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="21.8" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (39 samples, 0.34%)</title><rect x="18.8" y="563.0" width="4.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="21.8" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (38 samples, 0.33%)</title><rect x="18.9" y="547.0" width="3.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="21.9" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (36 samples, 0.32%)</title><rect x="18.9" y="531.0" width="3.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="21.9" y="542.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (16 samples, 0.14%)</title><rect x="18.9" y="515.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="21.9" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (16 samples, 0.14%)</title><rect x="18.9" y="499.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="21.9" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (16 samples, 0.14%)</title><rect x="18.9" y="483.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="21.9" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (16 samples, 0.14%)</title><rect x="18.9" y="467.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="21.9" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (16 samples, 0.14%)</title><rect x="18.9" y="451.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="21.9" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/123226378.compare (15 samples, 0.13%)</title><rect x="19.0" y="435.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="22.0" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (15 samples, 0.13%)</title><rect x="19.0" y="419.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="22.0" y="430.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (15 samples, 0.13%)</title><rect x="19.0" y="403.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="22.0" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (15 samples, 0.13%)</title><rect x="19.0" y="387.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="22.0" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (15 samples, 0.13%)</title><rect x="19.0" y="371.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="22.0" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (15 samples, 0.13%)</title><rect x="19.0" y="355.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="22.0" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$67/1497891062.compare (15 samples, 0.13%)</title><rect x="19.0" y="339.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="22.0" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (15 samples, 0.13%)</title><rect x="19.0" y="323.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="22.0" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (7 samples, 0.06%)</title><rect x="19.2" y="307.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="22.2" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (6 samples, 0.05%)</title><rect x="19.3" y="291.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="22.3" y="302.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (6 samples, 0.05%)</title><rect x="19.3" y="275.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="22.3" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$66/474651931.apply (6 samples, 0.05%)</title><rect x="19.9" y="307.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="22.9" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (6 samples, 0.05%)</title><rect x="19.9" y="291.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="22.9" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (6 samples, 0.05%)</title><rect x="19.9" y="275.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="22.9" y="286.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (6 samples, 0.05%)</title><rect x="19.9" y="259.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="22.9" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (6 samples, 0.05%)</title><rect x="19.9" y="243.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="22.9" y="254.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (6 samples, 0.05%)</title><rect x="19.9" y="227.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="22.9" y="238.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (6 samples, 0.05%)</title><rect x="19.9" y="211.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="22.9" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (6 samples, 0.05%)</title><rect x="19.9" y="195.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="22.9" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (6 samples, 0.05%)</title><rect x="19.9" y="179.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="22.9" y="190.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (3 samples, 0.03%)</title><rect x="20.2" y="163.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="23.2" y="174.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (20 samples, 0.18%)</title><rect x="20.5" y="515.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="23.5" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (20 samples, 0.18%)</title><rect x="20.5" y="499.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="23.5" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (20 samples, 0.18%)</title><rect x="20.5" y="483.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="23.5" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (20 samples, 0.18%)</title><rect x="20.5" y="467.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="23.5" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (20 samples, 0.18%)</title><rect x="20.5" y="451.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="23.5" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (20 samples, 0.18%)</title><rect x="20.5" y="435.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="23.5" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (6 samples, 0.05%)</title><rect x="20.5" y="419.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="23.5" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (5 samples, 0.04%)</title><rect x="20.6" y="403.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="23.6" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (5 samples, 0.04%)</title><rect x="20.6" y="387.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="23.6" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (5 samples, 0.04%)</title><rect x="20.6" y="371.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="23.6" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.valueAt (3 samples, 0.03%)</title><rect x="20.8" y="355.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="23.8" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/123226378.compare (14 samples, 0.12%)</title><rect x="21.2" y="419.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="24.2" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (14 samples, 0.12%)</title><rect x="21.2" y="403.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="24.2" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (14 samples, 0.12%)</title><rect x="21.2" y="387.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="24.2" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (14 samples, 0.12%)</title><rect x="21.2" y="371.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="24.2" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (11 samples, 0.10%)</title><rect x="21.5" y="355.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="24.5" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (11 samples, 0.10%)</title><rect x="21.5" y="339.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="24.5" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$67/1497891062.compare (9 samples, 0.08%)</title><rect x="21.7" y="323.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="24.7" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (9 samples, 0.08%)</title><rect x="21.7" y="307.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="24.7" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 0.04%)</title><rect x="21.7" y="291.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="24.7" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 0.04%)</title><rect x="21.7" y="275.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="24.7" y="286.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (4 samples, 0.04%)</title><rect x="21.7" y="259.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="24.7" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$66/474651931.apply (5 samples, 0.04%)</title><rect x="22.1" y="291.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="25.1" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (5 samples, 0.04%)</title><rect x="22.1" y="275.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="25.1" y="286.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (3 samples, 0.03%)</title><rect x="22.1" y="259.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="25.1" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (3 samples, 0.03%)</title><rect x="22.1" y="243.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="25.1" y="254.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (3 samples, 0.03%)</title><rect x="22.1" y="227.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="25.1" y="238.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (3 samples, 0.03%)</title><rect x="22.1" y="211.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="25.1" y="222.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (3 samples, 0.03%)</title><rect x="22.1" y="195.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="25.1" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.03%)</title><rect x="22.1" y="179.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="25.1" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.03%)</title><rect x="22.1" y="163.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="25.1" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.iterator (701 samples, 6.14%)</title><rect x="23.0" y="643.0" width="72.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="26.0" y="654.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.rowsIterator (701 samples, 6.14%)</title><rect x="23.0" y="627.0" width="72.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="26.0" y="638.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (590 samples, 5.16%)</title><rect x="23.1" y="611.0" width="61.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="26.1" y="622.0">ru/mai..</text>
</g>
<g>
<title>java/util/ArrayList.add (7 samples, 0.06%)</title><rect x="23.4" y="595.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="26.4" y="606.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (4 samples, 0.04%)</title><rect x="23.7" y="579.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="26.7" y="590.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (4 samples, 0.04%)</title><rect x="23.7" y="563.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="26.7" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (4 samples, 0.04%)</title><rect x="23.7" y="547.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="26.7" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (3 samples, 0.03%)</title><rect x="23.8" y="531.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="26.8" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.next (36 samples, 0.32%)</title><rect x="24.2" y="595.0" width="3.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="27.2" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (36 samples, 0.32%)</title><rect x="24.2" y="579.0" width="3.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="27.2" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.descend (36 samples, 0.32%)</title><rect x="24.2" y="563.0" width="3.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="27.2" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.tooLow (3 samples, 0.03%)</title><rect x="24.2" y="547.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="27.2" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (33 samples, 0.29%)</title><rect x="24.5" y="547.0" width="3.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="27.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (6 samples, 0.05%)</title><rect x="25.4" y="531.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="28.4" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (18 samples, 0.16%)</title><rect x="26.0" y="531.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="29.0" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (11 samples, 0.10%)</title><rect x="26.7" y="515.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="29.7" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (9 samples, 0.08%)</title><rect x="26.9" y="499.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="29.9" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (9 samples, 0.08%)</title><rect x="26.9" y="483.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="29.9" y="494.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (9 samples, 0.08%)</title><rect x="26.9" y="467.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="29.9" y="478.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (5 samples, 0.04%)</title><rect x="27.4" y="451.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="30.4" y="462.0"></text>
</g>
<g>
<title>java/lang/Long.compareTo (3 samples, 0.03%)</title><rect x="27.6" y="435.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="30.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (8 samples, 0.07%)</title><rect x="27.9" y="595.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="30.9" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (8 samples, 0.07%)</title><rect x="27.9" y="579.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="30.9" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (5 samples, 0.04%)</title><rect x="28.2" y="563.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="31.2" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.hiNode (5 samples, 0.04%)</title><rect x="28.2" y="547.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="31.2" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findLast (5 samples, 0.04%)</title><rect x="28.2" y="531.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="31.2" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.iterator (37 samples, 0.32%)</title><rect x="28.7" y="595.0" width="3.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="31.7" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (34 samples, 0.30%)</title><rect x="28.7" y="579.0" width="3.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="31.7" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (5 samples, 0.04%)</title><rect x="28.8" y="563.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="31.8" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (5 samples, 0.04%)</title><rect x="28.8" y="547.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="31.8" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (5 samples, 0.04%)</title><rect x="28.8" y="531.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="31.8" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.hiNode (5 samples, 0.04%)</title><rect x="28.8" y="515.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="31.8" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findLast (3 samples, 0.03%)</title><rect x="29.0" y="499.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="32.0" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.iterator (28 samples, 0.25%)</title><rect x="29.3" y="563.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="32.3" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (28 samples, 0.25%)</title><rect x="29.3" y="547.0" width="2.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="32.3" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (28 samples, 0.25%)</title><rect x="29.3" y="531.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="32.3" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (28 samples, 0.25%)</title><rect x="29.3" y="515.0" width="2.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="32.3" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.hiNode (6 samples, 0.05%)</title><rect x="29.3" y="499.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="32.3" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findLast (6 samples, 0.05%)</title><rect x="29.3" y="483.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="32.3" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (21 samples, 0.18%)</title><rect x="30.0" y="499.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="33.0" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (21 samples, 0.18%)</title><rect x="30.0" y="483.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="33.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (21 samples, 0.18%)</title><rect x="30.0" y="467.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="33.0" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (10 samples, 0.09%)</title><rect x="31.2" y="451.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="34.2" y="462.0"></text>
</g>
<g>
<title>vectorizedMismatch (6 samples, 0.05%)</title><rect x="31.6" y="435.0" width="0.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="34.6" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.reduceIterators (3 samples, 0.03%)</title><rect x="32.2" y="579.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="35.2" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.iterator (499 samples, 4.37%)</title><rect x="32.5" y="595.0" width="51.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="35.5" y="606.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.&lt;init&gt; (497 samples, 4.35%)</title><rect x="32.6" y="579.0" width="51.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="35.6" y="590.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.position (497 samples, 4.35%)</title><rect x="32.6" y="563.0" width="51.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="35.6" y="574.0">ru/ma..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (130 samples, 1.14%)</title><rect x="34.3" y="547.0" width="13.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="37.3" y="558.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (102 samples, 0.89%)</title><rect x="35.5" y="531.0" width="10.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="38.5" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.base (6 samples, 0.05%)</title><rect x="40.6" y="515.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="43.6" y="526.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (12 samples, 0.11%)</title><rect x="41.2" y="515.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="44.2" y="526.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (7 samples, 0.06%)</title><rect x="41.7" y="499.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="44.7" y="510.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.base (7 samples, 0.06%)</title><rect x="42.4" y="515.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="45.4" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (8 samples, 0.07%)</title><rect x="43.2" y="515.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="46.2" y="526.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (3 samples, 0.03%)</title><rect x="43.7" y="499.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="46.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/util/ArraysSupport.vectorizedMismatch (11 samples, 0.10%)</title><rect x="44.0" y="515.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="47.0" y="526.0"></text>
</g>
<g>
<title>vtable stub (9 samples, 0.08%)</title><rect x="45.1" y="515.0" width="0.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="48.1" y="526.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (11 samples, 0.10%)</title><rect x="46.0" y="531.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="49.0" y="542.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (7 samples, 0.06%)</title><rect x="46.5" y="515.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="49.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/util/ArraysSupport.vectorizedMismatch (4 samples, 0.04%)</title><rect x="47.2" y="531.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="50.2" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (172 samples, 1.51%)</title><rect x="47.7" y="547.0" width="17.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="50.7" y="558.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (58 samples, 0.51%)</title><rect x="47.7" y="531.0" width="6.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="50.7" y="542.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (58 samples, 0.51%)</title><rect x="47.7" y="515.0" width="6.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="50.7" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (4 samples, 0.04%)</title><rect x="49.5" y="499.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="52.5" y="510.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (37 samples, 0.32%)</title><rect x="49.9" y="499.0" width="3.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="52.9" y="510.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (37 samples, 0.32%)</title><rect x="49.9" y="483.0" width="3.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="52.9" y="494.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (37 samples, 0.32%)</title><rect x="49.9" y="467.0" width="3.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="52.9" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (37 samples, 0.32%)</title><rect x="49.9" y="451.0" width="3.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="52.9" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (37 samples, 0.32%)</title><rect x="49.9" y="435.0" width="3.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="52.9" y="446.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (37 samples, 0.32%)</title><rect x="49.9" y="419.0" width="3.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="52.9" y="430.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (28 samples, 0.25%)</title><rect x="49.9" y="403.0" width="2.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="52.9" y="414.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (7 samples, 0.06%)</title><rect x="51.5" y="387.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="54.5" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (7 samples, 0.06%)</title><rect x="51.5" y="371.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="54.5" y="382.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (7 samples, 0.06%)</title><rect x="51.5" y="355.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="54.5" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (5 samples, 0.04%)</title><rect x="52.2" y="387.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="55.2" y="398.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (9 samples, 0.08%)</title><rect x="52.8" y="403.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="55.8" y="414.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (3 samples, 0.03%)</title><rect x="52.9" y="387.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="55.9" y="398.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (5 samples, 0.04%)</title><rect x="53.2" y="387.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="56.2" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (5 samples, 0.04%)</title><rect x="53.2" y="371.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="56.2" y="382.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (5 samples, 0.04%)</title><rect x="53.2" y="355.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="56.2" y="366.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (114 samples, 1.00%)</title><rect x="53.7" y="531.0" width="11.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="56.7" y="542.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (114 samples, 1.00%)</title><rect x="53.7" y="515.0" width="11.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="56.7" y="526.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (114 samples, 1.00%)</title><rect x="53.7" y="499.0" width="11.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="56.7" y="510.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (114 samples, 1.00%)</title><rect x="53.7" y="483.0" width="11.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="56.7" y="494.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (114 samples, 1.00%)</title><rect x="53.7" y="467.0" width="11.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="56.7" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (114 samples, 1.00%)</title><rect x="53.7" y="451.0" width="11.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="56.7" y="462.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (114 samples, 1.00%)</title><rect x="53.7" y="435.0" width="11.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="56.7" y="446.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (101 samples, 0.88%)</title><rect x="53.7" y="419.0" width="10.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="56.7" y="430.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (101 samples, 0.88%)</title><rect x="53.7" y="403.0" width="10.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="56.7" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.04%)</title><rect x="63.6" y="387.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="66.6" y="398.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (4 samples, 0.04%)</title><rect x="63.6" y="371.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="66.6" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (13 samples, 0.11%)</title><rect x="64.1" y="419.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="67.1" y="430.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (13 samples, 0.11%)</title><rect x="64.1" y="403.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="67.1" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (5 samples, 0.04%)</title><rect x="64.7" y="387.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="67.7" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (179 samples, 1.57%)</title><rect x="65.5" y="547.0" width="18.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="68.5" y="558.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (98 samples, 0.86%)</title><rect x="65.6" y="531.0" width="10.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="68.6" y="542.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (98 samples, 0.86%)</title><rect x="65.6" y="515.0" width="10.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="68.6" y="526.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (83 samples, 0.73%)</title><rect x="67.1" y="499.0" width="8.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="70.1" y="510.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (83 samples, 0.73%)</title><rect x="67.1" y="483.0" width="8.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="70.1" y="494.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (83 samples, 0.73%)</title><rect x="67.1" y="467.0" width="8.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="70.1" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (83 samples, 0.73%)</title><rect x="67.1" y="451.0" width="8.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="70.1" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (83 samples, 0.73%)</title><rect x="67.1" y="435.0" width="8.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="70.1" y="446.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (83 samples, 0.73%)</title><rect x="67.1" y="419.0" width="8.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="70.1" y="430.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (78 samples, 0.68%)</title><rect x="67.1" y="403.0" width="8.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="70.1" y="414.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (78 samples, 0.68%)</title><rect x="67.1" y="387.0" width="8.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="70.1" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (3 samples, 0.03%)</title><rect x="74.9" y="371.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="77.9" y="382.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (3 samples, 0.03%)</title><rect x="74.9" y="355.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="77.9" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (5 samples, 0.04%)</title><rect x="75.2" y="403.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="78.2" y="414.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (5 samples, 0.04%)</title><rect x="75.2" y="387.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="78.2" y="398.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (80 samples, 0.70%)</title><rect x="75.7" y="531.0" width="8.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="78.7" y="542.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (80 samples, 0.70%)</title><rect x="75.7" y="515.0" width="8.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="78.7" y="526.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (80 samples, 0.70%)</title><rect x="75.7" y="499.0" width="8.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="78.7" y="510.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (80 samples, 0.70%)</title><rect x="75.7" y="483.0" width="8.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="78.7" y="494.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (80 samples, 0.70%)</title><rect x="75.7" y="467.0" width="8.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="78.7" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (80 samples, 0.70%)</title><rect x="75.7" y="451.0" width="8.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="78.7" y="462.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (80 samples, 0.70%)</title><rect x="75.7" y="435.0" width="8.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="78.7" y="446.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (58 samples, 0.51%)</title><rect x="75.7" y="419.0" width="6.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="78.7" y="430.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (58 samples, 0.51%)</title><rect x="75.7" y="403.0" width="6.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="78.7" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (58 samples, 0.51%)</title><rect x="75.7" y="387.0" width="6.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="78.7" y="398.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (8 samples, 0.07%)</title><rect x="80.5" y="371.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="83.5" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (3 samples, 0.03%)</title><rect x="81.4" y="371.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="84.4" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (22 samples, 0.19%)</title><rect x="81.7" y="419.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="84.7" y="430.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (22 samples, 0.19%)</title><rect x="81.7" y="403.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="84.7" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (22 samples, 0.19%)</title><rect x="81.7" y="387.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="84.7" y="398.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (3 samples, 0.03%)</title><rect x="83.4" y="371.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="86.4" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.reduceIterators (110 samples, 0.96%)</title><rect x="84.1" y="611.0" width="11.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="87.1" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (89 samples, 0.78%)</title><rect x="84.1" y="595.0" width="9.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="87.1" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (89 samples, 0.78%)</title><rect x="84.1" y="579.0" width="9.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="87.1" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (7 samples, 0.06%)</title><rect x="84.5" y="563.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="87.5" y="574.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (7 samples, 0.06%)</title><rect x="84.5" y="547.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="87.5" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (7 samples, 0.06%)</title><rect x="84.5" y="531.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="87.5" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (5 samples, 0.04%)</title><rect x="84.7" y="515.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="87.7" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (4 samples, 0.04%)</title><rect x="84.8" y="499.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="87.8" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (3 samples, 0.03%)</title><rect x="84.8" y="483.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="87.8" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (76 samples, 0.67%)</title><rect x="85.2" y="563.0" width="7.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="88.2" y="574.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (76 samples, 0.67%)</title><rect x="85.2" y="547.0" width="7.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="88.2" y="558.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (76 samples, 0.67%)</title><rect x="85.2" y="531.0" width="7.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="88.2" y="542.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (76 samples, 0.67%)</title><rect x="85.2" y="515.0" width="7.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="88.2" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (75 samples, 0.66%)</title><rect x="85.3" y="499.0" width="7.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="88.3" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (75 samples, 0.66%)</title><rect x="85.3" y="483.0" width="7.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="88.3" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (33 samples, 0.29%)</title><rect x="85.3" y="467.0" width="3.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="88.3" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (33 samples, 0.29%)</title><rect x="85.3" y="451.0" width="3.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="88.3" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (33 samples, 0.29%)</title><rect x="85.3" y="435.0" width="3.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="88.3" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (33 samples, 0.29%)</title><rect x="85.3" y="419.0" width="3.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="88.3" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (9 samples, 0.08%)</title><rect x="85.3" y="403.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="88.3" y="414.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (6 samples, 0.05%)</title><rect x="85.3" y="387.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="88.3" y="398.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (6 samples, 0.05%)</title><rect x="85.3" y="371.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="88.3" y="382.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (5 samples, 0.04%)</title><rect x="85.4" y="355.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="88.4" y="366.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (5 samples, 0.04%)</title><rect x="85.4" y="339.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="88.4" y="350.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (5 samples, 0.04%)</title><rect x="85.4" y="323.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="88.4" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 0.04%)</title><rect x="85.4" y="307.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="88.4" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 0.04%)</title><rect x="85.4" y="291.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="88.4" y="302.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (5 samples, 0.04%)</title><rect x="85.4" y="275.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="88.4" y="286.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (3 samples, 0.03%)</title><rect x="85.6" y="259.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="88.6" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (3 samples, 0.03%)</title><rect x="85.9" y="387.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="88.9" y="398.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (3 samples, 0.03%)</title><rect x="85.9" y="371.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="88.9" y="382.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (3 samples, 0.03%)</title><rect x="85.9" y="355.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="88.9" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (3 samples, 0.03%)</title><rect x="85.9" y="339.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="88.9" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.03%)</title><rect x="85.9" y="323.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="88.9" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.03%)</title><rect x="85.9" y="307.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="88.9" y="318.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (3 samples, 0.03%)</title><rect x="85.9" y="291.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="88.9" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (10 samples, 0.09%)</title><rect x="86.2" y="403.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="89.2" y="414.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (5 samples, 0.04%)</title><rect x="86.2" y="387.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="89.2" y="398.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (5 samples, 0.04%)</title><rect x="86.2" y="371.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="89.2" y="382.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (5 samples, 0.04%)</title><rect x="86.2" y="355.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="89.2" y="366.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (5 samples, 0.04%)</title><rect x="86.2" y="339.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="89.2" y="350.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (5 samples, 0.04%)</title><rect x="86.2" y="323.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="89.2" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 0.04%)</title><rect x="86.2" y="307.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="89.2" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 0.04%)</title><rect x="86.2" y="291.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="89.2" y="302.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (5 samples, 0.04%)</title><rect x="86.2" y="275.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="89.2" y="286.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (3 samples, 0.03%)</title><rect x="86.4" y="259.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="89.4" y="270.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (3 samples, 0.03%)</title><rect x="86.4" y="243.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="89.4" y="254.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (5 samples, 0.04%)</title><rect x="86.7" y="387.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="89.7" y="398.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (5 samples, 0.04%)</title><rect x="86.7" y="371.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="89.7" y="382.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (5 samples, 0.04%)</title><rect x="86.7" y="355.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="89.7" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (5 samples, 0.04%)</title><rect x="86.7" y="339.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="89.7" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 0.04%)</title><rect x="86.7" y="323.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="89.7" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 0.04%)</title><rect x="86.7" y="307.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="89.7" y="318.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (5 samples, 0.04%)</title><rect x="86.7" y="291.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="89.7" y="302.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (3 samples, 0.03%)</title><rect x="86.7" y="275.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="89.7" y="286.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (3 samples, 0.03%)</title><rect x="86.7" y="259.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="89.7" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (3 samples, 0.03%)</title><rect x="86.7" y="243.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="89.7" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.valueAt (12 samples, 0.11%)</title><rect x="87.5" y="403.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="90.5" y="414.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (8 samples, 0.07%)</title><rect x="87.5" y="387.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="90.5" y="398.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (8 samples, 0.07%)</title><rect x="87.5" y="371.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="90.5" y="382.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (8 samples, 0.07%)</title><rect x="87.5" y="355.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="90.5" y="366.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (8 samples, 0.07%)</title><rect x="87.5" y="339.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="90.5" y="350.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (8 samples, 0.07%)</title><rect x="87.5" y="323.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="90.5" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (8 samples, 0.07%)</title><rect x="87.5" y="307.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="90.5" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (8 samples, 0.07%)</title><rect x="87.5" y="291.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="90.5" y="302.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.04%)</title><rect x="87.8" y="275.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="90.8" y="286.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (4 samples, 0.04%)</title><rect x="88.3" y="387.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="91.3" y="398.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (4 samples, 0.04%)</title><rect x="88.3" y="371.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="91.3" y="382.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (4 samples, 0.04%)</title><rect x="88.3" y="355.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="91.3" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (4 samples, 0.04%)</title><rect x="88.3" y="339.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="91.3" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.04%)</title><rect x="88.3" y="323.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="91.3" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.04%)</title><rect x="88.3" y="307.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="91.3" y="318.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.04%)</title><rect x="88.3" y="291.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="91.3" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/123226378.compare (42 samples, 0.37%)</title><rect x="88.7" y="467.0" width="4.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="91.7" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (42 samples, 0.37%)</title><rect x="88.7" y="451.0" width="4.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="91.7" y="462.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (42 samples, 0.37%)</title><rect x="88.7" y="435.0" width="4.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="91.7" y="446.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (42 samples, 0.37%)</title><rect x="88.7" y="419.0" width="4.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="91.7" y="430.0"></text>
</g>
<g>
<title>itable stub (6 samples, 0.05%)</title><rect x="89.4" y="403.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="92.4" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (27 samples, 0.24%)</title><rect x="90.1" y="403.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="93.1" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (27 samples, 0.24%)</title><rect x="90.1" y="387.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="93.1" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$67/1497891062.compare (26 samples, 0.23%)</title><rect x="90.1" y="371.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="93.1" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (26 samples, 0.23%)</title><rect x="90.1" y="355.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="93.1" y="366.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.03%)</title><rect x="90.1" y="339.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="93.1" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (14 samples, 0.12%)</title><rect x="90.4" y="339.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="93.4" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (14 samples, 0.12%)</title><rect x="90.4" y="323.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="93.4" y="334.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (12 samples, 0.11%)</title><rect x="90.5" y="307.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="93.5" y="318.0"></text>
</g>
<g>
<title>vtable stub (3 samples, 0.03%)</title><rect x="91.4" y="291.0" width="0.3" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="94.4" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$66/474651931.apply (9 samples, 0.08%)</title><rect x="91.8" y="339.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="94.8" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (9 samples, 0.08%)</title><rect x="91.8" y="323.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="94.8" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (6 samples, 0.05%)</title><rect x="91.8" y="307.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="94.8" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (6 samples, 0.05%)</title><rect x="91.8" y="291.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="94.8" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (6 samples, 0.05%)</title><rect x="91.8" y="275.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="94.8" y="286.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (6 samples, 0.05%)</title><rect x="91.8" y="259.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="94.8" y="270.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (6 samples, 0.05%)</title><rect x="91.8" y="243.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="94.8" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (6 samples, 0.05%)</title><rect x="91.8" y="227.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="94.8" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (6 samples, 0.05%)</title><rect x="91.8" y="211.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="94.8" y="222.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (5 samples, 0.04%)</title><rect x="91.9" y="195.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="94.9" y="206.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (3 samples, 0.03%)</title><rect x="92.4" y="307.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="95.4" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (21 samples, 0.18%)</title><rect x="93.3" y="595.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="96.3" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (21 samples, 0.18%)</title><rect x="93.3" y="579.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="96.3" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (20 samples, 0.18%)</title><rect x="93.4" y="563.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="96.4" y="574.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (14 samples, 0.12%)</title><rect x="93.5" y="547.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="96.5" y="558.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (14 samples, 0.12%)</title><rect x="93.5" y="531.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="96.5" y="542.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (14 samples, 0.12%)</title><rect x="93.5" y="515.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="96.5" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (14 samples, 0.12%)</title><rect x="93.5" y="499.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="96.5" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (14 samples, 0.12%)</title><rect x="93.5" y="483.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="96.5" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/123226378.compare (12 samples, 0.11%)</title><rect x="93.7" y="467.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="96.7" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (12 samples, 0.11%)</title><rect x="93.7" y="451.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="96.7" y="462.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (12 samples, 0.11%)</title><rect x="93.7" y="435.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="96.7" y="446.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (12 samples, 0.11%)</title><rect x="93.7" y="419.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="96.7" y="430.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (12 samples, 0.11%)</title><rect x="93.7" y="403.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="96.7" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (12 samples, 0.11%)</title><rect x="93.7" y="387.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="96.7" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$67/1497891062.compare (11 samples, 0.10%)</title><rect x="93.8" y="371.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="96.8" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (11 samples, 0.10%)</title><rect x="93.8" y="355.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="96.8" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 0.04%)</title><rect x="93.9" y="339.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="96.9" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (3 samples, 0.03%)</title><rect x="94.0" y="323.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="97.0" y="334.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (3 samples, 0.03%)</title><rect x="94.0" y="307.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="97.0" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$66/474651931.apply (6 samples, 0.05%)</title><rect x="94.3" y="339.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="97.3" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (6 samples, 0.05%)</title><rect x="94.3" y="323.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="97.3" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (5 samples, 0.04%)</title><rect x="94.3" y="307.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="97.3" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (5 samples, 0.04%)</title><rect x="94.3" y="291.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="97.3" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (5 samples, 0.04%)</title><rect x="94.3" y="275.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="97.3" y="286.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (5 samples, 0.04%)</title><rect x="94.3" y="259.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="97.3" y="270.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (5 samples, 0.04%)</title><rect x="94.3" y="243.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="97.3" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 0.04%)</title><rect x="94.3" y="227.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="97.3" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 0.04%)</title><rect x="94.3" y="211.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="97.3" y="222.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.04%)</title><rect x="94.4" y="195.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="97.4" y="206.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (5 samples, 0.04%)</title><rect x="94.9" y="547.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="97.9" y="558.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (5 samples, 0.04%)</title><rect x="94.9" y="531.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="97.9" y="542.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (5 samples, 0.04%)</title><rect x="94.9" y="515.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="97.9" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (5 samples, 0.04%)</title><rect x="94.9" y="499.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="97.9" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (5 samples, 0.04%)</title><rect x="94.9" y="483.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="97.9" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (5 samples, 0.04%)</title><rect x="94.9" y="467.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="97.9" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (3 samples, 0.03%)</title><rect x="94.9" y="451.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="97.9" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (3 samples, 0.03%)</title><rect x="94.9" y="435.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="97.9" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (3 samples, 0.03%)</title><rect x="94.9" y="419.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="97.9" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (3 samples, 0.03%)</title><rect x="94.9" y="403.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="97.9" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/StorageSession.stream (1,838 samples, 16.09%)</title><rect x="95.4" y="659.0" width="189.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="98.4" y="670.0">ru/mail/polis/service/sha..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (247 samples, 2.16%)</title><rect x="95.5" y="643.0" width="25.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="98.5" y="654.0">o..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (8 samples, 0.07%)</title><rect x="95.6" y="627.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="98.6" y="638.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (238 samples, 2.08%)</title><rect x="96.5" y="627.0" width="24.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="99.5" y="638.0">o..</text>
</g>
<g>
<title>one/nio/net/Session.write (238 samples, 2.08%)</title><rect x="96.5" y="611.0" width="24.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="99.5" y="622.0">o..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (238 samples, 2.08%)</title><rect x="96.5" y="595.0" width="24.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="99.5" y="606.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (238 samples, 2.08%)</title><rect x="96.5" y="579.0" width="24.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="99.5" y="590.0">o..</text>
</g>
<g>
<title>.annobin_send.c (235 samples, 2.06%)</title><rect x="96.5" y="563.0" width="24.2" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="99.5" y="574.0">...</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (230 samples, 2.01%)</title><rect x="97.0" y="547.0" width="23.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="100.0" y="558.0">e..</text>
</g>
<g>
<title>do_syscall_64 (230 samples, 2.01%)</title><rect x="97.0" y="531.0" width="23.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="100.0" y="542.0">d..</text>
</g>
<g>
<title>__x64_sys_sendto (225 samples, 1.97%)</title><rect x="97.5" y="515.0" width="23.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="100.5" y="526.0">_..</text>
</g>
<g>
<title>__sys_sendto (225 samples, 1.97%)</title><rect x="97.5" y="499.0" width="23.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="100.5" y="510.0">_..</text>
</g>
<g>
<title>sock_sendmsg (221 samples, 1.93%)</title><rect x="97.6" y="483.0" width="22.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="100.6" y="494.0">s..</text>
</g>
<g>
<title>security_socket_sendmsg (3 samples, 0.03%)</title><rect x="97.8" y="467.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="100.8" y="478.0"></text>
</g>
<g>
<title>sock_has_perm (3 samples, 0.03%)</title><rect x="97.8" y="451.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="100.8" y="462.0"></text>
</g>
<g>
<title>tcp_sendmsg (216 samples, 1.89%)</title><rect x="98.1" y="467.0" width="22.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="101.1" y="478.0">t..</text>
</g>
<g>
<title>tcp_sendmsg_locked (213 samples, 1.86%)</title><rect x="98.4" y="451.0" width="22.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="101.4" y="462.0">t..</text>
</g>
<g>
<title>__check_object_size (3 samples, 0.03%)</title><rect x="98.4" y="435.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="101.4" y="446.0"></text>
</g>
<g>
<title>__virt_addr_valid (3 samples, 0.03%)</title><rect x="98.4" y="419.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="101.4" y="430.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (197 samples, 1.72%)</title><rect x="98.7" y="435.0" width="20.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="101.7" y="446.0"></text>
</g>
<g>
<title>tcp_write_xmit (197 samples, 1.72%)</title><rect x="98.7" y="419.0" width="20.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="101.7" y="430.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (188 samples, 1.65%)</title><rect x="98.9" y="403.0" width="19.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="101.9" y="414.0"></text>
</g>
<g>
<title>__ip_queue_xmit (182 samples, 1.59%)</title><rect x="99.3" y="387.0" width="18.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="102.3" y="398.0"></text>
</g>
<g>
<title>ip_local_out (28 samples, 0.25%)</title><rect x="99.6" y="371.0" width="2.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="102.6" y="382.0"></text>
</g>
<g>
<title>__ip_local_out (28 samples, 0.25%)</title><rect x="99.6" y="355.0" width="2.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="102.6" y="366.0"></text>
</g>
<g>
<title>nf_hook_slow (28 samples, 0.25%)</title><rect x="99.6" y="339.0" width="2.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="102.6" y="350.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (8 samples, 0.07%)</title><rect x="99.7" y="323.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="102.7" y="334.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (5 samples, 0.04%)</title><rect x="100.5" y="323.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="103.5" y="334.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (4 samples, 0.04%)</title><rect x="100.6" y="307.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="103.6" y="318.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (11 samples, 0.10%)</title><rect x="101.1" y="323.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="104.1" y="334.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get	[nf_conntrack] (3 samples, 0.03%)</title><rect x="101.3" y="307.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="104.3" y="318.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet	[nf_conntrack] (5 samples, 0.04%)</title><rect x="101.7" y="307.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="104.7" y="318.0"></text>
</g>
<g>
<title>ip_output (152 samples, 1.33%)</title><rect x="102.4" y="371.0" width="15.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="105.4" y="382.0"></text>
</g>
<g>
<title>ip_finish_output2 (143 samples, 1.25%)</title><rect x="102.4" y="355.0" width="14.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="105.4" y="366.0"></text>
</g>
<g>
<title>__dev_queue_xmit (8 samples, 0.07%)</title><rect x="102.7" y="339.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="105.7" y="350.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (5 samples, 0.04%)</title><rect x="102.8" y="323.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="105.8" y="334.0"></text>
</g>
<g>
<title>loopback_xmit (5 samples, 0.04%)</title><rect x="102.8" y="307.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="105.8" y="318.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (133 samples, 1.16%)</title><rect x="103.5" y="339.0" width="13.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="106.5" y="350.0"></text>
</g>
<g>
<title>do_softirq.part.0 (132 samples, 1.16%)</title><rect x="103.6" y="323.0" width="13.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="106.6" y="334.0"></text>
</g>
<g>
<title>do_softirq_own_stack (130 samples, 1.14%)</title><rect x="103.8" y="307.0" width="13.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="106.8" y="318.0"></text>
</g>
<g>
<title>__softirqentry_text_start (130 samples, 1.14%)</title><rect x="103.8" y="291.0" width="13.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="106.8" y="302.0"></text>
</g>
<g>
<title>net_rx_action (128 samples, 1.12%)</title><rect x="103.8" y="275.0" width="13.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="106.8" y="286.0"></text>
</g>
<g>
<title>process_backlog (125 samples, 1.09%)</title><rect x="104.1" y="259.0" width="12.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="107.1" y="270.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (123 samples, 1.08%)</title><rect x="104.3" y="243.0" width="12.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="107.3" y="254.0"></text>
</g>
<g>
<title>ip_rcv (123 samples, 1.08%)</title><rect x="104.3" y="227.0" width="12.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="107.3" y="238.0"></text>
</g>
<g>
<title>ip_local_deliver (94 samples, 0.82%)</title><rect x="104.4" y="211.0" width="9.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="107.4" y="222.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (81 samples, 0.71%)</title><rect x="104.5" y="195.0" width="8.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="107.5" y="206.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (81 samples, 0.71%)</title><rect x="104.5" y="179.0" width="8.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="107.5" y="190.0"></text>
</g>
<g>
<title>tcp_v4_rcv (81 samples, 0.71%)</title><rect x="104.5" y="163.0" width="8.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="107.5" y="174.0"></text>
</g>
<g>
<title>__inet_lookup_established (4 samples, 0.04%)</title><rect x="104.9" y="147.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="107.9" y="158.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (70 samples, 0.61%)</title><rect x="105.6" y="147.0" width="7.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="108.6" y="158.0"></text>
</g>
<g>
<title>tcp_rcv_established (69 samples, 0.60%)</title><rect x="105.8" y="131.0" width="7.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="108.8" y="142.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (4 samples, 0.04%)</title><rect x="106.1" y="115.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="109.1" y="126.0"></text>
</g>
<g>
<title>__ip_queue_xmit (4 samples, 0.04%)</title><rect x="106.1" y="99.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="109.1" y="110.0"></text>
</g>
<g>
<title>ip_output (3 samples, 0.03%)</title><rect x="106.2" y="83.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="109.2" y="94.0"></text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.03%)</title><rect x="106.5" y="115.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="109.5" y="126.0"></text>
</g>
<g>
<title>mod_timer (3 samples, 0.03%)</title><rect x="106.5" y="99.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="109.5" y="110.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.03%)</title><rect x="106.5" y="83.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="109.5" y="94.0"></text>
</g>
<g>
<title>sock_def_readable (21 samples, 0.18%)</title><rect x="106.8" y="115.0" width="2.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="109.8" y="126.0"></text>
</g>
<g>
<title>__wake_up_common_lock (17 samples, 0.15%)</title><rect x="107.2" y="99.0" width="1.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="110.2" y="110.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (17 samples, 0.15%)</title><rect x="107.2" y="83.0" width="1.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="110.2" y="94.0"></text>
</g>
<g>
<title>tcp_ack (15 samples, 0.13%)</title><rect x="109.0" y="115.0" width="1.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="112.0" y="126.0"></text>
</g>
<g>
<title>__kfree_skb (4 samples, 0.04%)</title><rect x="109.2" y="99.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="112.2" y="110.0"></text>
</g>
<g>
<title>kmem_cache_free (3 samples, 0.03%)</title><rect x="109.8" y="99.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="112.8" y="110.0"></text>
</g>
<g>
<title>tcp_data_queue (21 samples, 0.18%)</title><rect x="110.6" y="115.0" width="2.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="113.6" y="126.0"></text>
</g>
<g>
<title>sock_def_readable (19 samples, 0.17%)</title><rect x="110.8" y="99.0" width="2.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="113.8" y="110.0"></text>
</g>
<g>
<title>__wake_up_common_lock (18 samples, 0.16%)</title><rect x="110.9" y="83.0" width="1.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="113.9" y="94.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (18 samples, 0.16%)</title><rect x="110.9" y="67.0" width="1.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="113.9" y="78.0"></text>
</g>
<g>
<title>nf_hook_slow (12 samples, 0.11%)</title><rect x="112.9" y="195.0" width="1.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="115.9" y="206.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (9 samples, 0.08%)</title><rect x="112.9" y="179.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="115.9" y="190.0"></text>
</g>
<g>
<title>nf_hook_slow (26 samples, 0.23%)</title><rect x="114.3" y="211.0" width="2.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="117.3" y="222.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (15 samples, 0.13%)</title><rect x="114.6" y="195.0" width="1.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="117.6" y="206.0"></text>
</g>
<g>
<title>nf_nat_ipv4_in	[nf_nat] (3 samples, 0.03%)</title><rect x="116.7" y="195.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="119.7" y="206.0"></text>
</g>
<g>
<title>nf_hook_slow (8 samples, 0.07%)</title><rect x="117.3" y="355.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="120.3" y="366.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (3 samples, 0.03%)</title><rect x="117.4" y="339.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="120.4" y="350.0"></text>
</g>
<g>
<title>ktime_get (3 samples, 0.03%)</title><rect x="118.4" y="403.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="121.4" y="414.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (3 samples, 0.03%)</title><rect x="118.7" y="403.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="121.7" y="414.0"></text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.03%)</title><rect x="118.7" y="387.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="121.7" y="398.0"></text>
</g>
<g>
<title>mod_timer (3 samples, 0.03%)</title><rect x="118.7" y="371.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="121.7" y="382.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (3 samples, 0.03%)</title><rect x="119.3" y="435.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="122.3" y="446.0"></text>
</g>
<g>
<title>__alloc_skb (3 samples, 0.03%)</title><rect x="119.3" y="419.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="122.3" y="430.0"></text>
</g>
<g>
<title>tcp_send_mss (4 samples, 0.04%)</title><rect x="119.7" y="435.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="122.7" y="446.0"></text>
</g>
<g>
<title>tcp_current_mss (4 samples, 0.04%)</title><rect x="119.7" y="419.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="122.7" y="430.0"></text>
</g>
<g>
<title>ipv4_mtu (3 samples, 0.03%)</title><rect x="119.8" y="403.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="122.8" y="414.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (3 samples, 0.03%)</title><rect x="120.1" y="435.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="123.1" y="446.0"></text>
</g>
<g>
<title>sockfd_lookup_light (3 samples, 0.03%)</title><rect x="120.4" y="483.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="123.4" y="494.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.03%)</title><rect x="120.7" y="563.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="123.7" y="574.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.03%)</title><rect x="120.7" y="547.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="123.7" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/StorageSession.next (1,590 samples, 13.92%)</title><rect x="121.0" y="643.0" width="164.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="124.0" y="654.0">ru/mail/polis/service..</text>
</g>
<g>
<title>one/nio/net/Session.write (1,035 samples, 9.06%)</title><rect x="121.0" y="627.0" width="106.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="124.0" y="638.0">one/nio/net/S..</text>
</g>
<g>
<title>one/nio/net/Session.write (1,033 samples, 9.04%)</title><rect x="121.1" y="611.0" width="106.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="124.1" y="622.0">one/nio/net/S..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (1,032 samples, 9.03%)</title><rect x="121.2" y="595.0" width="106.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="124.2" y="606.0">one/nio/net/S..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (1,031 samples, 9.02%)</title><rect x="121.3" y="579.0" width="106.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="124.3" y="590.0">one/nio/net/N..</text>
</g>
<g>
<title>.annobin_send.c (1,007 samples, 8.81%)</title><rect x="122.3" y="563.0" width="104.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="125.3" y="574.0">.annobin_sen..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (926 samples, 8.11%)</title><rect x="130.6" y="547.0" width="95.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="133.6" y="558.0">entry_SYSCA..</text>
</g>
<g>
<title>do_syscall_64 (926 samples, 8.11%)</title><rect x="130.6" y="531.0" width="95.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="133.6" y="542.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (899 samples, 7.87%)</title><rect x="133.2" y="515.0" width="92.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="136.2" y="526.0">__x64_sys_s..</text>
</g>
<g>
<title>__sys_sendto (894 samples, 7.83%)</title><rect x="133.7" y="499.0" width="92.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="136.7" y="510.0">__sys_sendto</text>
</g>
<g>
<title>fput_many (3 samples, 0.03%)</title><rect x="134.5" y="483.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="137.5" y="494.0"></text>
</g>
<g>
<title>import_single_range (7 samples, 0.06%)</title><rect x="134.8" y="483.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="137.8" y="494.0"></text>
</g>
<g>
<title>iov_iter_init (3 samples, 0.03%)</title><rect x="135.2" y="467.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="138.2" y="478.0"></text>
</g>
<g>
<title>sock_sendmsg (863 samples, 7.55%)</title><rect x="135.5" y="483.0" width="89.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="138.5" y="494.0">sock_sendmsg</text>
</g>
<g>
<title>security_socket_sendmsg (13 samples, 0.11%)</title><rect x="135.6" y="467.0" width="1.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="138.6" y="478.0"></text>
</g>
<g>
<title>sock_has_perm (13 samples, 0.11%)</title><rect x="135.6" y="451.0" width="1.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="138.6" y="462.0"></text>
</g>
<g>
<title>avc_has_perm (10 samples, 0.09%)</title><rect x="135.9" y="435.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="138.9" y="446.0"></text>
</g>
<g>
<title>tcp_sendmsg (849 samples, 7.43%)</title><rect x="136.9" y="467.0" width="87.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="139.9" y="478.0">tcp_sendmsg</text>
</g>
<g>
<title>lock_sock_nested (8 samples, 0.07%)</title><rect x="137.3" y="451.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="140.3" y="462.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (3 samples, 0.03%)</title><rect x="137.3" y="435.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="140.3" y="446.0"></text>
</g>
<g>
<title>queued_spin_lock_slowpath (5 samples, 0.04%)</title><rect x="137.6" y="435.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="140.6" y="446.0"></text>
</g>
<g>
<title>release_sock (44 samples, 0.39%)</title><rect x="138.1" y="451.0" width="4.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="141.1" y="462.0"></text>
</g>
<g>
<title>__release_sock (36 samples, 0.32%)</title><rect x="138.2" y="435.0" width="3.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="141.2" y="446.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (31 samples, 0.27%)</title><rect x="138.7" y="419.0" width="3.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="141.7" y="430.0"></text>
</g>
<g>
<title>tcp_rcv_established (30 samples, 0.26%)</title><rect x="138.8" y="403.0" width="3.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="141.8" y="414.0"></text>
</g>
<g>
<title>__kfree_skb (4 samples, 0.04%)</title><rect x="139.1" y="387.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="142.1" y="398.0"></text>
</g>
<g>
<title>tcp_ack (19 samples, 0.17%)</title><rect x="139.7" y="387.0" width="2.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="142.7" y="398.0"></text>
</g>
<g>
<title>__kfree_skb (5 samples, 0.04%)</title><rect x="140.7" y="371.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="143.7" y="382.0"></text>
</g>
<g>
<title>skb_release_data (3 samples, 0.03%)</title><rect x="140.9" y="355.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="143.9" y="366.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (4 samples, 0.04%)</title><rect x="141.9" y="435.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="144.9" y="446.0"></text>
</g>
<g>
<title>tcp_release_cb (3 samples, 0.03%)</title><rect x="142.3" y="435.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="145.3" y="446.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (794 samples, 6.95%)</title><rect x="142.6" y="451.0" width="82.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="145.6" y="462.0">tcp_sendm..</text>
</g>
<g>
<title>__check_object_size (7 samples, 0.06%)</title><rect x="144.6" y="435.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="147.6" y="446.0"></text>
</g>
<g>
<title>__virt_addr_valid (5 samples, 0.04%)</title><rect x="144.8" y="419.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="147.8" y="430.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (715 samples, 6.26%)</title><rect x="145.3" y="435.0" width="73.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="148.3" y="446.0">__tcp_pu..</text>
</g>
<g>
<title>tcp_write_xmit (715 samples, 6.26%)</title><rect x="145.3" y="419.0" width="73.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="148.3" y="430.0">tcp_writ..</text>
</g>
<g>
<title>__tcp_transmit_skb (682 samples, 5.97%)</title><rect x="145.7" y="403.0" width="70.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="148.7" y="414.0">__tcp_tr..</text>
</g>
<g>
<title>__ip_queue_xmit (656 samples, 5.74%)</title><rect x="146.6" y="387.0" width="67.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="149.6" y="398.0">__ip_qu..</text>
</g>
<g>
<title>__sk_dst_check (4 samples, 0.04%)</title><rect x="147.0" y="371.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="150.0" y="382.0"></text>
</g>
<g>
<title>ipv4_dst_check (4 samples, 0.04%)</title><rect x="147.0" y="355.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="150.0" y="366.0"></text>
</g>
<g>
<title>ip_local_out (153 samples, 1.34%)</title><rect x="147.4" y="371.0" width="15.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="150.4" y="382.0"></text>
</g>
<g>
<title>__ip_local_out (152 samples, 1.33%)</title><rect x="147.5" y="355.0" width="15.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="150.5" y="366.0"></text>
</g>
<g>
<title>ip_send_check (4 samples, 0.04%)</title><rect x="147.6" y="339.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="150.6" y="350.0"></text>
</g>
<g>
<title>nf_hook_slow (147 samples, 1.29%)</title><rect x="148.0" y="339.0" width="15.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="151.0" y="350.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (49 samples, 0.43%)</title><rect x="148.6" y="323.0" width="5.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="151.6" y="334.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (3 samples, 0.03%)</title><rect x="153.4" y="307.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="156.4" y="318.0"></text>
</g>
<g>
<title>iptable_filter_hook	[iptable_filter] (3 samples, 0.03%)</title><rect x="153.7" y="323.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="156.7" y="334.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (22 samples, 0.19%)</title><rect x="154.0" y="323.0" width="2.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="157.0" y="334.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (20 samples, 0.18%)</title><rect x="154.2" y="307.0" width="2.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="157.2" y="318.0"></text>
</g>
<g>
<title>iptable_security_hook	[iptable_security] (3 samples, 0.03%)</title><rect x="156.5" y="323.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="159.5" y="334.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag	[nf_defrag_ipv4] (7 samples, 0.06%)</title><rect x="156.8" y="323.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="159.8" y="334.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (41 samples, 0.36%)</title><rect x="157.7" y="323.0" width="4.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="160.7" y="334.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get	[nf_conntrack] (9 samples, 0.08%)</title><rect x="158.0" y="307.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="161.0" y="318.0"></text>
</g>
<g>
<title>hash_conntrack_raw	[nf_conntrack] (3 samples, 0.03%)</title><rect x="159.2" y="307.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="162.2" y="318.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet	[nf_conntrack] (20 samples, 0.18%)</title><rect x="159.5" y="307.0" width="2.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="162.5" y="318.0"></text>
</g>
<g>
<title>nf_ct_seq_offset	[nf_conntrack] (3 samples, 0.03%)</title><rect x="161.2" y="291.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="164.2" y="302.0"></text>
</g>
<g>
<title>nf_ct_get_tuple	[nf_conntrack] (4 samples, 0.04%)</title><rect x="161.5" y="307.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="164.5" y="318.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn	[nf_nat] (11 samples, 0.10%)</title><rect x="161.9" y="323.0" width="1.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="164.9" y="334.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn	[nf_nat] (4 samples, 0.04%)</title><rect x="162.4" y="307.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="165.4" y="318.0"></text>
</g>
<g>
<title>nf_nat_packet	[nf_nat] (3 samples, 0.03%)</title><rect x="162.8" y="307.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="165.8" y="318.0"></text>
</g>
<g>
<title>ip_output (495 samples, 4.33%)</title><rect x="163.2" y="371.0" width="51.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="166.2" y="382.0">ip_ou..</text>
</g>
<g>
<title>ip_finish_output2 (427 samples, 3.74%)</title><rect x="163.6" y="355.0" width="44.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="166.6" y="366.0">ip_f..</text>
</g>
<g>
<title>__dev_queue_xmit (23 samples, 0.20%)</title><rect x="165.5" y="339.0" width="2.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="168.5" y="350.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (18 samples, 0.16%)</title><rect x="165.8" y="323.0" width="1.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="168.8" y="334.0"></text>
</g>
<g>
<title>loopback_xmit (13 samples, 0.11%)</title><rect x="166.3" y="307.0" width="1.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="169.3" y="318.0"></text>
</g>
<g>
<title>netif_rx (4 samples, 0.04%)</title><rect x="166.6" y="291.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="169.6" y="302.0"></text>
</g>
<g>
<title>netif_rx_internal (4 samples, 0.04%)</title><rect x="166.6" y="275.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="169.6" y="286.0"></text>
</g>
<g>
<title>enqueue_to_backlog (3 samples, 0.03%)</title><rect x="166.7" y="259.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="169.7" y="270.0"></text>
</g>
<g>
<title>tcp_wfree (5 samples, 0.04%)</title><rect x="167.1" y="291.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="170.1" y="302.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (386 samples, 3.38%)</title><rect x="167.8" y="339.0" width="39.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="170.8" y="350.0">__l..</text>
</g>
<g>
<title>do_softirq.part.0 (386 samples, 3.38%)</title><rect x="167.8" y="323.0" width="39.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="170.8" y="334.0">do_..</text>
</g>
<g>
<title>do_softirq_own_stack (379 samples, 3.32%)</title><rect x="168.6" y="307.0" width="39.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="171.6" y="318.0">do_..</text>
</g>
<g>
<title>__softirqentry_text_start (379 samples, 3.32%)</title><rect x="168.6" y="291.0" width="39.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="171.6" y="302.0">__s..</text>
</g>
<g>
<title>net_rx_action (374 samples, 3.27%)</title><rect x="169.1" y="275.0" width="38.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="172.1" y="286.0">net..</text>
</g>
<g>
<title>process_backlog (365 samples, 3.20%)</title><rect x="170.0" y="259.0" width="37.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="173.0" y="270.0">pro..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (358 samples, 3.13%)</title><rect x="170.7" y="243.0" width="37.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="173.7" y="254.0">__n..</text>
</g>
<g>
<title>__netif_receive_skb_core (5 samples, 0.04%)</title><rect x="170.7" y="227.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="173.7" y="238.0"></text>
</g>
<g>
<title>ip_rcv (353 samples, 3.09%)</title><rect x="171.2" y="227.0" width="36.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="174.2" y="238.0">ip_..</text>
</g>
<g>
<title>ip_local_deliver (232 samples, 2.03%)</title><rect x="171.5" y="211.0" width="24.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="174.5" y="222.0">i..</text>
</g>
<g>
<title>ip_local_deliver_finish (163 samples, 1.43%)</title><rect x="172.1" y="195.0" width="16.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="175.1" y="206.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (163 samples, 1.43%)</title><rect x="172.1" y="179.0" width="16.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="175.1" y="190.0"></text>
</g>
<g>
<title>tcp_v4_rcv (161 samples, 1.41%)</title><rect x="172.3" y="163.0" width="16.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="175.3" y="174.0"></text>
</g>
<g>
<title>__inet_lookup_established (10 samples, 0.09%)</title><rect x="173.5" y="147.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="176.5" y="158.0"></text>
</g>
<g>
<title>_raw_spin_lock (4 samples, 0.04%)</title><rect x="174.5" y="147.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="177.5" y="158.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (4 samples, 0.04%)</title><rect x="175.0" y="147.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="178.0" y="158.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (4 samples, 0.04%)</title><rect x="175.0" y="131.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="178.0" y="142.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (3 samples, 0.03%)</title><rect x="175.1" y="115.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="178.1" y="126.0"></text>
</g>
<g>
<title>tcp_add_backlog (3 samples, 0.03%)</title><rect x="175.4" y="147.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="178.4" y="158.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (126 samples, 1.10%)</title><rect x="175.7" y="147.0" width="13.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="178.7" y="158.0"></text>
</g>
<g>
<title>tcp_rcv_established (123 samples, 1.08%)</title><rect x="176.0" y="131.0" width="12.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="179.0" y="142.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (9 samples, 0.08%)</title><rect x="176.5" y="115.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="179.5" y="126.0"></text>
</g>
<g>
<title>__ip_queue_xmit (9 samples, 0.08%)</title><rect x="176.5" y="99.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="179.5" y="110.0"></text>
</g>
<g>
<title>ip_local_out (7 samples, 0.06%)</title><rect x="176.5" y="83.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="179.5" y="94.0"></text>
</g>
<g>
<title>__ip_local_out (7 samples, 0.06%)</title><rect x="176.5" y="67.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="179.5" y="78.0"></text>
</g>
<g>
<title>nf_hook_slow (7 samples, 0.06%)</title><rect x="176.5" y="51.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="179.5" y="62.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (6 samples, 0.05%)</title><rect x="176.5" y="35.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="179.5" y="46.0"></text>
</g>
<g>
<title>sock_def_readable (88 samples, 0.77%)</title><rect x="177.5" y="115.0" width="9.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="180.5" y="126.0"></text>
</g>
<g>
<title>__wake_up_common_lock (86 samples, 0.75%)</title><rect x="177.7" y="99.0" width="8.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="180.7" y="110.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (85 samples, 0.74%)</title><rect x="177.8" y="83.0" width="8.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="180.8" y="94.0"></text>
</g>
<g>
<title>tcp_data_queue (8 samples, 0.07%)</title><rect x="186.6" y="115.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="189.6" y="126.0"></text>
</g>
<g>
<title>sock_def_readable (5 samples, 0.04%)</title><rect x="186.6" y="99.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="189.6" y="110.0"></text>
</g>
<g>
<title>__wake_up_common_lock (5 samples, 0.04%)</title><rect x="186.6" y="83.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="189.6" y="94.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.04%)</title><rect x="186.7" y="67.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="189.7" y="78.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (5 samples, 0.04%)</title><rect x="187.5" y="115.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="190.5" y="126.0"></text>
</g>
<g>
<title>ktime_get (3 samples, 0.03%)</title><rect x="187.7" y="99.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="190.7" y="110.0"></text>
</g>
<g>
<title>tcp_queue_rcv (7 samples, 0.06%)</title><rect x="188.0" y="115.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="191.0" y="126.0"></text>
</g>
<g>
<title>tcp_try_coalesce (3 samples, 0.03%)</title><rect x="188.4" y="99.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="191.4" y="110.0"></text>
</g>
<g>
<title>nf_hook_slow (64 samples, 0.56%)</title><rect x="188.9" y="195.0" width="6.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="191.9" y="206.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (47 samples, 0.41%)</title><rect x="189.2" y="179.0" width="4.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="192.2" y="190.0"></text>
</g>
<g>
<title>conntrack_mt_v3	[xt_conntrack] (5 samples, 0.04%)</title><rect x="193.5" y="163.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="196.5" y="174.0"></text>
</g>
<g>
<title>iptable_filter_hook	[iptable_filter] (3 samples, 0.03%)</title><rect x="194.1" y="179.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="197.1" y="190.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (4 samples, 0.04%)</title><rect x="194.4" y="179.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="197.4" y="190.0"></text>
</g>
<g>
<title>ipv4_confirm	[nf_conntrack] (4 samples, 0.04%)</title><rect x="194.9" y="179.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="197.9" y="190.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (5 samples, 0.04%)</title><rect x="195.5" y="211.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="198.5" y="222.0"></text>
</g>
<g>
<title>ip_rcv_finish (3 samples, 0.03%)</title><rect x="196.0" y="211.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="199.0" y="222.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.0 (3 samples, 0.03%)</title><rect x="196.0" y="195.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="199.0" y="206.0"></text>
</g>
<g>
<title>nf_hook_slow (110 samples, 0.96%)</title><rect x="196.3" y="211.0" width="11.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="199.3" y="222.0"></text>
</g>
<g>
<title>ip_sabotage_in	[br_netfilter] (4 samples, 0.04%)</title><rect x="196.9" y="195.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="199.9" y="206.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (79 samples, 0.69%)</title><rect x="197.3" y="195.0" width="8.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="200.3" y="206.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (3 samples, 0.03%)</title><rect x="205.4" y="195.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="208.4" y="206.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag	[nf_defrag_ipv4] (4 samples, 0.04%)</title><rect x="205.8" y="195.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="208.8" y="206.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (3 samples, 0.03%)</title><rect x="206.5" y="195.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="209.5" y="206.0"></text>
</g>
<g>
<title>nf_nat_ipv4_in	[nf_nat] (9 samples, 0.08%)</title><rect x="206.8" y="195.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="209.8" y="206.0"></text>
</g>
<g>
<title>nf_nat_inet_fn	[nf_nat] (3 samples, 0.03%)</title><rect x="207.1" y="179.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="210.1" y="190.0"></text>
</g>
<g>
<title>ip_finish_output (9 samples, 0.08%)</title><rect x="207.7" y="355.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="210.7" y="366.0"></text>
</g>
<g>
<title>nf_hook_slow (55 samples, 0.48%)</title><rect x="208.6" y="355.0" width="5.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="211.6" y="366.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (25 samples, 0.22%)</title><rect x="208.8" y="339.0" width="2.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="211.8" y="350.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (3 samples, 0.03%)</title><rect x="211.4" y="339.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="214.4" y="350.0"></text>
</g>
<g>
<title>nf_confirm	[nf_conntrack] (8 samples, 0.07%)</title><rect x="211.7" y="339.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="214.7" y="350.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events	[nf_conntrack] (5 samples, 0.04%)</title><rect x="212.0" y="323.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="215.0" y="334.0"></text>
</g>
<g>
<title>nf_nat_ipv4_out	[nf_nat] (8 samples, 0.07%)</title><rect x="212.6" y="339.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="215.6" y="350.0"></text>
</g>
<g>
<title>selinux_ip_postroute (8 samples, 0.07%)</title><rect x="213.4" y="339.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="216.4" y="350.0"></text>
</g>
<g>
<title>selinux_peerlbl_enabled (3 samples, 0.03%)</title><rect x="213.9" y="323.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="216.9" y="334.0"></text>
</g>
<g>
<title>tcp_rate_skb_sent (3 samples, 0.03%)</title><rect x="215.3" y="387.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="218.3" y="398.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (4 samples, 0.04%)</title><rect x="215.7" y="387.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="218.7" y="398.0"></text>
</g>
<g>
<title>ktime_get (8 samples, 0.07%)</title><rect x="216.2" y="403.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="219.2" y="414.0"></text>
</g>
<g>
<title>read_tsc (6 samples, 0.05%)</title><rect x="216.4" y="387.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="219.4" y="398.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (12 samples, 0.11%)</title><rect x="217.1" y="403.0" width="1.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="220.1" y="414.0"></text>
</g>
<g>
<title>sk_reset_timer (8 samples, 0.07%)</title><rect x="217.4" y="387.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="220.4" y="398.0"></text>
</g>
<g>
<title>mod_timer (8 samples, 0.07%)</title><rect x="217.4" y="371.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="220.4" y="382.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (6 samples, 0.05%)</title><rect x="217.6" y="355.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="220.6" y="366.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (8 samples, 0.07%)</title><rect x="218.3" y="403.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="221.3" y="414.0"></text>
</g>
<g>
<title>sk_reset_timer (5 samples, 0.04%)</title><rect x="218.6" y="387.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="221.6" y="398.0"></text>
</g>
<g>
<title>mod_timer (5 samples, 0.04%)</title><rect x="218.6" y="371.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="221.6" y="382.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (5 samples, 0.04%)</title><rect x="218.6" y="355.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="221.6" y="366.0"></text>
</g>
<g>
<title>_copy_from_iter_full (6 samples, 0.05%)</title><rect x="219.2" y="435.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="222.2" y="446.0"></text>
</g>
<g>
<title>copyin (6 samples, 0.05%)</title><rect x="219.2" y="419.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="222.2" y="430.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (4 samples, 0.04%)</title><rect x="219.4" y="403.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="222.4" y="414.0"></text>
</g>
<g>
<title>sk_page_frag_refill (3 samples, 0.03%)</title><rect x="219.9" y="435.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="222.9" y="446.0"></text>
</g>
<g>
<title>skb_page_frag_refill (3 samples, 0.03%)</title><rect x="219.9" y="419.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="222.9" y="430.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (22 samples, 0.19%)</title><rect x="220.2" y="435.0" width="2.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="223.2" y="446.0"></text>
</g>
<g>
<title>__alloc_skb (19 samples, 0.17%)</title><rect x="220.4" y="419.0" width="2.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="223.4" y="430.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (8 samples, 0.07%)</title><rect x="221.1" y="403.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="224.1" y="414.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (8 samples, 0.07%)</title><rect x="221.1" y="387.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="224.1" y="398.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (3 samples, 0.03%)</title><rect x="222.9" y="435.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="225.9" y="446.0"></text>
</g>
<g>
<title>tcp_send_mss (13 samples, 0.11%)</title><rect x="223.2" y="435.0" width="1.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="226.2" y="446.0"></text>
</g>
<g>
<title>tcp_current_mss (13 samples, 0.11%)</title><rect x="223.2" y="419.0" width="1.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="226.2" y="430.0"></text>
</g>
<g>
<title>ipv4_mtu (7 samples, 0.06%)</title><rect x="223.7" y="403.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="226.7" y="414.0"></text>
</g>
<g>
<title>sockfd_lookup_light (14 samples, 0.12%)</title><rect x="224.6" y="483.0" width="1.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="227.6" y="494.0"></text>
</g>
<g>
<title>__fget_light (13 samples, 0.11%)</title><rect x="224.7" y="467.0" width="1.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="227.7" y="478.0"></text>
</g>
<g>
<title>__fget (10 samples, 0.09%)</title><rect x="225.1" y="451.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="228.1" y="462.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.11%)</title><rect x="226.4" y="563.0" width="1.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="229.4" y="574.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.11%)</title><rect x="226.4" y="547.0" width="1.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="229.4" y="558.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (10 samples, 0.09%)</title><rect x="226.5" y="531.0" width="1.0" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="229.5" y="542.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (8 samples, 0.07%)</title><rect x="226.7" y="515.0" width="0.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="229.7" y="526.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (5 samples, 0.04%)</title><rect x="227.0" y="499.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="230.0" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (31 samples, 0.27%)</title><rect x="227.9" y="627.0" width="3.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="230.9" y="638.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (11 samples, 0.10%)</title><rect x="227.9" y="611.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="230.9" y="622.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (11 samples, 0.10%)</title><rect x="227.9" y="595.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="230.9" y="606.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (4 samples, 0.04%)</title><rect x="228.0" y="579.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="231.0" y="590.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (4 samples, 0.04%)</title><rect x="228.0" y="563.0" width="0.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="231.0" y="574.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (6 samples, 0.05%)</title><rect x="228.5" y="579.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="231.5" y="590.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (6 samples, 0.05%)</title><rect x="228.5" y="563.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="231.5" y="574.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (5 samples, 0.04%)</title><rect x="228.6" y="547.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="231.6" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 0.04%)</title><rect x="228.6" y="531.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="231.6" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 0.04%)</title><rect x="228.6" y="515.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="231.6" y="526.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (3 samples, 0.03%)</title><rect x="228.8" y="499.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="231.8" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (20 samples, 0.18%)</title><rect x="229.1" y="611.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="232.1" y="622.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (20 samples, 0.18%)</title><rect x="229.1" y="595.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="232.1" y="606.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (14 samples, 0.12%)</title><rect x="229.3" y="579.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="232.3" y="590.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (13 samples, 0.11%)</title><rect x="229.4" y="563.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="232.4" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (12 samples, 0.11%)</title><rect x="229.5" y="547.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="232.5" y="558.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (12 samples, 0.11%)</title><rect x="229.5" y="531.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="232.5" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (11 samples, 0.10%)</title><rect x="229.5" y="515.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="232.5" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (10 samples, 0.09%)</title><rect x="229.6" y="499.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="232.6" y="510.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (10 samples, 0.09%)</title><rect x="229.6" y="483.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="232.6" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getValue (5 samples, 0.04%)</title><rect x="231.1" y="627.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="234.1" y="638.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (4 samples, 0.04%)</title><rect x="231.1" y="611.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="234.1" y="622.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (4 samples, 0.04%)</title><rect x="231.1" y="595.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="234.1" y="606.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (4 samples, 0.04%)</title><rect x="231.1" y="579.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="234.1" y="590.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (4 samples, 0.04%)</title><rect x="231.1" y="563.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="234.1" y="574.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (3 samples, 0.03%)</title><rect x="231.1" y="547.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="234.1" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.03%)</title><rect x="231.1" y="531.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="234.1" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.03%)</title><rect x="231.1" y="515.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="234.1" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$UntilIterator.hasNext (10 samples, 0.09%)</title><rect x="231.7" y="627.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="234.7" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.compareTo (10 samples, 0.09%)</title><rect x="231.7" y="611.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="234.7" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.compareTo (10 samples, 0.09%)</title><rect x="231.7" y="595.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="234.7" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (10 samples, 0.09%)</title><rect x="231.7" y="579.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="234.7" y="590.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (4 samples, 0.04%)</title><rect x="232.0" y="563.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="235.0" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$UntilIterator.next (478 samples, 4.18%)</title><rect x="232.7" y="627.0" width="49.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="235.7" y="638.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$UntilIterator.next (478 samples, 4.18%)</title><rect x="232.7" y="611.0" width="49.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="235.7" y="622.0">ru/ma..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (461 samples, 4.04%)</title><rect x="232.7" y="595.0" width="47.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="235.7" y="606.0">com/..</text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (461 samples, 4.04%)</title><rect x="232.7" y="579.0" width="47.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="235.7" y="590.0">com/..</text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (461 samples, 4.04%)</title><rect x="232.7" y="563.0" width="47.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="235.7" y="574.0">com/..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (461 samples, 4.04%)</title><rect x="232.7" y="547.0" width="47.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="235.7" y="558.0">com/..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (449 samples, 3.93%)</title><rect x="233.9" y="531.0" width="46.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="236.9" y="542.0">ru/m..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (387 samples, 3.39%)</title><rect x="234.8" y="515.0" width="39.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="237.8" y="526.0">com..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (10 samples, 0.09%)</title><rect x="234.8" y="499.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="237.8" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (5 samples, 0.04%)</title><rect x="235.2" y="483.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="238.2" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (5 samples, 0.04%)</title><rect x="235.2" y="467.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="238.2" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (5 samples, 0.04%)</title><rect x="235.2" y="451.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="238.2" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (4 samples, 0.04%)</title><rect x="235.3" y="435.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="238.3" y="446.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (183 samples, 1.60%)</title><rect x="235.8" y="499.0" width="18.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="238.8" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (183 samples, 1.60%)</title><rect x="235.8" y="483.0" width="18.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="238.8" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (183 samples, 1.60%)</title><rect x="235.8" y="467.0" width="18.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="238.8" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (175 samples, 1.53%)</title><rect x="236.5" y="451.0" width="18.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="239.5" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (175 samples, 1.53%)</title><rect x="236.5" y="435.0" width="18.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="239.5" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/123226378.compare (160 samples, 1.40%)</title><rect x="238.1" y="419.0" width="16.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="241.1" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (160 samples, 1.40%)</title><rect x="238.1" y="403.0" width="16.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="241.1" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (160 samples, 1.40%)</title><rect x="238.1" y="387.0" width="16.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="241.1" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (160 samples, 1.40%)</title><rect x="238.1" y="371.0" width="16.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="241.1" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (160 samples, 1.40%)</title><rect x="238.1" y="355.0" width="16.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="241.1" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (160 samples, 1.40%)</title><rect x="238.1" y="339.0" width="16.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="241.1" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$67/1497891062.compare (150 samples, 1.31%)</title><rect x="239.1" y="323.0" width="15.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="242.1" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (150 samples, 1.31%)</title><rect x="239.1" y="307.0" width="15.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="242.1" y="318.0"></text>
</g>
<g>
<title>itable stub (7 samples, 0.06%)</title><rect x="239.1" y="291.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="242.1" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (69 samples, 0.60%)</title><rect x="239.8" y="291.0" width="7.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="242.8" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (59 samples, 0.52%)</title><rect x="240.9" y="275.0" width="6.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="243.9" y="286.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (48 samples, 0.42%)</title><rect x="241.5" y="259.0" width="4.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="244.5" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (15 samples, 0.13%)</title><rect x="243.4" y="243.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="246.4" y="254.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (11 samples, 0.10%)</title><rect x="243.9" y="227.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="246.9" y="238.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.base (5 samples, 0.04%)</title><rect x="245.0" y="243.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="248.0" y="254.0"></text>
</g>
<g>
<title>jdk/internal/util/ArraysSupport.vectorizedMismatch (6 samples, 0.05%)</title><rect x="245.5" y="243.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="248.5" y="254.0"></text>
</g>
<g>
<title>vtable stub (3 samples, 0.03%)</title><rect x="246.1" y="243.0" width="0.3" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="249.1" y="254.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (3 samples, 0.03%)</title><rect x="246.4" y="259.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="249.4" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$66/474651931.apply (74 samples, 0.65%)</title><rect x="247.0" y="291.0" width="7.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="250.0" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (74 samples, 0.65%)</title><rect x="247.0" y="275.0" width="7.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="250.0" y="286.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (54 samples, 0.47%)</title><rect x="247.0" y="259.0" width="5.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="250.0" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (54 samples, 0.47%)</title><rect x="247.0" y="243.0" width="5.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="250.0" y="254.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (54 samples, 0.47%)</title><rect x="247.0" y="227.0" width="5.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="250.0" y="238.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (54 samples, 0.47%)</title><rect x="247.0" y="211.0" width="5.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="250.0" y="222.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (54 samples, 0.47%)</title><rect x="247.0" y="195.0" width="5.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="250.0" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (54 samples, 0.47%)</title><rect x="247.0" y="179.0" width="5.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="250.0" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (54 samples, 0.47%)</title><rect x="247.0" y="163.0" width="5.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="250.0" y="174.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (30 samples, 0.26%)</title><rect x="249.0" y="147.0" width="3.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="252.0" y="158.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (13 samples, 0.11%)</title><rect x="250.2" y="131.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="253.2" y="142.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (10 samples, 0.09%)</title><rect x="250.5" y="115.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="253.5" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (10 samples, 0.09%)</title><rect x="250.5" y="99.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="253.5" y="110.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (10 samples, 0.09%)</title><rect x="250.5" y="83.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="253.5" y="94.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (6 samples, 0.05%)</title><rect x="251.5" y="131.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="254.5" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteOrder.nativeOrder (4 samples, 0.04%)</title><rect x="252.1" y="147.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="255.1" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (20 samples, 0.18%)</title><rect x="252.5" y="259.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="255.5" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteOrder.nativeOrder (4 samples, 0.04%)</title><rect x="253.0" y="243.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="256.0" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (11 samples, 0.10%)</title><rect x="253.5" y="243.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="256.5" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (11 samples, 0.10%)</title><rect x="253.5" y="227.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="256.5" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (11 samples, 0.10%)</title><rect x="253.5" y="211.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="256.5" y="222.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (11 samples, 0.10%)</title><rect x="253.5" y="195.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="256.5" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (10 samples, 0.09%)</title><rect x="253.5" y="179.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="256.5" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (10 samples, 0.09%)</title><rect x="253.5" y="163.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="256.5" y="174.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (194 samples, 1.70%)</title><rect x="254.7" y="499.0" width="20.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="257.7" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (194 samples, 1.70%)</title><rect x="254.7" y="483.0" width="20.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="257.7" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (194 samples, 1.70%)</title><rect x="254.7" y="467.0" width="20.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="257.7" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (194 samples, 1.70%)</title><rect x="254.7" y="451.0" width="20.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="257.7" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (193 samples, 1.69%)</title><rect x="254.8" y="435.0" width="19.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="257.8" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (193 samples, 1.69%)</title><rect x="254.8" y="419.0" width="19.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="257.8" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (60 samples, 0.53%)</title><rect x="254.8" y="403.0" width="6.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="257.8" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (58 samples, 0.51%)</title><rect x="255.0" y="387.0" width="6.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="258.0" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (58 samples, 0.51%)</title><rect x="255.0" y="371.0" width="6.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="258.0" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (58 samples, 0.51%)</title><rect x="255.0" y="355.0" width="6.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="258.0" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (20 samples, 0.18%)</title><rect x="255.0" y="339.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="258.0" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (11 samples, 0.10%)</title><rect x="255.0" y="323.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="258.0" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (11 samples, 0.10%)</title><rect x="255.0" y="307.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="258.0" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (6 samples, 0.05%)</title><rect x="255.5" y="291.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="258.5" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (6 samples, 0.05%)</title><rect x="255.5" y="275.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="258.5" y="286.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (6 samples, 0.05%)</title><rect x="255.5" y="259.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="258.5" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (6 samples, 0.05%)</title><rect x="255.5" y="243.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="258.5" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (6 samples, 0.05%)</title><rect x="255.5" y="227.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="258.5" y="238.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (3 samples, 0.03%)</title><rect x="255.7" y="211.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="258.7" y="222.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (9 samples, 0.08%)</title><rect x="256.1" y="323.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="259.1" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (9 samples, 0.08%)</title><rect x="256.1" y="307.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="259.1" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (9 samples, 0.08%)</title><rect x="256.1" y="291.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="259.1" y="302.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (9 samples, 0.08%)</title><rect x="256.1" y="275.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="259.1" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (9 samples, 0.08%)</title><rect x="256.1" y="259.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="259.1" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (9 samples, 0.08%)</title><rect x="256.1" y="243.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="259.1" y="254.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (9 samples, 0.08%)</title><rect x="256.1" y="227.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="259.1" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (13 samples, 0.11%)</title><rect x="257.1" y="339.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="260.1" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (7 samples, 0.06%)</title><rect x="257.1" y="323.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="260.1" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (7 samples, 0.06%)</title><rect x="257.1" y="307.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="260.1" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (4 samples, 0.04%)</title><rect x="257.4" y="291.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="260.4" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (4 samples, 0.04%)</title><rect x="257.4" y="275.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="260.4" y="286.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (4 samples, 0.04%)</title><rect x="257.4" y="259.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="260.4" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.04%)</title><rect x="257.4" y="243.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="260.4" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.04%)</title><rect x="257.4" y="227.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="260.4" y="238.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.04%)</title><rect x="257.4" y="211.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="260.4" y="222.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (3 samples, 0.03%)</title><rect x="257.4" y="195.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="260.4" y="206.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (3 samples, 0.03%)</title><rect x="257.4" y="179.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="260.4" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (6 samples, 0.05%)</title><rect x="257.8" y="323.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="260.8" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (6 samples, 0.05%)</title><rect x="257.8" y="307.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="260.8" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (6 samples, 0.05%)</title><rect x="257.8" y="291.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="260.8" y="302.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (6 samples, 0.05%)</title><rect x="257.8" y="275.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="260.8" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (6 samples, 0.05%)</title><rect x="257.8" y="259.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="260.8" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (6 samples, 0.05%)</title><rect x="257.8" y="243.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="260.8" y="254.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (6 samples, 0.05%)</title><rect x="257.8" y="227.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="260.8" y="238.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (6 samples, 0.05%)</title><rect x="257.8" y="211.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="260.8" y="222.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (6 samples, 0.05%)</title><rect x="257.8" y="195.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="260.8" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (6 samples, 0.05%)</title><rect x="257.8" y="179.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="260.8" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.timestampAt (4 samples, 0.04%)</title><rect x="258.4" y="339.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="261.4" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (4 samples, 0.04%)</title><rect x="258.4" y="323.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="261.4" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (4 samples, 0.04%)</title><rect x="258.4" y="307.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="261.4" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (4 samples, 0.04%)</title><rect x="258.4" y="291.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="261.4" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (4 samples, 0.04%)</title><rect x="258.4" y="275.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="261.4" y="286.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (4 samples, 0.04%)</title><rect x="258.4" y="259.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="261.4" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.04%)</title><rect x="258.4" y="243.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="261.4" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.04%)</title><rect x="258.4" y="227.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="261.4" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.valueAt (21 samples, 0.18%)</title><rect x="258.8" y="339.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="261.8" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (12 samples, 0.11%)</title><rect x="258.8" y="323.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="261.8" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (12 samples, 0.11%)</title><rect x="258.8" y="307.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="261.8" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (12 samples, 0.11%)</title><rect x="258.8" y="291.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="261.8" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (12 samples, 0.11%)</title><rect x="258.8" y="275.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="261.8" y="286.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (12 samples, 0.11%)</title><rect x="258.8" y="259.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="261.8" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (12 samples, 0.11%)</title><rect x="258.8" y="243.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="261.8" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (12 samples, 0.11%)</title><rect x="258.8" y="227.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="261.8" y="238.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.04%)</title><rect x="259.6" y="211.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="262.6" y="222.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (9 samples, 0.08%)</title><rect x="260.1" y="323.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="263.1" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (9 samples, 0.08%)</title><rect x="260.1" y="307.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="263.1" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (9 samples, 0.08%)</title><rect x="260.1" y="291.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="263.1" y="302.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (9 samples, 0.08%)</title><rect x="260.1" y="275.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="263.1" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (9 samples, 0.08%)</title><rect x="260.1" y="259.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="263.1" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (9 samples, 0.08%)</title><rect x="260.1" y="243.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="263.1" y="254.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (9 samples, 0.08%)</title><rect x="260.1" y="227.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="263.1" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/123226378.compare (133 samples, 1.16%)</title><rect x="261.0" y="403.0" width="13.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="264.0" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (133 samples, 1.16%)</title><rect x="261.0" y="387.0" width="13.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="264.0" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (133 samples, 1.16%)</title><rect x="261.0" y="371.0" width="13.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="264.0" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (133 samples, 1.16%)</title><rect x="261.0" y="355.0" width="13.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="264.0" y="366.0"></text>
</g>
<g>
<title>itable stub (9 samples, 0.08%)</title><rect x="262.4" y="339.0" width="1.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="265.4" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (106 samples, 0.93%)</title><rect x="263.4" y="339.0" width="10.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="266.4" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (106 samples, 0.93%)</title><rect x="263.4" y="323.0" width="10.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="266.4" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$67/1497891062.compare (95 samples, 0.83%)</title><rect x="264.2" y="307.0" width="9.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="267.2" y="318.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (94 samples, 0.82%)</title><rect x="264.3" y="291.0" width="9.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="267.3" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (42 samples, 0.37%)</title><rect x="264.4" y="275.0" width="4.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="267.4" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (40 samples, 0.35%)</title><rect x="264.6" y="259.0" width="4.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="267.6" y="270.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (32 samples, 0.28%)</title><rect x="265.0" y="243.0" width="3.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="268.0" y="254.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (10 samples, 0.09%)</title><rect x="266.2" y="227.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="269.2" y="238.0"></text>
</g>
<g>
<title>jdk/internal/util/ArraysSupport.vectorizedMismatch (6 samples, 0.05%)</title><rect x="267.3" y="227.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="270.3" y="238.0"></text>
</g>
<g>
<title>vtable stub (4 samples, 0.04%)</title><rect x="267.9" y="227.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="270.9" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$66/474651931.apply (49 samples, 0.43%)</title><rect x="268.7" y="275.0" width="5.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="271.7" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (49 samples, 0.43%)</title><rect x="268.7" y="259.0" width="5.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="271.7" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (35 samples, 0.31%)</title><rect x="268.7" y="243.0" width="3.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="271.7" y="254.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (35 samples, 0.31%)</title><rect x="268.7" y="227.0" width="3.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="271.7" y="238.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (35 samples, 0.31%)</title><rect x="268.7" y="211.0" width="3.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="271.7" y="222.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (35 samples, 0.31%)</title><rect x="268.7" y="195.0" width="3.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="271.7" y="206.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (35 samples, 0.31%)</title><rect x="268.7" y="179.0" width="3.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="271.7" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (35 samples, 0.31%)</title><rect x="268.7" y="163.0" width="3.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="271.7" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (35 samples, 0.31%)</title><rect x="268.7" y="147.0" width="3.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="271.7" y="158.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (18 samples, 0.16%)</title><rect x="270.5" y="131.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="273.5" y="142.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (5 samples, 0.04%)</title><rect x="271.4" y="115.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="274.4" y="126.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (3 samples, 0.03%)</title><rect x="271.9" y="115.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="274.9" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (14 samples, 0.12%)</title><rect x="272.4" y="243.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="275.4" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteOrder.nativeOrder (3 samples, 0.03%)</title><rect x="273.0" y="227.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="276.0" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (5 samples, 0.04%)</title><rect x="273.3" y="227.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="276.3" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (5 samples, 0.04%)</title><rect x="273.3" y="211.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="276.3" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 0.04%)</title><rect x="273.3" y="195.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="276.3" y="206.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (5 samples, 0.04%)</title><rect x="273.3" y="179.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="276.3" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.04%)</title><rect x="273.3" y="163.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="276.3" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.04%)</title><rect x="273.3" y="147.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="276.3" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.hasNext (3 samples, 0.03%)</title><rect x="274.3" y="339.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="277.3" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.equals (25 samples, 0.22%)</title><rect x="274.7" y="515.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="277.7" y="526.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (24 samples, 0.21%)</title><rect x="274.8" y="499.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="277.8" y="510.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (5 samples, 0.04%)</title><rect x="276.0" y="483.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="279.0" y="494.0"></text>
</g>
<g>
<title>vtable stub (4 samples, 0.04%)</title><rect x="276.9" y="483.0" width="0.4" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="279.9" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$72/878358964.apply (29 samples, 0.25%)</title><rect x="277.3" y="515.0" width="3.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="280.3" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (29 samples, 0.25%)</title><rect x="277.3" y="499.0" width="3.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="280.3" y="510.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (28 samples, 0.25%)</title><rect x="277.3" y="483.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="280.3" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (28 samples, 0.25%)</title><rect x="277.3" y="467.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="280.3" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (28 samples, 0.25%)</title><rect x="277.3" y="451.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="280.3" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (28 samples, 0.25%)</title><rect x="277.3" y="435.0" width="2.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="280.3" y="446.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (28 samples, 0.25%)</title><rect x="277.3" y="419.0" width="2.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="280.3" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (28 samples, 0.25%)</title><rect x="277.3" y="403.0" width="2.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="280.3" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (28 samples, 0.25%)</title><rect x="277.3" y="387.0" width="2.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="280.3" y="398.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (28 samples, 0.25%)</title><rect x="277.3" y="371.0" width="2.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="280.3" y="382.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (3 samples, 0.03%)</title><rect x="279.3" y="355.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="282.3" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (5 samples, 0.04%)</title><rect x="279.6" y="355.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="282.6" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (3 samples, 0.03%)</title><rect x="279.8" y="339.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="282.8" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (3 samples, 0.03%)</title><rect x="279.8" y="323.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="282.8" y="334.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (3 samples, 0.03%)</title><rect x="279.8" y="307.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="282.8" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (17 samples, 0.15%)</title><rect x="280.3" y="595.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="283.3" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (17 samples, 0.15%)</title><rect x="280.3" y="579.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="283.3" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao$$Lambda$80/527983093.apply (17 samples, 0.15%)</title><rect x="280.3" y="563.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="283.3" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.lambda$iterator$0 (17 samples, 0.15%)</title><rect x="280.3" y="547.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="283.3" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (12 samples, 0.11%)</title><rect x="280.3" y="531.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="283.3" y="542.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (10 samples, 0.09%)</title><rect x="280.3" y="515.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="283.3" y="526.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (10 samples, 0.09%)</title><rect x="280.3" y="499.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="283.3" y="510.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (10 samples, 0.09%)</title><rect x="280.3" y="483.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="283.3" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (10 samples, 0.09%)</title><rect x="280.3" y="467.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="283.3" y="478.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (10 samples, 0.09%)</title><rect x="280.3" y="451.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="283.3" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (6 samples, 0.05%)</title><rect x="280.7" y="435.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="283.7" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (6 samples, 0.05%)</title><rect x="280.7" y="419.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="283.7" y="430.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (6 samples, 0.05%)</title><rect x="280.7" y="403.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="283.7" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Value.getData (5 samples, 0.04%)</title><rect x="281.6" y="531.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="284.6" y="542.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (4 samples, 0.04%)</title><rect x="281.6" y="515.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="284.6" y="526.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (4 samples, 0.04%)</title><rect x="281.6" y="499.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="284.6" y="510.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (4 samples, 0.04%)</title><rect x="281.6" y="483.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="284.6" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (4 samples, 0.04%)</title><rect x="281.6" y="467.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="284.6" y="478.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (4 samples, 0.04%)</title><rect x="281.6" y="451.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="284.6" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/StorageSession.toByteArray (31 samples, 0.27%)</title><rect x="282.1" y="627.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="285.1" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (24 samples, 0.21%)</title><rect x="282.7" y="611.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="285.7" y="622.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (14 samples, 0.12%)</title><rect x="282.7" y="595.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="285.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (9 samples, 0.08%)</title><rect x="283.2" y="579.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="286.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (9 samples, 0.08%)</title><rect x="283.2" y="563.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="286.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (9 samples, 0.08%)</title><rect x="283.2" y="547.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="286.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitiveArray (7 samples, 0.06%)</title><rect x="283.4" y="531.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="286.4" y="542.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (4 samples, 0.04%)</title><rect x="283.7" y="515.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="286.7" y="526.0"></text>
</g>
<g>
<title>gettimeofday (4 samples, 0.04%)</title><rect x="283.7" y="499.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="286.7" y="510.0"></text>
</g>
<g>
<title>[vdso] (4 samples, 0.04%)</title><rect x="283.7" y="483.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="286.7" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (10 samples, 0.09%)</title><rect x="284.1" y="595.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="287.1" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (7 samples, 0.06%)</title><rect x="284.4" y="579.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="287.4" y="590.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (7 samples, 0.06%)</title><rect x="285.3" y="723.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="288.3" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (3 samples, 0.03%)</title><rect x="285.4" y="707.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="288.4" y="718.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.03%)</title><rect x="285.4" y="691.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="288.4" y="702.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.03%)</title><rect x="285.4" y="675.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="288.4" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (3 samples, 0.03%)</title><rect x="285.4" y="659.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="288.4" y="670.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (3 samples, 0.03%)</title><rect x="285.7" y="707.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="288.7" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (56 samples, 0.49%)</title><rect x="286.2" y="739.0" width="5.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="289.2" y="750.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (56 samples, 0.49%)</title><rect x="286.2" y="723.0" width="5.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="289.2" y="734.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.04%)</title><rect x="286.2" y="707.0" width="0.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="289.2" y="718.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.04%)</title><rect x="286.2" y="691.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="289.2" y="702.0"></text>
</g>
<g>
<title>__libc_recv (52 samples, 0.46%)</title><rect x="286.6" y="707.0" width="5.4" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="289.6" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (43 samples, 0.38%)</title><rect x="287.5" y="691.0" width="4.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="290.5" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (43 samples, 0.38%)</title><rect x="287.5" y="675.0" width="4.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="290.5" y="686.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (39 samples, 0.34%)</title><rect x="288.0" y="659.0" width="4.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="291.0" y="670.0"></text>
</g>
<g>
<title>__sys_recvfrom (38 samples, 0.33%)</title><rect x="288.1" y="643.0" width="3.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="291.1" y="654.0"></text>
</g>
<g>
<title>inet_recvmsg (28 samples, 0.25%)</title><rect x="288.2" y="627.0" width="2.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="291.2" y="638.0"></text>
</g>
<g>
<title>tcp_recvmsg (28 samples, 0.25%)</title><rect x="288.2" y="611.0" width="2.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="291.2" y="622.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (8 samples, 0.07%)</title><rect x="288.8" y="595.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="291.8" y="606.0"></text>
</g>
<g>
<title>__ip_queue_xmit (8 samples, 0.07%)</title><rect x="288.8" y="579.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="291.8" y="590.0"></text>
</g>
<g>
<title>ip_local_out (3 samples, 0.03%)</title><rect x="289.0" y="563.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="292.0" y="574.0"></text>
</g>
<g>
<title>__ip_local_out (3 samples, 0.03%)</title><rect x="289.0" y="547.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="292.0" y="558.0"></text>
</g>
<g>
<title>nf_hook_slow (3 samples, 0.03%)</title><rect x="289.0" y="531.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="292.0" y="542.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (3 samples, 0.03%)</title><rect x="289.0" y="515.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="292.0" y="526.0"></text>
</g>
<g>
<title>ip_output (3 samples, 0.03%)</title><rect x="289.3" y="563.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="292.3" y="574.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (8 samples, 0.07%)</title><rect x="289.7" y="595.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="292.7" y="606.0"></text>
</g>
<g>
<title>__skb_datagram_iter (8 samples, 0.07%)</title><rect x="289.7" y="579.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="292.7" y="590.0"></text>
</g>
<g>
<title>_copy_to_iter (4 samples, 0.04%)</title><rect x="289.8" y="563.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="292.8" y="574.0"></text>
</g>
<g>
<title>copyout (4 samples, 0.04%)</title><rect x="289.8" y="547.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="292.8" y="558.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (4 samples, 0.04%)</title><rect x="289.8" y="531.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="292.8" y="542.0"></text>
</g>
<g>
<title>simple_copy_to_iter (3 samples, 0.03%)</title><rect x="290.2" y="563.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="293.2" y="574.0"></text>
</g>
<g>
<title>__check_object_size (3 samples, 0.03%)</title><rect x="290.2" y="547.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="293.2" y="558.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (3 samples, 0.03%)</title><rect x="290.7" y="595.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="293.7" y="606.0"></text>
</g>
<g>
<title>sock_recvmsg (6 samples, 0.05%)</title><rect x="291.1" y="627.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="294.1" y="638.0"></text>
</g>
<g>
<title>security_socket_recvmsg (6 samples, 0.05%)</title><rect x="291.1" y="611.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="294.1" y="622.0"></text>
</g>
<g>
<title>sock_has_perm (6 samples, 0.05%)</title><rect x="291.1" y="595.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="294.1" y="606.0"></text>
</g>
<g>
<title>sockfd_lookup_light (3 samples, 0.03%)</title><rect x="291.7" y="627.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="294.7" y="638.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.03%)</title><rect x="291.7" y="611.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="294.7" y="622.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.03%)</title><rect x="291.7" y="595.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="294.7" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/StorageSession.processWrite (13 samples, 0.11%)</title><rect x="292.0" y="755.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="295.0" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/StorageSession.next (13 samples, 0.11%)</title><rect x="292.0" y="739.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="295.0" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (8 samples, 0.07%)</title><rect x="292.0" y="723.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="295.0" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (8 samples, 0.07%)</title><rect x="292.0" y="707.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="295.0" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (8 samples, 0.07%)</title><rect x="292.0" y="691.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="295.0" y="702.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (8 samples, 0.07%)</title><rect x="292.0" y="675.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="295.0" y="686.0"></text>
</g>
<g>
<title>.annobin_send.c (7 samples, 0.06%)</title><rect x="292.0" y="659.0" width="0.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="295.0" y="670.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.06%)</title><rect x="292.0" y="643.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="295.0" y="654.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.06%)</title><rect x="292.0" y="627.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="295.0" y="638.0"></text>
</g>
<g>
<title>__x64_sys_sendto (7 samples, 0.06%)</title><rect x="292.0" y="611.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="295.0" y="622.0"></text>
</g>
<g>
<title>__sys_sendto (7 samples, 0.06%)</title><rect x="292.0" y="595.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="295.0" y="606.0"></text>
</g>
<g>
<title>sock_sendmsg (6 samples, 0.05%)</title><rect x="292.0" y="579.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="295.0" y="590.0"></text>
</g>
<g>
<title>tcp_sendmsg (6 samples, 0.05%)</title><rect x="292.0" y="563.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="295.0" y="574.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (6 samples, 0.05%)</title><rect x="292.0" y="547.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="295.0" y="558.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (5 samples, 0.04%)</title><rect x="292.1" y="531.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="295.1" y="542.0"></text>
</g>
<g>
<title>tcp_write_xmit (5 samples, 0.04%)</title><rect x="292.1" y="515.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="295.1" y="526.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (4 samples, 0.04%)</title><rect x="292.1" y="499.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="295.1" y="510.0"></text>
</g>
<g>
<title>__ip_queue_xmit (4 samples, 0.04%)</title><rect x="292.1" y="483.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="295.1" y="494.0"></text>
</g>
<g>
<title>ip_output (3 samples, 0.03%)</title><rect x="292.2" y="467.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="295.2" y="478.0"></text>
</g>
<g>
<title>ip_finish_output2 (3 samples, 0.03%)</title><rect x="292.2" y="451.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="295.2" y="462.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (3 samples, 0.03%)</title><rect x="292.2" y="435.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="295.2" y="446.0"></text>
</g>
<g>
<title>do_softirq.part.0 (3 samples, 0.03%)</title><rect x="292.2" y="419.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="295.2" y="430.0"></text>
</g>
<g>
<title>do_softirq_own_stack (3 samples, 0.03%)</title><rect x="292.2" y="403.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="295.2" y="414.0"></text>
</g>
<g>
<title>__softirqentry_text_start (3 samples, 0.03%)</title><rect x="292.2" y="387.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="295.2" y="398.0"></text>
</g>
<g>
<title>net_rx_action (3 samples, 0.03%)</title><rect x="292.2" y="371.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="295.2" y="382.0"></text>
</g>
<g>
<title>process_backlog (3 samples, 0.03%)</title><rect x="292.2" y="355.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="295.2" y="366.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (3 samples, 0.03%)</title><rect x="292.2" y="339.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="295.2" y="350.0"></text>
</g>
<g>
<title>ip_rcv (3 samples, 0.03%)</title><rect x="292.2" y="323.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="295.2" y="334.0"></text>
</g>
<g>
<title>ip_local_deliver (3 samples, 0.03%)</title><rect x="292.2" y="307.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="295.2" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$UntilIterator.next (5 samples, 0.04%)</title><rect x="292.8" y="723.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="295.8" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$UntilIterator.next (4 samples, 0.04%)</title><rect x="292.9" y="707.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="295.9" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (4 samples, 0.04%)</title><rect x="292.9" y="691.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="295.9" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (4 samples, 0.04%)</title><rect x="292.9" y="675.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="295.9" y="686.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (4 samples, 0.04%)</title><rect x="292.9" y="659.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="295.9" y="670.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (4 samples, 0.04%)</title><rect x="292.9" y="643.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="295.9" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (4 samples, 0.04%)</title><rect x="292.9" y="627.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="295.9" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (4 samples, 0.04%)</title><rect x="292.9" y="611.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="295.9" y="622.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (3 samples, 0.03%)</title><rect x="293.0" y="595.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="296.0" y="606.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (3 samples, 0.03%)</title><rect x="293.0" y="579.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="296.0" y="590.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (3 samples, 0.03%)</title><rect x="293.0" y="563.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="296.0" y="574.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (3 samples, 0.03%)</title><rect x="293.0" y="547.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="296.0" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (3 samples, 0.03%)</title><rect x="293.0" y="531.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="296.0" y="542.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (3 samples, 0.03%)</title><rect x="293.0" y="515.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="296.0" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/123226378.compare (3 samples, 0.03%)</title><rect x="293.0" y="499.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="296.0" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (3 samples, 0.03%)</title><rect x="293.0" y="483.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="296.0" y="494.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (3 samples, 0.03%)</title><rect x="293.0" y="467.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="296.0" y="478.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (3 samples, 0.03%)</title><rect x="293.0" y="451.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="296.0" y="462.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (3 samples, 0.03%)</title><rect x="293.0" y="435.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="296.0" y="446.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (3 samples, 0.03%)</title><rect x="293.0" y="419.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="296.0" y="430.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=25371] (2,472 samples, 21.64%)</title><rect x="293.3" y="803.0" width="255.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="296.3" y="814.0">[NIO Selector #1 tid=25371]</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (8 samples, 0.07%)</title><rect x="293.3" y="787.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="296.3" y="798.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (8 samples, 0.07%)</title><rect x="293.3" y="771.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="296.3" y="782.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (8 samples, 0.07%)</title><rect x="293.3" y="755.0" width="0.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="296.3" y="766.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (8 samples, 0.07%)</title><rect x="293.3" y="739.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="296.3" y="750.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (6 samples, 0.05%)</title><rect x="293.4" y="723.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="296.4" y="734.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (3 samples, 0.03%)</title><rect x="293.5" y="707.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="296.5" y="718.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (3 samples, 0.03%)</title><rect x="293.5" y="691.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="296.5" y="702.0"></text>
</g>
<g>
<title>MutatorAllocRegion::retire(bool) (3 samples, 0.03%)</title><rect x="293.5" y="675.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="296.5" y="686.0"></text>
</g>
<g>
<title>[unknown_Java] (18 samples, 0.16%)</title><rect x="294.3" y="787.0" width="1.8" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="297.3" y="798.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (2,445 samples, 21.40%)</title><rect x="296.1" y="787.0" width="252.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="299.1" y="798.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (3 samples, 0.03%)</title><rect x="296.1" y="771.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="299.1" y="782.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (3 samples, 0.03%)</title><rect x="296.1" y="755.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="299.1" y="766.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (13 samples, 0.11%)</title><rect x="296.4" y="771.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="299.4" y="782.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (13 samples, 0.11%)</title><rect x="296.4" y="755.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="299.4" y="766.0"></text>
</g>
<g>
<title>.annobin_epoll_wait.c (12 samples, 0.11%)</title><rect x="296.4" y="739.0" width="1.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="299.4" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (12 samples, 0.11%)</title><rect x="296.4" y="723.0" width="1.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="299.4" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (12 samples, 0.11%)</title><rect x="296.4" y="707.0" width="1.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="299.4" y="718.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (11 samples, 0.10%)</title><rect x="296.5" y="691.0" width="1.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="299.5" y="702.0"></text>
</g>
<g>
<title>do_epoll_wait (11 samples, 0.10%)</title><rect x="296.5" y="675.0" width="1.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="299.5" y="686.0"></text>
</g>
<g>
<title>ep_poll (11 samples, 0.10%)</title><rect x="296.5" y="659.0" width="1.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="299.5" y="670.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (9 samples, 0.08%)</title><rect x="296.5" y="643.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="299.5" y="654.0"></text>
</g>
<g>
<title>ep_send_events_proc (9 samples, 0.08%)</title><rect x="296.5" y="627.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="299.5" y="638.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (8 samples, 0.07%)</title><rect x="296.6" y="611.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="299.6" y="622.0"></text>
</g>
<g>
<title>sock_poll (6 samples, 0.05%)</title><rect x="296.8" y="595.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="299.8" y="606.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (2,429 samples, 21.26%)</title><rect x="297.8" y="771.0" width="250.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="300.8" y="782.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (2,417 samples, 21.16%)</title><rect x="297.8" y="755.0" width="249.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="300.8" y="766.0">one/nio/http/HttpSession.processR..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (2,359 samples, 20.65%)</title><rect x="297.9" y="739.0" width="243.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="300.9" y="750.0">one/nio/http/HttpSession.process..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (2,340 samples, 20.48%)</title><rect x="298.4" y="723.0" width="241.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="301.4" y="734.0">one/nio/http/HttpSession.handleP..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (2,339 samples, 20.47%)</title><rect x="298.5" y="707.0" width="241.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="301.5" y="718.0">one/nio/http/HttpServer.handleRe..</text>
</g>
<g>
<title>RequestHandler2_entities.handleRequest (2,336 samples, 20.45%)</title><rect x="298.5" y="691.0" width="241.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="301.5" y="702.0">RequestHandler2_entities.handleR..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (8 samples, 0.07%)</title><rect x="298.5" y="675.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="301.5" y="686.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (3 samples, 0.03%)</title><rect x="299.0" y="659.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="302.0" y="670.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.03%)</title><rect x="299.0" y="643.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="302.0" y="654.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.03%)</title><rect x="299.0" y="627.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="302.0" y="638.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (3 samples, 0.03%)</title><rect x="299.0" y="611.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="302.0" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.entities (2,328 samples, 20.38%)</title><rect x="299.3" y="675.0" width="240.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="302.3" y="686.0">ru/mail/polis/service/shakhmin/A..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.range (784 samples, 6.86%)</title><rect x="299.3" y="659.0" width="81.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="302.3" y="670.0">ru/mail/p..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (3 samples, 0.03%)</title><rect x="299.5" y="643.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="302.5" y="654.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (3 samples, 0.03%)</title><rect x="299.5" y="627.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="302.5" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.until (41 samples, 0.36%)</title><rect x="299.9" y="643.0" width="4.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="302.9" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$UntilIterator.&lt;init&gt; (41 samples, 0.36%)</title><rect x="299.9" y="627.0" width="4.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="302.9" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (39 samples, 0.34%)</title><rect x="299.9" y="611.0" width="4.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="302.9" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (39 samples, 0.34%)</title><rect x="299.9" y="595.0" width="4.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="302.9" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (39 samples, 0.34%)</title><rect x="299.9" y="579.0" width="4.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="302.9" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (39 samples, 0.34%)</title><rect x="299.9" y="563.0" width="4.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="302.9" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (37 samples, 0.32%)</title><rect x="300.0" y="547.0" width="3.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="303.0" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (34 samples, 0.30%)</title><rect x="300.0" y="531.0" width="3.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="303.0" y="542.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (20 samples, 0.18%)</title><rect x="300.1" y="515.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="303.1" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (20 samples, 0.18%)</title><rect x="300.1" y="499.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="303.1" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (20 samples, 0.18%)</title><rect x="300.1" y="483.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="303.1" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (20 samples, 0.18%)</title><rect x="300.1" y="467.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="303.1" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (20 samples, 0.18%)</title><rect x="300.1" y="451.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="303.1" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/123226378.compare (19 samples, 0.17%)</title><rect x="300.2" y="435.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="303.2" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (19 samples, 0.17%)</title><rect x="300.2" y="419.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="303.2" y="430.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (19 samples, 0.17%)</title><rect x="300.2" y="403.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="303.2" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (19 samples, 0.17%)</title><rect x="300.2" y="387.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="303.2" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (19 samples, 0.17%)</title><rect x="300.2" y="371.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="303.2" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (19 samples, 0.17%)</title><rect x="300.2" y="355.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="303.2" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$67/1497891062.compare (19 samples, 0.17%)</title><rect x="300.2" y="339.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="303.2" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (19 samples, 0.17%)</title><rect x="300.2" y="323.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="303.2" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (10 samples, 0.09%)</title><rect x="300.2" y="307.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="303.2" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (9 samples, 0.08%)</title><rect x="300.4" y="291.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="303.4" y="302.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (8 samples, 0.07%)</title><rect x="300.5" y="275.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="303.5" y="286.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (3 samples, 0.03%)</title><rect x="301.0" y="259.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="304.0" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$66/474651931.apply (9 samples, 0.08%)</title><rect x="301.3" y="307.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="304.3" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (9 samples, 0.08%)</title><rect x="301.3" y="291.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="304.3" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (8 samples, 0.07%)</title><rect x="301.3" y="275.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="304.3" y="286.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (8 samples, 0.07%)</title><rect x="301.3" y="259.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="304.3" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (8 samples, 0.07%)</title><rect x="301.3" y="243.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="304.3" y="254.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (8 samples, 0.07%)</title><rect x="301.3" y="227.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="304.3" y="238.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (8 samples, 0.07%)</title><rect x="301.3" y="211.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="304.3" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (8 samples, 0.07%)</title><rect x="301.3" y="195.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="304.3" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (8 samples, 0.07%)</title><rect x="301.3" y="179.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="304.3" y="190.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (5 samples, 0.04%)</title><rect x="301.6" y="163.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="304.6" y="174.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (13 samples, 0.11%)</title><rect x="302.2" y="515.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="305.2" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (13 samples, 0.11%)</title><rect x="302.2" y="499.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="305.2" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (13 samples, 0.11%)</title><rect x="302.2" y="483.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="305.2" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (13 samples, 0.11%)</title><rect x="302.2" y="467.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="305.2" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (12 samples, 0.11%)</title><rect x="302.3" y="451.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="305.3" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (12 samples, 0.11%)</title><rect x="302.3" y="435.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="305.3" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/123226378.compare (11 samples, 0.10%)</title><rect x="302.4" y="419.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="305.4" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (11 samples, 0.10%)</title><rect x="302.4" y="403.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="305.4" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (11 samples, 0.10%)</title><rect x="302.4" y="387.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="305.4" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (11 samples, 0.10%)</title><rect x="302.4" y="371.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="305.4" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (4 samples, 0.04%)</title><rect x="303.0" y="355.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="306.0" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (4 samples, 0.04%)</title><rect x="303.0" y="339.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="306.0" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$67/1497891062.compare (3 samples, 0.03%)</title><rect x="303.1" y="323.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="306.1" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (3 samples, 0.03%)</title><rect x="303.1" y="307.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="306.1" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (3 samples, 0.03%)</title><rect x="303.1" y="291.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="306.1" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (3 samples, 0.03%)</title><rect x="303.1" y="275.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="306.1" y="286.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (3 samples, 0.03%)</title><rect x="303.1" y="259.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="306.1" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (3 samples, 0.03%)</title><rect x="303.1" y="243.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="306.1" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.iterator (737 samples, 6.45%)</title><rect x="304.2" y="643.0" width="76.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="307.2" y="654.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.rowsIterator (737 samples, 6.45%)</title><rect x="304.2" y="627.0" width="76.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="307.2" y="638.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (606 samples, 5.30%)</title><rect x="304.2" y="611.0" width="62.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="307.2" y="622.0">ru/mai..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.next (44 samples, 0.39%)</title><rect x="304.7" y="595.0" width="4.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="307.7" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (44 samples, 0.39%)</title><rect x="304.7" y="579.0" width="4.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="307.7" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.descend (42 samples, 0.37%)</title><rect x="304.9" y="563.0" width="4.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="307.9" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (42 samples, 0.37%)</title><rect x="304.9" y="547.0" width="4.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="307.9" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (14 samples, 0.12%)</title><rect x="305.9" y="531.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="308.9" y="542.0"></text>
</g>
<g>
<title>java/lang/Long.compareTo (4 samples, 0.04%)</title><rect x="306.0" y="515.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="309.0" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (9 samples, 0.08%)</title><rect x="306.4" y="515.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="309.4" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (9 samples, 0.08%)</title><rect x="306.4" y="499.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="309.4" y="510.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (9 samples, 0.08%)</title><rect x="306.4" y="483.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="309.4" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (6 samples, 0.05%)</title><rect x="306.8" y="467.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="309.8" y="478.0"></text>
</g>
<g>
<title>java/lang/Long.compareTo (4 samples, 0.04%)</title><rect x="307.0" y="451.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="310.0" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (18 samples, 0.16%)</title><rect x="307.4" y="531.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="310.4" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (3 samples, 0.03%)</title><rect x="308.9" y="515.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="311.9" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (11 samples, 0.10%)</title><rect x="309.2" y="595.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="312.2" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (11 samples, 0.10%)</title><rect x="309.2" y="579.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="312.2" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (5 samples, 0.04%)</title><rect x="309.9" y="563.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="312.9" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.hiNode (5 samples, 0.04%)</title><rect x="309.9" y="547.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="312.9" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findLast (5 samples, 0.04%)</title><rect x="309.9" y="531.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="312.9" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.iterator (36 samples, 0.32%)</title><rect x="310.4" y="595.0" width="3.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="313.4" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (31 samples, 0.27%)</title><rect x="310.4" y="579.0" width="3.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="313.4" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.iterator (28 samples, 0.25%)</title><rect x="310.5" y="563.0" width="2.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="313.5" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (28 samples, 0.25%)</title><rect x="310.5" y="547.0" width="2.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="313.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (28 samples, 0.25%)</title><rect x="310.5" y="531.0" width="2.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="313.5" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (28 samples, 0.25%)</title><rect x="310.5" y="515.0" width="2.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="313.5" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (26 samples, 0.23%)</title><rect x="310.7" y="499.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="313.7" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (26 samples, 0.23%)</title><rect x="310.7" y="483.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="313.7" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (25 samples, 0.22%)</title><rect x="310.8" y="467.0" width="2.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="313.8" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (16 samples, 0.14%)</title><rect x="311.7" y="451.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="314.7" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 0.04%)</title><rect x="312.6" y="435.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="315.6" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 0.04%)</title><rect x="312.6" y="419.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="315.6" y="430.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (4 samples, 0.04%)</title><rect x="312.6" y="403.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="315.6" y="414.0"></text>
</g>
<g>
<title>vectorizedMismatch (3 samples, 0.03%)</title><rect x="313.1" y="435.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="316.1" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.reduceIterators (5 samples, 0.04%)</title><rect x="313.6" y="579.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="316.6" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (3 samples, 0.03%)</title><rect x="313.8" y="563.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="316.8" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (3 samples, 0.03%)</title><rect x="313.8" y="547.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="316.8" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (3 samples, 0.03%)</title><rect x="313.8" y="531.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="316.8" y="542.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (3 samples, 0.03%)</title><rect x="313.8" y="515.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="316.8" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (3 samples, 0.03%)</title><rect x="313.8" y="499.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="316.8" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.iterator (510 samples, 4.46%)</title><rect x="314.1" y="595.0" width="52.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="317.1" y="606.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.&lt;init&gt; (508 samples, 4.45%)</title><rect x="314.1" y="579.0" width="52.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="317.1" y="590.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.position (507 samples, 4.44%)</title><rect x="314.2" y="563.0" width="52.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="317.2" y="574.0">ru/ma..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (129 samples, 1.13%)</title><rect x="315.7" y="547.0" width="13.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="318.7" y="558.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (93 samples, 0.81%)</title><rect x="317.9" y="531.0" width="9.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="320.9" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.base (8 samples, 0.07%)</title><rect x="321.6" y="515.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="324.6" y="526.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (14 samples, 0.12%)</title><rect x="322.5" y="515.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="325.5" y="526.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (4 samples, 0.04%)</title><rect x="323.5" y="499.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="326.5" y="510.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.base (7 samples, 0.06%)</title><rect x="323.9" y="515.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="326.9" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (9 samples, 0.08%)</title><rect x="324.6" y="515.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="327.6" y="526.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (6 samples, 0.05%)</title><rect x="324.9" y="499.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="327.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/util/ArraysSupport.vectorizedMismatch (12 samples, 0.11%)</title><rect x="325.6" y="515.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="328.6" y="526.0"></text>
</g>
<g>
<title>vtable stub (7 samples, 0.06%)</title><rect x="326.8" y="515.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="329.8" y="526.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (7 samples, 0.06%)</title><rect x="327.5" y="531.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="330.5" y="542.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (3 samples, 0.03%)</title><rect x="327.9" y="515.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="330.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/util/ArraysSupport.vectorizedMismatch (6 samples, 0.05%)</title><rect x="328.2" y="531.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="331.2" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (192 samples, 1.68%)</title><rect x="329.1" y="547.0" width="19.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="332.1" y="558.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (68 samples, 0.60%)</title><rect x="329.1" y="531.0" width="7.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="332.1" y="542.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (68 samples, 0.60%)</title><rect x="329.1" y="515.0" width="7.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="332.1" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (4 samples, 0.04%)</title><rect x="331.1" y="499.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="334.1" y="510.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (44 samples, 0.39%)</title><rect x="331.5" y="499.0" width="4.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="334.5" y="510.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (44 samples, 0.39%)</title><rect x="331.5" y="483.0" width="4.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="334.5" y="494.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (44 samples, 0.39%)</title><rect x="331.5" y="467.0" width="4.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="334.5" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (44 samples, 0.39%)</title><rect x="331.5" y="451.0" width="4.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="334.5" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (44 samples, 0.39%)</title><rect x="331.5" y="435.0" width="4.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="334.5" y="446.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (44 samples, 0.39%)</title><rect x="331.5" y="419.0" width="4.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="334.5" y="430.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (28 samples, 0.25%)</title><rect x="331.5" y="403.0" width="2.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="334.5" y="414.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (8 samples, 0.07%)</title><rect x="332.7" y="387.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="335.7" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (8 samples, 0.07%)</title><rect x="332.7" y="371.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="335.7" y="382.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (8 samples, 0.07%)</title><rect x="332.7" y="355.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="335.7" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (9 samples, 0.08%)</title><rect x="333.5" y="387.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="336.5" y="398.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (16 samples, 0.14%)</title><rect x="334.4" y="403.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="337.4" y="414.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (4 samples, 0.04%)</title><rect x="335.5" y="387.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="338.5" y="398.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (124 samples, 1.09%)</title><rect x="336.1" y="531.0" width="12.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="339.1" y="542.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (124 samples, 1.09%)</title><rect x="336.1" y="515.0" width="12.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="339.1" y="526.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (124 samples, 1.09%)</title><rect x="336.1" y="499.0" width="12.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="339.1" y="510.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (124 samples, 1.09%)</title><rect x="336.1" y="483.0" width="12.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="339.1" y="494.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (124 samples, 1.09%)</title><rect x="336.1" y="467.0" width="12.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="339.1" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (124 samples, 1.09%)</title><rect x="336.1" y="451.0" width="12.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="339.1" y="462.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (124 samples, 1.09%)</title><rect x="336.1" y="435.0" width="12.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="339.1" y="446.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (110 samples, 0.96%)</title><rect x="336.1" y="419.0" width="11.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="339.1" y="430.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (110 samples, 0.96%)</title><rect x="336.1" y="403.0" width="11.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="339.1" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (5 samples, 0.04%)</title><rect x="346.6" y="387.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="349.6" y="398.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (5 samples, 0.04%)</title><rect x="346.6" y="371.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="349.6" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (3 samples, 0.03%)</title><rect x="347.1" y="387.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="350.1" y="398.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (14 samples, 0.12%)</title><rect x="347.5" y="419.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="350.5" y="430.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (14 samples, 0.12%)</title><rect x="347.5" y="403.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="350.5" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (5 samples, 0.04%)</title><rect x="348.4" y="387.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="351.4" y="398.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (5 samples, 0.04%)</title><rect x="348.4" y="371.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="351.4" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (171 samples, 1.50%)</title><rect x="348.9" y="547.0" width="17.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="351.9" y="558.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (96 samples, 0.84%)</title><rect x="349.0" y="531.0" width="9.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="352.0" y="542.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (96 samples, 0.84%)</title><rect x="349.0" y="515.0" width="9.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="352.0" y="526.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (3 samples, 0.03%)</title><rect x="351.4" y="499.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="354.4" y="510.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (70 samples, 0.61%)</title><rect x="351.7" y="499.0" width="7.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="354.7" y="510.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (70 samples, 0.61%)</title><rect x="351.7" y="483.0" width="7.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="354.7" y="494.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (70 samples, 0.61%)</title><rect x="351.7" y="467.0" width="7.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="354.7" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (70 samples, 0.61%)</title><rect x="351.7" y="451.0" width="7.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="354.7" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (70 samples, 0.61%)</title><rect x="351.7" y="435.0" width="7.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="354.7" y="446.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (70 samples, 0.61%)</title><rect x="351.7" y="419.0" width="7.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="354.7" y="430.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (58 samples, 0.51%)</title><rect x="351.7" y="403.0" width="6.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="354.7" y="414.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (58 samples, 0.51%)</title><rect x="351.7" y="387.0" width="6.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="354.7" y="398.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (12 samples, 0.11%)</title><rect x="357.7" y="403.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="360.7" y="414.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (12 samples, 0.11%)</title><rect x="357.7" y="387.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="360.7" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (7 samples, 0.06%)</title><rect x="357.8" y="371.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="360.8" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (4 samples, 0.04%)</title><rect x="358.5" y="371.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="361.5" y="382.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (4 samples, 0.04%)</title><rect x="358.5" y="355.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="361.5" y="366.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (74 samples, 0.65%)</title><rect x="358.9" y="531.0" width="7.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="361.9" y="542.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (74 samples, 0.65%)</title><rect x="358.9" y="515.0" width="7.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="361.9" y="526.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (74 samples, 0.65%)</title><rect x="358.9" y="499.0" width="7.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="361.9" y="510.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (74 samples, 0.65%)</title><rect x="358.9" y="483.0" width="7.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="361.9" y="494.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (74 samples, 0.65%)</title><rect x="358.9" y="467.0" width="7.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="361.9" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (74 samples, 0.65%)</title><rect x="358.9" y="451.0" width="7.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="361.9" y="462.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (74 samples, 0.65%)</title><rect x="358.9" y="435.0" width="7.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="361.9" y="446.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (46 samples, 0.40%)</title><rect x="358.9" y="419.0" width="4.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="361.9" y="430.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (46 samples, 0.40%)</title><rect x="358.9" y="403.0" width="4.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="361.9" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (46 samples, 0.40%)</title><rect x="358.9" y="387.0" width="4.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="361.9" y="398.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (7 samples, 0.06%)</title><rect x="362.6" y="371.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="365.6" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (3 samples, 0.03%)</title><rect x="363.4" y="371.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="366.4" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (28 samples, 0.25%)</title><rect x="363.7" y="419.0" width="2.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="366.7" y="430.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (28 samples, 0.25%)</title><rect x="363.7" y="403.0" width="2.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="366.7" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (28 samples, 0.25%)</title><rect x="363.7" y="387.0" width="2.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="366.7" y="398.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (4 samples, 0.04%)</title><rect x="365.5" y="371.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="368.5" y="382.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (6 samples, 0.05%)</title><rect x="365.9" y="371.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="368.9" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.reduceIterators (131 samples, 1.15%)</title><rect x="366.8" y="611.0" width="13.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="369.8" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (107 samples, 0.94%)</title><rect x="366.8" y="595.0" width="11.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="369.8" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (107 samples, 0.94%)</title><rect x="366.8" y="579.0" width="11.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="369.8" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (10 samples, 0.09%)</title><rect x="367.1" y="563.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="370.1" y="574.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (10 samples, 0.09%)</title><rect x="367.1" y="547.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="370.1" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (10 samples, 0.09%)</title><rect x="367.1" y="531.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="370.1" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (9 samples, 0.08%)</title><rect x="367.2" y="515.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="370.2" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (3 samples, 0.03%)</title><rect x="367.3" y="499.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="370.3" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.equals (5 samples, 0.04%)</title><rect x="367.6" y="499.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="370.6" y="510.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (4 samples, 0.04%)</title><rect x="367.7" y="483.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="370.7" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (93 samples, 0.81%)</title><rect x="368.2" y="563.0" width="9.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="371.2" y="574.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (93 samples, 0.81%)</title><rect x="368.2" y="547.0" width="9.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="371.2" y="558.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (91 samples, 0.80%)</title><rect x="368.4" y="531.0" width="9.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="371.4" y="542.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (91 samples, 0.80%)</title><rect x="368.4" y="515.0" width="9.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="371.4" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (91 samples, 0.80%)</title><rect x="368.4" y="499.0" width="9.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="371.4" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (91 samples, 0.80%)</title><rect x="368.4" y="483.0" width="9.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="371.4" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (35 samples, 0.31%)</title><rect x="368.4" y="467.0" width="3.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="371.4" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (33 samples, 0.29%)</title><rect x="368.6" y="451.0" width="3.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="371.6" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (33 samples, 0.29%)</title><rect x="368.6" y="435.0" width="3.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="371.6" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (33 samples, 0.29%)</title><rect x="368.6" y="419.0" width="3.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="371.6" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (13 samples, 0.11%)</title><rect x="368.7" y="403.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="371.7" y="414.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (7 samples, 0.06%)</title><rect x="368.7" y="387.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="371.7" y="398.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (7 samples, 0.06%)</title><rect x="368.7" y="371.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="371.7" y="382.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (4 samples, 0.04%)</title><rect x="369.0" y="355.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="372.0" y="366.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (4 samples, 0.04%)</title><rect x="369.0" y="339.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="372.0" y="350.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (4 samples, 0.04%)</title><rect x="369.0" y="323.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="372.0" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.04%)</title><rect x="369.0" y="307.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="372.0" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.04%)</title><rect x="369.0" y="291.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="372.0" y="302.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (3 samples, 0.03%)</title><rect x="369.1" y="275.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="372.1" y="286.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (6 samples, 0.05%)</title><rect x="369.5" y="387.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="372.5" y="398.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (6 samples, 0.05%)</title><rect x="369.5" y="371.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="372.5" y="382.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (6 samples, 0.05%)</title><rect x="369.5" y="355.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="372.5" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (6 samples, 0.05%)</title><rect x="369.5" y="339.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="372.5" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (6 samples, 0.05%)</title><rect x="369.5" y="323.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="372.5" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (6 samples, 0.05%)</title><rect x="369.5" y="307.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="372.5" y="318.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (6 samples, 0.05%)</title><rect x="369.5" y="291.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="372.5" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (6 samples, 0.05%)</title><rect x="370.1" y="403.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="373.1" y="414.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (3 samples, 0.03%)</title><rect x="370.1" y="387.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="373.1" y="398.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (3 samples, 0.03%)</title><rect x="370.1" y="371.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="373.1" y="382.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (3 samples, 0.03%)</title><rect x="370.1" y="355.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="373.1" y="366.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (3 samples, 0.03%)</title><rect x="370.1" y="339.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="373.1" y="350.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (3 samples, 0.03%)</title><rect x="370.1" y="323.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="373.1" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.03%)</title><rect x="370.1" y="307.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="373.1" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.03%)</title><rect x="370.1" y="291.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="373.1" y="302.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (3 samples, 0.03%)</title><rect x="370.1" y="275.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="373.1" y="286.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (3 samples, 0.03%)</title><rect x="370.4" y="387.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="373.4" y="398.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (3 samples, 0.03%)</title><rect x="370.4" y="371.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="373.4" y="382.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (3 samples, 0.03%)</title><rect x="370.4" y="355.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="373.4" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (3 samples, 0.03%)</title><rect x="370.4" y="339.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="373.4" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.03%)</title><rect x="370.4" y="323.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="373.4" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.03%)</title><rect x="370.4" y="307.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="373.4" y="318.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (3 samples, 0.03%)</title><rect x="370.4" y="291.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="373.4" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.timestampAt (3 samples, 0.03%)</title><rect x="370.7" y="403.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="373.7" y="414.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (3 samples, 0.03%)</title><rect x="370.7" y="387.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="373.7" y="398.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (3 samples, 0.03%)</title><rect x="370.7" y="371.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="373.7" y="382.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (3 samples, 0.03%)</title><rect x="370.7" y="355.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="373.7" y="366.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (3 samples, 0.03%)</title><rect x="370.7" y="339.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="373.7" y="350.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (3 samples, 0.03%)</title><rect x="370.7" y="323.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="373.7" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.03%)</title><rect x="370.7" y="307.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="373.7" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.03%)</title><rect x="370.7" y="291.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="373.7" y="302.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (3 samples, 0.03%)</title><rect x="370.7" y="275.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="373.7" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.valueAt (10 samples, 0.09%)</title><rect x="371.0" y="403.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="374.0" y="414.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (6 samples, 0.05%)</title><rect x="371.0" y="387.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="374.0" y="398.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (6 samples, 0.05%)</title><rect x="371.0" y="371.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="374.0" y="382.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (6 samples, 0.05%)</title><rect x="371.0" y="355.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="374.0" y="366.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (6 samples, 0.05%)</title><rect x="371.0" y="339.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="374.0" y="350.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (6 samples, 0.05%)</title><rect x="371.0" y="323.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="374.0" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (6 samples, 0.05%)</title><rect x="371.0" y="307.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="374.0" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (6 samples, 0.05%)</title><rect x="371.0" y="291.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="374.0" y="302.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.04%)</title><rect x="371.2" y="275.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="374.2" y="286.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (4 samples, 0.04%)</title><rect x="371.6" y="387.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="374.6" y="398.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (4 samples, 0.04%)</title><rect x="371.6" y="371.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="374.6" y="382.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (4 samples, 0.04%)</title><rect x="371.6" y="355.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="374.6" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (4 samples, 0.04%)</title><rect x="371.6" y="339.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="374.6" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.04%)</title><rect x="371.6" y="323.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="374.6" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.04%)</title><rect x="371.6" y="307.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="374.6" y="318.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.04%)</title><rect x="371.6" y="291.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="374.6" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/123226378.compare (56 samples, 0.49%)</title><rect x="372.0" y="467.0" width="5.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="375.0" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (56 samples, 0.49%)</title><rect x="372.0" y="451.0" width="5.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="375.0" y="462.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (56 samples, 0.49%)</title><rect x="372.0" y="435.0" width="5.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="375.0" y="446.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (56 samples, 0.49%)</title><rect x="372.0" y="419.0" width="5.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="375.0" y="430.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (41 samples, 0.36%)</title><rect x="373.2" y="403.0" width="4.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="376.2" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (41 samples, 0.36%)</title><rect x="373.2" y="387.0" width="4.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="376.2" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$67/1497891062.compare (35 samples, 0.31%)</title><rect x="373.6" y="371.0" width="3.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="376.6" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (35 samples, 0.31%)</title><rect x="373.6" y="355.0" width="3.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="376.6" y="366.0"></text>
</g>
<g>
<title>itable stub (4 samples, 0.04%)</title><rect x="373.6" y="339.0" width="0.4" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="376.6" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (8 samples, 0.07%)</title><rect x="374.0" y="339.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="377.0" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (8 samples, 0.07%)</title><rect x="374.0" y="323.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="377.0" y="334.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (7 samples, 0.06%)</title><rect x="374.1" y="307.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="377.1" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$66/474651931.apply (21 samples, 0.18%)</title><rect x="374.8" y="339.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="377.8" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (21 samples, 0.18%)</title><rect x="374.8" y="323.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="377.8" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (17 samples, 0.15%)</title><rect x="374.8" y="307.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="377.8" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (17 samples, 0.15%)</title><rect x="374.8" y="291.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="377.8" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (17 samples, 0.15%)</title><rect x="374.8" y="275.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="377.8" y="286.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (17 samples, 0.15%)</title><rect x="374.8" y="259.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="377.8" y="270.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (17 samples, 0.15%)</title><rect x="374.8" y="243.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="377.8" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (17 samples, 0.15%)</title><rect x="374.8" y="227.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="377.8" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (17 samples, 0.15%)</title><rect x="374.8" y="211.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="377.8" y="222.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (11 samples, 0.10%)</title><rect x="375.4" y="195.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="378.4" y="206.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (3 samples, 0.03%)</title><rect x="375.7" y="179.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="378.7" y="190.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (6 samples, 0.05%)</title><rect x="376.0" y="179.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="379.0" y="190.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (4 samples, 0.04%)</title><rect x="376.6" y="307.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="379.6" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (3 samples, 0.03%)</title><rect x="376.7" y="291.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="379.7" y="302.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.03%)</title><rect x="376.7" y="275.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="379.7" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.03%)</title><rect x="376.7" y="259.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="379.7" y="270.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (3 samples, 0.03%)</title><rect x="376.7" y="243.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="379.7" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (3 samples, 0.03%)</title><rect x="376.7" y="227.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="379.7" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (3 samples, 0.03%)</title><rect x="376.7" y="211.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="379.7" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.hasNext (4 samples, 0.04%)</title><rect x="377.4" y="403.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="380.4" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (24 samples, 0.21%)</title><rect x="377.8" y="595.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="380.8" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (24 samples, 0.21%)</title><rect x="377.8" y="579.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="380.8" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (23 samples, 0.20%)</title><rect x="377.9" y="563.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="380.9" y="574.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (3 samples, 0.03%)</title><rect x="377.9" y="547.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="380.9" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (3 samples, 0.03%)</title><rect x="377.9" y="531.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="380.9" y="542.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (3 samples, 0.03%)</title><rect x="377.9" y="515.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="380.9" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (3 samples, 0.03%)</title><rect x="377.9" y="499.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="380.9" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (3 samples, 0.03%)</title><rect x="377.9" y="483.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="380.9" y="494.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (14 samples, 0.12%)</title><rect x="378.2" y="547.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="381.2" y="558.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (14 samples, 0.12%)</title><rect x="378.2" y="531.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="381.2" y="542.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (14 samples, 0.12%)</title><rect x="378.2" y="515.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="381.2" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (13 samples, 0.11%)</title><rect x="378.3" y="499.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="381.3" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (13 samples, 0.11%)</title><rect x="378.3" y="483.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="381.3" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/123226378.compare (12 samples, 0.11%)</title><rect x="378.4" y="467.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="381.4" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (12 samples, 0.11%)</title><rect x="378.4" y="451.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="381.4" y="462.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (12 samples, 0.11%)</title><rect x="378.4" y="435.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="381.4" y="446.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (12 samples, 0.11%)</title><rect x="378.4" y="419.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="381.4" y="430.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (12 samples, 0.11%)</title><rect x="378.4" y="403.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="381.4" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (12 samples, 0.11%)</title><rect x="378.4" y="387.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="381.4" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$67/1497891062.compare (11 samples, 0.10%)</title><rect x="378.5" y="371.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="381.5" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (11 samples, 0.10%)</title><rect x="378.5" y="355.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="381.5" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (5 samples, 0.04%)</title><rect x="378.8" y="339.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="381.8" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 0.04%)</title><rect x="378.9" y="323.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="381.9" y="334.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (3 samples, 0.03%)</title><rect x="378.9" y="307.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="381.9" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$66/474651931.apply (4 samples, 0.04%)</title><rect x="379.3" y="339.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="382.3" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (4 samples, 0.04%)</title><rect x="379.3" y="323.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="382.3" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (3 samples, 0.03%)</title><rect x="379.3" y="307.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="382.3" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (3 samples, 0.03%)</title><rect x="379.3" y="291.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="382.3" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (3 samples, 0.03%)</title><rect x="379.3" y="275.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="382.3" y="286.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (3 samples, 0.03%)</title><rect x="379.3" y="259.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="382.3" y="270.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (3 samples, 0.03%)</title><rect x="379.3" y="243.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="382.3" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.03%)</title><rect x="379.3" y="227.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="382.3" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.03%)</title><rect x="379.3" y="211.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="382.3" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (6 samples, 0.05%)</title><rect x="379.7" y="547.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="382.7" y="558.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (6 samples, 0.05%)</title><rect x="379.7" y="531.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="382.7" y="542.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (6 samples, 0.05%)</title><rect x="379.7" y="515.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="382.7" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (6 samples, 0.05%)</title><rect x="379.7" y="499.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="382.7" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (6 samples, 0.05%)</title><rect x="379.7" y="483.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="382.7" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (6 samples, 0.05%)</title><rect x="379.7" y="467.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="382.7" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/123226378.compare (4 samples, 0.04%)</title><rect x="379.9" y="451.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="382.9" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (4 samples, 0.04%)</title><rect x="379.9" y="435.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="382.9" y="446.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (4 samples, 0.04%)</title><rect x="379.9" y="419.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="382.9" y="430.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (4 samples, 0.04%)</title><rect x="379.9" y="403.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="382.9" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (4 samples, 0.04%)</title><rect x="379.9" y="387.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="382.9" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (4 samples, 0.04%)</title><rect x="379.9" y="371.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="382.9" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$67/1497891062.compare (3 samples, 0.03%)</title><rect x="379.9" y="355.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="382.9" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (3 samples, 0.03%)</title><rect x="379.9" y="339.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="382.9" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/StorageSession.stream (1,544 samples, 13.52%)</title><rect x="380.3" y="659.0" width="159.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="383.3" y="670.0">ru/mail/polis/servic..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (237 samples, 2.07%)</title><rect x="380.4" y="643.0" width="24.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="383.4" y="654.0">o..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (8 samples, 0.07%)</title><rect x="380.7" y="627.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="383.7" y="638.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (3 samples, 0.03%)</title><rect x="381.2" y="611.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="384.2" y="622.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (3 samples, 0.03%)</title><rect x="381.2" y="595.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="384.2" y="606.0"></text>
</g>
<g>
<title>java/lang/String.charAt (3 samples, 0.03%)</title><rect x="381.2" y="579.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="384.2" y="590.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (225 samples, 1.97%)</title><rect x="381.5" y="627.0" width="23.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="384.5" y="638.0">o..</text>
</g>
<g>
<title>one/nio/net/Session.write (225 samples, 1.97%)</title><rect x="381.5" y="611.0" width="23.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="384.5" y="622.0">o..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (223 samples, 1.95%)</title><rect x="381.7" y="595.0" width="23.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="384.7" y="606.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (222 samples, 1.94%)</title><rect x="381.8" y="579.0" width="23.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="384.8" y="590.0">o..</text>
</g>
<g>
<title>.annobin_send.c (219 samples, 1.92%)</title><rect x="381.8" y="563.0" width="22.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="384.8" y="574.0">...</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (207 samples, 1.81%)</title><rect x="383.1" y="547.0" width="21.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="386.1" y="558.0">e..</text>
</g>
<g>
<title>do_syscall_64 (207 samples, 1.81%)</title><rect x="383.1" y="531.0" width="21.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="386.1" y="542.0">d..</text>
</g>
<g>
<title>__x64_sys_sendto (204 samples, 1.79%)</title><rect x="383.3" y="515.0" width="21.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="386.3" y="526.0">_..</text>
</g>
<g>
<title>__sys_sendto (204 samples, 1.79%)</title><rect x="383.3" y="499.0" width="21.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="386.3" y="510.0">_..</text>
</g>
<g>
<title>sock_sendmsg (202 samples, 1.77%)</title><rect x="383.3" y="483.0" width="20.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="386.3" y="494.0"></text>
</g>
<g>
<title>security_socket_sendmsg (3 samples, 0.03%)</title><rect x="383.3" y="467.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="386.3" y="478.0"></text>
</g>
<g>
<title>sock_has_perm (3 samples, 0.03%)</title><rect x="383.3" y="451.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="386.3" y="462.0"></text>
</g>
<g>
<title>tcp_sendmsg (199 samples, 1.74%)</title><rect x="383.6" y="467.0" width="20.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="386.6" y="478.0"></text>
</g>
<g>
<title>release_sock (3 samples, 0.03%)</title><rect x="383.9" y="451.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="386.9" y="462.0"></text>
</g>
<g>
<title>__release_sock (3 samples, 0.03%)</title><rect x="383.9" y="435.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="386.9" y="446.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (3 samples, 0.03%)</title><rect x="383.9" y="419.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="386.9" y="430.0"></text>
</g>
<g>
<title>tcp_rcv_established (3 samples, 0.03%)</title><rect x="383.9" y="403.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="386.9" y="414.0"></text>
</g>
<g>
<title>tcp_ack (3 samples, 0.03%)</title><rect x="383.9" y="387.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="386.9" y="398.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (193 samples, 1.69%)</title><rect x="384.2" y="451.0" width="20.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="387.2" y="462.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (175 samples, 1.53%)</title><rect x="384.5" y="435.0" width="18.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="387.5" y="446.0"></text>
</g>
<g>
<title>tcp_write_xmit (175 samples, 1.53%)</title><rect x="384.5" y="419.0" width="18.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="387.5" y="430.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (163 samples, 1.43%)</title><rect x="384.7" y="403.0" width="16.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="387.7" y="414.0"></text>
</g>
<g>
<title>__ip_queue_xmit (157 samples, 1.37%)</title><rect x="385.1" y="387.0" width="16.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="388.1" y="398.0"></text>
</g>
<g>
<title>ip_local_out (34 samples, 0.30%)</title><rect x="385.4" y="371.0" width="3.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="388.4" y="382.0"></text>
</g>
<g>
<title>__ip_local_out (34 samples, 0.30%)</title><rect x="385.4" y="355.0" width="3.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="388.4" y="366.0"></text>
</g>
<g>
<title>nf_hook_slow (33 samples, 0.29%)</title><rect x="385.5" y="339.0" width="3.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="388.5" y="350.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (9 samples, 0.08%)</title><rect x="385.5" y="323.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="388.5" y="334.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (4 samples, 0.04%)</title><rect x="386.5" y="323.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="389.5" y="334.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (4 samples, 0.04%)</title><rect x="386.5" y="307.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="389.5" y="318.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (15 samples, 0.13%)</title><rect x="387.2" y="323.0" width="1.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="390.2" y="334.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get	[nf_conntrack] (7 samples, 0.06%)</title><rect x="387.5" y="307.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="390.5" y="318.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet	[nf_conntrack] (5 samples, 0.04%)</title><rect x="388.3" y="307.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="391.3" y="318.0"></text>
</g>
<g>
<title>nf_ct_seq_offset	[nf_conntrack] (3 samples, 0.03%)</title><rect x="388.5" y="291.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="391.5" y="302.0"></text>
</g>
<g>
<title>ip_output (120 samples, 1.05%)</title><rect x="388.9" y="371.0" width="12.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="391.9" y="382.0"></text>
</g>
<g>
<title>ip_finish_output2 (104 samples, 0.91%)</title><rect x="389.1" y="355.0" width="10.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="392.1" y="366.0"></text>
</g>
<g>
<title>__dev_queue_xmit (8 samples, 0.07%)</title><rect x="389.3" y="339.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="392.3" y="350.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (7 samples, 0.06%)</title><rect x="389.3" y="323.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="392.3" y="334.0"></text>
</g>
<g>
<title>loopback_xmit (7 samples, 0.06%)</title><rect x="389.3" y="307.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="392.3" y="318.0"></text>
</g>
<g>
<title>netif_rx (5 samples, 0.04%)</title><rect x="389.4" y="291.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="392.4" y="302.0"></text>
</g>
<g>
<title>netif_rx_internal (5 samples, 0.04%)</title><rect x="389.4" y="275.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="392.4" y="286.0"></text>
</g>
<g>
<title>enqueue_to_backlog (3 samples, 0.03%)</title><rect x="389.4" y="259.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="392.4" y="270.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (94 samples, 0.82%)</title><rect x="390.1" y="339.0" width="9.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="393.1" y="350.0"></text>
</g>
<g>
<title>do_softirq.part.0 (93 samples, 0.81%)</title><rect x="390.2" y="323.0" width="9.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="393.2" y="334.0"></text>
</g>
<g>
<title>do_softirq_own_stack (93 samples, 0.81%)</title><rect x="390.2" y="307.0" width="9.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="393.2" y="318.0"></text>
</g>
<g>
<title>__softirqentry_text_start (93 samples, 0.81%)</title><rect x="390.2" y="291.0" width="9.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="393.2" y="302.0"></text>
</g>
<g>
<title>net_rx_action (92 samples, 0.81%)</title><rect x="390.3" y="275.0" width="9.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="393.3" y="286.0"></text>
</g>
<g>
<title>process_backlog (91 samples, 0.80%)</title><rect x="390.4" y="259.0" width="9.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="393.4" y="270.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (91 samples, 0.80%)</title><rect x="390.4" y="243.0" width="9.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="393.4" y="254.0"></text>
</g>
<g>
<title>ip_rcv (89 samples, 0.78%)</title><rect x="390.6" y="227.0" width="9.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="393.6" y="238.0"></text>
</g>
<g>
<title>ip_local_deliver (69 samples, 0.60%)</title><rect x="390.6" y="211.0" width="7.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="393.6" y="222.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (53 samples, 0.46%)</title><rect x="390.7" y="195.0" width="5.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="393.7" y="206.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (53 samples, 0.46%)</title><rect x="390.7" y="179.0" width="5.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="393.7" y="190.0"></text>
</g>
<g>
<title>tcp_v4_rcv (52 samples, 0.46%)</title><rect x="390.8" y="163.0" width="5.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="393.8" y="174.0"></text>
</g>
<g>
<title>__inet_lookup_established (4 samples, 0.04%)</title><rect x="391.1" y="147.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="394.1" y="158.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (44 samples, 0.39%)</title><rect x="391.7" y="147.0" width="4.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="394.7" y="158.0"></text>
</g>
<g>
<title>tcp_rcv_established (44 samples, 0.39%)</title><rect x="391.7" y="131.0" width="4.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="394.7" y="142.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (3 samples, 0.03%)</title><rect x="391.7" y="115.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="394.7" y="126.0"></text>
</g>
<g>
<title>__ip_queue_xmit (3 samples, 0.03%)</title><rect x="391.7" y="99.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="394.7" y="110.0"></text>
</g>
<g>
<title>sock_def_readable (5 samples, 0.04%)</title><rect x="392.1" y="115.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="395.1" y="126.0"></text>
</g>
<g>
<title>__wake_up_common_lock (5 samples, 0.04%)</title><rect x="392.1" y="99.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="395.1" y="110.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (5 samples, 0.04%)</title><rect x="392.1" y="83.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="395.1" y="94.0"></text>
</g>
<g>
<title>tcp_ack (11 samples, 0.10%)</title><rect x="392.6" y="115.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="395.6" y="126.0"></text>
</g>
<g>
<title>tcp_data_queue (20 samples, 0.18%)</title><rect x="393.8" y="115.0" width="2.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="396.8" y="126.0"></text>
</g>
<g>
<title>sock_def_readable (17 samples, 0.15%)</title><rect x="394.1" y="99.0" width="1.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="397.1" y="110.0"></text>
</g>
<g>
<title>__wake_up_common_lock (14 samples, 0.12%)</title><rect x="394.5" y="83.0" width="1.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="397.5" y="94.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (14 samples, 0.12%)</title><rect x="394.5" y="67.0" width="1.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="397.5" y="78.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (3 samples, 0.03%)</title><rect x="395.9" y="115.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="398.9" y="126.0"></text>
</g>
<g>
<title>nf_hook_slow (15 samples, 0.13%)</title><rect x="396.2" y="195.0" width="1.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="399.2" y="206.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (12 samples, 0.11%)</title><rect x="396.2" y="179.0" width="1.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="399.2" y="190.0"></text>
</g>
<g>
<title>nf_hook_slow (17 samples, 0.15%)</title><rect x="398.1" y="211.0" width="1.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="401.1" y="222.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (9 samples, 0.08%)</title><rect x="398.5" y="195.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="401.5" y="206.0"></text>
</g>
<g>
<title>nf_hook_slow (13 samples, 0.11%)</title><rect x="399.9" y="355.0" width="1.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="402.9" y="366.0"></text>
</g>
<g>
<title>nf_nat_ipv4_out	[nf_nat] (3 samples, 0.03%)</title><rect x="400.5" y="339.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="403.5" y="350.0"></text>
</g>
<g>
<title>selinux_ip_postroute (3 samples, 0.03%)</title><rect x="400.9" y="339.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="403.9" y="350.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (9 samples, 0.08%)</title><rect x="401.6" y="403.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="404.6" y="414.0"></text>
</g>
<g>
<title>sk_reset_timer (4 samples, 0.04%)</title><rect x="401.7" y="387.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="404.7" y="398.0"></text>
</g>
<g>
<title>tcp_rearm_rto (3 samples, 0.03%)</title><rect x="402.2" y="387.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="405.2" y="398.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (6 samples, 0.05%)</title><rect x="402.8" y="435.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="405.8" y="446.0"></text>
</g>
<g>
<title>__alloc_skb (6 samples, 0.05%)</title><rect x="402.8" y="419.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="405.8" y="430.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (4 samples, 0.04%)</title><rect x="403.0" y="403.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="406.0" y="414.0"></text>
</g>
<g>
<title>tcp_push (3 samples, 0.03%)</title><rect x="403.6" y="435.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="406.6" y="446.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.03%)</title><rect x="404.5" y="563.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="407.5" y="574.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.03%)</title><rect x="404.5" y="547.0" width="0.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="407.5" y="558.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (3 samples, 0.03%)</title><rect x="404.5" y="531.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="407.5" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/StorageSession.next (1,305 samples, 11.42%)</title><rect x="405.0" y="643.0" width="134.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="408.0" y="654.0">ru/mail/polis/ser..</text>
</g>
<g>
<title>one/nio/net/Session.write (917 samples, 8.03%)</title><rect x="405.0" y="627.0" width="94.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="408.0" y="638.0">one/nio/net..</text>
</g>
<g>
<title>one/nio/net/Session.write (917 samples, 8.03%)</title><rect x="405.0" y="611.0" width="94.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="408.0" y="622.0">one/nio/net..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (916 samples, 8.02%)</title><rect x="405.1" y="595.0" width="94.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="408.1" y="606.0">one/nio/net..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (916 samples, 8.02%)</title><rect x="405.1" y="579.0" width="94.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="408.1" y="590.0">one/nio/net..</text>
</g>
<g>
<title>.annobin_send.c (890 samples, 7.79%)</title><rect x="405.5" y="563.0" width="91.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="408.5" y="574.0">.annobin_se..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (827 samples, 7.24%)</title><rect x="412.0" y="547.0" width="85.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="415.0" y="558.0">entry_SYSC..</text>
</g>
<g>
<title>do_syscall_64 (827 samples, 7.24%)</title><rect x="412.0" y="531.0" width="85.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="415.0" y="542.0">do_syscall..</text>
</g>
<g>
<title>__x64_sys_sendto (797 samples, 6.98%)</title><rect x="415.1" y="515.0" width="82.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="418.1" y="526.0">__x64_sys..</text>
</g>
<g>
<title>__sys_sendto (796 samples, 6.97%)</title><rect x="415.2" y="499.0" width="82.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="418.2" y="510.0">__sys_sen..</text>
</g>
<g>
<title>import_single_range (3 samples, 0.03%)</title><rect x="415.5" y="483.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="418.5" y="494.0"></text>
</g>
<g>
<title>sock_sendmsg (772 samples, 6.76%)</title><rect x="415.8" y="483.0" width="79.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="418.8" y="494.0">sock_send..</text>
</g>
<g>
<title>security_socket_sendmsg (15 samples, 0.13%)</title><rect x="415.8" y="467.0" width="1.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="418.8" y="478.0"></text>
</g>
<g>
<title>sock_has_perm (15 samples, 0.13%)</title><rect x="415.8" y="451.0" width="1.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="418.8" y="462.0"></text>
</g>
<g>
<title>avc_has_perm (11 samples, 0.10%)</title><rect x="416.2" y="435.0" width="1.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="419.2" y="446.0"></text>
</g>
<g>
<title>tcp_sendmsg (757 samples, 6.63%)</title><rect x="417.4" y="467.0" width="78.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="420.4" y="478.0">tcp_sendmsg</text>
</g>
<g>
<title>lock_sock_nested (6 samples, 0.05%)</title><rect x="417.7" y="451.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="420.7" y="462.0"></text>
</g>
<g>
<title>queued_spin_lock_slowpath (3 samples, 0.03%)</title><rect x="418.0" y="435.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="421.0" y="446.0"></text>
</g>
<g>
<title>release_sock (30 samples, 0.26%)</title><rect x="418.3" y="451.0" width="3.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="421.3" y="462.0"></text>
</g>
<g>
<title>__release_sock (28 samples, 0.25%)</title><rect x="418.3" y="435.0" width="2.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="421.3" y="446.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (26 samples, 0.23%)</title><rect x="418.5" y="419.0" width="2.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="421.5" y="430.0"></text>
</g>
<g>
<title>tcp_rcv_established (24 samples, 0.21%)</title><rect x="418.7" y="403.0" width="2.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="421.7" y="414.0"></text>
</g>
<g>
<title>__kfree_skb (6 samples, 0.05%)</title><rect x="419.0" y="387.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="422.0" y="398.0"></text>
</g>
<g>
<title>__slab_free (4 samples, 0.04%)</title><rect x="419.0" y="371.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="422.0" y="382.0"></text>
</g>
<g>
<title>tcp_ack (13 samples, 0.11%)</title><rect x="419.7" y="387.0" width="1.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="422.7" y="398.0"></text>
</g>
<g>
<title>__kfree_skb (5 samples, 0.04%)</title><rect x="420.0" y="371.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="423.0" y="382.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (718 samples, 6.29%)</title><rect x="421.4" y="451.0" width="74.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="424.4" y="462.0">tcp_send..</text>
</g>
<g>
<title>__tcp_push_pending_frames (626 samples, 5.48%)</title><rect x="423.4" y="435.0" width="64.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="426.4" y="446.0">__tcp_p..</text>
</g>
<g>
<title>tcp_write_xmit (626 samples, 5.48%)</title><rect x="423.4" y="419.0" width="64.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="426.4" y="430.0">tcp_wri..</text>
</g>
<g>
<title>__tcp_transmit_skb (579 samples, 5.07%)</title><rect x="424.0" y="403.0" width="59.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="427.0" y="414.0">__tcp_..</text>
</g>
<g>
<title>__ip_queue_xmit (555 samples, 4.86%)</title><rect x="424.7" y="387.0" width="57.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="427.7" y="398.0">__ip_q..</text>
</g>
<g>
<title>__sk_dst_check (10 samples, 0.09%)</title><rect x="425.3" y="371.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="428.3" y="382.0"></text>
</g>
<g>
<title>ipv4_dst_check (9 samples, 0.08%)</title><rect x="425.4" y="355.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="428.4" y="366.0"></text>
</g>
<g>
<title>ip_local_out (108 samples, 0.95%)</title><rect x="426.4" y="371.0" width="11.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="429.4" y="382.0"></text>
</g>
<g>
<title>__ip_local_out (108 samples, 0.95%)</title><rect x="426.4" y="355.0" width="11.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="429.4" y="366.0"></text>
</g>
<g>
<title>nf_hook_slow (105 samples, 0.92%)</title><rect x="426.7" y="339.0" width="10.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="429.7" y="350.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (28 samples, 0.25%)</title><rect x="427.3" y="323.0" width="2.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="430.3" y="334.0"></text>
</g>
<g>
<title>iptable_filter_hook	[iptable_filter] (4 samples, 0.04%)</title><rect x="430.2" y="323.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="433.2" y="334.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (13 samples, 0.11%)</title><rect x="430.6" y="323.0" width="1.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="433.6" y="334.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (7 samples, 0.06%)</title><rect x="431.2" y="307.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="434.2" y="318.0"></text>
</g>
<g>
<title>ipv4_conntrack_local	[nf_conntrack] (4 samples, 0.04%)</title><rect x="432.6" y="323.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="435.6" y="334.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (32 samples, 0.28%)</title><rect x="433.0" y="323.0" width="3.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="436.0" y="334.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get	[nf_conntrack] (10 samples, 0.09%)</title><rect x="433.5" y="307.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="436.5" y="318.0"></text>
</g>
<g>
<title>hash_conntrack_raw	[nf_conntrack] (3 samples, 0.03%)</title><rect x="434.6" y="307.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="437.6" y="318.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet	[nf_conntrack] (11 samples, 0.10%)</title><rect x="434.9" y="307.0" width="1.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="437.9" y="318.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn	[nf_nat] (10 samples, 0.09%)</title><rect x="436.3" y="323.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="439.3" y="334.0"></text>
</g>
<g>
<title>nf_nat_inet_fn	[nf_nat] (5 samples, 0.04%)</title><rect x="436.7" y="307.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="439.7" y="318.0"></text>
</g>
<g>
<title>ip_output (431 samples, 3.77%)</title><rect x="437.5" y="371.0" width="44.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="440.5" y="382.0">ip_o..</text>
</g>
<g>
<title>ip_finish_output2 (384 samples, 3.36%)</title><rect x="437.9" y="355.0" width="39.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="440.9" y="366.0">ip_..</text>
</g>
<g>
<title>__dev_queue_xmit (31 samples, 0.27%)</title><rect x="439.4" y="339.0" width="3.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="442.4" y="350.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (26 samples, 0.23%)</title><rect x="439.8" y="323.0" width="2.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="442.8" y="334.0"></text>
</g>
<g>
<title>loopback_xmit (25 samples, 0.22%)</title><rect x="439.9" y="307.0" width="2.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="442.9" y="318.0"></text>
</g>
<g>
<title>netif_rx (17 samples, 0.15%)</title><rect x="440.0" y="291.0" width="1.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="443.0" y="302.0"></text>
</g>
<g>
<title>netif_rx_internal (16 samples, 0.14%)</title><rect x="440.1" y="275.0" width="1.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="443.1" y="286.0"></text>
</g>
<g>
<title>enqueue_to_backlog (7 samples, 0.06%)</title><rect x="440.3" y="259.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="443.3" y="270.0"></text>
</g>
<g>
<title>ktime_get_with_offset (7 samples, 0.06%)</title><rect x="441.0" y="259.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="444.0" y="270.0"></text>
</g>
<g>
<title>read_tsc (5 samples, 0.04%)</title><rect x="441.2" y="243.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="444.2" y="254.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (3 samples, 0.03%)</title><rect x="441.9" y="291.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="444.9" y="302.0"></text>
</g>
<g>
<title>tcp_wfree (3 samples, 0.03%)</title><rect x="442.2" y="291.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="445.2" y="302.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (339 samples, 2.97%)</title><rect x="442.6" y="339.0" width="35.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="445.6" y="350.0">__l..</text>
</g>
<g>
<title>do_softirq.part.0 (338 samples, 2.96%)</title><rect x="442.7" y="323.0" width="34.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="445.7" y="334.0">do..</text>
</g>
<g>
<title>do_softirq_own_stack (334 samples, 2.92%)</title><rect x="443.1" y="307.0" width="34.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="446.1" y="318.0">do..</text>
</g>
<g>
<title>__softirqentry_text_start (334 samples, 2.92%)</title><rect x="443.1" y="291.0" width="34.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="446.1" y="302.0">__..</text>
</g>
<g>
<title>net_rx_action (323 samples, 2.83%)</title><rect x="444.1" y="275.0" width="33.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="447.1" y="286.0">ne..</text>
</g>
<g>
<title>process_backlog (316 samples, 2.77%)</title><rect x="444.9" y="259.0" width="32.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="447.9" y="270.0">pr..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (310 samples, 2.71%)</title><rect x="445.5" y="243.0" width="32.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="448.5" y="254.0">__..</text>
</g>
<g>
<title>__netif_receive_skb_core (3 samples, 0.03%)</title><rect x="445.6" y="227.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="448.6" y="238.0"></text>
</g>
<g>
<title>ip_rcv (306 samples, 2.68%)</title><rect x="445.9" y="227.0" width="31.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="448.9" y="238.0">ip..</text>
</g>
<g>
<title>ip_local_deliver (193 samples, 1.69%)</title><rect x="446.1" y="211.0" width="19.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="449.1" y="222.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (129 samples, 1.13%)</title><rect x="446.5" y="195.0" width="13.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="449.5" y="206.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (129 samples, 1.13%)</title><rect x="446.5" y="179.0" width="13.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="449.5" y="190.0"></text>
</g>
<g>
<title>raw_local_deliver (7 samples, 0.06%)</title><rect x="446.8" y="163.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="449.8" y="174.0"></text>
</g>
<g>
<title>tcp_v4_rcv (119 samples, 1.04%)</title><rect x="447.5" y="163.0" width="12.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="450.5" y="174.0"></text>
</g>
<g>
<title>__inet_lookup_established (8 samples, 0.07%)</title><rect x="449.1" y="147.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="452.1" y="158.0"></text>
</g>
<g>
<title>sock_put (3 samples, 0.03%)</title><rect x="450.1" y="147.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="453.1" y="158.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (89 samples, 0.78%)</title><rect x="450.5" y="147.0" width="9.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="453.5" y="158.0"></text>
</g>
<g>
<title>ipv4_dst_check (3 samples, 0.03%)</title><rect x="450.5" y="131.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="453.5" y="142.0"></text>
</g>
<g>
<title>tcp_rcv_established (86 samples, 0.75%)</title><rect x="450.8" y="131.0" width="8.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="453.8" y="142.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (5 samples, 0.04%)</title><rect x="451.6" y="115.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="454.6" y="126.0"></text>
</g>
<g>
<title>__ip_queue_xmit (4 samples, 0.04%)</title><rect x="451.7" y="99.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="454.7" y="110.0"></text>
</g>
<g>
<title>ip_local_out (3 samples, 0.03%)</title><rect x="451.7" y="83.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="454.7" y="94.0"></text>
</g>
<g>
<title>__ip_local_out (3 samples, 0.03%)</title><rect x="451.7" y="67.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="454.7" y="78.0"></text>
</g>
<g>
<title>nf_hook_slow (3 samples, 0.03%)</title><rect x="451.7" y="51.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="454.7" y="62.0"></text>
</g>
<g>
<title>sock_def_readable (54 samples, 0.47%)</title><rect x="452.4" y="115.0" width="5.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="455.4" y="126.0"></text>
</g>
<g>
<title>__wake_up_common_lock (53 samples, 0.46%)</title><rect x="452.5" y="99.0" width="5.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="455.5" y="110.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (52 samples, 0.46%)</title><rect x="452.6" y="83.0" width="5.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="455.6" y="94.0"></text>
</g>
<g>
<title>tcp_data_queue (5 samples, 0.04%)</title><rect x="458.1" y="115.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="461.1" y="126.0"></text>
</g>
<g>
<title>sock_def_readable (4 samples, 0.04%)</title><rect x="458.1" y="99.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="461.1" y="110.0"></text>
</g>
<g>
<title>__wake_up_common_lock (3 samples, 0.03%)</title><rect x="458.2" y="83.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="461.2" y="94.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.03%)</title><rect x="458.2" y="67.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="461.2" y="78.0"></text>
</g>
<g>
<title>tcp_event_data_recv (4 samples, 0.04%)</title><rect x="458.6" y="115.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="461.6" y="126.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (4 samples, 0.04%)</title><rect x="459.0" y="115.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="462.0" y="126.0"></text>
</g>
<g>
<title>ktime_get (3 samples, 0.03%)</title><rect x="459.1" y="99.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="462.1" y="110.0"></text>
</g>
<g>
<title>tcp_queue_rcv (3 samples, 0.03%)</title><rect x="459.4" y="115.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="462.4" y="126.0"></text>
</g>
<g>
<title>nf_hook_slow (60 samples, 0.53%)</title><rect x="459.8" y="195.0" width="6.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="462.8" y="206.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (42 samples, 0.37%)</title><rect x="460.4" y="179.0" width="4.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="463.4" y="190.0"></text>
</g>
<g>
<title>conntrack_mt	[xt_conntrack] (7 samples, 0.06%)</title><rect x="463.8" y="163.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="466.8" y="174.0"></text>
</g>
<g>
<title>ipv4_confirm	[nf_conntrack] (4 samples, 0.04%)</title><rect x="464.9" y="179.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="467.9" y="190.0"></text>
</g>
<g>
<title>nf_confirm	[nf_conntrack] (5 samples, 0.04%)</title><rect x="465.3" y="179.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="468.3" y="190.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events	[nf_conntrack] (5 samples, 0.04%)</title><rect x="465.3" y="163.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="468.3" y="174.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (7 samples, 0.06%)</title><rect x="466.0" y="211.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="469.0" y="222.0"></text>
</g>
<g>
<title>nf_hook_slow (102 samples, 0.89%)</title><rect x="467.0" y="211.0" width="10.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="470.0" y="222.0"></text>
</g>
<g>
<title>ip_sabotage_in	[br_netfilter] (3 samples, 0.03%)</title><rect x="467.4" y="195.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="470.4" y="206.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (72 samples, 0.63%)</title><rect x="467.7" y="195.0" width="7.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="470.7" y="206.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag	[nf_defrag_ipv4] (6 samples, 0.05%)</title><rect x="475.3" y="195.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="478.3" y="206.0"></text>
</g>
<g>
<title>ipv4_conntrack_in	[nf_conntrack] (3 samples, 0.03%)</title><rect x="475.9" y="195.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="478.9" y="206.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (4 samples, 0.04%)</title><rect x="476.3" y="195.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="479.3" y="206.0"></text>
</g>
<g>
<title>nf_nat_ipv4_in	[nf_nat] (8 samples, 0.07%)</title><rect x="476.7" y="195.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="479.7" y="206.0"></text>
</g>
<g>
<title>nf_nat_inet_fn	[nf_nat] (3 samples, 0.03%)</title><rect x="477.1" y="179.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="480.1" y="190.0"></text>
</g>
<g>
<title>ip_finish_output (5 samples, 0.04%)</title><rect x="477.6" y="355.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="480.6" y="366.0"></text>
</g>
<g>
<title>ipv4_mtu (3 samples, 0.03%)</title><rect x="477.8" y="339.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="480.8" y="350.0"></text>
</g>
<g>
<title>nf_hook_slow (38 samples, 0.33%)</title><rect x="478.1" y="355.0" width="3.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="481.1" y="366.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (13 samples, 0.11%)</title><rect x="478.3" y="339.0" width="1.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="481.3" y="350.0"></text>
</g>
<g>
<title>ipv4_confirm	[nf_conntrack] (3 samples, 0.03%)</title><rect x="479.9" y="339.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="482.9" y="350.0"></text>
</g>
<g>
<title>nf_confirm	[nf_conntrack] (3 samples, 0.03%)</title><rect x="480.2" y="339.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="483.2" y="350.0"></text>
</g>
<g>
<title>nf_nat_ipv4_out	[nf_nat] (5 samples, 0.04%)</title><rect x="480.5" y="339.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="483.5" y="350.0"></text>
</g>
<g>
<title>selinux_ip_postroute (6 samples, 0.05%)</title><rect x="481.0" y="339.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="484.0" y="350.0"></text>
</g>
<g>
<title>selinux_ipv4_postroute (4 samples, 0.04%)</title><rect x="481.6" y="339.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="484.6" y="350.0"></text>
</g>
<g>
<title>__skb_clone (6 samples, 0.05%)</title><rect x="482.0" y="387.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="485.0" y="398.0"></text>
</g>
<g>
<title>__copy_skb_header (3 samples, 0.03%)</title><rect x="482.4" y="371.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="485.4" y="382.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (5 samples, 0.04%)</title><rect x="483.2" y="387.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="486.2" y="398.0"></text>
</g>
<g>
<title>ktime_get (4 samples, 0.04%)</title><rect x="483.8" y="403.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="486.8" y="414.0"></text>
</g>
<g>
<title>read_tsc (3 samples, 0.03%)</title><rect x="483.9" y="387.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="486.9" y="398.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (16 samples, 0.14%)</title><rect x="484.3" y="403.0" width="1.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="487.3" y="414.0"></text>
</g>
<g>
<title>sk_reset_timer (7 samples, 0.06%)</title><rect x="484.5" y="387.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="487.5" y="398.0"></text>
</g>
<g>
<title>mod_timer (7 samples, 0.06%)</title><rect x="484.5" y="371.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="487.5" y="382.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.03%)</title><rect x="484.8" y="355.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="487.8" y="366.0"></text>
</g>
<g>
<title>tcp_rbtree_insert (3 samples, 0.03%)</title><rect x="485.2" y="387.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="488.2" y="398.0"></text>
</g>
<g>
<title>tcp_rearm_rto (4 samples, 0.04%)</title><rect x="485.6" y="387.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="488.6" y="398.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (20 samples, 0.18%)</title><rect x="486.0" y="403.0" width="2.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="489.0" y="414.0"></text>
</g>
<g>
<title>sk_reset_timer (14 samples, 0.12%)</title><rect x="486.6" y="387.0" width="1.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="489.6" y="398.0"></text>
</g>
<g>
<title>mod_timer (14 samples, 0.12%)</title><rect x="486.6" y="371.0" width="1.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="489.6" y="382.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (13 samples, 0.11%)</title><rect x="486.7" y="355.0" width="1.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="489.7" y="366.0"></text>
</g>
<g>
<title>_copy_from_iter_full (8 samples, 0.07%)</title><rect x="488.0" y="435.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="491.0" y="446.0"></text>
</g>
<g>
<title>copyin (7 samples, 0.06%)</title><rect x="488.0" y="419.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="491.0" y="430.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (6 samples, 0.05%)</title><rect x="488.1" y="403.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="491.1" y="414.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (33 samples, 0.29%)</title><rect x="489.0" y="435.0" width="3.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="492.0" y="446.0"></text>
</g>
<g>
<title>__alloc_skb (31 samples, 0.27%)</title><rect x="489.0" y="419.0" width="3.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="492.0" y="430.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (10 samples, 0.09%)</title><rect x="489.5" y="403.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="492.5" y="414.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (9 samples, 0.08%)</title><rect x="489.6" y="387.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="492.6" y="398.0"></text>
</g>
<g>
<title>__slab_alloc (5 samples, 0.04%)</title><rect x="489.9" y="371.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="492.9" y="382.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (13 samples, 0.11%)</title><rect x="490.5" y="403.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="493.5" y="414.0"></text>
</g>
<g>
<title>__slab_alloc (3 samples, 0.03%)</title><rect x="491.2" y="387.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="494.2" y="398.0"></text>
</g>
<g>
<title>ksize (3 samples, 0.03%)</title><rect x="491.9" y="403.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="494.9" y="414.0"></text>
</g>
<g>
<title>tcp_push (3 samples, 0.03%)</title><rect x="492.5" y="435.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="495.5" y="446.0"></text>
</g>
<g>
<title>tcp_send_mss (24 samples, 0.21%)</title><rect x="492.9" y="435.0" width="2.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="495.9" y="446.0"></text>
</g>
<g>
<title>tcp_current_mss (21 samples, 0.18%)</title><rect x="493.2" y="419.0" width="2.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="496.2" y="430.0"></text>
</g>
<g>
<title>ipv4_mtu (14 samples, 0.12%)</title><rect x="493.9" y="403.0" width="1.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="496.9" y="414.0"></text>
</g>
<g>
<title>sockfd_lookup_light (18 samples, 0.16%)</title><rect x="495.6" y="483.0" width="1.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="498.6" y="494.0"></text>
</g>
<g>
<title>__fget_light (16 samples, 0.14%)</title><rect x="495.8" y="467.0" width="1.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="498.8" y="478.0"></text>
</g>
<g>
<title>__fget (11 samples, 0.10%)</title><rect x="496.3" y="451.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="499.3" y="462.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.18%)</title><rect x="497.4" y="563.0" width="2.2" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="500.4" y="574.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.18%)</title><rect x="497.4" y="547.0" width="2.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="500.4" y="558.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (17 samples, 0.15%)</title><rect x="497.5" y="531.0" width="1.8" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="500.5" y="542.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (3 samples, 0.03%)</title><rect x="497.9" y="515.0" width="0.4" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="500.9" y="526.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (9 samples, 0.08%)</title><rect x="498.3" y="515.0" width="0.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="501.3" y="526.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (3 samples, 0.03%)</title><rect x="498.7" y="499.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="501.7" y="510.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (3 samples, 0.03%)</title><rect x="499.3" y="531.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="502.3" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (18 samples, 0.16%)</title><rect x="499.7" y="627.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="502.7" y="638.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (5 samples, 0.04%)</title><rect x="499.7" y="611.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="502.7" y="622.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (5 samples, 0.04%)</title><rect x="499.7" y="595.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="502.7" y="606.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (5 samples, 0.04%)</title><rect x="499.7" y="579.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="502.7" y="590.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (5 samples, 0.04%)</title><rect x="499.7" y="563.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="502.7" y="574.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (4 samples, 0.04%)</title><rect x="499.8" y="547.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="502.8" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.03%)</title><rect x="499.9" y="531.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="502.9" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.03%)</title><rect x="499.9" y="515.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="502.9" y="526.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (3 samples, 0.03%)</title><rect x="499.9" y="499.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="502.9" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (13 samples, 0.11%)</title><rect x="500.2" y="611.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="503.2" y="622.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (13 samples, 0.11%)</title><rect x="500.2" y="595.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="503.2" y="606.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (10 samples, 0.09%)</title><rect x="500.4" y="579.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="503.4" y="590.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (10 samples, 0.09%)</title><rect x="500.4" y="563.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="503.4" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (9 samples, 0.08%)</title><rect x="500.5" y="547.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="503.5" y="558.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (9 samples, 0.08%)</title><rect x="500.5" y="531.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="503.5" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (8 samples, 0.07%)</title><rect x="500.6" y="515.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="503.6" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (7 samples, 0.06%)</title><rect x="500.7" y="499.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="503.7" y="510.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (7 samples, 0.06%)</title><rect x="500.7" y="483.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="503.7" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$UntilIterator.hasNext (13 samples, 0.11%)</title><rect x="501.7" y="627.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="504.7" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.compareTo (13 samples, 0.11%)</title><rect x="501.7" y="611.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="504.7" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.compareTo (13 samples, 0.11%)</title><rect x="501.7" y="595.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="504.7" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (13 samples, 0.11%)</title><rect x="501.7" y="579.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="504.7" y="590.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (11 samples, 0.10%)</title><rect x="501.9" y="563.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="504.9" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$UntilIterator.next (338 samples, 2.96%)</title><rect x="503.0" y="627.0" width="34.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="506.0" y="638.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$UntilIterator.next (338 samples, 2.96%)</title><rect x="503.0" y="611.0" width="34.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="506.0" y="622.0">ru..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (318 samples, 2.78%)</title><rect x="503.0" y="595.0" width="32.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="506.0" y="606.0">co..</text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (318 samples, 2.78%)</title><rect x="503.0" y="579.0" width="32.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="506.0" y="590.0">co..</text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (318 samples, 2.78%)</title><rect x="503.0" y="563.0" width="32.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="506.0" y="574.0">co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (318 samples, 2.78%)</title><rect x="503.0" y="547.0" width="32.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="506.0" y="558.0">co..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (305 samples, 2.67%)</title><rect x="504.4" y="531.0" width="31.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="507.4" y="542.0">ru..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (276 samples, 2.42%)</title><rect x="505.1" y="515.0" width="28.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="508.1" y="526.0">co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (6 samples, 0.05%)</title><rect x="505.1" y="499.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="508.1" y="510.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (126 samples, 1.10%)</title><rect x="505.7" y="499.0" width="13.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="508.7" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (126 samples, 1.10%)</title><rect x="505.7" y="483.0" width="13.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="508.7" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (126 samples, 1.10%)</title><rect x="505.7" y="467.0" width="13.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="508.7" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (122 samples, 1.07%)</title><rect x="506.1" y="451.0" width="12.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="509.1" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (122 samples, 1.07%)</title><rect x="506.1" y="435.0" width="12.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="509.1" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (3 samples, 0.03%)</title><rect x="506.4" y="419.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="509.4" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/123226378.compare (116 samples, 1.02%)</title><rect x="506.7" y="419.0" width="12.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="509.7" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (116 samples, 1.02%)</title><rect x="506.7" y="403.0" width="12.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="509.7" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (116 samples, 1.02%)</title><rect x="506.7" y="387.0" width="12.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="509.7" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (116 samples, 1.02%)</title><rect x="506.7" y="371.0" width="12.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="509.7" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (115 samples, 1.01%)</title><rect x="506.8" y="355.0" width="11.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="509.8" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (115 samples, 1.01%)</title><rect x="506.8" y="339.0" width="11.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="509.8" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$67/1497891062.compare (107 samples, 0.94%)</title><rect x="507.7" y="323.0" width="11.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="510.7" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (106 samples, 0.93%)</title><rect x="507.8" y="307.0" width="10.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="510.8" y="318.0"></text>
</g>
<g>
<title>itable stub (11 samples, 0.10%)</title><rect x="507.9" y="291.0" width="1.1" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="510.9" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (46 samples, 0.40%)</title><rect x="509.2" y="291.0" width="4.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="512.2" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (42 samples, 0.37%)</title><rect x="509.6" y="275.0" width="4.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="512.6" y="286.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (32 samples, 0.28%)</title><rect x="509.9" y="259.0" width="3.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="512.9" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (12 samples, 0.11%)</title><rect x="511.6" y="243.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="514.6" y="254.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (8 samples, 0.07%)</title><rect x="511.9" y="227.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="514.9" y="238.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (4 samples, 0.04%)</title><rect x="513.2" y="259.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="516.2" y="270.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (3 samples, 0.03%)</title><rect x="513.3" y="243.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="516.3" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$66/474651931.apply (46 samples, 0.40%)</title><rect x="514.0" y="291.0" width="4.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="517.0" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (46 samples, 0.40%)</title><rect x="514.0" y="275.0" width="4.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="517.0" y="286.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (33 samples, 0.29%)</title><rect x="514.0" y="259.0" width="3.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="517.0" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (33 samples, 0.29%)</title><rect x="514.0" y="243.0" width="3.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="517.0" y="254.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (33 samples, 0.29%)</title><rect x="514.0" y="227.0" width="3.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="517.0" y="238.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (33 samples, 0.29%)</title><rect x="514.0" y="211.0" width="3.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="517.0" y="222.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (33 samples, 0.29%)</title><rect x="514.0" y="195.0" width="3.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="517.0" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (33 samples, 0.29%)</title><rect x="514.0" y="179.0" width="3.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="517.0" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (33 samples, 0.29%)</title><rect x="514.0" y="163.0" width="3.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="517.0" y="174.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (19 samples, 0.17%)</title><rect x="515.1" y="147.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="518.1" y="158.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (7 samples, 0.06%)</title><rect x="516.0" y="131.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="519.0" y="142.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (3 samples, 0.03%)</title><rect x="516.7" y="131.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="519.7" y="142.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (13 samples, 0.11%)</title><rect x="517.4" y="259.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="520.4" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (11 samples, 0.10%)</title><rect x="517.6" y="243.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="520.6" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (11 samples, 0.10%)</title><rect x="517.6" y="227.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="520.6" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (11 samples, 0.10%)</title><rect x="517.6" y="211.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="520.6" y="222.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (11 samples, 0.10%)</title><rect x="517.6" y="195.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="520.6" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (10 samples, 0.09%)</title><rect x="517.6" y="179.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="520.6" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (10 samples, 0.09%)</title><rect x="517.6" y="163.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="520.6" y="174.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (144 samples, 1.26%)</title><rect x="518.7" y="499.0" width="14.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="521.7" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (144 samples, 1.26%)</title><rect x="518.7" y="483.0" width="14.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="521.7" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (144 samples, 1.26%)</title><rect x="518.7" y="467.0" width="14.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="521.7" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (144 samples, 1.26%)</title><rect x="518.7" y="451.0" width="14.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="521.7" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (144 samples, 1.26%)</title><rect x="518.7" y="435.0" width="14.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="521.7" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (144 samples, 1.26%)</title><rect x="518.7" y="419.0" width="14.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="521.7" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (54 samples, 0.47%)</title><rect x="518.7" y="403.0" width="5.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="521.7" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (51 samples, 0.45%)</title><rect x="519.0" y="387.0" width="5.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="522.0" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (51 samples, 0.45%)</title><rect x="519.0" y="371.0" width="5.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="522.0" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (51 samples, 0.45%)</title><rect x="519.0" y="355.0" width="5.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="522.0" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (16 samples, 0.14%)</title><rect x="519.0" y="339.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="522.0" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (9 samples, 0.08%)</title><rect x="519.0" y="323.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="522.0" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (9 samples, 0.08%)</title><rect x="519.0" y="307.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="522.0" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (7 samples, 0.06%)</title><rect x="519.2" y="291.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="522.2" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (7 samples, 0.06%)</title><rect x="519.2" y="275.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="522.2" y="286.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (7 samples, 0.06%)</title><rect x="519.2" y="259.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="522.2" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (7 samples, 0.06%)</title><rect x="519.2" y="243.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="522.2" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (7 samples, 0.06%)</title><rect x="519.2" y="227.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="522.2" y="238.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (3 samples, 0.03%)</title><rect x="519.4" y="211.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="522.4" y="222.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (7 samples, 0.06%)</title><rect x="519.9" y="323.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="522.9" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (7 samples, 0.06%)</title><rect x="519.9" y="307.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="522.9" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (7 samples, 0.06%)</title><rect x="519.9" y="291.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="522.9" y="302.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (7 samples, 0.06%)</title><rect x="519.9" y="275.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="522.9" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (7 samples, 0.06%)</title><rect x="519.9" y="259.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="522.9" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (7 samples, 0.06%)</title><rect x="519.9" y="243.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="522.9" y="254.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (7 samples, 0.06%)</title><rect x="519.9" y="227.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="522.9" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (16 samples, 0.14%)</title><rect x="520.7" y="339.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="523.7" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (11 samples, 0.10%)</title><rect x="520.7" y="323.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="523.7" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (11 samples, 0.10%)</title><rect x="520.7" y="307.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="523.7" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (10 samples, 0.09%)</title><rect x="520.8" y="291.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="523.8" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (10 samples, 0.09%)</title><rect x="520.8" y="275.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="523.8" y="286.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (10 samples, 0.09%)</title><rect x="520.8" y="259.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="523.8" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (10 samples, 0.09%)</title><rect x="520.8" y="243.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="523.8" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (10 samples, 0.09%)</title><rect x="520.8" y="227.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="523.8" y="238.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (10 samples, 0.09%)</title><rect x="520.8" y="211.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="523.8" y="222.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (9 samples, 0.08%)</title><rect x="520.8" y="195.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="523.8" y="206.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (9 samples, 0.08%)</title><rect x="520.8" y="179.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="523.8" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (5 samples, 0.04%)</title><rect x="521.8" y="323.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="524.8" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (5 samples, 0.04%)</title><rect x="521.8" y="307.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="524.8" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (5 samples, 0.04%)</title><rect x="521.8" y="291.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="524.8" y="302.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (5 samples, 0.04%)</title><rect x="521.8" y="275.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="524.8" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 0.04%)</title><rect x="521.8" y="259.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="524.8" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 0.04%)</title><rect x="521.8" y="243.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="524.8" y="254.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (5 samples, 0.04%)</title><rect x="521.8" y="227.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="524.8" y="238.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (4 samples, 0.04%)</title><rect x="521.8" y="211.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="524.8" y="222.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (4 samples, 0.04%)</title><rect x="521.8" y="195.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="524.8" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.04%)</title><rect x="521.8" y="179.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="524.8" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.timestampAt (9 samples, 0.08%)</title><rect x="522.3" y="339.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="525.3" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (9 samples, 0.08%)</title><rect x="522.3" y="323.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="525.3" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (9 samples, 0.08%)</title><rect x="522.3" y="307.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="525.3" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (9 samples, 0.08%)</title><rect x="522.3" y="291.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="525.3" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (9 samples, 0.08%)</title><rect x="522.3" y="275.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="525.3" y="286.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (9 samples, 0.08%)</title><rect x="522.3" y="259.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="525.3" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (9 samples, 0.08%)</title><rect x="522.3" y="243.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="525.3" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (9 samples, 0.08%)</title><rect x="522.3" y="227.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="525.3" y="238.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (6 samples, 0.05%)</title><rect x="522.6" y="211.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="525.6" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.valueAt (10 samples, 0.09%)</title><rect x="523.3" y="339.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="526.3" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (8 samples, 0.07%)</title><rect x="523.3" y="323.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="526.3" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (8 samples, 0.07%)</title><rect x="523.3" y="307.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="526.3" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (8 samples, 0.07%)</title><rect x="523.3" y="291.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="526.3" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (8 samples, 0.07%)</title><rect x="523.3" y="275.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="526.3" y="286.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (8 samples, 0.07%)</title><rect x="523.3" y="259.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="526.3" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (8 samples, 0.07%)</title><rect x="523.3" y="243.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="526.3" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (8 samples, 0.07%)</title><rect x="523.3" y="227.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="526.3" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/123226378.compare (90 samples, 0.79%)</title><rect x="524.3" y="403.0" width="9.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="527.3" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (90 samples, 0.79%)</title><rect x="524.3" y="387.0" width="9.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="527.3" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (90 samples, 0.79%)</title><rect x="524.3" y="371.0" width="9.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="527.3" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (90 samples, 0.79%)</title><rect x="524.3" y="355.0" width="9.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="527.3" y="366.0"></text>
</g>
<g>
<title>itable stub (10 samples, 0.09%)</title><rect x="525.4" y="339.0" width="1.1" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="528.4" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (67 samples, 0.59%)</title><rect x="526.5" y="339.0" width="6.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="529.5" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (67 samples, 0.59%)</title><rect x="526.5" y="323.0" width="6.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="529.5" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$67/1497891062.compare (64 samples, 0.56%)</title><rect x="526.7" y="307.0" width="6.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="529.7" y="318.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (64 samples, 0.56%)</title><rect x="526.7" y="291.0" width="6.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="529.7" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (32 samples, 0.28%)</title><rect x="526.7" y="275.0" width="3.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="529.7" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (32 samples, 0.28%)</title><rect x="526.7" y="259.0" width="3.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="529.7" y="270.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (29 samples, 0.25%)</title><rect x="526.9" y="243.0" width="3.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="529.9" y="254.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (7 samples, 0.06%)</title><rect x="528.3" y="227.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="531.3" y="238.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.base (3 samples, 0.03%)</title><rect x="529.0" y="227.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="532.0" y="238.0"></text>
</g>
<g>
<title>jdk/internal/util/ArraysSupport.vectorizedMismatch (4 samples, 0.04%)</title><rect x="529.3" y="227.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="532.3" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$66/474651931.apply (32 samples, 0.28%)</title><rect x="530.0" y="275.0" width="3.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="533.0" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (32 samples, 0.28%)</title><rect x="530.0" y="259.0" width="3.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="533.0" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (24 samples, 0.21%)</title><rect x="530.0" y="243.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="533.0" y="254.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (24 samples, 0.21%)</title><rect x="530.0" y="227.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="533.0" y="238.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (24 samples, 0.21%)</title><rect x="530.0" y="211.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="533.0" y="222.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (24 samples, 0.21%)</title><rect x="530.0" y="195.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="533.0" y="206.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (24 samples, 0.21%)</title><rect x="530.0" y="179.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="533.0" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (24 samples, 0.21%)</title><rect x="530.0" y="163.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="533.0" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (24 samples, 0.21%)</title><rect x="530.0" y="147.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="533.0" y="158.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (13 samples, 0.11%)</title><rect x="530.7" y="131.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="533.7" y="142.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (4 samples, 0.04%)</title><rect x="531.5" y="115.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="534.5" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteOrder.nativeOrder (4 samples, 0.04%)</title><rect x="532.0" y="131.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="535.0" y="142.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (8 samples, 0.07%)</title><rect x="532.4" y="243.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="535.4" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (8 samples, 0.07%)</title><rect x="532.4" y="227.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="535.4" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (8 samples, 0.07%)</title><rect x="532.4" y="211.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="535.4" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (8 samples, 0.07%)</title><rect x="532.4" y="195.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="535.4" y="206.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (8 samples, 0.07%)</title><rect x="532.4" y="179.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="535.4" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (8 samples, 0.07%)</title><rect x="532.4" y="163.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="535.4" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (8 samples, 0.07%)</title><rect x="532.4" y="147.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="535.4" y="158.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.equals (16 samples, 0.14%)</title><rect x="533.6" y="515.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="536.6" y="526.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (16 samples, 0.14%)</title><rect x="533.6" y="499.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="536.6" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$72/878358964.apply (6 samples, 0.05%)</title><rect x="535.2" y="515.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="538.2" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (6 samples, 0.05%)</title><rect x="535.2" y="499.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="538.2" y="510.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (6 samples, 0.05%)</title><rect x="535.2" y="483.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="538.2" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (6 samples, 0.05%)</title><rect x="535.2" y="467.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="538.2" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (6 samples, 0.05%)</title><rect x="535.2" y="451.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="538.2" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (6 samples, 0.05%)</title><rect x="535.2" y="435.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="538.2" y="446.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (6 samples, 0.05%)</title><rect x="535.2" y="419.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="538.2" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (6 samples, 0.05%)</title><rect x="535.2" y="403.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="538.2" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (6 samples, 0.05%)</title><rect x="535.2" y="387.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="538.2" y="398.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (6 samples, 0.05%)</title><rect x="535.2" y="371.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="538.2" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (20 samples, 0.18%)</title><rect x="535.9" y="595.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="538.9" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.next (5 samples, 0.04%)</title><rect x="535.9" y="579.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="538.9" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (5 samples, 0.04%)</title><rect x="535.9" y="563.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="538.9" y="574.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (5 samples, 0.04%)</title><rect x="535.9" y="547.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="538.9" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (5 samples, 0.04%)</title><rect x="535.9" y="531.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="538.9" y="542.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (15 samples, 0.13%)</title><rect x="536.4" y="579.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="539.4" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao$$Lambda$80/527983093.apply (15 samples, 0.13%)</title><rect x="536.4" y="563.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="539.4" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.lambda$iterator$0 (15 samples, 0.13%)</title><rect x="536.4" y="547.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="539.4" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (9 samples, 0.08%)</title><rect x="536.4" y="531.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="539.4" y="542.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (6 samples, 0.05%)</title><rect x="536.4" y="515.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="539.4" y="526.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (6 samples, 0.05%)</title><rect x="536.4" y="499.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="539.4" y="510.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (6 samples, 0.05%)</title><rect x="536.4" y="483.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="539.4" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (6 samples, 0.05%)</title><rect x="536.4" y="467.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="539.4" y="478.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (6 samples, 0.05%)</title><rect x="536.4" y="451.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="539.4" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.03%)</title><rect x="536.7" y="435.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="539.7" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.03%)</title><rect x="536.7" y="419.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="539.7" y="430.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (3 samples, 0.03%)</title><rect x="536.7" y="403.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="539.7" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (3 samples, 0.03%)</title><rect x="537.0" y="515.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="540.0" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (3 samples, 0.03%)</title><rect x="537.0" y="499.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="540.0" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.03%)</title><rect x="537.0" y="483.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="540.0" y="494.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.03%)</title><rect x="537.0" y="467.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="540.0" y="478.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (3 samples, 0.03%)</title><rect x="537.0" y="451.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="540.0" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Value.getData (6 samples, 0.05%)</title><rect x="537.3" y="531.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="540.3" y="542.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (4 samples, 0.04%)</title><rect x="537.3" y="515.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="540.3" y="526.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (4 samples, 0.04%)</title><rect x="537.3" y="499.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="540.3" y="510.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (4 samples, 0.04%)</title><rect x="537.3" y="483.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="540.3" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (4 samples, 0.04%)</title><rect x="537.3" y="467.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="540.3" y="478.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (4 samples, 0.04%)</title><rect x="537.3" y="451.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="540.3" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/StorageSession.toByteArray (18 samples, 0.16%)</title><rect x="537.9" y="627.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="540.9" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (16 samples, 0.14%)</title><rect x="538.1" y="611.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="541.1" y="622.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (9 samples, 0.08%)</title><rect x="538.1" y="595.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="541.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (6 samples, 0.05%)</title><rect x="538.4" y="579.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="541.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (5 samples, 0.04%)</title><rect x="538.5" y="563.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="541.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (5 samples, 0.04%)</title><rect x="538.5" y="547.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="541.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitiveArray (4 samples, 0.04%)</title><rect x="538.6" y="531.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="541.6" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (7 samples, 0.06%)</title><rect x="539.1" y="595.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="542.1" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (5 samples, 0.04%)</title><rect x="539.3" y="579.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="542.3" y="590.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (4 samples, 0.04%)</title><rect x="539.4" y="563.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="542.4" y="574.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (3 samples, 0.03%)</title><rect x="539.8" y="691.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="542.8" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap.get (3 samples, 0.03%)</title><rect x="539.8" y="675.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="542.8" y="686.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (12 samples, 0.11%)</title><rect x="540.1" y="723.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="543.1" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (6 samples, 0.05%)</title><rect x="540.6" y="707.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="543.6" y="718.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (6 samples, 0.05%)</title><rect x="540.6" y="691.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="543.6" y="702.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (6 samples, 0.05%)</title><rect x="540.6" y="675.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="543.6" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (6 samples, 0.05%)</title><rect x="540.6" y="659.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="543.6" y="670.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (57 samples, 0.50%)</title><rect x="541.5" y="739.0" width="5.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="544.5" y="750.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (57 samples, 0.50%)</title><rect x="541.5" y="723.0" width="5.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="544.5" y="734.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.03%)</title><rect x="541.7" y="707.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="544.7" y="718.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.03%)</title><rect x="541.7" y="691.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="544.7" y="702.0"></text>
</g>
<g>
<title>__libc_recv (52 samples, 0.46%)</title><rect x="542.1" y="707.0" width="5.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="545.1" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (44 samples, 0.39%)</title><rect x="542.9" y="691.0" width="4.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="545.9" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (44 samples, 0.39%)</title><rect x="542.9" y="675.0" width="4.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="545.9" y="686.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (39 samples, 0.34%)</title><rect x="543.4" y="659.0" width="4.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="546.4" y="670.0"></text>
</g>
<g>
<title>__sys_recvfrom (39 samples, 0.34%)</title><rect x="543.4" y="643.0" width="4.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="546.4" y="654.0"></text>
</g>
<g>
<title>inet_recvmsg (22 samples, 0.19%)</title><rect x="543.7" y="627.0" width="2.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="546.7" y="638.0"></text>
</g>
<g>
<title>tcp_recvmsg (22 samples, 0.19%)</title><rect x="543.7" y="611.0" width="2.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="546.7" y="622.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (9 samples, 0.08%)</title><rect x="544.3" y="595.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="547.3" y="606.0"></text>
</g>
<g>
<title>__ip_queue_xmit (9 samples, 0.08%)</title><rect x="544.3" y="579.0" width="1.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="547.3" y="590.0"></text>
</g>
<g>
<title>ip_output (8 samples, 0.07%)</title><rect x="544.4" y="563.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="547.4" y="574.0"></text>
</g>
<g>
<title>ip_finish_output2 (7 samples, 0.06%)</title><rect x="544.4" y="547.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="547.4" y="558.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (6 samples, 0.05%)</title><rect x="544.5" y="531.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="547.5" y="542.0"></text>
</g>
<g>
<title>do_softirq.part.0 (6 samples, 0.05%)</title><rect x="544.5" y="515.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="547.5" y="526.0"></text>
</g>
<g>
<title>do_softirq_own_stack (6 samples, 0.05%)</title><rect x="544.5" y="499.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="547.5" y="510.0"></text>
</g>
<g>
<title>__softirqentry_text_start (6 samples, 0.05%)</title><rect x="544.5" y="483.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="547.5" y="494.0"></text>
</g>
<g>
<title>net_rx_action (5 samples, 0.04%)</title><rect x="544.6" y="467.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="547.6" y="478.0"></text>
</g>
<g>
<title>process_backlog (5 samples, 0.04%)</title><rect x="544.6" y="451.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="547.6" y="462.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (5 samples, 0.04%)</title><rect x="544.6" y="435.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="547.6" y="446.0"></text>
</g>
<g>
<title>ip_rcv (5 samples, 0.04%)</title><rect x="544.6" y="419.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="547.6" y="430.0"></text>
</g>
<g>
<title>ip_local_deliver (4 samples, 0.04%)</title><rect x="544.6" y="403.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="547.6" y="414.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (3 samples, 0.03%)</title><rect x="544.6" y="387.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="547.6" y="398.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (3 samples, 0.03%)</title><rect x="544.6" y="371.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="547.6" y="382.0"></text>
</g>
<g>
<title>tcp_v4_rcv (3 samples, 0.03%)</title><rect x="544.6" y="355.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="547.6" y="366.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (5 samples, 0.04%)</title><rect x="545.4" y="595.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="548.4" y="606.0"></text>
</g>
<g>
<title>__skb_datagram_iter (5 samples, 0.04%)</title><rect x="545.4" y="579.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="548.4" y="590.0"></text>
</g>
<g>
<title>simple_copy_to_iter (4 samples, 0.04%)</title><rect x="545.5" y="563.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="548.5" y="574.0"></text>
</g>
<g>
<title>__check_object_size (4 samples, 0.04%)</title><rect x="545.5" y="547.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="548.5" y="558.0"></text>
</g>
<g>
<title>sock_recvmsg (4 samples, 0.04%)</title><rect x="546.0" y="627.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="549.0" y="638.0"></text>
</g>
<g>
<title>security_socket_recvmsg (4 samples, 0.04%)</title><rect x="546.0" y="611.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="549.0" y="622.0"></text>
</g>
<g>
<title>sock_has_perm (4 samples, 0.04%)</title><rect x="546.0" y="595.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="549.0" y="606.0"></text>
</g>
<g>
<title>sockfd_lookup_light (10 samples, 0.09%)</title><rect x="546.4" y="627.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="549.4" y="638.0"></text>
</g>
<g>
<title>__fget_light (10 samples, 0.09%)</title><rect x="546.4" y="611.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="549.4" y="622.0"></text>
</g>
<g>
<title>__fget (10 samples, 0.09%)</title><rect x="546.4" y="595.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="549.4" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/StorageSession.processWrite (11 samples, 0.10%)</title><rect x="547.5" y="755.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="550.5" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/StorageSession.next (11 samples, 0.10%)</title><rect x="547.5" y="739.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="550.5" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (10 samples, 0.09%)</title><rect x="547.5" y="723.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="550.5" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (10 samples, 0.09%)</title><rect x="547.5" y="707.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="550.5" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (10 samples, 0.09%)</title><rect x="547.5" y="691.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="550.5" y="702.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (10 samples, 0.09%)</title><rect x="547.5" y="675.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="550.5" y="686.0"></text>
</g>
<g>
<title>.annobin_send.c (10 samples, 0.09%)</title><rect x="547.5" y="659.0" width="1.1" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="550.5" y="670.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.09%)</title><rect x="547.5" y="643.0" width="1.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="550.5" y="654.0"></text>
</g>
<g>
<title>do_syscall_64 (10 samples, 0.09%)</title><rect x="547.5" y="627.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="550.5" y="638.0"></text>
</g>
<g>
<title>__x64_sys_sendto (10 samples, 0.09%)</title><rect x="547.5" y="611.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="550.5" y="622.0"></text>
</g>
<g>
<title>__sys_sendto (10 samples, 0.09%)</title><rect x="547.5" y="595.0" width="1.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="550.5" y="606.0"></text>
</g>
<g>
<title>sock_sendmsg (10 samples, 0.09%)</title><rect x="547.5" y="579.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="550.5" y="590.0"></text>
</g>
<g>
<title>tcp_sendmsg (10 samples, 0.09%)</title><rect x="547.5" y="563.0" width="1.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="550.5" y="574.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (10 samples, 0.09%)</title><rect x="547.5" y="547.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="550.5" y="558.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (10 samples, 0.09%)</title><rect x="547.5" y="531.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="550.5" y="542.0"></text>
</g>
<g>
<title>tcp_write_xmit (10 samples, 0.09%)</title><rect x="547.5" y="515.0" width="1.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="550.5" y="526.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (10 samples, 0.09%)</title><rect x="547.5" y="499.0" width="1.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="550.5" y="510.0"></text>
</g>
<g>
<title>__ip_queue_xmit (10 samples, 0.09%)</title><rect x="547.5" y="483.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="550.5" y="494.0"></text>
</g>
<g>
<title>ip_local_out (3 samples, 0.03%)</title><rect x="547.5" y="467.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="550.5" y="478.0"></text>
</g>
<g>
<title>__ip_local_out (3 samples, 0.03%)</title><rect x="547.5" y="451.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="550.5" y="462.0"></text>
</g>
<g>
<title>ip_output (7 samples, 0.06%)</title><rect x="547.8" y="467.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="550.8" y="478.0"></text>
</g>
<g>
<title>ip_finish_output2 (7 samples, 0.06%)</title><rect x="547.8" y="451.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="550.8" y="462.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (6 samples, 0.05%)</title><rect x="547.9" y="435.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="550.9" y="446.0"></text>
</g>
<g>
<title>do_softirq.part.0 (6 samples, 0.05%)</title><rect x="547.9" y="419.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="550.9" y="430.0"></text>
</g>
<g>
<title>do_softirq_own_stack (6 samples, 0.05%)</title><rect x="547.9" y="403.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="550.9" y="414.0"></text>
</g>
<g>
<title>__softirqentry_text_start (6 samples, 0.05%)</title><rect x="547.9" y="387.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="550.9" y="398.0"></text>
</g>
<g>
<title>net_rx_action (6 samples, 0.05%)</title><rect x="547.9" y="371.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="550.9" y="382.0"></text>
</g>
<g>
<title>process_backlog (6 samples, 0.05%)</title><rect x="547.9" y="355.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="550.9" y="366.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (6 samples, 0.05%)</title><rect x="547.9" y="339.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="550.9" y="350.0"></text>
</g>
<g>
<title>ip_rcv (5 samples, 0.04%)</title><rect x="548.0" y="323.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="551.0" y="334.0"></text>
</g>
<g>
<title>ip_local_deliver (3 samples, 0.03%)</title><rect x="548.0" y="307.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="551.0" y="318.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=25372] (2,754 samples, 24.11%)</title><rect x="548.7" y="803.0" width="284.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="551.7" y="814.0">[NIO Selector #2 tid=25372]</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (11 samples, 0.10%)</title><rect x="548.9" y="787.0" width="1.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="551.9" y="798.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (8 samples, 0.07%)</title><rect x="549.0" y="771.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="552.0" y="782.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (8 samples, 0.07%)</title><rect x="549.0" y="755.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="552.0" y="766.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (7 samples, 0.06%)</title><rect x="549.0" y="739.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="552.0" y="750.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (5 samples, 0.04%)</title><rect x="549.1" y="723.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="552.1" y="734.0"></text>
</g>
<g>
<title>[unknown_Java] (16 samples, 0.14%)</title><rect x="550.1" y="787.0" width="1.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="553.1" y="798.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (2,723 samples, 23.84%)</title><rect x="551.9" y="787.0" width="281.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="554.9" y="798.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (4 samples, 0.04%)</title><rect x="552.0" y="771.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="555.0" y="782.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (4 samples, 0.04%)</title><rect x="552.0" y="755.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="555.0" y="766.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (18 samples, 0.16%)</title><rect x="552.4" y="771.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="555.4" y="782.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (17 samples, 0.15%)</title><rect x="552.5" y="755.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="555.5" y="766.0"></text>
</g>
<g>
<title>.annobin_epoll_wait.c (16 samples, 0.14%)</title><rect x="552.5" y="739.0" width="1.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="555.5" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (16 samples, 0.14%)</title><rect x="552.5" y="723.0" width="1.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="555.5" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (16 samples, 0.14%)</title><rect x="552.5" y="707.0" width="1.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="555.5" y="718.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (16 samples, 0.14%)</title><rect x="552.5" y="691.0" width="1.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="555.5" y="702.0"></text>
</g>
<g>
<title>do_epoll_wait (16 samples, 0.14%)</title><rect x="552.5" y="675.0" width="1.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="555.5" y="686.0"></text>
</g>
<g>
<title>ep_poll (16 samples, 0.14%)</title><rect x="552.5" y="659.0" width="1.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="555.5" y="670.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (16 samples, 0.14%)</title><rect x="552.5" y="643.0" width="1.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="555.5" y="654.0"></text>
</g>
<g>
<title>ep_send_events_proc (16 samples, 0.14%)</title><rect x="552.5" y="627.0" width="1.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="555.5" y="638.0"></text>
</g>
<g>
<title>__list_del_entry_valid (3 samples, 0.03%)</title><rect x="552.5" y="611.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="555.5" y="622.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (13 samples, 0.11%)</title><rect x="552.8" y="611.0" width="1.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="555.8" y="622.0"></text>
</g>
<g>
<title>sock_poll (10 samples, 0.09%)</title><rect x="553.1" y="595.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="556.1" y="606.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (2,700 samples, 23.63%)</title><rect x="554.2" y="771.0" width="278.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="557.2" y="782.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (2,682 samples, 23.48%)</title><rect x="554.7" y="755.0" width="277.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="557.7" y="766.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (2,623 samples, 22.96%)</title><rect x="554.9" y="739.0" width="270.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="557.9" y="750.0">one/nio/http/HttpSession.processHttp..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (2,616 samples, 22.90%)</title><rect x="555.0" y="723.0" width="270.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="558.0" y="734.0">one/nio/http/HttpSession.handleParse..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (2,615 samples, 22.89%)</title><rect x="555.1" y="707.0" width="270.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="558.1" y="718.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler2_entities.handleRequest (2,615 samples, 22.89%)</title><rect x="555.1" y="691.0" width="270.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="558.1" y="702.0">RequestHandler2_entities.handleRequest</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (9 samples, 0.08%)</title><rect x="555.1" y="675.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="558.1" y="686.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.03%)</title><rect x="555.6" y="659.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="558.6" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (3 samples, 0.03%)</title><rect x="555.6" y="643.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="558.6" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.entities (2,606 samples, 22.81%)</title><rect x="556.0" y="675.0" width="269.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="559.0" y="686.0">ru/mail/polis/service/shakhmin/Async..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.range (748 samples, 6.55%)</title><rect x="556.0" y="659.0" width="77.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="559.0" y="670.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.until (50 samples, 0.44%)</title><rect x="556.3" y="643.0" width="5.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="559.3" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$UntilIterator.&lt;init&gt; (50 samples, 0.44%)</title><rect x="556.3" y="627.0" width="5.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="559.3" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (47 samples, 0.41%)</title><rect x="556.3" y="611.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="559.3" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (47 samples, 0.41%)</title><rect x="556.3" y="595.0" width="4.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="559.3" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (47 samples, 0.41%)</title><rect x="556.3" y="579.0" width="4.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="559.3" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (47 samples, 0.41%)</title><rect x="556.3" y="563.0" width="4.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="559.3" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (47 samples, 0.41%)</title><rect x="556.3" y="547.0" width="4.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="559.3" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (43 samples, 0.38%)</title><rect x="556.4" y="531.0" width="4.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="559.4" y="542.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (22 samples, 0.19%)</title><rect x="556.5" y="515.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="559.5" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (22 samples, 0.19%)</title><rect x="556.5" y="499.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="559.5" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (22 samples, 0.19%)</title><rect x="556.5" y="483.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="559.5" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (21 samples, 0.18%)</title><rect x="556.6" y="467.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="559.6" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (21 samples, 0.18%)</title><rect x="556.6" y="451.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="559.6" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/123226378.compare (18 samples, 0.16%)</title><rect x="556.9" y="435.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="559.9" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (18 samples, 0.16%)</title><rect x="556.9" y="419.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="559.9" y="430.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (18 samples, 0.16%)</title><rect x="556.9" y="403.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="559.9" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (18 samples, 0.16%)</title><rect x="556.9" y="387.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="559.9" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (18 samples, 0.16%)</title><rect x="556.9" y="371.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="559.9" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (18 samples, 0.16%)</title><rect x="556.9" y="355.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="559.9" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$67/1497891062.compare (17 samples, 0.15%)</title><rect x="557.0" y="339.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="560.0" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (17 samples, 0.15%)</title><rect x="557.0" y="323.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="560.0" y="334.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.03%)</title><rect x="557.0" y="307.0" width="0.3" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="560.0" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$66/474651931.apply (12 samples, 0.11%)</title><rect x="557.5" y="307.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="560.5" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (12 samples, 0.11%)</title><rect x="557.5" y="291.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="560.5" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (11 samples, 0.10%)</title><rect x="557.5" y="275.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="560.5" y="286.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (11 samples, 0.10%)</title><rect x="557.5" y="259.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="560.5" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (11 samples, 0.10%)</title><rect x="557.5" y="243.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="560.5" y="254.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (11 samples, 0.10%)</title><rect x="557.5" y="227.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="560.5" y="238.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (11 samples, 0.10%)</title><rect x="557.5" y="211.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="560.5" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (11 samples, 0.10%)</title><rect x="557.5" y="195.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="560.5" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (11 samples, 0.10%)</title><rect x="557.5" y="179.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="560.5" y="190.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (8 samples, 0.07%)</title><rect x="557.9" y="163.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="560.9" y="174.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (3 samples, 0.03%)</title><rect x="558.4" y="147.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="561.4" y="158.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (20 samples, 0.18%)</title><rect x="558.8" y="515.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="561.8" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (20 samples, 0.18%)</title><rect x="558.8" y="499.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="561.8" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (20 samples, 0.18%)</title><rect x="558.8" y="483.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="561.8" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (20 samples, 0.18%)</title><rect x="558.8" y="467.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="561.8" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (20 samples, 0.18%)</title><rect x="558.8" y="451.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="561.8" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (20 samples, 0.18%)</title><rect x="558.8" y="435.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="561.8" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (9 samples, 0.08%)</title><rect x="558.8" y="419.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="561.8" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (8 samples, 0.07%)</title><rect x="558.9" y="403.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="561.9" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (8 samples, 0.07%)</title><rect x="558.9" y="387.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="561.9" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (8 samples, 0.07%)</title><rect x="558.9" y="371.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="561.9" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.valueAt (5 samples, 0.04%)</title><rect x="559.2" y="355.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="562.2" y="366.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (3 samples, 0.03%)</title><rect x="559.2" y="339.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="562.2" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (3 samples, 0.03%)</title><rect x="559.2" y="323.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="562.2" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (3 samples, 0.03%)</title><rect x="559.2" y="307.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="562.2" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (3 samples, 0.03%)</title><rect x="559.2" y="291.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="562.2" y="302.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (3 samples, 0.03%)</title><rect x="559.2" y="275.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="562.2" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.03%)</title><rect x="559.2" y="259.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="562.2" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.03%)</title><rect x="559.2" y="243.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="562.2" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/123226378.compare (11 samples, 0.10%)</title><rect x="559.7" y="419.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="562.7" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (11 samples, 0.10%)</title><rect x="559.7" y="403.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="562.7" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (11 samples, 0.10%)</title><rect x="559.7" y="387.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="562.7" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (11 samples, 0.10%)</title><rect x="559.7" y="371.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="562.7" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (8 samples, 0.07%)</title><rect x="560.0" y="355.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="563.0" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (8 samples, 0.07%)</title><rect x="560.0" y="339.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="563.0" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$67/1497891062.compare (8 samples, 0.07%)</title><rect x="560.0" y="323.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="563.0" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (8 samples, 0.07%)</title><rect x="560.0" y="307.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="563.0" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$66/474651931.apply (7 samples, 0.06%)</title><rect x="560.1" y="291.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="563.1" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (7 samples, 0.06%)</title><rect x="560.1" y="275.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="563.1" y="286.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (4 samples, 0.04%)</title><rect x="560.1" y="259.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="563.1" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (4 samples, 0.04%)</title><rect x="560.1" y="243.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="563.1" y="254.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (4 samples, 0.04%)</title><rect x="560.1" y="227.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="563.1" y="238.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (4 samples, 0.04%)</title><rect x="560.1" y="211.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="563.1" y="222.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (4 samples, 0.04%)</title><rect x="560.1" y="195.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="563.1" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.04%)</title><rect x="560.1" y="179.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="563.1" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.04%)</title><rect x="560.1" y="163.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="563.1" y="174.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (3 samples, 0.03%)</title><rect x="560.2" y="147.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="563.2" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (3 samples, 0.03%)</title><rect x="560.5" y="259.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="563.5" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.equals (3 samples, 0.03%)</title><rect x="560.9" y="531.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="563.9" y="542.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (3 samples, 0.03%)</title><rect x="561.2" y="611.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="564.2" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.iterator (695 samples, 6.08%)</title><rect x="561.5" y="643.0" width="71.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="564.5" y="654.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.rowsIterator (695 samples, 6.08%)</title><rect x="561.5" y="627.0" width="71.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="564.5" y="638.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (582 samples, 5.09%)</title><rect x="561.5" y="611.0" width="60.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="564.5" y="622.0">ru/mai..</text>
</g>
<g>
<title>java/util/ArrayList.add (5 samples, 0.04%)</title><rect x="561.7" y="595.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="564.7" y="606.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (5 samples, 0.04%)</title><rect x="561.7" y="579.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="564.7" y="590.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (5 samples, 0.04%)</title><rect x="561.7" y="563.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="564.7" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (5 samples, 0.04%)</title><rect x="561.7" y="547.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="564.7" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.next (31 samples, 0.27%)</title><rect x="562.2" y="595.0" width="3.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="565.2" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (31 samples, 0.27%)</title><rect x="562.2" y="579.0" width="3.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="565.2" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.descend (31 samples, 0.27%)</title><rect x="562.2" y="563.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="565.2" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (28 samples, 0.25%)</title><rect x="562.5" y="547.0" width="2.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="565.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (9 samples, 0.08%)</title><rect x="563.4" y="531.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="566.4" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 0.04%)</title><rect x="564.0" y="515.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="567.0" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 0.04%)</title><rect x="564.0" y="499.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="567.0" y="510.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (4 samples, 0.04%)</title><rect x="564.0" y="483.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="567.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (10 samples, 0.09%)</title><rect x="564.4" y="531.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="567.4" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (7 samples, 0.06%)</title><rect x="564.7" y="515.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="567.7" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (6 samples, 0.05%)</title><rect x="564.8" y="499.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="567.8" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (6 samples, 0.05%)</title><rect x="564.8" y="483.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="567.8" y="494.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (6 samples, 0.05%)</title><rect x="564.8" y="467.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="567.8" y="478.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (4 samples, 0.04%)</title><rect x="565.0" y="451.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="568.0" y="462.0"></text>
</g>
<g>
<title>java/lang/Long.compareTo (3 samples, 0.03%)</title><rect x="565.1" y="435.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="568.1" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (5 samples, 0.04%)</title><rect x="565.4" y="595.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="568.4" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (5 samples, 0.04%)</title><rect x="565.4" y="579.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="568.4" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (3 samples, 0.03%)</title><rect x="565.6" y="563.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="568.6" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.hiNode (3 samples, 0.03%)</title><rect x="565.6" y="547.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="568.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findLast (3 samples, 0.03%)</title><rect x="565.6" y="531.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="568.6" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.iterator (45 samples, 0.39%)</title><rect x="565.9" y="595.0" width="4.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="568.9" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (36 samples, 0.32%)</title><rect x="566.0" y="579.0" width="3.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="569.0" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.iterator (32 samples, 0.28%)</title><rect x="566.3" y="563.0" width="3.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="569.3" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (32 samples, 0.28%)</title><rect x="566.3" y="547.0" width="3.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="569.3" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (32 samples, 0.28%)</title><rect x="566.3" y="531.0" width="3.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="569.3" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (32 samples, 0.28%)</title><rect x="566.3" y="515.0" width="3.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="569.3" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.hiNode (3 samples, 0.03%)</title><rect x="566.3" y="499.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="569.3" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findLast (3 samples, 0.03%)</title><rect x="566.3" y="483.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="569.3" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.inBounds (4 samples, 0.04%)</title><rect x="566.6" y="499.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="569.6" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.tooLow (4 samples, 0.04%)</title><rect x="566.6" y="483.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="569.6" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (25 samples, 0.22%)</title><rect x="567.1" y="499.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="570.1" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (25 samples, 0.22%)</title><rect x="567.1" y="483.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="570.1" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (25 samples, 0.22%)</title><rect x="567.1" y="467.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="570.1" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (11 samples, 0.10%)</title><rect x="568.5" y="451.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="571.5" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (6 samples, 0.05%)</title><rect x="569.0" y="435.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="572.0" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (6 samples, 0.05%)</title><rect x="569.0" y="419.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="572.0" y="430.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (6 samples, 0.05%)</title><rect x="569.0" y="403.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="572.0" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.reduceIterators (8 samples, 0.07%)</title><rect x="569.7" y="579.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="572.7" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (5 samples, 0.04%)</title><rect x="569.7" y="563.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="572.7" y="574.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (4 samples, 0.04%)</title><rect x="569.8" y="547.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="572.8" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (3 samples, 0.03%)</title><rect x="570.3" y="563.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="573.3" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (3 samples, 0.03%)</title><rect x="570.3" y="547.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="573.3" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.iterator (494 samples, 4.32%)</title><rect x="570.6" y="595.0" width="51.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="573.6" y="606.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.&lt;init&gt; (490 samples, 4.29%)</title><rect x="570.8" y="579.0" width="50.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="573.8" y="590.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.position (487 samples, 4.26%)</title><rect x="571.1" y="563.0" width="50.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="574.1" y="574.0">ru/ma..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (120 samples, 1.05%)</title><rect x="572.5" y="547.0" width="12.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="575.5" y="558.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (96 samples, 0.84%)</title><rect x="573.9" y="531.0" width="9.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="576.9" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.base (3 samples, 0.03%)</title><rect x="578.7" y="515.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="581.7" y="526.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (12 samples, 0.11%)</title><rect x="579.0" y="515.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="582.0" y="526.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (5 samples, 0.04%)</title><rect x="579.8" y="499.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="582.8" y="510.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.base (3 samples, 0.03%)</title><rect x="580.3" y="515.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="583.3" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (10 samples, 0.09%)</title><rect x="580.6" y="515.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="583.6" y="526.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (3 samples, 0.03%)</title><rect x="581.3" y="499.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="584.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/util/ArraysSupport.vectorizedMismatch (12 samples, 0.11%)</title><rect x="581.6" y="515.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="584.6" y="526.0"></text>
</g>
<g>
<title>vtable stub (9 samples, 0.08%)</title><rect x="582.9" y="515.0" width="0.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="585.9" y="526.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (8 samples, 0.07%)</title><rect x="583.8" y="531.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="586.8" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (180 samples, 1.58%)</title><rect x="584.9" y="547.0" width="18.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="587.9" y="558.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (65 samples, 0.57%)</title><rect x="584.9" y="531.0" width="6.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="587.9" y="542.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (65 samples, 0.57%)</title><rect x="584.9" y="515.0" width="6.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="587.9" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (4 samples, 0.04%)</title><rect x="586.8" y="499.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="589.8" y="510.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (43 samples, 0.38%)</title><rect x="587.2" y="499.0" width="4.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="590.2" y="510.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (43 samples, 0.38%)</title><rect x="587.2" y="483.0" width="4.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="590.2" y="494.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (43 samples, 0.38%)</title><rect x="587.2" y="467.0" width="4.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="590.2" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (43 samples, 0.38%)</title><rect x="587.2" y="451.0" width="4.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="590.2" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (43 samples, 0.38%)</title><rect x="587.2" y="435.0" width="4.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="590.2" y="446.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (43 samples, 0.38%)</title><rect x="587.2" y="419.0" width="4.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="590.2" y="430.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (27 samples, 0.24%)</title><rect x="587.2" y="403.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="590.2" y="414.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (7 samples, 0.06%)</title><rect x="589.3" y="387.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="592.3" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (7 samples, 0.06%)</title><rect x="589.3" y="371.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="592.3" y="382.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (7 samples, 0.06%)</title><rect x="589.3" y="355.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="592.3" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (16 samples, 0.14%)</title><rect x="590.0" y="403.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="593.0" y="414.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (5 samples, 0.04%)</title><rect x="590.4" y="387.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="593.4" y="398.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (7 samples, 0.06%)</title><rect x="590.9" y="387.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="593.9" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (7 samples, 0.06%)</title><rect x="590.9" y="371.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="593.9" y="382.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (7 samples, 0.06%)</title><rect x="590.9" y="355.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="593.9" y="366.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (115 samples, 1.01%)</title><rect x="591.6" y="531.0" width="11.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="594.6" y="542.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (115 samples, 1.01%)</title><rect x="591.6" y="515.0" width="11.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="594.6" y="526.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (115 samples, 1.01%)</title><rect x="591.6" y="499.0" width="11.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="594.6" y="510.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (115 samples, 1.01%)</title><rect x="591.6" y="483.0" width="11.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="594.6" y="494.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (115 samples, 1.01%)</title><rect x="591.6" y="467.0" width="11.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="594.6" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (115 samples, 1.01%)</title><rect x="591.6" y="451.0" width="11.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="594.6" y="462.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (115 samples, 1.01%)</title><rect x="591.6" y="435.0" width="11.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="594.6" y="446.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (101 samples, 0.88%)</title><rect x="591.6" y="419.0" width="10.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="594.6" y="430.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (101 samples, 0.88%)</title><rect x="591.6" y="403.0" width="10.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="594.6" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (8 samples, 0.07%)</title><rect x="600.4" y="387.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="603.4" y="398.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (8 samples, 0.07%)</title><rect x="600.4" y="371.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="603.4" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (8 samples, 0.07%)</title><rect x="601.2" y="387.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="604.2" y="398.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (14 samples, 0.12%)</title><rect x="602.1" y="419.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="605.1" y="430.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (14 samples, 0.12%)</title><rect x="602.1" y="403.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="605.1" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (7 samples, 0.06%)</title><rect x="602.4" y="387.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="605.4" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (4 samples, 0.04%)</title><rect x="603.1" y="387.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="606.1" y="398.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (4 samples, 0.04%)</title><rect x="603.1" y="371.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="606.1" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (173 samples, 1.51%)</title><rect x="603.5" y="547.0" width="17.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="606.5" y="558.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (98 samples, 0.86%)</title><rect x="603.6" y="531.0" width="10.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="606.6" y="542.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (98 samples, 0.86%)</title><rect x="603.6" y="515.0" width="10.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="606.6" y="526.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (84 samples, 0.74%)</title><rect x="605.1" y="499.0" width="8.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="608.1" y="510.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (84 samples, 0.74%)</title><rect x="605.1" y="483.0" width="8.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="608.1" y="494.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (84 samples, 0.74%)</title><rect x="605.1" y="467.0" width="8.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="608.1" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (84 samples, 0.74%)</title><rect x="605.1" y="451.0" width="8.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="608.1" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (84 samples, 0.74%)</title><rect x="605.1" y="435.0" width="8.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="608.1" y="446.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (84 samples, 0.74%)</title><rect x="605.1" y="419.0" width="8.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="608.1" y="430.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (76 samples, 0.67%)</title><rect x="605.1" y="403.0" width="7.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="608.1" y="414.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (76 samples, 0.67%)</title><rect x="605.1" y="387.0" width="7.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="608.1" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (8 samples, 0.07%)</title><rect x="612.1" y="371.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="615.1" y="382.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (8 samples, 0.07%)</title><rect x="612.1" y="355.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="615.1" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (8 samples, 0.07%)</title><rect x="612.9" y="403.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="615.9" y="414.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (8 samples, 0.07%)</title><rect x="612.9" y="387.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="615.9" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (3 samples, 0.03%)</title><rect x="613.2" y="371.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="616.2" y="382.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (74 samples, 0.65%)</title><rect x="613.7" y="531.0" width="7.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="616.7" y="542.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (74 samples, 0.65%)</title><rect x="613.7" y="515.0" width="7.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="616.7" y="526.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (74 samples, 0.65%)</title><rect x="613.7" y="499.0" width="7.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="616.7" y="510.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (74 samples, 0.65%)</title><rect x="613.7" y="483.0" width="7.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="616.7" y="494.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (74 samples, 0.65%)</title><rect x="613.7" y="467.0" width="7.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="616.7" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (74 samples, 0.65%)</title><rect x="613.7" y="451.0" width="7.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="616.7" y="462.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (74 samples, 0.65%)</title><rect x="613.7" y="435.0" width="7.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="616.7" y="446.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (48 samples, 0.42%)</title><rect x="613.7" y="419.0" width="5.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="616.7" y="430.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (48 samples, 0.42%)</title><rect x="613.7" y="403.0" width="5.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="616.7" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (48 samples, 0.42%)</title><rect x="613.7" y="387.0" width="5.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="616.7" y="398.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (4 samples, 0.04%)</title><rect x="617.7" y="371.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="620.7" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (5 samples, 0.04%)</title><rect x="618.1" y="371.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="621.1" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (26 samples, 0.23%)</title><rect x="618.7" y="419.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="621.7" y="430.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (26 samples, 0.23%)</title><rect x="618.7" y="403.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="621.7" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (26 samples, 0.23%)</title><rect x="618.7" y="387.0" width="2.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="621.7" y="398.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (5 samples, 0.04%)</title><rect x="620.3" y="371.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="623.3" y="382.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (5 samples, 0.04%)</title><rect x="620.9" y="371.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="623.9" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.reduceIterators (113 samples, 0.99%)</title><rect x="621.6" y="611.0" width="11.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="624.6" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (90 samples, 0.79%)</title><rect x="621.6" y="595.0" width="9.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="624.6" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (89 samples, 0.78%)</title><rect x="621.7" y="579.0" width="9.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="624.7" y="590.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (77 samples, 0.67%)</title><rect x="622.9" y="563.0" width="8.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="625.9" y="574.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (77 samples, 0.67%)</title><rect x="622.9" y="547.0" width="8.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="625.9" y="558.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (76 samples, 0.67%)</title><rect x="623.0" y="531.0" width="7.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="626.0" y="542.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (76 samples, 0.67%)</title><rect x="623.0" y="515.0" width="7.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="626.0" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (74 samples, 0.65%)</title><rect x="623.2" y="499.0" width="7.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="626.2" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (74 samples, 0.65%)</title><rect x="623.2" y="483.0" width="7.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="626.2" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (27 samples, 0.24%)</title><rect x="623.2" y="467.0" width="2.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="626.2" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (27 samples, 0.24%)</title><rect x="623.2" y="451.0" width="2.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="626.2" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (27 samples, 0.24%)</title><rect x="623.2" y="435.0" width="2.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="626.2" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (27 samples, 0.24%)</title><rect x="623.2" y="419.0" width="2.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="626.2" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (9 samples, 0.08%)</title><rect x="623.2" y="403.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="626.2" y="414.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (6 samples, 0.05%)</title><rect x="623.2" y="387.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="626.2" y="398.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (6 samples, 0.05%)</title><rect x="623.2" y="371.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="626.2" y="382.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (4 samples, 0.04%)</title><rect x="623.4" y="355.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="626.4" y="366.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (4 samples, 0.04%)</title><rect x="623.4" y="339.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="626.4" y="350.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (4 samples, 0.04%)</title><rect x="623.4" y="323.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="626.4" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.04%)</title><rect x="623.4" y="307.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="626.4" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.04%)</title><rect x="623.4" y="291.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="626.4" y="302.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.04%)</title><rect x="623.4" y="275.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="626.4" y="286.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (3 samples, 0.03%)</title><rect x="623.9" y="387.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="626.9" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (5 samples, 0.04%)</title><rect x="624.2" y="403.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="627.2" y="414.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (4 samples, 0.04%)</title><rect x="624.2" y="387.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="627.2" y="398.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (4 samples, 0.04%)</title><rect x="624.2" y="371.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="627.2" y="382.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (3 samples, 0.03%)</title><rect x="624.3" y="355.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="627.3" y="366.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (3 samples, 0.03%)</title><rect x="624.3" y="339.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="627.3" y="350.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (3 samples, 0.03%)</title><rect x="624.3" y="323.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="627.3" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.03%)</title><rect x="624.3" y="307.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="627.3" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.03%)</title><rect x="624.3" y="291.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="627.3" y="302.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (3 samples, 0.03%)</title><rect x="624.3" y="275.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="627.3" y="286.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (3 samples, 0.03%)</title><rect x="624.3" y="259.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="627.3" y="270.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (3 samples, 0.03%)</title><rect x="624.3" y="243.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="627.3" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.timestampAt (6 samples, 0.05%)</title><rect x="624.7" y="403.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="627.7" y="414.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (6 samples, 0.05%)</title><rect x="624.7" y="387.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="627.7" y="398.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (6 samples, 0.05%)</title><rect x="624.7" y="371.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="627.7" y="382.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (6 samples, 0.05%)</title><rect x="624.7" y="355.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="627.7" y="366.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (6 samples, 0.05%)</title><rect x="624.7" y="339.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="627.7" y="350.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (6 samples, 0.05%)</title><rect x="624.7" y="323.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="627.7" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (6 samples, 0.05%)</title><rect x="624.7" y="307.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="627.7" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (6 samples, 0.05%)</title><rect x="624.7" y="291.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="627.7" y="302.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (5 samples, 0.04%)</title><rect x="624.8" y="275.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="627.8" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.valueAt (7 samples, 0.06%)</title><rect x="625.3" y="403.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="628.3" y="414.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (5 samples, 0.04%)</title><rect x="625.3" y="387.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="628.3" y="398.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (5 samples, 0.04%)</title><rect x="625.3" y="371.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="628.3" y="382.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (5 samples, 0.04%)</title><rect x="625.3" y="355.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="628.3" y="366.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (5 samples, 0.04%)</title><rect x="625.3" y="339.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="628.3" y="350.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (5 samples, 0.04%)</title><rect x="625.3" y="323.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="628.3" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 0.04%)</title><rect x="625.3" y="307.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="628.3" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 0.04%)</title><rect x="625.3" y="291.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="628.3" y="302.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.04%)</title><rect x="625.4" y="275.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="628.4" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/123226378.compare (47 samples, 0.41%)</title><rect x="626.0" y="467.0" width="4.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="629.0" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (47 samples, 0.41%)</title><rect x="626.0" y="451.0" width="4.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="629.0" y="462.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (47 samples, 0.41%)</title><rect x="626.0" y="435.0" width="4.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="629.0" y="446.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (47 samples, 0.41%)</title><rect x="626.0" y="419.0" width="4.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="629.0" y="430.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (35 samples, 0.31%)</title><rect x="627.1" y="403.0" width="3.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="630.1" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (35 samples, 0.31%)</title><rect x="627.1" y="387.0" width="3.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="630.1" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$67/1497891062.compare (33 samples, 0.29%)</title><rect x="627.1" y="371.0" width="3.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="630.1" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (33 samples, 0.29%)</title><rect x="627.1" y="355.0" width="3.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="630.1" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (9 samples, 0.08%)</title><rect x="627.4" y="339.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="630.4" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (9 samples, 0.08%)</title><rect x="627.4" y="323.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="630.4" y="334.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (7 samples, 0.06%)</title><rect x="627.5" y="307.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="630.5" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$66/474651931.apply (21 samples, 0.18%)</title><rect x="628.3" y="339.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="631.3" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (21 samples, 0.18%)</title><rect x="628.3" y="323.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="631.3" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (17 samples, 0.15%)</title><rect x="628.3" y="307.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="631.3" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (17 samples, 0.15%)</title><rect x="628.3" y="291.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="631.3" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (17 samples, 0.15%)</title><rect x="628.3" y="275.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="631.3" y="286.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (17 samples, 0.15%)</title><rect x="628.3" y="259.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="631.3" y="270.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (17 samples, 0.15%)</title><rect x="628.3" y="243.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="631.3" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (17 samples, 0.15%)</title><rect x="628.3" y="227.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="631.3" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (17 samples, 0.15%)</title><rect x="628.3" y="211.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="631.3" y="222.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (7 samples, 0.06%)</title><rect x="629.2" y="195.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="632.2" y="206.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (3 samples, 0.03%)</title><rect x="629.6" y="179.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="632.6" y="190.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (4 samples, 0.04%)</title><rect x="630.1" y="307.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="633.1" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (4 samples, 0.04%)</title><rect x="630.1" y="291.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="633.1" y="302.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.04%)</title><rect x="630.1" y="275.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="633.1" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.04%)</title><rect x="630.1" y="259.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="633.1" y="270.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.04%)</title><rect x="630.1" y="243.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="633.1" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (3 samples, 0.03%)</title><rect x="630.1" y="227.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="633.1" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (3 samples, 0.03%)</title><rect x="630.1" y="211.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="633.1" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (23 samples, 0.20%)</title><rect x="630.9" y="595.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="633.9" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (23 samples, 0.20%)</title><rect x="630.9" y="579.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="633.9" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (21 samples, 0.18%)</title><rect x="631.1" y="563.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="634.1" y="574.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (11 samples, 0.10%)</title><rect x="631.2" y="547.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="634.2" y="558.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (11 samples, 0.10%)</title><rect x="631.2" y="531.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="634.2" y="542.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (11 samples, 0.10%)</title><rect x="631.2" y="515.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="634.2" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (11 samples, 0.10%)</title><rect x="631.2" y="499.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="634.2" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (11 samples, 0.10%)</title><rect x="631.2" y="483.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="634.2" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/123226378.compare (9 samples, 0.08%)</title><rect x="631.4" y="467.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="634.4" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (9 samples, 0.08%)</title><rect x="631.4" y="451.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="634.4" y="462.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (9 samples, 0.08%)</title><rect x="631.4" y="435.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="634.4" y="446.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (9 samples, 0.08%)</title><rect x="631.4" y="419.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="634.4" y="430.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (9 samples, 0.08%)</title><rect x="631.4" y="403.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="634.4" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (9 samples, 0.08%)</title><rect x="631.4" y="387.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="634.4" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$67/1497891062.compare (8 samples, 0.07%)</title><rect x="631.5" y="371.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="634.5" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (7 samples, 0.06%)</title><rect x="631.6" y="355.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="634.6" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 0.04%)</title><rect x="631.6" y="339.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="634.6" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 0.04%)</title><rect x="631.6" y="323.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="634.6" y="334.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (3 samples, 0.03%)</title><rect x="631.6" y="307.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="634.6" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$66/474651931.apply (3 samples, 0.03%)</title><rect x="632.0" y="339.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="635.0" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (3 samples, 0.03%)</title><rect x="632.0" y="323.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="635.0" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (3 samples, 0.03%)</title><rect x="632.0" y="307.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="635.0" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (3 samples, 0.03%)</title><rect x="632.0" y="291.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="635.0" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (3 samples, 0.03%)</title><rect x="632.0" y="275.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="635.0" y="286.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (3 samples, 0.03%)</title><rect x="632.0" y="259.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="635.0" y="270.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (3 samples, 0.03%)</title><rect x="632.0" y="243.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="635.0" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.03%)</title><rect x="632.0" y="227.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="635.0" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.03%)</title><rect x="632.0" y="211.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="635.0" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (9 samples, 0.08%)</title><rect x="632.3" y="547.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="635.3" y="558.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (9 samples, 0.08%)</title><rect x="632.3" y="531.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="635.3" y="542.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (9 samples, 0.08%)</title><rect x="632.3" y="515.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="635.3" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (9 samples, 0.08%)</title><rect x="632.3" y="499.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="635.3" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (9 samples, 0.08%)</title><rect x="632.3" y="483.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="635.3" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (9 samples, 0.08%)</title><rect x="632.3" y="467.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="635.3" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/123226378.compare (8 samples, 0.07%)</title><rect x="632.4" y="451.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="635.4" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (8 samples, 0.07%)</title><rect x="632.4" y="435.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="635.4" y="446.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (8 samples, 0.07%)</title><rect x="632.4" y="419.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="635.4" y="430.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (8 samples, 0.07%)</title><rect x="632.4" y="403.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="635.4" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (8 samples, 0.07%)</title><rect x="632.4" y="387.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="635.4" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (8 samples, 0.07%)</title><rect x="632.4" y="371.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="635.4" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$67/1497891062.compare (8 samples, 0.07%)</title><rect x="632.4" y="355.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="635.4" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (8 samples, 0.07%)</title><rect x="632.4" y="339.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="635.4" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 0.04%)</title><rect x="632.4" y="323.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="635.4" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 0.04%)</title><rect x="632.4" y="307.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="635.4" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$66/474651931.apply (4 samples, 0.04%)</title><rect x="632.8" y="323.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="635.8" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (4 samples, 0.04%)</title><rect x="632.8" y="307.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="635.8" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (3 samples, 0.03%)</title><rect x="632.9" y="291.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="635.9" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/StorageSession.stream (1,858 samples, 16.26%)</title><rect x="633.3" y="659.0" width="191.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="636.3" y="670.0">ru/mail/polis/service/sha..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (237 samples, 2.07%)</title><rect x="633.4" y="643.0" width="24.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="636.4" y="654.0">o..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (5 samples, 0.04%)</title><rect x="633.4" y="627.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="636.4" y="638.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (232 samples, 2.03%)</title><rect x="633.9" y="627.0" width="23.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="636.9" y="638.0">o..</text>
</g>
<g>
<title>one/nio/net/Session.write (232 samples, 2.03%)</title><rect x="633.9" y="611.0" width="23.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="636.9" y="622.0">o..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (232 samples, 2.03%)</title><rect x="633.9" y="595.0" width="23.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="636.9" y="606.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (231 samples, 2.02%)</title><rect x="634.0" y="579.0" width="23.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="637.0" y="590.0">o..</text>
</g>
<g>
<title>.annobin_send.c (229 samples, 2.00%)</title><rect x="634.0" y="563.0" width="23.6" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="637.0" y="574.0">...</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (217 samples, 1.90%)</title><rect x="635.2" y="547.0" width="22.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="638.2" y="558.0">e..</text>
</g>
<g>
<title>do_syscall_64 (217 samples, 1.90%)</title><rect x="635.2" y="531.0" width="22.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="638.2" y="542.0">d..</text>
</g>
<g>
<title>__x64_sys_sendto (209 samples, 1.83%)</title><rect x="635.9" y="515.0" width="21.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="638.9" y="526.0">_..</text>
</g>
<g>
<title>__sys_sendto (209 samples, 1.83%)</title><rect x="635.9" y="499.0" width="21.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="638.9" y="510.0">_..</text>
</g>
<g>
<title>sock_sendmsg (206 samples, 1.80%)</title><rect x="635.9" y="483.0" width="21.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="638.9" y="494.0">s..</text>
</g>
<g>
<title>tcp_sendmsg (206 samples, 1.80%)</title><rect x="635.9" y="467.0" width="21.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="638.9" y="478.0">t..</text>
</g>
<g>
<title>tcp_sendmsg_locked (203 samples, 1.78%)</title><rect x="636.3" y="451.0" width="20.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="639.3" y="462.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (185 samples, 1.62%)</title><rect x="636.5" y="435.0" width="19.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="639.5" y="446.0"></text>
</g>
<g>
<title>tcp_write_xmit (185 samples, 1.62%)</title><rect x="636.5" y="419.0" width="19.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="639.5" y="430.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (179 samples, 1.57%)</title><rect x="636.5" y="403.0" width="18.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="639.5" y="414.0"></text>
</g>
<g>
<title>__ip_queue_xmit (175 samples, 1.53%)</title><rect x="636.7" y="387.0" width="18.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="639.7" y="398.0"></text>
</g>
<g>
<title>ip_local_out (34 samples, 0.30%)</title><rect x="636.7" y="371.0" width="3.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="639.7" y="382.0"></text>
</g>
<g>
<title>__ip_local_out (34 samples, 0.30%)</title><rect x="636.7" y="355.0" width="3.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="639.7" y="366.0"></text>
</g>
<g>
<title>nf_hook_slow (33 samples, 0.29%)</title><rect x="636.8" y="339.0" width="3.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="639.8" y="350.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (4 samples, 0.04%)</title><rect x="636.8" y="323.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="639.8" y="334.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (3 samples, 0.03%)</title><rect x="637.2" y="323.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="640.2" y="334.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (20 samples, 0.18%)</title><rect x="637.8" y="323.0" width="2.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="640.8" y="334.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get	[nf_conntrack] (6 samples, 0.05%)</title><rect x="638.1" y="307.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="641.1" y="318.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet	[nf_conntrack] (8 samples, 0.07%)</title><rect x="638.8" y="307.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="641.8" y="318.0"></text>
</g>
<g>
<title>nf_ct_seq_offset	[nf_conntrack] (4 samples, 0.04%)</title><rect x="639.3" y="291.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="642.3" y="302.0"></text>
</g>
<g>
<title>ip_output (141 samples, 1.23%)</title><rect x="640.2" y="371.0" width="14.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="643.2" y="382.0"></text>
</g>
<g>
<title>ip_finish_output2 (121 samples, 1.06%)</title><rect x="640.3" y="355.0" width="12.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="643.3" y="366.0"></text>
</g>
<g>
<title>__dev_queue_xmit (10 samples, 0.09%)</title><rect x="640.7" y="339.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="643.7" y="350.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (7 samples, 0.06%)</title><rect x="641.0" y="323.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="644.0" y="334.0"></text>
</g>
<g>
<title>loopback_xmit (7 samples, 0.06%)</title><rect x="641.0" y="307.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="644.0" y="318.0"></text>
</g>
<g>
<title>netif_rx (3 samples, 0.03%)</title><rect x="641.2" y="291.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="644.2" y="302.0"></text>
</g>
<g>
<title>netif_rx_internal (3 samples, 0.03%)</title><rect x="641.2" y="275.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="644.2" y="286.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (107 samples, 0.94%)</title><rect x="641.7" y="339.0" width="11.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="644.7" y="350.0"></text>
</g>
<g>
<title>do_softirq.part.0 (106 samples, 0.93%)</title><rect x="641.8" y="323.0" width="11.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="644.8" y="334.0"></text>
</g>
<g>
<title>do_softirq_own_stack (106 samples, 0.93%)</title><rect x="641.8" y="307.0" width="11.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="644.8" y="318.0"></text>
</g>
<g>
<title>__softirqentry_text_start (106 samples, 0.93%)</title><rect x="641.8" y="291.0" width="11.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="644.8" y="302.0"></text>
</g>
<g>
<title>net_rx_action (106 samples, 0.93%)</title><rect x="641.8" y="275.0" width="11.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="644.8" y="286.0"></text>
</g>
<g>
<title>process_backlog (100 samples, 0.88%)</title><rect x="642.5" y="259.0" width="10.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="645.5" y="270.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (99 samples, 0.87%)</title><rect x="642.6" y="243.0" width="10.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="645.6" y="254.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (4 samples, 0.04%)</title><rect x="642.6" y="227.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="645.6" y="238.0"></text>
</g>
<g>
<title>ip_rcv (95 samples, 0.83%)</title><rect x="643.0" y="227.0" width="9.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="646.0" y="238.0"></text>
</g>
<g>
<title>ip_local_deliver (73 samples, 0.64%)</title><rect x="643.3" y="211.0" width="7.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="646.3" y="222.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (63 samples, 0.55%)</title><rect x="643.3" y="195.0" width="6.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="646.3" y="206.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (63 samples, 0.55%)</title><rect x="643.3" y="179.0" width="6.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="646.3" y="190.0"></text>
</g>
<g>
<title>tcp_v4_rcv (62 samples, 0.54%)</title><rect x="643.4" y="163.0" width="6.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="646.4" y="174.0"></text>
</g>
<g>
<title>__inet_lookup_established (7 samples, 0.06%)</title><rect x="643.8" y="147.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="646.8" y="158.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (50 samples, 0.44%)</title><rect x="644.6" y="147.0" width="5.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="647.6" y="158.0"></text>
</g>
<g>
<title>tcp_rcv_established (49 samples, 0.43%)</title><rect x="644.7" y="131.0" width="5.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="647.7" y="142.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (5 samples, 0.04%)</title><rect x="644.9" y="115.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="647.9" y="126.0"></text>
</g>
<g>
<title>__ip_queue_xmit (5 samples, 0.04%)</title><rect x="644.9" y="99.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="647.9" y="110.0"></text>
</g>
<g>
<title>ip_local_out (4 samples, 0.04%)</title><rect x="644.9" y="83.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="647.9" y="94.0"></text>
</g>
<g>
<title>__ip_local_out (4 samples, 0.04%)</title><rect x="644.9" y="67.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="647.9" y="78.0"></text>
</g>
<g>
<title>nf_hook_slow (4 samples, 0.04%)</title><rect x="644.9" y="51.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="647.9" y="62.0"></text>
</g>
<g>
<title>sock_def_readable (15 samples, 0.13%)</title><rect x="645.4" y="115.0" width="1.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="648.4" y="126.0"></text>
</g>
<g>
<title>__wake_up_common_lock (15 samples, 0.13%)</title><rect x="645.4" y="99.0" width="1.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="648.4" y="110.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (15 samples, 0.13%)</title><rect x="645.4" y="83.0" width="1.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="648.4" y="94.0"></text>
</g>
<g>
<title>tcp_ack (12 samples, 0.11%)</title><rect x="647.0" y="115.0" width="1.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="650.0" y="126.0"></text>
</g>
<g>
<title>tcp_data_queue (13 samples, 0.11%)</title><rect x="648.2" y="115.0" width="1.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="651.2" y="126.0"></text>
</g>
<g>
<title>sock_def_readable (12 samples, 0.11%)</title><rect x="648.2" y="99.0" width="1.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="651.2" y="110.0"></text>
</g>
<g>
<title>__wake_up_common_lock (10 samples, 0.09%)</title><rect x="648.4" y="83.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="651.4" y="94.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (10 samples, 0.09%)</title><rect x="648.4" y="67.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="651.4" y="78.0"></text>
</g>
<g>
<title>nf_hook_slow (10 samples, 0.09%)</title><rect x="649.8" y="195.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="652.8" y="206.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (8 samples, 0.07%)</title><rect x="649.9" y="179.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="652.9" y="190.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (3 samples, 0.03%)</title><rect x="650.8" y="211.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="653.8" y="222.0"></text>
</g>
<g>
<title>nf_hook_slow (16 samples, 0.14%)</title><rect x="651.1" y="211.0" width="1.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="654.1" y="222.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (14 samples, 0.12%)</title><rect x="651.1" y="195.0" width="1.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="654.1" y="206.0"></text>
</g>
<g>
<title>nf_hook_slow (17 samples, 0.15%)</title><rect x="653.0" y="355.0" width="1.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="656.0" y="366.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (5 samples, 0.04%)</title><rect x="653.0" y="339.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="656.0" y="350.0"></text>
</g>
<g>
<title>nf_confirm	[nf_conntrack] (6 samples, 0.05%)</title><rect x="653.5" y="339.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="656.5" y="350.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events	[nf_conntrack] (5 samples, 0.04%)</title><rect x="653.6" y="323.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="656.6" y="334.0"></text>
</g>
<g>
<title>nf_nat_ipv4_out	[nf_nat] (3 samples, 0.03%)</title><rect x="654.1" y="339.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="657.1" y="350.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (4 samples, 0.04%)</title><rect x="655.1" y="403.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="658.1" y="414.0"></text>
</g>
<g>
<title>sk_reset_timer (4 samples, 0.04%)</title><rect x="655.1" y="387.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="658.1" y="398.0"></text>
</g>
<g>
<title>mod_timer (3 samples, 0.03%)</title><rect x="655.2" y="371.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="658.2" y="382.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.03%)</title><rect x="655.2" y="355.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="658.2" y="366.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (7 samples, 0.06%)</title><rect x="655.7" y="435.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="658.7" y="446.0"></text>
</g>
<g>
<title>__alloc_skb (6 samples, 0.05%)</title><rect x="655.7" y="419.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="658.7" y="430.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (4 samples, 0.04%)</title><rect x="655.8" y="403.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="658.8" y="414.0"></text>
</g>
<g>
<title>tcp_send_mss (4 samples, 0.04%)</title><rect x="656.6" y="435.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="659.6" y="446.0"></text>
</g>
<g>
<title>tcp_current_mss (4 samples, 0.04%)</title><rect x="656.6" y="419.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="659.6" y="430.0"></text>
</g>
<g>
<title>sockfd_lookup_light (3 samples, 0.03%)</title><rect x="657.2" y="483.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="660.2" y="494.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.03%)</title><rect x="657.2" y="467.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="660.2" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/StorageSession.next (1,620 samples, 14.18%)</title><rect x="657.8" y="643.0" width="167.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="660.8" y="654.0">ru/mail/polis/service..</text>
</g>
<g>
<title>one/nio/net/Session.write (1,125 samples, 9.85%)</title><rect x="657.9" y="627.0" width="116.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="660.9" y="638.0">one/nio/net/Se..</text>
</g>
<g>
<title>one/nio/net/Session.write (1,121 samples, 9.81%)</title><rect x="658.2" y="611.0" width="115.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="661.2" y="622.0">one/nio/net/Se..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (1,121 samples, 9.81%)</title><rect x="658.2" y="595.0" width="115.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="661.2" y="606.0">one/nio/net/Se..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (1,118 samples, 9.79%)</title><rect x="658.5" y="579.0" width="115.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="661.5" y="590.0">one/nio/net/Na..</text>
</g>
<g>
<title>.annobin_send.c (1,089 samples, 9.53%)</title><rect x="659.1" y="563.0" width="112.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="662.1" y="574.0">.annobin_send.c</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (4 samples, 0.04%)</title><rect x="668.4" y="547.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="671.4" y="558.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (994 samples, 8.70%)</title><rect x="668.9" y="547.0" width="102.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="671.9" y="558.0">entry_SYSCAL..</text>
</g>
<g>
<title>do_syscall_64 (994 samples, 8.70%)</title><rect x="668.9" y="531.0" width="102.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="671.9" y="542.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (971 samples, 8.50%)</title><rect x="671.0" y="515.0" width="100.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="674.0" y="526.0">__x64_sys_se..</text>
</g>
<g>
<title>__sys_sendto (968 samples, 8.47%)</title><rect x="671.3" y="499.0" width="100.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="674.3" y="510.0">__sys_sendto</text>
</g>
<g>
<title>import_single_range (6 samples, 0.05%)</title><rect x="671.9" y="483.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="674.9" y="494.0"></text>
</g>
<g>
<title>sock_sendmsg (940 samples, 8.23%)</title><rect x="672.5" y="483.0" width="97.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="675.5" y="494.0">sock_sendmsg</text>
</g>
<g>
<title>security_socket_sendmsg (19 samples, 0.17%)</title><rect x="672.7" y="467.0" width="2.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="675.7" y="478.0"></text>
</g>
<g>
<title>sock_has_perm (18 samples, 0.16%)</title><rect x="672.8" y="451.0" width="1.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="675.8" y="462.0"></text>
</g>
<g>
<title>avc_has_perm (12 samples, 0.11%)</title><rect x="673.4" y="435.0" width="1.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="676.4" y="446.0"></text>
</g>
<g>
<title>tcp_sendmsg (919 samples, 8.04%)</title><rect x="674.7" y="467.0" width="94.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="677.7" y="478.0">tcp_sendmsg</text>
</g>
<g>
<title>lock_sock_nested (8 samples, 0.07%)</title><rect x="674.8" y="451.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="677.8" y="462.0"></text>
</g>
<g>
<title>queued_spin_lock_slowpath (6 samples, 0.05%)</title><rect x="675.0" y="435.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="678.0" y="446.0"></text>
</g>
<g>
<title>release_sock (35 samples, 0.31%)</title><rect x="675.6" y="451.0" width="3.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="678.6" y="462.0"></text>
</g>
<g>
<title>__release_sock (28 samples, 0.25%)</title><rect x="675.7" y="435.0" width="2.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="678.7" y="446.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (27 samples, 0.24%)</title><rect x="675.8" y="419.0" width="2.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="678.8" y="430.0"></text>
</g>
<g>
<title>tcp_rcv_established (27 samples, 0.24%)</title><rect x="675.8" y="403.0" width="2.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="678.8" y="414.0"></text>
</g>
<g>
<title>tcp_ack (19 samples, 0.17%)</title><rect x="676.4" y="387.0" width="2.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="679.4" y="398.0"></text>
</g>
<g>
<title>__kfree_skb (5 samples, 0.04%)</title><rect x="677.0" y="371.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="680.0" y="382.0"></text>
</g>
<g>
<title>skb_release_data (3 samples, 0.03%)</title><rect x="677.2" y="355.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="680.2" y="366.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (4 samples, 0.04%)</title><rect x="677.9" y="371.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="680.9" y="382.0"></text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.03%)</title><rect x="678.0" y="355.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="681.0" y="366.0"></text>
</g>
<g>
<title>mod_timer (3 samples, 0.03%)</title><rect x="678.0" y="339.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="681.0" y="350.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (4 samples, 0.04%)</title><rect x="678.6" y="435.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="681.6" y="446.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (875 samples, 7.66%)</title><rect x="679.2" y="451.0" width="90.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="682.2" y="462.0">tcp_sendms..</text>
</g>
<g>
<title>__check_object_size (10 samples, 0.09%)</title><rect x="680.8" y="435.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="683.8" y="446.0"></text>
</g>
<g>
<title>__virt_addr_valid (4 samples, 0.04%)</title><rect x="681.1" y="419.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="684.1" y="430.0"></text>
</g>
<g>
<title>check_stack_object (3 samples, 0.03%)</title><rect x="681.5" y="419.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="684.5" y="430.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (784 samples, 6.86%)</title><rect x="681.8" y="435.0" width="81.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="684.8" y="446.0">__tcp_pus..</text>
</g>
<g>
<title>tcp_write_xmit (783 samples, 6.85%)</title><rect x="681.9" y="419.0" width="80.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="684.9" y="430.0">tcp_write..</text>
</g>
<g>
<title>__tcp_transmit_skb (728 samples, 6.37%)</title><rect x="682.8" y="403.0" width="75.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="685.8" y="414.0">__tcp_tr..</text>
</g>
<g>
<title>__ip_queue_xmit (703 samples, 6.15%)</title><rect x="683.7" y="387.0" width="72.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="686.7" y="398.0">__ip_que..</text>
</g>
<g>
<title>__sk_dst_check (11 samples, 0.10%)</title><rect x="684.3" y="371.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="687.3" y="382.0"></text>
</g>
<g>
<title>ipv4_dst_check (9 samples, 0.08%)</title><rect x="684.5" y="355.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="687.5" y="366.0"></text>
</g>
<g>
<title>ip_local_out (154 samples, 1.35%)</title><rect x="685.4" y="371.0" width="15.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="688.4" y="382.0"></text>
</g>
<g>
<title>__ip_local_out (152 samples, 1.33%)</title><rect x="685.6" y="355.0" width="15.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="688.6" y="366.0"></text>
</g>
<g>
<title>ip_send_check (4 samples, 0.04%)</title><rect x="685.8" y="339.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="688.8" y="350.0"></text>
</g>
<g>
<title>nf_hook_slow (146 samples, 1.28%)</title><rect x="686.2" y="339.0" width="15.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="689.2" y="350.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (49 samples, 0.43%)</title><rect x="686.4" y="323.0" width="5.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="689.4" y="334.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (25 samples, 0.22%)</title><rect x="691.6" y="323.0" width="2.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="694.6" y="334.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (21 samples, 0.18%)</title><rect x="692.0" y="307.0" width="2.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="695.0" y="318.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag	[nf_defrag_ipv4] (3 samples, 0.03%)</title><rect x="694.4" y="323.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="697.4" y="334.0"></text>
</g>
<g>
<title>ipv4_conntrack_local	[nf_conntrack] (10 samples, 0.09%)</title><rect x="694.7" y="323.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="697.7" y="334.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (38 samples, 0.33%)</title><rect x="695.8" y="323.0" width="3.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="698.8" y="334.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get	[nf_conntrack] (8 samples, 0.07%)</title><rect x="696.4" y="307.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="699.4" y="318.0"></text>
</g>
<g>
<title>hash_conntrack_raw	[nf_conntrack] (3 samples, 0.03%)</title><rect x="697.3" y="307.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="700.3" y="318.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet	[nf_conntrack] (15 samples, 0.13%)</title><rect x="697.6" y="307.0" width="1.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="700.6" y="318.0"></text>
</g>
<g>
<title>nf_ct_get_tuple	[nf_conntrack] (5 samples, 0.04%)</title><rect x="699.2" y="307.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="702.2" y="318.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn	[nf_nat] (12 samples, 0.11%)</title><rect x="699.7" y="323.0" width="1.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="702.7" y="334.0"></text>
</g>
<g>
<title>nf_nat_inet_fn	[nf_nat] (4 samples, 0.04%)</title><rect x="700.3" y="307.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="703.3" y="318.0"></text>
</g>
<g>
<title>selinux_ipv4_output (4 samples, 0.04%)</title><rect x="700.9" y="323.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="703.9" y="334.0"></text>
</g>
<g>
<title>ip_output (532 samples, 4.66%)</title><rect x="701.3" y="371.0" width="55.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="704.3" y="382.0">ip_ou..</text>
</g>
<g>
<title>ip_finish_output2 (473 samples, 4.14%)</title><rect x="702.1" y="355.0" width="48.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="705.1" y="366.0">ip_f..</text>
</g>
<g>
<title>__dev_queue_xmit (40 samples, 0.35%)</title><rect x="704.3" y="339.0" width="4.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="707.3" y="350.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (31 samples, 0.27%)</title><rect x="704.6" y="323.0" width="3.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="707.6" y="334.0"></text>
</g>
<g>
<title>loopback_xmit (29 samples, 0.25%)</title><rect x="704.8" y="307.0" width="3.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="707.8" y="318.0"></text>
</g>
<g>
<title>netif_rx (12 samples, 0.11%)</title><rect x="705.7" y="291.0" width="1.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="708.7" y="302.0"></text>
</g>
<g>
<title>netif_rx_internal (12 samples, 0.11%)</title><rect x="705.7" y="275.0" width="1.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="708.7" y="286.0"></text>
</g>
<g>
<title>enqueue_to_backlog (5 samples, 0.04%)</title><rect x="705.8" y="259.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="708.8" y="270.0"></text>
</g>
<g>
<title>ktime_get_with_offset (6 samples, 0.05%)</title><rect x="706.3" y="259.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="709.3" y="270.0"></text>
</g>
<g>
<title>read_tsc (3 samples, 0.03%)</title><rect x="706.6" y="243.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="709.6" y="254.0"></text>
</g>
<g>
<title>sk_free (3 samples, 0.03%)</title><rect x="706.9" y="291.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="709.9" y="302.0"></text>
</g>
<g>
<title>tcp_wfree (4 samples, 0.04%)</title><rect x="707.4" y="291.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="710.4" y="302.0"></text>
</g>
<g>
<title>validate_xmit_skb (5 samples, 0.04%)</title><rect x="707.9" y="323.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="710.9" y="334.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (411 samples, 3.60%)</title><rect x="708.5" y="339.0" width="42.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="711.5" y="350.0">__lo..</text>
</g>
<g>
<title>do_softirq.part.0 (410 samples, 3.59%)</title><rect x="708.6" y="323.0" width="42.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="711.6" y="334.0">do_s..</text>
</g>
<g>
<title>do_softirq_own_stack (403 samples, 3.53%)</title><rect x="709.3" y="307.0" width="41.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="712.3" y="318.0">do_..</text>
</g>
<g>
<title>__softirqentry_text_start (403 samples, 3.53%)</title><rect x="709.3" y="291.0" width="41.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="712.3" y="302.0">__s..</text>
</g>
<g>
<title>net_rx_action (395 samples, 3.46%)</title><rect x="709.9" y="275.0" width="40.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="712.9" y="286.0">net..</text>
</g>
<g>
<title>process_backlog (388 samples, 3.40%)</title><rect x="710.6" y="259.0" width="40.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="713.6" y="270.0">pro..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (379 samples, 3.32%)</title><rect x="711.6" y="243.0" width="39.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="714.6" y="254.0">__n..</text>
</g>
<g>
<title>__netif_receive_skb_core (11 samples, 0.10%)</title><rect x="711.8" y="227.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="714.8" y="238.0"></text>
</g>
<g>
<title>ip_rcv (366 samples, 3.20%)</title><rect x="712.9" y="227.0" width="37.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="715.9" y="238.0">ip_..</text>
</g>
<g>
<title>ip_local_deliver (256 samples, 2.24%)</title><rect x="713.2" y="211.0" width="26.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="716.2" y="222.0">i..</text>
</g>
<g>
<title>ip_local_deliver_finish (159 samples, 1.39%)</title><rect x="714.0" y="195.0" width="16.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="717.0" y="206.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (159 samples, 1.39%)</title><rect x="714.0" y="179.0" width="16.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="717.0" y="190.0"></text>
</g>
<g>
<title>tcp_v4_rcv (157 samples, 1.37%)</title><rect x="714.2" y="163.0" width="16.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="717.2" y="174.0"></text>
</g>
<g>
<title>__inet_lookup_established (10 samples, 0.09%)</title><rect x="715.0" y="147.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="718.0" y="158.0"></text>
</g>
<g>
<title>sock_put (3 samples, 0.03%)</title><rect x="716.3" y="147.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="719.3" y="158.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (131 samples, 1.15%)</title><rect x="716.8" y="147.0" width="13.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="719.8" y="158.0"></text>
</g>
<g>
<title>tcp_rcv_established (129 samples, 1.13%)</title><rect x="717.0" y="131.0" width="13.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="720.0" y="142.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (13 samples, 0.11%)</title><rect x="717.6" y="115.0" width="1.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="720.6" y="126.0"></text>
</g>
<g>
<title>__ip_queue_xmit (13 samples, 0.11%)</title><rect x="717.6" y="99.0" width="1.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="720.6" y="110.0"></text>
</g>
<g>
<title>ip_local_out (4 samples, 0.04%)</title><rect x="717.6" y="83.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="720.6" y="94.0"></text>
</g>
<g>
<title>__ip_local_out (4 samples, 0.04%)</title><rect x="717.6" y="67.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="720.6" y="78.0"></text>
</g>
<g>
<title>nf_hook_slow (4 samples, 0.04%)</title><rect x="717.6" y="51.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="720.6" y="62.0"></text>
</g>
<g>
<title>ip_output (9 samples, 0.08%)</title><rect x="718.1" y="83.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="721.1" y="94.0"></text>
</g>
<g>
<title>ip_finish_output (3 samples, 0.03%)</title><rect x="718.2" y="67.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="721.2" y="78.0"></text>
</g>
<g>
<title>nf_hook_slow (5 samples, 0.04%)</title><rect x="718.5" y="67.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="721.5" y="78.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (4 samples, 0.04%)</title><rect x="718.5" y="51.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="721.5" y="62.0"></text>
</g>
<g>
<title>sock_def_readable (87 samples, 0.76%)</title><rect x="719.5" y="115.0" width="9.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="722.5" y="126.0"></text>
</g>
<g>
<title>__wake_up_common_lock (82 samples, 0.72%)</title><rect x="720.0" y="99.0" width="8.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="723.0" y="110.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (81 samples, 0.71%)</title><rect x="720.1" y="83.0" width="8.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="723.1" y="94.0"></text>
</g>
<g>
<title>tcp_data_queue (5 samples, 0.04%)</title><rect x="728.6" y="115.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="731.6" y="126.0"></text>
</g>
<g>
<title>sock_def_readable (3 samples, 0.03%)</title><rect x="728.6" y="99.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="731.6" y="110.0"></text>
</g>
<g>
<title>__wake_up_common_lock (3 samples, 0.03%)</title><rect x="728.6" y="83.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="731.6" y="94.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (6 samples, 0.05%)</title><rect x="729.2" y="115.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="732.2" y="126.0"></text>
</g>
<g>
<title>ktime_get (4 samples, 0.04%)</title><rect x="729.4" y="99.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="732.4" y="110.0"></text>
</g>
<g>
<title>read_tsc (3 samples, 0.03%)</title><rect x="729.5" y="83.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="732.5" y="94.0"></text>
</g>
<g>
<title>tcp_queue_rcv (4 samples, 0.04%)</title><rect x="729.8" y="115.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="732.8" y="126.0"></text>
</g>
<g>
<title>nf_hook_slow (89 samples, 0.78%)</title><rect x="730.5" y="195.0" width="9.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="733.5" y="206.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (65 samples, 0.57%)</title><rect x="731.1" y="179.0" width="6.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="734.1" y="190.0"></text>
</g>
<g>
<title>conntrack_mt	[xt_conntrack] (5 samples, 0.04%)</title><rect x="737.1" y="163.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="740.1" y="174.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (3 samples, 0.03%)</title><rect x="738.0" y="179.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="741.0" y="190.0"></text>
</g>
<g>
<title>ipv4_confirm	[nf_conntrack] (4 samples, 0.04%)</title><rect x="738.4" y="179.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="741.4" y="190.0"></text>
</g>
<g>
<title>nf_confirm	[nf_conntrack] (3 samples, 0.03%)</title><rect x="738.8" y="179.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="741.8" y="190.0"></text>
</g>
<g>
<title>nf_nat_inet_fn	[nf_nat] (4 samples, 0.04%)</title><rect x="739.1" y="179.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="742.1" y="190.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (3 samples, 0.03%)</title><rect x="739.6" y="211.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="742.6" y="222.0"></text>
</g>
<g>
<title>nf_hook_slow (103 samples, 0.90%)</title><rect x="740.1" y="211.0" width="10.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="743.1" y="222.0"></text>
</g>
<g>
<title>ip_sabotage_in	[br_netfilter] (4 samples, 0.04%)</title><rect x="740.3" y="195.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="743.3" y="206.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (79 samples, 0.69%)</title><rect x="740.7" y="195.0" width="8.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="743.7" y="206.0"></text>
</g>
<g>
<title>iptable_raw_hook	[iptable_raw] (5 samples, 0.04%)</title><rect x="748.9" y="195.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="751.9" y="206.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (4 samples, 0.04%)</title><rect x="749.9" y="195.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="752.9" y="206.0"></text>
</g>
<g>
<title>nf_nat_ipv4_in	[nf_nat] (4 samples, 0.04%)</title><rect x="750.3" y="195.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="753.3" y="206.0"></text>
</g>
<g>
<title>ip_finish_output (5 samples, 0.04%)</title><rect x="750.9" y="355.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="753.9" y="366.0"></text>
</g>
<g>
<title>ipv4_mtu (3 samples, 0.03%)</title><rect x="751.1" y="339.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="754.1" y="350.0"></text>
</g>
<g>
<title>nf_hook_slow (47 samples, 0.41%)</title><rect x="751.4" y="355.0" width="4.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="754.4" y="366.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (17 samples, 0.15%)</title><rect x="751.5" y="339.0" width="1.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="754.5" y="350.0"></text>
</g>
<g>
<title>nf_confirm	[nf_conntrack] (5 samples, 0.04%)</title><rect x="753.6" y="339.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="756.6" y="350.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events	[nf_conntrack] (4 samples, 0.04%)</title><rect x="753.7" y="323.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="756.7" y="334.0"></text>
</g>
<g>
<title>nf_nat_ipv4_out	[nf_nat] (10 samples, 0.09%)</title><rect x="754.1" y="339.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="757.1" y="350.0"></text>
</g>
<g>
<title>selinux_ip_postroute (7 samples, 0.06%)</title><rect x="755.1" y="339.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="758.1" y="350.0"></text>
</g>
<g>
<title>selinux_ipv4_postroute (4 samples, 0.04%)</title><rect x="755.9" y="339.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="758.9" y="350.0"></text>
</g>
<g>
<title>__skb_clone (8 samples, 0.07%)</title><rect x="756.3" y="387.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="759.3" y="398.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (4 samples, 0.04%)</title><rect x="757.5" y="387.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="760.5" y="398.0"></text>
</g>
<g>
<title>ktime_get (5 samples, 0.04%)</title><rect x="758.0" y="403.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="761.0" y="414.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (21 samples, 0.18%)</title><rect x="758.6" y="403.0" width="2.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="761.6" y="414.0"></text>
</g>
<g>
<title>sk_reset_timer (13 samples, 0.11%)</title><rect x="759.0" y="387.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="762.0" y="398.0"></text>
</g>
<g>
<title>mod_timer (12 samples, 0.11%)</title><rect x="759.1" y="371.0" width="1.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="762.1" y="382.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (6 samples, 0.05%)</title><rect x="759.5" y="355.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="762.5" y="366.0"></text>
</g>
<g>
<title>tcp_rbtree_insert (3 samples, 0.03%)</title><rect x="760.3" y="387.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="763.3" y="398.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (20 samples, 0.18%)</title><rect x="760.7" y="403.0" width="2.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="763.7" y="414.0"></text>
</g>
<g>
<title>sk_reset_timer (18 samples, 0.16%)</title><rect x="760.9" y="387.0" width="1.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="763.9" y="398.0"></text>
</g>
<g>
<title>mod_timer (17 samples, 0.15%)</title><rect x="761.0" y="371.0" width="1.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="764.0" y="382.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (12 samples, 0.11%)</title><rect x="761.1" y="355.0" width="1.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="764.1" y="366.0"></text>
</g>
<g>
<title>lock_timer_base (4 samples, 0.04%)</title><rect x="762.4" y="355.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="765.4" y="366.0"></text>
</g>
<g>
<title>_copy_from_iter_full (12 samples, 0.11%)</title><rect x="762.8" y="435.0" width="1.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="765.8" y="446.0"></text>
</g>
<g>
<title>copyin (10 samples, 0.09%)</title><rect x="762.9" y="419.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="765.9" y="430.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (6 samples, 0.05%)</title><rect x="763.3" y="403.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="766.3" y="414.0"></text>
</g>
<g>
<title>sk_page_frag_refill (4 samples, 0.04%)</title><rect x="764.0" y="435.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="767.0" y="446.0"></text>
</g>
<g>
<title>skb_page_frag_refill (4 samples, 0.04%)</title><rect x="764.0" y="419.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="767.0" y="430.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (38 samples, 0.33%)</title><rect x="764.4" y="435.0" width="4.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="767.4" y="446.0"></text>
</g>
<g>
<title>__alloc_skb (31 samples, 0.27%)</title><rect x="764.7" y="419.0" width="3.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="767.7" y="430.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (9 samples, 0.08%)</title><rect x="765.5" y="403.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="768.5" y="414.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (9 samples, 0.08%)</title><rect x="765.5" y="387.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="768.5" y="398.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (13 samples, 0.11%)</title><rect x="766.4" y="403.0" width="1.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="769.4" y="414.0"></text>
</g>
<g>
<title>__sk_mem_schedule (3 samples, 0.03%)</title><rect x="768.0" y="419.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="771.0" y="430.0"></text>
</g>
<g>
<title>__sk_mem_raise_allocated (3 samples, 0.03%)</title><rect x="768.0" y="403.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="771.0" y="414.0"></text>
</g>
<g>
<title>tcp_send_mss (4 samples, 0.04%)</title><rect x="768.8" y="435.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="771.8" y="446.0"></text>
</g>
<g>
<title>tcp_current_mss (4 samples, 0.04%)</title><rect x="768.8" y="419.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="771.8" y="430.0"></text>
</g>
<g>
<title>ipv4_mtu (4 samples, 0.04%)</title><rect x="768.8" y="403.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="771.8" y="414.0"></text>
</g>
<g>
<title>sockfd_lookup_light (16 samples, 0.14%)</title><rect x="769.6" y="483.0" width="1.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="772.6" y="494.0"></text>
</g>
<g>
<title>__fget_light (14 samples, 0.12%)</title><rect x="769.8" y="467.0" width="1.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="772.8" y="478.0"></text>
</g>
<g>
<title>__fget (9 samples, 0.08%)</title><rect x="770.3" y="451.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="773.3" y="462.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.15%)</title><rect x="771.7" y="563.0" width="1.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="774.7" y="574.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.15%)</title><rect x="771.7" y="547.0" width="1.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="774.7" y="558.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (13 samples, 0.11%)</title><rect x="771.9" y="531.0" width="1.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="774.9" y="542.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (9 samples, 0.08%)</title><rect x="772.2" y="515.0" width="0.9" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="775.2" y="526.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (5 samples, 0.04%)</title><rect x="772.5" y="499.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="775.5" y="510.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (5 samples, 0.04%)</title><rect x="773.4" y="563.0" width="0.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="776.4" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (30 samples, 0.26%)</title><rect x="774.1" y="627.0" width="3.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="777.1" y="638.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (10 samples, 0.09%)</title><rect x="774.1" y="611.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="777.1" y="622.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (10 samples, 0.09%)</title><rect x="774.1" y="595.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="777.1" y="606.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (9 samples, 0.08%)</title><rect x="774.3" y="579.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="777.3" y="590.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (9 samples, 0.08%)</title><rect x="774.3" y="563.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="777.3" y="574.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (7 samples, 0.06%)</title><rect x="774.5" y="547.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="777.5" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (7 samples, 0.06%)</title><rect x="774.5" y="531.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="777.5" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (6 samples, 0.05%)</title><rect x="774.6" y="515.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="777.6" y="526.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (5 samples, 0.04%)</title><rect x="774.7" y="499.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="777.7" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (20 samples, 0.18%)</title><rect x="775.2" y="611.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="778.2" y="622.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (20 samples, 0.18%)</title><rect x="775.2" y="595.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="778.2" y="606.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (16 samples, 0.14%)</title><rect x="775.3" y="579.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="778.3" y="590.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (16 samples, 0.14%)</title><rect x="775.3" y="563.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="778.3" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (16 samples, 0.14%)</title><rect x="775.3" y="547.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="778.3" y="558.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (15 samples, 0.13%)</title><rect x="775.3" y="531.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="778.3" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (13 samples, 0.11%)</title><rect x="775.4" y="515.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="778.4" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (10 samples, 0.09%)</title><rect x="775.7" y="499.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="778.7" y="510.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (10 samples, 0.09%)</title><rect x="775.7" y="483.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="778.7" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getValue (5 samples, 0.04%)</title><rect x="777.2" y="627.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="780.2" y="638.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (4 samples, 0.04%)</title><rect x="777.2" y="611.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="780.2" y="622.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (4 samples, 0.04%)</title><rect x="777.2" y="595.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="780.2" y="606.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (4 samples, 0.04%)</title><rect x="777.2" y="579.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="780.2" y="590.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (3 samples, 0.03%)</title><rect x="777.2" y="563.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="780.2" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$UntilIterator.hasNext (13 samples, 0.11%)</title><rect x="777.8" y="627.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="780.8" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.compareTo (13 samples, 0.11%)</title><rect x="777.8" y="611.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="780.8" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.compareTo (13 samples, 0.11%)</title><rect x="777.8" y="595.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="780.8" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (13 samples, 0.11%)</title><rect x="777.8" y="579.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="780.8" y="590.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (10 samples, 0.09%)</title><rect x="777.8" y="563.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="780.8" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$UntilIterator.next (425 samples, 3.72%)</title><rect x="779.1" y="627.0" width="43.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="782.1" y="638.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$UntilIterator.next (425 samples, 3.72%)</title><rect x="779.1" y="611.0" width="43.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="782.1" y="622.0">ru/m..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (406 samples, 3.55%)</title><rect x="779.1" y="595.0" width="41.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="782.1" y="606.0">com..</text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (406 samples, 3.55%)</title><rect x="779.1" y="579.0" width="41.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="782.1" y="590.0">com..</text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (406 samples, 3.55%)</title><rect x="779.1" y="563.0" width="41.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="782.1" y="574.0">com..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (406 samples, 3.55%)</title><rect x="779.1" y="547.0" width="41.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="782.1" y="558.0">com..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (393 samples, 3.44%)</title><rect x="780.4" y="531.0" width="40.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="783.4" y="542.0">ru/..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (354 samples, 3.10%)</title><rect x="781.5" y="515.0" width="36.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="784.5" y="526.0">com..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (5 samples, 0.04%)</title><rect x="781.5" y="499.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="784.5" y="510.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (182 samples, 1.59%)</title><rect x="782.0" y="499.0" width="18.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="785.0" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (182 samples, 1.59%)</title><rect x="782.0" y="483.0" width="18.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="785.0" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (182 samples, 1.59%)</title><rect x="782.0" y="467.0" width="18.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="785.0" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (174 samples, 1.52%)</title><rect x="782.8" y="451.0" width="18.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="785.8" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (174 samples, 1.52%)</title><rect x="782.8" y="435.0" width="18.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="785.8" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (5 samples, 0.04%)</title><rect x="783.7" y="419.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="786.7" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/123226378.compare (161 samples, 1.41%)</title><rect x="784.2" y="419.0" width="16.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="787.2" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (161 samples, 1.41%)</title><rect x="784.2" y="403.0" width="16.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="787.2" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (161 samples, 1.41%)</title><rect x="784.2" y="387.0" width="16.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="787.2" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (161 samples, 1.41%)</title><rect x="784.2" y="371.0" width="16.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="787.2" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (161 samples, 1.41%)</title><rect x="784.2" y="355.0" width="16.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="787.2" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (161 samples, 1.41%)</title><rect x="784.2" y="339.0" width="16.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="787.2" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$67/1497891062.compare (153 samples, 1.34%)</title><rect x="785.0" y="323.0" width="15.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="788.0" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (151 samples, 1.32%)</title><rect x="785.2" y="307.0" width="15.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="788.2" y="318.0"></text>
</g>
<g>
<title>itable stub (11 samples, 0.10%)</title><rect x="785.4" y="291.0" width="1.1" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="788.4" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (64 samples, 0.56%)</title><rect x="786.5" y="291.0" width="6.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="789.5" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (62 samples, 0.54%)</title><rect x="786.8" y="275.0" width="6.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="789.8" y="286.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (53 samples, 0.46%)</title><rect x="787.2" y="259.0" width="5.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="790.2" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (17 samples, 0.15%)</title><rect x="789.6" y="243.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="792.6" y="254.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (11 samples, 0.10%)</title><rect x="790.3" y="227.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="793.3" y="238.0"></text>
</g>
<g>
<title>jdk/internal/util/ArraysSupport.vectorizedMismatch (5 samples, 0.04%)</title><rect x="791.7" y="243.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="794.7" y="254.0"></text>
</g>
<g>
<title>vtable stub (3 samples, 0.03%)</title><rect x="792.3" y="243.0" width="0.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="795.3" y="254.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (3 samples, 0.03%)</title><rect x="792.6" y="259.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="795.6" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$66/474651931.apply (74 samples, 0.65%)</title><rect x="793.2" y="291.0" width="7.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="796.2" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (74 samples, 0.65%)</title><rect x="793.2" y="275.0" width="7.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="796.2" y="286.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (53 samples, 0.46%)</title><rect x="793.2" y="259.0" width="5.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="796.2" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (53 samples, 0.46%)</title><rect x="793.2" y="243.0" width="5.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="796.2" y="254.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (53 samples, 0.46%)</title><rect x="793.2" y="227.0" width="5.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="796.2" y="238.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (53 samples, 0.46%)</title><rect x="793.2" y="211.0" width="5.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="796.2" y="222.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (53 samples, 0.46%)</title><rect x="793.2" y="195.0" width="5.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="796.2" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (53 samples, 0.46%)</title><rect x="793.2" y="179.0" width="5.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="796.2" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (53 samples, 0.46%)</title><rect x="793.2" y="163.0" width="5.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="796.2" y="174.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (34 samples, 0.30%)</title><rect x="794.6" y="147.0" width="3.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="797.6" y="158.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (18 samples, 0.16%)</title><rect x="795.7" y="131.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="798.7" y="142.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (8 samples, 0.07%)</title><rect x="796.8" y="115.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="799.8" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (8 samples, 0.07%)</title><rect x="796.8" y="99.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="799.8" y="110.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (8 samples, 0.07%)</title><rect x="796.8" y="83.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="799.8" y="94.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (5 samples, 0.04%)</title><rect x="797.6" y="131.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="800.6" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteOrder.nativeOrder (5 samples, 0.04%)</title><rect x="798.1" y="147.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="801.1" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (21 samples, 0.18%)</title><rect x="798.6" y="259.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="801.6" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (16 samples, 0.14%)</title><rect x="799.1" y="243.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="802.1" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (16 samples, 0.14%)</title><rect x="799.1" y="227.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="802.1" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (16 samples, 0.14%)</title><rect x="799.1" y="211.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="802.1" y="222.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (16 samples, 0.14%)</title><rect x="799.1" y="195.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="802.1" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (16 samples, 0.14%)</title><rect x="799.1" y="179.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="802.1" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (16 samples, 0.14%)</title><rect x="799.1" y="163.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="802.1" y="174.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (167 samples, 1.46%)</title><rect x="800.8" y="499.0" width="17.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="803.8" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (167 samples, 1.46%)</title><rect x="800.8" y="483.0" width="17.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="803.8" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (167 samples, 1.46%)</title><rect x="800.8" y="467.0" width="17.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="803.8" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (167 samples, 1.46%)</title><rect x="800.8" y="451.0" width="17.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="803.8" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (166 samples, 1.45%)</title><rect x="800.9" y="435.0" width="17.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="803.9" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (166 samples, 1.45%)</title><rect x="800.9" y="419.0" width="17.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="803.9" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (53 samples, 0.46%)</title><rect x="800.9" y="403.0" width="5.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="803.9" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (51 samples, 0.45%)</title><rect x="801.0" y="387.0" width="5.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="804.0" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (50 samples, 0.44%)</title><rect x="801.1" y="371.0" width="5.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="804.1" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (50 samples, 0.44%)</title><rect x="801.1" y="355.0" width="5.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="804.1" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (21 samples, 0.18%)</title><rect x="801.1" y="339.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="804.1" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (10 samples, 0.09%)</title><rect x="801.1" y="323.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="804.1" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (10 samples, 0.09%)</title><rect x="801.1" y="307.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="804.1" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (6 samples, 0.05%)</title><rect x="801.4" y="291.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="804.4" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (6 samples, 0.05%)</title><rect x="801.4" y="275.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="804.4" y="286.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (6 samples, 0.05%)</title><rect x="801.4" y="259.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="804.4" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (6 samples, 0.05%)</title><rect x="801.4" y="243.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="804.4" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (6 samples, 0.05%)</title><rect x="801.4" y="227.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="804.4" y="238.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.04%)</title><rect x="801.6" y="211.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="804.6" y="222.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (11 samples, 0.10%)</title><rect x="802.1" y="323.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="805.1" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (11 samples, 0.10%)</title><rect x="802.1" y="307.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="805.1" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (11 samples, 0.10%)</title><rect x="802.1" y="291.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="805.1" y="302.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (11 samples, 0.10%)</title><rect x="802.1" y="275.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="805.1" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (11 samples, 0.10%)</title><rect x="802.1" y="259.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="805.1" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (11 samples, 0.10%)</title><rect x="802.1" y="243.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="805.1" y="254.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (11 samples, 0.10%)</title><rect x="802.1" y="227.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="805.1" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (9 samples, 0.08%)</title><rect x="803.3" y="339.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="806.3" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (5 samples, 0.04%)</title><rect x="803.3" y="323.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="806.3" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (5 samples, 0.04%)</title><rect x="803.3" y="307.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="806.3" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (4 samples, 0.04%)</title><rect x="803.4" y="291.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="806.4" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (4 samples, 0.04%)</title><rect x="803.4" y="275.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="806.4" y="286.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (4 samples, 0.04%)</title><rect x="803.4" y="259.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="806.4" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.04%)</title><rect x="803.4" y="243.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="806.4" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.04%)</title><rect x="803.4" y="227.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="806.4" y="238.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.04%)</title><rect x="803.4" y="211.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="806.4" y="222.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (4 samples, 0.04%)</title><rect x="803.4" y="195.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="806.4" y="206.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (4 samples, 0.04%)</title><rect x="803.4" y="179.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="806.4" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (4 samples, 0.04%)</title><rect x="803.8" y="323.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="806.8" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (4 samples, 0.04%)</title><rect x="803.8" y="307.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="806.8" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (4 samples, 0.04%)</title><rect x="803.8" y="291.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="806.8" y="302.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (4 samples, 0.04%)</title><rect x="803.8" y="275.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="806.8" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.04%)</title><rect x="803.8" y="259.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="806.8" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.04%)</title><rect x="803.8" y="243.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="806.8" y="254.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.04%)</title><rect x="803.8" y="227.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="806.8" y="238.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (4 samples, 0.04%)</title><rect x="803.8" y="211.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="806.8" y="222.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (4 samples, 0.04%)</title><rect x="803.8" y="195.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="806.8" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.04%)</title><rect x="803.8" y="179.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="806.8" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.timestampAt (9 samples, 0.08%)</title><rect x="804.2" y="339.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="807.2" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (9 samples, 0.08%)</title><rect x="804.2" y="323.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="807.2" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (9 samples, 0.08%)</title><rect x="804.2" y="307.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="807.2" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (9 samples, 0.08%)</title><rect x="804.2" y="291.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="807.2" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (9 samples, 0.08%)</title><rect x="804.2" y="275.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="807.2" y="286.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (9 samples, 0.08%)</title><rect x="804.2" y="259.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="807.2" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (9 samples, 0.08%)</title><rect x="804.2" y="243.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="807.2" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (9 samples, 0.08%)</title><rect x="804.2" y="227.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="807.2" y="238.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (8 samples, 0.07%)</title><rect x="804.3" y="211.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="807.3" y="222.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (4 samples, 0.04%)</title><rect x="804.7" y="195.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="807.7" y="206.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (4 samples, 0.04%)</title><rect x="804.7" y="179.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="807.7" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.04%)</title><rect x="804.7" y="163.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="807.7" y="174.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (4 samples, 0.04%)</title><rect x="804.7" y="147.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="807.7" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.valueAt (11 samples, 0.10%)</title><rect x="805.1" y="339.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="808.1" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (5 samples, 0.04%)</title><rect x="805.1" y="323.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="808.1" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (5 samples, 0.04%)</title><rect x="805.1" y="307.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="808.1" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (5 samples, 0.04%)</title><rect x="805.1" y="291.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="808.1" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (5 samples, 0.04%)</title><rect x="805.1" y="275.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="808.1" y="286.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (5 samples, 0.04%)</title><rect x="805.1" y="259.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="808.1" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 0.04%)</title><rect x="805.1" y="243.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="808.1" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 0.04%)</title><rect x="805.1" y="227.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="808.1" y="238.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (6 samples, 0.05%)</title><rect x="805.7" y="323.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="808.7" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (6 samples, 0.05%)</title><rect x="805.7" y="307.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="808.7" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (6 samples, 0.05%)</title><rect x="805.7" y="291.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="808.7" y="302.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (6 samples, 0.05%)</title><rect x="805.7" y="275.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="808.7" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (6 samples, 0.05%)</title><rect x="805.7" y="259.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="808.7" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (6 samples, 0.05%)</title><rect x="805.7" y="243.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="808.7" y="254.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (6 samples, 0.05%)</title><rect x="805.7" y="227.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="808.7" y="238.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (3 samples, 0.03%)</title><rect x="806.0" y="211.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="809.0" y="222.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (3 samples, 0.03%)</title><rect x="806.0" y="195.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="809.0" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (3 samples, 0.03%)</title><rect x="806.0" y="179.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="809.0" y="190.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (3 samples, 0.03%)</title><rect x="806.0" y="163.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="809.0" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/123226378.compare (113 samples, 0.99%)</title><rect x="806.4" y="403.0" width="11.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="809.4" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (113 samples, 0.99%)</title><rect x="806.4" y="387.0" width="11.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="809.4" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (113 samples, 0.99%)</title><rect x="806.4" y="371.0" width="11.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="809.4" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (113 samples, 0.99%)</title><rect x="806.4" y="355.0" width="11.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="809.4" y="366.0"></text>
</g>
<g>
<title>itable stub (15 samples, 0.13%)</title><rect x="807.6" y="339.0" width="1.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="810.6" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (83 samples, 0.73%)</title><rect x="809.2" y="339.0" width="8.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="812.2" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (83 samples, 0.73%)</title><rect x="809.2" y="323.0" width="8.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="812.2" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$67/1497891062.compare (76 samples, 0.67%)</title><rect x="809.7" y="307.0" width="7.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="812.7" y="318.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (74 samples, 0.65%)</title><rect x="809.9" y="291.0" width="7.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="812.9" y="302.0"></text>
</g>
<g>
<title>itable stub (4 samples, 0.04%)</title><rect x="810.0" y="275.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="813.0" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (29 samples, 0.25%)</title><rect x="810.4" y="275.0" width="3.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="813.4" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (29 samples, 0.25%)</title><rect x="810.4" y="259.0" width="3.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="813.4" y="270.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (23 samples, 0.20%)</title><rect x="810.4" y="243.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="813.4" y="254.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (10 samples, 0.09%)</title><rect x="811.2" y="227.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="814.2" y="238.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (5 samples, 0.04%)</title><rect x="811.7" y="211.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="814.7" y="222.0"></text>
</g>
<g>
<title>vtable stub (3 samples, 0.03%)</title><rect x="812.5" y="227.0" width="0.3" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="815.5" y="238.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (5 samples, 0.04%)</title><rect x="812.8" y="243.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="815.8" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$66/474651931.apply (40 samples, 0.35%)</title><rect x="813.4" y="275.0" width="4.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="816.4" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (40 samples, 0.35%)</title><rect x="813.4" y="259.0" width="4.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="816.4" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (31 samples, 0.27%)</title><rect x="813.4" y="243.0" width="3.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="816.4" y="254.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (31 samples, 0.27%)</title><rect x="813.4" y="227.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="816.4" y="238.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (31 samples, 0.27%)</title><rect x="813.4" y="211.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="816.4" y="222.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (31 samples, 0.27%)</title><rect x="813.4" y="195.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="816.4" y="206.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (31 samples, 0.27%)</title><rect x="813.4" y="179.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="816.4" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (31 samples, 0.27%)</title><rect x="813.4" y="163.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="816.4" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (31 samples, 0.27%)</title><rect x="813.4" y="147.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="816.4" y="158.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (20 samples, 0.18%)</title><rect x="814.3" y="131.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="817.3" y="142.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (4 samples, 0.04%)</title><rect x="815.5" y="115.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="818.5" y="126.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (5 samples, 0.04%)</title><rect x="815.9" y="115.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="818.9" y="126.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (3 samples, 0.03%)</title><rect x="816.1" y="99.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="819.1" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (3 samples, 0.03%)</title><rect x="816.1" y="83.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="819.1" y="94.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (3 samples, 0.03%)</title><rect x="816.1" y="67.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="819.1" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (9 samples, 0.08%)</title><rect x="816.6" y="243.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="819.6" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (5 samples, 0.04%)</title><rect x="817.0" y="227.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="820.0" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (5 samples, 0.04%)</title><rect x="817.0" y="211.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="820.0" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 0.04%)</title><rect x="817.0" y="195.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="820.0" y="206.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (5 samples, 0.04%)</title><rect x="817.0" y="179.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="820.0" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (5 samples, 0.04%)</title><rect x="817.0" y="163.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="820.0" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (5 samples, 0.04%)</title><rect x="817.0" y="147.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="820.0" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.hasNext (3 samples, 0.03%)</title><rect x="817.7" y="339.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="820.7" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.equals (14 samples, 0.12%)</title><rect x="818.0" y="515.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="821.0" y="526.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (12 samples, 0.11%)</title><rect x="818.3" y="499.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="821.3" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$72/878358964.apply (15 samples, 0.13%)</title><rect x="819.5" y="515.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="822.5" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (15 samples, 0.13%)</title><rect x="819.5" y="499.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="822.5" y="510.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (13 samples, 0.11%)</title><rect x="819.5" y="483.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="822.5" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (13 samples, 0.11%)</title><rect x="819.5" y="467.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="822.5" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (13 samples, 0.11%)</title><rect x="819.5" y="451.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="822.5" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (13 samples, 0.11%)</title><rect x="819.5" y="435.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="822.5" y="446.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (13 samples, 0.11%)</title><rect x="819.5" y="419.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="822.5" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (13 samples, 0.11%)</title><rect x="819.5" y="403.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="822.5" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (13 samples, 0.11%)</title><rect x="819.5" y="387.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="822.5" y="398.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (13 samples, 0.11%)</title><rect x="819.5" y="371.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="822.5" y="382.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (4 samples, 0.04%)</title><rect x="820.2" y="355.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="823.2" y="366.0"></text>
</g>
<g>
<title>register_finalizer Runtime1 stub (3 samples, 0.03%)</title><rect x="820.3" y="339.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="823.3" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (19 samples, 0.17%)</title><rect x="821.0" y="595.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="824.0" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.next (4 samples, 0.04%)</title><rect x="821.0" y="579.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="824.0" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (4 samples, 0.04%)</title><rect x="821.0" y="563.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="824.0" y="574.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (4 samples, 0.04%)</title><rect x="821.0" y="547.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="824.0" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (4 samples, 0.04%)</title><rect x="821.0" y="531.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="824.0" y="542.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (15 samples, 0.13%)</title><rect x="821.5" y="579.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="824.5" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao$$Lambda$80/527983093.apply (15 samples, 0.13%)</title><rect x="821.5" y="563.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="824.5" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.lambda$iterator$0 (15 samples, 0.13%)</title><rect x="821.5" y="547.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="824.5" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (7 samples, 0.06%)</title><rect x="821.5" y="531.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="824.5" y="542.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (3 samples, 0.03%)</title><rect x="821.5" y="515.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="824.5" y="526.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (3 samples, 0.03%)</title><rect x="821.5" y="499.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="824.5" y="510.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (3 samples, 0.03%)</title><rect x="821.5" y="483.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="824.5" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (3 samples, 0.03%)</title><rect x="821.5" y="467.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="824.5" y="478.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (3 samples, 0.03%)</title><rect x="821.5" y="451.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="824.5" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (4 samples, 0.04%)</title><rect x="821.8" y="515.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="824.8" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (4 samples, 0.04%)</title><rect x="821.8" y="499.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="824.8" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.04%)</title><rect x="821.8" y="483.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="824.8" y="494.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.04%)</title><rect x="821.8" y="467.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="824.8" y="478.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.04%)</title><rect x="821.8" y="451.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="824.8" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Value.getData (8 samples, 0.07%)</title><rect x="822.2" y="531.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="825.2" y="542.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (6 samples, 0.05%)</title><rect x="822.2" y="515.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="825.2" y="526.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (6 samples, 0.05%)</title><rect x="822.2" y="499.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="825.2" y="510.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (6 samples, 0.05%)</title><rect x="822.2" y="483.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="825.2" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (6 samples, 0.05%)</title><rect x="822.2" y="467.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="825.2" y="478.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (6 samples, 0.05%)</title><rect x="822.2" y="451.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="825.2" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.04%)</title><rect x="822.4" y="435.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="825.4" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/StorageSession.toByteArray (21 samples, 0.18%)</title><rect x="823.0" y="627.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="826.0" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (17 samples, 0.15%)</title><rect x="823.3" y="611.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="826.3" y="622.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (15 samples, 0.13%)</title><rect x="823.3" y="595.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="826.3" y="606.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (10 samples, 0.09%)</title><rect x="823.8" y="579.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="826.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (10 samples, 0.09%)</title><rect x="823.8" y="563.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="826.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (9 samples, 0.08%)</title><rect x="823.8" y="547.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="826.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitiveArray (7 samples, 0.06%)</title><rect x="824.0" y="531.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="827.0" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (5 samples, 0.04%)</title><rect x="825.2" y="723.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="828.2" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (3 samples, 0.03%)</title><rect x="825.4" y="707.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="828.4" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (57 samples, 0.50%)</title><rect x="825.8" y="739.0" width="5.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="828.8" y="750.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (57 samples, 0.50%)</title><rect x="825.8" y="723.0" width="5.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="828.8" y="734.0"></text>
</g>
<g>
<title>__libc_recv (55 samples, 0.48%)</title><rect x="825.9" y="707.0" width="5.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="828.9" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (44 samples, 0.39%)</title><rect x="827.0" y="691.0" width="4.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="830.0" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (44 samples, 0.39%)</title><rect x="827.0" y="675.0" width="4.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="830.0" y="686.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (40 samples, 0.35%)</title><rect x="827.4" y="659.0" width="4.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="830.4" y="670.0"></text>
</g>
<g>
<title>__sys_recvfrom (40 samples, 0.35%)</title><rect x="827.4" y="643.0" width="4.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="830.4" y="654.0"></text>
</g>
<g>
<title>inet_recvmsg (32 samples, 0.28%)</title><rect x="827.4" y="627.0" width="3.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="830.4" y="638.0"></text>
</g>
<g>
<title>tcp_recvmsg (32 samples, 0.28%)</title><rect x="827.4" y="611.0" width="3.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="830.4" y="622.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (14 samples, 0.12%)</title><rect x="828.3" y="595.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="831.3" y="606.0"></text>
</g>
<g>
<title>__ip_queue_xmit (13 samples, 0.11%)</title><rect x="828.4" y="579.0" width="1.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="831.4" y="590.0"></text>
</g>
<g>
<title>ip_local_out (6 samples, 0.05%)</title><rect x="828.4" y="563.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="831.4" y="574.0"></text>
</g>
<g>
<title>__ip_local_out (6 samples, 0.05%)</title><rect x="828.4" y="547.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="831.4" y="558.0"></text>
</g>
<g>
<title>nf_hook_slow (5 samples, 0.04%)</title><rect x="828.5" y="531.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="831.5" y="542.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (4 samples, 0.04%)</title><rect x="828.6" y="515.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="831.6" y="526.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get	[nf_conntrack] (3 samples, 0.03%)</title><rect x="828.6" y="499.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="831.6" y="510.0"></text>
</g>
<g>
<title>ip_output (7 samples, 0.06%)</title><rect x="829.0" y="563.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="832.0" y="574.0"></text>
</g>
<g>
<title>ip_finish_output2 (7 samples, 0.06%)</title><rect x="829.0" y="547.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="832.0" y="558.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (5 samples, 0.04%)</title><rect x="829.2" y="531.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="832.2" y="542.0"></text>
</g>
<g>
<title>do_softirq.part.0 (5 samples, 0.04%)</title><rect x="829.2" y="515.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="832.2" y="526.0"></text>
</g>
<g>
<title>do_softirq_own_stack (5 samples, 0.04%)</title><rect x="829.2" y="499.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="832.2" y="510.0"></text>
</g>
<g>
<title>__softirqentry_text_start (5 samples, 0.04%)</title><rect x="829.2" y="483.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="832.2" y="494.0"></text>
</g>
<g>
<title>net_rx_action (5 samples, 0.04%)</title><rect x="829.2" y="467.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="832.2" y="478.0"></text>
</g>
<g>
<title>process_backlog (5 samples, 0.04%)</title><rect x="829.2" y="451.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="832.2" y="462.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (5 samples, 0.04%)</title><rect x="829.2" y="435.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="832.2" y="446.0"></text>
</g>
<g>
<title>ip_rcv (5 samples, 0.04%)</title><rect x="829.2" y="419.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="832.2" y="430.0"></text>
</g>
<g>
<title>ip_local_deliver (3 samples, 0.03%)</title><rect x="829.2" y="403.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="832.2" y="414.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (3 samples, 0.03%)</title><rect x="829.2" y="387.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="832.2" y="398.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (3 samples, 0.03%)</title><rect x="829.2" y="371.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="832.2" y="382.0"></text>
</g>
<g>
<title>tcp_v4_rcv (3 samples, 0.03%)</title><rect x="829.2" y="355.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="832.2" y="366.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (3 samples, 0.03%)</title><rect x="829.2" y="339.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="832.2" y="350.0"></text>
</g>
<g>
<title>tcp_rcv_established (3 samples, 0.03%)</title><rect x="829.2" y="323.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="832.2" y="334.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (3 samples, 0.03%)</title><rect x="830.3" y="595.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="833.3" y="606.0"></text>
</g>
<g>
<title>sockfd_lookup_light (6 samples, 0.05%)</title><rect x="831.0" y="627.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="834.0" y="638.0"></text>
</g>
<g>
<title>__fget_light (6 samples, 0.05%)</title><rect x="831.0" y="611.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="834.0" y="622.0"></text>
</g>
<g>
<title>__fget (6 samples, 0.05%)</title><rect x="831.0" y="595.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="834.0" y="606.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (3 samples, 0.03%)</title><rect x="831.7" y="755.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="834.7" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/StorageSession.processWrite (11 samples, 0.10%)</title><rect x="832.0" y="755.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="835.0" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/StorageSession.next (11 samples, 0.10%)</title><rect x="832.0" y="739.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="835.0" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (5 samples, 0.04%)</title><rect x="832.0" y="723.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="835.0" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (5 samples, 0.04%)</title><rect x="832.0" y="707.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="835.0" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (5 samples, 0.04%)</title><rect x="832.0" y="691.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="835.0" y="702.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (5 samples, 0.04%)</title><rect x="832.0" y="675.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="835.0" y="686.0"></text>
</g>
<g>
<title>.annobin_send.c (5 samples, 0.04%)</title><rect x="832.0" y="659.0" width="0.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="835.0" y="670.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.04%)</title><rect x="832.1" y="643.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="835.1" y="654.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.04%)</title><rect x="832.1" y="627.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="835.1" y="638.0"></text>
</g>
<g>
<title>__x64_sys_sendto (4 samples, 0.04%)</title><rect x="832.1" y="611.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="835.1" y="622.0"></text>
</g>
<g>
<title>__sys_sendto (4 samples, 0.04%)</title><rect x="832.1" y="595.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="835.1" y="606.0"></text>
</g>
<g>
<title>sock_sendmsg (4 samples, 0.04%)</title><rect x="832.1" y="579.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="835.1" y="590.0"></text>
</g>
<g>
<title>tcp_sendmsg (4 samples, 0.04%)</title><rect x="832.1" y="563.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="835.1" y="574.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (4 samples, 0.04%)</title><rect x="832.1" y="547.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="835.1" y="558.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (4 samples, 0.04%)</title><rect x="832.1" y="531.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="835.1" y="542.0"></text>
</g>
<g>
<title>tcp_write_xmit (4 samples, 0.04%)</title><rect x="832.1" y="515.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="835.1" y="526.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (4 samples, 0.04%)</title><rect x="832.1" y="499.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="835.1" y="510.0"></text>
</g>
<g>
<title>__ip_queue_xmit (4 samples, 0.04%)</title><rect x="832.1" y="483.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="835.1" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$UntilIterator.next (6 samples, 0.05%)</title><rect x="832.5" y="723.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="835.5" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$UntilIterator.next (6 samples, 0.05%)</title><rect x="832.5" y="707.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="835.5" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (6 samples, 0.05%)</title><rect x="832.5" y="691.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="835.5" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (6 samples, 0.05%)</title><rect x="832.5" y="675.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="835.5" y="686.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (6 samples, 0.05%)</title><rect x="832.5" y="659.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="835.5" y="670.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (6 samples, 0.05%)</title><rect x="832.5" y="643.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="835.5" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (6 samples, 0.05%)</title><rect x="832.5" y="627.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="835.5" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (4 samples, 0.04%)</title><rect x="832.6" y="611.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="835.6" y="622.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (3 samples, 0.03%)</title><rect x="832.6" y="595.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="835.6" y="606.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (3 samples, 0.03%)</title><rect x="832.6" y="579.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="835.6" y="590.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (3 samples, 0.03%)</title><rect x="832.6" y="563.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="835.6" y="574.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (3 samples, 0.03%)</title><rect x="832.6" y="547.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="835.6" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (3 samples, 0.03%)</title><rect x="832.6" y="531.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="835.6" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/123226378.compare (3 samples, 0.03%)</title><rect x="832.6" y="515.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="835.6" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (3 samples, 0.03%)</title><rect x="832.6" y="499.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="835.6" y="510.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (3 samples, 0.03%)</title><rect x="832.6" y="483.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="835.6" y="494.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (3 samples, 0.03%)</title><rect x="832.6" y="467.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="835.6" y="478.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (3 samples, 0.03%)</title><rect x="832.6" y="451.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="835.6" y="462.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (3 samples, 0.03%)</title><rect x="832.6" y="435.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="835.6" y="446.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$67/1497891062.compare (3 samples, 0.03%)</title><rect x="832.6" y="419.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="835.6" y="430.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (3 samples, 0.03%)</title><rect x="832.6" y="403.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="835.6" y="414.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=25373] (2,738 samples, 23.97%)</title><rect x="833.1" y="803.0" width="282.8" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="836.1" y="814.0">[NIO Selector #3 tid=25373]</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (9 samples, 0.08%)</title><rect x="833.3" y="787.0" width="1.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="836.3" y="798.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (8 samples, 0.07%)</title><rect x="833.3" y="771.0" width="0.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="836.3" y="782.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (8 samples, 0.07%)</title><rect x="833.3" y="755.0" width="0.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="836.3" y="766.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (7 samples, 0.06%)</title><rect x="833.3" y="739.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="836.3" y="750.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (7 samples, 0.06%)</title><rect x="833.3" y="723.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="836.3" y="734.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (4 samples, 0.04%)</title><rect x="833.4" y="707.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="836.4" y="718.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (4 samples, 0.04%)</title><rect x="833.4" y="691.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="836.4" y="702.0"></text>
</g>
<g>
<title>[unknown_Java] (18 samples, 0.16%)</title><rect x="834.6" y="787.0" width="1.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="837.6" y="798.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (2,706 samples, 23.69%)</title><rect x="836.4" y="787.0" width="279.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="839.4" y="798.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (6 samples, 0.05%)</title><rect x="836.6" y="771.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="839.6" y="782.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (6 samples, 0.05%)</title><rect x="836.6" y="755.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="839.6" y="766.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (4 samples, 0.04%)</title><rect x="836.8" y="739.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="839.8" y="750.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (29 samples, 0.25%)</title><rect x="837.3" y="771.0" width="3.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="840.3" y="782.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (28 samples, 0.25%)</title><rect x="837.4" y="755.0" width="2.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="840.4" y="766.0"></text>
</g>
<g>
<title>.annobin_epoll_wait.c (25 samples, 0.22%)</title><rect x="837.4" y="739.0" width="2.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="840.4" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (24 samples, 0.21%)</title><rect x="837.5" y="723.0" width="2.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="840.5" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (24 samples, 0.21%)</title><rect x="837.5" y="707.0" width="2.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="840.5" y="718.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (23 samples, 0.20%)</title><rect x="837.6" y="691.0" width="2.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="840.6" y="702.0"></text>
</g>
<g>
<title>do_epoll_wait (23 samples, 0.20%)</title><rect x="837.6" y="675.0" width="2.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="840.6" y="686.0"></text>
</g>
<g>
<title>ep_poll (22 samples, 0.19%)</title><rect x="837.7" y="659.0" width="2.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="840.7" y="670.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (18 samples, 0.16%)</title><rect x="837.8" y="643.0" width="1.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="840.8" y="654.0"></text>
</g>
<g>
<title>ep_send_events_proc (14 samples, 0.12%)</title><rect x="838.2" y="627.0" width="1.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="841.2" y="638.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (12 samples, 0.11%)</title><rect x="838.4" y="611.0" width="1.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="841.4" y="622.0"></text>
</g>
<g>
<title>sock_poll (9 samples, 0.08%)</title><rect x="838.7" y="595.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="841.7" y="606.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (3 samples, 0.03%)</title><rect x="839.6" y="643.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="842.6" y="654.0"></text>
</g>
<g>
<title>schedule (3 samples, 0.03%)</title><rect x="839.6" y="627.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="842.6" y="638.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (2,669 samples, 23.36%)</title><rect x="840.3" y="771.0" width="275.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="843.3" y="782.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (2,649 samples, 23.19%)</title><rect x="840.4" y="755.0" width="273.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="843.4" y="766.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (2,580 samples, 22.58%)</title><rect x="840.7" y="739.0" width="266.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="843.7" y="750.0">one/nio/http/HttpSession.processHttp..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (2,571 samples, 22.51%)</title><rect x="841.0" y="723.0" width="265.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="844.0" y="734.0">one/nio/http/HttpSession.handlePars..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (2,570 samples, 22.50%)</title><rect x="841.1" y="707.0" width="265.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="844.1" y="718.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler2_entities.handleRequest (2,570 samples, 22.50%)</title><rect x="841.1" y="691.0" width="265.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="844.1" y="702.0">RequestHandler2_entities.handleRequ..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (11 samples, 0.10%)</title><rect x="841.1" y="675.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="844.1" y="686.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.03%)</title><rect x="841.5" y="659.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="844.5" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.03%)</title><rect x="841.5" y="643.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="844.5" y="654.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (3 samples, 0.03%)</title><rect x="841.9" y="659.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="844.9" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.entities (2,559 samples, 22.40%)</title><rect x="842.2" y="675.0" width="264.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="845.2" y="686.0">ru/mail/polis/service/shakhmin/Asyn..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.range (764 samples, 6.69%)</title><rect x="842.2" y="659.0" width="78.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="845.2" y="670.0">ru/mail/p..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (3 samples, 0.03%)</title><rect x="842.5" y="643.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="845.5" y="654.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (3 samples, 0.03%)</title><rect x="842.5" y="627.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="845.5" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.until (38 samples, 0.33%)</title><rect x="842.9" y="643.0" width="4.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="845.9" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$UntilIterator.&lt;init&gt; (38 samples, 0.33%)</title><rect x="842.9" y="627.0" width="4.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="845.9" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (35 samples, 0.31%)</title><rect x="842.9" y="611.0" width="3.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="845.9" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (35 samples, 0.31%)</title><rect x="842.9" y="595.0" width="3.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="845.9" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (35 samples, 0.31%)</title><rect x="842.9" y="579.0" width="3.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="845.9" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (35 samples, 0.31%)</title><rect x="842.9" y="563.0" width="3.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="845.9" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (34 samples, 0.30%)</title><rect x="843.0" y="547.0" width="3.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="846.0" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (32 samples, 0.28%)</title><rect x="843.0" y="531.0" width="3.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="846.0" y="542.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (19 samples, 0.17%)</title><rect x="843.1" y="515.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="846.1" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (19 samples, 0.17%)</title><rect x="843.1" y="499.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="846.1" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (19 samples, 0.17%)</title><rect x="843.1" y="483.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="846.1" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (18 samples, 0.16%)</title><rect x="843.3" y="467.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="846.3" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (18 samples, 0.16%)</title><rect x="843.3" y="451.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="846.3" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/123226378.compare (16 samples, 0.14%)</title><rect x="843.5" y="435.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="846.5" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (16 samples, 0.14%)</title><rect x="843.5" y="419.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="846.5" y="430.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (16 samples, 0.14%)</title><rect x="843.5" y="403.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="846.5" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (16 samples, 0.14%)</title><rect x="843.5" y="387.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="846.5" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (16 samples, 0.14%)</title><rect x="843.5" y="371.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="846.5" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (16 samples, 0.14%)</title><rect x="843.5" y="355.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="846.5" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$67/1497891062.compare (14 samples, 0.12%)</title><rect x="843.7" y="339.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="846.7" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (14 samples, 0.12%)</title><rect x="843.7" y="323.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="846.7" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (9 samples, 0.08%)</title><rect x="843.8" y="307.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="846.8" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (9 samples, 0.08%)</title><rect x="843.8" y="291.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="846.8" y="302.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (4 samples, 0.04%)</title><rect x="844.0" y="275.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="847.0" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$66/474651931.apply (4 samples, 0.04%)</title><rect x="844.7" y="307.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="847.7" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (4 samples, 0.04%)</title><rect x="844.7" y="291.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="847.7" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (12 samples, 0.11%)</title><rect x="845.1" y="515.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="848.1" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (12 samples, 0.11%)</title><rect x="845.1" y="499.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="848.1" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (12 samples, 0.11%)</title><rect x="845.1" y="483.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="848.1" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (12 samples, 0.11%)</title><rect x="845.1" y="467.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="848.1" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (12 samples, 0.11%)</title><rect x="845.1" y="451.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="848.1" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (12 samples, 0.11%)</title><rect x="845.1" y="435.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="848.1" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (4 samples, 0.04%)</title><rect x="845.1" y="419.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="848.1" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (4 samples, 0.04%)</title><rect x="845.1" y="403.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="848.1" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (4 samples, 0.04%)</title><rect x="845.1" y="387.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="848.1" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (4 samples, 0.04%)</title><rect x="845.1" y="371.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="848.1" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/123226378.compare (8 samples, 0.07%)</title><rect x="845.5" y="419.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="848.5" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (8 samples, 0.07%)</title><rect x="845.5" y="403.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="848.5" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (8 samples, 0.07%)</title><rect x="845.5" y="387.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="848.5" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (8 samples, 0.07%)</title><rect x="845.5" y="371.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="848.5" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (7 samples, 0.06%)</title><rect x="845.6" y="355.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="848.6" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (7 samples, 0.06%)</title><rect x="845.6" y="339.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="848.6" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$67/1497891062.compare (7 samples, 0.06%)</title><rect x="845.6" y="323.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="848.6" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (7 samples, 0.06%)</title><rect x="845.6" y="307.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="848.6" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 0.04%)</title><rect x="845.6" y="291.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="848.6" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 0.04%)</title><rect x="845.6" y="275.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="848.6" y="286.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (3 samples, 0.03%)</title><rect x="845.7" y="259.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="848.7" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$66/474651931.apply (3 samples, 0.03%)</title><rect x="846.0" y="291.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="849.0" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (3 samples, 0.03%)</title><rect x="846.0" y="275.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="849.0" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (3 samples, 0.03%)</title><rect x="846.6" y="611.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="849.6" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.iterator (719 samples, 6.29%)</title><rect x="846.9" y="643.0" width="74.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="849.9" y="654.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.rowsIterator (719 samples, 6.29%)</title><rect x="846.9" y="627.0" width="74.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="849.9" y="638.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (622 samples, 5.44%)</title><rect x="847.0" y="611.0" width="64.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="850.0" y="622.0">ru/mail..</text>
</g>
<g>
<title>java/util/ArrayList.add (6 samples, 0.05%)</title><rect x="847.2" y="595.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="850.2" y="606.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (6 samples, 0.05%)</title><rect x="847.2" y="579.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="850.2" y="590.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (6 samples, 0.05%)</title><rect x="847.2" y="563.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="850.2" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (6 samples, 0.05%)</title><rect x="847.2" y="547.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="850.2" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.next (34 samples, 0.30%)</title><rect x="847.8" y="595.0" width="3.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="850.8" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (33 samples, 0.29%)</title><rect x="847.9" y="579.0" width="3.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="850.9" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.descend (32 samples, 0.28%)</title><rect x="848.0" y="563.0" width="3.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="851.0" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (29 samples, 0.25%)</title><rect x="848.3" y="547.0" width="3.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="851.3" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (7 samples, 0.06%)</title><rect x="849.6" y="531.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="852.6" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 0.04%)</title><rect x="849.9" y="515.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="852.9" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 0.04%)</title><rect x="849.9" y="499.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="852.9" y="510.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (4 samples, 0.04%)</title><rect x="849.9" y="483.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="852.9" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (4 samples, 0.04%)</title><rect x="849.9" y="467.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="852.9" y="478.0"></text>
</g>
<g>
<title>java/lang/Long.compareTo (3 samples, 0.03%)</title><rect x="850.0" y="451.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="853.0" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (10 samples, 0.09%)</title><rect x="850.3" y="531.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="853.3" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (7 samples, 0.06%)</title><rect x="850.6" y="515.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="853.6" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 0.04%)</title><rect x="850.9" y="499.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="853.9" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 0.04%)</title><rect x="850.9" y="483.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="853.9" y="494.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (4 samples, 0.04%)</title><rect x="850.9" y="467.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="853.9" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (4 samples, 0.04%)</title><rect x="851.3" y="595.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="854.3" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (4 samples, 0.04%)</title><rect x="851.3" y="579.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="854.3" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.iterator (38 samples, 0.33%)</title><rect x="851.8" y="595.0" width="3.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="854.8" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (36 samples, 0.32%)</title><rect x="851.8" y="579.0" width="3.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="854.8" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (3 samples, 0.03%)</title><rect x="852.1" y="563.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="855.1" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (3 samples, 0.03%)</title><rect x="852.1" y="547.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="855.1" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (3 samples, 0.03%)</title><rect x="852.1" y="531.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="855.1" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.hiNode (3 samples, 0.03%)</title><rect x="852.1" y="515.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="855.1" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findLast (3 samples, 0.03%)</title><rect x="852.1" y="499.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="855.1" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.iterator (26 samples, 0.23%)</title><rect x="852.4" y="563.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="855.4" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (26 samples, 0.23%)</title><rect x="852.4" y="547.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="855.4" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (26 samples, 0.23%)</title><rect x="852.4" y="531.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="855.4" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (26 samples, 0.23%)</title><rect x="852.4" y="515.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="855.4" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.inBounds (3 samples, 0.03%)</title><rect x="852.7" y="499.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="855.7" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.tooLow (3 samples, 0.03%)</title><rect x="852.7" y="483.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="855.7" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (21 samples, 0.18%)</title><rect x="853.0" y="499.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="856.0" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (21 samples, 0.18%)</title><rect x="853.0" y="483.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="856.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (21 samples, 0.18%)</title><rect x="853.0" y="467.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="856.0" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (15 samples, 0.13%)</title><rect x="853.6" y="451.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="856.6" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (6 samples, 0.05%)</title><rect x="854.2" y="435.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="857.2" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (6 samples, 0.05%)</title><rect x="854.2" y="419.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="857.2" y="430.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (6 samples, 0.05%)</title><rect x="854.2" y="403.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="857.2" y="414.0"></text>
</g>
<g>
<title>vectorizedMismatch (3 samples, 0.03%)</title><rect x="854.8" y="435.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="857.8" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.iterator (4 samples, 0.04%)</title><rect x="855.1" y="563.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="858.1" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.&lt;init&gt; (4 samples, 0.04%)</title><rect x="855.1" y="547.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="858.1" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.iterator (537 samples, 4.70%)</title><rect x="855.7" y="595.0" width="55.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="858.7" y="606.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.&lt;init&gt; (534 samples, 4.67%)</title><rect x="856.0" y="579.0" width="55.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="859.0" y="590.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.position (532 samples, 4.66%)</title><rect x="856.2" y="563.0" width="54.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="859.2" y="574.0">ru/ma..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (118 samples, 1.03%)</title><rect x="858.1" y="547.0" width="12.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="861.1" y="558.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (93 samples, 0.81%)</title><rect x="859.3" y="531.0" width="9.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="862.3" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.base (4 samples, 0.04%)</title><rect x="863.6" y="515.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="866.6" y="526.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (12 samples, 0.11%)</title><rect x="864.0" y="515.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="867.0" y="526.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (4 samples, 0.04%)</title><rect x="864.8" y="499.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="867.8" y="510.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.base (3 samples, 0.03%)</title><rect x="865.3" y="515.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="868.3" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (13 samples, 0.11%)</title><rect x="865.6" y="515.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="868.6" y="526.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (5 samples, 0.04%)</title><rect x="866.4" y="499.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="869.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/util/ArraysSupport.vectorizedMismatch (12 samples, 0.11%)</title><rect x="866.9" y="515.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="869.9" y="526.0"></text>
</g>
<g>
<title>vtable stub (7 samples, 0.06%)</title><rect x="868.1" y="515.0" width="0.8" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="871.1" y="526.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (10 samples, 0.09%)</title><rect x="868.9" y="531.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="871.9" y="542.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (7 samples, 0.06%)</title><rect x="869.2" y="515.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="872.2" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (172 samples, 1.51%)</title><rect x="870.3" y="547.0" width="17.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="873.3" y="558.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (60 samples, 0.53%)</title><rect x="870.3" y="531.0" width="6.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="873.3" y="542.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (60 samples, 0.53%)</title><rect x="870.3" y="515.0" width="6.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="873.3" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (3 samples, 0.03%)</title><rect x="872.4" y="499.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="875.4" y="510.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (37 samples, 0.32%)</title><rect x="872.7" y="499.0" width="3.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="875.7" y="510.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (37 samples, 0.32%)</title><rect x="872.7" y="483.0" width="3.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="875.7" y="494.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (37 samples, 0.32%)</title><rect x="872.7" y="467.0" width="3.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="875.7" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (37 samples, 0.32%)</title><rect x="872.7" y="451.0" width="3.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="875.7" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (37 samples, 0.32%)</title><rect x="872.7" y="435.0" width="3.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="875.7" y="446.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (37 samples, 0.32%)</title><rect x="872.7" y="419.0" width="3.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="875.7" y="430.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (32 samples, 0.28%)</title><rect x="872.7" y="403.0" width="3.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="875.7" y="414.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (8 samples, 0.07%)</title><rect x="875.0" y="387.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="878.0" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (8 samples, 0.07%)</title><rect x="875.0" y="371.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="878.0" y="382.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (8 samples, 0.07%)</title><rect x="875.0" y="355.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="878.0" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (5 samples, 0.04%)</title><rect x="876.0" y="403.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="879.0" y="414.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (112 samples, 0.98%)</title><rect x="876.5" y="531.0" width="11.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="879.5" y="542.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (112 samples, 0.98%)</title><rect x="876.5" y="515.0" width="11.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="879.5" y="526.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (112 samples, 0.98%)</title><rect x="876.5" y="499.0" width="11.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="879.5" y="510.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (112 samples, 0.98%)</title><rect x="876.5" y="483.0" width="11.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="879.5" y="494.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (112 samples, 0.98%)</title><rect x="876.5" y="467.0" width="11.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="879.5" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (112 samples, 0.98%)</title><rect x="876.5" y="451.0" width="11.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="879.5" y="462.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (112 samples, 0.98%)</title><rect x="876.5" y="435.0" width="11.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="879.5" y="446.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (99 samples, 0.87%)</title><rect x="876.5" y="419.0" width="10.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="879.5" y="430.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (99 samples, 0.87%)</title><rect x="876.5" y="403.0" width="10.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="879.5" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (7 samples, 0.06%)</title><rect x="885.8" y="387.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="888.8" y="398.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (7 samples, 0.06%)</title><rect x="885.8" y="371.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="888.8" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (13 samples, 0.11%)</title><rect x="886.7" y="419.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="889.7" y="430.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (13 samples, 0.11%)</title><rect x="886.7" y="403.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="889.7" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (4 samples, 0.04%)</title><rect x="887.7" y="387.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="890.7" y="398.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (4 samples, 0.04%)</title><rect x="887.7" y="371.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="890.7" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (223 samples, 1.95%)</title><rect x="888.1" y="547.0" width="23.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="891.1" y="558.0">r..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (135 samples, 1.18%)</title><rect x="888.2" y="531.0" width="13.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="891.2" y="542.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (135 samples, 1.18%)</title><rect x="888.2" y="515.0" width="13.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="891.2" y="526.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (113 samples, 0.99%)</title><rect x="890.5" y="499.0" width="11.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="893.5" y="510.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (113 samples, 0.99%)</title><rect x="890.5" y="483.0" width="11.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="893.5" y="494.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (113 samples, 0.99%)</title><rect x="890.5" y="467.0" width="11.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="893.5" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (113 samples, 0.99%)</title><rect x="890.5" y="451.0" width="11.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="893.5" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (113 samples, 0.99%)</title><rect x="890.5" y="435.0" width="11.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="893.5" y="446.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (113 samples, 0.99%)</title><rect x="890.5" y="419.0" width="11.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="893.5" y="430.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (102 samples, 0.89%)</title><rect x="890.5" y="403.0" width="10.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="893.5" y="414.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (102 samples, 0.89%)</title><rect x="890.5" y="387.0" width="10.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="893.5" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.04%)</title><rect x="900.5" y="371.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="903.5" y="382.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (4 samples, 0.04%)</title><rect x="900.5" y="355.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="903.5" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (11 samples, 0.10%)</title><rect x="901.0" y="403.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="904.0" y="414.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (11 samples, 0.10%)</title><rect x="901.0" y="387.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="904.0" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (3 samples, 0.03%)</title><rect x="901.3" y="371.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="904.3" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (5 samples, 0.04%)</title><rect x="901.6" y="371.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="904.6" y="382.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (5 samples, 0.04%)</title><rect x="901.6" y="355.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="904.6" y="366.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (87 samples, 0.76%)</title><rect x="902.1" y="531.0" width="9.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="905.1" y="542.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (87 samples, 0.76%)</title><rect x="902.1" y="515.0" width="9.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="905.1" y="526.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (87 samples, 0.76%)</title><rect x="902.1" y="499.0" width="9.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="905.1" y="510.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (87 samples, 0.76%)</title><rect x="902.1" y="483.0" width="9.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="905.1" y="494.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (87 samples, 0.76%)</title><rect x="902.1" y="467.0" width="9.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="905.1" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (87 samples, 0.76%)</title><rect x="902.1" y="451.0" width="9.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="905.1" y="462.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (87 samples, 0.76%)</title><rect x="902.1" y="435.0" width="9.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="905.1" y="446.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (61 samples, 0.53%)</title><rect x="902.1" y="419.0" width="6.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="905.1" y="430.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (61 samples, 0.53%)</title><rect x="902.1" y="403.0" width="6.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="905.1" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (61 samples, 0.53%)</title><rect x="902.1" y="387.0" width="6.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="905.1" y="398.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (11 samples, 0.10%)</title><rect x="907.0" y="371.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="910.0" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (3 samples, 0.03%)</title><rect x="908.1" y="371.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="911.1" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (26 samples, 0.23%)</title><rect x="908.4" y="419.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="911.4" y="430.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (26 samples, 0.23%)</title><rect x="908.4" y="403.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="911.4" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (26 samples, 0.23%)</title><rect x="908.4" y="387.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="911.4" y="398.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (8 samples, 0.07%)</title><rect x="909.9" y="371.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="912.9" y="382.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (4 samples, 0.04%)</title><rect x="910.7" y="371.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="913.7" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.reduceIterators (96 samples, 0.84%)</title><rect x="911.2" y="611.0" width="9.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="914.2" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (75 samples, 0.66%)</title><rect x="911.2" y="595.0" width="7.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="914.2" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (75 samples, 0.66%)</title><rect x="911.2" y="579.0" width="7.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="914.2" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (6 samples, 0.05%)</title><rect x="911.7" y="563.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="914.7" y="574.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (6 samples, 0.05%)</title><rect x="911.7" y="547.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="914.7" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (6 samples, 0.05%)</title><rect x="911.7" y="531.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="914.7" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (6 samples, 0.05%)</title><rect x="911.7" y="515.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="914.7" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (63 samples, 0.55%)</title><rect x="912.4" y="563.0" width="6.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="915.4" y="574.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (63 samples, 0.55%)</title><rect x="912.4" y="547.0" width="6.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="915.4" y="558.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (61 samples, 0.53%)</title><rect x="912.6" y="531.0" width="6.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="915.6" y="542.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (61 samples, 0.53%)</title><rect x="912.6" y="515.0" width="6.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="915.6" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (61 samples, 0.53%)</title><rect x="912.6" y="499.0" width="6.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="915.6" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (61 samples, 0.53%)</title><rect x="912.6" y="483.0" width="6.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="915.6" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (25 samples, 0.22%)</title><rect x="912.6" y="467.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="915.6" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (24 samples, 0.21%)</title><rect x="912.7" y="451.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="915.7" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (24 samples, 0.21%)</title><rect x="912.7" y="435.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="915.7" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (24 samples, 0.21%)</title><rect x="912.7" y="419.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="915.7" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (9 samples, 0.08%)</title><rect x="912.8" y="403.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="915.8" y="414.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (7 samples, 0.06%)</title><rect x="912.8" y="387.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="915.8" y="398.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (7 samples, 0.06%)</title><rect x="912.8" y="371.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="915.8" y="382.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (4 samples, 0.04%)</title><rect x="913.1" y="355.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="916.1" y="366.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (4 samples, 0.04%)</title><rect x="913.1" y="339.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="916.1" y="350.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (4 samples, 0.04%)</title><rect x="913.1" y="323.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="916.1" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.04%)</title><rect x="913.1" y="307.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="916.1" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.04%)</title><rect x="913.1" y="291.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="916.1" y="302.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.04%)</title><rect x="913.1" y="275.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="916.1" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (5 samples, 0.04%)</title><rect x="913.7" y="403.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="916.7" y="414.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (3 samples, 0.03%)</title><rect x="913.9" y="387.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="916.9" y="398.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (3 samples, 0.03%)</title><rect x="913.9" y="371.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="916.9" y="382.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (3 samples, 0.03%)</title><rect x="913.9" y="355.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="916.9" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (3 samples, 0.03%)</title><rect x="913.9" y="339.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="916.9" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.03%)</title><rect x="913.9" y="323.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="916.9" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.03%)</title><rect x="913.9" y="307.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="916.9" y="318.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (3 samples, 0.03%)</title><rect x="913.9" y="291.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="916.9" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.timestampAt (4 samples, 0.04%)</title><rect x="914.2" y="403.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="917.2" y="414.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (4 samples, 0.04%)</title><rect x="914.2" y="387.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="917.2" y="398.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (4 samples, 0.04%)</title><rect x="914.2" y="371.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="917.2" y="382.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (4 samples, 0.04%)</title><rect x="914.2" y="355.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="917.2" y="366.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (4 samples, 0.04%)</title><rect x="914.2" y="339.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="917.2" y="350.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (4 samples, 0.04%)</title><rect x="914.2" y="323.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="917.2" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.04%)</title><rect x="914.2" y="307.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="917.2" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.04%)</title><rect x="914.2" y="291.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="917.2" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.valueAt (5 samples, 0.04%)</title><rect x="914.6" y="403.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="917.6" y="414.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (4 samples, 0.04%)</title><rect x="914.7" y="387.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="917.7" y="398.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (4 samples, 0.04%)</title><rect x="914.7" y="371.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="917.7" y="382.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (4 samples, 0.04%)</title><rect x="914.7" y="355.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="917.7" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (4 samples, 0.04%)</title><rect x="914.7" y="339.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="917.7" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.04%)</title><rect x="914.7" y="323.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="917.7" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.04%)</title><rect x="914.7" y="307.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="917.7" y="318.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.04%)</title><rect x="914.7" y="291.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="917.7" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/123226378.compare (36 samples, 0.32%)</title><rect x="915.1" y="467.0" width="3.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="918.1" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (36 samples, 0.32%)</title><rect x="915.1" y="451.0" width="3.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="918.1" y="462.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (36 samples, 0.32%)</title><rect x="915.1" y="435.0" width="3.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="918.1" y="446.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (36 samples, 0.32%)</title><rect x="915.1" y="419.0" width="3.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="918.1" y="430.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (26 samples, 0.23%)</title><rect x="916.1" y="403.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="919.1" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (26 samples, 0.23%)</title><rect x="916.1" y="387.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="919.1" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$67/1497891062.compare (25 samples, 0.22%)</title><rect x="916.1" y="371.0" width="2.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="919.1" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (25 samples, 0.22%)</title><rect x="916.1" y="355.0" width="2.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="919.1" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (11 samples, 0.10%)</title><rect x="916.2" y="339.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="919.2" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (11 samples, 0.10%)</title><rect x="916.2" y="323.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="919.2" y="334.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (8 samples, 0.07%)</title><rect x="916.4" y="307.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="919.4" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (3 samples, 0.03%)</title><rect x="916.6" y="291.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="919.6" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$66/474651931.apply (12 samples, 0.11%)</title><rect x="917.3" y="339.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="920.3" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (12 samples, 0.11%)</title><rect x="917.3" y="323.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="920.3" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (11 samples, 0.10%)</title><rect x="917.3" y="307.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="920.3" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (11 samples, 0.10%)</title><rect x="917.3" y="291.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="920.3" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (11 samples, 0.10%)</title><rect x="917.3" y="275.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="920.3" y="286.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (11 samples, 0.10%)</title><rect x="917.3" y="259.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="920.3" y="270.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (11 samples, 0.10%)</title><rect x="917.3" y="243.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="920.3" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (11 samples, 0.10%)</title><rect x="917.3" y="227.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="920.3" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (11 samples, 0.10%)</title><rect x="917.3" y="211.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="920.3" y="222.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (7 samples, 0.06%)</title><rect x="917.7" y="195.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="920.7" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (21 samples, 0.18%)</title><rect x="919.0" y="595.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="922.0" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (21 samples, 0.18%)</title><rect x="919.0" y="579.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="922.0" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (20 samples, 0.18%)</title><rect x="919.1" y="563.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="922.1" y="574.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (8 samples, 0.07%)</title><rect x="919.2" y="547.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="922.2" y="558.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (8 samples, 0.07%)</title><rect x="919.2" y="531.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="922.2" y="542.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (8 samples, 0.07%)</title><rect x="919.2" y="515.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="922.2" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (8 samples, 0.07%)</title><rect x="919.2" y="499.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="922.2" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (8 samples, 0.07%)</title><rect x="919.2" y="483.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="922.2" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/123226378.compare (8 samples, 0.07%)</title><rect x="919.2" y="467.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="922.2" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (8 samples, 0.07%)</title><rect x="919.2" y="451.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="922.2" y="462.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (8 samples, 0.07%)</title><rect x="919.2" y="435.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="922.2" y="446.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (8 samples, 0.07%)</title><rect x="919.2" y="419.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="922.2" y="430.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (8 samples, 0.07%)</title><rect x="919.2" y="403.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="922.2" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (8 samples, 0.07%)</title><rect x="919.2" y="387.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="922.2" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$67/1497891062.compare (7 samples, 0.06%)</title><rect x="919.3" y="371.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="922.3" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (7 samples, 0.06%)</title><rect x="919.3" y="355.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="922.3" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (5 samples, 0.04%)</title><rect x="919.3" y="339.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="922.3" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (5 samples, 0.04%)</title><rect x="919.3" y="323.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="922.3" y="334.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (4 samples, 0.04%)</title><rect x="919.3" y="307.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="922.3" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (11 samples, 0.10%)</title><rect x="920.0" y="547.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="923.0" y="558.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (11 samples, 0.10%)</title><rect x="920.0" y="531.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="923.0" y="542.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (11 samples, 0.10%)</title><rect x="920.0" y="515.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="923.0" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (11 samples, 0.10%)</title><rect x="920.0" y="499.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="923.0" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (10 samples, 0.09%)</title><rect x="920.1" y="483.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="923.1" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (10 samples, 0.09%)</title><rect x="920.1" y="467.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="923.1" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (5 samples, 0.04%)</title><rect x="920.1" y="451.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="923.1" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (5 samples, 0.04%)</title><rect x="920.1" y="435.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="923.1" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (5 samples, 0.04%)</title><rect x="920.1" y="419.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="923.1" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (5 samples, 0.04%)</title><rect x="920.1" y="403.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="923.1" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (3 samples, 0.03%)</title><rect x="920.1" y="387.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="923.1" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/123226378.compare (5 samples, 0.04%)</title><rect x="920.6" y="451.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="923.6" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (5 samples, 0.04%)</title><rect x="920.6" y="435.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="923.6" y="446.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (5 samples, 0.04%)</title><rect x="920.6" y="419.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="923.6" y="430.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (5 samples, 0.04%)</title><rect x="920.6" y="403.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="923.6" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (3 samples, 0.03%)</title><rect x="920.8" y="387.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="923.8" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (3 samples, 0.03%)</title><rect x="920.8" y="371.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="923.8" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$67/1497891062.compare (3 samples, 0.03%)</title><rect x="920.8" y="355.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="923.8" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (3 samples, 0.03%)</title><rect x="920.8" y="339.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="923.8" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/StorageSession.stream (1,795 samples, 15.71%)</title><rect x="921.1" y="659.0" width="185.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="924.1" y="670.0">ru/mail/polis/service/sh..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (237 samples, 2.07%)</title><rect x="921.1" y="643.0" width="24.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="924.1" y="654.0">o..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (7 samples, 0.06%)</title><rect x="921.3" y="627.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="924.3" y="638.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (3 samples, 0.03%)</title><rect x="921.8" y="611.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="924.8" y="622.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (3 samples, 0.03%)</title><rect x="921.8" y="595.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="924.8" y="606.0"></text>
</g>
<g>
<title>java/lang/String.charAt (3 samples, 0.03%)</title><rect x="921.8" y="579.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="924.8" y="590.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (228 samples, 2.00%)</title><rect x="922.1" y="627.0" width="23.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="925.1" y="638.0">o..</text>
</g>
<g>
<title>one/nio/net/Session.write (228 samples, 2.00%)</title><rect x="922.1" y="611.0" width="23.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="925.1" y="622.0">o..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (227 samples, 1.99%)</title><rect x="922.2" y="595.0" width="23.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="925.2" y="606.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (227 samples, 1.99%)</title><rect x="922.2" y="579.0" width="23.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="925.2" y="590.0">o..</text>
</g>
<g>
<title>.annobin_send.c (216 samples, 1.89%)</title><rect x="922.2" y="563.0" width="22.3" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="925.2" y="574.0">...</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (203 samples, 1.78%)</title><rect x="923.5" y="547.0" width="21.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="926.5" y="558.0"></text>
</g>
<g>
<title>do_syscall_64 (203 samples, 1.78%)</title><rect x="923.5" y="531.0" width="21.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="926.5" y="542.0"></text>
</g>
<g>
<title>__x64_sys_sendto (200 samples, 1.75%)</title><rect x="923.8" y="515.0" width="20.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="926.8" y="526.0"></text>
</g>
<g>
<title>__sys_sendto (200 samples, 1.75%)</title><rect x="923.8" y="499.0" width="20.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="926.8" y="510.0"></text>
</g>
<g>
<title>sock_sendmsg (196 samples, 1.72%)</title><rect x="924.0" y="483.0" width="20.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="927.0" y="494.0"></text>
</g>
<g>
<title>security_socket_sendmsg (5 samples, 0.04%)</title><rect x="924.0" y="467.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="927.0" y="478.0"></text>
</g>
<g>
<title>sock_has_perm (5 samples, 0.04%)</title><rect x="924.0" y="451.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="927.0" y="462.0"></text>
</g>
<g>
<title>avc_has_perm (4 samples, 0.04%)</title><rect x="924.1" y="435.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="927.1" y="446.0"></text>
</g>
<g>
<title>tcp_sendmsg (191 samples, 1.67%)</title><rect x="924.5" y="467.0" width="19.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="927.5" y="478.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (187 samples, 1.64%)</title><rect x="925.0" y="451.0" width="19.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="928.0" y="462.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (169 samples, 1.48%)</title><rect x="925.5" y="435.0" width="17.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="928.5" y="446.0"></text>
</g>
<g>
<title>tcp_write_xmit (169 samples, 1.48%)</title><rect x="925.5" y="419.0" width="17.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="928.5" y="430.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (161 samples, 1.41%)</title><rect x="925.6" y="403.0" width="16.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="928.6" y="414.0"></text>
</g>
<g>
<title>__ip_queue_xmit (153 samples, 1.34%)</title><rect x="925.9" y="387.0" width="15.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="928.9" y="398.0"></text>
</g>
<g>
<title>ip_local_out (24 samples, 0.21%)</title><rect x="926.1" y="371.0" width="2.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="929.1" y="382.0"></text>
</g>
<g>
<title>__ip_local_out (24 samples, 0.21%)</title><rect x="926.1" y="355.0" width="2.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="929.1" y="366.0"></text>
</g>
<g>
<title>nf_hook_slow (24 samples, 0.21%)</title><rect x="926.1" y="339.0" width="2.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="929.1" y="350.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (6 samples, 0.05%)</title><rect x="926.1" y="323.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="929.1" y="334.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (12 samples, 0.11%)</title><rect x="927.1" y="323.0" width="1.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="930.1" y="334.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get	[nf_conntrack] (5 samples, 0.04%)</title><rect x="927.1" y="307.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="930.1" y="318.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet	[nf_conntrack] (4 samples, 0.04%)</title><rect x="927.8" y="307.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="930.8" y="318.0"></text>
</g>
<g>
<title>ip_output (127 samples, 1.11%)</title><rect x="928.6" y="371.0" width="13.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="931.6" y="382.0"></text>
</g>
<g>
<title>ip_finish_output2 (118 samples, 1.03%)</title><rect x="929.1" y="355.0" width="12.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="932.1" y="366.0"></text>
</g>
<g>
<title>__dev_queue_xmit (10 samples, 0.09%)</title><rect x="929.5" y="339.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="932.5" y="350.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (8 samples, 0.07%)</title><rect x="929.7" y="323.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="932.7" y="334.0"></text>
</g>
<g>
<title>loopback_xmit (8 samples, 0.07%)</title><rect x="929.7" y="307.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="932.7" y="318.0"></text>
</g>
<g>
<title>netif_rx (6 samples, 0.05%)</title><rect x="929.9" y="291.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="932.9" y="302.0"></text>
</g>
<g>
<title>netif_rx_internal (6 samples, 0.05%)</title><rect x="929.9" y="275.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="932.9" y="286.0"></text>
</g>
<g>
<title>enqueue_to_backlog (4 samples, 0.04%)</title><rect x="929.9" y="259.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="932.9" y="270.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (104 samples, 0.91%)</title><rect x="930.5" y="339.0" width="10.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="933.5" y="350.0"></text>
</g>
<g>
<title>do_softirq.part.0 (104 samples, 0.91%)</title><rect x="930.5" y="323.0" width="10.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="933.5" y="334.0"></text>
</g>
<g>
<title>do_softirq_own_stack (104 samples, 0.91%)</title><rect x="930.5" y="307.0" width="10.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="933.5" y="318.0"></text>
</g>
<g>
<title>__softirqentry_text_start (104 samples, 0.91%)</title><rect x="930.5" y="291.0" width="10.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="933.5" y="302.0"></text>
</g>
<g>
<title>net_rx_action (101 samples, 0.88%)</title><rect x="930.8" y="275.0" width="10.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="933.8" y="286.0"></text>
</g>
<g>
<title>process_backlog (99 samples, 0.87%)</title><rect x="931.0" y="259.0" width="10.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="934.0" y="270.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (98 samples, 0.86%)</title><rect x="931.2" y="243.0" width="10.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="934.2" y="254.0"></text>
</g>
<g>
<title>ip_rcv (97 samples, 0.85%)</title><rect x="931.3" y="227.0" width="10.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="934.3" y="238.0"></text>
</g>
<g>
<title>ip_local_deliver (77 samples, 0.67%)</title><rect x="931.5" y="211.0" width="7.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="934.5" y="222.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (55 samples, 0.48%)</title><rect x="931.8" y="195.0" width="5.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="934.8" y="206.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (55 samples, 0.48%)</title><rect x="931.8" y="179.0" width="5.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="934.8" y="190.0"></text>
</g>
<g>
<title>tcp_v4_rcv (54 samples, 0.47%)</title><rect x="931.9" y="163.0" width="5.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="934.9" y="174.0"></text>
</g>
<g>
<title>__inet_lookup_established (6 samples, 0.05%)</title><rect x="931.9" y="147.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="934.9" y="158.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (43 samples, 0.38%)</title><rect x="932.8" y="147.0" width="4.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="935.8" y="158.0"></text>
</g>
<g>
<title>tcp_rcv_established (43 samples, 0.38%)</title><rect x="932.8" y="131.0" width="4.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="935.8" y="142.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (4 samples, 0.04%)</title><rect x="932.8" y="115.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="935.8" y="126.0"></text>
</g>
<g>
<title>__ip_queue_xmit (4 samples, 0.04%)</title><rect x="932.8" y="99.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="935.8" y="110.0"></text>
</g>
<g>
<title>ip_local_out (3 samples, 0.03%)</title><rect x="932.8" y="83.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="935.8" y="94.0"></text>
</g>
<g>
<title>__ip_local_out (3 samples, 0.03%)</title><rect x="932.8" y="67.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="935.8" y="78.0"></text>
</g>
<g>
<title>nf_hook_slow (3 samples, 0.03%)</title><rect x="932.8" y="51.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="935.8" y="62.0"></text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.03%)</title><rect x="933.2" y="115.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="936.2" y="126.0"></text>
</g>
<g>
<title>mod_timer (3 samples, 0.03%)</title><rect x="933.2" y="99.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="936.2" y="110.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.03%)</title><rect x="933.2" y="83.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="936.2" y="94.0"></text>
</g>
<g>
<title>sock_def_readable (9 samples, 0.08%)</title><rect x="933.5" y="115.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="936.5" y="126.0"></text>
</g>
<g>
<title>__wake_up_common_lock (6 samples, 0.05%)</title><rect x="933.8" y="99.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="936.8" y="110.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (6 samples, 0.05%)</title><rect x="933.8" y="83.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="936.8" y="94.0"></text>
</g>
<g>
<title>tcp_ack (14 samples, 0.12%)</title><rect x="934.5" y="115.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="937.5" y="126.0"></text>
</g>
<g>
<title>__kfree_skb (6 samples, 0.05%)</title><rect x="934.7" y="99.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="937.7" y="110.0"></text>
</g>
<g>
<title>tcp_data_queue (12 samples, 0.11%)</title><rect x="936.0" y="115.0" width="1.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="939.0" y="126.0"></text>
</g>
<g>
<title>sock_def_readable (11 samples, 0.10%)</title><rect x="936.0" y="99.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="939.0" y="110.0"></text>
</g>
<g>
<title>__wake_up_common_lock (11 samples, 0.10%)</title><rect x="936.0" y="83.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="939.0" y="94.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (11 samples, 0.10%)</title><rect x="936.0" y="67.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="939.0" y="78.0"></text>
</g>
<g>
<title>nf_hook_slow (19 samples, 0.17%)</title><rect x="937.5" y="195.0" width="1.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="940.5" y="206.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (14 samples, 0.12%)</title><rect x="937.5" y="179.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="940.5" y="190.0"></text>
</g>
<g>
<title>nf_hook_slow (16 samples, 0.14%)</title><rect x="939.6" y="211.0" width="1.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="942.6" y="222.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (11 samples, 0.10%)</title><rect x="939.8" y="195.0" width="1.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="942.8" y="206.0"></text>
</g>
<g>
<title>nf_hook_slow (4 samples, 0.04%)</title><rect x="941.3" y="355.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="944.3" y="366.0"></text>
</g>
<g>
<title>tcp_v4_send_check (3 samples, 0.03%)</title><rect x="941.9" y="387.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="944.9" y="398.0"></text>
</g>
<g>
<title>ktime_get (3 samples, 0.03%)</title><rect x="942.2" y="403.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="945.2" y="414.0"></text>
</g>
<g>
<title>read_tsc (3 samples, 0.03%)</title><rect x="942.2" y="387.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="945.2" y="398.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (4 samples, 0.04%)</title><rect x="942.5" y="403.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="945.5" y="414.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (8 samples, 0.07%)</title><rect x="943.1" y="435.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="946.1" y="446.0"></text>
</g>
<g>
<title>__alloc_skb (7 samples, 0.06%)</title><rect x="943.2" y="419.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="946.2" y="430.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (3 samples, 0.03%)</title><rect x="943.3" y="403.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="946.3" y="414.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (3 samples, 0.03%)</title><rect x="943.3" y="387.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="946.3" y="398.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (3 samples, 0.03%)</title><rect x="943.7" y="403.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="946.7" y="414.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.08%)</title><rect x="944.5" y="563.0" width="0.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="947.5" y="574.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.08%)</title><rect x="944.5" y="547.0" width="0.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="947.5" y="558.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (6 samples, 0.05%)</title><rect x="944.6" y="531.0" width="0.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="947.6" y="542.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (5 samples, 0.04%)</title><rect x="944.7" y="515.0" width="0.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="947.7" y="526.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (3 samples, 0.03%)</title><rect x="944.8" y="499.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="947.8" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/StorageSession.next (1,557 samples, 13.63%)</title><rect x="945.7" y="643.0" width="160.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="948.7" y="654.0">ru/mail/polis/servic..</text>
</g>
<g>
<title>one/nio/net/Session.write (1,045 samples, 9.15%)</title><rect x="945.7" y="627.0" width="108.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="948.7" y="638.0">one/nio/net/S..</text>
</g>
<g>
<title>one/nio/net/Session.write (1,045 samples, 9.15%)</title><rect x="945.7" y="611.0" width="108.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="948.7" y="622.0">one/nio/net/S..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (1,043 samples, 9.13%)</title><rect x="945.9" y="595.0" width="107.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="948.9" y="606.0">one/nio/net/S..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (1,043 samples, 9.13%)</title><rect x="945.9" y="579.0" width="107.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="948.9" y="590.0">one/nio/net/N..</text>
</g>
<g>
<title>.annobin_send.c (1,011 samples, 8.85%)</title><rect x="946.7" y="563.0" width="104.5" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="949.7" y="574.0">.annobin_sen..</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (7 samples, 0.06%)</title><rect x="955.2" y="547.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="958.2" y="558.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (920 samples, 8.05%)</title><rect x="956.1" y="547.0" width="95.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="959.1" y="558.0">entry_SYSCA..</text>
</g>
<g>
<title>do_syscall_64 (920 samples, 8.05%)</title><rect x="956.1" y="531.0" width="95.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="959.1" y="542.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (890 samples, 7.79%)</title><rect x="959.0" y="515.0" width="92.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="962.0" y="526.0">__x64_sys_s..</text>
</g>
<g>
<title>__sys_sendto (888 samples, 7.77%)</title><rect x="959.2" y="499.0" width="91.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="962.2" y="510.0">__sys_sendto</text>
</g>
<g>
<title>import_single_range (7 samples, 0.06%)</title><rect x="959.8" y="483.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="962.8" y="494.0"></text>
</g>
<g>
<title>sock_sendmsg (865 samples, 7.57%)</title><rect x="960.5" y="483.0" width="89.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="963.5" y="494.0">sock_sendmsg</text>
</g>
<g>
<title>security_socket_sendmsg (13 samples, 0.11%)</title><rect x="960.5" y="467.0" width="1.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="963.5" y="478.0"></text>
</g>
<g>
<title>sock_has_perm (13 samples, 0.11%)</title><rect x="960.5" y="451.0" width="1.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="963.5" y="462.0"></text>
</g>
<g>
<title>avc_has_perm (8 samples, 0.07%)</title><rect x="961.0" y="435.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="964.0" y="446.0"></text>
</g>
<g>
<title>tcp_sendmsg (852 samples, 7.46%)</title><rect x="961.8" y="467.0" width="88.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="964.8" y="478.0">tcp_sendmsg</text>
</g>
<g>
<title>lock_sock_nested (8 samples, 0.07%)</title><rect x="962.1" y="451.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="965.1" y="462.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (3 samples, 0.03%)</title><rect x="962.3" y="435.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="965.3" y="446.0"></text>
</g>
<g>
<title>queued_spin_lock_slowpath (3 samples, 0.03%)</title><rect x="962.7" y="435.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="965.7" y="446.0"></text>
</g>
<g>
<title>release_sock (32 samples, 0.28%)</title><rect x="963.0" y="451.0" width="3.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="966.0" y="462.0"></text>
</g>
<g>
<title>__release_sock (25 samples, 0.22%)</title><rect x="963.3" y="435.0" width="2.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="966.3" y="446.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (20 samples, 0.18%)</title><rect x="963.8" y="419.0" width="2.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="966.8" y="430.0"></text>
</g>
<g>
<title>tcp_rcv_established (20 samples, 0.18%)</title><rect x="963.8" y="403.0" width="2.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="966.8" y="414.0"></text>
</g>
<g>
<title>__kfree_skb (3 samples, 0.03%)</title><rect x="963.9" y="387.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="966.9" y="398.0"></text>
</g>
<g>
<title>tcp_ack (13 samples, 0.11%)</title><rect x="964.4" y="387.0" width="1.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="967.4" y="398.0"></text>
</g>
<g>
<title>__kfree_skb (3 samples, 0.03%)</title><rect x="964.5" y="371.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="967.5" y="382.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (3 samples, 0.03%)</title><rect x="964.9" y="371.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="967.9" y="382.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (5 samples, 0.04%)</title><rect x="965.2" y="371.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="968.2" y="382.0"></text>
</g>
<g>
<title>sk_reset_timer (4 samples, 0.04%)</title><rect x="965.3" y="355.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="968.3" y="366.0"></text>
</g>
<g>
<title>mod_timer (4 samples, 0.04%)</title><rect x="965.3" y="339.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="968.3" y="350.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (3 samples, 0.03%)</title><rect x="965.9" y="435.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="968.9" y="446.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (809 samples, 7.08%)</title><rect x="966.3" y="451.0" width="83.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="969.3" y="462.0">tcp_sendm..</text>
</g>
<g>
<title>__check_object_size (3 samples, 0.03%)</title><rect x="967.5" y="435.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="970.5" y="446.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (746 samples, 6.53%)</title><rect x="967.8" y="435.0" width="77.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="970.8" y="446.0">__tcp_pus..</text>
</g>
<g>
<title>tcp_write_xmit (746 samples, 6.53%)</title><rect x="967.8" y="419.0" width="77.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="970.8" y="430.0">tcp_write..</text>
</g>
<g>
<title>__tcp_transmit_skb (692 samples, 6.06%)</title><rect x="969.6" y="403.0" width="71.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="972.6" y="414.0">__tcp_tr..</text>
</g>
<g>
<title>__ip_queue_xmit (665 samples, 5.82%)</title><rect x="970.8" y="387.0" width="68.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="973.8" y="398.0">__ip_qu..</text>
</g>
<g>
<title>__sk_dst_check (4 samples, 0.04%)</title><rect x="970.9" y="371.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="973.9" y="382.0"></text>
</g>
<g>
<title>ipv4_dst_check (3 samples, 0.03%)</title><rect x="971.0" y="355.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="974.0" y="366.0"></text>
</g>
<g>
<title>ip_local_out (162 samples, 1.42%)</title><rect x="971.3" y="371.0" width="16.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="974.3" y="382.0"></text>
</g>
<g>
<title>__ip_local_out (161 samples, 1.41%)</title><rect x="971.4" y="355.0" width="16.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="974.4" y="366.0"></text>
</g>
<g>
<title>ip_send_check (3 samples, 0.03%)</title><rect x="971.4" y="339.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="974.4" y="350.0"></text>
</g>
<g>
<title>nf_hook_slow (158 samples, 1.38%)</title><rect x="971.7" y="339.0" width="16.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="974.7" y="350.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (61 samples, 0.53%)</title><rect x="972.1" y="323.0" width="6.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="975.1" y="334.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (3 samples, 0.03%)</title><rect x="978.0" y="307.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="981.0" y="318.0"></text>
</g>
<g>
<title>iptable_filter_hook	[iptable_filter] (9 samples, 0.08%)</title><rect x="978.4" y="323.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="981.4" y="334.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (13 samples, 0.11%)</title><rect x="979.3" y="323.0" width="1.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="982.3" y="334.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (9 samples, 0.08%)</title><rect x="979.7" y="307.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="982.7" y="318.0"></text>
</g>
<g>
<title>iptable_raw_hook	[iptable_raw] (3 samples, 0.03%)</title><rect x="980.6" y="323.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="983.6" y="334.0"></text>
</g>
<g>
<title>iptable_security_hook	[iptable_security] (3 samples, 0.03%)</title><rect x="980.9" y="323.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="983.9" y="334.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag	[nf_defrag_ipv4] (5 samples, 0.04%)</title><rect x="981.2" y="323.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="984.2" y="334.0"></text>
</g>
<g>
<title>ipv4_conntrack_local	[nf_conntrack] (7 samples, 0.06%)</title><rect x="981.8" y="323.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="984.8" y="334.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (41 samples, 0.36%)</title><rect x="982.5" y="323.0" width="4.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="985.5" y="334.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get	[nf_conntrack] (12 samples, 0.11%)</title><rect x="982.6" y="307.0" width="1.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="985.6" y="318.0"></text>
</g>
<g>
<title>hash_conntrack_raw	[nf_conntrack] (9 samples, 0.08%)</title><rect x="983.8" y="307.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="986.8" y="318.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet	[nf_conntrack] (15 samples, 0.13%)</title><rect x="984.8" y="307.0" width="1.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="987.8" y="318.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (3 samples, 0.03%)</title><rect x="985.9" y="291.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="988.9" y="302.0"></text>
</g>
<g>
<title>nf_ct_get_tuple	[nf_conntrack] (4 samples, 0.04%)</title><rect x="986.3" y="307.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="989.3" y="318.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn	[nf_nat] (10 samples, 0.09%)</title><rect x="986.7" y="323.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="989.7" y="334.0"></text>
</g>
<g>
<title>nf_nat_inet_fn	[nf_nat] (5 samples, 0.04%)</title><rect x="986.8" y="307.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="989.8" y="318.0"></text>
</g>
<g>
<title>nf_nat_packet	[nf_nat] (3 samples, 0.03%)</title><rect x="987.4" y="307.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="990.4" y="318.0"></text>
</g>
<g>
<title>selinux_ipv4_output (3 samples, 0.03%)</title><rect x="987.8" y="323.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="990.8" y="334.0"></text>
</g>
<g>
<title>ip_output (498 samples, 4.36%)</title><rect x="988.1" y="371.0" width="51.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="991.1" y="382.0">ip_ou..</text>
</g>
<g>
<title>ip_finish_output2 (443 samples, 3.88%)</title><rect x="989.2" y="355.0" width="45.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="992.2" y="366.0">ip_f..</text>
</g>
<g>
<title>__dev_queue_xmit (28 samples, 0.25%)</title><rect x="990.9" y="339.0" width="2.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="993.9" y="350.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (23 samples, 0.20%)</title><rect x="991.3" y="323.0" width="2.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="994.3" y="334.0"></text>
</g>
<g>
<title>loopback_xmit (19 samples, 0.17%)</title><rect x="991.7" y="307.0" width="1.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="994.7" y="318.0"></text>
</g>
<g>
<title>netif_rx (9 samples, 0.08%)</title><rect x="992.3" y="291.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="995.3" y="302.0"></text>
</g>
<g>
<title>netif_rx_internal (9 samples, 0.08%)</title><rect x="992.3" y="275.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="995.3" y="286.0"></text>
</g>
<g>
<title>enqueue_to_backlog (3 samples, 0.03%)</title><rect x="992.4" y="259.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="995.4" y="270.0"></text>
</g>
<g>
<title>ktime_get_with_offset (5 samples, 0.04%)</title><rect x="992.7" y="259.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="995.7" y="270.0"></text>
</g>
<g>
<title>read_tsc (3 samples, 0.03%)</title><rect x="992.9" y="243.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="995.9" y="254.0"></text>
</g>
<g>
<title>tcp_wfree (3 samples, 0.03%)</title><rect x="993.3" y="291.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="996.3" y="302.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (398 samples, 3.48%)</title><rect x="993.7" y="339.0" width="41.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="996.7" y="350.0">__l..</text>
</g>
<g>
<title>do_softirq.part.0 (397 samples, 3.48%)</title><rect x="993.8" y="323.0" width="41.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="996.8" y="334.0">do_..</text>
</g>
<g>
<title>do_softirq_own_stack (396 samples, 3.47%)</title><rect x="994.0" y="307.0" width="40.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="997.0" y="318.0">do_..</text>
</g>
<g>
<title>__softirqentry_text_start (396 samples, 3.47%)</title><rect x="994.0" y="291.0" width="40.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="997.0" y="302.0">__s..</text>
</g>
<g>
<title>net_rx_action (388 samples, 3.40%)</title><rect x="994.5" y="275.0" width="40.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="997.5" y="286.0">net..</text>
</g>
<g>
<title>process_backlog (383 samples, 3.35%)</title><rect x="995.0" y="259.0" width="39.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="998.0" y="270.0">pro..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (373 samples, 3.27%)</title><rect x="996.0" y="243.0" width="38.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="999.0" y="254.0">__n..</text>
</g>
<g>
<title>__netif_receive_skb_core (3 samples, 0.03%)</title><rect x="996.0" y="227.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="999.0" y="238.0"></text>
</g>
<g>
<title>ip_rcv (369 samples, 3.23%)</title><rect x="996.4" y="227.0" width="38.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="999.4" y="238.0">ip_..</text>
</g>
<g>
<title>ip_local_deliver (261 samples, 2.28%)</title><rect x="996.7" y="211.0" width="27.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="999.7" y="222.0">i..</text>
</g>
<g>
<title>ip_local_deliver_finish (179 samples, 1.57%)</title><rect x="997.3" y="195.0" width="18.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1000.3" y="206.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (179 samples, 1.57%)</title><rect x="997.3" y="179.0" width="18.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1000.3" y="190.0"></text>
</g>
<g>
<title>raw_local_deliver (3 samples, 0.03%)</title><rect x="997.4" y="163.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1000.4" y="174.0"></text>
</g>
<g>
<title>tcp_v4_rcv (175 samples, 1.53%)</title><rect x="997.7" y="163.0" width="18.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1000.7" y="174.0"></text>
</g>
<g>
<title>__inet_lookup_established (14 samples, 0.12%)</title><rect x="999.0" y="147.0" width="1.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1002.0" y="158.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (5 samples, 0.04%)</title><rect x="1000.6" y="147.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1003.6" y="158.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (4 samples, 0.04%)</title><rect x="1000.7" y="131.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1003.7" y="142.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (3 samples, 0.03%)</title><rect x="1000.8" y="115.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1003.8" y="126.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (138 samples, 1.21%)</title><rect x="1001.5" y="147.0" width="14.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1004.5" y="158.0"></text>
</g>
<g>
<title>tcp_rcv_established (138 samples, 1.21%)</title><rect x="1001.5" y="131.0" width="14.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1004.5" y="142.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (10 samples, 0.09%)</title><rect x="1002.0" y="115.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1005.0" y="126.0"></text>
</g>
<g>
<title>__ip_queue_xmit (10 samples, 0.09%)</title><rect x="1002.0" y="99.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1005.0" y="110.0"></text>
</g>
<g>
<title>ip_local_out (6 samples, 0.05%)</title><rect x="1002.1" y="83.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1005.1" y="94.0"></text>
</g>
<g>
<title>__ip_local_out (6 samples, 0.05%)</title><rect x="1002.1" y="67.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1005.1" y="78.0"></text>
</g>
<g>
<title>nf_hook_slow (5 samples, 0.04%)</title><rect x="1002.2" y="51.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1005.2" y="62.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (3 samples, 0.03%)</title><rect x="1002.2" y="35.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1005.2" y="46.0"></text>
</g>
<g>
<title>ip_output (3 samples, 0.03%)</title><rect x="1002.7" y="83.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1005.7" y="94.0"></text>
</g>
<g>
<title>sk_reset_timer (4 samples, 0.04%)</title><rect x="1003.0" y="115.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1006.0" y="126.0"></text>
</g>
<g>
<title>sock_def_readable (99 samples, 0.87%)</title><rect x="1003.5" y="115.0" width="10.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1006.5" y="126.0"></text>
</g>
<g>
<title>__wake_up_common_lock (93 samples, 0.81%)</title><rect x="1004.1" y="99.0" width="9.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1007.1" y="110.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (91 samples, 0.80%)</title><rect x="1004.3" y="83.0" width="9.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1007.3" y="94.0"></text>
</g>
<g>
<title>tcp_data_queue (6 samples, 0.05%)</title><rect x="1013.7" y="115.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1016.7" y="126.0"></text>
</g>
<g>
<title>sock_def_readable (5 samples, 0.04%)</title><rect x="1013.7" y="99.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1016.7" y="110.0"></text>
</g>
<g>
<title>__wake_up_common_lock (5 samples, 0.04%)</title><rect x="1013.7" y="83.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1016.7" y="94.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (5 samples, 0.04%)</title><rect x="1013.7" y="67.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1016.7" y="78.0"></text>
</g>
<g>
<title>tcp_event_data_recv (3 samples, 0.03%)</title><rect x="1014.3" y="115.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1017.3" y="126.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (6 samples, 0.05%)</title><rect x="1014.6" y="115.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1017.6" y="126.0"></text>
</g>
<g>
<title>ktime_get (3 samples, 0.03%)</title><rect x="1014.9" y="99.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1017.9" y="110.0"></text>
</g>
<g>
<title>tcp_queue_rcv (4 samples, 0.04%)</title><rect x="1015.2" y="115.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1018.2" y="126.0"></text>
</g>
<g>
<title>nf_hook_slow (77 samples, 0.67%)</title><rect x="1015.7" y="195.0" width="8.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1018.7" y="206.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (62 samples, 0.54%)</title><rect x="1016.0" y="179.0" width="6.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1019.0" y="190.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (4 samples, 0.04%)</title><rect x="1020.5" y="163.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1023.5" y="174.0"></text>
</g>
<g>
<title>conntrack_mt	[xt_conntrack] (11 samples, 0.10%)</title><rect x="1020.9" y="163.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1023.9" y="174.0"></text>
</g>
<g>
<title>conntrack_mt_v3	[xt_conntrack] (3 samples, 0.03%)</title><rect x="1022.0" y="163.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1025.0" y="174.0"></text>
</g>
<g>
<title>iptable_filter_hook	[iptable_filter] (3 samples, 0.03%)</title><rect x="1022.4" y="179.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1025.4" y="190.0"></text>
</g>
<g>
<title>iptable_security_hook	[iptable_security] (3 samples, 0.03%)</title><rect x="1022.8" y="179.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1025.8" y="190.0"></text>
</g>
<g>
<title>nf_confirm	[nf_conntrack] (3 samples, 0.03%)</title><rect x="1023.3" y="179.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1026.3" y="190.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events	[nf_conntrack] (3 samples, 0.03%)</title><rect x="1023.3" y="163.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1026.3" y="174.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (5 samples, 0.04%)</title><rect x="1023.7" y="211.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1026.7" y="222.0"></text>
</g>
<g>
<title>ip_rcv_finish (3 samples, 0.03%)</title><rect x="1024.2" y="211.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1027.2" y="222.0"></text>
</g>
<g>
<title>nf_hook_slow (97 samples, 0.85%)</title><rect x="1024.5" y="211.0" width="10.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1027.5" y="222.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (72 samples, 0.63%)</title><rect x="1024.9" y="195.0" width="7.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1027.9" y="206.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag	[nf_defrag_ipv4] (4 samples, 0.04%)</title><rect x="1032.6" y="195.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1035.6" y="206.0"></text>
</g>
<g>
<title>ipv4_conntrack_in	[nf_conntrack] (5 samples, 0.04%)</title><rect x="1033.0" y="195.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1036.0" y="206.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (5 samples, 0.04%)</title><rect x="1033.5" y="195.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1036.5" y="206.0"></text>
</g>
<g>
<title>nf_nat_ipv4_in	[nf_nat] (5 samples, 0.04%)</title><rect x="1034.0" y="195.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1037.0" y="206.0"></text>
</g>
<g>
<title>run_timer_softirq (3 samples, 0.03%)</title><rect x="1034.5" y="275.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1037.5" y="286.0"></text>
</g>
<g>
<title>call_timer_fn (3 samples, 0.03%)</title><rect x="1034.5" y="259.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1037.5" y="270.0"></text>
</g>
<g>
<title>ip_finish_output (6 samples, 0.05%)</title><rect x="1035.0" y="355.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1038.0" y="366.0"></text>
</g>
<g>
<title>nf_hook_slow (38 samples, 0.33%)</title><rect x="1035.6" y="355.0" width="3.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1038.6" y="366.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (12 samples, 0.11%)</title><rect x="1035.6" y="339.0" width="1.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1038.6" y="350.0"></text>
</g>
<g>
<title>ipv4_confirm	[nf_conntrack] (4 samples, 0.04%)</title><rect x="1037.0" y="339.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1040.0" y="350.0"></text>
</g>
<g>
<title>nf_confirm	[nf_conntrack] (11 samples, 0.10%)</title><rect x="1037.4" y="339.0" width="1.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1040.4" y="350.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events	[nf_conntrack] (9 samples, 0.08%)</title><rect x="1037.6" y="323.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1040.6" y="334.0"></text>
</g>
<g>
<title>nf_nat_ipv4_out	[nf_nat] (3 samples, 0.03%)</title><rect x="1038.6" y="339.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1041.6" y="350.0"></text>
</g>
<g>
<title>selinux_ip_postroute (5 samples, 0.04%)</title><rect x="1038.9" y="339.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1041.9" y="350.0"></text>
</g>
<g>
<title>__skb_clone (7 samples, 0.06%)</title><rect x="1039.5" y="387.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1042.5" y="398.0"></text>
</g>
<g>
<title>__copy_skb_header (3 samples, 0.03%)</title><rect x="1039.9" y="371.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1042.9" y="382.0"></text>
</g>
<g>
<title>ktime_get (7 samples, 0.06%)</title><rect x="1041.1" y="403.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1044.1" y="414.0"></text>
</g>
<g>
<title>read_tsc (6 samples, 0.05%)</title><rect x="1041.2" y="387.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1044.2" y="398.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (16 samples, 0.14%)</title><rect x="1041.9" y="403.0" width="1.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1044.9" y="414.0"></text>
</g>
<g>
<title>sk_reset_timer (8 samples, 0.07%)</title><rect x="1042.4" y="387.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1045.4" y="398.0"></text>
</g>
<g>
<title>mod_timer (8 samples, 0.07%)</title><rect x="1042.4" y="371.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1045.4" y="382.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (7 samples, 0.06%)</title><rect x="1042.5" y="355.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1045.5" y="366.0"></text>
</g>
<g>
<title>tcp_rearm_rto (3 samples, 0.03%)</title><rect x="1043.2" y="387.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1046.2" y="398.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (11 samples, 0.10%)</title><rect x="1043.5" y="403.0" width="1.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1046.5" y="414.0"></text>
</g>
<g>
<title>sk_reset_timer (7 samples, 0.06%)</title><rect x="1043.9" y="387.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1046.9" y="398.0"></text>
</g>
<g>
<title>mod_timer (7 samples, 0.06%)</title><rect x="1043.9" y="371.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1046.9" y="382.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (6 samples, 0.05%)</title><rect x="1044.0" y="355.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1047.0" y="366.0"></text>
</g>
<g>
<title>_copy_from_iter_full (8 samples, 0.07%)</title><rect x="1044.9" y="435.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1047.9" y="446.0"></text>
</g>
<g>
<title>copyin (5 samples, 0.04%)</title><rect x="1045.0" y="419.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1048.0" y="430.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (4 samples, 0.04%)</title><rect x="1045.1" y="403.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1048.1" y="414.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (23 samples, 0.20%)</title><rect x="1045.8" y="435.0" width="2.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1048.8" y="446.0"></text>
</g>
<g>
<title>__alloc_skb (20 samples, 0.18%)</title><rect x="1045.9" y="419.0" width="2.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1048.9" y="430.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (5 samples, 0.04%)</title><rect x="1046.3" y="403.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1049.3" y="414.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (5 samples, 0.04%)</title><rect x="1046.3" y="387.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1049.3" y="398.0"></text>
</g>
<g>
<title>__slab_alloc (3 samples, 0.03%)</title><rect x="1046.5" y="371.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1049.5" y="382.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (10 samples, 0.09%)</title><rect x="1046.8" y="403.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1049.8" y="414.0"></text>
</g>
<g>
<title>__slab_alloc (3 samples, 0.03%)</title><rect x="1047.5" y="387.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1050.5" y="398.0"></text>
</g>
<g>
<title>skb_entail (3 samples, 0.03%)</title><rect x="1048.2" y="435.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1051.2" y="446.0"></text>
</g>
<g>
<title>tcp_send_mss (8 samples, 0.07%)</title><rect x="1048.7" y="435.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1051.7" y="446.0"></text>
</g>
<g>
<title>tcp_current_mss (8 samples, 0.07%)</title><rect x="1048.7" y="419.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1051.7" y="430.0"></text>
</g>
<g>
<title>ipv4_mtu (4 samples, 0.04%)</title><rect x="1049.1" y="403.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1052.1" y="414.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (3 samples, 0.03%)</title><rect x="1049.5" y="435.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1052.5" y="446.0"></text>
</g>
<g>
<title>sockfd_lookup_light (11 samples, 0.10%)</title><rect x="1049.8" y="483.0" width="1.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1052.8" y="494.0"></text>
</g>
<g>
<title>__fget_light (10 samples, 0.09%)</title><rect x="1049.9" y="467.0" width="1.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1052.9" y="478.0"></text>
</g>
<g>
<title>__fget (7 samples, 0.06%)</title><rect x="1050.2" y="451.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1053.2" y="462.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.17%)</title><rect x="1051.5" y="563.0" width="1.9" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1054.5" y="574.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.17%)</title><rect x="1051.5" y="547.0" width="1.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1054.5" y="558.0"></text>
</g>
<g>
<title>.annobin_send.c (4 samples, 0.04%)</title><rect x="1051.5" y="531.0" width="0.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1054.5" y="542.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (14 samples, 0.12%)</title><rect x="1051.9" y="531.0" width="1.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1054.9" y="542.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (3 samples, 0.03%)</title><rect x="1052.2" y="515.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1055.2" y="526.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (7 samples, 0.06%)</title><rect x="1052.5" y="515.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1055.5" y="526.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (4 samples, 0.04%)</title><rect x="1052.6" y="499.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1055.6" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (44 samples, 0.39%)</title><rect x="1053.7" y="627.0" width="4.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1056.7" y="638.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (15 samples, 0.13%)</title><rect x="1053.7" y="611.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1056.7" y="622.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (15 samples, 0.13%)</title><rect x="1053.7" y="595.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1056.7" y="606.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (11 samples, 0.10%)</title><rect x="1054.1" y="579.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1057.1" y="590.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (11 samples, 0.10%)</title><rect x="1054.1" y="563.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1057.1" y="574.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (8 samples, 0.07%)</title><rect x="1054.4" y="547.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1057.4" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (7 samples, 0.06%)</title><rect x="1054.5" y="531.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1057.5" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (7 samples, 0.06%)</title><rect x="1054.5" y="515.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1057.5" y="526.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (7 samples, 0.06%)</title><rect x="1054.5" y="499.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1057.5" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (29 samples, 0.25%)</title><rect x="1055.2" y="611.0" width="3.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1058.2" y="622.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (29 samples, 0.25%)</title><rect x="1055.2" y="595.0" width="3.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1058.2" y="606.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (22 samples, 0.19%)</title><rect x="1055.4" y="579.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1058.4" y="590.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (22 samples, 0.19%)</title><rect x="1055.4" y="563.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1058.4" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (20 samples, 0.18%)</title><rect x="1055.6" y="547.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1058.6" y="558.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (20 samples, 0.18%)</title><rect x="1055.6" y="531.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1058.6" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (18 samples, 0.16%)</title><rect x="1055.7" y="515.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1058.7" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (17 samples, 0.15%)</title><rect x="1055.8" y="499.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1058.8" y="510.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (17 samples, 0.15%)</title><rect x="1055.8" y="483.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1058.8" y="494.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.03%)</title><rect x="1057.8" y="579.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1060.8" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$UntilIterator.hasNext (14 samples, 0.12%)</title><rect x="1058.4" y="627.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1061.4" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.compareTo (14 samples, 0.12%)</title><rect x="1058.4" y="611.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1061.4" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.compareTo (14 samples, 0.12%)</title><rect x="1058.4" y="595.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1061.4" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (14 samples, 0.12%)</title><rect x="1058.4" y="579.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1061.4" y="590.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (10 samples, 0.09%)</title><rect x="1058.6" y="563.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1061.6" y="574.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (3 samples, 0.03%)</title><rect x="1059.2" y="547.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1062.2" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$UntilIterator.next (418 samples, 3.66%)</title><rect x="1059.9" y="627.0" width="43.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1062.9" y="638.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$UntilIterator.next (417 samples, 3.65%)</title><rect x="1060.0" y="611.0" width="43.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1063.0" y="622.0">ru/m..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (399 samples, 3.49%)</title><rect x="1060.0" y="595.0" width="41.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1063.0" y="606.0">com..</text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (399 samples, 3.49%)</title><rect x="1060.0" y="579.0" width="41.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1063.0" y="590.0">com..</text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (399 samples, 3.49%)</title><rect x="1060.0" y="563.0" width="41.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1063.0" y="574.0">com..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (399 samples, 3.49%)</title><rect x="1060.0" y="547.0" width="41.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1063.0" y="558.0">com..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (394 samples, 3.45%)</title><rect x="1060.5" y="531.0" width="40.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1063.5" y="542.0">ru/..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (361 samples, 3.16%)</title><rect x="1061.1" y="515.0" width="37.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1064.1" y="526.0">com..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (10 samples, 0.09%)</title><rect x="1061.2" y="499.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1064.2" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (6 samples, 0.05%)</title><rect x="1061.4" y="483.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1064.4" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (6 samples, 0.05%)</title><rect x="1061.4" y="467.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1064.4" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (6 samples, 0.05%)</title><rect x="1061.4" y="451.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1064.4" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (6 samples, 0.05%)</title><rect x="1061.4" y="435.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1064.4" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (4 samples, 0.04%)</title><rect x="1061.5" y="419.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1064.5" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (3 samples, 0.03%)</title><rect x="1061.5" y="403.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1064.5" y="414.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (171 samples, 1.50%)</title><rect x="1062.2" y="499.0" width="17.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1065.2" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (171 samples, 1.50%)</title><rect x="1062.2" y="483.0" width="17.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1065.2" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (171 samples, 1.50%)</title><rect x="1062.2" y="467.0" width="17.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1065.2" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (166 samples, 1.45%)</title><rect x="1062.7" y="451.0" width="17.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1065.7" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (166 samples, 1.45%)</title><rect x="1062.7" y="435.0" width="17.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1065.7" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (3 samples, 0.03%)</title><rect x="1063.3" y="419.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1066.3" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/123226378.compare (158 samples, 1.38%)</title><rect x="1063.6" y="419.0" width="16.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1066.6" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (158 samples, 1.38%)</title><rect x="1063.6" y="403.0" width="16.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1066.6" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (158 samples, 1.38%)</title><rect x="1063.6" y="387.0" width="16.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1066.6" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (158 samples, 1.38%)</title><rect x="1063.6" y="371.0" width="16.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1066.6" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (158 samples, 1.38%)</title><rect x="1063.6" y="355.0" width="16.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1066.6" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (158 samples, 1.38%)</title><rect x="1063.6" y="339.0" width="16.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1066.6" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$67/1497891062.compare (145 samples, 1.27%)</title><rect x="1064.9" y="323.0" width="15.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1067.9" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (145 samples, 1.27%)</title><rect x="1064.9" y="307.0" width="15.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1067.9" y="318.0"></text>
</g>
<g>
<title>itable stub (6 samples, 0.05%)</title><rect x="1064.9" y="291.0" width="0.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1067.9" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (58 samples, 0.51%)</title><rect x="1065.5" y="291.0" width="6.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1068.5" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (48 samples, 0.42%)</title><rect x="1066.6" y="275.0" width="4.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1069.6" y="286.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (39 samples, 0.34%)</title><rect x="1067.1" y="259.0" width="4.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1070.1" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (10 samples, 0.09%)</title><rect x="1068.5" y="243.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1071.5" y="254.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (8 samples, 0.07%)</title><rect x="1068.7" y="227.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1071.7" y="238.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.base (3 samples, 0.03%)</title><rect x="1069.6" y="243.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1072.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/util/ArraysSupport.vectorizedMismatch (4 samples, 0.04%)</title><rect x="1070.0" y="243.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1073.0" y="254.0"></text>
</g>
<g>
<title>vtable stub (6 samples, 0.05%)</title><rect x="1070.5" y="243.0" width="0.6" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="1073.5" y="254.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (3 samples, 0.03%)</title><rect x="1071.1" y="259.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1074.1" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$66/474651931.apply (76 samples, 0.67%)</title><rect x="1071.5" y="291.0" width="7.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1074.5" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (76 samples, 0.67%)</title><rect x="1071.5" y="275.0" width="7.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1074.5" y="286.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (53 samples, 0.46%)</title><rect x="1071.5" y="259.0" width="5.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1074.5" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (53 samples, 0.46%)</title><rect x="1071.5" y="243.0" width="5.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1074.5" y="254.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (53 samples, 0.46%)</title><rect x="1071.5" y="227.0" width="5.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1074.5" y="238.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (53 samples, 0.46%)</title><rect x="1071.5" y="211.0" width="5.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1074.5" y="222.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (53 samples, 0.46%)</title><rect x="1071.5" y="195.0" width="5.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1074.5" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (53 samples, 0.46%)</title><rect x="1071.5" y="179.0" width="5.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1074.5" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (53 samples, 0.46%)</title><rect x="1071.5" y="163.0" width="5.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1074.5" y="174.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (37 samples, 0.32%)</title><rect x="1072.9" y="147.0" width="3.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1075.9" y="158.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (10 samples, 0.09%)</title><rect x="1074.5" y="131.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1077.5" y="142.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (11 samples, 0.10%)</title><rect x="1075.6" y="131.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1078.6" y="142.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (3 samples, 0.03%)</title><rect x="1076.4" y="115.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1079.4" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (3 samples, 0.03%)</title><rect x="1076.4" y="99.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1079.4" y="110.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (3 samples, 0.03%)</title><rect x="1076.4" y="83.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1079.4" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteOrder.nativeOrder (3 samples, 0.03%)</title><rect x="1076.7" y="147.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1079.7" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (23 samples, 0.20%)</title><rect x="1077.0" y="259.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1080.0" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (16 samples, 0.14%)</title><rect x="1077.7" y="243.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1080.7" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (16 samples, 0.14%)</title><rect x="1077.7" y="227.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1080.7" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (16 samples, 0.14%)</title><rect x="1077.7" y="211.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1080.7" y="222.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (16 samples, 0.14%)</title><rect x="1077.7" y="195.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1080.7" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (16 samples, 0.14%)</title><rect x="1077.7" y="179.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1080.7" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (16 samples, 0.14%)</title><rect x="1077.7" y="163.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1080.7" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Value.compareTo (5 samples, 0.04%)</title><rect x="1079.4" y="291.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1082.4" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (179 samples, 1.57%)</title><rect x="1079.9" y="499.0" width="18.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1082.9" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (179 samples, 1.57%)</title><rect x="1079.9" y="483.0" width="18.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1082.9" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (179 samples, 1.57%)</title><rect x="1079.9" y="467.0" width="18.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1082.9" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (179 samples, 1.57%)</title><rect x="1079.9" y="451.0" width="18.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1082.9" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (179 samples, 1.57%)</title><rect x="1079.9" y="435.0" width="18.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1082.9" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (179 samples, 1.57%)</title><rect x="1079.9" y="419.0" width="18.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1082.9" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (65 samples, 0.57%)</title><rect x="1079.9" y="403.0" width="6.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1082.9" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (60 samples, 0.53%)</title><rect x="1080.4" y="387.0" width="6.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1083.4" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (60 samples, 0.53%)</title><rect x="1080.4" y="371.0" width="6.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1083.4" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (60 samples, 0.53%)</title><rect x="1080.4" y="355.0" width="6.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1083.4" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (16 samples, 0.14%)</title><rect x="1080.4" y="339.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1083.4" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (9 samples, 0.08%)</title><rect x="1080.4" y="323.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1083.4" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (9 samples, 0.08%)</title><rect x="1080.4" y="307.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1083.4" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (3 samples, 0.03%)</title><rect x="1080.9" y="291.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1083.9" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (3 samples, 0.03%)</title><rect x="1080.9" y="275.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1083.9" y="286.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (3 samples, 0.03%)</title><rect x="1080.9" y="259.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1083.9" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.03%)</title><rect x="1080.9" y="243.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1083.9" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.03%)</title><rect x="1080.9" y="227.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1083.9" y="238.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (7 samples, 0.06%)</title><rect x="1081.3" y="323.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1084.3" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (7 samples, 0.06%)</title><rect x="1081.3" y="307.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1084.3" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (7 samples, 0.06%)</title><rect x="1081.3" y="291.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1084.3" y="302.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (7 samples, 0.06%)</title><rect x="1081.3" y="275.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1084.3" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (7 samples, 0.06%)</title><rect x="1081.3" y="259.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1084.3" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (7 samples, 0.06%)</title><rect x="1081.3" y="243.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1084.3" y="254.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (7 samples, 0.06%)</title><rect x="1081.3" y="227.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1084.3" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (17 samples, 0.15%)</title><rect x="1082.1" y="339.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1085.1" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (10 samples, 0.09%)</title><rect x="1082.1" y="323.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1085.1" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (10 samples, 0.09%)</title><rect x="1082.1" y="307.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1085.1" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (7 samples, 0.06%)</title><rect x="1082.4" y="291.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1085.4" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (7 samples, 0.06%)</title><rect x="1082.4" y="275.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1085.4" y="286.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (7 samples, 0.06%)</title><rect x="1082.4" y="259.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1085.4" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (7 samples, 0.06%)</title><rect x="1082.4" y="243.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1085.4" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (7 samples, 0.06%)</title><rect x="1082.4" y="227.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1085.4" y="238.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (7 samples, 0.06%)</title><rect x="1082.4" y="211.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1085.4" y="222.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (6 samples, 0.05%)</title><rect x="1082.4" y="195.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1085.4" y="206.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (6 samples, 0.05%)</title><rect x="1082.4" y="179.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1085.4" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (7 samples, 0.06%)</title><rect x="1083.1" y="323.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1086.1" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (7 samples, 0.06%)</title><rect x="1083.1" y="307.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1086.1" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (7 samples, 0.06%)</title><rect x="1083.1" y="291.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1086.1" y="302.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (7 samples, 0.06%)</title><rect x="1083.1" y="275.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1086.1" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (7 samples, 0.06%)</title><rect x="1083.1" y="259.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1086.1" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (7 samples, 0.06%)</title><rect x="1083.1" y="243.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1086.1" y="254.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (7 samples, 0.06%)</title><rect x="1083.1" y="227.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1086.1" y="238.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (5 samples, 0.04%)</title><rect x="1083.1" y="211.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1086.1" y="222.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (5 samples, 0.04%)</title><rect x="1083.1" y="195.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1086.1" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (5 samples, 0.04%)</title><rect x="1083.1" y="179.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1086.1" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.timestampAt (12 samples, 0.11%)</title><rect x="1083.8" y="339.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1086.8" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (12 samples, 0.11%)</title><rect x="1083.8" y="323.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1086.8" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (12 samples, 0.11%)</title><rect x="1083.8" y="307.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1086.8" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (12 samples, 0.11%)</title><rect x="1083.8" y="291.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1086.8" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (12 samples, 0.11%)</title><rect x="1083.8" y="275.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1086.8" y="286.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (12 samples, 0.11%)</title><rect x="1083.8" y="259.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1086.8" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (12 samples, 0.11%)</title><rect x="1083.8" y="243.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1086.8" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (12 samples, 0.11%)</title><rect x="1083.8" y="227.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1086.8" y="238.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (5 samples, 0.04%)</title><rect x="1084.4" y="211.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1087.4" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.valueAt (15 samples, 0.13%)</title><rect x="1085.1" y="339.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1088.1" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (10 samples, 0.09%)</title><rect x="1085.1" y="323.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1088.1" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (10 samples, 0.09%)</title><rect x="1085.1" y="307.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1088.1" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (10 samples, 0.09%)</title><rect x="1085.1" y="291.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1088.1" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (10 samples, 0.09%)</title><rect x="1085.1" y="275.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1088.1" y="286.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (10 samples, 0.09%)</title><rect x="1085.1" y="259.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1088.1" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (10 samples, 0.09%)</title><rect x="1085.1" y="243.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1088.1" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (10 samples, 0.09%)</title><rect x="1085.1" y="227.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1088.1" y="238.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (3 samples, 0.03%)</title><rect x="1085.7" y="211.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1088.7" y="222.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (5 samples, 0.04%)</title><rect x="1086.1" y="323.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1089.1" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (5 samples, 0.04%)</title><rect x="1086.1" y="307.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1089.1" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (5 samples, 0.04%)</title><rect x="1086.1" y="291.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1089.1" y="302.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (5 samples, 0.04%)</title><rect x="1086.1" y="275.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1089.1" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 0.04%)</title><rect x="1086.1" y="259.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1089.1" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 0.04%)</title><rect x="1086.1" y="243.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1089.1" y="254.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (5 samples, 0.04%)</title><rect x="1086.1" y="227.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1089.1" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/123226378.compare (114 samples, 1.00%)</title><rect x="1086.6" y="403.0" width="11.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1089.6" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (114 samples, 1.00%)</title><rect x="1086.6" y="387.0" width="11.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1089.6" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (114 samples, 1.00%)</title><rect x="1086.6" y="371.0" width="11.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1089.6" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (114 samples, 1.00%)</title><rect x="1086.6" y="355.0" width="11.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1089.6" y="366.0"></text>
</g>
<g>
<title>itable stub (14 samples, 0.12%)</title><rect x="1087.3" y="339.0" width="1.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1090.3" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (91 samples, 0.80%)</title><rect x="1088.8" y="339.0" width="9.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1091.8" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (91 samples, 0.80%)</title><rect x="1088.8" y="323.0" width="9.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1091.8" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$67/1497891062.compare (86 samples, 0.75%)</title><rect x="1089.1" y="307.0" width="8.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1092.1" y="318.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (84 samples, 0.74%)</title><rect x="1089.3" y="291.0" width="8.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1092.3" y="302.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.03%)</title><rect x="1089.4" y="275.0" width="0.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1092.4" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (36 samples, 0.32%)</title><rect x="1089.7" y="275.0" width="3.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1092.7" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (35 samples, 0.31%)</title><rect x="1089.8" y="259.0" width="3.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1092.8" y="270.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (25 samples, 0.22%)</title><rect x="1090.3" y="243.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1093.3" y="254.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (5 samples, 0.04%)</title><rect x="1091.4" y="227.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1094.4" y="238.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (4 samples, 0.04%)</title><rect x="1091.5" y="211.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1094.5" y="222.0"></text>
</g>
<g>
<title>jdk/internal/util/ArraysSupport.vectorizedMismatch (6 samples, 0.05%)</title><rect x="1092.0" y="227.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1095.0" y="238.0"></text>
</g>
<g>
<title>vtable stub (3 samples, 0.03%)</title><rect x="1092.6" y="227.0" width="0.3" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="1095.6" y="238.0"></text>
</g>
<g>
<title>jdk/internal/util/ArraysSupport.vectorizedMismatch (3 samples, 0.03%)</title><rect x="1093.0" y="243.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1096.0" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$66/474651931.apply (43 samples, 0.38%)</title><rect x="1093.4" y="275.0" width="4.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1096.4" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (43 samples, 0.38%)</title><rect x="1093.4" y="259.0" width="4.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1096.4" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (31 samples, 0.27%)</title><rect x="1093.4" y="243.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1096.4" y="254.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (31 samples, 0.27%)</title><rect x="1093.4" y="227.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1096.4" y="238.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (31 samples, 0.27%)</title><rect x="1093.4" y="211.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1096.4" y="222.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (31 samples, 0.27%)</title><rect x="1093.4" y="195.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1096.4" y="206.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (31 samples, 0.27%)</title><rect x="1093.4" y="179.0" width="3.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1096.4" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (31 samples, 0.27%)</title><rect x="1093.4" y="163.0" width="3.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1096.4" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (31 samples, 0.27%)</title><rect x="1093.4" y="147.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1096.4" y="158.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (21 samples, 0.18%)</title><rect x="1094.4" y="131.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1097.4" y="142.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (8 samples, 0.07%)</title><rect x="1095.2" y="115.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1098.2" y="126.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (4 samples, 0.04%)</title><rect x="1095.6" y="99.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1098.6" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.04%)</title><rect x="1095.6" y="83.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1098.6" y="94.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (4 samples, 0.04%)</title><rect x="1095.6" y="67.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1098.6" y="78.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (4 samples, 0.04%)</title><rect x="1096.0" y="115.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1099.0" y="126.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (4 samples, 0.04%)</title><rect x="1096.0" y="99.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1099.0" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (4 samples, 0.04%)</title><rect x="1096.0" y="83.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1099.0" y="94.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (4 samples, 0.04%)</title><rect x="1096.0" y="67.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1099.0" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (12 samples, 0.11%)</title><rect x="1096.6" y="243.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1099.6" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (9 samples, 0.08%)</title><rect x="1096.9" y="227.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1099.9" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (9 samples, 0.08%)</title><rect x="1096.9" y="211.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1099.9" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (9 samples, 0.08%)</title><rect x="1096.9" y="195.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1099.9" y="206.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (9 samples, 0.08%)</title><rect x="1096.9" y="179.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1099.9" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (9 samples, 0.08%)</title><rect x="1096.9" y="163.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1099.9" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (9 samples, 0.08%)</title><rect x="1096.9" y="147.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1099.9" y="158.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.equals (14 samples, 0.12%)</title><rect x="1098.4" y="515.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1101.4" y="526.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (13 samples, 0.11%)</title><rect x="1098.4" y="499.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1101.4" y="510.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (4 samples, 0.04%)</title><rect x="1098.8" y="483.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1101.8" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.base (3 samples, 0.03%)</title><rect x="1099.2" y="483.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1102.2" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$72/878358964.apply (13 samples, 0.11%)</title><rect x="1099.8" y="515.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1102.8" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (13 samples, 0.11%)</title><rect x="1099.8" y="499.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1102.8" y="510.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (12 samples, 0.11%)</title><rect x="1099.8" y="483.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1102.8" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (12 samples, 0.11%)</title><rect x="1099.8" y="467.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1102.8" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (12 samples, 0.11%)</title><rect x="1099.8" y="451.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1102.8" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (12 samples, 0.11%)</title><rect x="1099.8" y="435.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1102.8" y="446.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (12 samples, 0.11%)</title><rect x="1099.8" y="419.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1102.8" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (12 samples, 0.11%)</title><rect x="1099.8" y="403.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1102.8" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (12 samples, 0.11%)</title><rect x="1099.8" y="387.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1102.8" y="398.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (12 samples, 0.11%)</title><rect x="1099.8" y="371.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1102.8" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (18 samples, 0.16%)</title><rect x="1101.2" y="595.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1104.2" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.next (8 samples, 0.07%)</title><rect x="1101.2" y="579.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1104.2" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (8 samples, 0.07%)</title><rect x="1101.2" y="563.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1104.2" y="574.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (8 samples, 0.07%)</title><rect x="1101.2" y="547.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1104.2" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (8 samples, 0.07%)</title><rect x="1101.2" y="531.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1104.2" y="542.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (10 samples, 0.09%)</title><rect x="1102.0" y="579.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1105.0" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao$$Lambda$80/527983093.apply (10 samples, 0.09%)</title><rect x="1102.0" y="563.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1105.0" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.lambda$iterator$0 (10 samples, 0.09%)</title><rect x="1102.0" y="547.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1105.0" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (7 samples, 0.06%)</title><rect x="1102.0" y="531.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1105.0" y="542.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (6 samples, 0.05%)</title><rect x="1102.0" y="515.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1105.0" y="526.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (6 samples, 0.05%)</title><rect x="1102.0" y="499.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1105.0" y="510.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (6 samples, 0.05%)</title><rect x="1102.0" y="483.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1105.0" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (6 samples, 0.05%)</title><rect x="1102.0" y="467.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1105.0" y="478.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (6 samples, 0.05%)</title><rect x="1102.0" y="451.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1105.0" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.03%)</title><rect x="1102.3" y="435.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1105.3" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.03%)</title><rect x="1102.3" y="419.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1105.3" y="430.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (3 samples, 0.03%)</title><rect x="1102.3" y="403.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1105.3" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Value.getData (3 samples, 0.03%)</title><rect x="1102.7" y="531.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1105.7" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/StorageSession.toByteArray (34 samples, 0.30%)</title><rect x="1103.0" y="627.0" width="3.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1106.0" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (29 samples, 0.25%)</title><rect x="1103.5" y="611.0" width="3.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1106.5" y="622.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (17 samples, 0.15%)</title><rect x="1103.5" y="595.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1106.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (13 samples, 0.11%)</title><rect x="1104.0" y="579.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1107.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (12 samples, 0.11%)</title><rect x="1104.1" y="563.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1107.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (12 samples, 0.11%)</title><rect x="1104.1" y="547.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1107.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitiveArray (10 samples, 0.09%)</title><rect x="1104.3" y="531.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1107.3" y="542.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (7 samples, 0.06%)</title><rect x="1104.6" y="515.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1107.6" y="526.0"></text>
</g>
<g>
<title>gettimeofday (7 samples, 0.06%)</title><rect x="1104.6" y="499.0" width="0.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1107.6" y="510.0"></text>
</g>
<g>
<title>[vdso] (6 samples, 0.05%)</title><rect x="1104.7" y="483.0" width="0.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1107.7" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (12 samples, 0.11%)</title><rect x="1105.3" y="595.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1108.3" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (9 samples, 0.08%)</title><rect x="1105.6" y="579.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1108.6" y="590.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (5 samples, 0.04%)</title><rect x="1106.0" y="563.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1109.0" y="574.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (5 samples, 0.04%)</title><rect x="1106.5" y="723.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1109.5" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (3 samples, 0.03%)</title><rect x="1106.6" y="707.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1109.6" y="718.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.03%)</title><rect x="1106.6" y="691.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1109.6" y="702.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.03%)</title><rect x="1106.6" y="675.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1109.6" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (3 samples, 0.03%)</title><rect x="1106.6" y="659.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1109.6" y="670.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (66 samples, 0.58%)</title><rect x="1107.2" y="739.0" width="6.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1110.2" y="750.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (66 samples, 0.58%)</title><rect x="1107.2" y="723.0" width="6.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1110.2" y="734.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.05%)</title><rect x="1107.5" y="707.0" width="0.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1110.5" y="718.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.05%)</title><rect x="1107.5" y="691.0" width="0.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1110.5" y="702.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (5 samples, 0.04%)</title><rect x="1107.5" y="675.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1110.5" y="686.0"></text>
</g>
<g>
<title>__libc_recv (57 samples, 0.50%)</title><rect x="1108.1" y="707.0" width="5.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1111.1" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (53 samples, 0.46%)</title><rect x="1108.5" y="691.0" width="5.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1111.5" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (53 samples, 0.46%)</title><rect x="1108.5" y="675.0" width="5.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1111.5" y="686.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (50 samples, 0.44%)</title><rect x="1108.7" y="659.0" width="5.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1111.7" y="670.0"></text>
</g>
<g>
<title>__sys_recvfrom (48 samples, 0.42%)</title><rect x="1108.9" y="643.0" width="5.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1111.9" y="654.0"></text>
</g>
<g>
<title>inet_recvmsg (34 samples, 0.30%)</title><rect x="1109.1" y="627.0" width="3.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1112.1" y="638.0"></text>
</g>
<g>
<title>tcp_recvmsg (34 samples, 0.30%)</title><rect x="1109.1" y="611.0" width="3.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1112.1" y="622.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (9 samples, 0.08%)</title><rect x="1109.9" y="595.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1112.9" y="606.0"></text>
</g>
<g>
<title>__ip_queue_xmit (9 samples, 0.08%)</title><rect x="1109.9" y="579.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1112.9" y="590.0"></text>
</g>
<g>
<title>ip_output (6 samples, 0.05%)</title><rect x="1110.3" y="563.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1113.3" y="574.0"></text>
</g>
<g>
<title>ip_finish_output2 (6 samples, 0.05%)</title><rect x="1110.3" y="547.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1113.3" y="558.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (6 samples, 0.05%)</title><rect x="1110.3" y="531.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1113.3" y="542.0"></text>
</g>
<g>
<title>do_softirq.part.0 (6 samples, 0.05%)</title><rect x="1110.3" y="515.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1113.3" y="526.0"></text>
</g>
<g>
<title>do_softirq_own_stack (6 samples, 0.05%)</title><rect x="1110.3" y="499.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1113.3" y="510.0"></text>
</g>
<g>
<title>__softirqentry_text_start (6 samples, 0.05%)</title><rect x="1110.3" y="483.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1113.3" y="494.0"></text>
</g>
<g>
<title>net_rx_action (6 samples, 0.05%)</title><rect x="1110.3" y="467.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1113.3" y="478.0"></text>
</g>
<g>
<title>process_backlog (6 samples, 0.05%)</title><rect x="1110.3" y="451.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1113.3" y="462.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (6 samples, 0.05%)</title><rect x="1110.3" y="435.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1113.3" y="446.0"></text>
</g>
<g>
<title>ip_rcv (6 samples, 0.05%)</title><rect x="1110.3" y="419.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1113.3" y="430.0"></text>
</g>
<g>
<title>ip_local_deliver (5 samples, 0.04%)</title><rect x="1110.3" y="403.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1113.3" y="414.0"></text>
</g>
<g>
<title>nf_hook_slow (3 samples, 0.03%)</title><rect x="1110.5" y="387.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1113.5" y="398.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (3 samples, 0.03%)</title><rect x="1110.5" y="371.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1113.5" y="382.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (11 samples, 0.10%)</title><rect x="1111.2" y="595.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1114.2" y="606.0"></text>
</g>
<g>
<title>__skb_datagram_iter (11 samples, 0.10%)</title><rect x="1111.2" y="579.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1114.2" y="590.0"></text>
</g>
<g>
<title>_copy_to_iter (6 samples, 0.05%)</title><rect x="1111.3" y="563.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1114.3" y="574.0"></text>
</g>
<g>
<title>copyout (6 samples, 0.05%)</title><rect x="1111.3" y="547.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1114.3" y="558.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (6 samples, 0.05%)</title><rect x="1111.3" y="531.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1114.3" y="542.0"></text>
</g>
<g>
<title>simple_copy_to_iter (4 samples, 0.04%)</title><rect x="1111.9" y="563.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1114.9" y="574.0"></text>
</g>
<g>
<title>__check_object_size (4 samples, 0.04%)</title><rect x="1111.9" y="547.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1114.9" y="558.0"></text>
</g>
<g>
<title>sock_recvmsg (6 samples, 0.05%)</title><rect x="1112.6" y="627.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1115.6" y="638.0"></text>
</g>
<g>
<title>security_socket_recvmsg (6 samples, 0.05%)</title><rect x="1112.6" y="611.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1115.6" y="622.0"></text>
</g>
<g>
<title>sock_has_perm (6 samples, 0.05%)</title><rect x="1112.6" y="595.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1115.6" y="606.0"></text>
</g>
<g>
<title>sockfd_lookup_light (6 samples, 0.05%)</title><rect x="1113.3" y="627.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1116.3" y="638.0"></text>
</g>
<g>
<title>__fget_light (6 samples, 0.05%)</title><rect x="1113.3" y="611.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1116.3" y="622.0"></text>
</g>
<g>
<title>__fget (5 samples, 0.04%)</title><rect x="1113.4" y="595.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1116.4" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/StorageSession.processWrite (19 samples, 0.17%)</title><rect x="1114.0" y="755.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1117.0" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/StorageSession.next (19 samples, 0.17%)</title><rect x="1114.0" y="739.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1117.0" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (8 samples, 0.07%)</title><rect x="1114.0" y="723.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1117.0" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (8 samples, 0.07%)</title><rect x="1114.0" y="707.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1117.0" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (8 samples, 0.07%)</title><rect x="1114.0" y="691.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1117.0" y="702.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (8 samples, 0.07%)</title><rect x="1114.0" y="675.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1117.0" y="686.0"></text>
</g>
<g>
<title>.annobin_send.c (6 samples, 0.05%)</title><rect x="1114.1" y="659.0" width="0.6" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1117.1" y="670.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.05%)</title><rect x="1114.1" y="643.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1117.1" y="654.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.05%)</title><rect x="1114.1" y="627.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1117.1" y="638.0"></text>
</g>
<g>
<title>__x64_sys_sendto (6 samples, 0.05%)</title><rect x="1114.1" y="611.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1117.1" y="622.0"></text>
</g>
<g>
<title>__sys_sendto (6 samples, 0.05%)</title><rect x="1114.1" y="595.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1117.1" y="606.0"></text>
</g>
<g>
<title>sock_sendmsg (6 samples, 0.05%)</title><rect x="1114.1" y="579.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1117.1" y="590.0"></text>
</g>
<g>
<title>tcp_sendmsg (5 samples, 0.04%)</title><rect x="1114.2" y="563.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1117.2" y="574.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (5 samples, 0.04%)</title><rect x="1114.2" y="547.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1117.2" y="558.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (4 samples, 0.04%)</title><rect x="1114.2" y="531.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1117.2" y="542.0"></text>
</g>
<g>
<title>tcp_write_xmit (4 samples, 0.04%)</title><rect x="1114.2" y="515.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1117.2" y="526.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (4 samples, 0.04%)</title><rect x="1114.2" y="499.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1117.2" y="510.0"></text>
</g>
<g>
<title>__ip_queue_xmit (4 samples, 0.04%)</title><rect x="1114.2" y="483.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1117.2" y="494.0"></text>
</g>
<g>
<title>ip_output (4 samples, 0.04%)</title><rect x="1114.2" y="467.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1117.2" y="478.0"></text>
</g>
<g>
<title>ip_finish_output2 (4 samples, 0.04%)</title><rect x="1114.2" y="451.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1117.2" y="462.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (3 samples, 0.03%)</title><rect x="1114.3" y="435.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1117.3" y="446.0"></text>
</g>
<g>
<title>do_softirq.part.0 (3 samples, 0.03%)</title><rect x="1114.3" y="419.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1117.3" y="430.0"></text>
</g>
<g>
<title>do_softirq_own_stack (3 samples, 0.03%)</title><rect x="1114.3" y="403.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1117.3" y="414.0"></text>
</g>
<g>
<title>__softirqentry_text_start (3 samples, 0.03%)</title><rect x="1114.3" y="387.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1117.3" y="398.0"></text>
</g>
<g>
<title>net_rx_action (3 samples, 0.03%)</title><rect x="1114.3" y="371.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1117.3" y="382.0"></text>
</g>
<g>
<title>process_backlog (3 samples, 0.03%)</title><rect x="1114.3" y="355.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1117.3" y="366.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (3 samples, 0.03%)</title><rect x="1114.3" y="339.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1117.3" y="350.0"></text>
</g>
<g>
<title>ip_rcv (3 samples, 0.03%)</title><rect x="1114.3" y="323.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1117.3" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$UntilIterator.next (10 samples, 0.09%)</title><rect x="1114.9" y="723.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1117.9" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$UntilIterator.next (10 samples, 0.09%)</title><rect x="1114.9" y="707.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1117.9" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (9 samples, 0.08%)</title><rect x="1114.9" y="691.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1117.9" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (9 samples, 0.08%)</title><rect x="1114.9" y="675.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1117.9" y="686.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (9 samples, 0.08%)</title><rect x="1114.9" y="659.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1117.9" y="670.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (9 samples, 0.08%)</title><rect x="1114.9" y="643.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1117.9" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (9 samples, 0.08%)</title><rect x="1114.9" y="627.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1117.9" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (8 samples, 0.07%)</title><rect x="1114.9" y="611.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1117.9" y="622.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (3 samples, 0.03%)</title><rect x="1114.9" y="595.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1117.9" y="606.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (3 samples, 0.03%)</title><rect x="1114.9" y="579.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1117.9" y="590.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (3 samples, 0.03%)</title><rect x="1114.9" y="563.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1117.9" y="574.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (3 samples, 0.03%)</title><rect x="1114.9" y="547.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1117.9" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (3 samples, 0.03%)</title><rect x="1114.9" y="531.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1117.9" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/123226378.compare (3 samples, 0.03%)</title><rect x="1114.9" y="515.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1117.9" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (3 samples, 0.03%)</title><rect x="1114.9" y="499.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1117.9" y="510.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (3 samples, 0.03%)</title><rect x="1114.9" y="483.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1117.9" y="494.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (3 samples, 0.03%)</title><rect x="1114.9" y="467.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1117.9" y="478.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (3 samples, 0.03%)</title><rect x="1114.9" y="451.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1117.9" y="462.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (3 samples, 0.03%)</title><rect x="1114.9" y="435.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1117.9" y="446.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$67/1497891062.compare (3 samples, 0.03%)</title><rect x="1114.9" y="419.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1117.9" y="430.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (3 samples, 0.03%)</title><rect x="1114.9" y="403.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1117.9" y="414.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (5 samples, 0.04%)</title><rect x="1115.2" y="595.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1118.2" y="606.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (5 samples, 0.04%)</title><rect x="1115.2" y="579.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1118.2" y="590.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (5 samples, 0.04%)</title><rect x="1115.2" y="563.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1118.2" y="574.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (5 samples, 0.04%)</title><rect x="1115.2" y="547.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1118.2" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (5 samples, 0.04%)</title><rect x="1115.2" y="531.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1118.2" y="542.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (5 samples, 0.04%)</title><rect x="1115.2" y="515.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1118.2" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/123226378.compare (3 samples, 0.03%)</title><rect x="1115.4" y="499.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1118.4" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (3 samples, 0.03%)</title><rect x="1115.4" y="483.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1118.4" y="494.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (3 samples, 0.03%)</title><rect x="1115.4" y="467.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1118.4" y="478.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (3 samples, 0.03%)</title><rect x="1115.4" y="451.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1118.4" y="462.0"></text>
</g>
<g>
<title>[tid=25354] (169 samples, 1.48%)</title><rect x="1115.9" y="803.0" width="17.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1118.9" y="814.0"></text>
</g>
<g>
<title>start_thread (167 samples, 1.46%)</title><rect x="1116.1" y="787.0" width="17.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1119.1" y="798.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (167 samples, 1.46%)</title><rect x="1116.1" y="771.0" width="17.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1119.1" y="782.0"></text>
</g>
<g>
<title>GangWorker::loop() (167 samples, 1.46%)</title><rect x="1116.1" y="755.0" width="17.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1119.1" y="766.0"></text>
</g>
<g>
<title>G1FreeCollectionSetTask::work(unsigned int) (3 samples, 0.03%)</title><rect x="1116.1" y="739.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1119.1" y="750.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (160 samples, 1.40%)</title><rect x="1116.5" y="739.0" width="16.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1119.5" y="750.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (74 samples, 0.65%)</title><rect x="1116.5" y="723.0" width="7.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1119.5" y="734.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (48 samples, 0.42%)</title><rect x="1116.7" y="707.0" width="4.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1119.7" y="718.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (30 samples, 0.26%)</title><rect x="1118.3" y="691.0" width="3.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1121.3" y="702.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (11 samples, 0.10%)</title><rect x="1120.3" y="675.0" width="1.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1123.3" y="686.0"></text>
</g>
<g>
<title>SpinPause (23 samples, 0.20%)</title><rect x="1121.7" y="707.0" width="2.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1124.7" y="718.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (83 samples, 0.73%)</title><rect x="1124.1" y="723.0" width="8.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1127.1" y="734.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (83 samples, 0.73%)</title><rect x="1124.1" y="707.0" width="8.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1127.1" y="718.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (83 samples, 0.73%)</title><rect x="1124.1" y="691.0" width="8.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1127.1" y="702.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (83 samples, 0.73%)</title><rect x="1124.1" y="675.0" width="8.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1127.1" y="686.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (83 samples, 0.73%)</title><rect x="1124.1" y="659.0" width="8.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1127.1" y="670.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (80 samples, 0.70%)</title><rect x="1124.2" y="643.0" width="8.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1127.2" y="654.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (47 samples, 0.41%)</title><rect x="1127.2" y="627.0" width="4.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1130.2" y="638.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (12 samples, 0.11%)</title><rect x="1130.8" y="611.0" width="1.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1133.8" y="622.0"></text>
</g>
<g>
<title>[tid=25359] (34 samples, 0.30%)</title><rect x="1133.5" y="803.0" width="3.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1136.5" y="814.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.06%)</title><rect x="1133.5" y="787.0" width="0.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1136.5" y="798.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (3 samples, 0.03%)</title><rect x="1133.5" y="771.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1136.5" y="782.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.03%)</title><rect x="1133.5" y="755.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1136.5" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.03%)</title><rect x="1133.5" y="739.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1136.5" y="750.0"></text>
</g>
<g>
<title>__vsnprintf_internal (3 samples, 0.03%)</title><rect x="1133.8" y="771.0" width="0.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1136.8" y="782.0"></text>
</g>
<g>
<title>start_thread (26 samples, 0.23%)</title><rect x="1134.3" y="787.0" width="2.7" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="1137.3" y="798.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (26 samples, 0.23%)</title><rect x="1134.3" y="771.0" width="2.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1137.3" y="782.0"></text>
</g>
<g>
<title>VMThread::run() (26 samples, 0.23%)</title><rect x="1134.3" y="755.0" width="2.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1137.3" y="766.0"></text>
</g>
<g>
<title>VMThread::loop() (26 samples, 0.23%)</title><rect x="1134.3" y="739.0" width="2.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1137.3" y="750.0"></text>
</g>
<g>
<title>SafepointSynchronize::begin() (4 samples, 0.04%)</title><rect x="1134.3" y="723.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1137.3" y="734.0"></text>
</g>
<g>
<title>SpinPause (3 samples, 0.03%)</title><rect x="1134.7" y="723.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1137.7" y="734.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.54] (10 samples, 0.09%)</title><rect x="1135.0" y="723.0" width="1.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1138.0" y="734.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (10 samples, 0.09%)</title><rect x="1135.0" y="707.0" width="1.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1138.0" y="718.0"></text>
</g>
<g>
<title>VM_G1CollectForAllocation::doit() (10 samples, 0.09%)</title><rect x="1135.0" y="691.0" width="1.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1138.0" y="702.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (9 samples, 0.08%)</title><rect x="1135.0" y="675.0" width="1.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1138.0" y="686.0"></text>
</g>
<g>
<title>__GI_sched_yield (8 samples, 0.07%)</title><rect x="1136.2" y="723.0" width="0.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1139.2" y="734.0"></text>
</g>
<g>
<title>[tid=25388] (169 samples, 1.48%)</title><rect x="1137.2" y="803.0" width="17.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1140.2" y="814.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.03%)</title><rect x="1137.2" y="787.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1140.2" y="798.0"></text>
</g>
<g>
<title>start_thread (166 samples, 1.45%)</title><rect x="1137.5" y="787.0" width="17.2" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1140.5" y="798.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (166 samples, 1.45%)</title><rect x="1137.5" y="771.0" width="17.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1140.5" y="782.0"></text>
</g>
<g>
<title>GangWorker::loop() (166 samples, 1.45%)</title><rect x="1137.5" y="755.0" width="17.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1140.5" y="766.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (164 samples, 1.44%)</title><rect x="1137.7" y="739.0" width="17.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1140.7" y="750.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (65 samples, 0.57%)</title><rect x="1137.7" y="723.0" width="6.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1140.7" y="734.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (42 samples, 0.37%)</title><rect x="1137.8" y="707.0" width="4.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1140.8" y="718.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (23 samples, 0.20%)</title><rect x="1139.8" y="691.0" width="2.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1142.8" y="702.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (7 samples, 0.06%)</title><rect x="1141.5" y="675.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1144.5" y="686.0"></text>
</g>
<g>
<title>SpinPause (20 samples, 0.18%)</title><rect x="1142.4" y="707.0" width="2.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1145.4" y="718.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (91 samples, 0.80%)</title><rect x="1144.4" y="723.0" width="9.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1147.4" y="734.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (91 samples, 0.80%)</title><rect x="1144.4" y="707.0" width="9.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1147.4" y="718.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (91 samples, 0.80%)</title><rect x="1144.4" y="691.0" width="9.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1147.4" y="702.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (91 samples, 0.80%)</title><rect x="1144.4" y="675.0" width="9.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1147.4" y="686.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (91 samples, 0.80%)</title><rect x="1144.4" y="659.0" width="9.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1147.4" y="670.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (85 samples, 0.74%)</title><rect x="1144.4" y="643.0" width="8.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1147.4" y="654.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (54 samples, 0.47%)</title><rect x="1147.3" y="627.0" width="5.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1150.3" y="638.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (15 samples, 0.13%)</title><rect x="1151.4" y="611.0" width="1.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1154.4" y="622.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.121] (6 samples, 0.05%)</title><rect x="1153.2" y="643.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1156.2" y="654.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (5 samples, 0.04%)</title><rect x="1153.2" y="627.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1156.2" y="638.0"></text>
</g>
<g>
<title>void G1ScanObjsDuringUpdateRSClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) (4 samples, 0.04%)</title><rect x="1153.3" y="611.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1156.3" y="622.0"></text>
</g>
<g>
<title>G1RemSet::scan_rem_set(G1ParScanThreadState*, unsigned int) (3 samples, 0.03%)</title><rect x="1153.8" y="723.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1156.8" y="734.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const (3 samples, 0.03%)</title><rect x="1153.8" y="707.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1156.8" y="718.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::do_heap_region(HeapRegion*) (3 samples, 0.03%)</title><rect x="1153.8" y="691.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1156.8" y="702.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::scan_rem_set_roots(HeapRegion*) (3 samples, 0.03%)</title><rect x="1153.8" y="675.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1156.8" y="686.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (5 samples, 0.04%)</title><rect x="1154.2" y="723.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1157.2" y="734.0"></text>
</g>
<g>
<title>[tid=25389] (172 samples, 1.51%)</title><rect x="1154.7" y="803.0" width="17.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1157.7" y="814.0"></text>
</g>
<g>
<title>start_thread (171 samples, 1.50%)</title><rect x="1154.8" y="787.0" width="17.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1157.8" y="798.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (171 samples, 1.50%)</title><rect x="1154.8" y="771.0" width="17.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1157.8" y="782.0"></text>
</g>
<g>
<title>GangWorker::loop() (171 samples, 1.50%)</title><rect x="1154.8" y="755.0" width="17.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1157.8" y="766.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (168 samples, 1.47%)</title><rect x="1154.9" y="739.0" width="17.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1157.9" y="750.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (57 samples, 0.50%)</title><rect x="1154.9" y="723.0" width="5.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1157.9" y="734.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (36 samples, 0.32%)</title><rect x="1154.9" y="707.0" width="3.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1157.9" y="718.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (25 samples, 0.22%)</title><rect x="1155.9" y="691.0" width="2.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1158.9" y="702.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (6 samples, 0.05%)</title><rect x="1157.9" y="675.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1160.9" y="686.0"></text>
</g>
<g>
<title>SpinPause (21 samples, 0.18%)</title><rect x="1158.6" y="707.0" width="2.2" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1161.6" y="718.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (99 samples, 0.87%)</title><rect x="1160.8" y="723.0" width="10.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1163.8" y="734.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (99 samples, 0.87%)</title><rect x="1160.8" y="707.0" width="10.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1163.8" y="718.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (99 samples, 0.87%)</title><rect x="1160.8" y="691.0" width="10.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1163.8" y="702.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (99 samples, 0.87%)</title><rect x="1160.8" y="675.0" width="10.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1163.8" y="686.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (98 samples, 0.86%)</title><rect x="1160.9" y="659.0" width="10.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1163.9" y="670.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (94 samples, 0.82%)</title><rect x="1160.9" y="643.0" width="9.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1163.9" y="654.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (54 samples, 0.47%)</title><rect x="1164.9" y="627.0" width="5.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1167.9" y="638.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (13 samples, 0.11%)</title><rect x="1169.1" y="611.0" width="1.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1172.1" y="622.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.121] (4 samples, 0.04%)</title><rect x="1170.6" y="643.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1173.6" y="654.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (3 samples, 0.03%)</title><rect x="1170.6" y="627.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1173.6" y="638.0"></text>
</g>
<g>
<title>G1RemSet::scan_rem_set(G1ParScanThreadState*, unsigned int) (7 samples, 0.06%)</title><rect x="1171.0" y="723.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1174.0" y="734.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const (7 samples, 0.06%)</title><rect x="1171.0" y="707.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1174.0" y="718.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::do_heap_region(HeapRegion*) (7 samples, 0.06%)</title><rect x="1171.0" y="691.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1174.0" y="702.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::scan_rem_set_roots(HeapRegion*) (7 samples, 0.06%)</title><rect x="1171.0" y="675.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1174.0" y="686.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (5 samples, 0.04%)</title><rect x="1171.0" y="659.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1174.0" y="670.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (3 samples, 0.03%)</title><rect x="1171.2" y="643.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1174.2" y="654.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (5 samples, 0.04%)</title><rect x="1171.7" y="723.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1174.7" y="734.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (4 samples, 0.04%)</title><rect x="1171.7" y="707.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1174.7" y="718.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (3 samples, 0.03%)</title><rect x="1171.8" y="691.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1174.8" y="702.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (3 samples, 0.03%)</title><rect x="1171.8" y="675.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1174.8" y="686.0"></text>
</g>
<g>
<title>[tid=25390] (170 samples, 1.49%)</title><rect x="1172.4" y="803.0" width="17.6" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1175.4" y="814.0"></text>
</g>
<g>
<title>start_thread (168 samples, 1.47%)</title><rect x="1172.6" y="787.0" width="17.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1175.6" y="798.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (168 samples, 1.47%)</title><rect x="1172.6" y="771.0" width="17.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1175.6" y="782.0"></text>
</g>
<g>
<title>GangWorker::loop() (168 samples, 1.47%)</title><rect x="1172.6" y="755.0" width="17.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1175.6" y="766.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (164 samples, 1.44%)</title><rect x="1172.6" y="739.0" width="17.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1175.6" y="750.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (58 samples, 0.51%)</title><rect x="1172.6" y="723.0" width="6.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1175.6" y="734.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (35 samples, 0.31%)</title><rect x="1172.8" y="707.0" width="3.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1175.8" y="718.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (21 samples, 0.18%)</title><rect x="1174.1" y="691.0" width="2.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1177.1" y="702.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (6 samples, 0.05%)</title><rect x="1175.6" y="675.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1178.6" y="686.0"></text>
</g>
<g>
<title>SpinPause (21 samples, 0.18%)</title><rect x="1176.5" y="707.0" width="2.1" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="1179.5" y="718.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (96 samples, 0.84%)</title><rect x="1178.7" y="723.0" width="10.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1181.7" y="734.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (95 samples, 0.83%)</title><rect x="1178.8" y="707.0" width="9.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1181.8" y="718.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (95 samples, 0.83%)</title><rect x="1178.8" y="691.0" width="9.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1181.8" y="702.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (95 samples, 0.83%)</title><rect x="1178.8" y="675.0" width="9.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1181.8" y="686.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (95 samples, 0.83%)</title><rect x="1178.8" y="659.0" width="9.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1181.8" y="670.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (92 samples, 0.81%)</title><rect x="1178.8" y="643.0" width="9.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1181.8" y="654.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (51 samples, 0.45%)</title><rect x="1182.9" y="627.0" width="5.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1185.9" y="638.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (10 samples, 0.09%)</title><rect x="1187.0" y="611.0" width="1.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1190.0" y="622.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.121] (3 samples, 0.03%)</title><rect x="1188.3" y="643.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1191.3" y="654.0"></text>
</g>
<g>
<title>G1RemSet::scan_rem_set(G1ParScanThreadState*, unsigned int) (5 samples, 0.04%)</title><rect x="1188.7" y="723.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1191.7" y="734.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const (5 samples, 0.04%)</title><rect x="1188.7" y="707.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1191.7" y="718.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::do_heap_region(HeapRegion*) (5 samples, 0.04%)</title><rect x="1188.7" y="691.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1191.7" y="702.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::scan_rem_set_roots(HeapRegion*) (4 samples, 0.04%)</title><rect x="1188.8" y="675.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1191.8" y="686.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (4 samples, 0.04%)</title><rect x="1188.8" y="659.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1191.8" y="670.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (3 samples, 0.03%)</title><rect x="1188.9" y="643.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1191.9" y="654.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (4 samples, 0.04%)</title><rect x="1189.2" y="723.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1192.2" y="734.0"></text>
</g>
<g>
<title>ParallelSPCleanupTask::work(unsigned int) (4 samples, 0.04%)</title><rect x="1189.6" y="739.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1192.6" y="750.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_threads_do(bool, ThreadClosure*) (4 samples, 0.04%)</title><rect x="1189.6" y="723.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1192.6" y="734.0"></text>
</g>
<g>
<title>JavaThread::nmethods_do(CodeBlobClosure*) [clone .part.63] (3 samples, 0.03%)</title><rect x="1189.6" y="707.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1192.6" y="718.0"></text>
</g>
</g>
</svg>
