<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="694" onload="init(evt)" viewBox="0 0 1200 694" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="677"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="677"> </text>
<g id="frames">
<g>
<title>all (193,153 samples, 100.00%)</title><rect x="10.0" y="643.0" width="1180.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="13.0" y="654.0">all</text>
</g>
<g>
<title>[NIO Acceptor 0.0.0.0:8080 tid=25374] (845 samples, 0.44%)</title><rect x="10.0" y="627.0" width="5.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="13.0" y="638.0"></text>
</g>
<g>
<title>one/nio/server/AcceptorThread.run (845 samples, 0.44%)</title><rect x="10.0" y="611.0" width="5.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.0" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.createSession (837 samples, 0.43%)</title><rect x="10.0" y="595.0" width="5.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.0" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.createSession (837 samples, 0.43%)</title><rect x="10.0" y="579.0" width="5.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="13.0" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/StorageSession.&lt;init&gt; (832 samples, 0.43%)</title><rect x="10.1" y="563.0" width="5.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="13.1" y="574.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.&lt;init&gt; (832 samples, 0.43%)</title><rect x="10.1" y="547.0" width="5.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.1" y="558.0"></text>
</g>
<g>
<title>byte[] (86 samples, 0.04%)</title><rect x="10.1" y="531.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="13.1" y="542.0"></text>
</g>
<g>
<title>byte[] (746 samples, 0.39%)</title><rect x="10.6" y="531.0" width="4.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="13.6" y="542.0"></text>
</g>
<g>
<title>[NIO Selector #0 tid=25370] (48,268 samples, 24.99%)</title><rect x="15.2" y="627.0" width="294.8" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="18.2" y="638.0">[NIO Selector #0 tid=25370]</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (48,268 samples, 24.99%)</title><rect x="15.2" y="611.0" width="294.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="18.2" y="622.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (47 samples, 0.02%)</title><rect x="15.2" y="595.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="18.2" y="606.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (47 samples, 0.02%)</title><rect x="15.2" y="579.0" width="0.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="18.2" y="590.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (48,221 samples, 24.97%)</title><rect x="15.4" y="595.0" width="294.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="18.4" y="606.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (48,098 samples, 24.90%)</title><rect x="15.4" y="579.0" width="293.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="18.4" y="590.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (48,098 samples, 24.90%)</title><rect x="15.4" y="563.0" width="293.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="18.4" y="574.0">one/nio/http/HttpSession.processHttpBuf..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (47,909 samples, 24.80%)</title><rect x="15.4" y="547.0" width="292.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="18.4" y="558.0">one/nio/http/HttpSession.handleParsedRe..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (47,909 samples, 24.80%)</title><rect x="15.4" y="531.0" width="292.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="18.4" y="542.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler2_entities.handleRequest (47,887 samples, 24.79%)</title><rect x="15.4" y="515.0" width="292.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="18.4" y="526.0">RequestHandler2_entities.handleRequest</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (42 samples, 0.02%)</title><rect x="15.4" y="499.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="18.4" y="510.0"></text>
</g>
<g>
<title>java/lang/String.substring (42 samples, 0.02%)</title><rect x="15.4" y="483.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="18.4" y="494.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (42 samples, 0.02%)</title><rect x="15.4" y="467.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="18.4" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.entities (47,845 samples, 24.77%)</title><rect x="15.7" y="499.0" width="292.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="18.7" y="510.0">ru/mail/polis/service/shakhmin/AsyncHtt..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (50 samples, 0.03%)</title><rect x="15.9" y="483.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="18.9" y="494.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (50 samples, 0.03%)</title><rect x="15.9" y="467.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="18.9" y="478.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (50 samples, 0.03%)</title><rect x="15.9" y="451.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="18.9" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.range (29,432 samples, 15.24%)</title><rect x="16.2" y="483.0" width="179.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="19.2" y="494.0">ru/mail/polis/dao/DAO.r..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.until (1,356 samples, 0.70%)</title><rect x="16.4" y="467.0" width="8.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="19.4" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$UntilIterator.&lt;init&gt; (1,340 samples, 0.69%)</title><rect x="16.5" y="451.0" width="8.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="19.5" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (1,282 samples, 0.66%)</title><rect x="16.5" y="435.0" width="7.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="19.5" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (1,282 samples, 0.66%)</title><rect x="16.5" y="419.0" width="7.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="19.5" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (1,282 samples, 0.66%)</title><rect x="16.5" y="403.0" width="7.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="19.5" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (1,282 samples, 0.66%)</title><rect x="16.5" y="387.0" width="7.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="19.5" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (1,282 samples, 0.66%)</title><rect x="16.5" y="371.0" width="7.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="19.5" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1,164 samples, 0.60%)</title><rect x="16.5" y="355.0" width="7.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="19.5" y="366.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (458 samples, 0.24%)</title><rect x="16.6" y="339.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="19.6" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (458 samples, 0.24%)</title><rect x="16.6" y="323.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="19.6" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (458 samples, 0.24%)</title><rect x="16.6" y="307.0" width="2.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="19.6" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (458 samples, 0.24%)</title><rect x="16.6" y="291.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="19.6" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (458 samples, 0.24%)</title><rect x="16.6" y="275.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="19.6" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/123226378.compare (458 samples, 0.24%)</title><rect x="16.6" y="259.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="19.6" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (458 samples, 0.24%)</title><rect x="16.6" y="243.0" width="2.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="19.6" y="254.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (458 samples, 0.24%)</title><rect x="16.6" y="227.0" width="2.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="19.6" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (458 samples, 0.24%)</title><rect x="16.6" y="211.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="19.6" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (458 samples, 0.24%)</title><rect x="16.6" y="195.0" width="2.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="19.6" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (458 samples, 0.24%)</title><rect x="16.6" y="179.0" width="2.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="19.6" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$67/1497891062.compare (458 samples, 0.24%)</title><rect x="16.6" y="163.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="19.6" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (458 samples, 0.24%)</title><rect x="16.6" y="147.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="19.6" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$66/474651931.apply (458 samples, 0.24%)</title><rect x="16.6" y="131.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="19.6" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (458 samples, 0.24%)</title><rect x="16.6" y="115.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="19.6" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (424 samples, 0.22%)</title><rect x="16.6" y="99.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="19.6" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (424 samples, 0.22%)</title><rect x="16.6" y="83.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="19.6" y="94.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (424 samples, 0.22%)</title><rect x="16.6" y="67.0" width="2.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="19.6" y="78.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (689 samples, 0.36%)</title><rect x="19.4" y="339.0" width="4.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="22.4" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (689 samples, 0.36%)</title><rect x="19.4" y="323.0" width="4.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="22.4" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (689 samples, 0.36%)</title><rect x="19.4" y="307.0" width="4.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="22.4" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (689 samples, 0.36%)</title><rect x="19.4" y="291.0" width="4.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="22.4" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (689 samples, 0.36%)</title><rect x="19.4" y="275.0" width="4.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="22.4" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (689 samples, 0.36%)</title><rect x="19.4" y="259.0" width="4.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="22.4" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (466 samples, 0.24%)</title><rect x="19.4" y="243.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="22.4" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (466 samples, 0.24%)</title><rect x="19.4" y="227.0" width="2.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="22.4" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (466 samples, 0.24%)</title><rect x="19.4" y="211.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="22.4" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (466 samples, 0.24%)</title><rect x="19.4" y="195.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="22.4" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (119 samples, 0.06%)</title><rect x="19.6" y="179.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="22.6" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (58 samples, 0.03%)</title><rect x="19.6" y="163.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="22.6" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (58 samples, 0.03%)</title><rect x="19.6" y="147.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="22.6" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (58 samples, 0.03%)</title><rect x="19.6" y="131.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="22.6" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (61 samples, 0.03%)</title><rect x="19.9" y="163.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="22.9" y="174.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (61 samples, 0.03%)</title><rect x="19.9" y="147.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="22.9" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (103 samples, 0.05%)</title><rect x="20.3" y="179.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="23.3" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (55 samples, 0.03%)</title><rect x="20.3" y="163.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="23.3" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (55 samples, 0.03%)</title><rect x="20.3" y="147.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="23.3" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (55 samples, 0.03%)</title><rect x="20.3" y="131.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="23.3" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (48 samples, 0.02%)</title><rect x="20.6" y="163.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="23.6" y="174.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (48 samples, 0.02%)</title><rect x="20.6" y="147.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="23.6" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.timestampAt (61 samples, 0.03%)</title><rect x="20.9" y="179.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="23.9" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (61 samples, 0.03%)</title><rect x="20.9" y="163.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="23.9" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (61 samples, 0.03%)</title><rect x="20.9" y="147.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="23.9" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (61 samples, 0.03%)</title><rect x="20.9" y="131.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="23.9" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.valueAt (122 samples, 0.06%)</title><rect x="21.3" y="179.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="24.3" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (55 samples, 0.03%)</title><rect x="21.3" y="163.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="24.3" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (55 samples, 0.03%)</title><rect x="21.3" y="147.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="24.3" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (55 samples, 0.03%)</title><rect x="21.3" y="131.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="24.3" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (67 samples, 0.03%)</title><rect x="21.6" y="163.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="24.6" y="174.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (67 samples, 0.03%)</title><rect x="21.6" y="147.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="24.6" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/123226378.compare (223 samples, 0.12%)</title><rect x="22.2" y="243.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="25.2" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (223 samples, 0.12%)</title><rect x="22.2" y="227.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="25.2" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (223 samples, 0.12%)</title><rect x="22.2" y="211.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="25.2" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (223 samples, 0.12%)</title><rect x="22.2" y="195.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="25.2" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (223 samples, 0.12%)</title><rect x="22.2" y="179.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="25.2" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (223 samples, 0.12%)</title><rect x="22.2" y="163.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="25.2" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$67/1497891062.compare (223 samples, 0.12%)</title><rect x="22.2" y="147.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="25.2" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (223 samples, 0.12%)</title><rect x="22.2" y="131.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="25.2" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$66/474651931.apply (223 samples, 0.12%)</title><rect x="22.2" y="115.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="25.2" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (223 samples, 0.12%)</title><rect x="22.2" y="99.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="25.2" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (208 samples, 0.11%)</title><rect x="22.2" y="83.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="25.2" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (208 samples, 0.11%)</title><rect x="22.2" y="67.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="25.2" y="78.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (208 samples, 0.11%)</title><rect x="22.2" y="51.0" width="1.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="25.2" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$72/878358964.apply (118 samples, 0.06%)</title><rect x="23.6" y="355.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="26.6" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (118 samples, 0.06%)</title><rect x="23.6" y="339.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="26.6" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (109 samples, 0.06%)</title><rect x="23.6" y="323.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="26.6" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (109 samples, 0.06%)</title><rect x="23.6" y="307.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="26.6" y="318.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (109 samples, 0.06%)</title><rect x="23.6" y="291.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="26.6" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (58 samples, 0.03%)</title><rect x="24.3" y="435.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="27.3" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (58 samples, 0.03%)</title><rect x="24.3" y="419.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="27.3" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao$$Lambda$80/527983093.apply (58 samples, 0.03%)</title><rect x="24.3" y="403.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="27.3" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.lambda$iterator$0 (58 samples, 0.03%)</title><rect x="24.3" y="387.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="27.3" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.iterator (28,038 samples, 14.52%)</title><rect x="24.7" y="467.0" width="171.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="27.7" y="478.0">ru/mail/polis/dao/shak..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.rowsIterator (28,030 samples, 14.51%)</title><rect x="24.7" y="451.0" width="171.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="27.7" y="462.0">ru/mail/polis/dao/shak..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (24,551 samples, 12.71%)</title><rect x="24.7" y="435.0" width="150.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="27.7" y="446.0">ru/mail/polis/dao/s..</text>
</g>
<g>
<title>java/util/ArrayList.add (67 samples, 0.03%)</title><rect x="24.8" y="419.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="27.8" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (67 samples, 0.03%)</title><rect x="24.8" y="403.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="27.8" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (67 samples, 0.03%)</title><rect x="24.8" y="387.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="27.8" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (67 samples, 0.03%)</title><rect x="24.8" y="371.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="27.8" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (67 samples, 0.03%)</title><rect x="24.8" y="355.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="27.8" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (67 samples, 0.03%)</title><rect x="24.8" y="339.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="27.8" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.iterator (191 samples, 0.10%)</title><rect x="25.3" y="419.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="28.3" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (110 samples, 0.06%)</title><rect x="25.3" y="403.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="28.3" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.reduceIterators (79 samples, 0.04%)</title><rect x="25.9" y="403.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="28.9" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (45 samples, 0.02%)</title><rect x="26.1" y="387.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="29.1" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (42 samples, 0.02%)</title><rect x="26.1" y="371.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="29.1" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.iterator (24,274 samples, 12.57%)</title><rect x="26.4" y="419.0" width="148.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="29.4" y="430.0">ru/mail/polis/dao/s..</text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.SSTable$SSTableIterator (204 samples, 0.11%)</title><rect x="26.4" y="403.0" width="1.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="29.4" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.&lt;init&gt; (24,070 samples, 12.46%)</title><rect x="27.7" y="403.0" width="147.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="30.7" y="414.0">ru/mail/polis/dao/s..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.position (24,070 samples, 12.46%)</title><rect x="27.7" y="387.0" width="147.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="30.7" y="398.0">ru/mail/polis/dao/s..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (11,922 samples, 6.17%)</title><rect x="27.7" y="371.0" width="72.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="30.7" y="382.0">ru/mail/..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (5,991 samples, 3.10%)</title><rect x="27.7" y="355.0" width="36.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="30.7" y="366.0">jav..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (5,991 samples, 3.10%)</title><rect x="27.7" y="339.0" width="36.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="30.7" y="350.0">jav..</text>
</g>
<g>
<title>java.nio.DirectByteBufferR (5,991 samples, 3.10%)</title><rect x="27.7" y="323.0" width="36.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="30.7" y="334.0">jav..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (5,931 samples, 3.07%)</title><rect x="64.3" y="355.0" width="36.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="67.3" y="366.0">jav..</text>
</g>
<g>
<title>java.nio.DirectByteBufferR (5,931 samples, 3.07%)</title><rect x="64.3" y="339.0" width="36.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="67.3" y="350.0">jav..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (12,148 samples, 6.29%)</title><rect x="100.5" y="371.0" width="74.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="103.5" y="382.0">ru/mail/..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (6,045 samples, 3.13%)</title><rect x="100.5" y="355.0" width="36.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="103.5" y="366.0">jav..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (6,045 samples, 3.13%)</title><rect x="100.5" y="339.0" width="36.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="103.5" y="350.0">jav..</text>
</g>
<g>
<title>java.nio.DirectByteBufferR (6,045 samples, 3.13%)</title><rect x="100.5" y="323.0" width="36.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="103.5" y="334.0">jav..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (6,103 samples, 3.16%)</title><rect x="137.4" y="355.0" width="37.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="140.4" y="366.0">jav..</text>
</g>
<g>
<title>java.nio.DirectByteBufferR (6,103 samples, 3.16%)</title><rect x="137.4" y="339.0" width="37.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="140.4" y="350.0">jav..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.reduceIterators (3,479 samples, 1.80%)</title><rect x="174.7" y="435.0" width="21.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="177.7" y="446.0">r..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (2,920 samples, 1.51%)</title><rect x="174.8" y="419.0" width="17.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="177.8" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (2,908 samples, 1.51%)</title><rect x="174.9" y="403.0" width="17.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="177.9" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (42 samples, 0.02%)</title><rect x="174.9" y="387.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="177.9" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (42 samples, 0.02%)</title><rect x="174.9" y="371.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="177.9" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (42 samples, 0.02%)</title><rect x="174.9" y="355.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="177.9" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (42 samples, 0.02%)</title><rect x="174.9" y="339.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="177.9" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$72/878358964.apply (42 samples, 0.02%)</title><rect x="174.9" y="323.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="177.9" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (42 samples, 0.02%)</title><rect x="174.9" y="307.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="177.9" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (42 samples, 0.02%)</title><rect x="174.9" y="291.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="177.9" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (42 samples, 0.02%)</title><rect x="174.9" y="275.0" width="0.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="177.9" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (97 samples, 0.05%)</title><rect x="175.1" y="387.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="178.1" y="398.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (97 samples, 0.05%)</title><rect x="175.1" y="371.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="178.1" y="382.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (2,745 samples, 1.42%)</title><rect x="175.9" y="387.0" width="16.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="178.9" y="398.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (2,745 samples, 1.42%)</title><rect x="175.9" y="371.0" width="16.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="178.9" y="382.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.grow (54 samples, 0.03%)</title><rect x="175.9" y="355.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="178.9" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (54 samples, 0.03%)</title><rect x="175.9" y="339.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="178.9" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (54 samples, 0.03%)</title><rect x="175.9" y="323.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="178.9" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (2,691 samples, 1.39%)</title><rect x="176.2" y="355.0" width="16.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="179.2" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (2,691 samples, 1.39%)</title><rect x="176.2" y="339.0" width="16.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="179.2" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2,691 samples, 1.39%)</title><rect x="176.2" y="323.0" width="16.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="179.2" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2,691 samples, 1.39%)</title><rect x="176.2" y="307.0" width="16.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="179.2" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (1,833 samples, 0.95%)</title><rect x="176.2" y="291.0" width="11.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="179.2" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (1,833 samples, 0.95%)</title><rect x="176.2" y="275.0" width="11.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="179.2" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (1,833 samples, 0.95%)</title><rect x="176.2" y="259.0" width="11.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="179.2" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (1,833 samples, 0.95%)</title><rect x="176.2" y="243.0" width="11.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="179.2" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.of (133 samples, 0.07%)</title><rect x="176.2" y="227.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="179.2" y="238.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Row (133 samples, 0.07%)</title><rect x="176.2" y="211.0" width="0.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="179.2" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (464 samples, 0.24%)</title><rect x="177.0" y="227.0" width="2.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="180.0" y="238.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (231 samples, 0.12%)</title><rect x="177.0" y="211.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="180.0" y="222.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (231 samples, 0.12%)</title><rect x="177.0" y="195.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="180.0" y="206.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (231 samples, 0.12%)</title><rect x="177.0" y="179.0" width="1.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="180.0" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (233 samples, 0.12%)</title><rect x="178.4" y="211.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="181.4" y="222.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (233 samples, 0.12%)</title><rect x="178.4" y="195.0" width="1.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="181.4" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (464 samples, 0.24%)</title><rect x="179.8" y="227.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="182.8" y="238.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (229 samples, 0.12%)</title><rect x="179.8" y="211.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="182.8" y="222.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (229 samples, 0.12%)</title><rect x="179.8" y="195.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="182.8" y="206.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (229 samples, 0.12%)</title><rect x="179.8" y="179.0" width="1.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="182.8" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (235 samples, 0.12%)</title><rect x="181.2" y="211.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="184.2" y="222.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (235 samples, 0.12%)</title><rect x="181.2" y="195.0" width="1.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="184.2" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.timestampAt (234 samples, 0.12%)</title><rect x="182.7" y="227.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="185.7" y="238.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (234 samples, 0.12%)</title><rect x="182.7" y="211.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="185.7" y="222.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (234 samples, 0.12%)</title><rect x="182.7" y="195.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="185.7" y="206.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (234 samples, 0.12%)</title><rect x="182.7" y="179.0" width="1.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="185.7" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.valueAt (456 samples, 0.24%)</title><rect x="184.1" y="227.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="187.1" y="238.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (249 samples, 0.13%)</title><rect x="184.1" y="211.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="187.1" y="222.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (249 samples, 0.13%)</title><rect x="184.1" y="195.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="187.1" y="206.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (249 samples, 0.13%)</title><rect x="184.1" y="179.0" width="1.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="187.1" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (207 samples, 0.11%)</title><rect x="185.6" y="211.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="188.6" y="222.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (207 samples, 0.11%)</title><rect x="185.6" y="195.0" width="1.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="188.6" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Value.of (82 samples, 0.04%)</title><rect x="186.9" y="227.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="189.9" y="238.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Value (82 samples, 0.04%)</title><rect x="186.9" y="211.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="189.9" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/123226378.compare (858 samples, 0.44%)</title><rect x="187.4" y="291.0" width="5.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="190.4" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (858 samples, 0.44%)</title><rect x="187.4" y="275.0" width="5.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="190.4" y="286.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (858 samples, 0.44%)</title><rect x="187.4" y="259.0" width="5.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="190.4" y="270.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (858 samples, 0.44%)</title><rect x="187.4" y="243.0" width="5.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="190.4" y="254.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (858 samples, 0.44%)</title><rect x="187.4" y="227.0" width="5.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="190.4" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (858 samples, 0.44%)</title><rect x="187.4" y="211.0" width="5.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="190.4" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$67/1497891062.compare (858 samples, 0.44%)</title><rect x="187.4" y="195.0" width="5.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="190.4" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (858 samples, 0.44%)</title><rect x="187.4" y="179.0" width="5.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="190.4" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$66/474651931.apply (858 samples, 0.44%)</title><rect x="187.4" y="163.0" width="5.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="190.4" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (858 samples, 0.44%)</title><rect x="187.4" y="147.0" width="5.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="190.4" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (792 samples, 0.41%)</title><rect x="187.4" y="131.0" width="4.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="190.4" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (792 samples, 0.41%)</title><rect x="187.4" y="115.0" width="4.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="190.4" y="126.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (792 samples, 0.41%)</title><rect x="187.4" y="99.0" width="4.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="190.4" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (66 samples, 0.03%)</title><rect x="192.2" y="131.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="195.2" y="142.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (66 samples, 0.03%)</title><rect x="192.2" y="115.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="195.2" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (548 samples, 0.28%)</title><rect x="192.6" y="419.0" width="3.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="195.6" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (545 samples, 0.28%)</title><rect x="192.6" y="403.0" width="3.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="195.6" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (545 samples, 0.28%)</title><rect x="192.6" y="387.0" width="3.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="195.6" y="398.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (229 samples, 0.12%)</title><rect x="192.7" y="371.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="195.7" y="382.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (229 samples, 0.12%)</title><rect x="192.7" y="355.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="195.7" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (229 samples, 0.12%)</title><rect x="192.7" y="339.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="195.7" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (229 samples, 0.12%)</title><rect x="192.7" y="323.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="195.7" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (229 samples, 0.12%)</title><rect x="192.7" y="307.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="195.7" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/123226378.compare (229 samples, 0.12%)</title><rect x="192.7" y="291.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="195.7" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (229 samples, 0.12%)</title><rect x="192.7" y="275.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="195.7" y="286.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (229 samples, 0.12%)</title><rect x="192.7" y="259.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="195.7" y="270.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (229 samples, 0.12%)</title><rect x="192.7" y="243.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="195.7" y="254.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (229 samples, 0.12%)</title><rect x="192.7" y="227.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="195.7" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (229 samples, 0.12%)</title><rect x="192.7" y="211.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="195.7" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$67/1497891062.compare (229 samples, 0.12%)</title><rect x="192.7" y="195.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="195.7" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (229 samples, 0.12%)</title><rect x="192.7" y="179.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="195.7" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$66/474651931.apply (229 samples, 0.12%)</title><rect x="192.7" y="163.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="195.7" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (229 samples, 0.12%)</title><rect x="192.7" y="147.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="195.7" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (225 samples, 0.12%)</title><rect x="192.7" y="131.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="195.7" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (225 samples, 0.12%)</title><rect x="192.7" y="115.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="195.7" y="126.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (225 samples, 0.12%)</title><rect x="192.7" y="99.0" width="1.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="195.7" y="110.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (305 samples, 0.16%)</title><rect x="194.1" y="371.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="197.1" y="382.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (305 samples, 0.16%)</title><rect x="194.1" y="355.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="197.1" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (305 samples, 0.16%)</title><rect x="194.1" y="339.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="197.1" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (305 samples, 0.16%)</title><rect x="194.1" y="323.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="197.1" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (305 samples, 0.16%)</title><rect x="194.1" y="307.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="197.1" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (305 samples, 0.16%)</title><rect x="194.1" y="291.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="197.1" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (178 samples, 0.09%)</title><rect x="194.1" y="275.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="197.1" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (178 samples, 0.09%)</title><rect x="194.1" y="259.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="197.1" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (178 samples, 0.09%)</title><rect x="194.1" y="243.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="197.1" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (178 samples, 0.09%)</title><rect x="194.1" y="227.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="197.1" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (50 samples, 0.03%)</title><rect x="194.2" y="211.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="197.2" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (42 samples, 0.02%)</title><rect x="194.5" y="211.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="197.5" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.valueAt (47 samples, 0.02%)</title><rect x="194.9" y="211.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="197.9" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/123226378.compare (127 samples, 0.07%)</title><rect x="195.2" y="275.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="198.2" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (127 samples, 0.07%)</title><rect x="195.2" y="259.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="198.2" y="270.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (127 samples, 0.07%)</title><rect x="195.2" y="243.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="198.2" y="254.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (127 samples, 0.07%)</title><rect x="195.2" y="227.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="198.2" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (127 samples, 0.07%)</title><rect x="195.2" y="211.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="198.2" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (127 samples, 0.07%)</title><rect x="195.2" y="195.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="198.2" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$67/1497891062.compare (127 samples, 0.07%)</title><rect x="195.2" y="179.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="198.2" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (127 samples, 0.07%)</title><rect x="195.2" y="163.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="198.2" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$66/474651931.apply (127 samples, 0.07%)</title><rect x="195.2" y="147.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="198.2" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (127 samples, 0.07%)</title><rect x="195.2" y="131.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="198.2" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (117 samples, 0.06%)</title><rect x="195.2" y="115.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="198.2" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (117 samples, 0.06%)</title><rect x="195.2" y="99.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="198.2" y="110.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (117 samples, 0.06%)</title><rect x="195.2" y="83.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="198.2" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/StorageSession.stream (18,337 samples, 9.49%)</title><rect x="196.0" y="483.0" width="112.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="199.0" y="494.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/StorageSession.next (18,279 samples, 9.46%)</title><rect x="196.3" y="467.0" width="111.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="199.3" y="478.0">ru/mail/polis..</text>
</g>
<g>
<title>byte[] (284 samples, 0.15%)</title><rect x="196.3" y="451.0" width="1.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="199.3" y="462.0"></text>
</g>
<g>
<title>java/lang/Integer.toHexString (129 samples, 0.07%)</title><rect x="198.1" y="451.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="201.1" y="462.0"></text>
</g>
<g>
<title>java/lang/Integer.toUnsignedString0 (129 samples, 0.07%)</title><rect x="198.1" y="435.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="201.1" y="446.0"></text>
</g>
<g>
<title>byte[] (129 samples, 0.07%)</title><rect x="198.1" y="419.0" width="0.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="201.1" y="430.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (124 samples, 0.06%)</title><rect x="198.9" y="451.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="201.9" y="462.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (124 samples, 0.06%)</title><rect x="198.9" y="435.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="201.9" y="446.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (124 samples, 0.06%)</title><rect x="198.9" y="419.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="201.9" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (124 samples, 0.06%)</title><rect x="198.9" y="403.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="201.9" y="414.0"></text>
</g>
<g>
<title>byte[] (124 samples, 0.06%)</title><rect x="198.9" y="387.0" width="0.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="201.9" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (289 samples, 0.15%)</title><rect x="199.6" y="451.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="202.6" y="462.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (289 samples, 0.15%)</title><rect x="199.6" y="435.0" width="1.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="202.6" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (376 samples, 0.19%)</title><rect x="201.4" y="451.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="204.4" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (355 samples, 0.18%)</title><rect x="201.4" y="435.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="204.4" y="446.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (355 samples, 0.18%)</title><rect x="201.4" y="419.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="204.4" y="430.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (355 samples, 0.18%)</title><rect x="201.4" y="403.0" width="2.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="204.4" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getValue (322 samples, 0.17%)</title><rect x="203.7" y="451.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="206.7" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (290 samples, 0.15%)</title><rect x="203.7" y="435.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="206.7" y="446.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (290 samples, 0.15%)</title><rect x="203.7" y="419.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="206.7" y="430.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (290 samples, 0.15%)</title><rect x="203.7" y="403.0" width="1.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="206.7" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$UntilIterator.next (16,371 samples, 8.48%)</title><rect x="205.6" y="451.0" width="100.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="208.6" y="462.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$UntilIterator.next (16,371 samples, 8.48%)</title><rect x="205.6" y="435.0" width="100.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="208.6" y="446.0">ru/mail/poli..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (15,467 samples, 8.01%)</title><rect x="205.6" y="419.0" width="94.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="208.6" y="430.0">com/google/..</text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (15,467 samples, 8.01%)</title><rect x="205.6" y="403.0" width="94.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="208.6" y="414.0">com/google/..</text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (15,467 samples, 8.01%)</title><rect x="205.6" y="387.0" width="94.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="208.6" y="398.0">com/google/..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (15,467 samples, 8.01%)</title><rect x="205.6" y="371.0" width="94.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="208.6" y="382.0">com/google/..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (15,467 samples, 8.01%)</title><rect x="205.6" y="355.0" width="94.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="208.6" y="366.0">ru/mail/pol..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (14,100 samples, 7.30%)</title><rect x="205.6" y="339.0" width="86.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="208.6" y="350.0">com/google..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (47 samples, 0.02%)</title><rect x="205.6" y="323.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="208.6" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (47 samples, 0.02%)</title><rect x="205.6" y="307.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="208.6" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (47 samples, 0.02%)</title><rect x="205.6" y="291.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="208.6" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (47 samples, 0.02%)</title><rect x="205.6" y="275.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="208.6" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (47 samples, 0.02%)</title><rect x="205.6" y="259.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="208.6" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$72/878358964.apply (47 samples, 0.02%)</title><rect x="205.6" y="243.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="208.6" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (47 samples, 0.02%)</title><rect x="205.6" y="227.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="208.6" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (47 samples, 0.02%)</title><rect x="205.6" y="211.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="208.6" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (47 samples, 0.02%)</title><rect x="205.6" y="195.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="208.6" y="206.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (5,718 samples, 2.96%)</title><rect x="205.9" y="323.0" width="35.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="208.9" y="334.0">ja..</text>
</g>
<g>
<title>java/util/PriorityQueue.poll (5,718 samples, 2.96%)</title><rect x="205.9" y="307.0" width="35.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="208.9" y="318.0">ja..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (5,718 samples, 2.96%)</title><rect x="205.9" y="291.0" width="35.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="208.9" y="302.0">ja..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (5,718 samples, 2.96%)</title><rect x="205.9" y="275.0" width="35.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="208.9" y="286.0">co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (5,718 samples, 2.96%)</title><rect x="205.9" y="259.0" width="35.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="208.9" y="270.0">co..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/123226378.compare (5,718 samples, 2.96%)</title><rect x="205.9" y="243.0" width="35.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="208.9" y="254.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (5,718 samples, 2.96%)</title><rect x="205.9" y="227.0" width="35.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="208.9" y="238.0">ru..</text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (5,718 samples, 2.96%)</title><rect x="205.9" y="211.0" width="35.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="208.9" y="222.0">ja..</text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (5,718 samples, 2.96%)</title><rect x="205.9" y="195.0" width="35.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="208.9" y="206.0">ja..</text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (5,718 samples, 2.96%)</title><rect x="205.9" y="179.0" width="35.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="208.9" y="190.0">ja..</text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (5,718 samples, 2.96%)</title><rect x="205.9" y="163.0" width="35.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="208.9" y="174.0">ja..</text>
</g>
<g>
<title>java/util/Comparator$$Lambda$67/1497891062.compare (5,718 samples, 2.96%)</title><rect x="205.9" y="147.0" width="35.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="208.9" y="158.0">ja..</text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (5,718 samples, 2.96%)</title><rect x="205.9" y="131.0" width="35.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="208.9" y="142.0">ja..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$66/474651931.apply (5,718 samples, 2.96%)</title><rect x="205.9" y="115.0" width="35.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="208.9" y="126.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (5,718 samples, 2.96%)</title><rect x="205.9" y="99.0" width="35.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="208.9" y="110.0">ru..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (5,491 samples, 2.84%)</title><rect x="205.9" y="83.0" width="33.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="208.9" y="94.0">ja..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (5,491 samples, 2.84%)</title><rect x="205.9" y="67.0" width="33.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="208.9" y="78.0">ja..</text>
</g>
<g>
<title>java.nio.DirectByteBufferR (5,491 samples, 2.84%)</title><rect x="205.9" y="51.0" width="33.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="208.9" y="62.0">ja..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (227 samples, 0.12%)</title><rect x="239.5" y="83.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="242.5" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (227 samples, 0.12%)</title><rect x="239.5" y="67.0" width="1.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="242.5" y="78.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (8,335 samples, 4.32%)</title><rect x="240.9" y="323.0" width="50.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="243.9" y="334.0">java/..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (8,335 samples, 4.32%)</title><rect x="240.9" y="307.0" width="50.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="243.9" y="318.0">java/..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (8,335 samples, 4.32%)</title><rect x="240.9" y="291.0" width="50.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="243.9" y="302.0">java/..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (8,335 samples, 4.32%)</title><rect x="240.9" y="275.0" width="50.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="243.9" y="286.0">java/..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (8,335 samples, 4.32%)</title><rect x="240.9" y="259.0" width="50.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="243.9" y="270.0">com/g..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (8,335 samples, 4.32%)</title><rect x="240.9" y="243.0" width="50.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="243.9" y="254.0">com/g..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (5,262 samples, 2.72%)</title><rect x="240.9" y="227.0" width="32.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="243.9" y="238.0">co..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (5,262 samples, 2.72%)</title><rect x="240.9" y="211.0" width="32.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="243.9" y="222.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (5,262 samples, 2.72%)</title><rect x="240.9" y="195.0" width="32.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="243.9" y="206.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (5,262 samples, 2.72%)</title><rect x="240.9" y="179.0" width="32.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="243.9" y="190.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.of (325 samples, 0.17%)</title><rect x="240.9" y="163.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="243.9" y="174.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Row (325 samples, 0.17%)</title><rect x="240.9" y="147.0" width="1.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="243.9" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (1,362 samples, 0.71%)</title><rect x="242.8" y="163.0" width="8.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="245.8" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (663 samples, 0.34%)</title><rect x="242.8" y="147.0" width="4.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="245.8" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (663 samples, 0.34%)</title><rect x="242.8" y="131.0" width="4.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="245.8" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (663 samples, 0.34%)</title><rect x="242.8" y="115.0" width="4.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="245.8" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (699 samples, 0.36%)</title><rect x="246.9" y="147.0" width="4.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="249.9" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (699 samples, 0.36%)</title><rect x="246.9" y="131.0" width="4.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="249.9" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (1,328 samples, 0.69%)</title><rect x="251.2" y="163.0" width="8.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="254.2" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (687 samples, 0.36%)</title><rect x="251.2" y="147.0" width="4.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="254.2" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (687 samples, 0.36%)</title><rect x="251.2" y="131.0" width="4.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="254.2" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (687 samples, 0.36%)</title><rect x="251.2" y="115.0" width="4.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="254.2" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (641 samples, 0.33%)</title><rect x="255.4" y="147.0" width="3.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="258.4" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (641 samples, 0.33%)</title><rect x="255.4" y="131.0" width="3.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="258.4" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.timestampAt (673 samples, 0.35%)</title><rect x="259.3" y="163.0" width="4.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="262.3" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (673 samples, 0.35%)</title><rect x="259.3" y="147.0" width="4.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="262.3" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (673 samples, 0.35%)</title><rect x="259.3" y="131.0" width="4.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="262.3" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (673 samples, 0.35%)</title><rect x="259.3" y="115.0" width="4.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="262.3" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.valueAt (1,265 samples, 0.65%)</title><rect x="263.4" y="163.0" width="7.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="266.4" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (653 samples, 0.34%)</title><rect x="263.4" y="147.0" width="4.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="266.4" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (653 samples, 0.34%)</title><rect x="263.4" y="131.0" width="4.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="266.4" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (653 samples, 0.34%)</title><rect x="263.4" y="115.0" width="4.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="266.4" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (612 samples, 0.32%)</title><rect x="267.4" y="147.0" width="3.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="270.4" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (612 samples, 0.32%)</title><rect x="267.4" y="131.0" width="3.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="270.4" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Value.of (309 samples, 0.16%)</title><rect x="271.1" y="163.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="274.1" y="174.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Value (309 samples, 0.16%)</title><rect x="271.1" y="147.0" width="1.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="274.1" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/123226378.compare (3,073 samples, 1.59%)</title><rect x="273.0" y="227.0" width="18.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="276.0" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (3,073 samples, 1.59%)</title><rect x="273.0" y="211.0" width="18.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="276.0" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (3,073 samples, 1.59%)</title><rect x="273.0" y="195.0" width="18.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="276.0" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (3,073 samples, 1.59%)</title><rect x="273.0" y="179.0" width="18.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="276.0" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (3,073 samples, 1.59%)</title><rect x="273.0" y="163.0" width="18.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="276.0" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (3,073 samples, 1.59%)</title><rect x="273.0" y="147.0" width="18.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="276.0" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$67/1497891062.compare (3,073 samples, 1.59%)</title><rect x="273.0" y="131.0" width="18.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="276.0" y="142.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (3,073 samples, 1.59%)</title><rect x="273.0" y="115.0" width="18.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="276.0" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$66/474651931.apply (3,073 samples, 1.59%)</title><rect x="273.0" y="99.0" width="18.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="276.0" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (3,073 samples, 1.59%)</title><rect x="273.0" y="83.0" width="18.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="276.0" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (2,971 samples, 1.54%)</title><rect x="273.0" y="67.0" width="18.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="276.0" y="78.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (2,971 samples, 1.54%)</title><rect x="273.0" y="51.0" width="18.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="276.0" y="62.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (2,971 samples, 1.54%)</title><rect x="273.0" y="35.0" width="18.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="276.0" y="46.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (102 samples, 0.05%)</title><rect x="291.2" y="67.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="294.2" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (102 samples, 0.05%)</title><rect x="291.2" y="51.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="294.2" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$72/878358964.apply (1,367 samples, 0.71%)</title><rect x="291.8" y="339.0" width="8.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="294.8" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (1,367 samples, 0.71%)</title><rect x="291.8" y="323.0" width="8.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="294.8" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (1,275 samples, 0.66%)</title><rect x="291.8" y="307.0" width="7.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="294.8" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (1,275 samples, 0.66%)</title><rect x="291.8" y="291.0" width="7.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="294.8" y="302.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (1,275 samples, 0.66%)</title><rect x="291.8" y="275.0" width="7.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="294.8" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (92 samples, 0.05%)</title><rect x="299.6" y="307.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="302.6" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (92 samples, 0.05%)</title><rect x="299.6" y="291.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="302.6" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (904 samples, 0.47%)</title><rect x="300.1" y="419.0" width="5.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="303.1" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (904 samples, 0.47%)</title><rect x="300.1" y="403.0" width="5.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="303.1" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao$$Lambda$80/527983093.apply (904 samples, 0.47%)</title><rect x="300.1" y="387.0" width="5.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="303.1" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.lambda$iterator$0 (904 samples, 0.47%)</title><rect x="300.1" y="371.0" width="5.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="303.1" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.of (172 samples, 0.09%)</title><rect x="300.1" y="355.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="303.1" y="366.0"></text>
</g>
<g>
<title>ru.mail.polis.Record (172 samples, 0.09%)</title><rect x="300.1" y="339.0" width="1.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="303.1" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (395 samples, 0.20%)</title><rect x="301.2" y="355.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="304.2" y="366.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (358 samples, 0.19%)</title><rect x="301.2" y="339.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="304.2" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (358 samples, 0.19%)</title><rect x="301.2" y="323.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="304.2" y="334.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (358 samples, 0.19%)</title><rect x="301.2" y="307.0" width="2.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="304.2" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Value.getData (337 samples, 0.17%)</title><rect x="303.6" y="355.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="306.6" y="366.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (317 samples, 0.16%)</title><rect x="303.6" y="339.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="306.6" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (317 samples, 0.16%)</title><rect x="303.6" y="323.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="306.6" y="334.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (317 samples, 0.16%)</title><rect x="303.6" y="307.0" width="1.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="306.6" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/StorageSession.toByteArray (384 samples, 0.20%)</title><rect x="305.7" y="451.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="308.7" y="462.0"></text>
</g>
<g>
<title>byte[] (384 samples, 0.20%)</title><rect x="305.7" y="435.0" width="2.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="308.7" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (149 samples, 0.08%)</title><rect x="308.1" y="547.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="311.1" y="558.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (96 samples, 0.05%)</title><rect x="308.5" y="531.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="311.5" y="542.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (96 samples, 0.05%)</title><rect x="308.5" y="515.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="311.5" y="526.0"></text>
</g>
<g>
<title>char[] (67 samples, 0.03%)</title><rect x="308.5" y="499.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="311.5" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/StorageSession.processWrite (123 samples, 0.06%)</title><rect x="309.3" y="579.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="312.3" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/StorageSession.next (123 samples, 0.06%)</title><rect x="309.3" y="563.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="312.3" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$UntilIterator.next (109 samples, 0.06%)</title><rect x="309.4" y="547.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="312.4" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$UntilIterator.next (109 samples, 0.06%)</title><rect x="309.4" y="531.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="312.4" y="542.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (107 samples, 0.06%)</title><rect x="309.4" y="515.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="312.4" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (107 samples, 0.06%)</title><rect x="309.4" y="499.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="312.4" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (107 samples, 0.06%)</title><rect x="309.4" y="483.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="312.4" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (107 samples, 0.06%)</title><rect x="309.4" y="467.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="312.4" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (107 samples, 0.06%)</title><rect x="309.4" y="451.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="312.4" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (99 samples, 0.05%)</title><rect x="309.4" y="435.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="312.4" y="446.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (43 samples, 0.02%)</title><rect x="309.4" y="419.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="312.4" y="430.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (43 samples, 0.02%)</title><rect x="309.4" y="403.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="312.4" y="414.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (43 samples, 0.02%)</title><rect x="309.4" y="387.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="312.4" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (43 samples, 0.02%)</title><rect x="309.4" y="371.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="312.4" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (43 samples, 0.02%)</title><rect x="309.4" y="355.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="312.4" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/123226378.compare (43 samples, 0.02%)</title><rect x="309.4" y="339.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="312.4" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (43 samples, 0.02%)</title><rect x="309.4" y="323.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="312.4" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (43 samples, 0.02%)</title><rect x="309.4" y="307.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="312.4" y="318.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (43 samples, 0.02%)</title><rect x="309.4" y="291.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="312.4" y="302.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (43 samples, 0.02%)</title><rect x="309.4" y="275.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="312.4" y="286.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (43 samples, 0.02%)</title><rect x="309.4" y="259.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="312.4" y="270.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$67/1497891062.compare (43 samples, 0.02%)</title><rect x="309.4" y="243.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="312.4" y="254.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (43 samples, 0.02%)</title><rect x="309.4" y="227.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="312.4" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$66/474651931.apply (43 samples, 0.02%)</title><rect x="309.4" y="211.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="312.4" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (43 samples, 0.02%)</title><rect x="309.4" y="195.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="312.4" y="206.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (41 samples, 0.02%)</title><rect x="309.4" y="179.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="312.4" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (41 samples, 0.02%)</title><rect x="309.4" y="163.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="312.4" y="174.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (41 samples, 0.02%)</title><rect x="309.4" y="147.0" width="0.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="312.4" y="158.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (56 samples, 0.03%)</title><rect x="309.6" y="419.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="312.6" y="430.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (56 samples, 0.03%)</title><rect x="309.6" y="403.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="312.6" y="414.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (56 samples, 0.03%)</title><rect x="309.6" y="387.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="312.6" y="398.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (56 samples, 0.03%)</title><rect x="309.6" y="371.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="312.6" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (56 samples, 0.03%)</title><rect x="309.6" y="355.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="312.6" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (56 samples, 0.03%)</title><rect x="309.6" y="339.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="312.6" y="350.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=25371] (48,330 samples, 25.02%)</title><rect x="310.0" y="627.0" width="295.3" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="313.0" y="638.0">[NIO Selector #1 tid=25371]</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (48,330 samples, 25.02%)</title><rect x="310.0" y="611.0" width="295.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="313.0" y="622.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/Session.process (48,308 samples, 25.01%)</title><rect x="310.2" y="595.0" width="295.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="313.2" y="606.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (47,978 samples, 24.84%)</title><rect x="310.2" y="579.0" width="293.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="313.2" y="590.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (47,978 samples, 24.84%)</title><rect x="310.2" y="563.0" width="293.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="313.2" y="574.0">one/nio/http/HttpSession.processHttpBuf..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (47,754 samples, 24.72%)</title><rect x="310.2" y="547.0" width="291.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="313.2" y="558.0">one/nio/http/HttpSession.handleParsedRe..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (47,754 samples, 24.72%)</title><rect x="310.2" y="531.0" width="291.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="313.2" y="542.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler2_entities.handleRequest (47,727 samples, 24.71%)</title><rect x="310.2" y="515.0" width="291.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="313.2" y="526.0">RequestHandler2_entities.handleRequest</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.entities (47,696 samples, 24.69%)</title><rect x="310.4" y="499.0" width="291.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="313.4" y="510.0">ru/mail/polis/service/shakhmin/AsyncHtt..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (42 samples, 0.02%)</title><rect x="310.5" y="483.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="313.5" y="494.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (42 samples, 0.02%)</title><rect x="310.5" y="467.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="313.5" y="478.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (42 samples, 0.02%)</title><rect x="310.5" y="451.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="313.5" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.range (28,986 samples, 15.01%)</title><rect x="310.8" y="483.0" width="177.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="313.8" y="494.0">ru/mail/polis/dao/DAO.r..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.until (1,250 samples, 0.65%)</title><rect x="311.0" y="467.0" width="7.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="314.0" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$UntilIterator.&lt;init&gt; (1,237 samples, 0.64%)</title><rect x="311.1" y="451.0" width="7.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="314.1" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (1,176 samples, 0.61%)</title><rect x="311.1" y="435.0" width="7.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="314.1" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (1,176 samples, 0.61%)</title><rect x="311.1" y="419.0" width="7.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="314.1" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (1,176 samples, 0.61%)</title><rect x="311.1" y="403.0" width="7.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="314.1" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (1,176 samples, 0.61%)</title><rect x="311.1" y="387.0" width="7.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="314.1" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (1,176 samples, 0.61%)</title><rect x="311.1" y="371.0" width="7.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="314.1" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1,077 samples, 0.56%)</title><rect x="311.1" y="355.0" width="6.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="314.1" y="366.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (442 samples, 0.23%)</title><rect x="311.1" y="339.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="314.1" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (442 samples, 0.23%)</title><rect x="311.1" y="323.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="314.1" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (442 samples, 0.23%)</title><rect x="311.1" y="307.0" width="2.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="314.1" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (442 samples, 0.23%)</title><rect x="311.1" y="291.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="314.1" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (442 samples, 0.23%)</title><rect x="311.1" y="275.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="314.1" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/123226378.compare (442 samples, 0.23%)</title><rect x="311.1" y="259.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="314.1" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (442 samples, 0.23%)</title><rect x="311.1" y="243.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="314.1" y="254.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (442 samples, 0.23%)</title><rect x="311.1" y="227.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="314.1" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (442 samples, 0.23%)</title><rect x="311.1" y="211.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="314.1" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (442 samples, 0.23%)</title><rect x="311.1" y="195.0" width="2.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="314.1" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (442 samples, 0.23%)</title><rect x="311.1" y="179.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="314.1" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$67/1497891062.compare (442 samples, 0.23%)</title><rect x="311.1" y="163.0" width="2.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="314.1" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (442 samples, 0.23%)</title><rect x="311.1" y="147.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="314.1" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$66/474651931.apply (442 samples, 0.23%)</title><rect x="311.1" y="131.0" width="2.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="314.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (442 samples, 0.23%)</title><rect x="311.1" y="115.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="314.1" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (415 samples, 0.21%)</title><rect x="311.1" y="99.0" width="2.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="314.1" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (415 samples, 0.21%)</title><rect x="311.1" y="83.0" width="2.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="314.1" y="94.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (415 samples, 0.21%)</title><rect x="311.1" y="67.0" width="2.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="314.1" y="78.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (625 samples, 0.32%)</title><rect x="313.8" y="339.0" width="3.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="316.8" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (625 samples, 0.32%)</title><rect x="313.8" y="323.0" width="3.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="316.8" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (625 samples, 0.32%)</title><rect x="313.8" y="307.0" width="3.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="316.8" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (625 samples, 0.32%)</title><rect x="313.8" y="291.0" width="3.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="316.8" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (625 samples, 0.32%)</title><rect x="313.8" y="275.0" width="3.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="316.8" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (625 samples, 0.32%)</title><rect x="313.8" y="259.0" width="3.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="316.8" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (409 samples, 0.21%)</title><rect x="313.8" y="243.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="316.8" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (409 samples, 0.21%)</title><rect x="313.8" y="227.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="316.8" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (409 samples, 0.21%)</title><rect x="313.8" y="211.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="316.8" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (409 samples, 0.21%)</title><rect x="313.8" y="195.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="316.8" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (95 samples, 0.05%)</title><rect x="313.9" y="179.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="316.9" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (50 samples, 0.03%)</title><rect x="313.9" y="163.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="316.9" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (50 samples, 0.03%)</title><rect x="313.9" y="147.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="316.9" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (50 samples, 0.03%)</title><rect x="313.9" y="131.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="316.9" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (45 samples, 0.02%)</title><rect x="314.2" y="163.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="317.2" y="174.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (45 samples, 0.02%)</title><rect x="314.2" y="147.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="317.2" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (113 samples, 0.06%)</title><rect x="314.5" y="179.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="317.5" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (58 samples, 0.03%)</title><rect x="314.5" y="163.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="317.5" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (58 samples, 0.03%)</title><rect x="314.5" y="147.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="317.5" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (58 samples, 0.03%)</title><rect x="314.5" y="131.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="317.5" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (55 samples, 0.03%)</title><rect x="314.9" y="163.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="317.9" y="174.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (55 samples, 0.03%)</title><rect x="314.9" y="147.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="317.9" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.timestampAt (55 samples, 0.03%)</title><rect x="315.2" y="179.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="318.2" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (55 samples, 0.03%)</title><rect x="315.2" y="163.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="318.2" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (55 samples, 0.03%)</title><rect x="315.2" y="147.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="318.2" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (55 samples, 0.03%)</title><rect x="315.2" y="131.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="318.2" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.valueAt (106 samples, 0.05%)</title><rect x="315.5" y="179.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="318.5" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (55 samples, 0.03%)</title><rect x="315.5" y="163.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="318.5" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (55 samples, 0.03%)</title><rect x="315.5" y="147.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="318.5" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (55 samples, 0.03%)</title><rect x="315.5" y="131.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="318.5" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (51 samples, 0.03%)</title><rect x="315.9" y="163.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="318.9" y="174.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (51 samples, 0.03%)</title><rect x="315.9" y="147.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="318.9" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/123226378.compare (216 samples, 0.11%)</title><rect x="316.3" y="243.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="319.3" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (216 samples, 0.11%)</title><rect x="316.3" y="227.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="319.3" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (216 samples, 0.11%)</title><rect x="316.3" y="211.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="319.3" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (216 samples, 0.11%)</title><rect x="316.3" y="195.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="319.3" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (216 samples, 0.11%)</title><rect x="316.3" y="179.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="319.3" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (216 samples, 0.11%)</title><rect x="316.3" y="163.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="319.3" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$67/1497891062.compare (216 samples, 0.11%)</title><rect x="316.3" y="147.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="319.3" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (216 samples, 0.11%)</title><rect x="316.3" y="131.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="319.3" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$66/474651931.apply (216 samples, 0.11%)</title><rect x="316.3" y="115.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="319.3" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (216 samples, 0.11%)</title><rect x="316.3" y="99.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="319.3" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (200 samples, 0.10%)</title><rect x="316.3" y="83.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="319.3" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (200 samples, 0.10%)</title><rect x="316.3" y="67.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="319.3" y="78.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (200 samples, 0.10%)</title><rect x="316.3" y="51.0" width="1.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="319.3" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$72/878358964.apply (99 samples, 0.05%)</title><rect x="317.6" y="355.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="320.6" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (99 samples, 0.05%)</title><rect x="317.6" y="339.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="320.6" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (83 samples, 0.04%)</title><rect x="317.6" y="323.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="320.6" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (83 samples, 0.04%)</title><rect x="317.6" y="307.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="320.6" y="318.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (83 samples, 0.04%)</title><rect x="317.6" y="291.0" width="0.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="320.6" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (61 samples, 0.03%)</title><rect x="318.2" y="435.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="321.2" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (61 samples, 0.03%)</title><rect x="318.2" y="419.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="321.2" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao$$Lambda$80/527983093.apply (61 samples, 0.03%)</title><rect x="318.2" y="403.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="321.2" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.lambda$iterator$0 (61 samples, 0.03%)</title><rect x="318.2" y="387.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="321.2" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.iterator (27,701 samples, 14.34%)</title><rect x="318.6" y="467.0" width="169.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="321.6" y="478.0">ru/mail/polis/dao/shak..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.rowsIterator (27,693 samples, 14.34%)</title><rect x="318.7" y="451.0" width="169.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="321.7" y="462.0">ru/mail/polis/dao/shak..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (24,160 samples, 12.51%)</title><rect x="318.7" y="435.0" width="147.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="321.7" y="446.0">ru/mail/polis/dao/s..</text>
</g>
<g>
<title>java/util/ArrayList.add (69 samples, 0.04%)</title><rect x="318.7" y="419.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="321.7" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (69 samples, 0.04%)</title><rect x="318.7" y="403.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="321.7" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (69 samples, 0.04%)</title><rect x="318.7" y="387.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="321.7" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (69 samples, 0.04%)</title><rect x="318.7" y="371.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="321.7" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (69 samples, 0.04%)</title><rect x="318.7" y="355.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="321.7" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (69 samples, 0.04%)</title><rect x="318.7" y="339.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="321.7" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.iterator (199 samples, 0.10%)</title><rect x="319.2" y="419.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="322.2" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (111 samples, 0.06%)</title><rect x="319.2" y="403.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="322.2" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.iterator (44 samples, 0.02%)</title><rect x="319.6" y="387.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="322.6" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.reduceIterators (88 samples, 0.05%)</title><rect x="319.9" y="403.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="322.9" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (60 samples, 0.03%)</title><rect x="320.0" y="387.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="323.0" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (54 samples, 0.03%)</title><rect x="320.0" y="371.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="323.0" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.iterator (23,872 samples, 12.36%)</title><rect x="320.4" y="419.0" width="145.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="323.4" y="430.0">ru/mail/polis/dao/..</text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.SSTable$SSTableIterator (216 samples, 0.11%)</title><rect x="320.4" y="403.0" width="1.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="323.4" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.&lt;init&gt; (23,656 samples, 12.25%)</title><rect x="321.7" y="403.0" width="144.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="324.7" y="414.0">ru/mail/polis/dao/..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.position (23,656 samples, 12.25%)</title><rect x="321.7" y="387.0" width="144.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="324.7" y="398.0">ru/mail/polis/dao/..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (11,822 samples, 6.12%)</title><rect x="321.7" y="371.0" width="72.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="324.7" y="382.0">ru/mail/..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (5,877 samples, 3.04%)</title><rect x="321.7" y="355.0" width="36.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="324.7" y="366.0">jav..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (5,877 samples, 3.04%)</title><rect x="321.7" y="339.0" width="36.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="324.7" y="350.0">jav..</text>
</g>
<g>
<title>java.nio.DirectByteBufferR (5,877 samples, 3.04%)</title><rect x="321.7" y="323.0" width="36.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="324.7" y="334.0">jav..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (5,945 samples, 3.08%)</title><rect x="357.7" y="355.0" width="36.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="360.7" y="366.0">jav..</text>
</g>
<g>
<title>java.nio.DirectByteBufferR (5,945 samples, 3.08%)</title><rect x="357.7" y="339.0" width="36.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="360.7" y="350.0">jav..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (11,834 samples, 6.13%)</title><rect x="394.0" y="371.0" width="72.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="397.0" y="382.0">ru/mail/..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (5,952 samples, 3.08%)</title><rect x="394.0" y="355.0" width="36.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="397.0" y="366.0">jav..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (5,952 samples, 3.08%)</title><rect x="394.0" y="339.0" width="36.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="397.0" y="350.0">jav..</text>
</g>
<g>
<title>java.nio.DirectByteBufferR (5,952 samples, 3.08%)</title><rect x="394.0" y="323.0" width="36.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="397.0" y="334.0">jav..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (5,882 samples, 3.05%)</title><rect x="430.3" y="355.0" width="36.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="433.3" y="366.0">jav..</text>
</g>
<g>
<title>java.nio.DirectByteBufferR (5,882 samples, 3.05%)</title><rect x="430.3" y="339.0" width="36.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="433.3" y="350.0">jav..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.reduceIterators (3,533 samples, 1.83%)</title><rect x="466.3" y="435.0" width="21.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="469.3" y="446.0">r..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (3,004 samples, 1.56%)</title><rect x="466.4" y="419.0" width="18.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="469.4" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (2,982 samples, 1.54%)</title><rect x="466.5" y="403.0" width="18.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="469.5" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (91 samples, 0.05%)</title><rect x="466.7" y="387.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="469.7" y="398.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (91 samples, 0.05%)</title><rect x="466.7" y="371.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="469.7" y="382.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (2,830 samples, 1.47%)</title><rect x="467.4" y="387.0" width="17.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="470.4" y="398.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (2,830 samples, 1.47%)</title><rect x="467.4" y="371.0" width="17.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="470.4" y="382.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.grow (66 samples, 0.03%)</title><rect x="467.4" y="355.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="470.4" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (66 samples, 0.03%)</title><rect x="467.4" y="339.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="470.4" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (66 samples, 0.03%)</title><rect x="467.4" y="323.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="470.4" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (2,764 samples, 1.43%)</title><rect x="467.8" y="355.0" width="16.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="470.8" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (2,764 samples, 1.43%)</title><rect x="467.8" y="339.0" width="16.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="470.8" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2,764 samples, 1.43%)</title><rect x="467.8" y="323.0" width="16.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="470.8" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2,764 samples, 1.43%)</title><rect x="467.8" y="307.0" width="16.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="470.8" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (1,954 samples, 1.01%)</title><rect x="467.8" y="291.0" width="12.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="470.8" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (1,954 samples, 1.01%)</title><rect x="467.8" y="275.0" width="12.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="470.8" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (1,954 samples, 1.01%)</title><rect x="467.8" y="259.0" width="12.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="470.8" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (1,954 samples, 1.01%)</title><rect x="467.8" y="243.0" width="12.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="470.8" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.of (124 samples, 0.06%)</title><rect x="467.8" y="227.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="470.8" y="238.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Row (124 samples, 0.06%)</title><rect x="467.8" y="211.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="470.8" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (516 samples, 0.27%)</title><rect x="468.6" y="227.0" width="3.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="471.6" y="238.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (249 samples, 0.13%)</title><rect x="468.6" y="211.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="471.6" y="222.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (249 samples, 0.13%)</title><rect x="468.6" y="195.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="471.6" y="206.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (249 samples, 0.13%)</title><rect x="468.6" y="179.0" width="1.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="471.6" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (267 samples, 0.14%)</title><rect x="470.1" y="211.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="473.1" y="222.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (267 samples, 0.14%)</title><rect x="470.1" y="195.0" width="1.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="473.1" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (473 samples, 0.24%)</title><rect x="471.7" y="227.0" width="2.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="474.7" y="238.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (233 samples, 0.12%)</title><rect x="471.7" y="211.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="474.7" y="222.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (233 samples, 0.12%)</title><rect x="471.7" y="195.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="474.7" y="206.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (233 samples, 0.12%)</title><rect x="471.7" y="179.0" width="1.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="474.7" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (240 samples, 0.12%)</title><rect x="473.2" y="211.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="476.2" y="222.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (240 samples, 0.12%)</title><rect x="473.2" y="195.0" width="1.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="476.2" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.timestampAt (225 samples, 0.12%)</title><rect x="474.6" y="227.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="477.6" y="238.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (225 samples, 0.12%)</title><rect x="474.6" y="211.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="477.6" y="222.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (225 samples, 0.12%)</title><rect x="474.6" y="195.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="477.6" y="206.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (225 samples, 0.12%)</title><rect x="474.6" y="179.0" width="1.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="477.6" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.valueAt (527 samples, 0.27%)</title><rect x="476.0" y="227.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="479.0" y="238.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (263 samples, 0.14%)</title><rect x="476.0" y="211.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="479.0" y="222.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (263 samples, 0.14%)</title><rect x="476.0" y="195.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="479.0" y="206.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (263 samples, 0.14%)</title><rect x="476.0" y="179.0" width="1.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="479.0" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (264 samples, 0.14%)</title><rect x="477.6" y="211.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="480.6" y="222.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (264 samples, 0.14%)</title><rect x="477.6" y="195.0" width="1.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="480.6" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Value.of (89 samples, 0.05%)</title><rect x="479.2" y="227.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="482.2" y="238.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Value (89 samples, 0.05%)</title><rect x="479.2" y="211.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="482.2" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/123226378.compare (810 samples, 0.42%)</title><rect x="479.8" y="291.0" width="4.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="482.8" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (810 samples, 0.42%)</title><rect x="479.8" y="275.0" width="4.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="482.8" y="286.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (810 samples, 0.42%)</title><rect x="479.8" y="259.0" width="4.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="482.8" y="270.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (810 samples, 0.42%)</title><rect x="479.8" y="243.0" width="4.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="482.8" y="254.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (810 samples, 0.42%)</title><rect x="479.8" y="227.0" width="4.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="482.8" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (810 samples, 0.42%)</title><rect x="479.8" y="211.0" width="4.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="482.8" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$67/1497891062.compare (810 samples, 0.42%)</title><rect x="479.8" y="195.0" width="4.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="482.8" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (810 samples, 0.42%)</title><rect x="479.8" y="179.0" width="4.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="482.8" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$66/474651931.apply (810 samples, 0.42%)</title><rect x="479.8" y="163.0" width="4.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="482.8" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (810 samples, 0.42%)</title><rect x="479.8" y="147.0" width="4.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="482.8" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (760 samples, 0.39%)</title><rect x="479.8" y="131.0" width="4.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="482.8" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (760 samples, 0.39%)</title><rect x="479.8" y="115.0" width="4.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="482.8" y="126.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (760 samples, 0.39%)</title><rect x="479.8" y="99.0" width="4.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="482.8" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (50 samples, 0.03%)</title><rect x="484.4" y="131.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="487.4" y="142.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (50 samples, 0.03%)</title><rect x="484.4" y="115.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="487.4" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (512 samples, 0.27%)</title><rect x="484.7" y="419.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="487.7" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (502 samples, 0.26%)</title><rect x="484.8" y="403.0" width="3.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="487.8" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (502 samples, 0.26%)</title><rect x="484.8" y="387.0" width="3.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="487.8" y="398.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (206 samples, 0.11%)</title><rect x="484.8" y="371.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="487.8" y="382.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (206 samples, 0.11%)</title><rect x="484.8" y="355.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="487.8" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (206 samples, 0.11%)</title><rect x="484.8" y="339.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="487.8" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (206 samples, 0.11%)</title><rect x="484.8" y="323.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="487.8" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (206 samples, 0.11%)</title><rect x="484.8" y="307.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="487.8" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/123226378.compare (206 samples, 0.11%)</title><rect x="484.8" y="291.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="487.8" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (206 samples, 0.11%)</title><rect x="484.8" y="275.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="487.8" y="286.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (206 samples, 0.11%)</title><rect x="484.8" y="259.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="487.8" y="270.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (206 samples, 0.11%)</title><rect x="484.8" y="243.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="487.8" y="254.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (206 samples, 0.11%)</title><rect x="484.8" y="227.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="487.8" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (206 samples, 0.11%)</title><rect x="484.8" y="211.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="487.8" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$67/1497891062.compare (206 samples, 0.11%)</title><rect x="484.8" y="195.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="487.8" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (206 samples, 0.11%)</title><rect x="484.8" y="179.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="487.8" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$66/474651931.apply (206 samples, 0.11%)</title><rect x="484.8" y="163.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="487.8" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (206 samples, 0.11%)</title><rect x="484.8" y="147.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="487.8" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (203 samples, 0.11%)</title><rect x="484.8" y="131.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="487.8" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (203 samples, 0.11%)</title><rect x="484.8" y="115.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="487.8" y="126.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (203 samples, 0.11%)</title><rect x="484.8" y="99.0" width="1.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="487.8" y="110.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (289 samples, 0.15%)</title><rect x="486.1" y="371.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="489.1" y="382.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (289 samples, 0.15%)</title><rect x="486.1" y="355.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="489.1" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (289 samples, 0.15%)</title><rect x="486.1" y="339.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="489.1" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (289 samples, 0.15%)</title><rect x="486.1" y="323.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="489.1" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (289 samples, 0.15%)</title><rect x="486.1" y="307.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="489.1" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (289 samples, 0.15%)</title><rect x="486.1" y="291.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="489.1" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (175 samples, 0.09%)</title><rect x="486.1" y="275.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="489.1" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (175 samples, 0.09%)</title><rect x="486.1" y="259.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="489.1" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (175 samples, 0.09%)</title><rect x="486.1" y="243.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="489.1" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (175 samples, 0.09%)</title><rect x="486.1" y="227.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="489.1" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (46 samples, 0.02%)</title><rect x="486.1" y="211.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="489.1" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.valueAt (50 samples, 0.03%)</title><rect x="486.8" y="211.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="489.8" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/123226378.compare (114 samples, 0.06%)</title><rect x="487.2" y="275.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="490.2" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (114 samples, 0.06%)</title><rect x="487.2" y="259.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="490.2" y="270.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (114 samples, 0.06%)</title><rect x="487.2" y="243.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="490.2" y="254.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (114 samples, 0.06%)</title><rect x="487.2" y="227.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="490.2" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (114 samples, 0.06%)</title><rect x="487.2" y="211.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="490.2" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (114 samples, 0.06%)</title><rect x="487.2" y="195.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="490.2" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$67/1497891062.compare (114 samples, 0.06%)</title><rect x="487.2" y="179.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="490.2" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (114 samples, 0.06%)</title><rect x="487.2" y="163.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="490.2" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$66/474651931.apply (114 samples, 0.06%)</title><rect x="487.2" y="147.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="490.2" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (114 samples, 0.06%)</title><rect x="487.2" y="131.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="490.2" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (104 samples, 0.05%)</title><rect x="487.2" y="115.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="490.2" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (104 samples, 0.05%)</title><rect x="487.2" y="99.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="490.2" y="110.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (104 samples, 0.05%)</title><rect x="487.2" y="83.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="490.2" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/StorageSession.stream (18,643 samples, 9.65%)</title><rect x="487.9" y="483.0" width="113.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="490.9" y="494.0">ru/mail/polis/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (42 samples, 0.02%)</title><rect x="487.9" y="467.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="490.9" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/StorageSession.next (18,581 samples, 9.62%)</title><rect x="488.2" y="467.0" width="113.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="491.2" y="478.0">ru/mail/polis/..</text>
</g>
<g>
<title>byte[] (314 samples, 0.16%)</title><rect x="488.2" y="451.0" width="1.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="491.2" y="462.0"></text>
</g>
<g>
<title>java/lang/Integer.toHexString (133 samples, 0.07%)</title><rect x="490.1" y="451.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="493.1" y="462.0"></text>
</g>
<g>
<title>java/lang/Integer.toUnsignedString0 (133 samples, 0.07%)</title><rect x="490.1" y="435.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="493.1" y="446.0"></text>
</g>
<g>
<title>byte[] (133 samples, 0.07%)</title><rect x="490.1" y="419.0" width="0.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="493.1" y="430.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (116 samples, 0.06%)</title><rect x="491.0" y="451.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="494.0" y="462.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (116 samples, 0.06%)</title><rect x="491.0" y="435.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="494.0" y="446.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (116 samples, 0.06%)</title><rect x="491.0" y="419.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="494.0" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (116 samples, 0.06%)</title><rect x="491.0" y="403.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="494.0" y="414.0"></text>
</g>
<g>
<title>byte[] (116 samples, 0.06%)</title><rect x="491.0" y="387.0" width="0.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="494.0" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (310 samples, 0.16%)</title><rect x="491.7" y="451.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="494.7" y="462.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (310 samples, 0.16%)</title><rect x="491.7" y="435.0" width="1.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="494.7" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (346 samples, 0.18%)</title><rect x="493.6" y="451.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="496.6" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (325 samples, 0.17%)</title><rect x="493.6" y="435.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="496.6" y="446.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (325 samples, 0.17%)</title><rect x="493.6" y="419.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="496.6" y="430.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (325 samples, 0.17%)</title><rect x="493.6" y="403.0" width="1.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="496.6" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getValue (368 samples, 0.19%)</title><rect x="495.7" y="451.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="498.7" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (339 samples, 0.18%)</title><rect x="495.7" y="435.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="498.7" y="446.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (339 samples, 0.18%)</title><rect x="495.7" y="419.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="498.7" y="430.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (339 samples, 0.18%)</title><rect x="495.7" y="403.0" width="2.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="498.7" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$UntilIterator.next (16,608 samples, 8.60%)</title><rect x="497.9" y="451.0" width="101.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="500.9" y="462.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$UntilIterator.next (16,608 samples, 8.60%)</title><rect x="497.9" y="435.0" width="101.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="500.9" y="446.0">ru/mail/poli..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (15,644 samples, 8.10%)</title><rect x="497.9" y="419.0" width="95.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="500.9" y="430.0">com/google/..</text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (15,644 samples, 8.10%)</title><rect x="497.9" y="403.0" width="95.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="500.9" y="414.0">com/google/..</text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (15,644 samples, 8.10%)</title><rect x="497.9" y="387.0" width="95.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="500.9" y="398.0">com/google/..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (15,644 samples, 8.10%)</title><rect x="497.9" y="371.0" width="95.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="500.9" y="382.0">com/google/..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (15,644 samples, 8.10%)</title><rect x="497.9" y="355.0" width="95.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="500.9" y="366.0">ru/mail/pol..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (14,320 samples, 7.41%)</title><rect x="497.9" y="339.0" width="87.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="500.9" y="350.0">com/google..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (69 samples, 0.04%)</title><rect x="497.9" y="323.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="500.9" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (69 samples, 0.04%)</title><rect x="497.9" y="307.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="500.9" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (69 samples, 0.04%)</title><rect x="497.9" y="291.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="500.9" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (69 samples, 0.04%)</title><rect x="497.9" y="275.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="500.9" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (69 samples, 0.04%)</title><rect x="497.9" y="259.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="500.9" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$72/878358964.apply (69 samples, 0.04%)</title><rect x="497.9" y="243.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="500.9" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (69 samples, 0.04%)</title><rect x="497.9" y="227.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="500.9" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (69 samples, 0.04%)</title><rect x="497.9" y="211.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="500.9" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (69 samples, 0.04%)</title><rect x="497.9" y="195.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="500.9" y="206.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (5,949 samples, 3.08%)</title><rect x="498.3" y="323.0" width="36.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="501.3" y="334.0">jav..</text>
</g>
<g>
<title>java/util/PriorityQueue.poll (5,949 samples, 3.08%)</title><rect x="498.3" y="307.0" width="36.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="501.3" y="318.0">jav..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (5,949 samples, 3.08%)</title><rect x="498.3" y="291.0" width="36.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="501.3" y="302.0">jav..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (5,949 samples, 3.08%)</title><rect x="498.3" y="275.0" width="36.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="501.3" y="286.0">com..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (5,949 samples, 3.08%)</title><rect x="498.3" y="259.0" width="36.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="501.3" y="270.0">com..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/123226378.compare (5,949 samples, 3.08%)</title><rect x="498.3" y="243.0" width="36.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="501.3" y="254.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (5,949 samples, 3.08%)</title><rect x="498.3" y="227.0" width="36.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="501.3" y="238.0">ru/..</text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (5,949 samples, 3.08%)</title><rect x="498.3" y="211.0" width="36.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="501.3" y="222.0">jav..</text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (5,949 samples, 3.08%)</title><rect x="498.3" y="195.0" width="36.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="501.3" y="206.0">jav..</text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (5,949 samples, 3.08%)</title><rect x="498.3" y="179.0" width="36.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="501.3" y="190.0">jav..</text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (5,949 samples, 3.08%)</title><rect x="498.3" y="163.0" width="36.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="501.3" y="174.0">jav..</text>
</g>
<g>
<title>java/util/Comparator$$Lambda$67/1497891062.compare (5,949 samples, 3.08%)</title><rect x="498.3" y="147.0" width="36.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="501.3" y="158.0">jav..</text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (5,949 samples, 3.08%)</title><rect x="498.3" y="131.0" width="36.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="501.3" y="142.0">jav..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$66/474651931.apply (5,949 samples, 3.08%)</title><rect x="498.3" y="115.0" width="36.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="501.3" y="126.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (5,949 samples, 3.08%)</title><rect x="498.3" y="99.0" width="36.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="501.3" y="110.0">ru/..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (5,686 samples, 2.94%)</title><rect x="498.3" y="83.0" width="34.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="501.3" y="94.0">ja..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (5,686 samples, 2.94%)</title><rect x="498.3" y="67.0" width="34.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="501.3" y="78.0">ja..</text>
</g>
<g>
<title>java.nio.DirectByteBufferR (5,686 samples, 2.94%)</title><rect x="498.3" y="51.0" width="34.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="501.3" y="62.0">ja..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (263 samples, 0.14%)</title><rect x="533.1" y="83.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="536.1" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (263 samples, 0.14%)</title><rect x="533.1" y="67.0" width="1.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="536.1" y="78.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (8,302 samples, 4.30%)</title><rect x="534.7" y="323.0" width="50.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="537.7" y="334.0">java/..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (8,302 samples, 4.30%)</title><rect x="534.7" y="307.0" width="50.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="537.7" y="318.0">java/..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (8,302 samples, 4.30%)</title><rect x="534.7" y="291.0" width="50.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="537.7" y="302.0">java/..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (8,302 samples, 4.30%)</title><rect x="534.7" y="275.0" width="50.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="537.7" y="286.0">java/..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (8,302 samples, 4.30%)</title><rect x="534.7" y="259.0" width="50.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="537.7" y="270.0">com/g..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (8,302 samples, 4.30%)</title><rect x="534.7" y="243.0" width="50.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="537.7" y="254.0">com/g..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (5,108 samples, 2.64%)</title><rect x="534.7" y="227.0" width="31.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="537.7" y="238.0">co..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (5,108 samples, 2.64%)</title><rect x="534.7" y="211.0" width="31.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="537.7" y="222.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (5,108 samples, 2.64%)</title><rect x="534.7" y="195.0" width="31.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="537.7" y="206.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (5,108 samples, 2.64%)</title><rect x="534.7" y="179.0" width="31.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="537.7" y="190.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.of (318 samples, 0.16%)</title><rect x="534.7" y="163.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="537.7" y="174.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Row (318 samples, 0.16%)</title><rect x="534.7" y="147.0" width="1.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="537.7" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (1,294 samples, 0.67%)</title><rect x="536.6" y="163.0" width="7.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="539.6" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (629 samples, 0.33%)</title><rect x="536.6" y="147.0" width="3.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="539.6" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (629 samples, 0.33%)</title><rect x="536.6" y="131.0" width="3.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="539.6" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (629 samples, 0.33%)</title><rect x="536.6" y="115.0" width="3.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="539.6" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (665 samples, 0.34%)</title><rect x="540.5" y="147.0" width="4.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="543.5" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (665 samples, 0.34%)</title><rect x="540.5" y="131.0" width="4.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="543.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (1,322 samples, 0.68%)</title><rect x="544.5" y="163.0" width="8.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="547.5" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (659 samples, 0.34%)</title><rect x="544.5" y="147.0" width="4.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="547.5" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (659 samples, 0.34%)</title><rect x="544.5" y="131.0" width="4.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="547.5" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (659 samples, 0.34%)</title><rect x="544.5" y="115.0" width="4.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="547.5" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (663 samples, 0.34%)</title><rect x="548.6" y="147.0" width="4.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="551.6" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (663 samples, 0.34%)</title><rect x="548.6" y="131.0" width="4.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="551.6" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.timestampAt (625 samples, 0.32%)</title><rect x="552.6" y="163.0" width="3.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="555.6" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (625 samples, 0.32%)</title><rect x="552.6" y="147.0" width="3.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="555.6" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (625 samples, 0.32%)</title><rect x="552.6" y="131.0" width="3.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="555.6" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (625 samples, 0.32%)</title><rect x="552.6" y="115.0" width="3.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="555.6" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.valueAt (1,278 samples, 0.66%)</title><rect x="556.4" y="163.0" width="7.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="559.4" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (636 samples, 0.33%)</title><rect x="556.4" y="147.0" width="3.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="559.4" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (636 samples, 0.33%)</title><rect x="556.4" y="131.0" width="3.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="559.4" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (636 samples, 0.33%)</title><rect x="556.4" y="115.0" width="3.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="559.4" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (642 samples, 0.33%)</title><rect x="560.3" y="147.0" width="3.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="563.3" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (642 samples, 0.33%)</title><rect x="560.3" y="131.0" width="3.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="563.3" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Value.of (271 samples, 0.14%)</title><rect x="564.2" y="163.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="567.2" y="174.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Value (271 samples, 0.14%)</title><rect x="564.2" y="147.0" width="1.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="567.2" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/123226378.compare (3,194 samples, 1.65%)</title><rect x="565.9" y="227.0" width="19.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="568.9" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (3,194 samples, 1.65%)</title><rect x="565.9" y="211.0" width="19.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="568.9" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (3,194 samples, 1.65%)</title><rect x="565.9" y="195.0" width="19.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="568.9" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (3,194 samples, 1.65%)</title><rect x="565.9" y="179.0" width="19.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="568.9" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (3,194 samples, 1.65%)</title><rect x="565.9" y="163.0" width="19.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="568.9" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (3,194 samples, 1.65%)</title><rect x="565.9" y="147.0" width="19.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="568.9" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$67/1497891062.compare (3,194 samples, 1.65%)</title><rect x="565.9" y="131.0" width="19.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="568.9" y="142.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (3,194 samples, 1.65%)</title><rect x="565.9" y="115.0" width="19.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="568.9" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$66/474651931.apply (3,194 samples, 1.65%)</title><rect x="565.9" y="99.0" width="19.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="568.9" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (3,194 samples, 1.65%)</title><rect x="565.9" y="83.0" width="19.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="568.9" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (3,054 samples, 1.58%)</title><rect x="565.9" y="67.0" width="18.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="568.9" y="78.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (3,054 samples, 1.58%)</title><rect x="565.9" y="51.0" width="18.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="568.9" y="62.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (3,054 samples, 1.58%)</title><rect x="565.9" y="35.0" width="18.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="568.9" y="46.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (140 samples, 0.07%)</title><rect x="584.6" y="67.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="587.6" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (140 samples, 0.07%)</title><rect x="584.6" y="51.0" width="0.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="587.6" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$72/878358964.apply (1,324 samples, 0.69%)</title><rect x="585.4" y="339.0" width="8.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="588.4" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (1,324 samples, 0.69%)</title><rect x="585.4" y="323.0" width="8.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="588.4" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (1,214 samples, 0.63%)</title><rect x="585.4" y="307.0" width="7.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="588.4" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (1,214 samples, 0.63%)</title><rect x="585.4" y="291.0" width="7.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="588.4" y="302.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (1,214 samples, 0.63%)</title><rect x="585.4" y="275.0" width="7.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="588.4" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (110 samples, 0.06%)</title><rect x="592.8" y="307.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="595.8" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (110 samples, 0.06%)</title><rect x="592.8" y="291.0" width="0.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="595.8" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (964 samples, 0.50%)</title><rect x="593.5" y="419.0" width="5.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="596.5" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (964 samples, 0.50%)</title><rect x="593.5" y="403.0" width="5.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="596.5" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao$$Lambda$80/527983093.apply (964 samples, 0.50%)</title><rect x="593.5" y="387.0" width="5.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="596.5" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.lambda$iterator$0 (964 samples, 0.50%)</title><rect x="593.5" y="371.0" width="5.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="596.5" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.of (183 samples, 0.09%)</title><rect x="593.5" y="355.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="596.5" y="366.0"></text>
</g>
<g>
<title>ru.mail.polis.Record (183 samples, 0.09%)</title><rect x="593.5" y="339.0" width="1.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="596.5" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (399 samples, 0.21%)</title><rect x="594.6" y="355.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="597.6" y="366.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (366 samples, 0.19%)</title><rect x="594.6" y="339.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="597.6" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (366 samples, 0.19%)</title><rect x="594.6" y="323.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="597.6" y="334.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (366 samples, 0.19%)</title><rect x="594.6" y="307.0" width="2.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="597.6" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Value.getData (382 samples, 0.20%)</title><rect x="597.1" y="355.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="600.1" y="366.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (334 samples, 0.17%)</title><rect x="597.1" y="339.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="600.1" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (334 samples, 0.17%)</title><rect x="597.1" y="323.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="600.1" y="334.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (334 samples, 0.17%)</title><rect x="597.1" y="307.0" width="2.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="600.1" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (48 samples, 0.02%)</title><rect x="599.1" y="339.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="602.1" y="350.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (48 samples, 0.02%)</title><rect x="599.1" y="323.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="602.1" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/StorageSession.toByteArray (386 samples, 0.20%)</title><rect x="599.4" y="451.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="602.4" y="462.0"></text>
</g>
<g>
<title>byte[] (386 samples, 0.20%)</title><rect x="599.4" y="435.0" width="2.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="602.4" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (165 samples, 0.09%)</title><rect x="601.9" y="547.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="604.9" y="558.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (103 samples, 0.05%)</title><rect x="602.3" y="531.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="605.3" y="542.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (103 samples, 0.05%)</title><rect x="602.3" y="515.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="605.3" y="526.0"></text>
</g>
<g>
<title>char[] (75 samples, 0.04%)</title><rect x="602.3" y="499.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="605.3" y="510.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (59 samples, 0.03%)</title><rect x="602.9" y="547.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="605.9" y="558.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (59 samples, 0.03%)</title><rect x="602.9" y="531.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="605.9" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/StorageSession.processWrite (330 samples, 0.17%)</title><rect x="603.3" y="579.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="606.3" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/StorageSession.next (330 samples, 0.17%)</title><rect x="603.3" y="563.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="606.3" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$UntilIterator.next (291 samples, 0.15%)</title><rect x="603.5" y="547.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="606.5" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$UntilIterator.next (291 samples, 0.15%)</title><rect x="603.5" y="531.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="606.5" y="542.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (281 samples, 0.15%)</title><rect x="603.5" y="515.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="606.5" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (281 samples, 0.15%)</title><rect x="603.5" y="499.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="606.5" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (281 samples, 0.15%)</title><rect x="603.5" y="483.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="606.5" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (281 samples, 0.15%)</title><rect x="603.5" y="467.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="606.5" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (281 samples, 0.15%)</title><rect x="603.5" y="451.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="606.5" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (256 samples, 0.13%)</title><rect x="603.5" y="435.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="606.5" y="446.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (102 samples, 0.05%)</title><rect x="603.5" y="419.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="606.5" y="430.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (102 samples, 0.05%)</title><rect x="603.5" y="403.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="606.5" y="414.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (102 samples, 0.05%)</title><rect x="603.5" y="387.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="606.5" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (102 samples, 0.05%)</title><rect x="603.5" y="371.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="606.5" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (102 samples, 0.05%)</title><rect x="603.5" y="355.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="606.5" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/123226378.compare (102 samples, 0.05%)</title><rect x="603.5" y="339.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="606.5" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (102 samples, 0.05%)</title><rect x="603.5" y="323.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="606.5" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (102 samples, 0.05%)</title><rect x="603.5" y="307.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="606.5" y="318.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (102 samples, 0.05%)</title><rect x="603.5" y="291.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="606.5" y="302.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (102 samples, 0.05%)</title><rect x="603.5" y="275.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="606.5" y="286.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (102 samples, 0.05%)</title><rect x="603.5" y="259.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="606.5" y="270.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$67/1497891062.compare (102 samples, 0.05%)</title><rect x="603.5" y="243.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="606.5" y="254.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (102 samples, 0.05%)</title><rect x="603.5" y="227.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="606.5" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$66/474651931.apply (102 samples, 0.05%)</title><rect x="603.5" y="211.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="606.5" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (102 samples, 0.05%)</title><rect x="603.5" y="195.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="606.5" y="206.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (98 samples, 0.05%)</title><rect x="603.5" y="179.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="606.5" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (98 samples, 0.05%)</title><rect x="603.5" y="163.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="606.5" y="174.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (98 samples, 0.05%)</title><rect x="603.5" y="147.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="606.5" y="158.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (154 samples, 0.08%)</title><rect x="604.1" y="419.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="607.1" y="430.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (154 samples, 0.08%)</title><rect x="604.1" y="403.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="607.1" y="414.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (154 samples, 0.08%)</title><rect x="604.1" y="387.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="607.1" y="398.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (154 samples, 0.08%)</title><rect x="604.1" y="371.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="607.1" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (154 samples, 0.08%)</title><rect x="604.1" y="355.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="607.1" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (154 samples, 0.08%)</title><rect x="604.1" y="339.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="607.1" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (89 samples, 0.05%)</title><rect x="604.1" y="323.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="607.1" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (89 samples, 0.05%)</title><rect x="604.1" y="307.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="607.1" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (89 samples, 0.05%)</title><rect x="604.1" y="291.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="607.1" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (89 samples, 0.05%)</title><rect x="604.1" y="275.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="607.1" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/123226378.compare (65 samples, 0.03%)</title><rect x="604.6" y="323.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="607.6" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (65 samples, 0.03%)</title><rect x="604.6" y="307.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="607.6" y="318.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (65 samples, 0.03%)</title><rect x="604.6" y="291.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="607.6" y="302.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (65 samples, 0.03%)</title><rect x="604.6" y="275.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="607.6" y="286.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (65 samples, 0.03%)</title><rect x="604.6" y="259.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="607.6" y="270.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (65 samples, 0.03%)</title><rect x="604.6" y="243.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="607.6" y="254.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$67/1497891062.compare (65 samples, 0.03%)</title><rect x="604.6" y="227.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="607.6" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (65 samples, 0.03%)</title><rect x="604.6" y="211.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="607.6" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$66/474651931.apply (65 samples, 0.03%)</title><rect x="604.6" y="195.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="607.6" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (65 samples, 0.03%)</title><rect x="604.6" y="179.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="607.6" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (65 samples, 0.03%)</title><rect x="604.6" y="163.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="607.6" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (65 samples, 0.03%)</title><rect x="604.6" y="147.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="607.6" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (65 samples, 0.03%)</title><rect x="604.6" y="131.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="607.6" y="142.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=25372] (47,370 samples, 24.52%)</title><rect x="605.3" y="627.0" width="289.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="608.3" y="638.0">[NIO Selector #2 tid=25372]</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (47,370 samples, 24.52%)</title><rect x="605.3" y="611.0" width="289.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="608.3" y="622.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/Session.process (47,334 samples, 24.51%)</title><rect x="605.5" y="595.0" width="289.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="608.5" y="606.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (47,116 samples, 24.39%)</title><rect x="605.5" y="579.0" width="287.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="608.5" y="590.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (47,116 samples, 24.39%)</title><rect x="605.5" y="563.0" width="287.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="608.5" y="574.0">one/nio/http/HttpSession.processHttpBuf..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (46,921 samples, 24.29%)</title><rect x="605.5" y="547.0" width="286.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="608.5" y="558.0">one/nio/http/HttpSession.handleParsedR..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (46,921 samples, 24.29%)</title><rect x="605.5" y="531.0" width="286.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="608.5" y="542.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler2_entities.handleRequest (46,901 samples, 24.28%)</title><rect x="605.5" y="515.0" width="286.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="608.5" y="526.0">RequestHandler2_entities.handleRequest</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (58 samples, 0.03%)</title><rect x="605.5" y="499.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="608.5" y="510.0"></text>
</g>
<g>
<title>java/lang/String.substring (58 samples, 0.03%)</title><rect x="605.5" y="483.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="608.5" y="494.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (58 samples, 0.03%)</title><rect x="605.5" y="467.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="608.5" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.entities (46,843 samples, 24.25%)</title><rect x="605.9" y="499.0" width="286.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="608.9" y="510.0">ru/mail/polis/service/shakhmin/AsyncHt..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.range (28,976 samples, 15.00%)</title><rect x="606.3" y="483.0" width="177.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="609.3" y="494.0">ru/mail/polis/dao/DAO.r..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.until (1,272 samples, 0.66%)</title><rect x="606.5" y="467.0" width="7.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="609.5" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$UntilIterator.&lt;init&gt; (1,259 samples, 0.65%)</title><rect x="606.6" y="451.0" width="7.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="609.6" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (1,188 samples, 0.62%)</title><rect x="606.6" y="435.0" width="7.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="609.6" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (1,188 samples, 0.62%)</title><rect x="606.6" y="419.0" width="7.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="609.6" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (1,188 samples, 0.62%)</title><rect x="606.6" y="403.0" width="7.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="609.6" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (1,188 samples, 0.62%)</title><rect x="606.6" y="387.0" width="7.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="609.6" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (1,188 samples, 0.62%)</title><rect x="606.6" y="371.0" width="7.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="609.6" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1,092 samples, 0.57%)</title><rect x="606.6" y="355.0" width="6.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="609.6" y="366.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (448 samples, 0.23%)</title><rect x="606.6" y="339.0" width="2.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="609.6" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (448 samples, 0.23%)</title><rect x="606.6" y="323.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="609.6" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (448 samples, 0.23%)</title><rect x="606.6" y="307.0" width="2.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="609.6" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (448 samples, 0.23%)</title><rect x="606.6" y="291.0" width="2.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="609.6" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (448 samples, 0.23%)</title><rect x="606.6" y="275.0" width="2.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="609.6" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/123226378.compare (448 samples, 0.23%)</title><rect x="606.6" y="259.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="609.6" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (448 samples, 0.23%)</title><rect x="606.6" y="243.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="609.6" y="254.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (448 samples, 0.23%)</title><rect x="606.6" y="227.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="609.6" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (448 samples, 0.23%)</title><rect x="606.6" y="211.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="609.6" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (448 samples, 0.23%)</title><rect x="606.6" y="195.0" width="2.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="609.6" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (448 samples, 0.23%)</title><rect x="606.6" y="179.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="609.6" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$67/1497891062.compare (448 samples, 0.23%)</title><rect x="606.6" y="163.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="609.6" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (448 samples, 0.23%)</title><rect x="606.6" y="147.0" width="2.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="609.6" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$66/474651931.apply (448 samples, 0.23%)</title><rect x="606.6" y="131.0" width="2.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="609.6" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (448 samples, 0.23%)</title><rect x="606.6" y="115.0" width="2.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="609.6" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (418 samples, 0.22%)</title><rect x="606.6" y="99.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="609.6" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (418 samples, 0.22%)</title><rect x="606.6" y="83.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="609.6" y="94.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (418 samples, 0.22%)</title><rect x="606.6" y="67.0" width="2.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="609.6" y="78.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (637 samples, 0.33%)</title><rect x="609.4" y="339.0" width="3.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="612.4" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (637 samples, 0.33%)</title><rect x="609.4" y="323.0" width="3.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="612.4" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (637 samples, 0.33%)</title><rect x="609.4" y="307.0" width="3.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="612.4" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (637 samples, 0.33%)</title><rect x="609.4" y="291.0" width="3.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="612.4" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (637 samples, 0.33%)</title><rect x="609.4" y="275.0" width="3.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="612.4" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (637 samples, 0.33%)</title><rect x="609.4" y="259.0" width="3.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="612.4" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (422 samples, 0.22%)</title><rect x="609.4" y="243.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="612.4" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (422 samples, 0.22%)</title><rect x="609.4" y="227.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="612.4" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (422 samples, 0.22%)</title><rect x="609.4" y="211.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="612.4" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (422 samples, 0.22%)</title><rect x="609.4" y="195.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="612.4" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (98 samples, 0.05%)</title><rect x="609.5" y="179.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="612.5" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (49 samples, 0.03%)</title><rect x="609.5" y="163.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="612.5" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (49 samples, 0.03%)</title><rect x="609.5" y="147.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="612.5" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (49 samples, 0.03%)</title><rect x="609.5" y="131.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="612.5" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (49 samples, 0.03%)</title><rect x="609.8" y="163.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="612.8" y="174.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (49 samples, 0.03%)</title><rect x="609.8" y="147.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="612.8" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (115 samples, 0.06%)</title><rect x="610.1" y="179.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="613.1" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (62 samples, 0.03%)</title><rect x="610.1" y="163.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="613.1" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (62 samples, 0.03%)</title><rect x="610.1" y="147.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="613.1" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (62 samples, 0.03%)</title><rect x="610.1" y="131.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="613.1" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (53 samples, 0.03%)</title><rect x="610.4" y="163.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="613.4" y="174.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (53 samples, 0.03%)</title><rect x="610.4" y="147.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="613.4" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.timestampAt (60 samples, 0.03%)</title><rect x="610.8" y="179.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="613.8" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (60 samples, 0.03%)</title><rect x="610.8" y="163.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="613.8" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (60 samples, 0.03%)</title><rect x="610.8" y="147.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="613.8" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (60 samples, 0.03%)</title><rect x="610.8" y="131.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="613.8" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.valueAt (107 samples, 0.06%)</title><rect x="611.1" y="179.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="614.1" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (52 samples, 0.03%)</title><rect x="611.1" y="163.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="614.1" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (52 samples, 0.03%)</title><rect x="611.1" y="147.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="614.1" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (52 samples, 0.03%)</title><rect x="611.1" y="131.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="614.1" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (55 samples, 0.03%)</title><rect x="611.4" y="163.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="614.4" y="174.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (55 samples, 0.03%)</title><rect x="611.4" y="147.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="614.4" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/123226378.compare (215 samples, 0.11%)</title><rect x="611.9" y="243.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="614.9" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (215 samples, 0.11%)</title><rect x="611.9" y="227.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="614.9" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (215 samples, 0.11%)</title><rect x="611.9" y="211.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="614.9" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (215 samples, 0.11%)</title><rect x="611.9" y="195.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="614.9" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (215 samples, 0.11%)</title><rect x="611.9" y="179.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="614.9" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (215 samples, 0.11%)</title><rect x="611.9" y="163.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="614.9" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$67/1497891062.compare (215 samples, 0.11%)</title><rect x="611.9" y="147.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="614.9" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (215 samples, 0.11%)</title><rect x="611.9" y="131.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="614.9" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$66/474651931.apply (215 samples, 0.11%)</title><rect x="611.9" y="115.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="614.9" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (215 samples, 0.11%)</title><rect x="611.9" y="99.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="614.9" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (201 samples, 0.10%)</title><rect x="611.9" y="83.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="614.9" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (201 samples, 0.10%)</title><rect x="611.9" y="67.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="614.9" y="78.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (201 samples, 0.10%)</title><rect x="611.9" y="51.0" width="1.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="614.9" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$72/878358964.apply (96 samples, 0.05%)</title><rect x="613.3" y="355.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="616.3" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (96 samples, 0.05%)</title><rect x="613.3" y="339.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="616.3" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (85 samples, 0.04%)</title><rect x="613.3" y="323.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="616.3" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (85 samples, 0.04%)</title><rect x="613.3" y="307.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="616.3" y="318.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (85 samples, 0.04%)</title><rect x="613.3" y="291.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="616.3" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (71 samples, 0.04%)</title><rect x="613.8" y="435.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="616.8" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (71 samples, 0.04%)</title><rect x="613.8" y="419.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="616.8" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao$$Lambda$80/527983093.apply (71 samples, 0.04%)</title><rect x="613.8" y="403.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="616.8" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.lambda$iterator$0 (71 samples, 0.04%)</title><rect x="613.8" y="387.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="616.8" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.iterator (27,669 samples, 14.32%)</title><rect x="614.3" y="467.0" width="169.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="617.3" y="478.0">ru/mail/polis/dao/shak..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.rowsIterator (27,654 samples, 14.32%)</title><rect x="614.4" y="451.0" width="168.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="617.4" y="462.0">ru/mail/polis/dao/shak..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (24,271 samples, 12.57%)</title><rect x="614.4" y="435.0" width="148.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="617.4" y="446.0">ru/mail/polis/dao/s..</text>
</g>
<g>
<title>java/util/ArrayList.add (64 samples, 0.03%)</title><rect x="614.4" y="419.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="617.4" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (64 samples, 0.03%)</title><rect x="614.4" y="403.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="617.4" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (64 samples, 0.03%)</title><rect x="614.4" y="387.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="617.4" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (64 samples, 0.03%)</title><rect x="614.4" y="371.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="617.4" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (64 samples, 0.03%)</title><rect x="614.4" y="355.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="617.4" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (64 samples, 0.03%)</title><rect x="614.4" y="339.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="617.4" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.iterator (180 samples, 0.09%)</title><rect x="614.9" y="419.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="617.9" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (115 samples, 0.06%)</title><rect x="614.9" y="403.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="617.9" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.reduceIterators (65 samples, 0.03%)</title><rect x="615.6" y="403.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="618.6" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (46 samples, 0.02%)</title><rect x="615.7" y="387.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="618.7" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (41 samples, 0.02%)</title><rect x="615.7" y="371.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="618.7" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.iterator (24,004 samples, 12.43%)</title><rect x="616.0" y="419.0" width="146.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="619.0" y="430.0">ru/mail/polis/dao/..</text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.SSTable$SSTableIterator (209 samples, 0.11%)</title><rect x="616.0" y="403.0" width="1.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="619.0" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.&lt;init&gt; (23,795 samples, 12.32%)</title><rect x="617.3" y="403.0" width="145.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="620.3" y="414.0">ru/mail/polis/dao/..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.position (23,795 samples, 12.32%)</title><rect x="617.3" y="387.0" width="145.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="620.3" y="398.0">ru/mail/polis/dao/..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (11,811 samples, 6.11%)</title><rect x="617.3" y="371.0" width="72.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="620.3" y="382.0">ru/mail/..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (5,797 samples, 3.00%)</title><rect x="617.3" y="355.0" width="35.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="620.3" y="366.0">jav..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (5,797 samples, 3.00%)</title><rect x="617.3" y="339.0" width="35.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="620.3" y="350.0">jav..</text>
</g>
<g>
<title>java.nio.DirectByteBufferR (5,797 samples, 3.00%)</title><rect x="617.3" y="323.0" width="35.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="620.3" y="334.0">jav..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (6,014 samples, 3.11%)</title><rect x="652.7" y="355.0" width="36.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="655.7" y="366.0">jav..</text>
</g>
<g>
<title>java.nio.DirectByteBufferR (6,014 samples, 3.11%)</title><rect x="652.7" y="339.0" width="36.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="655.7" y="350.0">jav..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (11,984 samples, 6.20%)</title><rect x="689.4" y="371.0" width="73.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="692.4" y="382.0">ru/mail/..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (5,999 samples, 3.11%)</title><rect x="689.4" y="355.0" width="36.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="692.4" y="366.0">jav..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (5,999 samples, 3.11%)</title><rect x="689.4" y="339.0" width="36.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="692.4" y="350.0">jav..</text>
</g>
<g>
<title>java.nio.DirectByteBufferR (5,999 samples, 3.11%)</title><rect x="689.4" y="323.0" width="36.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="692.4" y="334.0">jav..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (5,985 samples, 3.10%)</title><rect x="726.1" y="355.0" width="36.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="729.1" y="366.0">jav..</text>
</g>
<g>
<title>java.nio.DirectByteBufferR (5,985 samples, 3.10%)</title><rect x="726.1" y="339.0" width="36.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="729.1" y="350.0">jav..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.reduceIterators (3,383 samples, 1.75%)</title><rect x="762.6" y="435.0" width="20.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="765.6" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (2,878 samples, 1.49%)</title><rect x="762.7" y="419.0" width="17.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="765.7" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (2,866 samples, 1.48%)</title><rect x="762.8" y="403.0" width="17.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="765.8" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (86 samples, 0.04%)</title><rect x="763.1" y="387.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="766.1" y="398.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (86 samples, 0.04%)</title><rect x="763.1" y="371.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="766.1" y="382.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (2,709 samples, 1.40%)</title><rect x="763.7" y="387.0" width="16.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="766.7" y="398.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (2,709 samples, 1.40%)</title><rect x="763.7" y="371.0" width="16.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="766.7" y="382.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.grow (62 samples, 0.03%)</title><rect x="763.7" y="355.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="766.7" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (62 samples, 0.03%)</title><rect x="763.7" y="339.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="766.7" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (62 samples, 0.03%)</title><rect x="763.7" y="323.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="766.7" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (2,647 samples, 1.37%)</title><rect x="764.1" y="355.0" width="16.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="767.1" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (2,647 samples, 1.37%)</title><rect x="764.1" y="339.0" width="16.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="767.1" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2,647 samples, 1.37%)</title><rect x="764.1" y="323.0" width="16.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="767.1" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2,647 samples, 1.37%)</title><rect x="764.1" y="307.0" width="16.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="767.1" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (1,879 samples, 0.97%)</title><rect x="764.1" y="291.0" width="11.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="767.1" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (1,879 samples, 0.97%)</title><rect x="764.1" y="275.0" width="11.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="767.1" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (1,879 samples, 0.97%)</title><rect x="764.1" y="259.0" width="11.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="767.1" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (1,879 samples, 0.97%)</title><rect x="764.1" y="243.0" width="11.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="767.1" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.of (113 samples, 0.06%)</title><rect x="764.1" y="227.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="767.1" y="238.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Row (113 samples, 0.06%)</title><rect x="764.1" y="211.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="767.1" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (482 samples, 0.25%)</title><rect x="764.8" y="227.0" width="3.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="767.8" y="238.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (259 samples, 0.13%)</title><rect x="764.8" y="211.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="767.8" y="222.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (259 samples, 0.13%)</title><rect x="764.8" y="195.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="767.8" y="206.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (259 samples, 0.13%)</title><rect x="764.8" y="179.0" width="1.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="767.8" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (223 samples, 0.12%)</title><rect x="766.4" y="211.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="769.4" y="222.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (223 samples, 0.12%)</title><rect x="766.4" y="195.0" width="1.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="769.4" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (482 samples, 0.25%)</title><rect x="767.8" y="227.0" width="2.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="770.8" y="238.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (246 samples, 0.13%)</title><rect x="767.8" y="211.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="770.8" y="222.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (246 samples, 0.13%)</title><rect x="767.8" y="195.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="770.8" y="206.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (246 samples, 0.13%)</title><rect x="767.8" y="179.0" width="1.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="770.8" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (236 samples, 0.12%)</title><rect x="769.3" y="211.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="772.3" y="222.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (236 samples, 0.12%)</title><rect x="769.3" y="195.0" width="1.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="772.3" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.timestampAt (280 samples, 0.14%)</title><rect x="770.7" y="227.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="773.7" y="238.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (280 samples, 0.14%)</title><rect x="770.7" y="211.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="773.7" y="222.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (280 samples, 0.14%)</title><rect x="770.7" y="195.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="773.7" y="206.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (280 samples, 0.14%)</title><rect x="770.7" y="179.0" width="1.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="773.7" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.valueAt (448 samples, 0.23%)</title><rect x="772.4" y="227.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="775.4" y="238.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (232 samples, 0.12%)</title><rect x="772.4" y="211.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="775.4" y="222.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (232 samples, 0.12%)</title><rect x="772.4" y="195.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="775.4" y="206.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (232 samples, 0.12%)</title><rect x="772.4" y="179.0" width="1.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="775.4" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (216 samples, 0.11%)</title><rect x="773.8" y="211.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="776.8" y="222.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (216 samples, 0.11%)</title><rect x="773.8" y="195.0" width="1.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="776.8" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Value.of (74 samples, 0.04%)</title><rect x="775.1" y="227.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="778.1" y="238.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Value (74 samples, 0.04%)</title><rect x="775.1" y="211.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="778.1" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/123226378.compare (768 samples, 0.40%)</title><rect x="775.6" y="291.0" width="4.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="778.6" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (768 samples, 0.40%)</title><rect x="775.6" y="275.0" width="4.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="778.6" y="286.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (768 samples, 0.40%)</title><rect x="775.6" y="259.0" width="4.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="778.6" y="270.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (768 samples, 0.40%)</title><rect x="775.6" y="243.0" width="4.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="778.6" y="254.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (768 samples, 0.40%)</title><rect x="775.6" y="227.0" width="4.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="778.6" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (768 samples, 0.40%)</title><rect x="775.6" y="211.0" width="4.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="778.6" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$67/1497891062.compare (768 samples, 0.40%)</title><rect x="775.6" y="195.0" width="4.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="778.6" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (768 samples, 0.40%)</title><rect x="775.6" y="179.0" width="4.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="778.6" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$66/474651931.apply (768 samples, 0.40%)</title><rect x="775.6" y="163.0" width="4.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="778.6" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (768 samples, 0.40%)</title><rect x="775.6" y="147.0" width="4.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="778.6" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (714 samples, 0.37%)</title><rect x="775.6" y="131.0" width="4.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="778.6" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (714 samples, 0.37%)</title><rect x="775.6" y="115.0" width="4.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="778.6" y="126.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (714 samples, 0.37%)</title><rect x="775.6" y="99.0" width="4.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="778.6" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (54 samples, 0.03%)</title><rect x="780.0" y="131.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="783.0" y="142.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (54 samples, 0.03%)</title><rect x="780.0" y="115.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="783.0" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (494 samples, 0.26%)</title><rect x="780.3" y="419.0" width="3.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="783.3" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (488 samples, 0.25%)</title><rect x="780.3" y="403.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="783.3" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (488 samples, 0.25%)</title><rect x="780.3" y="387.0" width="3.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="783.3" y="398.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (196 samples, 0.10%)</title><rect x="780.4" y="371.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="783.4" y="382.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (196 samples, 0.10%)</title><rect x="780.4" y="355.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="783.4" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (196 samples, 0.10%)</title><rect x="780.4" y="339.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="783.4" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (196 samples, 0.10%)</title><rect x="780.4" y="323.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="783.4" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (196 samples, 0.10%)</title><rect x="780.4" y="307.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="783.4" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/123226378.compare (196 samples, 0.10%)</title><rect x="780.4" y="291.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="783.4" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (196 samples, 0.10%)</title><rect x="780.4" y="275.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="783.4" y="286.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (196 samples, 0.10%)</title><rect x="780.4" y="259.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="783.4" y="270.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (196 samples, 0.10%)</title><rect x="780.4" y="243.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="783.4" y="254.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (196 samples, 0.10%)</title><rect x="780.4" y="227.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="783.4" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (196 samples, 0.10%)</title><rect x="780.4" y="211.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="783.4" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$67/1497891062.compare (196 samples, 0.10%)</title><rect x="780.4" y="195.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="783.4" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (196 samples, 0.10%)</title><rect x="780.4" y="179.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="783.4" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$66/474651931.apply (196 samples, 0.10%)</title><rect x="780.4" y="163.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="783.4" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (196 samples, 0.10%)</title><rect x="780.4" y="147.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="783.4" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (191 samples, 0.10%)</title><rect x="780.4" y="131.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="783.4" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (191 samples, 0.10%)</title><rect x="780.4" y="115.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="783.4" y="126.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (191 samples, 0.10%)</title><rect x="780.4" y="99.0" width="1.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="783.4" y="110.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (280 samples, 0.14%)</title><rect x="781.6" y="371.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="784.6" y="382.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (280 samples, 0.14%)</title><rect x="781.6" y="355.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="784.6" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (280 samples, 0.14%)</title><rect x="781.6" y="339.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="784.6" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (280 samples, 0.14%)</title><rect x="781.6" y="323.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="784.6" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (280 samples, 0.14%)</title><rect x="781.6" y="307.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="784.6" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (280 samples, 0.14%)</title><rect x="781.6" y="291.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="784.6" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (166 samples, 0.09%)</title><rect x="781.6" y="275.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="784.6" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (166 samples, 0.09%)</title><rect x="781.6" y="259.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="784.6" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (166 samples, 0.09%)</title><rect x="781.6" y="243.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="784.6" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (166 samples, 0.09%)</title><rect x="781.6" y="227.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="784.6" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (54 samples, 0.03%)</title><rect x="781.9" y="211.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="784.9" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/123226378.compare (114 samples, 0.06%)</title><rect x="782.6" y="275.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="785.6" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (114 samples, 0.06%)</title><rect x="782.6" y="259.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="785.6" y="270.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (114 samples, 0.06%)</title><rect x="782.6" y="243.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="785.6" y="254.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (114 samples, 0.06%)</title><rect x="782.6" y="227.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="785.6" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (114 samples, 0.06%)</title><rect x="782.6" y="211.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="785.6" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (114 samples, 0.06%)</title><rect x="782.6" y="195.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="785.6" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$67/1497891062.compare (114 samples, 0.06%)</title><rect x="782.6" y="179.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="785.6" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (114 samples, 0.06%)</title><rect x="782.6" y="163.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="785.6" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$66/474651931.apply (114 samples, 0.06%)</title><rect x="782.6" y="147.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="785.6" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (114 samples, 0.06%)</title><rect x="782.6" y="131.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="785.6" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (106 samples, 0.05%)</title><rect x="782.6" y="115.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="785.6" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (106 samples, 0.05%)</title><rect x="782.6" y="99.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="785.6" y="110.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (106 samples, 0.05%)</title><rect x="782.6" y="83.0" width="0.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="785.6" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/StorageSession.stream (17,798 samples, 9.21%)</title><rect x="783.3" y="483.0" width="108.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="786.3" y="494.0">ru/mail/polis..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (45 samples, 0.02%)</title><rect x="783.3" y="467.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="786.3" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/StorageSession.next (17,745 samples, 9.19%)</title><rect x="783.6" y="467.0" width="108.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="786.6" y="478.0">ru/mail/polis..</text>
</g>
<g>
<title>byte[] (274 samples, 0.14%)</title><rect x="783.6" y="451.0" width="1.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="786.6" y="462.0"></text>
</g>
<g>
<title>java/lang/Integer.toHexString (107 samples, 0.06%)</title><rect x="785.3" y="451.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="788.3" y="462.0"></text>
</g>
<g>
<title>java/lang/Integer.toUnsignedString0 (107 samples, 0.06%)</title><rect x="785.3" y="435.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="788.3" y="446.0"></text>
</g>
<g>
<title>byte[] (107 samples, 0.06%)</title><rect x="785.3" y="419.0" width="0.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="788.3" y="430.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (110 samples, 0.06%)</title><rect x="786.0" y="451.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="789.0" y="462.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (110 samples, 0.06%)</title><rect x="786.0" y="435.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="789.0" y="446.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (110 samples, 0.06%)</title><rect x="786.0" y="419.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="789.0" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (110 samples, 0.06%)</title><rect x="786.0" y="403.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="789.0" y="414.0"></text>
</g>
<g>
<title>byte[] (110 samples, 0.06%)</title><rect x="786.0" y="387.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="789.0" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (262 samples, 0.14%)</title><rect x="786.6" y="451.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="789.6" y="462.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (262 samples, 0.14%)</title><rect x="786.6" y="435.0" width="1.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="789.6" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (338 samples, 0.17%)</title><rect x="788.2" y="451.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="791.2" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (314 samples, 0.16%)</title><rect x="788.2" y="435.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="791.2" y="446.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (314 samples, 0.16%)</title><rect x="788.2" y="419.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="791.2" y="430.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (314 samples, 0.16%)</title><rect x="788.2" y="403.0" width="2.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="791.2" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getValue (339 samples, 0.18%)</title><rect x="790.3" y="451.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="793.3" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (318 samples, 0.16%)</title><rect x="790.3" y="435.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="793.3" y="446.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (318 samples, 0.16%)</title><rect x="790.3" y="419.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="793.3" y="430.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (318 samples, 0.16%)</title><rect x="790.3" y="403.0" width="1.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="793.3" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$UntilIterator.next (15,949 samples, 8.26%)</title><rect x="792.4" y="451.0" width="97.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="795.4" y="462.0">ru/mail/pol..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$UntilIterator.next (15,949 samples, 8.26%)</title><rect x="792.4" y="435.0" width="97.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="795.4" y="446.0">ru/mail/pol..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (15,100 samples, 7.82%)</title><rect x="792.4" y="419.0" width="92.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="795.4" y="430.0">com/google/..</text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (15,100 samples, 7.82%)</title><rect x="792.4" y="403.0" width="92.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="795.4" y="414.0">com/google/..</text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (15,100 samples, 7.82%)</title><rect x="792.4" y="387.0" width="92.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="795.4" y="398.0">com/google/..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (15,100 samples, 7.82%)</title><rect x="792.4" y="371.0" width="92.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="795.4" y="382.0">com/google/..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (15,100 samples, 7.82%)</title><rect x="792.4" y="355.0" width="92.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="795.4" y="366.0">ru/mail/pol..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (13,697 samples, 7.09%)</title><rect x="792.4" y="339.0" width="83.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="795.4" y="350.0">com/googl..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (68 samples, 0.04%)</title><rect x="792.4" y="323.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="795.4" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (68 samples, 0.04%)</title><rect x="792.4" y="307.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="795.4" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (68 samples, 0.04%)</title><rect x="792.4" y="291.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="795.4" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (68 samples, 0.04%)</title><rect x="792.4" y="275.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="795.4" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (68 samples, 0.04%)</title><rect x="792.4" y="259.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="795.4" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$72/878358964.apply (68 samples, 0.04%)</title><rect x="792.4" y="243.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="795.4" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (68 samples, 0.04%)</title><rect x="792.4" y="227.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="795.4" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (68 samples, 0.04%)</title><rect x="792.4" y="211.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="795.4" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (68 samples, 0.04%)</title><rect x="792.4" y="195.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="795.4" y="206.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (5,606 samples, 2.90%)</title><rect x="792.8" y="323.0" width="34.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="795.8" y="334.0">ja..</text>
</g>
<g>
<title>java/util/PriorityQueue.poll (5,606 samples, 2.90%)</title><rect x="792.8" y="307.0" width="34.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="795.8" y="318.0">ja..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (5,606 samples, 2.90%)</title><rect x="792.8" y="291.0" width="34.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="795.8" y="302.0">ja..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (5,606 samples, 2.90%)</title><rect x="792.8" y="275.0" width="34.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="795.8" y="286.0">co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (5,606 samples, 2.90%)</title><rect x="792.8" y="259.0" width="34.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="795.8" y="270.0">co..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/123226378.compare (5,606 samples, 2.90%)</title><rect x="792.8" y="243.0" width="34.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="795.8" y="254.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (5,606 samples, 2.90%)</title><rect x="792.8" y="227.0" width="34.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="795.8" y="238.0">ru..</text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (5,606 samples, 2.90%)</title><rect x="792.8" y="211.0" width="34.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="795.8" y="222.0">ja..</text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (5,606 samples, 2.90%)</title><rect x="792.8" y="195.0" width="34.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="795.8" y="206.0">ja..</text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (5,606 samples, 2.90%)</title><rect x="792.8" y="179.0" width="34.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="795.8" y="190.0">ja..</text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (5,606 samples, 2.90%)</title><rect x="792.8" y="163.0" width="34.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="795.8" y="174.0">ja..</text>
</g>
<g>
<title>java/util/Comparator$$Lambda$67/1497891062.compare (5,606 samples, 2.90%)</title><rect x="792.8" y="147.0" width="34.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="795.8" y="158.0">ja..</text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (5,606 samples, 2.90%)</title><rect x="792.8" y="131.0" width="34.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="795.8" y="142.0">ja..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$66/474651931.apply (5,606 samples, 2.90%)</title><rect x="792.8" y="115.0" width="34.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="795.8" y="126.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (5,606 samples, 2.90%)</title><rect x="792.8" y="99.0" width="34.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="795.8" y="110.0">ru..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (5,387 samples, 2.79%)</title><rect x="792.8" y="83.0" width="32.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="795.8" y="94.0">ja..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (5,387 samples, 2.79%)</title><rect x="792.8" y="67.0" width="32.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="795.8" y="78.0">ja..</text>
</g>
<g>
<title>java.nio.DirectByteBufferR (5,387 samples, 2.79%)</title><rect x="792.8" y="51.0" width="32.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="795.8" y="62.0">ja..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (219 samples, 0.11%)</title><rect x="825.7" y="83.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="828.7" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (219 samples, 0.11%)</title><rect x="825.7" y="67.0" width="1.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="828.7" y="78.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (8,023 samples, 4.15%)</title><rect x="827.0" y="323.0" width="49.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="830.0" y="334.0">java/..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (8,023 samples, 4.15%)</title><rect x="827.0" y="307.0" width="49.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="830.0" y="318.0">java/..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (8,023 samples, 4.15%)</title><rect x="827.0" y="291.0" width="49.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="830.0" y="302.0">java/..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (8,023 samples, 4.15%)</title><rect x="827.0" y="275.0" width="49.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="830.0" y="286.0">java/..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (8,023 samples, 4.15%)</title><rect x="827.0" y="259.0" width="49.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="830.0" y="270.0">com/g..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (8,023 samples, 4.15%)</title><rect x="827.0" y="243.0" width="49.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="830.0" y="254.0">com/g..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (5,024 samples, 2.60%)</title><rect x="827.0" y="227.0" width="30.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="830.0" y="238.0">co..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (5,024 samples, 2.60%)</title><rect x="827.0" y="211.0" width="30.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="830.0" y="222.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (5,024 samples, 2.60%)</title><rect x="827.0" y="195.0" width="30.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="830.0" y="206.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (5,024 samples, 2.60%)</title><rect x="827.0" y="179.0" width="30.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="830.0" y="190.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.of (332 samples, 0.17%)</title><rect x="827.0" y="163.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="830.0" y="174.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Row (332 samples, 0.17%)</title><rect x="827.0" y="147.0" width="2.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="830.0" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (1,321 samples, 0.68%)</title><rect x="829.1" y="163.0" width="8.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="832.1" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (615 samples, 0.32%)</title><rect x="829.1" y="147.0" width="3.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="832.1" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (615 samples, 0.32%)</title><rect x="829.1" y="131.0" width="3.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="832.1" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (615 samples, 0.32%)</title><rect x="829.1" y="115.0" width="3.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="832.1" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (706 samples, 0.37%)</title><rect x="832.8" y="147.0" width="4.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="835.8" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (706 samples, 0.37%)</title><rect x="832.8" y="131.0" width="4.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="835.8" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (1,243 samples, 0.64%)</title><rect x="837.1" y="163.0" width="7.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="840.1" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (640 samples, 0.33%)</title><rect x="837.1" y="147.0" width="3.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="840.1" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (640 samples, 0.33%)</title><rect x="837.1" y="131.0" width="3.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="840.1" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (640 samples, 0.33%)</title><rect x="837.1" y="115.0" width="3.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="840.1" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (603 samples, 0.31%)</title><rect x="841.0" y="147.0" width="3.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="844.0" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (603 samples, 0.31%)</title><rect x="841.0" y="131.0" width="3.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="844.0" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.timestampAt (598 samples, 0.31%)</title><rect x="844.7" y="163.0" width="3.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="847.7" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (598 samples, 0.31%)</title><rect x="844.7" y="147.0" width="3.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="847.7" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (598 samples, 0.31%)</title><rect x="844.7" y="131.0" width="3.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="847.7" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (598 samples, 0.31%)</title><rect x="844.7" y="115.0" width="3.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="847.7" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.valueAt (1,272 samples, 0.66%)</title><rect x="848.4" y="163.0" width="7.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="851.4" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (643 samples, 0.33%)</title><rect x="848.4" y="147.0" width="3.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="851.4" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (643 samples, 0.33%)</title><rect x="848.4" y="131.0" width="3.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="851.4" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (643 samples, 0.33%)</title><rect x="848.4" y="115.0" width="3.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="851.4" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (629 samples, 0.33%)</title><rect x="852.3" y="147.0" width="3.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="855.3" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (629 samples, 0.33%)</title><rect x="852.3" y="131.0" width="3.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="855.3" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Value.of (258 samples, 0.13%)</title><rect x="856.1" y="163.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="859.1" y="174.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Value (258 samples, 0.13%)</title><rect x="856.1" y="147.0" width="1.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="859.1" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/123226378.compare (2,999 samples, 1.55%)</title><rect x="857.7" y="227.0" width="18.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="860.7" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (2,999 samples, 1.55%)</title><rect x="857.7" y="211.0" width="18.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="860.7" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (2,999 samples, 1.55%)</title><rect x="857.7" y="195.0" width="18.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="860.7" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (2,999 samples, 1.55%)</title><rect x="857.7" y="179.0" width="18.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="860.7" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (2,999 samples, 1.55%)</title><rect x="857.7" y="163.0" width="18.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="860.7" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (2,999 samples, 1.55%)</title><rect x="857.7" y="147.0" width="18.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="860.7" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$67/1497891062.compare (2,999 samples, 1.55%)</title><rect x="857.7" y="131.0" width="18.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="860.7" y="142.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (2,999 samples, 1.55%)</title><rect x="857.7" y="115.0" width="18.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="860.7" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$66/474651931.apply (2,999 samples, 1.55%)</title><rect x="857.7" y="99.0" width="18.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="860.7" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (2,999 samples, 1.55%)</title><rect x="857.7" y="83.0" width="18.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="860.7" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (2,921 samples, 1.51%)</title><rect x="857.7" y="67.0" width="17.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="860.7" y="78.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (2,921 samples, 1.51%)</title><rect x="857.7" y="51.0" width="17.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="860.7" y="62.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (2,921 samples, 1.51%)</title><rect x="857.7" y="35.0" width="17.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="860.7" y="46.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (78 samples, 0.04%)</title><rect x="875.6" y="67.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="878.6" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (78 samples, 0.04%)</title><rect x="875.6" y="51.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="878.6" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$72/878358964.apply (1,403 samples, 0.73%)</title><rect x="876.0" y="339.0" width="8.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="879.0" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (1,403 samples, 0.73%)</title><rect x="876.0" y="323.0" width="8.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="879.0" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (1,307 samples, 0.68%)</title><rect x="876.0" y="307.0" width="8.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="879.0" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (1,307 samples, 0.68%)</title><rect x="876.0" y="291.0" width="8.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="879.0" y="302.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (1,307 samples, 0.68%)</title><rect x="876.0" y="275.0" width="8.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="879.0" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (96 samples, 0.05%)</title><rect x="884.0" y="307.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="887.0" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (96 samples, 0.05%)</title><rect x="884.0" y="291.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="887.0" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (849 samples, 0.44%)</title><rect x="884.6" y="419.0" width="5.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="887.6" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (849 samples, 0.44%)</title><rect x="884.6" y="403.0" width="5.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="887.6" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao$$Lambda$80/527983093.apply (849 samples, 0.44%)</title><rect x="884.6" y="387.0" width="5.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="887.6" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.lambda$iterator$0 (849 samples, 0.44%)</title><rect x="884.6" y="371.0" width="5.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="887.6" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.of (170 samples, 0.09%)</title><rect x="884.6" y="355.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="887.6" y="366.0"></text>
</g>
<g>
<title>ru.mail.polis.Record (170 samples, 0.09%)</title><rect x="884.6" y="339.0" width="1.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="887.6" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (367 samples, 0.19%)</title><rect x="885.7" y="355.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="888.7" y="366.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (336 samples, 0.17%)</title><rect x="885.7" y="339.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="888.7" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (336 samples, 0.17%)</title><rect x="885.7" y="323.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="888.7" y="334.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (336 samples, 0.17%)</title><rect x="885.7" y="307.0" width="2.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="888.7" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Value.getData (312 samples, 0.16%)</title><rect x="887.9" y="355.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="890.9" y="366.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (290 samples, 0.15%)</title><rect x="887.9" y="339.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="890.9" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (290 samples, 0.15%)</title><rect x="887.9" y="323.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="890.9" y="334.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (290 samples, 0.15%)</title><rect x="887.9" y="307.0" width="1.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="890.9" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/StorageSession.toByteArray (366 samples, 0.19%)</title><rect x="889.8" y="451.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="892.8" y="462.0"></text>
</g>
<g>
<title>byte[] (366 samples, 0.19%)</title><rect x="889.8" y="435.0" width="2.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="892.8" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (138 samples, 0.07%)</title><rect x="892.2" y="547.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="895.2" y="558.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (94 samples, 0.05%)</title><rect x="892.4" y="531.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="895.4" y="542.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (94 samples, 0.05%)</title><rect x="892.4" y="515.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="895.4" y="526.0"></text>
</g>
<g>
<title>char[] (57 samples, 0.03%)</title><rect x="892.4" y="499.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="895.4" y="510.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (57 samples, 0.03%)</title><rect x="893.0" y="547.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="896.0" y="558.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (57 samples, 0.03%)</title><rect x="893.0" y="531.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="896.0" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/StorageSession.processWrite (218 samples, 0.11%)</title><rect x="893.4" y="579.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="896.4" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/StorageSession.next (218 samples, 0.11%)</title><rect x="893.4" y="563.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="896.4" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$UntilIterator.next (194 samples, 0.10%)</title><rect x="893.5" y="547.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="896.5" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$UntilIterator.next (194 samples, 0.10%)</title><rect x="893.5" y="531.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="896.5" y="542.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (179 samples, 0.09%)</title><rect x="893.5" y="515.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="896.5" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (179 samples, 0.09%)</title><rect x="893.5" y="499.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="896.5" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (179 samples, 0.09%)</title><rect x="893.5" y="483.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="896.5" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (179 samples, 0.09%)</title><rect x="893.5" y="467.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="896.5" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (179 samples, 0.09%)</title><rect x="893.5" y="451.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="896.5" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (161 samples, 0.08%)</title><rect x="893.5" y="435.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="896.5" y="446.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (70 samples, 0.04%)</title><rect x="893.5" y="419.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="896.5" y="430.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (70 samples, 0.04%)</title><rect x="893.5" y="403.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="896.5" y="414.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (70 samples, 0.04%)</title><rect x="893.5" y="387.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="896.5" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (70 samples, 0.04%)</title><rect x="893.5" y="371.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="896.5" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (70 samples, 0.04%)</title><rect x="893.5" y="355.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="896.5" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/123226378.compare (70 samples, 0.04%)</title><rect x="893.5" y="339.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="896.5" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (70 samples, 0.04%)</title><rect x="893.5" y="323.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="896.5" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (70 samples, 0.04%)</title><rect x="893.5" y="307.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="896.5" y="318.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (70 samples, 0.04%)</title><rect x="893.5" y="291.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="896.5" y="302.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (70 samples, 0.04%)</title><rect x="893.5" y="275.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="896.5" y="286.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (70 samples, 0.04%)</title><rect x="893.5" y="259.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="896.5" y="270.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$67/1497891062.compare (70 samples, 0.04%)</title><rect x="893.5" y="243.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="896.5" y="254.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (70 samples, 0.04%)</title><rect x="893.5" y="227.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="896.5" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$66/474651931.apply (70 samples, 0.04%)</title><rect x="893.5" y="211.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="896.5" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (70 samples, 0.04%)</title><rect x="893.5" y="195.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="896.5" y="206.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (68 samples, 0.04%)</title><rect x="893.5" y="179.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="896.5" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (68 samples, 0.04%)</title><rect x="893.5" y="163.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="896.5" y="174.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (68 samples, 0.04%)</title><rect x="893.5" y="147.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="896.5" y="158.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (91 samples, 0.05%)</title><rect x="893.9" y="419.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="896.9" y="430.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (91 samples, 0.05%)</title><rect x="893.9" y="403.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="896.9" y="414.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (91 samples, 0.05%)</title><rect x="893.9" y="387.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="896.9" y="398.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (91 samples, 0.05%)</title><rect x="893.9" y="371.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="896.9" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (91 samples, 0.05%)</title><rect x="893.9" y="355.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="896.9" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (91 samples, 0.05%)</title><rect x="893.9" y="339.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="896.9" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (55 samples, 0.03%)</title><rect x="893.9" y="323.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="896.9" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (55 samples, 0.03%)</title><rect x="893.9" y="307.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="896.9" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (55 samples, 0.03%)</title><rect x="893.9" y="291.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="896.9" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (55 samples, 0.03%)</title><rect x="893.9" y="275.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="896.9" y="286.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=25373] (48,340 samples, 25.03%)</title><rect x="894.7" y="627.0" width="295.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="897.7" y="638.0">[NIO Selector #3 tid=25373]</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (48,340 samples, 25.03%)</title><rect x="894.7" y="611.0" width="295.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="897.7" y="622.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/Session.process (48,309 samples, 25.01%)</title><rect x="894.9" y="595.0" width="295.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="897.9" y="606.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (48,167 samples, 24.94%)</title><rect x="894.9" y="579.0" width="294.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="897.9" y="590.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (48,167 samples, 24.94%)</title><rect x="894.9" y="563.0" width="294.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="897.9" y="574.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (47,942 samples, 24.82%)</title><rect x="894.9" y="547.0" width="292.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="897.9" y="558.0">one/nio/http/HttpSession.handleParsedRe..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (47,942 samples, 24.82%)</title><rect x="894.9" y="531.0" width="292.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="897.9" y="542.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler2_entities.handleRequest (47,912 samples, 24.81%)</title><rect x="894.9" y="515.0" width="292.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="897.9" y="526.0">RequestHandler2_entities.handleRequest</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.entities (47,873 samples, 24.79%)</title><rect x="895.1" y="499.0" width="292.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="898.1" y="510.0">ru/mail/polis/service/shakhmin/AsyncHtt..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.range (29,295 samples, 15.17%)</title><rect x="895.5" y="483.0" width="179.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="898.5" y="494.0">ru/mail/polis/dao/DAO.r..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.until (1,343 samples, 0.70%)</title><rect x="895.8" y="467.0" width="8.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="898.8" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$UntilIterator.&lt;init&gt; (1,330 samples, 0.69%)</title><rect x="895.8" y="451.0" width="8.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="898.8" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (1,271 samples, 0.66%)</title><rect x="895.8" y="435.0" width="7.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="898.8" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (1,271 samples, 0.66%)</title><rect x="895.8" y="419.0" width="7.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="898.8" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (1,271 samples, 0.66%)</title><rect x="895.8" y="403.0" width="7.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="898.8" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (1,271 samples, 0.66%)</title><rect x="895.8" y="387.0" width="7.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="898.8" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (1,271 samples, 0.66%)</title><rect x="895.8" y="371.0" width="7.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="898.8" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1,148 samples, 0.59%)</title><rect x="895.8" y="355.0" width="7.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="898.8" y="366.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (477 samples, 0.25%)</title><rect x="895.9" y="339.0" width="2.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="898.9" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (477 samples, 0.25%)</title><rect x="895.9" y="323.0" width="2.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="898.9" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (477 samples, 0.25%)</title><rect x="895.9" y="307.0" width="2.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="898.9" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (477 samples, 0.25%)</title><rect x="895.9" y="291.0" width="2.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="898.9" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (477 samples, 0.25%)</title><rect x="895.9" y="275.0" width="2.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="898.9" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/123226378.compare (477 samples, 0.25%)</title><rect x="895.9" y="259.0" width="2.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="898.9" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (477 samples, 0.25%)</title><rect x="895.9" y="243.0" width="2.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="898.9" y="254.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (477 samples, 0.25%)</title><rect x="895.9" y="227.0" width="2.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="898.9" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (477 samples, 0.25%)</title><rect x="895.9" y="211.0" width="2.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="898.9" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (477 samples, 0.25%)</title><rect x="895.9" y="195.0" width="2.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="898.9" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (477 samples, 0.25%)</title><rect x="895.9" y="179.0" width="2.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="898.9" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$67/1497891062.compare (477 samples, 0.25%)</title><rect x="895.9" y="163.0" width="2.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="898.9" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (477 samples, 0.25%)</title><rect x="895.9" y="147.0" width="2.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="898.9" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$66/474651931.apply (477 samples, 0.25%)</title><rect x="895.9" y="131.0" width="2.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="898.9" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (477 samples, 0.25%)</title><rect x="895.9" y="115.0" width="2.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="898.9" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (449 samples, 0.23%)</title><rect x="895.9" y="99.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="898.9" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (449 samples, 0.23%)</title><rect x="895.9" y="83.0" width="2.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="898.9" y="94.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (449 samples, 0.23%)</title><rect x="895.9" y="67.0" width="2.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="898.9" y="78.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (660 samples, 0.34%)</title><rect x="898.8" y="339.0" width="4.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="901.8" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (660 samples, 0.34%)</title><rect x="898.8" y="323.0" width="4.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="901.8" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (660 samples, 0.34%)</title><rect x="898.8" y="307.0" width="4.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="901.8" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (660 samples, 0.34%)</title><rect x="898.8" y="291.0" width="4.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="901.8" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (660 samples, 0.34%)</title><rect x="898.8" y="275.0" width="4.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="901.8" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (660 samples, 0.34%)</title><rect x="898.8" y="259.0" width="4.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="901.8" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (417 samples, 0.22%)</title><rect x="898.8" y="243.0" width="2.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="901.8" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (417 samples, 0.22%)</title><rect x="898.8" y="227.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="901.8" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (417 samples, 0.22%)</title><rect x="898.8" y="211.0" width="2.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="901.8" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (417 samples, 0.22%)</title><rect x="898.8" y="195.0" width="2.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="901.8" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (102 samples, 0.05%)</title><rect x="899.0" y="179.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="902.0" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (53 samples, 0.03%)</title><rect x="899.0" y="163.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="902.0" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (53 samples, 0.03%)</title><rect x="899.0" y="147.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="902.0" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (53 samples, 0.03%)</title><rect x="899.0" y="131.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="902.0" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (49 samples, 0.03%)</title><rect x="899.3" y="163.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="902.3" y="174.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (49 samples, 0.03%)</title><rect x="899.3" y="147.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="902.3" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (97 samples, 0.05%)</title><rect x="899.6" y="179.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="902.6" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (54 samples, 0.03%)</title><rect x="899.6" y="163.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="902.6" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (54 samples, 0.03%)</title><rect x="899.6" y="147.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="902.6" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (54 samples, 0.03%)</title><rect x="899.6" y="131.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="902.6" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (43 samples, 0.02%)</title><rect x="899.9" y="163.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="902.9" y="174.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (43 samples, 0.02%)</title><rect x="899.9" y="147.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="902.9" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.timestampAt (60 samples, 0.03%)</title><rect x="900.2" y="179.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="903.2" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (60 samples, 0.03%)</title><rect x="900.2" y="163.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="903.2" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (60 samples, 0.03%)</title><rect x="900.2" y="147.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="903.2" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (60 samples, 0.03%)</title><rect x="900.2" y="131.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="903.2" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.valueAt (110 samples, 0.06%)</title><rect x="900.5" y="179.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="903.5" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (46 samples, 0.02%)</title><rect x="900.5" y="163.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="903.5" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (46 samples, 0.02%)</title><rect x="900.5" y="147.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="903.5" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (46 samples, 0.02%)</title><rect x="900.5" y="131.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="903.5" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (64 samples, 0.03%)</title><rect x="900.8" y="163.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="903.8" y="174.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (64 samples, 0.03%)</title><rect x="900.8" y="147.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="903.8" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/123226378.compare (243 samples, 0.13%)</title><rect x="901.4" y="243.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="904.4" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (243 samples, 0.13%)</title><rect x="901.4" y="227.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="904.4" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (243 samples, 0.13%)</title><rect x="901.4" y="211.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="904.4" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (243 samples, 0.13%)</title><rect x="901.4" y="195.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="904.4" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (243 samples, 0.13%)</title><rect x="901.4" y="179.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="904.4" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (243 samples, 0.13%)</title><rect x="901.4" y="163.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="904.4" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$67/1497891062.compare (243 samples, 0.13%)</title><rect x="901.4" y="147.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="904.4" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (243 samples, 0.13%)</title><rect x="901.4" y="131.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="904.4" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$66/474651931.apply (243 samples, 0.13%)</title><rect x="901.4" y="115.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="904.4" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (243 samples, 0.13%)</title><rect x="901.4" y="99.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="904.4" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (224 samples, 0.12%)</title><rect x="901.4" y="83.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="904.4" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (224 samples, 0.12%)</title><rect x="901.4" y="67.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="904.4" y="78.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (224 samples, 0.12%)</title><rect x="901.4" y="51.0" width="1.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="904.4" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$72/878358964.apply (123 samples, 0.06%)</title><rect x="902.9" y="355.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="905.9" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (123 samples, 0.06%)</title><rect x="902.9" y="339.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="905.9" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (99 samples, 0.05%)</title><rect x="902.9" y="323.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="905.9" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (99 samples, 0.05%)</title><rect x="902.9" y="307.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="905.9" y="318.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (99 samples, 0.05%)</title><rect x="902.9" y="291.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="905.9" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (59 samples, 0.03%)</title><rect x="903.6" y="435.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="906.6" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (59 samples, 0.03%)</title><rect x="903.6" y="419.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="906.6" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao$$Lambda$80/527983093.apply (59 samples, 0.03%)</title><rect x="903.6" y="403.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="906.6" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.lambda$iterator$0 (59 samples, 0.03%)</title><rect x="903.6" y="387.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="906.6" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.iterator (27,907 samples, 14.45%)</title><rect x="904.0" y="467.0" width="170.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="907.0" y="478.0">ru/mail/polis/dao/shak..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.rowsIterator (27,897 samples, 14.44%)</title><rect x="904.0" y="451.0" width="170.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="907.0" y="462.0">ru/mail/polis/dao/shak..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (24,342 samples, 12.60%)</title><rect x="904.0" y="435.0" width="148.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="907.0" y="446.0">ru/mail/polis/dao/s..</text>
</g>
<g>
<title>java/util/ArrayList.add (47 samples, 0.02%)</title><rect x="904.1" y="419.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="907.1" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (47 samples, 0.02%)</title><rect x="904.1" y="403.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="907.1" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (47 samples, 0.02%)</title><rect x="904.1" y="387.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="907.1" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (47 samples, 0.02%)</title><rect x="904.1" y="371.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="907.1" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (47 samples, 0.02%)</title><rect x="904.1" y="355.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="907.1" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (47 samples, 0.02%)</title><rect x="904.1" y="339.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="907.1" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.iterator (203 samples, 0.11%)</title><rect x="904.5" y="419.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="907.5" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (112 samples, 0.06%)</title><rect x="904.5" y="403.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="907.5" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.iterator (46 samples, 0.02%)</title><rect x="904.9" y="387.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="907.9" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.reduceIterators (90 samples, 0.05%)</title><rect x="905.2" y="403.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="908.2" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (47 samples, 0.02%)</title><rect x="905.3" y="387.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="908.3" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (43 samples, 0.02%)</title><rect x="905.4" y="371.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="908.4" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.iterator (24,068 samples, 12.46%)</title><rect x="905.7" y="419.0" width="147.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="908.7" y="430.0">ru/mail/polis/dao/s..</text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.SSTable$SSTableIterator (202 samples, 0.10%)</title><rect x="905.7" y="403.0" width="1.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="908.7" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.&lt;init&gt; (23,866 samples, 12.36%)</title><rect x="906.9" y="403.0" width="145.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="909.9" y="414.0">ru/mail/polis/dao/..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.position (23,866 samples, 12.36%)</title><rect x="906.9" y="387.0" width="145.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="909.9" y="398.0">ru/mail/polis/dao/..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (11,912 samples, 6.17%)</title><rect x="906.9" y="371.0" width="72.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="909.9" y="382.0">ru/mail/..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (5,815 samples, 3.01%)</title><rect x="906.9" y="355.0" width="35.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="909.9" y="366.0">jav..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (5,815 samples, 3.01%)</title><rect x="906.9" y="339.0" width="35.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="909.9" y="350.0">jav..</text>
</g>
<g>
<title>java.nio.DirectByteBufferR (5,815 samples, 3.01%)</title><rect x="906.9" y="323.0" width="35.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="909.9" y="334.0">jav..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (6,097 samples, 3.16%)</title><rect x="942.5" y="355.0" width="37.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="945.5" y="366.0">jav..</text>
</g>
<g>
<title>java.nio.DirectByteBufferR (6,097 samples, 3.16%)</title><rect x="942.5" y="339.0" width="37.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="945.5" y="350.0">jav..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (11,954 samples, 6.19%)</title><rect x="979.7" y="371.0" width="73.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="982.7" y="382.0">ru/mail/..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (5,998 samples, 3.11%)</title><rect x="979.7" y="355.0" width="36.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="982.7" y="366.0">jav..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (5,998 samples, 3.11%)</title><rect x="979.7" y="339.0" width="36.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="982.7" y="350.0">jav..</text>
</g>
<g>
<title>java.nio.DirectByteBufferR (5,998 samples, 3.11%)</title><rect x="979.7" y="323.0" width="36.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="982.7" y="334.0">jav..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (5,956 samples, 3.08%)</title><rect x="1016.4" y="355.0" width="36.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1019.4" y="366.0">jav..</text>
</g>
<g>
<title>java.nio.DirectByteBufferR (5,956 samples, 3.08%)</title><rect x="1016.4" y="339.0" width="36.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1019.4" y="350.0">jav..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.reduceIterators (3,555 samples, 1.84%)</title><rect x="1052.7" y="435.0" width="21.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1055.7" y="446.0">r..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (3,001 samples, 1.55%)</title><rect x="1052.8" y="419.0" width="18.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1055.8" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (2,993 samples, 1.55%)</title><rect x="1052.9" y="403.0" width="18.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1055.9" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (94 samples, 0.05%)</title><rect x="1053.1" y="387.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1056.1" y="398.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (94 samples, 0.05%)</title><rect x="1053.1" y="371.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1056.1" y="382.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (2,834 samples, 1.47%)</title><rect x="1053.9" y="387.0" width="17.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1056.9" y="398.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (2,834 samples, 1.47%)</title><rect x="1053.9" y="371.0" width="17.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1056.9" y="382.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.grow (62 samples, 0.03%)</title><rect x="1053.9" y="355.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1056.9" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (62 samples, 0.03%)</title><rect x="1053.9" y="339.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1056.9" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (62 samples, 0.03%)</title><rect x="1053.9" y="323.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1056.9" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (2,772 samples, 1.44%)</title><rect x="1054.2" y="355.0" width="17.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1057.2" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (2,772 samples, 1.44%)</title><rect x="1054.2" y="339.0" width="17.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1057.2" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2,772 samples, 1.44%)</title><rect x="1054.2" y="323.0" width="17.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1057.2" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2,772 samples, 1.44%)</title><rect x="1054.2" y="307.0" width="17.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1057.2" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (1,939 samples, 1.00%)</title><rect x="1054.2" y="291.0" width="11.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1057.2" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (1,939 samples, 1.00%)</title><rect x="1054.2" y="275.0" width="11.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1057.2" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (1,939 samples, 1.00%)</title><rect x="1054.2" y="259.0" width="11.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1057.2" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (1,939 samples, 1.00%)</title><rect x="1054.2" y="243.0" width="11.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1057.2" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.of (133 samples, 0.07%)</title><rect x="1054.2" y="227.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1057.2" y="238.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Row (133 samples, 0.07%)</title><rect x="1054.2" y="211.0" width="0.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1057.2" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (510 samples, 0.26%)</title><rect x="1055.1" y="227.0" width="3.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1058.1" y="238.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (241 samples, 0.12%)</title><rect x="1055.1" y="211.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1058.1" y="222.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (241 samples, 0.12%)</title><rect x="1055.1" y="195.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1058.1" y="206.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (241 samples, 0.12%)</title><rect x="1055.1" y="179.0" width="1.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1058.1" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (269 samples, 0.14%)</title><rect x="1056.5" y="211.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1059.5" y="222.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (269 samples, 0.14%)</title><rect x="1056.5" y="195.0" width="1.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1059.5" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (486 samples, 0.25%)</title><rect x="1058.2" y="227.0" width="2.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1061.2" y="238.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (249 samples, 0.13%)</title><rect x="1058.2" y="211.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1061.2" y="222.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (249 samples, 0.13%)</title><rect x="1058.2" y="195.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1061.2" y="206.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (249 samples, 0.13%)</title><rect x="1058.2" y="179.0" width="1.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1061.2" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (237 samples, 0.12%)</title><rect x="1059.7" y="211.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1062.7" y="222.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (237 samples, 0.12%)</title><rect x="1059.7" y="195.0" width="1.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1062.7" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.timestampAt (222 samples, 0.11%)</title><rect x="1061.1" y="227.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1064.1" y="238.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (222 samples, 0.11%)</title><rect x="1061.1" y="211.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1064.1" y="222.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (222 samples, 0.11%)</title><rect x="1061.1" y="195.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1064.1" y="206.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (222 samples, 0.11%)</title><rect x="1061.1" y="179.0" width="1.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1064.1" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.valueAt (498 samples, 0.26%)</title><rect x="1062.5" y="227.0" width="3.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1065.5" y="238.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (252 samples, 0.13%)</title><rect x="1062.5" y="211.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1065.5" y="222.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (252 samples, 0.13%)</title><rect x="1062.5" y="195.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1065.5" y="206.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (252 samples, 0.13%)</title><rect x="1062.5" y="179.0" width="1.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1065.5" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (246 samples, 0.13%)</title><rect x="1064.0" y="211.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1067.0" y="222.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (246 samples, 0.13%)</title><rect x="1064.0" y="195.0" width="1.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1067.0" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Value.of (90 samples, 0.05%)</title><rect x="1065.5" y="227.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1068.5" y="238.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Value (90 samples, 0.05%)</title><rect x="1065.5" y="211.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1068.5" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/123226378.compare (833 samples, 0.43%)</title><rect x="1066.1" y="291.0" width="5.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1069.1" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (833 samples, 0.43%)</title><rect x="1066.1" y="275.0" width="5.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1069.1" y="286.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (833 samples, 0.43%)</title><rect x="1066.1" y="259.0" width="5.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1069.1" y="270.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (833 samples, 0.43%)</title><rect x="1066.1" y="243.0" width="5.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1069.1" y="254.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (833 samples, 0.43%)</title><rect x="1066.1" y="227.0" width="5.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1069.1" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (833 samples, 0.43%)</title><rect x="1066.1" y="211.0" width="5.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1069.1" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$67/1497891062.compare (833 samples, 0.43%)</title><rect x="1066.1" y="195.0" width="5.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1069.1" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (833 samples, 0.43%)</title><rect x="1066.1" y="179.0" width="5.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1069.1" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$66/474651931.apply (833 samples, 0.43%)</title><rect x="1066.1" y="163.0" width="5.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1069.1" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (833 samples, 0.43%)</title><rect x="1066.1" y="147.0" width="5.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1069.1" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (778 samples, 0.40%)</title><rect x="1066.1" y="131.0" width="4.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1069.1" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (778 samples, 0.40%)</title><rect x="1066.1" y="115.0" width="4.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1069.1" y="126.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (778 samples, 0.40%)</title><rect x="1066.1" y="99.0" width="4.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1069.1" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (55 samples, 0.03%)</title><rect x="1070.8" y="131.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1073.8" y="142.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (55 samples, 0.03%)</title><rect x="1070.8" y="115.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1073.8" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (536 samples, 0.28%)</title><rect x="1071.2" y="419.0" width="3.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1074.2" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (527 samples, 0.27%)</title><rect x="1071.2" y="403.0" width="3.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1074.2" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (527 samples, 0.27%)</title><rect x="1071.2" y="387.0" width="3.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1074.2" y="398.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (216 samples, 0.11%)</title><rect x="1071.3" y="371.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1074.3" y="382.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (216 samples, 0.11%)</title><rect x="1071.3" y="355.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1074.3" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (216 samples, 0.11%)</title><rect x="1071.3" y="339.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1074.3" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (216 samples, 0.11%)</title><rect x="1071.3" y="323.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1074.3" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (216 samples, 0.11%)</title><rect x="1071.3" y="307.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1074.3" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/123226378.compare (216 samples, 0.11%)</title><rect x="1071.3" y="291.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1074.3" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (216 samples, 0.11%)</title><rect x="1071.3" y="275.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1074.3" y="286.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (216 samples, 0.11%)</title><rect x="1071.3" y="259.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1074.3" y="270.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (216 samples, 0.11%)</title><rect x="1071.3" y="243.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1074.3" y="254.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (216 samples, 0.11%)</title><rect x="1071.3" y="227.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1074.3" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (216 samples, 0.11%)</title><rect x="1071.3" y="211.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1074.3" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$67/1497891062.compare (216 samples, 0.11%)</title><rect x="1071.3" y="195.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1074.3" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (216 samples, 0.11%)</title><rect x="1071.3" y="179.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1074.3" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$66/474651931.apply (216 samples, 0.11%)</title><rect x="1071.3" y="163.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1074.3" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (216 samples, 0.11%)</title><rect x="1071.3" y="147.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1074.3" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (207 samples, 0.11%)</title><rect x="1071.3" y="131.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1074.3" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (207 samples, 0.11%)</title><rect x="1071.3" y="115.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1074.3" y="126.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (207 samples, 0.11%)</title><rect x="1071.3" y="99.0" width="1.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1074.3" y="110.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (305 samples, 0.16%)</title><rect x="1072.6" y="371.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1075.6" y="382.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (305 samples, 0.16%)</title><rect x="1072.6" y="355.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1075.6" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (305 samples, 0.16%)</title><rect x="1072.6" y="339.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1075.6" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (305 samples, 0.16%)</title><rect x="1072.6" y="323.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1075.6" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (305 samples, 0.16%)</title><rect x="1072.6" y="307.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1075.6" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (305 samples, 0.16%)</title><rect x="1072.6" y="291.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1075.6" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (184 samples, 0.10%)</title><rect x="1072.6" y="275.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1075.6" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (184 samples, 0.10%)</title><rect x="1072.6" y="259.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1075.6" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (184 samples, 0.10%)</title><rect x="1072.6" y="243.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1075.6" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (184 samples, 0.10%)</title><rect x="1072.6" y="227.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1075.6" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (46 samples, 0.02%)</title><rect x="1072.7" y="211.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1075.7" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (59 samples, 0.03%)</title><rect x="1073.0" y="211.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1076.0" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/123226378.compare (121 samples, 0.06%)</title><rect x="1073.7" y="275.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1076.7" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (121 samples, 0.06%)</title><rect x="1073.7" y="259.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1076.7" y="270.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (121 samples, 0.06%)</title><rect x="1073.7" y="243.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1076.7" y="254.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (121 samples, 0.06%)</title><rect x="1073.7" y="227.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1076.7" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (121 samples, 0.06%)</title><rect x="1073.7" y="211.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1076.7" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (121 samples, 0.06%)</title><rect x="1073.7" y="195.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1076.7" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$67/1497891062.compare (121 samples, 0.06%)</title><rect x="1073.7" y="179.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1076.7" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (121 samples, 0.06%)</title><rect x="1073.7" y="163.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1076.7" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$66/474651931.apply (121 samples, 0.06%)</title><rect x="1073.7" y="147.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1076.7" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (121 samples, 0.06%)</title><rect x="1073.7" y="131.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1076.7" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (116 samples, 0.06%)</title><rect x="1073.7" y="115.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1076.7" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (116 samples, 0.06%)</title><rect x="1073.7" y="99.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1076.7" y="110.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (116 samples, 0.06%)</title><rect x="1073.7" y="83.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1076.7" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/StorageSession.stream (18,516 samples, 9.59%)</title><rect x="1074.5" y="483.0" width="113.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1077.5" y="494.0">ru/mail/polis/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (46 samples, 0.02%)</title><rect x="1074.5" y="467.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1077.5" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/StorageSession.next (18,449 samples, 9.55%)</title><rect x="1074.9" y="467.0" width="112.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1077.9" y="478.0">ru/mail/polis/..</text>
</g>
<g>
<title>byte[] (271 samples, 0.14%)</title><rect x="1074.9" y="451.0" width="1.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1077.9" y="462.0"></text>
</g>
<g>
<title>java/lang/Integer.toHexString (119 samples, 0.06%)</title><rect x="1076.5" y="451.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1079.5" y="462.0"></text>
</g>
<g>
<title>java/lang/Integer.toUnsignedString0 (119 samples, 0.06%)</title><rect x="1076.5" y="435.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1079.5" y="446.0"></text>
</g>
<g>
<title>byte[] (119 samples, 0.06%)</title><rect x="1076.5" y="419.0" width="0.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1079.5" y="430.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (105 samples, 0.05%)</title><rect x="1077.2" y="451.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1080.2" y="462.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (105 samples, 0.05%)</title><rect x="1077.2" y="435.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1080.2" y="446.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (105 samples, 0.05%)</title><rect x="1077.2" y="419.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1080.2" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (105 samples, 0.05%)</title><rect x="1077.2" y="403.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1080.2" y="414.0"></text>
</g>
<g>
<title>byte[] (105 samples, 0.05%)</title><rect x="1077.2" y="387.0" width="0.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1080.2" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (276 samples, 0.14%)</title><rect x="1077.9" y="451.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1080.9" y="462.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (276 samples, 0.14%)</title><rect x="1077.9" y="435.0" width="1.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1080.9" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (388 samples, 0.20%)</title><rect x="1079.6" y="451.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1082.6" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (369 samples, 0.19%)</title><rect x="1079.6" y="435.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1082.6" y="446.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (369 samples, 0.19%)</title><rect x="1079.6" y="419.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1082.6" y="430.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (369 samples, 0.19%)</title><rect x="1079.6" y="403.0" width="2.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1082.6" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getValue (385 samples, 0.20%)</title><rect x="1081.9" y="451.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1084.9" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (364 samples, 0.19%)</title><rect x="1081.9" y="435.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1084.9" y="446.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (364 samples, 0.19%)</title><rect x="1081.9" y="419.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1084.9" y="430.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (364 samples, 0.19%)</title><rect x="1081.9" y="403.0" width="2.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1084.9" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$UntilIterator.next (16,556 samples, 8.57%)</title><rect x="1084.3" y="451.0" width="101.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1087.3" y="462.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$UntilIterator.next (16,556 samples, 8.57%)</title><rect x="1084.3" y="435.0" width="101.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1087.3" y="446.0">ru/mail/poli..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (15,659 samples, 8.11%)</title><rect x="1084.3" y="419.0" width="95.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1087.3" y="430.0">com/google/..</text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (15,659 samples, 8.11%)</title><rect x="1084.3" y="403.0" width="95.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1087.3" y="414.0">com/google/..</text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (15,659 samples, 8.11%)</title><rect x="1084.3" y="387.0" width="95.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1087.3" y="398.0">com/google/..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (15,659 samples, 8.11%)</title><rect x="1084.3" y="371.0" width="95.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1087.3" y="382.0">com/google/..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (15,659 samples, 8.11%)</title><rect x="1084.3" y="355.0" width="95.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1087.3" y="366.0">ru/mail/pol..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (14,248 samples, 7.38%)</title><rect x="1084.3" y="339.0" width="87.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1087.3" y="350.0">com/google..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (49 samples, 0.03%)</title><rect x="1084.3" y="323.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1087.3" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (49 samples, 0.03%)</title><rect x="1084.3" y="307.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1087.3" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (49 samples, 0.03%)</title><rect x="1084.3" y="291.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1087.3" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (49 samples, 0.03%)</title><rect x="1084.3" y="275.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1087.3" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (49 samples, 0.03%)</title><rect x="1084.3" y="259.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1087.3" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$72/878358964.apply (49 samples, 0.03%)</title><rect x="1084.3" y="243.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1087.3" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (49 samples, 0.03%)</title><rect x="1084.3" y="227.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1087.3" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (49 samples, 0.03%)</title><rect x="1084.3" y="211.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1087.3" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (49 samples, 0.03%)</title><rect x="1084.3" y="195.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1087.3" y="206.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (5,834 samples, 3.02%)</title><rect x="1084.6" y="323.0" width="35.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1087.6" y="334.0">jav..</text>
</g>
<g>
<title>java/util/PriorityQueue.poll (5,834 samples, 3.02%)</title><rect x="1084.6" y="307.0" width="35.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1087.6" y="318.0">jav..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (5,834 samples, 3.02%)</title><rect x="1084.6" y="291.0" width="35.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1087.6" y="302.0">jav..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (5,834 samples, 3.02%)</title><rect x="1084.6" y="275.0" width="35.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1087.6" y="286.0">com..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (5,834 samples, 3.02%)</title><rect x="1084.6" y="259.0" width="35.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1087.6" y="270.0">com..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/123226378.compare (5,834 samples, 3.02%)</title><rect x="1084.6" y="243.0" width="35.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1087.6" y="254.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (5,834 samples, 3.02%)</title><rect x="1084.6" y="227.0" width="35.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1087.6" y="238.0">ru/..</text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (5,834 samples, 3.02%)</title><rect x="1084.6" y="211.0" width="35.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1087.6" y="222.0">jav..</text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (5,834 samples, 3.02%)</title><rect x="1084.6" y="195.0" width="35.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1087.6" y="206.0">jav..</text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (5,834 samples, 3.02%)</title><rect x="1084.6" y="179.0" width="35.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1087.6" y="190.0">jav..</text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (5,834 samples, 3.02%)</title><rect x="1084.6" y="163.0" width="35.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1087.6" y="174.0">jav..</text>
</g>
<g>
<title>java/util/Comparator$$Lambda$67/1497891062.compare (5,834 samples, 3.02%)</title><rect x="1084.6" y="147.0" width="35.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1087.6" y="158.0">jav..</text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (5,834 samples, 3.02%)</title><rect x="1084.6" y="131.0" width="35.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1087.6" y="142.0">jav..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$66/474651931.apply (5,834 samples, 3.02%)</title><rect x="1084.6" y="115.0" width="35.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1087.6" y="126.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (5,834 samples, 3.02%)</title><rect x="1084.6" y="99.0" width="35.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1087.6" y="110.0">ru/..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (5,673 samples, 2.94%)</title><rect x="1084.6" y="83.0" width="34.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1087.6" y="94.0">ja..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (5,673 samples, 2.94%)</title><rect x="1084.6" y="67.0" width="34.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1087.6" y="78.0">ja..</text>
</g>
<g>
<title>java.nio.DirectByteBufferR (5,673 samples, 2.94%)</title><rect x="1084.6" y="51.0" width="34.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1087.6" y="62.0">ja..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (161 samples, 0.08%)</title><rect x="1119.3" y="83.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1122.3" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (161 samples, 0.08%)</title><rect x="1119.3" y="67.0" width="0.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1122.3" y="78.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (8,365 samples, 4.33%)</title><rect x="1120.2" y="323.0" width="51.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1123.2" y="334.0">java/..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (8,365 samples, 4.33%)</title><rect x="1120.2" y="307.0" width="51.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1123.2" y="318.0">java/..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (8,365 samples, 4.33%)</title><rect x="1120.2" y="291.0" width="51.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1123.2" y="302.0">java/..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (8,365 samples, 4.33%)</title><rect x="1120.2" y="275.0" width="51.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1123.2" y="286.0">java/..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (8,365 samples, 4.33%)</title><rect x="1120.2" y="259.0" width="51.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1123.2" y="270.0">com/g..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (8,365 samples, 4.33%)</title><rect x="1120.2" y="243.0" width="51.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1123.2" y="254.0">com/g..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (5,113 samples, 2.65%)</title><rect x="1120.2" y="227.0" width="31.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1123.2" y="238.0">co..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (5,113 samples, 2.65%)</title><rect x="1120.2" y="211.0" width="31.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1123.2" y="222.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (5,113 samples, 2.65%)</title><rect x="1120.2" y="195.0" width="31.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1123.2" y="206.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (5,113 samples, 2.65%)</title><rect x="1120.2" y="179.0" width="31.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1123.2" y="190.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.of (287 samples, 0.15%)</title><rect x="1120.2" y="163.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1123.2" y="174.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Row (287 samples, 0.15%)</title><rect x="1120.2" y="147.0" width="1.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1123.2" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (1,249 samples, 0.65%)</title><rect x="1122.0" y="163.0" width="7.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1125.0" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (609 samples, 0.32%)</title><rect x="1122.0" y="147.0" width="3.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1125.0" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (609 samples, 0.32%)</title><rect x="1122.0" y="131.0" width="3.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1125.0" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (609 samples, 0.32%)</title><rect x="1122.0" y="115.0" width="3.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1125.0" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (640 samples, 0.33%)</title><rect x="1125.7" y="147.0" width="3.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1128.7" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (640 samples, 0.33%)</title><rect x="1125.7" y="131.0" width="3.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1128.7" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (1,278 samples, 0.66%)</title><rect x="1129.6" y="163.0" width="7.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1132.6" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (631 samples, 0.33%)</title><rect x="1129.6" y="147.0" width="3.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1132.6" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (631 samples, 0.33%)</title><rect x="1129.6" y="131.0" width="3.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1132.6" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (631 samples, 0.33%)</title><rect x="1129.6" y="115.0" width="3.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1132.6" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (647 samples, 0.33%)</title><rect x="1133.5" y="147.0" width="3.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1136.5" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (647 samples, 0.33%)</title><rect x="1133.5" y="131.0" width="3.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1136.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.timestampAt (653 samples, 0.34%)</title><rect x="1137.4" y="163.0" width="4.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1140.4" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (653 samples, 0.34%)</title><rect x="1137.4" y="147.0" width="4.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1140.4" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (653 samples, 0.34%)</title><rect x="1137.4" y="131.0" width="4.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1140.4" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (653 samples, 0.34%)</title><rect x="1137.4" y="115.0" width="4.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1140.4" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.valueAt (1,376 samples, 0.71%)</title><rect x="1141.4" y="163.0" width="8.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1144.4" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (696 samples, 0.36%)</title><rect x="1141.4" y="147.0" width="4.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1144.4" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (696 samples, 0.36%)</title><rect x="1141.4" y="131.0" width="4.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1144.4" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (696 samples, 0.36%)</title><rect x="1141.4" y="115.0" width="4.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1144.4" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (680 samples, 0.35%)</title><rect x="1145.7" y="147.0" width="4.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1148.7" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (680 samples, 0.35%)</title><rect x="1145.7" y="131.0" width="4.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1148.7" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Value.of (270 samples, 0.14%)</title><rect x="1149.8" y="163.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1152.8" y="174.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Value (270 samples, 0.14%)</title><rect x="1149.8" y="147.0" width="1.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1152.8" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/123226378.compare (3,252 samples, 1.68%)</title><rect x="1151.5" y="227.0" width="19.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1154.5" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (3,252 samples, 1.68%)</title><rect x="1151.5" y="211.0" width="19.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1154.5" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (3,252 samples, 1.68%)</title><rect x="1151.5" y="195.0" width="19.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1154.5" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (3,252 samples, 1.68%)</title><rect x="1151.5" y="179.0" width="19.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1154.5" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (3,252 samples, 1.68%)</title><rect x="1151.5" y="163.0" width="19.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1154.5" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (3,252 samples, 1.68%)</title><rect x="1151.5" y="147.0" width="19.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1154.5" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$67/1497891062.compare (3,252 samples, 1.68%)</title><rect x="1151.5" y="131.0" width="19.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1154.5" y="142.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (3,252 samples, 1.68%)</title><rect x="1151.5" y="115.0" width="19.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1154.5" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$66/474651931.apply (3,252 samples, 1.68%)</title><rect x="1151.5" y="99.0" width="19.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1154.5" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (3,252 samples, 1.68%)</title><rect x="1151.5" y="83.0" width="19.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1154.5" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (3,170 samples, 1.64%)</title><rect x="1151.5" y="67.0" width="19.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1154.5" y="78.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (3,170 samples, 1.64%)</title><rect x="1151.5" y="51.0" width="19.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1154.5" y="62.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (3,170 samples, 1.64%)</title><rect x="1151.5" y="35.0" width="19.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1154.5" y="46.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (82 samples, 0.04%)</title><rect x="1170.8" y="67.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1173.8" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (82 samples, 0.04%)</title><rect x="1170.8" y="51.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1173.8" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$72/878358964.apply (1,411 samples, 0.73%)</title><rect x="1171.3" y="339.0" width="8.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1174.3" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (1,411 samples, 0.73%)</title><rect x="1171.3" y="323.0" width="8.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1174.3" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (1,340 samples, 0.69%)</title><rect x="1171.3" y="307.0" width="8.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1174.3" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (1,340 samples, 0.69%)</title><rect x="1171.3" y="291.0" width="8.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1174.3" y="302.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (1,340 samples, 0.69%)</title><rect x="1171.3" y="275.0" width="8.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1174.3" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (71 samples, 0.04%)</title><rect x="1179.5" y="307.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1182.5" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (71 samples, 0.04%)</title><rect x="1179.5" y="291.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1182.5" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (897 samples, 0.46%)</title><rect x="1180.0" y="419.0" width="5.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1183.0" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (897 samples, 0.46%)</title><rect x="1180.0" y="403.0" width="5.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1183.0" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao$$Lambda$80/527983093.apply (897 samples, 0.46%)</title><rect x="1180.0" y="387.0" width="5.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1183.0" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.lambda$iterator$0 (897 samples, 0.46%)</title><rect x="1180.0" y="371.0" width="5.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1183.0" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.of (200 samples, 0.10%)</title><rect x="1180.0" y="355.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1183.0" y="366.0"></text>
</g>
<g>
<title>ru.mail.polis.Record (200 samples, 0.10%)</title><rect x="1180.0" y="339.0" width="1.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1183.0" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (363 samples, 0.19%)</title><rect x="1181.2" y="355.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1184.2" y="366.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (340 samples, 0.18%)</title><rect x="1181.2" y="339.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1184.2" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (340 samples, 0.18%)</title><rect x="1181.2" y="323.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1184.2" y="334.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (340 samples, 0.18%)</title><rect x="1181.2" y="307.0" width="2.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1184.2" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Value.getData (334 samples, 0.17%)</title><rect x="1183.4" y="355.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1186.4" y="366.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (316 samples, 0.16%)</title><rect x="1183.4" y="339.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1186.4" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (316 samples, 0.16%)</title><rect x="1183.4" y="323.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1186.4" y="334.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (316 samples, 0.16%)</title><rect x="1183.4" y="307.0" width="1.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1186.4" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/StorageSession.toByteArray (349 samples, 0.18%)</title><rect x="1185.4" y="451.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1188.4" y="462.0"></text>
</g>
<g>
<title>byte[] (349 samples, 0.18%)</title><rect x="1185.4" y="435.0" width="2.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1188.4" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (171 samples, 0.09%)</title><rect x="1187.8" y="547.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1190.8" y="558.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (44 samples, 0.02%)</title><rect x="1187.9" y="531.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1190.9" y="542.0"></text>
</g>
<g>
<title>java.lang.String[] (44 samples, 0.02%)</title><rect x="1187.9" y="515.0" width="0.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1190.9" y="526.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (110 samples, 0.06%)</title><rect x="1188.1" y="531.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1191.1" y="542.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (110 samples, 0.06%)</title><rect x="1188.1" y="515.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1191.1" y="526.0"></text>
</g>
<g>
<title>char[] (85 samples, 0.04%)</title><rect x="1188.1" y="499.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1191.1" y="510.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (54 samples, 0.03%)</title><rect x="1188.8" y="547.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1191.8" y="558.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (54 samples, 0.03%)</title><rect x="1188.8" y="531.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1191.8" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/StorageSession.processWrite (142 samples, 0.07%)</title><rect x="1189.1" y="579.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1192.1" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/StorageSession.next (142 samples, 0.07%)</title><rect x="1189.1" y="563.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1192.1" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$UntilIterator.next (131 samples, 0.07%)</title><rect x="1189.2" y="547.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1192.2" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$UntilIterator.next (131 samples, 0.07%)</title><rect x="1189.2" y="531.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1192.2" y="542.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (124 samples, 0.06%)</title><rect x="1189.2" y="515.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1192.2" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (124 samples, 0.06%)</title><rect x="1189.2" y="499.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1192.2" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (124 samples, 0.06%)</title><rect x="1189.2" y="483.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1192.2" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (124 samples, 0.06%)</title><rect x="1189.2" y="467.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1192.2" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (124 samples, 0.06%)</title><rect x="1189.2" y="451.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1192.2" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (117 samples, 0.06%)</title><rect x="1189.2" y="435.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1192.2" y="446.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (59 samples, 0.03%)</title><rect x="1189.2" y="419.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1192.2" y="430.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (59 samples, 0.03%)</title><rect x="1189.2" y="403.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1192.2" y="414.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (59 samples, 0.03%)</title><rect x="1189.2" y="387.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1192.2" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (59 samples, 0.03%)</title><rect x="1189.2" y="371.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1192.2" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (59 samples, 0.03%)</title><rect x="1189.2" y="355.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1192.2" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/123226378.compare (59 samples, 0.03%)</title><rect x="1189.2" y="339.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1192.2" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (59 samples, 0.03%)</title><rect x="1189.2" y="323.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1192.2" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (59 samples, 0.03%)</title><rect x="1189.2" y="307.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1192.2" y="318.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (59 samples, 0.03%)</title><rect x="1189.2" y="291.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1192.2" y="302.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1759248044.compare (59 samples, 0.03%)</title><rect x="1189.2" y="275.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1192.2" y="286.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (59 samples, 0.03%)</title><rect x="1189.2" y="259.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1192.2" y="270.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$67/1497891062.compare (59 samples, 0.03%)</title><rect x="1189.2" y="243.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1192.2" y="254.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (59 samples, 0.03%)</title><rect x="1189.2" y="227.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1192.2" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$66/474651931.apply (59 samples, 0.03%)</title><rect x="1189.2" y="211.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1192.2" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (59 samples, 0.03%)</title><rect x="1189.2" y="195.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1192.2" y="206.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (59 samples, 0.03%)</title><rect x="1189.2" y="179.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1192.2" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (59 samples, 0.03%)</title><rect x="1189.2" y="163.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1192.2" y="174.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (59 samples, 0.03%)</title><rect x="1189.2" y="147.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1192.2" y="158.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (58 samples, 0.03%)</title><rect x="1189.6" y="419.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1192.6" y="430.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (58 samples, 0.03%)</title><rect x="1189.6" y="403.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1192.6" y="414.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (58 samples, 0.03%)</title><rect x="1189.6" y="387.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1192.6" y="398.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (58 samples, 0.03%)</title><rect x="1189.6" y="371.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1192.6" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (58 samples, 0.03%)</title><rect x="1189.6" y="355.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1192.6" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (58 samples, 0.03%)</title><rect x="1189.6" y="339.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1192.6" y="350.0"></text>
</g>
</g>
</svg>
