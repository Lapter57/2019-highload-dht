<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1078" onload="init(evt)" viewBox="0 0 1200 1078" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1061"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1061"> </text>
<g id="frames">
<g>
<title>all (4,369 samples, 100.00%)</title><rect x="10.0" y="1027.0" width="1180.0" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="13.0" y="1038.0">all</text>
</g>
<g>
<title>[NIO Acceptor 0.0.0.0:8080 tid=25374] (3 samples, 0.07%)</title><rect x="10.0" y="1011.0" width="0.8" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="13.0" y="1022.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (2 samples, 0.05%)</title><rect x="10.0" y="995.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="13.0" y="1006.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.05%)</title><rect x="10.0" y="979.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="13.0" y="990.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.05%)</title><rect x="10.0" y="963.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="13.0" y="974.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.05%)</title><rect x="10.0" y="947.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="13.0" y="958.0"></text>
</g>
<g>
<title>G1CollectedHeap::mem_allocate(unsigned long, bool*) (1 samples, 0.02%)</title><rect x="10.0" y="931.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="13.0" y="942.0"></text>
</g>
<g>
<title>update_get_addr (1 samples, 0.02%)</title><rect x="10.3" y="931.0" width="0.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="13.3" y="942.0"></text>
</g>
<g>
<title>one/nio/server/AcceptorThread.run (1 samples, 0.02%)</title><rect x="10.5" y="995.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.5" y="1006.0"></text>
</g>
<g>
<title>one/nio/server/Server.register (1 samples, 0.02%)</title><rect x="10.5" y="979.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="13.5" y="990.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.register (1 samples, 0.02%)</title><rect x="10.5" y="963.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.5" y="974.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.enable (1 samples, 0.02%)</title><rect x="10.5" y="947.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="13.5" y="958.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollCtl (1 samples, 0.02%)</title><rect x="10.5" y="931.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="13.5" y="942.0"></text>
</g>
<g>
<title>__GI_epoll_ctl (1 samples, 0.02%)</title><rect x="10.5" y="915.0" width="0.3" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="13.5" y="926.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="10.5" y="899.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="13.5" y="910.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="10.5" y="883.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="13.5" y="894.0"></text>
</g>
<g>
<title>__x64_sys_epoll_ctl (1 samples, 0.02%)</title><rect x="10.5" y="867.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="13.5" y="878.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.02%)</title><rect x="10.5" y="851.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="13.5" y="862.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.02%)</title><rect x="10.5" y="835.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="13.5" y="846.0"></text>
</g>
<g>
<title>[NIO Selector #0 tid=25370] (349 samples, 7.99%)</title><rect x="10.8" y="1011.0" width="94.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="13.8" y="1022.0">[NIO Select..</text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.02%)</title><rect x="10.8" y="995.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="13.8" y="1006.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.02%)</title><rect x="10.8" y="979.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="13.8" y="990.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.02%)</title><rect x="11.1" y="995.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="14.1" y="1006.0"></text>
</g>
<g>
<title>Klass::class_loader() const (1 samples, 0.02%)</title><rect x="11.1" y="979.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="14.1" y="990.0"></text>
</g>
<g>
<title>[unknown_Java] (2 samples, 0.05%)</title><rect x="11.4" y="995.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="14.4" y="1006.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (345 samples, 7.90%)</title><rect x="11.9" y="995.0" width="93.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="14.9" y="1006.0">one/nio/ser..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.hasNext (3 samples, 0.07%)</title><rect x="12.4" y="979.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="15.4" y="990.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (5 samples, 0.11%)</title><rect x="13.2" y="979.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="16.2" y="990.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (5 samples, 0.11%)</title><rect x="13.2" y="963.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="16.2" y="974.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (109 samples, 2.49%)</title><rect x="14.6" y="979.0" width="29.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="17.6" y="990.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (6 samples, 0.14%)</title><rect x="14.9" y="963.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="17.9" y="974.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (6 samples, 0.14%)</title><rect x="14.9" y="947.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="17.9" y="958.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (102 samples, 2.33%)</title><rect x="16.5" y="963.0" width="27.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="19.5" y="974.0">o..</text>
</g>
<g>
<title>.annobin_epoll_wait.c (85 samples, 1.95%)</title><rect x="18.4" y="947.0" width="22.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="21.4" y="958.0">...</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (65 samples, 1.49%)</title><rect x="23.8" y="931.0" width="17.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="26.8" y="942.0"></text>
</g>
<g>
<title>do_syscall_64 (65 samples, 1.49%)</title><rect x="23.8" y="915.0" width="17.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="26.8" y="926.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (63 samples, 1.44%)</title><rect x="24.3" y="899.0" width="17.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="27.3" y="910.0"></text>
</g>
<g>
<title>do_epoll_wait (63 samples, 1.44%)</title><rect x="24.3" y="883.0" width="17.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="27.3" y="894.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.09%)</title><rect x="24.3" y="867.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="27.3" y="878.0"></text>
</g>
<g>
<title>__fget (4 samples, 0.09%)</title><rect x="24.3" y="851.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="27.3" y="862.0"></text>
</g>
<g>
<title>ep_poll (58 samples, 1.33%)</title><rect x="25.4" y="867.0" width="15.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="28.4" y="878.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (29 samples, 0.66%)</title><rect x="26.2" y="851.0" width="7.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="29.2" y="862.0"></text>
</g>
<g>
<title>ep_send_events_proc (21 samples, 0.48%)</title><rect x="27.8" y="835.0" width="5.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="30.8" y="846.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (18 samples, 0.41%)</title><rect x="28.4" y="819.0" width="4.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="31.4" y="830.0"></text>
</g>
<g>
<title>sock_poll (13 samples, 0.30%)</title><rect x="29.7" y="803.0" width="3.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="32.7" y="814.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="31.1" y="787.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="34.1" y="798.0"></text>
</g>
<g>
<title>tcp_poll (7 samples, 0.16%)</title><rect x="31.3" y="787.0" width="1.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="34.3" y="798.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (4 samples, 0.09%)</title><rect x="32.1" y="771.0" width="1.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="35.1" y="782.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="33.2" y="819.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="36.2" y="830.0"></text>
</g>
<g>
<title>do_IRQ (1 samples, 0.02%)</title><rect x="33.2" y="803.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="36.2" y="814.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="33.2" y="787.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="36.2" y="798.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="33.2" y="771.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="36.2" y="782.0"></text>
</g>
<g>
<title>tasklet_action_common.isra.0 (1 samples, 0.02%)</title><rect x="33.2" y="755.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="36.2" y="766.0"></text>
</g>
<g>
<title>execlists_submission_tasklet	[i915] (1 samples, 0.02%)</title><rect x="33.2" y="739.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="36.2" y="750.0"></text>
</g>
<g>
<title>mutex_lock (2 samples, 0.05%)</title><rect x="33.5" y="835.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="36.5" y="846.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (26 samples, 0.60%)</title><rect x="34.0" y="851.0" width="7.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="37.0" y="862.0"></text>
</g>
<g>
<title>schedule (21 samples, 0.48%)</title><rect x="35.4" y="835.0" width="5.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="38.4" y="846.0"></text>
</g>
<g>
<title>__sched_text_start (18 samples, 0.41%)</title><rect x="36.2" y="819.0" width="4.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="39.2" y="830.0"></text>
</g>
<g>
<title>finish_task_switch (15 samples, 0.34%)</title><rect x="37.0" y="803.0" width="4.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="40.0" y="814.0"></text>
</g>
<g>
<title>fput_many (1 samples, 0.02%)</title><rect x="41.1" y="867.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="44.1" y="878.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (1 samples, 0.02%)</title><rect x="41.3" y="947.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="44.3" y="958.0"></text>
</g>
<g>
<title>__GI___clock_gettime (4 samples, 0.09%)</title><rect x="41.6" y="947.0" width="1.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="44.6" y="958.0"></text>
</g>
<g>
<title>[vdso] (4 samples, 0.09%)</title><rect x="41.6" y="931.0" width="1.1" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="44.6" y="942.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (2 samples, 0.05%)</title><rect x="42.7" y="947.0" width="0.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="45.7" y="958.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.02%)</title><rect x="43.2" y="947.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="46.2" y="958.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (2 samples, 0.05%)</title><rect x="43.5" y="947.0" width="0.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="46.5" y="958.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (226 samples, 5.17%)</title><rect x="44.0" y="979.0" width="61.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="47.0" y="990.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (221 samples, 5.06%)</title><rect x="44.3" y="963.0" width="59.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="47.3" y="974.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleSocketClosed (1 samples, 0.02%)</title><rect x="44.3" y="947.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="47.3" y="958.0"></text>
</g>
<g>
<title>one/nio/net/Session.scheduleClose (1 samples, 0.02%)</title><rect x="44.3" y="931.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="47.3" y="942.0"></text>
</g>
<g>
<title>one/nio/net/Session.close (1 samples, 0.02%)</title><rect x="44.3" y="915.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="47.3" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.close (1 samples, 0.02%)</title><rect x="44.3" y="899.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="47.3" y="910.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="44.3" y="883.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="47.3" y="894.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="44.3" y="867.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="47.3" y="878.0"></text>
</g>
<g>
<title>__GI_shutdown (1 samples, 0.02%)</title><rect x="44.3" y="851.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="47.3" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="44.3" y="835.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="47.3" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="44.3" y="819.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="47.3" y="830.0"></text>
</g>
<g>
<title>__x64_sys_shutdown (1 samples, 0.02%)</title><rect x="44.3" y="803.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="47.3" y="814.0"></text>
</g>
<g>
<title>__sys_shutdown (1 samples, 0.02%)</title><rect x="44.3" y="787.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="47.3" y="798.0"></text>
</g>
<g>
<title>inet_shutdown (1 samples, 0.02%)</title><rect x="44.3" y="771.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="47.3" y="782.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (1 samples, 0.02%)</title><rect x="44.3" y="755.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="47.3" y="766.0"></text>
</g>
<g>
<title>tcp_write_xmit (1 samples, 0.02%)</title><rect x="44.3" y="739.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="47.3" y="750.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (1 samples, 0.02%)</title><rect x="44.3" y="723.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="47.3" y="734.0"></text>
</g>
<g>
<title>__ip_queue_xmit (1 samples, 0.02%)</title><rect x="44.3" y="707.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="47.3" y="718.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.02%)</title><rect x="44.3" y="691.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="47.3" y="702.0"></text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="44.3" y="675.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="47.3" y="686.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="44.3" y="659.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="47.3" y="670.0"></text>
</g>
<g>
<title>do_softirq.part.0 (1 samples, 0.02%)</title><rect x="44.3" y="643.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="47.3" y="654.0"></text>
</g>
<g>
<title>do_softirq_own_stack (1 samples, 0.02%)</title><rect x="44.3" y="627.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="47.3" y="638.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="44.3" y="611.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="47.3" y="622.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.02%)</title><rect x="44.3" y="595.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="47.3" y="606.0"></text>
</g>
<g>
<title>process_backlog (1 samples, 0.02%)</title><rect x="44.3" y="579.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="47.3" y="590.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (1 samples, 0.02%)</title><rect x="44.3" y="563.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="47.3" y="574.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.02%)</title><rect x="44.3" y="547.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="47.3" y="558.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="44.3" y="531.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="47.3" y="542.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="44.3" y="515.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="47.3" y="526.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (1 samples, 0.02%)</title><rect x="44.3" y="499.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="47.3" y="510.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="44.3" y="483.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="47.3" y="494.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="44.3" y="467.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="47.3" y="478.0"></text>
</g>
<g>
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="44.3" y="451.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="47.3" y="462.0"></text>
</g>
<g>
<title>tcp_data_queue (1 samples, 0.02%)</title><rect x="44.3" y="435.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="47.3" y="446.0"></text>
</g>
<g>
<title>tcp_fin (1 samples, 0.02%)</title><rect x="44.3" y="419.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="47.3" y="430.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (1 samples, 0.02%)</title><rect x="44.3" y="403.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="47.3" y="414.0"></text>
</g>
<g>
<title>__ip_queue_xmit (1 samples, 0.02%)</title><rect x="44.3" y="387.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="47.3" y="398.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.02%)</title><rect x="44.3" y="371.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="47.3" y="382.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.02%)</title><rect x="44.3" y="355.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="47.3" y="366.0"></text>
</g>
<g>
<title>selinux_ip_postroute (1 samples, 0.02%)</title><rect x="44.3" y="339.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="47.3" y="350.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (116 samples, 2.66%)</title><rect x="44.6" y="947.0" width="31.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="47.6" y="958.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (73 samples, 1.67%)</title><rect x="47.8" y="931.0" width="19.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="50.8" y="942.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (73 samples, 1.67%)</title><rect x="47.8" y="915.0" width="19.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="50.8" y="926.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (69 samples, 1.58%)</title><rect x="47.8" y="899.0" width="18.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="50.8" y="910.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (8 samples, 0.18%)</title><rect x="48.4" y="883.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="51.4" y="894.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.02%)</title><rect x="48.9" y="867.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="51.9" y="878.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.02%)</title><rect x="48.9" y="851.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="51.9" y="862.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (5 samples, 0.11%)</title><rect x="49.2" y="867.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="52.2" y="878.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.05%)</title><rect x="50.0" y="851.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="53.0" y="862.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.05%)</title><rect x="50.0" y="835.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="53.0" y="846.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.05%)</title><rect x="50.0" y="819.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="53.0" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.entity (59 samples, 1.35%)</title><rect x="50.5" y="883.0" width="15.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="53.5" y="894.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.executeAsync (58 samples, 1.33%)</title><rect x="50.8" y="867.0" width="15.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="53.8" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (58 samples, 1.33%)</title><rect x="50.8" y="851.0" width="15.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="53.8" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (58 samples, 1.33%)</title><rect x="50.8" y="835.0" width="15.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="53.8" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (52 samples, 1.19%)</title><rect x="50.8" y="819.0" width="14.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="53.8" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.05%)</title><rect x="50.8" y="803.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="53.8" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.05%)</title><rect x="50.8" y="787.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="53.8" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (2 samples, 0.05%)</title><rect x="50.8" y="771.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="53.8" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2 samples, 0.05%)</title><rect x="50.8" y="755.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="53.8" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.05%)</title><rect x="50.8" y="739.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="53.8" y="750.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.05%)</title><rect x="50.8" y="723.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="53.8" y="734.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.02%)</title><rect x="50.8" y="707.0" width="0.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="53.8" y="718.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.02%)</title><rect x="50.8" y="691.0" width="0.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="53.8" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="50.8" y="675.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="53.8" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="50.8" y="659.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="53.8" y="670.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.02%)</title><rect x="50.8" y="643.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="53.8" y="654.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.02%)</title><rect x="50.8" y="627.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="53.8" y="638.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.02%)</title><rect x="50.8" y="611.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="53.8" y="622.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="51.1" y="707.0" width="0.2" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="54.1" y="718.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.02%)</title><rect x="51.1" y="691.0" width="0.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="54.1" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="51.1" y="675.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="54.1" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="51.1" y="659.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="54.1" y="670.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.02%)</title><rect x="51.1" y="643.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="54.1" y="654.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.02%)</title><rect x="51.1" y="627.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="54.1" y="638.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.02%)</title><rect x="51.1" y="611.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="54.1" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (50 samples, 1.14%)</title><rect x="51.3" y="803.0" width="13.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="54.3" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (50 samples, 1.14%)</title><rect x="51.3" y="787.0" width="13.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="54.3" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (50 samples, 1.14%)</title><rect x="51.3" y="771.0" width="13.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="54.3" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (50 samples, 1.14%)</title><rect x="51.3" y="755.0" width="13.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="54.3" y="766.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (47 samples, 1.08%)</title><rect x="52.1" y="739.0" width="12.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="55.1" y="750.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.02%)</title><rect x="52.1" y="723.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="55.1" y="734.0"></text>
</g>
<g>
<title>Unsafe_Unpark (4 samples, 0.09%)</title><rect x="52.4" y="723.0" width="1.1" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="55.4" y="734.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.229] (3 samples, 0.07%)</title><rect x="52.4" y="707.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="55.4" y="718.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.02%)</title><rect x="53.2" y="707.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="56.2" y="718.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="53.5" y="723.0" width="0.3" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="56.5" y="734.0"></text>
</g>
<g>
<title>_dl_update_slotinfo (1 samples, 0.02%)</title><rect x="53.5" y="707.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="56.5" y="718.0"></text>
</g>
<g>
<title>__pthread_cond_signal (38 samples, 0.87%)</title><rect x="53.8" y="723.0" width="10.2" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="56.8" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (33 samples, 0.76%)</title><rect x="55.1" y="707.0" width="8.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="58.1" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (33 samples, 0.76%)</title><rect x="55.1" y="691.0" width="8.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="58.1" y="702.0"></text>
</g>
<g>
<title>__x64_sys_futex (32 samples, 0.73%)</title><rect x="55.4" y="675.0" width="8.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="58.4" y="686.0"></text>
</g>
<g>
<title>do_futex (32 samples, 0.73%)</title><rect x="55.4" y="659.0" width="8.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="58.4" y="670.0"></text>
</g>
<g>
<title>futex_wake (31 samples, 0.71%)</title><rect x="55.6" y="643.0" width="8.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="58.6" y="654.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.02%)</title><rect x="56.2" y="627.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="59.2" y="638.0"></text>
</g>
<g>
<title>__unqueue_futex (1 samples, 0.02%)</title><rect x="56.2" y="611.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="59.2" y="622.0"></text>
</g>
<g>
<title>wake_up_q (28 samples, 0.64%)</title><rect x="56.5" y="627.0" width="7.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="59.5" y="638.0"></text>
</g>
<g>
<title>try_to_wake_up (28 samples, 0.64%)</title><rect x="56.5" y="611.0" width="7.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="59.5" y="622.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (28 samples, 0.64%)</title><rect x="56.5" y="595.0" width="7.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="59.5" y="606.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.05%)</title><rect x="64.0" y="723.0" width="0.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="67.0" y="734.0"></text>
</g>
<g>
<title>_init (1 samples, 0.02%)</title><rect x="64.6" y="723.0" width="0.2" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="67.6" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (5 samples, 0.11%)</title><rect x="64.8" y="819.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="67.8" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (5 samples, 0.11%)</title><rect x="64.8" y="803.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="67.8" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.02%)</title><rect x="66.2" y="819.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="69.2" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.02%)</title><rect x="66.2" y="803.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="69.2" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.02%)</title><rect x="66.2" y="787.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="69.2" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.02%)</title><rect x="66.2" y="771.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="69.2" y="782.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (4 samples, 0.09%)</title><rect x="66.4" y="899.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="69.4" y="910.0"></text>
</g>
<g>
<title>java/util/HashMap.get (4 samples, 0.09%)</title><rect x="66.4" y="883.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="69.4" y="894.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (4 samples, 0.09%)</title><rect x="66.4" y="867.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="69.4" y="878.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (4 samples, 0.09%)</title><rect x="66.4" y="851.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="69.4" y="862.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (4 samples, 0.09%)</title><rect x="66.4" y="835.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="69.4" y="846.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="67.3" y="819.0" width="0.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="70.3" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (27 samples, 0.62%)</title><rect x="67.5" y="931.0" width="7.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="70.5" y="942.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (11 samples, 0.25%)</title><rect x="69.7" y="915.0" width="3.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="72.7" y="926.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (11 samples, 0.25%)</title><rect x="69.7" y="899.0" width="3.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="72.7" y="910.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (11 samples, 0.25%)</title><rect x="69.7" y="883.0" width="3.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="72.7" y="894.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (11 samples, 0.25%)</title><rect x="69.7" y="867.0" width="3.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="72.7" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (8 samples, 0.18%)</title><rect x="72.7" y="915.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="75.7" y="926.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (4 samples, 0.09%)</title><rect x="74.8" y="931.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="77.8" y="942.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (104 samples, 2.38%)</title><rect x="75.9" y="947.0" width="28.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="78.9" y="958.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (103 samples, 2.36%)</title><rect x="75.9" y="931.0" width="27.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="78.9" y="942.0">o..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (2 samples, 0.05%)</title><rect x="77.0" y="915.0" width="0.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="80.0" y="926.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.34%)</title><rect x="77.5" y="915.0" width="4.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="80.5" y="926.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.34%)</title><rect x="77.5" y="899.0" width="4.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="80.5" y="910.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (11 samples, 0.25%)</title><rect x="77.5" y="883.0" width="3.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="80.5" y="894.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.05%)</title><rect x="77.8" y="867.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="80.8" y="878.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.02%)</title><rect x="78.3" y="867.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="81.3" y="878.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="78.6" y="867.0" width="0.3" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="81.6" y="878.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (5 samples, 0.11%)</title><rect x="78.9" y="867.0" width="1.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="81.9" y="878.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.02%)</title><rect x="79.1" y="851.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="82.1" y="862.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (2 samples, 0.05%)</title><rect x="79.4" y="851.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="82.4" y="862.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.02%)</title><rect x="80.0" y="851.0" width="0.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="83.0" y="862.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.02%)</title><rect x="80.2" y="867.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="83.2" y="878.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (2 samples, 0.05%)</title><rect x="80.5" y="883.0" width="0.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="83.5" y="894.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.05%)</title><rect x="81.0" y="883.0" width="0.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="84.0" y="894.0"></text>
</g>
<g>
<title>__libc_recv (81 samples, 1.85%)</title><rect x="81.6" y="915.0" width="21.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="84.6" y="926.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (61 samples, 1.40%)</title><rect x="87.0" y="899.0" width="16.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="90.0" y="910.0"></text>
</g>
<g>
<title>do_syscall_64 (61 samples, 1.40%)</title><rect x="87.0" y="883.0" width="16.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="90.0" y="894.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (55 samples, 1.26%)</title><rect x="88.6" y="867.0" width="14.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="91.6" y="878.0"></text>
</g>
<g>
<title>__sys_recvfrom (50 samples, 1.14%)</title><rect x="89.9" y="851.0" width="13.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="92.9" y="862.0"></text>
</g>
<g>
<title>fput_many (2 samples, 0.05%)</title><rect x="91.0" y="835.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="94.0" y="846.0"></text>
</g>
<g>
<title>import_single_range (3 samples, 0.07%)</title><rect x="91.6" y="835.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="94.6" y="846.0"></text>
</g>
<g>
<title>iov_iter_init (3 samples, 0.07%)</title><rect x="91.6" y="819.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="94.6" y="830.0"></text>
</g>
<g>
<title>inet_recvmsg (29 samples, 0.66%)</title><rect x="92.4" y="835.0" width="7.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="95.4" y="846.0"></text>
</g>
<g>
<title>tcp_recvmsg (29 samples, 0.66%)</title><rect x="92.4" y="819.0" width="7.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="95.4" y="830.0"></text>
</g>
<g>
<title>__kfree_skb (5 samples, 0.11%)</title><rect x="94.0" y="803.0" width="1.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="97.0" y="814.0"></text>
</g>
<g>
<title>skb_release_all (5 samples, 0.11%)</title><rect x="94.0" y="787.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="97.0" y="798.0"></text>
</g>
<g>
<title>skb_release_head_state (4 samples, 0.09%)</title><rect x="94.3" y="771.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="97.3" y="782.0"></text>
</g>
<g>
<title>dst_release (4 samples, 0.09%)</title><rect x="94.3" y="755.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="97.3" y="766.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="95.3" y="803.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="98.3" y="814.0"></text>
</g>
<g>
<title>lock_sock_nested (3 samples, 0.07%)</title><rect x="95.6" y="803.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="98.6" y="814.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.02%)</title><rect x="96.4" y="803.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="99.4" y="814.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.02%)</title><rect x="96.4" y="787.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="99.4" y="798.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (10 samples, 0.23%)</title><rect x="96.7" y="803.0" width="2.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="99.7" y="814.0"></text>
</g>
<g>
<title>__skb_datagram_iter (10 samples, 0.23%)</title><rect x="96.7" y="787.0" width="2.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="99.7" y="798.0"></text>
</g>
<g>
<title>_copy_to_iter (4 samples, 0.09%)</title><rect x="96.7" y="771.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="99.7" y="782.0"></text>
</g>
<g>
<title>copyout (3 samples, 0.07%)</title><rect x="97.0" y="755.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="100.0" y="766.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (3 samples, 0.07%)</title><rect x="97.0" y="739.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="100.0" y="750.0"></text>
</g>
<g>
<title>simple_copy_to_iter (6 samples, 0.14%)</title><rect x="97.8" y="771.0" width="1.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="100.8" y="782.0"></text>
</g>
<g>
<title>__check_object_size (5 samples, 0.11%)</title><rect x="98.0" y="755.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="101.0" y="766.0"></text>
</g>
<g>
<title>__check_heap_object (1 samples, 0.02%)</title><rect x="98.3" y="739.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="101.3" y="750.0"></text>
</g>
<g>
<title>__virt_addr_valid (3 samples, 0.07%)</title><rect x="98.6" y="739.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="101.6" y="750.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (3 samples, 0.07%)</title><rect x="99.4" y="803.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="102.4" y="814.0"></text>
</g>
<g>
<title>sock_recvmsg (8 samples, 0.18%)</title><rect x="100.2" y="835.0" width="2.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="103.2" y="846.0"></text>
</g>
<g>
<title>security_socket_recvmsg (8 samples, 0.18%)</title><rect x="100.2" y="819.0" width="2.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="103.2" y="830.0"></text>
</g>
<g>
<title>selinux_socket_recvmsg (1 samples, 0.02%)</title><rect x="100.2" y="803.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="103.2" y="814.0"></text>
</g>
<g>
<title>sock_has_perm (7 samples, 0.16%)</title><rect x="100.5" y="803.0" width="1.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="103.5" y="814.0"></text>
</g>
<g>
<title>avc_has_perm (5 samples, 0.11%)</title><rect x="101.0" y="787.0" width="1.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="104.0" y="798.0"></text>
</g>
<g>
<title>sockfd_lookup_light (4 samples, 0.09%)</title><rect x="102.4" y="835.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="105.4" y="846.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.09%)</title><rect x="102.4" y="819.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="105.4" y="830.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.05%)</title><rect x="102.9" y="803.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="105.9" y="814.0"></text>
</g>
<g>
<title>one/nio/net/SocketClosedException.&lt;init&gt; (1 samples, 0.02%)</title><rect x="103.4" y="915.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="106.4" y="926.0"></text>
</g>
<g>
<title>java/net/SocketException.&lt;init&gt; (1 samples, 0.02%)</title><rect x="103.4" y="899.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="106.4" y="910.0"></text>
</g>
<g>
<title>java/io/IOException.&lt;init&gt; (1 samples, 0.02%)</title><rect x="103.4" y="883.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="106.4" y="894.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (1 samples, 0.02%)</title><rect x="103.4" y="867.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="106.4" y="878.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (1 samples, 0.02%)</title><rect x="103.4" y="851.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="106.4" y="862.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1 samples, 0.02%)</title><rect x="103.4" y="835.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="106.4" y="846.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1 samples, 0.02%)</title><rect x="103.4" y="819.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="106.4" y="830.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (1 samples, 0.02%)</title><rect x="103.4" y="803.0" width="0.3" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="106.4" y="814.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (1 samples, 0.02%)</title><rect x="103.4" y="787.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="106.4" y="798.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (1 samples, 0.02%)</title><rect x="103.4" y="771.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="106.4" y="782.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;, Thread*) (1 samples, 0.02%)</title><rect x="103.4" y="755.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="106.4" y="766.0"></text>
</g>
<g>
<title>one/nio/net/Session.listen (1 samples, 0.02%)</title><rect x="103.7" y="931.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="106.7" y="942.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (4 samples, 0.09%)</title><rect x="104.0" y="963.0" width="1.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="107.0" y="974.0"></text>
</g>
<g>
<title>gettimeofday (4 samples, 0.09%)</title><rect x="104.0" y="947.0" width="1.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="107.0" y="958.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.05%)</title><rect x="104.5" y="931.0" width="0.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="107.5" y="942.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=25371] (345 samples, 7.90%)</title><rect x="105.1" y="1011.0" width="93.1" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="108.1" y="1022.0">[NIO Select..</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.02%)</title><rect x="105.1" y="995.0" width="0.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="108.1" y="1006.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.02%)</title><rect x="105.1" y="979.0" width="0.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="108.1" y="990.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.02%)</title><rect x="105.1" y="963.0" width="0.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="108.1" y="974.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.02%)</title><rect x="105.1" y="947.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="108.1" y="958.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.02%)</title><rect x="105.1" y="931.0" width="0.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="108.1" y="942.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.02%)</title><rect x="105.3" y="995.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="108.3" y="1006.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.02%)</title><rect x="105.3" y="979.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="108.3" y="990.0"></text>
</g>
<g>
<title>[unknown_Java] (3 samples, 0.07%)</title><rect x="105.6" y="995.0" width="0.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="108.6" y="1006.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.02%)</title><rect x="106.2" y="979.0" width="0.2" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="109.2" y="990.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="106.2" y="963.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="109.2" y="974.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="106.2" y="947.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="109.2" y="958.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.02%)</title><rect x="106.2" y="931.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="109.2" y="942.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (340 samples, 7.78%)</title><rect x="106.4" y="995.0" width="91.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="109.4" y="1006.0">one/nio/ser..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.hasNext (1 samples, 0.02%)</title><rect x="106.4" y="979.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="109.4" y="990.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (6 samples, 0.14%)</title><rect x="106.7" y="979.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="109.7" y="990.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (6 samples, 0.14%)</title><rect x="106.7" y="963.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="109.7" y="974.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (125 samples, 2.86%)</title><rect x="108.3" y="979.0" width="33.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="111.3" y="990.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (4 samples, 0.09%)</title><rect x="108.9" y="963.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="111.9" y="974.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (3 samples, 0.07%)</title><rect x="109.1" y="947.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="112.1" y="958.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.getInt (1 samples, 0.02%)</title><rect x="109.7" y="931.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="112.7" y="942.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getInt (1 samples, 0.02%)</title><rect x="109.7" y="915.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="112.7" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (119 samples, 2.72%)</title><rect x="109.9" y="963.0" width="32.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="112.9" y="974.0">on..</text>
</g>
<g>
<title>.annobin_epoll_wait.c (97 samples, 2.22%)</title><rect x="111.0" y="947.0" width="26.2" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="114.0" y="958.0">...</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (73 samples, 1.67%)</title><rect x="117.5" y="931.0" width="19.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="120.5" y="942.0"></text>
</g>
<g>
<title>do_syscall_64 (73 samples, 1.67%)</title><rect x="117.5" y="915.0" width="19.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="120.5" y="926.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (67 samples, 1.53%)</title><rect x="119.1" y="899.0" width="18.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="122.1" y="910.0"></text>
</g>
<g>
<title>do_epoll_wait (65 samples, 1.49%)</title><rect x="119.7" y="883.0" width="17.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="122.7" y="894.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.02%)</title><rect x="119.9" y="867.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="122.9" y="878.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.07%)</title><rect x="120.2" y="867.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="123.2" y="878.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.07%)</title><rect x="120.2" y="851.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="123.2" y="862.0"></text>
</g>
<g>
<title>ep_poll (59 samples, 1.35%)</title><rect x="121.0" y="867.0" width="15.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="124.0" y="878.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (32 samples, 0.73%)</title><rect x="123.4" y="851.0" width="8.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="126.4" y="862.0"></text>
</g>
<g>
<title>ep_send_events_proc (14 samples, 0.32%)</title><rect x="126.1" y="835.0" width="3.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="129.1" y="846.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (8 samples, 0.18%)</title><rect x="127.8" y="819.0" width="2.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="130.8" y="830.0"></text>
</g>
<g>
<title>sock_poll (5 samples, 0.11%)</title><rect x="128.6" y="803.0" width="1.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="131.6" y="814.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.02%)</title><rect x="129.6" y="787.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="132.6" y="798.0"></text>
</g>
<g>
<title>mutex_lock (6 samples, 0.14%)</title><rect x="129.9" y="835.0" width="1.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="132.9" y="846.0"></text>
</g>
<g>
<title>mutex_unlock (2 samples, 0.05%)</title><rect x="131.5" y="835.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="134.5" y="846.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (18 samples, 0.41%)</title><rect x="132.1" y="851.0" width="4.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="135.1" y="862.0"></text>
</g>
<g>
<title>schedule (14 samples, 0.32%)</title><rect x="133.2" y="835.0" width="3.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="136.2" y="846.0"></text>
</g>
<g>
<title>__sched_text_start (11 samples, 0.25%)</title><rect x="134.0" y="819.0" width="2.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="137.0" y="830.0"></text>
</g>
<g>
<title>finish_task_switch (8 samples, 0.18%)</title><rect x="134.8" y="803.0" width="2.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="137.8" y="814.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="136.7" y="787.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="139.7" y="798.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="136.7" y="771.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="139.7" y="782.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="136.7" y="755.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="139.7" y="766.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="136.7" y="739.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="139.7" y="750.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="136.7" y="723.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="139.7" y="734.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="136.7" y="707.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="139.7" y="718.0"></text>
</g>
<g>
<title>fput_many (1 samples, 0.02%)</title><rect x="136.9" y="867.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="139.9" y="878.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (1 samples, 0.02%)</title><rect x="137.2" y="947.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="140.2" y="958.0"></text>
</g>
<g>
<title>__GI___clock_gettime (9 samples, 0.21%)</title><rect x="137.5" y="947.0" width="2.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="140.5" y="958.0"></text>
</g>
<g>
<title>[vdso] (3 samples, 0.07%)</title><rect x="139.1" y="931.0" width="0.8" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="142.1" y="942.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (4 samples, 0.09%)</title><rect x="139.9" y="947.0" width="1.1" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="142.9" y="958.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (2 samples, 0.05%)</title><rect x="141.0" y="947.0" width="0.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="144.0" y="958.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (2 samples, 0.05%)</title><rect x="141.5" y="947.0" width="0.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="144.5" y="958.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (208 samples, 4.76%)</title><rect x="142.1" y="979.0" width="56.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="145.1" y="990.0">one/ni..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.02%)</title><rect x="142.9" y="963.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="145.9" y="974.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (1 samples, 0.02%)</title><rect x="142.9" y="947.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="145.9" y="958.0"></text>
</g>
<g>
<title>JavaThread::is_lock_owned(unsigned char*) const (1 samples, 0.02%)</title><rect x="142.9" y="931.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="145.9" y="942.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (203 samples, 4.65%)</title><rect x="143.2" y="963.0" width="54.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="146.2" y="974.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (111 samples, 2.54%)</title><rect x="143.2" y="947.0" width="29.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="146.2" y="958.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (74 samples, 1.69%)</title><rect x="145.6" y="931.0" width="20.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="148.6" y="942.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (74 samples, 1.69%)</title><rect x="145.6" y="915.0" width="20.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="148.6" y="926.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (70 samples, 1.60%)</title><rect x="145.6" y="899.0" width="18.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="148.6" y="910.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (5 samples, 0.11%)</title><rect x="145.6" y="883.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="148.6" y="894.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="146.1" y="867.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="149.1" y="878.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (2 samples, 0.05%)</title><rect x="146.4" y="867.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="149.4" y="878.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.05%)</title><rect x="146.4" y="851.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="149.4" y="862.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.05%)</title><rect x="146.4" y="835.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="149.4" y="846.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.05%)</title><rect x="146.4" y="819.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="149.4" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.entity (65 samples, 1.49%)</title><rect x="146.9" y="883.0" width="17.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="149.9" y="894.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="146.9" y="867.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="149.9" y="878.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="146.9" y="851.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="149.9" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer$$Lambda$85/1955586341.get$Lambda (1 samples, 0.02%)</title><rect x="146.9" y="835.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="149.9" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.executeAsync (64 samples, 1.46%)</title><rect x="147.2" y="867.0" width="17.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="150.2" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (64 samples, 1.46%)</title><rect x="147.2" y="851.0" width="17.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="150.2" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (62 samples, 1.42%)</title><rect x="147.7" y="835.0" width="16.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="150.7" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (55 samples, 1.26%)</title><rect x="147.7" y="819.0" width="14.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="150.7" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (55 samples, 1.26%)</title><rect x="147.7" y="803.0" width="14.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="150.7" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (55 samples, 1.26%)</title><rect x="147.7" y="787.0" width="14.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="150.7" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (55 samples, 1.26%)</title><rect x="147.7" y="771.0" width="14.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="150.7" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (55 samples, 1.26%)</title><rect x="147.7" y="755.0" width="14.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="150.7" y="766.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (55 samples, 1.26%)</title><rect x="147.7" y="739.0" width="14.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="150.7" y="750.0"></text>
</g>
<g>
<title>Parker::unpark() (1 samples, 0.02%)</title><rect x="147.7" y="723.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="150.7" y="734.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.02%)</title><rect x="148.0" y="723.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="151.0" y="734.0"></text>
</g>
<g>
<title>Unsafe_Unpark (9 samples, 0.21%)</title><rect x="148.3" y="723.0" width="2.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="151.3" y="734.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.02%)</title><rect x="148.6" y="707.0" width="0.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="151.6" y="718.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.02%)</title><rect x="148.8" y="707.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="151.8" y="718.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_lock (1 samples, 0.02%)</title><rect x="149.1" y="707.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="152.1" y="718.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (2 samples, 0.05%)</title><rect x="149.4" y="707.0" width="0.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="152.4" y="718.0"></text>
</g>
<g>
<title>__tls_get_addr_slow (2 samples, 0.05%)</title><rect x="149.9" y="707.0" width="0.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="152.9" y="718.0"></text>
</g>
<g>
<title>update_get_addr (1 samples, 0.02%)</title><rect x="150.4" y="707.0" width="0.3" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="153.4" y="718.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="150.7" y="723.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="153.7" y="734.0"></text>
</g>
<g>
<title>update_get_addr (1 samples, 0.02%)</title><rect x="150.7" y="707.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="153.7" y="718.0"></text>
</g>
<g>
<title>__pthread_cond_signal (42 samples, 0.96%)</title><rect x="151.0" y="723.0" width="11.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="154.0" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (32 samples, 0.73%)</title><rect x="153.7" y="707.0" width="8.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="156.7" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (32 samples, 0.73%)</title><rect x="153.7" y="691.0" width="8.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="156.7" y="702.0"></text>
</g>
<g>
<title>__x64_sys_futex (30 samples, 0.69%)</title><rect x="154.2" y="675.0" width="8.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="157.2" y="686.0"></text>
</g>
<g>
<title>do_futex (28 samples, 0.64%)</title><rect x="154.8" y="659.0" width="7.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="157.8" y="670.0"></text>
</g>
<g>
<title>futex_wake (28 samples, 0.64%)</title><rect x="154.8" y="643.0" width="7.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="157.8" y="654.0"></text>
</g>
<g>
<title>get_futex_key (2 samples, 0.05%)</title><rect x="155.0" y="627.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="158.0" y="638.0"></text>
</g>
<g>
<title>wake_up_q (25 samples, 0.57%)</title><rect x="155.6" y="627.0" width="6.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="158.6" y="638.0"></text>
</g>
<g>
<title>try_to_wake_up (25 samples, 0.57%)</title><rect x="155.6" y="611.0" width="6.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="158.6" y="622.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (25 samples, 0.57%)</title><rect x="155.6" y="595.0" width="6.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="158.6" y="606.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="162.3" y="723.0" width="0.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="165.3" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.05%)</title><rect x="162.6" y="819.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="165.6" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.05%)</title><rect x="162.6" y="803.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="165.6" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (5 samples, 0.11%)</title><rect x="163.1" y="819.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="166.1" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (5 samples, 0.11%)</title><rect x="163.1" y="803.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="166.1" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (5 samples, 0.11%)</title><rect x="163.1" y="787.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="166.1" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (4 samples, 0.09%)</title><rect x="163.4" y="771.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="166.4" y="782.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="164.2" y="755.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="167.2" y="766.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="164.2" y="739.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="167.2" y="750.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="164.2" y="723.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="167.2" y="734.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="164.2" y="707.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="167.2" y="718.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="164.2" y="691.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="167.2" y="702.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="164.2" y="675.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="167.2" y="686.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (4 samples, 0.09%)</title><rect x="164.5" y="899.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="167.5" y="910.0"></text>
</g>
<g>
<title>java/util/HashMap.get (4 samples, 0.09%)</title><rect x="164.5" y="883.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="167.5" y="894.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.02%)</title><rect x="164.5" y="867.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="167.5" y="878.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (3 samples, 0.07%)</title><rect x="164.8" y="867.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="167.8" y="878.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (3 samples, 0.07%)</title><rect x="164.8" y="851.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="167.8" y="862.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (3 samples, 0.07%)</title><rect x="164.8" y="835.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="167.8" y="846.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="165.3" y="819.0" width="0.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="168.3" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (21 samples, 0.48%)</title><rect x="165.6" y="931.0" width="5.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="168.6" y="942.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (2 samples, 0.05%)</title><rect x="166.6" y="915.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="169.6" y="926.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.05%)</title><rect x="166.6" y="899.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="169.6" y="910.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.05%)</title><rect x="166.6" y="883.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="169.6" y="894.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.05%)</title><rect x="166.6" y="867.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="169.6" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (15 samples, 0.34%)</title><rect x="167.2" y="915.0" width="4.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="170.2" y="926.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (3 samples, 0.07%)</title><rect x="171.2" y="931.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="174.2" y="942.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (3 samples, 0.07%)</title><rect x="171.2" y="915.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="174.2" y="926.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.07%)</title><rect x="171.2" y="899.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="174.2" y="910.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="171.8" y="883.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="174.8" y="894.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="171.8" y="867.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="174.8" y="878.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="171.8" y="851.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="174.8" y="862.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="171.8" y="835.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="174.8" y="846.0"></text>
</g>
<g>
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="171.8" y="819.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="174.8" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.09%)</title><rect x="172.1" y="931.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="175.1" y="942.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.09%)</title><rect x="172.1" y="915.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="175.1" y="926.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (92 samples, 2.11%)</title><rect x="173.1" y="947.0" width="24.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="176.1" y="958.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (91 samples, 2.08%)</title><rect x="173.4" y="931.0" width="24.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="176.4" y="942.0">o..</text>
</g>
<g>
<title>[unknown] (21 samples, 0.48%)</title><rect x="173.7" y="915.0" width="5.6" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="176.7" y="926.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.48%)</title><rect x="173.7" y="899.0" width="5.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="176.7" y="910.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (18 samples, 0.41%)</title><rect x="173.7" y="883.0" width="4.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="176.7" y="894.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (3 samples, 0.07%)</title><rect x="173.9" y="867.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="176.9" y="878.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.02%)</title><rect x="174.8" y="867.0" width="0.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="177.8" y="878.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (1 samples, 0.02%)</title><rect x="175.0" y="867.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="178.0" y="878.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (4 samples, 0.09%)</title><rect x="175.3" y="867.0" width="1.1" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="178.3" y="878.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (6 samples, 0.14%)</title><rect x="176.4" y="867.0" width="1.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="179.4" y="878.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.05%)</title><rect x="176.9" y="851.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="179.9" y="862.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.02%)</title><rect x="177.5" y="851.0" width="0.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="180.5" y="862.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (1 samples, 0.02%)</title><rect x="177.7" y="851.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="180.7" y="862.0"></text>
</g>
<g>
<title>jni_ThrowNew (2 samples, 0.05%)</title><rect x="178.0" y="867.0" width="0.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="181.0" y="878.0"></text>
</g>
<g>
<title>Exceptions::_throw_msg(Thread*, char const*, int, Symbol*, char const*, Handle, Handle) (2 samples, 0.05%)</title><rect x="178.0" y="851.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="181.0" y="862.0"></text>
</g>
<g>
<title>Exceptions::_throw(Thread*, char const*, int, Handle, char const*) (1 samples, 0.02%)</title><rect x="178.0" y="835.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="181.0" y="846.0"></text>
</g>
<g>
<title>oopDesc::print_value_string() (1 samples, 0.02%)</title><rect x="178.0" y="819.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="181.0" y="830.0"></text>
</g>
<g>
<title>InstanceKlass::oop_print_value_on(oopDesc*, outputStream*) (1 samples, 0.02%)</title><rect x="178.0" y="803.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="181.0" y="814.0"></text>
</g>
<g>
<title>Symbol::print_value_on(outputStream*) const (1 samples, 0.02%)</title><rect x="178.0" y="787.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="181.0" y="798.0"></text>
</g>
<g>
<title>outputStream::print(char const*, ...) (1 samples, 0.02%)</title><rect x="178.0" y="771.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="181.0" y="782.0"></text>
</g>
<g>
<title>outputStream::do_vsnprintf_and_write_with_automatic_buffer(char const*, __va_list_tag*, bool) (1 samples, 0.02%)</title><rect x="178.0" y="755.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="181.0" y="766.0"></text>
</g>
<g>
<title>__vsnprintf_internal (1 samples, 0.02%)</title><rect x="178.0" y="739.0" width="0.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="181.0" y="750.0"></text>
</g>
<g>
<title>Exceptions::new_exception(Thread*, Symbol*, char const*, Handle, Handle, Handle, Exceptions::ExceptionMsgToUtf8Mode) (1 samples, 0.02%)</title><rect x="178.3" y="835.0" width="0.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="181.3" y="846.0"></text>
</g>
<g>
<title>JavaCalls::construct_new_instance(InstanceKlass*, Symbol*, JavaCallArguments*, Thread*) (1 samples, 0.02%)</title><rect x="178.3" y="819.0" width="0.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="181.3" y="830.0"></text>
</g>
<g>
<title>JavaCalls::call_special(JavaValue*, Klass*, Symbol*, Symbol*, JavaCallArguments*, Thread*) (1 samples, 0.02%)</title><rect x="178.3" y="803.0" width="0.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="181.3" y="814.0"></text>
</g>
<g>
<title>LinkResolver::resolve_special_call(CallInfo&amp;, Handle, LinkInfo const&amp;, Thread*) (1 samples, 0.02%)</title><rect x="178.3" y="787.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="181.3" y="798.0"></text>
</g>
<g>
<title>LinkResolver::linktime_resolve_special_method(LinkInfo const&amp;, Thread*) (1 samples, 0.02%)</title><rect x="178.3" y="771.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="181.3" y="782.0"></text>
</g>
<g>
<title>__libc_recv (1 samples, 0.02%)</title><rect x="178.5" y="883.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="181.5" y="894.0"></text>
</g>
<g>
<title>__vsnprintf_internal (1 samples, 0.02%)</title><rect x="178.8" y="883.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="181.8" y="894.0"></text>
</g>
<g>
<title>__vfprintf_internal (1 samples, 0.02%)</title><rect x="178.8" y="867.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="181.8" y="878.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.02%)</title><rect x="179.1" y="883.0" width="0.2" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="182.1" y="894.0"></text>
</g>
<g>
<title>__libc_recv (69 samples, 1.58%)</title><rect x="179.3" y="915.0" width="18.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="182.3" y="926.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (47 samples, 1.08%)</title><rect x="185.3" y="899.0" width="12.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="188.3" y="910.0"></text>
</g>
<g>
<title>do_syscall_64 (47 samples, 1.08%)</title><rect x="185.3" y="883.0" width="12.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="188.3" y="894.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (41 samples, 0.94%)</title><rect x="186.9" y="867.0" width="11.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="189.9" y="878.0"></text>
</g>
<g>
<title>__sys_recvfrom (40 samples, 0.92%)</title><rect x="187.2" y="851.0" width="10.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="190.2" y="862.0"></text>
</g>
<g>
<title>inet_recvmsg (29 samples, 0.66%)</title><rect x="187.2" y="835.0" width="7.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="190.2" y="846.0"></text>
</g>
<g>
<title>tcp_recvmsg (28 samples, 0.64%)</title><rect x="187.4" y="819.0" width="7.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="190.4" y="830.0"></text>
</g>
<g>
<title>__kfree_skb (3 samples, 0.07%)</title><rect x="189.6" y="803.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="192.6" y="814.0"></text>
</g>
<g>
<title>skb_release_all (3 samples, 0.07%)</title><rect x="189.6" y="787.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="192.6" y="798.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.02%)</title><rect x="190.1" y="771.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="193.1" y="782.0"></text>
</g>
<g>
<title>sock_rfree (1 samples, 0.02%)</title><rect x="190.1" y="755.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="193.1" y="766.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.02%)</title><rect x="190.4" y="803.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="193.4" y="814.0"></text>
</g>
<g>
<title>ns_to_timespec64 (2 samples, 0.05%)</title><rect x="190.7" y="803.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="193.7" y="814.0"></text>
</g>
<g>
<title>release_sock (3 samples, 0.07%)</title><rect x="191.2" y="803.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="194.2" y="814.0"></text>
</g>
<g>
<title>tcp_release_cb (3 samples, 0.07%)</title><rect x="191.2" y="787.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="194.2" y="798.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (8 samples, 0.18%)</title><rect x="192.0" y="803.0" width="2.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="195.0" y="814.0"></text>
</g>
<g>
<title>__skb_datagram_iter (8 samples, 0.18%)</title><rect x="192.0" y="787.0" width="2.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="195.0" y="798.0"></text>
</g>
<g>
<title>_copy_to_iter (3 samples, 0.07%)</title><rect x="192.0" y="771.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="195.0" y="782.0"></text>
</g>
<g>
<title>copyout (3 samples, 0.07%)</title><rect x="192.0" y="755.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="195.0" y="766.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (3 samples, 0.07%)</title><rect x="192.0" y="739.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="195.0" y="750.0"></text>
</g>
<g>
<title>simple_copy_to_iter (5 samples, 0.11%)</title><rect x="192.8" y="771.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="195.8" y="782.0"></text>
</g>
<g>
<title>__check_object_size (4 samples, 0.09%)</title><rect x="193.1" y="755.0" width="1.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="196.1" y="766.0"></text>
</g>
<g>
<title>__check_heap_object (1 samples, 0.02%)</title><rect x="193.7" y="739.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="196.7" y="750.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.02%)</title><rect x="193.9" y="739.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="196.9" y="750.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (2 samples, 0.05%)</title><rect x="194.2" y="803.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="197.2" y="814.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.02%)</title><rect x="194.5" y="787.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="197.5" y="798.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.02%)</title><rect x="194.5" y="771.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="197.5" y="782.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.02%)</title><rect x="194.5" y="755.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="197.5" y="766.0"></text>
</g>
<g>
<title>tcp_recv_timestamp (1 samples, 0.02%)</title><rect x="194.7" y="803.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="197.7" y="814.0"></text>
</g>
<g>
<title>sock_recvmsg (6 samples, 0.14%)</title><rect x="195.0" y="835.0" width="1.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="198.0" y="846.0"></text>
</g>
<g>
<title>security_socket_recvmsg (5 samples, 0.11%)</title><rect x="195.3" y="819.0" width="1.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="198.3" y="830.0"></text>
</g>
<g>
<title>sock_has_perm (4 samples, 0.09%)</title><rect x="195.5" y="803.0" width="1.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="198.5" y="814.0"></text>
</g>
<g>
<title>avc_has_perm (3 samples, 0.07%)</title><rect x="195.8" y="787.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="198.8" y="798.0"></text>
</g>
<g>
<title>sockfd_lookup_light (5 samples, 0.11%)</title><rect x="196.6" y="835.0" width="1.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="199.6" y="846.0"></text>
</g>
<g>
<title>__fget_light (5 samples, 0.11%)</title><rect x="196.6" y="819.0" width="1.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="199.6" y="830.0"></text>
</g>
<g>
<title>__fget (5 samples, 0.11%)</title><rect x="196.6" y="803.0" width="1.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="199.6" y="814.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.02%)</title><rect x="198.0" y="963.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="201.0" y="974.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.02%)</title><rect x="198.0" y="947.0" width="0.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="201.0" y="958.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=25372] (352 samples, 8.06%)</title><rect x="198.2" y="1011.0" width="95.1" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="201.2" y="1022.0">[NIO Select..</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.02%)</title><rect x="198.2" y="995.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="201.2" y="1006.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (1 samples, 0.02%)</title><rect x="198.2" y="979.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="201.2" y="990.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.02%)</title><rect x="198.2" y="963.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="201.2" y="974.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.02%)</title><rect x="198.2" y="947.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="201.2" y="958.0"></text>
</g>
<g>
<title>G1CollectedHeap::unsafe_max_tlab_alloc(Thread*) const (1 samples, 0.02%)</title><rect x="198.2" y="931.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="201.2" y="942.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.02%)</title><rect x="198.5" y="995.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="201.5" y="1006.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.02%)</title><rect x="198.5" y="979.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="201.5" y="990.0"></text>
</g>
<g>
<title>[unknown_Java] (6 samples, 0.14%)</title><rect x="198.8" y="995.0" width="1.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="201.8" y="1006.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (344 samples, 7.87%)</title><rect x="200.4" y="995.0" width="92.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="203.4" y="1006.0">one/nio/ser..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.hasNext (1 samples, 0.02%)</title><rect x="200.4" y="979.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="203.4" y="990.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (5 samples, 0.11%)</title><rect x="200.7" y="979.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="203.7" y="990.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (5 samples, 0.11%)</title><rect x="200.7" y="963.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="203.7" y="974.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (118 samples, 2.70%)</title><rect x="202.0" y="979.0" width="31.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="205.0" y="990.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (2 samples, 0.05%)</title><rect x="202.3" y="963.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="205.3" y="974.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (2 samples, 0.05%)</title><rect x="202.3" y="947.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="205.3" y="958.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (115 samples, 2.63%)</title><rect x="202.8" y="963.0" width="31.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="205.8" y="974.0">on..</text>
</g>
<g>
<title>.annobin_epoll_wait.c (100 samples, 2.29%)</title><rect x="203.7" y="947.0" width="27.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="206.7" y="958.0">...</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (79 samples, 1.81%)</title><rect x="209.3" y="931.0" width="21.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="212.3" y="942.0">e..</text>
</g>
<g>
<title>do_syscall_64 (79 samples, 1.81%)</title><rect x="209.3" y="915.0" width="21.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="212.3" y="926.0">d..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (67 samples, 1.53%)</title><rect x="212.6" y="899.0" width="18.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="215.6" y="910.0"></text>
</g>
<g>
<title>do_epoll_wait (67 samples, 1.53%)</title><rect x="212.6" y="883.0" width="18.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="215.6" y="894.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.09%)</title><rect x="213.1" y="867.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="216.1" y="878.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.07%)</title><rect x="213.4" y="851.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="216.4" y="862.0"></text>
</g>
<g>
<title>ep_poll (59 samples, 1.35%)</title><rect x="214.2" y="867.0" width="15.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="217.2" y="878.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (33 samples, 0.76%)</title><rect x="216.3" y="851.0" width="9.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="219.3" y="862.0"></text>
</g>
<g>
<title>ep_send_events_proc (18 samples, 0.41%)</title><rect x="218.8" y="835.0" width="4.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="221.8" y="846.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (14 samples, 0.32%)</title><rect x="219.9" y="819.0" width="3.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="222.9" y="830.0"></text>
</g>
<g>
<title>sock_poll (11 samples, 0.25%)</title><rect x="220.7" y="803.0" width="2.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="223.7" y="814.0"></text>
</g>
<g>
<title>tcp_poll (4 samples, 0.09%)</title><rect x="222.6" y="787.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="225.6" y="798.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (2 samples, 0.05%)</title><rect x="223.1" y="771.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="226.1" y="782.0"></text>
</g>
<g>
<title>mutex_lock (6 samples, 0.14%)</title><rect x="223.6" y="835.0" width="1.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="226.6" y="846.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.02%)</title><rect x="225.0" y="819.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="228.0" y="830.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (18 samples, 0.41%)</title><rect x="225.3" y="851.0" width="4.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="228.3" y="862.0"></text>
</g>
<g>
<title>schedule (16 samples, 0.37%)</title><rect x="225.8" y="835.0" width="4.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="228.8" y="846.0"></text>
</g>
<g>
<title>__sched_text_start (15 samples, 0.34%)</title><rect x="226.1" y="819.0" width="4.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="229.1" y="830.0"></text>
</g>
<g>
<title>finish_task_switch (15 samples, 0.34%)</title><rect x="226.1" y="803.0" width="4.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="229.1" y="814.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="229.8" y="787.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="232.8" y="798.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="229.8" y="771.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="232.8" y="782.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="229.8" y="755.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="232.8" y="766.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="229.8" y="739.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="232.8" y="750.0"></text>
</g>
<g>
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="229.8" y="723.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="232.8" y="734.0"></text>
</g>
<g>
<title>call_timer_fn (1 samples, 0.02%)</title><rect x="229.8" y="707.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="232.8" y="718.0"></text>
</g>
<g>
<title>tcp_delack_timer (1 samples, 0.02%)</title><rect x="229.8" y="691.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="232.8" y="702.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="229.8" y="675.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="232.8" y="686.0"></text>
</g>
<g>
<title>fput_many (2 samples, 0.05%)</title><rect x="230.1" y="867.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="233.1" y="878.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (1 samples, 0.02%)</title><rect x="230.7" y="947.0" width="0.2" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="233.7" y="958.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.05%)</title><rect x="230.9" y="947.0" width="0.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="233.9" y="958.0"></text>
</g>
<g>
<title>__GI___clock_gettime (4 samples, 0.09%)</title><rect x="231.5" y="947.0" width="1.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="234.5" y="958.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.02%)</title><rect x="232.3" y="931.0" width="0.2" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="235.3" y="942.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (3 samples, 0.07%)</title><rect x="232.5" y="947.0" width="0.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="235.5" y="958.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.02%)</title><rect x="233.4" y="947.0" width="0.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="236.4" y="958.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (1 samples, 0.02%)</title><rect x="233.6" y="947.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="236.6" y="958.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (220 samples, 5.04%)</title><rect x="233.9" y="979.0" width="59.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="236.9" y="990.0">one/ni..</text>
</g>
<g>
<title>gettimeofday (1 samples, 0.02%)</title><rect x="234.4" y="963.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="237.4" y="974.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (213 samples, 4.88%)</title><rect x="234.7" y="963.0" width="57.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="237.7" y="974.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleSocketClosed (1 samples, 0.02%)</title><rect x="234.7" y="947.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="237.7" y="958.0"></text>
</g>
<g>
<title>one/nio/net/Session.scheduleClose (1 samples, 0.02%)</title><rect x="234.7" y="931.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="237.7" y="942.0"></text>
</g>
<g>
<title>one/nio/net/Session.close (1 samples, 0.02%)</title><rect x="234.7" y="915.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="237.7" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.close (1 samples, 0.02%)</title><rect x="234.7" y="899.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="237.7" y="910.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="234.7" y="883.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="237.7" y="894.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="234.7" y="867.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="237.7" y="878.0"></text>
</g>
<g>
<title>__GI_shutdown (1 samples, 0.02%)</title><rect x="234.7" y="851.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="237.7" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="234.7" y="835.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="237.7" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="234.7" y="819.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="237.7" y="830.0"></text>
</g>
<g>
<title>__x64_sys_shutdown (1 samples, 0.02%)</title><rect x="234.7" y="803.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="237.7" y="814.0"></text>
</g>
<g>
<title>__sys_shutdown (1 samples, 0.02%)</title><rect x="234.7" y="787.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="237.7" y="798.0"></text>
</g>
<g>
<title>inet_shutdown (1 samples, 0.02%)</title><rect x="234.7" y="771.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="237.7" y="782.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (1 samples, 0.02%)</title><rect x="234.7" y="755.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="237.7" y="766.0"></text>
</g>
<g>
<title>tcp_write_xmit (1 samples, 0.02%)</title><rect x="234.7" y="739.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="237.7" y="750.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (1 samples, 0.02%)</title><rect x="234.7" y="723.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="237.7" y="734.0"></text>
</g>
<g>
<title>__ip_queue_xmit (1 samples, 0.02%)</title><rect x="234.7" y="707.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="237.7" y="718.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.02%)</title><rect x="234.7" y="691.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="237.7" y="702.0"></text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="234.7" y="675.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="237.7" y="686.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="234.7" y="659.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="237.7" y="670.0"></text>
</g>
<g>
<title>do_softirq.part.0 (1 samples, 0.02%)</title><rect x="234.7" y="643.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="237.7" y="654.0"></text>
</g>
<g>
<title>do_softirq_own_stack (1 samples, 0.02%)</title><rect x="234.7" y="627.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="237.7" y="638.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="234.7" y="611.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="237.7" y="622.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.02%)</title><rect x="234.7" y="595.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="237.7" y="606.0"></text>
</g>
<g>
<title>process_backlog (1 samples, 0.02%)</title><rect x="234.7" y="579.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="237.7" y="590.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (1 samples, 0.02%)</title><rect x="234.7" y="563.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="237.7" y="574.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.02%)</title><rect x="234.7" y="547.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="237.7" y="558.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="234.7" y="531.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="237.7" y="542.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="234.7" y="515.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="237.7" y="526.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (1 samples, 0.02%)</title><rect x="234.7" y="499.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="237.7" y="510.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="234.7" y="483.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="237.7" y="494.0"></text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.02%)</title><rect x="234.7" y="467.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="237.7" y="478.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (107 samples, 2.45%)</title><rect x="235.0" y="947.0" width="28.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="238.0" y="958.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (77 samples, 1.76%)</title><rect x="236.1" y="931.0" width="20.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="239.1" y="942.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (76 samples, 1.74%)</title><rect x="236.3" y="915.0" width="20.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="239.3" y="926.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (72 samples, 1.65%)</title><rect x="236.3" y="899.0" width="19.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="239.3" y="910.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (9 samples, 0.21%)</title><rect x="236.9" y="883.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="239.9" y="894.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="238.2" y="867.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="241.2" y="878.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (3 samples, 0.07%)</title><rect x="238.5" y="867.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="241.5" y="878.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.05%)</title><rect x="238.8" y="851.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="241.8" y="862.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.05%)</title><rect x="238.8" y="835.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="241.8" y="846.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.05%)</title><rect x="238.8" y="819.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="241.8" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.entity (61 samples, 1.40%)</title><rect x="239.3" y="883.0" width="16.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="242.3" y="894.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.09%)</title><rect x="239.3" y="867.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="242.3" y="878.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.09%)</title><rect x="239.3" y="851.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="242.3" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer$$Lambda$85/1955586341.get$Lambda (4 samples, 0.09%)</title><rect x="239.3" y="835.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="242.3" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer$$Lambda$85/1955586341.&lt;init&gt; (2 samples, 0.05%)</title><rect x="239.8" y="819.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="242.8" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.executeAsync (57 samples, 1.30%)</title><rect x="240.4" y="867.0" width="15.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="243.4" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (57 samples, 1.30%)</title><rect x="240.4" y="851.0" width="15.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="243.4" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (56 samples, 1.28%)</title><rect x="240.7" y="835.0" width="15.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="243.7" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (50 samples, 1.14%)</title><rect x="240.7" y="819.0" width="13.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="243.7" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.02%)</title><rect x="240.7" y="803.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="243.7" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.02%)</title><rect x="240.7" y="787.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="243.7" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.02%)</title><rect x="240.7" y="771.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="243.7" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.02%)</title><rect x="240.7" y="755.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="243.7" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.02%)</title><rect x="240.7" y="739.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="243.7" y="750.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.02%)</title><rect x="240.7" y="723.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="243.7" y="734.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.02%)</title><rect x="240.7" y="707.0" width="0.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="243.7" y="718.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.02%)</title><rect x="240.7" y="691.0" width="0.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="243.7" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (49 samples, 1.12%)</title><rect x="240.9" y="803.0" width="13.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="243.9" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (49 samples, 1.12%)</title><rect x="240.9" y="787.0" width="13.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="243.9" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (49 samples, 1.12%)</title><rect x="240.9" y="771.0" width="13.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="243.9" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (49 samples, 1.12%)</title><rect x="240.9" y="755.0" width="13.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="243.9" y="766.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (49 samples, 1.12%)</title><rect x="240.9" y="739.0" width="13.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="243.9" y="750.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.02%)</title><rect x="240.9" y="723.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="243.9" y="734.0"></text>
</g>
<g>
<title>Unsafe_Unpark (8 samples, 0.18%)</title><rect x="241.2" y="723.0" width="2.2" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="244.2" y="734.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.02%)</title><rect x="241.5" y="707.0" width="0.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="244.5" y="718.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.02%)</title><rect x="241.7" y="707.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="244.7" y="718.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_lock (2 samples, 0.05%)</title><rect x="242.0" y="707.0" width="0.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="245.0" y="718.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.02%)</title><rect x="242.5" y="707.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="245.5" y="718.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (1 samples, 0.02%)</title><rect x="242.8" y="707.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="245.8" y="718.0"></text>
</g>
<g>
<title>update_get_addr (1 samples, 0.02%)</title><rect x="243.1" y="707.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="246.1" y="718.0"></text>
</g>
<g>
<title>__pthread_cond_signal (40 samples, 0.92%)</title><rect x="243.4" y="723.0" width="10.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="246.4" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (34 samples, 0.78%)</title><rect x="245.0" y="707.0" width="9.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="248.0" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (34 samples, 0.78%)</title><rect x="245.0" y="691.0" width="9.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="248.0" y="702.0"></text>
</g>
<g>
<title>__x64_sys_futex (33 samples, 0.76%)</title><rect x="245.2" y="675.0" width="9.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="248.2" y="686.0"></text>
</g>
<g>
<title>do_futex (31 samples, 0.71%)</title><rect x="245.8" y="659.0" width="8.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="248.8" y="670.0"></text>
</g>
<g>
<title>futex_wake (30 samples, 0.69%)</title><rect x="246.1" y="643.0" width="8.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="249.1" y="654.0"></text>
</g>
<g>
<title>get_futex_key (2 samples, 0.05%)</title><rect x="246.9" y="627.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="249.9" y="638.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.0 (1 samples, 0.02%)</title><rect x="247.1" y="611.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="250.1" y="622.0"></text>
</g>
<g>
<title>mark_wake_futex (2 samples, 0.05%)</title><rect x="247.4" y="627.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="250.4" y="638.0"></text>
</g>
<g>
<title>wake_up_q (23 samples, 0.53%)</title><rect x="247.9" y="627.0" width="6.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="250.9" y="638.0"></text>
</g>
<g>
<title>try_to_wake_up (23 samples, 0.53%)</title><rect x="247.9" y="611.0" width="6.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="250.9" y="622.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (23 samples, 0.53%)</title><rect x="247.9" y="595.0" width="6.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="250.9" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.02%)</title><rect x="254.2" y="819.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="257.2" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.02%)</title><rect x="254.2" y="803.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="257.2" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (5 samples, 0.11%)</title><rect x="254.4" y="819.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="257.4" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (5 samples, 0.11%)</title><rect x="254.4" y="803.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="257.4" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (5 samples, 0.11%)</title><rect x="254.4" y="787.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="257.4" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (5 samples, 0.11%)</title><rect x="254.4" y="771.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="257.4" y="782.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (4 samples, 0.09%)</title><rect x="255.8" y="899.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="258.8" y="910.0"></text>
</g>
<g>
<title>java/util/HashMap.get (4 samples, 0.09%)</title><rect x="255.8" y="883.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="258.8" y="894.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.05%)</title><rect x="255.8" y="867.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="258.8" y="878.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 0.05%)</title><rect x="256.3" y="867.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="259.3" y="878.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.05%)</title><rect x="256.3" y="851.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="259.3" y="862.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (2 samples, 0.05%)</title><rect x="256.3" y="835.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="259.3" y="846.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="256.6" y="819.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="259.6" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (21 samples, 0.48%)</title><rect x="256.9" y="931.0" width="5.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="259.9" y="942.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1 samples, 0.02%)</title><rect x="258.5" y="915.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="261.5" y="926.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (7 samples, 0.16%)</title><rect x="258.7" y="915.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="261.7" y="926.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (7 samples, 0.16%)</title><rect x="258.7" y="899.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="261.7" y="910.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (7 samples, 0.16%)</title><rect x="258.7" y="883.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="261.7" y="894.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (7 samples, 0.16%)</title><rect x="258.7" y="867.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="261.7" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (7 samples, 0.16%)</title><rect x="260.6" y="915.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="263.6" y="926.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (1 samples, 0.02%)</title><rect x="262.5" y="931.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="265.5" y="942.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.02%)</title><rect x="262.5" y="915.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="265.5" y="926.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.02%)</title><rect x="262.5" y="899.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="265.5" y="910.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.07%)</title><rect x="262.8" y="931.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="265.8" y="942.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.02%)</title><rect x="263.3" y="915.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="266.3" y="926.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.02%)</title><rect x="263.3" y="899.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="266.3" y="910.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.02%)</title><rect x="263.6" y="931.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="266.6" y="942.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.02%)</title><rect x="263.6" y="915.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="266.6" y="926.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (105 samples, 2.40%)</title><rect x="263.9" y="947.0" width="28.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="266.9" y="958.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (104 samples, 2.38%)</title><rect x="264.1" y="931.0" width="28.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="267.1" y="942.0">on..</text>
</g>
<g>
<title>[unknown] (19 samples, 0.43%)</title><rect x="265.5" y="915.0" width="5.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="268.5" y="926.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.43%)</title><rect x="265.5" y="899.0" width="5.1" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="268.5" y="910.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (11 samples, 0.25%)</title><rect x="265.5" y="883.0" width="3.0" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="268.5" y="894.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (3 samples, 0.07%)</title><rect x="265.5" y="867.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="268.5" y="878.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (1 samples, 0.02%)</title><rect x="266.3" y="867.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="269.3" y="878.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (3 samples, 0.07%)</title><rect x="266.6" y="867.0" width="0.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="269.6" y="878.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (4 samples, 0.09%)</title><rect x="267.4" y="867.0" width="1.1" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="270.4" y="878.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.05%)</title><rect x="267.4" y="851.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="270.4" y="862.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.02%)</title><rect x="267.9" y="851.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="270.9" y="862.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (1 samples, 0.02%)</title><rect x="268.2" y="851.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="271.2" y="862.0"></text>
</g>
<g>
<title>__libc_recv (4 samples, 0.09%)</title><rect x="268.5" y="883.0" width="1.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="271.5" y="894.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (2 samples, 0.05%)</title><rect x="269.6" y="883.0" width="0.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="272.6" y="894.0"></text>
</g>
<g>
<title>__vsnprintf_internal (1 samples, 0.02%)</title><rect x="270.1" y="883.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="273.1" y="894.0"></text>
</g>
<g>
<title>__vfprintf_internal (1 samples, 0.02%)</title><rect x="270.1" y="867.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="273.1" y="878.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.02%)</title><rect x="270.4" y="883.0" width="0.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="273.4" y="894.0"></text>
</g>
<g>
<title>__libc_recv (79 samples, 1.81%)</title><rect x="270.6" y="915.0" width="21.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="273.6" y="926.0">_..</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="274.4" y="899.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="277.4" y="910.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (64 samples, 1.46%)</title><rect x="274.7" y="899.0" width="17.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="277.7" y="910.0"></text>
</g>
<g>
<title>do_syscall_64 (64 samples, 1.46%)</title><rect x="274.7" y="883.0" width="17.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="277.7" y="894.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (56 samples, 1.28%)</title><rect x="276.8" y="867.0" width="15.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="279.8" y="878.0"></text>
</g>
<g>
<title>__sys_recvfrom (53 samples, 1.21%)</title><rect x="277.7" y="851.0" width="14.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="280.7" y="862.0"></text>
</g>
<g>
<title>import_single_range (3 samples, 0.07%)</title><rect x="277.7" y="835.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="280.7" y="846.0"></text>
</g>
<g>
<title>inet_recvmsg (36 samples, 0.82%)</title><rect x="278.5" y="835.0" width="9.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="281.5" y="846.0"></text>
</g>
<g>
<title>tcp_recvmsg (36 samples, 0.82%)</title><rect x="278.5" y="819.0" width="9.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="281.5" y="830.0"></text>
</g>
<g>
<title>__kfree_skb (4 samples, 0.09%)</title><rect x="280.4" y="803.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="283.4" y="814.0"></text>
</g>
<g>
<title>skb_release_all (4 samples, 0.09%)</title><rect x="280.4" y="787.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="283.4" y="798.0"></text>
</g>
<g>
<title>skb_release_head_state (3 samples, 0.07%)</title><rect x="280.6" y="771.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="283.6" y="782.0"></text>
</g>
<g>
<title>dst_release (1 samples, 0.02%)</title><rect x="280.6" y="755.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="283.6" y="766.0"></text>
</g>
<g>
<title>sock_rfree (2 samples, 0.05%)</title><rect x="280.9" y="755.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="283.9" y="766.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (3 samples, 0.07%)</title><rect x="281.4" y="803.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="284.4" y="814.0"></text>
</g>
<g>
<title>do_softirq.part.0 (1 samples, 0.02%)</title><rect x="282.0" y="787.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="285.0" y="798.0"></text>
</g>
<g>
<title>do_softirq_own_stack (1 samples, 0.02%)</title><rect x="282.0" y="771.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="285.0" y="782.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="282.0" y="755.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="285.0" y="766.0"></text>
</g>
<g>
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="282.0" y="739.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="285.0" y="750.0"></text>
</g>
<g>
<title>call_timer_fn (1 samples, 0.02%)</title><rect x="282.0" y="723.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="285.0" y="734.0"></text>
</g>
<g>
<title>tcp_delack_timer (1 samples, 0.02%)</title><rect x="282.0" y="707.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="285.0" y="718.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="282.0" y="691.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="285.0" y="702.0"></text>
</g>
<g>
<title>release_sock (3 samples, 0.07%)</title><rect x="282.2" y="803.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="285.2" y="814.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.02%)</title><rect x="282.5" y="787.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="285.5" y="798.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.02%)</title><rect x="282.8" y="787.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="285.8" y="798.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (16 samples, 0.37%)</title><rect x="283.1" y="803.0" width="4.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="286.1" y="814.0"></text>
</g>
<g>
<title>__skb_datagram_iter (14 samples, 0.32%)</title><rect x="283.6" y="787.0" width="3.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="286.6" y="798.0"></text>
</g>
<g>
<title>_copy_to_iter (6 samples, 0.14%)</title><rect x="283.6" y="771.0" width="1.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="286.6" y="782.0"></text>
</g>
<g>
<title>copyout (5 samples, 0.11%)</title><rect x="283.9" y="755.0" width="1.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="286.9" y="766.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (4 samples, 0.09%)</title><rect x="284.1" y="739.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="287.1" y="750.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="284.9" y="723.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="287.9" y="734.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="284.9" y="707.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="287.9" y="718.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="284.9" y="691.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="287.9" y="702.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="284.9" y="675.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="287.9" y="686.0"></text>
</g>
<g>
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="284.9" y="659.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="287.9" y="670.0"></text>
</g>
<g>
<title>simple_copy_to_iter (8 samples, 0.18%)</title><rect x="285.2" y="771.0" width="2.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="288.2" y="782.0"></text>
</g>
<g>
<title>__check_object_size (8 samples, 0.18%)</title><rect x="285.2" y="755.0" width="2.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="288.2" y="766.0"></text>
</g>
<g>
<title>__check_heap_object (3 samples, 0.07%)</title><rect x="286.3" y="739.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="289.3" y="750.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.02%)</title><rect x="287.1" y="739.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="290.1" y="750.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (2 samples, 0.05%)</title><rect x="287.4" y="803.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="290.4" y="814.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (2 samples, 0.05%)</title><rect x="287.4" y="787.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="290.4" y="798.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.05%)</title><rect x="287.4" y="771.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="290.4" y="782.0"></text>
</g>
<g>
<title>tcp_recv_timestamp (1 samples, 0.02%)</title><rect x="287.9" y="803.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="290.9" y="814.0"></text>
</g>
<g>
<title>sock_recvmsg (5 samples, 0.11%)</title><rect x="288.2" y="835.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="291.2" y="846.0"></text>
</g>
<g>
<title>security_socket_recvmsg (5 samples, 0.11%)</title><rect x="288.2" y="819.0" width="1.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="291.2" y="830.0"></text>
</g>
<g>
<title>sock_has_perm (5 samples, 0.11%)</title><rect x="288.2" y="803.0" width="1.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="291.2" y="814.0"></text>
</g>
<g>
<title>avc_has_perm (3 samples, 0.07%)</title><rect x="288.7" y="787.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="291.7" y="798.0"></text>
</g>
<g>
<title>sockfd_lookup_light (9 samples, 0.21%)</title><rect x="289.5" y="835.0" width="2.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="292.5" y="846.0"></text>
</g>
<g>
<title>__fget_light (8 samples, 0.18%)</title><rect x="289.8" y="819.0" width="2.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="292.8" y="830.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.07%)</title><rect x="291.2" y="803.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="294.2" y="814.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="292.0" y="915.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="295.0" y="926.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="292.0" y="899.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="295.0" y="910.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="292.0" y="883.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="295.0" y="894.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="292.0" y="867.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="295.0" y="878.0"></text>
</g>
<g>
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="292.0" y="851.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="295.0" y="862.0"></text>
</g>
<g>
<title>call_timer_fn (1 samples, 0.02%)</title><rect x="292.0" y="835.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="295.0" y="846.0"></text>
</g>
<g>
<title>tcp_delack_timer (1 samples, 0.02%)</title><rect x="292.0" y="819.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="295.0" y="830.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="292.0" y="803.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="295.0" y="814.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (4 samples, 0.09%)</title><rect x="292.2" y="963.0" width="1.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="295.2" y="974.0"></text>
</g>
<g>
<title>gettimeofday (4 samples, 0.09%)</title><rect x="292.2" y="947.0" width="1.1" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="295.2" y="958.0"></text>
</g>
<g>
<title>[vdso] (3 samples, 0.07%)</title><rect x="292.5" y="931.0" width="0.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="295.5" y="942.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=25373] (355 samples, 8.13%)</title><rect x="293.3" y="1011.0" width="95.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="296.3" y="1022.0">[NIO Select..</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (2 samples, 0.05%)</title><rect x="293.3" y="995.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="296.3" y="1006.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.05%)</title><rect x="293.3" y="979.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="296.3" y="990.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.05%)</title><rect x="293.3" y="963.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="296.3" y="974.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.05%)</title><rect x="293.3" y="947.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="296.3" y="958.0"></text>
</g>
<g>
<title>G1CollectedHeap::unsafe_max_tlab_alloc(Thread*) const (1 samples, 0.02%)</title><rect x="293.3" y="931.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="296.3" y="942.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.02%)</title><rect x="293.6" y="931.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="296.6" y="942.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.02%)</title><rect x="293.6" y="915.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="296.6" y="926.0"></text>
</g>
<g>
<title>[not_walkable_Java] (3 samples, 0.07%)</title><rect x="293.9" y="995.0" width="0.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="296.9" y="1006.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (3 samples, 0.07%)</title><rect x="293.9" y="979.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="296.9" y="990.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (3 samples, 0.07%)</title><rect x="293.9" y="963.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="296.9" y="974.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.02%)</title><rect x="293.9" y="947.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="296.9" y="958.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.02%)</title><rect x="293.9" y="931.0" width="0.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="296.9" y="942.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.02%)</title><rect x="293.9" y="915.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="296.9" y="926.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (2 samples, 0.05%)</title><rect x="294.1" y="947.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="297.1" y="958.0"></text>
</g>
<g>
<title>ImmutableOopMapSet::find_map_at_offset(int) const (1 samples, 0.02%)</title><rect x="294.1" y="931.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="297.1" y="942.0"></text>
</g>
<g>
<title>OopMapSet::update_register_map(frame const*, RegisterMap*) (1 samples, 0.02%)</title><rect x="294.4" y="931.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="297.4" y="942.0"></text>
</g>
<g>
<title>[unknown_Java] (4 samples, 0.09%)</title><rect x="294.7" y="995.0" width="1.0" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="297.7" y="1006.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="294.9" y="979.0" width="0.3" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="297.9" y="990.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="294.9" y="963.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="297.9" y="974.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.02%)</title><rect x="294.9" y="947.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="297.9" y="958.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 0.05%)</title><rect x="295.2" y="979.0" width="0.5" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="298.2" y="990.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="295.5" y="963.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="298.5" y="974.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="295.5" y="947.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="298.5" y="958.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.02%)</title><rect x="295.5" y="931.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="298.5" y="942.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.02%)</title><rect x="295.5" y="915.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="298.5" y="926.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.02%)</title><rect x="295.5" y="899.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="298.5" y="910.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (346 samples, 7.92%)</title><rect x="295.7" y="995.0" width="93.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="298.7" y="1006.0">one/nio/ser..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (3 samples, 0.07%)</title><rect x="296.0" y="979.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="299.0" y="990.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (3 samples, 0.07%)</title><rect x="296.0" y="963.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="299.0" y="974.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (136 samples, 3.11%)</title><rect x="296.8" y="979.0" width="36.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="299.8" y="990.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (5 samples, 0.11%)</title><rect x="297.6" y="963.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="300.6" y="974.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (5 samples, 0.11%)</title><rect x="297.6" y="947.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="300.6" y="958.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (128 samples, 2.93%)</title><rect x="299.0" y="963.0" width="34.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="302.0" y="974.0">on..</text>
</g>
<g>
<title>.annobin_epoll_wait.c (115 samples, 2.63%)</title><rect x="299.5" y="947.0" width="31.1" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="302.5" y="958.0">.a..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (97 samples, 2.22%)</title><rect x="304.4" y="931.0" width="26.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="307.4" y="942.0">e..</text>
</g>
<g>
<title>do_syscall_64 (97 samples, 2.22%)</title><rect x="304.4" y="915.0" width="26.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="307.4" y="926.0">d..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (89 samples, 2.04%)</title><rect x="306.6" y="899.0" width="24.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="309.6" y="910.0">_..</text>
</g>
<g>
<title>do_epoll_wait (88 samples, 2.01%)</title><rect x="306.8" y="883.0" width="23.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="309.8" y="894.0">d..</text>
</g>
<g>
<title>__fget_light (4 samples, 0.09%)</title><rect x="307.6" y="867.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="310.6" y="878.0"></text>
</g>
<g>
<title>__fget (4 samples, 0.09%)</title><rect x="307.6" y="851.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="310.6" y="862.0"></text>
</g>
<g>
<title>ep_poll (79 samples, 1.81%)</title><rect x="308.7" y="867.0" width="21.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="311.7" y="878.0">e..</text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (35 samples, 0.80%)</title><rect x="312.5" y="851.0" width="9.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="315.5" y="862.0"></text>
</g>
<g>
<title>ep_send_events_proc (23 samples, 0.53%)</title><rect x="314.4" y="835.0" width="6.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="317.4" y="846.0"></text>
</g>
<g>
<title>__list_del_entry_valid (1 samples, 0.02%)</title><rect x="315.7" y="819.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="318.7" y="830.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (17 samples, 0.39%)</title><rect x="316.0" y="819.0" width="4.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="319.0" y="830.0"></text>
</g>
<g>
<title>sock_poll (13 samples, 0.30%)</title><rect x="317.1" y="803.0" width="3.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="320.1" y="814.0"></text>
</g>
<g>
<title>tcp_poll (5 samples, 0.11%)</title><rect x="319.2" y="787.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="322.2" y="798.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.02%)</title><rect x="320.3" y="771.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="323.3" y="782.0"></text>
</g>
<g>
<title>mutex_lock (3 samples, 0.07%)</title><rect x="320.6" y="835.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="323.6" y="846.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.02%)</title><rect x="321.1" y="819.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="324.1" y="830.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="321.1" y="803.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="324.1" y="814.0"></text>
</g>
<g>
<title>mutex_unlock (2 samples, 0.05%)</title><rect x="321.4" y="835.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="324.4" y="846.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (30 samples, 0.69%)</title><rect x="321.9" y="851.0" width="8.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="324.9" y="862.0"></text>
</g>
<g>
<title>schedule (25 samples, 0.57%)</title><rect x="323.3" y="835.0" width="6.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="326.3" y="846.0"></text>
</g>
<g>
<title>__sched_text_start (24 samples, 0.55%)</title><rect x="323.6" y="819.0" width="6.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="326.6" y="830.0"></text>
</g>
<g>
<title>finish_task_switch (21 samples, 0.48%)</title><rect x="324.4" y="803.0" width="5.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="327.4" y="814.0"></text>
</g>
<g>
<title>fput_many (2 samples, 0.05%)</title><rect x="330.1" y="867.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="333.1" y="878.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (1 samples, 0.02%)</title><rect x="330.6" y="947.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="333.6" y="958.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.02%)</title><rect x="330.9" y="947.0" width="0.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="333.9" y="958.0"></text>
</g>
<g>
<title>__GI___clock_gettime (6 samples, 0.14%)</title><rect x="331.1" y="947.0" width="1.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="334.1" y="958.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.05%)</title><rect x="332.2" y="931.0" width="0.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="335.2" y="942.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.02%)</title><rect x="332.8" y="947.0" width="0.2" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="335.8" y="958.0"></text>
</g>
<g>
<title>_init (2 samples, 0.05%)</title><rect x="333.0" y="947.0" width="0.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="336.0" y="958.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (206 samples, 4.72%)</title><rect x="333.6" y="979.0" width="55.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="336.6" y="990.0">one/n..</text>
</g>
<g>
<title>ExceptionMark::ExceptionMark(Thread*&amp;) (1 samples, 0.02%)</title><rect x="334.1" y="963.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="337.1" y="974.0"></text>
</g>
<g>
<title>_init (1 samples, 0.02%)</title><rect x="334.4" y="963.0" width="0.2" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="337.4" y="974.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.02%)</title><rect x="334.6" y="963.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="337.6" y="974.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (200 samples, 4.58%)</title><rect x="334.9" y="963.0" width="54.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="337.9" y="974.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleSocketClosed (2 samples, 0.05%)</title><rect x="335.2" y="947.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="338.2" y="958.0"></text>
</g>
<g>
<title>one/nio/net/Session.listen (1 samples, 0.02%)</title><rect x="335.2" y="931.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="338.2" y="942.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.listen (1 samples, 0.02%)</title><rect x="335.2" y="915.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="338.2" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollCtl (1 samples, 0.02%)</title><rect x="335.2" y="899.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="338.2" y="910.0"></text>
</g>
<g>
<title>__GI_epoll_ctl (1 samples, 0.02%)</title><rect x="335.2" y="883.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="338.2" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="335.2" y="867.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="338.2" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="335.2" y="851.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="338.2" y="862.0"></text>
</g>
<g>
<title>__x64_sys_epoll_ctl (1 samples, 0.02%)</title><rect x="335.2" y="835.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="338.2" y="846.0"></text>
</g>
<g>
<title>one/nio/net/Session.scheduleClose (1 samples, 0.02%)</title><rect x="335.5" y="931.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="338.5" y="942.0"></text>
</g>
<g>
<title>one/nio/net/Session.close (1 samples, 0.02%)</title><rect x="335.5" y="915.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="338.5" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.close (1 samples, 0.02%)</title><rect x="335.5" y="899.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="338.5" y="910.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="335.5" y="883.0" width="0.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="338.5" y="894.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="335.5" y="867.0" width="0.2" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="338.5" y="878.0"></text>
</g>
<g>
<title>__GI_shutdown (1 samples, 0.02%)</title><rect x="335.5" y="851.0" width="0.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="338.5" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="335.5" y="835.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="338.5" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="335.5" y="819.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="338.5" y="830.0"></text>
</g>
<g>
<title>__x64_sys_shutdown (1 samples, 0.02%)</title><rect x="335.5" y="803.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="338.5" y="814.0"></text>
</g>
<g>
<title>__sys_shutdown (1 samples, 0.02%)</title><rect x="335.5" y="787.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="338.5" y="798.0"></text>
</g>
<g>
<title>inet_shutdown (1 samples, 0.02%)</title><rect x="335.5" y="771.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="338.5" y="782.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (1 samples, 0.02%)</title><rect x="335.5" y="755.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="338.5" y="766.0"></text>
</g>
<g>
<title>tcp_write_xmit (1 samples, 0.02%)</title><rect x="335.5" y="739.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="338.5" y="750.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (1 samples, 0.02%)</title><rect x="335.5" y="723.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="338.5" y="734.0"></text>
</g>
<g>
<title>__ip_queue_xmit (1 samples, 0.02%)</title><rect x="335.5" y="707.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="338.5" y="718.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.02%)</title><rect x="335.5" y="691.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="338.5" y="702.0"></text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="335.5" y="675.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="338.5" y="686.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="335.5" y="659.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="338.5" y="670.0"></text>
</g>
<g>
<title>do_softirq.part.0 (1 samples, 0.02%)</title><rect x="335.5" y="643.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="338.5" y="654.0"></text>
</g>
<g>
<title>do_softirq_own_stack (1 samples, 0.02%)</title><rect x="335.5" y="627.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="338.5" y="638.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="335.5" y="611.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="338.5" y="622.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.02%)</title><rect x="335.5" y="595.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="338.5" y="606.0"></text>
</g>
<g>
<title>process_backlog (1 samples, 0.02%)</title><rect x="335.5" y="579.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="338.5" y="590.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (1 samples, 0.02%)</title><rect x="335.5" y="563.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="338.5" y="574.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.02%)</title><rect x="335.5" y="547.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="338.5" y="558.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.02%)</title><rect x="335.5" y="531.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="338.5" y="542.0"></text>
</g>
<g>
<title>iptable_raw_hook	[iptable_raw] (1 samples, 0.02%)</title><rect x="335.5" y="515.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="338.5" y="526.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (111 samples, 2.54%)</title><rect x="335.7" y="947.0" width="30.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="338.7" y="958.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (70 samples, 1.60%)</title><rect x="338.2" y="931.0" width="18.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="341.2" y="942.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (68 samples, 1.56%)</title><rect x="338.7" y="915.0" width="18.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="341.7" y="926.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (65 samples, 1.49%)</title><rect x="338.7" y="899.0" width="17.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="341.7" y="910.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (5 samples, 0.11%)</title><rect x="338.7" y="883.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="341.7" y="894.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.02%)</title><rect x="339.2" y="867.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="342.2" y="878.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.02%)</title><rect x="339.2" y="851.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="342.2" y="862.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="339.5" y="867.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="342.5" y="878.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.02%)</title><rect x="339.8" y="867.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="342.8" y="878.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.02%)</title><rect x="339.8" y="851.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="342.8" y="862.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.02%)</title><rect x="339.8" y="835.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="342.8" y="846.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.02%)</title><rect x="339.8" y="819.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="342.8" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.entity (60 samples, 1.37%)</title><rect x="340.0" y="883.0" width="16.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="343.0" y="894.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="340.3" y="867.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="343.3" y="878.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="340.3" y="851.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="343.3" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer$$Lambda$85/1955586341.get$Lambda (1 samples, 0.02%)</title><rect x="340.3" y="835.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="343.3" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer$$Lambda$85/1955586341.&lt;init&gt; (1 samples, 0.02%)</title><rect x="340.3" y="819.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="343.3" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.executeAsync (58 samples, 1.33%)</title><rect x="340.6" y="867.0" width="15.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="343.6" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (57 samples, 1.30%)</title><rect x="340.9" y="851.0" width="15.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="343.9" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (56 samples, 1.28%)</title><rect x="341.1" y="835.0" width="15.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="344.1" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (43 samples, 0.98%)</title><rect x="341.7" y="819.0" width="11.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="344.7" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (43 samples, 0.98%)</title><rect x="341.7" y="803.0" width="11.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="344.7" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (43 samples, 0.98%)</title><rect x="341.7" y="787.0" width="11.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="344.7" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (43 samples, 0.98%)</title><rect x="341.7" y="771.0" width="11.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="344.7" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (43 samples, 0.98%)</title><rect x="341.7" y="755.0" width="11.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="344.7" y="766.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (42 samples, 0.96%)</title><rect x="341.9" y="739.0" width="11.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="344.9" y="750.0"></text>
</g>
<g>
<title>Parker::unpark() (1 samples, 0.02%)</title><rect x="341.9" y="723.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="344.9" y="734.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.02%)</title><rect x="342.2" y="723.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="345.2" y="734.0"></text>
</g>
<g>
<title>Unsafe_Unpark (4 samples, 0.09%)</title><rect x="342.5" y="723.0" width="1.1" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="345.5" y="734.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.229] (1 samples, 0.02%)</title><rect x="342.5" y="707.0" width="0.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="345.5" y="718.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_lock (2 samples, 0.05%)</title><rect x="342.7" y="707.0" width="0.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="345.7" y="718.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.02%)</title><rect x="343.3" y="707.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="346.3" y="718.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="343.6" y="723.0" width="0.2" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="346.6" y="734.0"></text>
</g>
<g>
<title>_dl_update_slotinfo (1 samples, 0.02%)</title><rect x="343.6" y="707.0" width="0.2" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="346.6" y="718.0"></text>
</g>
<g>
<title>__pthread_cond_signal (35 samples, 0.80%)</title><rect x="343.8" y="723.0" width="9.5" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="346.8" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (30 samples, 0.69%)</title><rect x="345.2" y="707.0" width="8.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="348.2" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (30 samples, 0.69%)</title><rect x="345.2" y="691.0" width="8.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="348.2" y="702.0"></text>
</g>
<g>
<title>__x64_sys_futex (26 samples, 0.60%)</title><rect x="346.3" y="675.0" width="7.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="349.3" y="686.0"></text>
</g>
<g>
<title>do_futex (26 samples, 0.60%)</title><rect x="346.3" y="659.0" width="7.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="349.3" y="670.0"></text>
</g>
<g>
<title>futex_wake (25 samples, 0.57%)</title><rect x="346.5" y="643.0" width="6.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="349.5" y="654.0"></text>
</g>
<g>
<title>mark_wake_futex (2 samples, 0.05%)</title><rect x="347.1" y="627.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="350.1" y="638.0"></text>
</g>
<g>
<title>__unqueue_futex (1 samples, 0.02%)</title><rect x="347.3" y="611.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="350.3" y="622.0"></text>
</g>
<g>
<title>wake_up_q (21 samples, 0.48%)</title><rect x="347.6" y="627.0" width="5.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="350.6" y="638.0"></text>
</g>
<g>
<title>try_to_wake_up (21 samples, 0.48%)</title><rect x="347.6" y="611.0" width="5.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="350.6" y="622.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (21 samples, 0.48%)</title><rect x="347.6" y="595.0" width="5.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="350.6" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (7 samples, 0.16%)</title><rect x="353.3" y="819.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="356.3" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (7 samples, 0.16%)</title><rect x="353.3" y="803.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="356.3" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (4 samples, 0.09%)</title><rect x="355.2" y="819.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="358.2" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (4 samples, 0.09%)</title><rect x="355.2" y="803.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="358.2" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (4 samples, 0.09%)</title><rect x="355.2" y="787.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="358.2" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (4 samples, 0.09%)</title><rect x="355.2" y="771.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="358.2" y="782.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (3 samples, 0.07%)</title><rect x="356.2" y="899.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="359.2" y="910.0"></text>
</g>
<g>
<title>java/util/HashMap.get (3 samples, 0.07%)</title><rect x="356.2" y="883.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="359.2" y="894.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (3 samples, 0.07%)</title><rect x="356.2" y="867.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="359.2" y="878.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (27 samples, 0.62%)</title><rect x="357.1" y="931.0" width="7.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="360.1" y="942.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (8 samples, 0.18%)</title><rect x="359.5" y="915.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="362.5" y="926.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (8 samples, 0.18%)</title><rect x="359.5" y="899.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="362.5" y="910.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (8 samples, 0.18%)</title><rect x="359.5" y="883.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="362.5" y="894.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (8 samples, 0.18%)</title><rect x="359.5" y="867.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="362.5" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (10 samples, 0.23%)</title><rect x="361.7" y="915.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="364.7" y="926.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (2 samples, 0.05%)</title><rect x="364.4" y="931.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="367.4" y="942.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (2 samples, 0.05%)</title><rect x="364.4" y="915.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="367.4" y="926.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.05%)</title><rect x="364.4" y="899.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="367.4" y="910.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.05%)</title><rect x="364.9" y="931.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="367.9" y="942.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.02%)</title><rect x="365.4" y="931.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="368.4" y="942.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.02%)</title><rect x="365.4" y="915.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="368.4" y="926.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (86 samples, 1.97%)</title><rect x="365.7" y="947.0" width="23.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="368.7" y="958.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (85 samples, 1.95%)</title><rect x="366.0" y="931.0" width="22.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="369.0" y="942.0">o..</text>
</g>
<g>
<title>[unknown] (16 samples, 0.37%)</title><rect x="366.5" y="915.0" width="4.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="369.5" y="926.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.37%)</title><rect x="366.5" y="899.0" width="4.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="369.5" y="910.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (12 samples, 0.27%)</title><rect x="366.5" y="883.0" width="3.3" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="369.5" y="894.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.05%)</title><rect x="367.1" y="867.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="370.1" y="878.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="367.6" y="867.0" width="0.3" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="370.6" y="878.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (7 samples, 0.16%)</title><rect x="367.9" y="867.0" width="1.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="370.9" y="878.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.02%)</title><rect x="368.4" y="851.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="371.4" y="862.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (3 samples, 0.07%)</title><rect x="368.7" y="851.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="371.7" y="862.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (1 samples, 0.02%)</title><rect x="369.5" y="851.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="372.5" y="862.0"></text>
</g>
<g>
<title>__libc_recv (3 samples, 0.07%)</title><rect x="369.8" y="883.0" width="0.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="372.8" y="894.0"></text>
</g>
<g>
<title>_init (1 samples, 0.02%)</title><rect x="370.6" y="883.0" width="0.2" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="373.6" y="894.0"></text>
</g>
<g>
<title>__libc_recv (66 samples, 1.51%)</title><rect x="370.8" y="915.0" width="17.9" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="373.8" y="926.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (58 samples, 1.33%)</title><rect x="373.0" y="899.0" width="15.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="376.0" y="910.0"></text>
</g>
<g>
<title>do_syscall_64 (58 samples, 1.33%)</title><rect x="373.0" y="883.0" width="15.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="376.0" y="894.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (54 samples, 1.24%)</title><rect x="374.1" y="867.0" width="14.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="377.1" y="878.0"></text>
</g>
<g>
<title>__sys_recvfrom (54 samples, 1.24%)</title><rect x="374.1" y="851.0" width="14.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="377.1" y="862.0"></text>
</g>
<g>
<title>import_single_range (1 samples, 0.02%)</title><rect x="374.3" y="835.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="377.3" y="846.0"></text>
</g>
<g>
<title>inet_recvmsg (35 samples, 0.80%)</title><rect x="374.6" y="835.0" width="9.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="377.6" y="846.0"></text>
</g>
<g>
<title>tcp_recvmsg (35 samples, 0.80%)</title><rect x="374.6" y="819.0" width="9.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="377.6" y="830.0"></text>
</g>
<g>
<title>__kfree_skb (7 samples, 0.16%)</title><rect x="376.8" y="803.0" width="1.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="379.8" y="814.0"></text>
</g>
<g>
<title>skb_release_all (5 samples, 0.11%)</title><rect x="376.8" y="787.0" width="1.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="379.8" y="798.0"></text>
</g>
<g>
<title>skb_release_head_state (5 samples, 0.11%)</title><rect x="376.8" y="771.0" width="1.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="379.8" y="782.0"></text>
</g>
<g>
<title>dst_release (4 samples, 0.09%)</title><rect x="376.8" y="755.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="379.8" y="766.0"></text>
</g>
<g>
<title>sock_rfree (1 samples, 0.02%)</title><rect x="377.9" y="755.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="380.9" y="766.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.05%)</title><rect x="378.1" y="787.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="381.1" y="798.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (1 samples, 0.02%)</title><rect x="378.7" y="803.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="381.7" y="814.0"></text>
</g>
<g>
<title>__ip_queue_xmit (1 samples, 0.02%)</title><rect x="378.7" y="787.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="381.7" y="798.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.02%)</title><rect x="378.7" y="771.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="381.7" y="782.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.02%)</title><rect x="378.7" y="755.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="381.7" y="766.0"></text>
</g>
<g>
<title>nf_nat_ipv4_out	[nf_nat] (1 samples, 0.02%)</title><rect x="378.7" y="739.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="381.7" y="750.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (1 samples, 0.02%)</title><rect x="378.9" y="803.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="381.9" y="814.0"></text>
</g>
<g>
<title>lock_sock_nested (2 samples, 0.05%)</title><rect x="379.2" y="803.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="382.2" y="814.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.02%)</title><rect x="379.2" y="787.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="382.2" y="798.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.02%)</title><rect x="379.5" y="787.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="382.5" y="798.0"></text>
</g>
<g>
<title>ns_to_timespec64 (1 samples, 0.02%)</title><rect x="379.7" y="803.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="382.7" y="814.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.05%)</title><rect x="380.0" y="803.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="383.0" y="814.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (8 samples, 0.18%)</title><rect x="380.6" y="803.0" width="2.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="383.6" y="814.0"></text>
</g>
<g>
<title>__skb_datagram_iter (8 samples, 0.18%)</title><rect x="380.6" y="787.0" width="2.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="383.6" y="798.0"></text>
</g>
<g>
<title>simple_copy_to_iter (7 samples, 0.16%)</title><rect x="380.8" y="771.0" width="1.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="383.8" y="782.0"></text>
</g>
<g>
<title>__check_object_size (7 samples, 0.16%)</title><rect x="380.8" y="755.0" width="1.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="383.8" y="766.0"></text>
</g>
<g>
<title>__check_heap_object (2 samples, 0.05%)</title><rect x="381.4" y="739.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="384.4" y="750.0"></text>
</g>
<g>
<title>__virt_addr_valid (3 samples, 0.07%)</title><rect x="381.9" y="739.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="384.9" y="750.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (1 samples, 0.02%)</title><rect x="382.7" y="803.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="385.7" y="814.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (1 samples, 0.02%)</title><rect x="383.0" y="803.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="386.0" y="814.0"></text>
</g>
<g>
<title>tcp_recv_timestamp (3 samples, 0.07%)</title><rect x="383.3" y="803.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="386.3" y="814.0"></text>
</g>
<g>
<title>sock_recvmsg (11 samples, 0.25%)</title><rect x="384.1" y="835.0" width="2.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="387.1" y="846.0"></text>
</g>
<g>
<title>security_socket_recvmsg (11 samples, 0.25%)</title><rect x="384.1" y="819.0" width="2.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="387.1" y="830.0"></text>
</g>
<g>
<title>sock_has_perm (10 samples, 0.23%)</title><rect x="384.3" y="803.0" width="2.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="387.3" y="814.0"></text>
</g>
<g>
<title>avc_has_perm (5 samples, 0.11%)</title><rect x="385.7" y="787.0" width="1.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="388.7" y="798.0"></text>
</g>
<g>
<title>sockfd_lookup_light (6 samples, 0.14%)</title><rect x="387.0" y="835.0" width="1.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="390.0" y="846.0"></text>
</g>
<g>
<title>__fget_light (6 samples, 0.14%)</title><rect x="387.0" y="819.0" width="1.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="390.0" y="830.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.07%)</title><rect x="387.8" y="803.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="390.8" y="814.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.02%)</title><rect x="388.7" y="915.0" width="0.2" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="391.7" y="926.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.02%)</title><rect x="388.9" y="963.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="391.9" y="974.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.02%)</title><rect x="388.9" y="947.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="391.9" y="958.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.02%)</title><rect x="388.9" y="931.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="391.9" y="942.0"></text>
</g>
<g>
<title>[tid=25354] (11 samples, 0.25%)</title><rect x="389.2" y="1011.0" width="3.0" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="392.2" y="1022.0"></text>
</g>
<g>
<title>start_thread (11 samples, 0.25%)</title><rect x="389.2" y="995.0" width="3.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="392.2" y="1006.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (11 samples, 0.25%)</title><rect x="389.2" y="979.0" width="3.0" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="392.2" y="990.0"></text>
</g>
<g>
<title>GangWorker::loop() (11 samples, 0.25%)</title><rect x="389.2" y="963.0" width="3.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="392.2" y="974.0"></text>
</g>
<g>
<title>G1CMRefProcTaskProxy::work(unsigned int) (1 samples, 0.02%)</title><rect x="389.2" y="947.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="392.2" y="958.0"></text>
</g>
<g>
<title>RefProcPhase1Task::work(unsigned int, BoolObjectClosure&amp;, OopClosure&amp;, VoidClosure&amp;) (1 samples, 0.02%)</title><rect x="389.2" y="931.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="392.2" y="942.0"></text>
</g>
<g>
<title>ReferenceProcessor::process_soft_ref_reconsider_work(DiscoveredList&amp;, ReferencePolicy*, BoolObjectClosure*, OopClosure*, VoidClosure*) (1 samples, 0.02%)</title><rect x="389.2" y="915.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="392.2" y="926.0"></text>
</g>
<g>
<title>G1CMDrainMarkingStackClosure::do_void() (1 samples, 0.02%)</title><rect x="389.2" y="899.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="392.2" y="910.0"></text>
</g>
<g>
<title>G1CMTask::do_marking_step(double, bool, bool) (1 samples, 0.02%)</title><rect x="389.2" y="883.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="392.2" y="894.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.02%)</title><rect x="389.2" y="867.0" width="0.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="392.2" y="878.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (10 samples, 0.23%)</title><rect x="389.5" y="947.0" width="2.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="392.5" y="958.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (6 samples, 0.14%)</title><rect x="389.5" y="931.0" width="1.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="392.5" y="942.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (6 samples, 0.14%)</title><rect x="389.5" y="915.0" width="1.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="392.5" y="926.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (4 samples, 0.09%)</title><rect x="390.0" y="899.0" width="1.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="393.0" y="910.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (1 samples, 0.02%)</title><rect x="390.8" y="883.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="393.8" y="894.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (3 samples, 0.07%)</title><rect x="391.1" y="931.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="394.1" y="942.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (3 samples, 0.07%)</title><rect x="391.1" y="915.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="394.1" y="926.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (3 samples, 0.07%)</title><rect x="391.1" y="899.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="394.1" y="910.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (3 samples, 0.07%)</title><rect x="391.1" y="883.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="394.1" y="894.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (3 samples, 0.07%)</title><rect x="391.1" y="867.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="394.1" y="878.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (3 samples, 0.07%)</title><rect x="391.1" y="851.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="394.1" y="862.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (2 samples, 0.05%)</title><rect x="391.4" y="835.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="394.4" y="846.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (1 samples, 0.02%)</title><rect x="391.9" y="931.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="394.9" y="942.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (1 samples, 0.02%)</title><rect x="391.9" y="915.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="394.9" y="926.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (1 samples, 0.02%)</title><rect x="391.9" y="899.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="394.9" y="910.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (1 samples, 0.02%)</title><rect x="391.9" y="883.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="394.9" y="894.0"></text>
</g>
<g>
<title>CodeCache::contains(void*) (1 samples, 0.02%)</title><rect x="391.9" y="867.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="394.9" y="878.0"></text>
</g>
<g>
<title>[tid=25356] (6 samples, 0.14%)</title><rect x="392.2" y="1011.0" width="1.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="395.2" y="1022.0"></text>
</g>
<g>
<title>start_thread (6 samples, 0.14%)</title><rect x="392.2" y="995.0" width="1.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="395.2" y="1006.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (6 samples, 0.14%)</title><rect x="392.2" y="979.0" width="1.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="395.2" y="990.0"></text>
</g>
<g>
<title>GangWorker::loop() (6 samples, 0.14%)</title><rect x="392.2" y="963.0" width="1.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="395.2" y="974.0"></text>
</g>
<g>
<title>G1CMConcurrentMarkingTask::work(unsigned int) (3 samples, 0.07%)</title><rect x="392.2" y="947.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="395.2" y="958.0"></text>
</g>
<g>
<title>G1CMTask::do_marking_step(double, bool, bool) (3 samples, 0.07%)</title><rect x="392.2" y="931.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="395.2" y="942.0"></text>
</g>
<g>
<title>G1CMTask::drain_global_stack(bool) [clone .constprop.394] (1 samples, 0.02%)</title><rect x="392.2" y="915.0" width="0.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="395.2" y="926.0"></text>
</g>
<g>
<title>G1CMTask::drain_local_queue(bool) [clone .part.153] (2 samples, 0.05%)</title><rect x="392.4" y="915.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="395.4" y="926.0"></text>
</g>
<g>
<title>void G1CMTask::process_grey_task_entry&lt;true&gt;(G1TaskQueueEntry) (2 samples, 0.05%)</title><rect x="392.4" y="899.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="395.4" y="910.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1CMOopClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1CMOopClosure*, oopDesc*, Klass*) (1 samples, 0.02%)</title><rect x="392.4" y="883.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="395.4" y="894.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1CMOopClosure&gt;::Table::oop_oop_iterate&lt;ObjArrayKlass, unsigned int&gt;(G1CMOopClosure*, oopDesc*, Klass*) (1 samples, 0.02%)</title><rect x="392.7" y="883.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="395.7" y="894.0"></text>
</g>
<g>
<title>G1RebuildRemSetTask::work(unsigned int) (3 samples, 0.07%)</title><rect x="393.0" y="947.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="396.0" y="958.0"></text>
</g>
<g>
<title>HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const (3 samples, 0.07%)</title><rect x="393.0" y="931.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="396.0" y="942.0"></text>
</g>
<g>
<title>G1RebuildRemSetTask::G1RebuildRemSetHeapRegionClosure::do_heap_region(HeapRegion*) (3 samples, 0.07%)</title><rect x="393.0" y="915.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="396.0" y="926.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1RebuildRemSetClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1RebuildRemSetClosure*, oopDesc*, Klass*) (1 samples, 0.02%)</title><rect x="393.5" y="899.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="396.5" y="910.0"></text>
</g>
<g>
<title>OtherRegionsTable::add_reference(void*, unsigned int) (1 samples, 0.02%)</title><rect x="393.5" y="883.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="396.5" y="894.0"></text>
</g>
<g>
<title>[tid=25358] (2 samples, 0.05%)</title><rect x="393.8" y="1011.0" width="0.5" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="396.8" y="1022.0"></text>
</g>
<g>
<title>start_thread (2 samples, 0.05%)</title><rect x="393.8" y="995.0" width="0.5" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="396.8" y="1006.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (2 samples, 0.05%)</title><rect x="393.8" y="979.0" width="0.5" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="396.8" y="990.0"></text>
</g>
<g>
<title>ConcurrentGCThread::run() (2 samples, 0.05%)</title><rect x="393.8" y="963.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="396.8" y="974.0"></text>
</g>
<g>
<title>G1YoungRemSetSamplingThread::run_service() (2 samples, 0.05%)</title><rect x="393.8" y="947.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="396.8" y="958.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate(HeapRegionClosure*) const (1 samples, 0.02%)</title><rect x="393.8" y="931.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="396.8" y="942.0"></text>
</g>
<g>
<title>G1YoungRemSetSamplingClosure::do_heap_region(HeapRegion*) (1 samples, 0.02%)</title><rect x="393.8" y="915.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="396.8" y="926.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.02%)</title><rect x="393.8" y="899.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="396.8" y="910.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (1 samples, 0.02%)</title><rect x="394.1" y="931.0" width="0.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="397.1" y="942.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (1 samples, 0.02%)</title><rect x="394.1" y="915.0" width="0.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="397.1" y="926.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.02%)</title><rect x="394.1" y="899.0" width="0.2" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="397.1" y="910.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="394.1" y="883.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="397.1" y="894.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="394.1" y="867.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="397.1" y="878.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.02%)</title><rect x="394.1" y="851.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="397.1" y="862.0"></text>
</g>
<g>
<title>[tid=25363] (47 samples, 1.08%)</title><rect x="394.3" y="1011.0" width="12.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="397.3" y="1022.0"></text>
</g>
<g>
<title>_int_malloc (1 samples, 0.02%)</title><rect x="394.3" y="995.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="397.3" y="1006.0"></text>
</g>
<g>
<title>start_thread (46 samples, 1.05%)</title><rect x="394.6" y="995.0" width="12.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="397.6" y="1006.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (46 samples, 1.05%)</title><rect x="394.6" y="979.0" width="12.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="397.6" y="990.0"></text>
</g>
<g>
<title>JavaThread::run() (46 samples, 1.05%)</title><rect x="394.6" y="963.0" width="12.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="397.6" y="974.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (46 samples, 1.05%)</title><rect x="394.6" y="947.0" width="12.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="397.6" y="958.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (46 samples, 1.05%)</title><rect x="394.6" y="931.0" width="12.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="397.6" y="942.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (46 samples, 1.05%)</title><rect x="394.6" y="915.0" width="12.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="397.6" y="926.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (46 samples, 1.05%)</title><rect x="394.6" y="899.0" width="12.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="397.6" y="910.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (46 samples, 1.05%)</title><rect x="394.6" y="883.0" width="12.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="397.6" y="894.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (24 samples, 0.55%)</title><rect x="394.6" y="867.0" width="6.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="397.6" y="878.0"></text>
</g>
<g>
<title>Compile::Output() (1 samples, 0.02%)</title><rect x="394.6" y="851.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="397.6" y="862.0"></text>
</g>
<g>
<title>Compile::init_buffer(unsigned int*) (1 samples, 0.02%)</title><rect x="394.6" y="835.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="397.6" y="846.0"></text>
</g>
<g>
<title>Compile::shorten_branches(unsigned int*, int&amp;, int&amp;, int&amp;) (1 samples, 0.02%)</title><rect x="394.6" y="819.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="397.6" y="830.0"></text>
</g>
<g>
<title>storePNode::emit(CodeBuffer&amp;, PhaseRegAlloc*) const (1 samples, 0.02%)</title><rect x="394.6" y="803.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="397.6" y="814.0"></text>
</g>
<g>
<title>Compile::fill_buffer(CodeBuffer*, unsigned int*) (2 samples, 0.05%)</title><rect x="394.9" y="851.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="397.9" y="862.0"></text>
</g>
<g>
<title>NonSafepointEmitter::emit_non_safepoint() (1 samples, 0.02%)</title><rect x="395.1" y="835.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="398.1" y="846.0"></text>
</g>
<g>
<title>PcDesc::PcDesc(int, int, int) (1 samples, 0.02%)</title><rect x="395.1" y="819.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="398.1" y="830.0"></text>
</g>
<g>
<title>Matcher::match() (3 samples, 0.07%)</title><rect x="395.4" y="851.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="398.4" y="862.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (3 samples, 0.07%)</title><rect x="395.4" y="835.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="398.4" y="846.0"></text>
</g>
<g>
<title>Matcher::match_tree(Node const*) (2 samples, 0.05%)</title><rect x="395.7" y="819.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="398.7" y="830.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (2 samples, 0.05%)</title><rect x="395.7" y="803.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="398.7" y="814.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (1 samples, 0.02%)</title><rect x="395.7" y="787.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="398.7" y="798.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="395.7" y="771.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="398.7" y="782.0"></text>
</g>
<g>
<title>do_IRQ (1 samples, 0.02%)</title><rect x="395.7" y="755.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="398.7" y="766.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="395.7" y="739.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="398.7" y="750.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="395.7" y="723.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="398.7" y="734.0"></text>
</g>
<g>
<title>blk_done_softirq (1 samples, 0.02%)</title><rect x="395.7" y="707.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="398.7" y="718.0"></text>
</g>
<g>
<title>scsi_io_completion (1 samples, 0.02%)</title><rect x="395.7" y="691.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="398.7" y="702.0"></text>
</g>
<g>
<title>scsi_end_request (1 samples, 0.02%)</title><rect x="395.7" y="675.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="398.7" y="686.0"></text>
</g>
<g>
<title>add_disk_randomness (1 samples, 0.02%)</title><rect x="395.7" y="659.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="398.7" y="670.0"></text>
</g>
<g>
<title>add_timer_randomness (1 samples, 0.02%)</title><rect x="395.7" y="643.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="398.7" y="654.0"></text>
</g>
<g>
<title>credit_entropy_bits (1 samples, 0.02%)</title><rect x="395.7" y="627.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="398.7" y="638.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.02%)</title><rect x="395.7" y="611.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="398.7" y="622.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="395.7" y="595.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="398.7" y="606.0"></text>
</g>
<g>
<title>State::DFA(int, Node const*) (1 samples, 0.02%)</title><rect x="396.0" y="787.0" width="0.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="399.0" y="798.0"></text>
</g>
<g>
<title>Node::find_int_type() const (1 samples, 0.02%)</title><rect x="396.0" y="771.0" width="0.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="399.0" y="782.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (4 samples, 0.09%)</title><rect x="396.2" y="851.0" width="1.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="399.2" y="862.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (4 samples, 0.09%)</title><rect x="396.2" y="835.0" width="1.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="399.2" y="846.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_late(VectorSet&amp;, Node_Stack&amp;) (1 samples, 0.02%)</title><rect x="396.2" y="819.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="399.2" y="830.0"></text>
</g>
<g>
<title>PhaseCFG::insert_anti_dependences(Block*, Node*, bool) (1 samples, 0.02%)</title><rect x="396.2" y="803.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="399.2" y="814.0"></text>
</g>
<g>
<title>MachNode::adr_type() const (1 samples, 0.02%)</title><rect x="396.2" y="787.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="399.2" y="798.0"></text>
</g>
<g>
<title>TypeInstPtr::add_offset(long) const (1 samples, 0.02%)</title><rect x="396.2" y="771.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="399.2" y="782.0"></text>
</g>
<g>
<title>TypeInstPtr::make(TypePtr::PTR, ciKlass*, bool, ciObject*, int, int, TypePtr const*, int) (1 samples, 0.02%)</title><rect x="396.2" y="755.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="399.2" y="766.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (3 samples, 0.07%)</title><rect x="396.5" y="819.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="399.5" y="830.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (14 samples, 0.32%)</title><rect x="397.3" y="851.0" width="3.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="400.3" y="862.0"></text>
</g>
<g>
<title>PhaseChaitin::Select() (1 samples, 0.02%)</title><rect x="397.3" y="835.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="400.3" y="846.0"></text>
</g>
<g>
<title>PhaseChaitin::bias_color(LRG&amp;, int) (1 samples, 0.02%)</title><rect x="397.3" y="819.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="400.3" y="830.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (2 samples, 0.05%)</title><rect x="397.6" y="835.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="400.6" y="846.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (6 samples, 0.14%)</title><rect x="398.1" y="835.0" width="1.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="401.1" y="846.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.02%)</title><rect x="398.7" y="819.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="401.7" y="830.0"></text>
</g>
<g>
<title>PhaseChaitin::add_input_to_liveout(Block*, Node*, IndexSet*, double, PhaseChaitin::Pressure&amp;, PhaseChaitin::Pressure&amp;) (1 samples, 0.02%)</title><rect x="398.9" y="819.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="401.9" y="830.0"></text>
</g>
<g>
<title>MachNode::rematerialize() const (1 samples, 0.02%)</title><rect x="398.9" y="803.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="401.9" y="814.0"></text>
</g>
<g>
<title>PhaseChaitin::remove_bound_register_from_interfering_live_ranges(LRG&amp;, IndexSet*, unsigned int&amp;) (2 samples, 0.05%)</title><rect x="399.2" y="819.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="402.2" y="830.0"></text>
</g>
<g>
<title>RegMask::smear_to_sets(int) (1 samples, 0.02%)</title><rect x="399.5" y="803.0" width="0.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="402.5" y="814.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (3 samples, 0.07%)</title><rect x="399.7" y="835.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="402.7" y="846.0"></text>
</g>
<g>
<title>PhaseChaitin::elide_copy(Node*, int, Block*, Node_List&amp;, Node_List&amp;, bool) (1 samples, 0.02%)</title><rect x="400.3" y="819.0" width="0.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="403.3" y="830.0"></text>
</g>
<g>
<title>PhaseCoalesce::coalesce_driver() (1 samples, 0.02%)</title><rect x="400.5" y="835.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="403.5" y="846.0"></text>
</g>
<g>
<title>PhaseAggressiveCoalesce::coalesce(Block*) (1 samples, 0.02%)</title><rect x="400.5" y="819.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="403.5" y="830.0"></text>
</g>
<g>
<title>PhaseIFG::Compute_Effective_Degree() (1 samples, 0.02%)</title><rect x="400.8" y="835.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="403.8" y="846.0"></text>
</g>
<g>
<title>Compile::Optimize() (12 samples, 0.27%)</title><rect x="401.1" y="867.0" width="3.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="404.1" y="878.0"></text>
</g>
<g>
<title>Compile::final_graph_reshaping() (1 samples, 0.02%)</title><rect x="401.1" y="851.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="404.1" y="862.0"></text>
</g>
<g>
<title>Compile::final_graph_reshaping_walk(Node_Stack&amp;, Node*, Final_Reshape_Counts&amp;) (1 samples, 0.02%)</title><rect x="401.1" y="835.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="404.1" y="846.0"></text>
</g>
<g>
<title>CmpPNode::Opcode() const (1 samples, 0.02%)</title><rect x="401.1" y="819.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="404.1" y="830.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(bool, bool, bool) (9 samples, 0.21%)</title><rect x="401.4" y="851.0" width="2.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="404.4" y="862.0"></text>
</g>
<g>
<title>Compile::cleanup_loop_predicates(PhaseIterGVN&amp;) (1 samples, 0.02%)</title><rect x="401.4" y="835.0" width="0.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="404.4" y="846.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (1 samples, 0.02%)</title><rect x="401.4" y="819.0" width="0.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="404.4" y="830.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (1 samples, 0.02%)</title><rect x="401.4" y="803.0" width="0.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="404.4" y="814.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split(PhaseIdealLoop*, Node_List&amp;) (1 samples, 0.02%)</title><rect x="401.6" y="835.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="404.6" y="846.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split(PhaseIdealLoop*, Node_List&amp;) (1 samples, 0.02%)</title><rect x="401.6" y="819.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="404.6" y="830.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split(PhaseIdealLoop*, Node_List&amp;) (1 samples, 0.02%)</title><rect x="401.6" y="803.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="404.6" y="814.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split_impl(PhaseIdealLoop*, Node_List&amp;) (1 samples, 0.02%)</title><rect x="401.6" y="787.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="404.6" y="798.0"></text>
</g>
<g>
<title>PhaseIdealLoop::do_unroll(IdealLoopTree*, Node_List&amp;, bool) (1 samples, 0.02%)</title><rect x="401.6" y="771.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="404.6" y="782.0"></text>
</g>
<g>
<title>PhaseIdealLoop::clone_loop(IdealLoopTree*, Node_List&amp;, int, PhaseIdealLoop::CloneLoopMode, Node*) (1 samples, 0.02%)</title><rect x="401.6" y="755.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="404.6" y="766.0"></text>
</g>
<g>
<title>Node::clone() const (1 samples, 0.02%)</title><rect x="401.6" y="739.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="404.6" y="750.0"></text>
</g>
<g>
<title>PhaseIdealLoop::Dominators() (1 samples, 0.02%)</title><rect x="401.9" y="835.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="404.9" y="846.0"></text>
</g>
<g>
<title>NTarjan::DFS(NTarjan*, VectorSet&amp;, PhaseIdealLoop*, unsigned int*) (1 samples, 0.02%)</title><rect x="401.9" y="819.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="404.9" y="830.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_early(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (1 samples, 0.02%)</title><rect x="402.2" y="835.0" width="0.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="405.2" y="846.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (2 samples, 0.05%)</title><rect x="402.4" y="835.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="405.4" y="846.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (1 samples, 0.02%)</title><rect x="402.7" y="819.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="405.7" y="830.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks(VectorSet&amp;, Node_Stack&amp;, bool) (1 samples, 0.02%)</title><rect x="403.0" y="835.0" width="0.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="406.0" y="846.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks_pre(Node*) (1 samples, 0.02%)</title><rect x="403.0" y="819.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="406.0" y="830.0"></text>
</g>
<g>
<title>PhaseIdealLoop::remix_address_expressions(Node*) (1 samples, 0.02%)</title><rect x="403.0" y="803.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="406.0" y="814.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_ctrl(Node*) (1 samples, 0.02%)</title><rect x="403.0" y="787.0" width="0.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="406.0" y="798.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks_post(Node*, bool) (1 samples, 0.02%)</title><rect x="403.2" y="835.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="406.2" y="846.0"></text>
</g>
<g>
<title>ProjNode::is_CFG() const (1 samples, 0.02%)</title><rect x="403.5" y="835.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="406.5" y="846.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (2 samples, 0.05%)</title><rect x="403.8" y="851.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="406.8" y="862.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (2 samples, 0.05%)</title><rect x="403.8" y="835.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="406.8" y="846.0"></text>
</g>
<g>
<title>ConstraintCastNode::Value(PhaseGVN*) const (1 samples, 0.02%)</title><rect x="403.8" y="819.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="406.8" y="830.0"></text>
</g>
<g>
<title>TypeOopPtr::filter_helper(Type const*, bool) const (1 samples, 0.02%)</title><rect x="403.8" y="803.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="406.8" y="814.0"></text>
</g>
<g>
<title>TypePtr::xmeet(Type const*) const (1 samples, 0.02%)</title><rect x="403.8" y="787.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="406.8" y="798.0"></text>
</g>
<g>
<title>TypeAryPtr::xmeet_helper(Type const*) const (1 samples, 0.02%)</title><rect x="403.8" y="771.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="406.8" y="782.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="403.8" y="755.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="406.8" y="766.0"></text>
</g>
<g>
<title>StoreNode::Ideal(PhaseGVN*, bool) (1 samples, 0.02%)</title><rect x="404.1" y="819.0" width="0.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="407.1" y="830.0"></text>
</g>
<g>
<title>InitializeNode::can_capture_store(StoreNode*, PhaseTransform*, bool) [clone .part.138] (1 samples, 0.02%)</title><rect x="404.1" y="803.0" width="0.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="407.1" y="814.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.02%)</title><rect x="404.1" y="787.0" width="0.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="407.1" y="798.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.02%)</title><rect x="404.1" y="771.0" width="0.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="407.1" y="782.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.02%)</title><rect x="404.1" y="755.0" width="0.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="407.1" y="766.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.02%)</title><rect x="404.1" y="739.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="407.1" y="750.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.02%)</title><rect x="404.1" y="723.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="407.1" y="734.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.02%)</title><rect x="404.1" y="707.0" width="0.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="407.1" y="718.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.02%)</title><rect x="404.1" y="691.0" width="0.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="407.1" y="702.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.02%)</title><rect x="404.1" y="675.0" width="0.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="407.1" y="686.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.02%)</title><rect x="404.1" y="659.0" width="0.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="407.1" y="670.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.02%)</title><rect x="404.1" y="643.0" width="0.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="407.1" y="654.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.02%)</title><rect x="404.1" y="627.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="407.1" y="638.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.02%)</title><rect x="404.1" y="611.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="407.1" y="622.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.02%)</title><rect x="404.1" y="595.0" width="0.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="407.1" y="606.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.02%)</title><rect x="404.1" y="579.0" width="0.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="407.1" y="590.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.02%)</title><rect x="404.1" y="563.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="407.1" y="574.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.131] (1 samples, 0.02%)</title><rect x="404.1" y="547.0" width="0.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="407.1" y="558.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (1 samples, 0.02%)</title><rect x="404.1" y="531.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="407.1" y="542.0"></text>
</g>
<g>
<title>Compile::inline_string_calls(bool) (1 samples, 0.02%)</title><rect x="404.3" y="867.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="407.3" y="878.0"></text>
</g>
<g>
<title>PhaseRemoveUseless::PhaseRemoveUseless(PhaseGVN*, Unique_Node_List*, Phase::PhaseNumber) (1 samples, 0.02%)</title><rect x="404.3" y="851.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="407.3" y="862.0"></text>
</g>
<g>
<title>Unique_Node_List::remove_useless_nodes(VectorSet&amp;) (1 samples, 0.02%)</title><rect x="404.3" y="835.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="407.3" y="846.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (9 samples, 0.21%)</title><rect x="404.6" y="867.0" width="2.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="407.6" y="878.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (9 samples, 0.21%)</title><rect x="404.6" y="851.0" width="2.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="407.6" y="862.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (9 samples, 0.21%)</title><rect x="404.6" y="835.0" width="2.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="407.6" y="846.0"></text>
</g>
<g>
<title>Parse::do_one_block() (9 samples, 0.21%)</title><rect x="404.6" y="819.0" width="2.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="407.6" y="830.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (8 samples, 0.18%)</title><rect x="404.9" y="803.0" width="2.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="407.9" y="814.0"></text>
</g>
<g>
<title>Parse::do_call() (8 samples, 0.18%)</title><rect x="404.9" y="787.0" width="2.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="407.9" y="798.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (5 samples, 0.11%)</title><rect x="404.9" y="771.0" width="1.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="407.9" y="782.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (5 samples, 0.11%)</title><rect x="404.9" y="755.0" width="1.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="407.9" y="766.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (5 samples, 0.11%)</title><rect x="404.9" y="739.0" width="1.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="407.9" y="750.0"></text>
</g>
<g>
<title>Parse::do_one_block() (5 samples, 0.11%)</title><rect x="404.9" y="723.0" width="1.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="407.9" y="734.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (5 samples, 0.11%)</title><rect x="404.9" y="707.0" width="1.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="407.9" y="718.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.09%)</title><rect x="404.9" y="691.0" width="1.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="407.9" y="702.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.02%)</title><rect x="404.9" y="675.0" width="0.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="407.9" y="686.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.02%)</title><rect x="404.9" y="659.0" width="0.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="407.9" y="670.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.02%)</title><rect x="404.9" y="643.0" width="0.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="407.9" y="654.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.02%)</title><rect x="404.9" y="627.0" width="0.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="407.9" y="638.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.02%)</title><rect x="404.9" y="611.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="407.9" y="622.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.02%)</title><rect x="404.9" y="595.0" width="0.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="407.9" y="606.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.02%)</title><rect x="404.9" y="579.0" width="0.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="407.9" y="590.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (1 samples, 0.02%)</title><rect x="404.9" y="563.0" width="0.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="407.9" y="574.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_invoke(ciBytecodeStream*, bool) (1 samples, 0.02%)</title><rect x="404.9" y="547.0" width="0.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="407.9" y="558.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.02%)</title><rect x="404.9" y="531.0" width="0.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="407.9" y="542.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.02%)</title><rect x="404.9" y="515.0" width="0.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="407.9" y="526.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.02%)</title><rect x="404.9" y="499.0" width="0.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="407.9" y="510.0"></text>
</g>
<g>
<title>ConstantPool::impl_klass_ref_index_at(int, bool) (1 samples, 0.02%)</title><rect x="404.9" y="483.0" width="0.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="407.9" y="494.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.07%)</title><rect x="405.1" y="675.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="408.1" y="686.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.07%)</title><rect x="405.1" y="659.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="408.1" y="670.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.07%)</title><rect x="405.1" y="643.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="408.1" y="654.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.07%)</title><rect x="405.1" y="627.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="408.1" y="638.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.07%)</title><rect x="405.1" y="611.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="408.1" y="622.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.07%)</title><rect x="405.1" y="595.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="408.1" y="606.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.07%)</title><rect x="405.1" y="579.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="408.1" y="590.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.07%)</title><rect x="405.1" y="563.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="408.1" y="574.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.07%)</title><rect x="405.1" y="547.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="408.1" y="558.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.07%)</title><rect x="405.1" y="531.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="408.1" y="542.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.07%)</title><rect x="405.1" y="515.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="408.1" y="526.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.07%)</title><rect x="405.1" y="499.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="408.1" y="510.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.02%)</title><rect x="405.1" y="483.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="408.1" y="494.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.02%)</title><rect x="405.1" y="467.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="408.1" y="478.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.02%)</title><rect x="405.1" y="451.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="408.1" y="462.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.02%)</title><rect x="405.1" y="435.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="408.1" y="446.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.02%)</title><rect x="405.1" y="419.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="408.1" y="430.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.02%)</title><rect x="405.1" y="403.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="408.1" y="414.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.02%)</title><rect x="405.1" y="387.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="408.1" y="398.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (1 samples, 0.02%)</title><rect x="405.1" y="371.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="408.1" y="382.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_invoke(ciBytecodeStream*, bool) (1 samples, 0.02%)</title><rect x="405.1" y="355.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="408.1" y="366.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.02%)</title><rect x="405.1" y="339.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="408.1" y="350.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.02%)</title><rect x="405.1" y="323.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="408.1" y="334.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.02%)</title><rect x="405.1" y="307.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="408.1" y="318.0"></text>
</g>
<g>
<title>ciEnv::lookup_method(ciInstanceKlass*, ciKlass*, Symbol*, Symbol*, Bytecodes::Code, constantTag) (1 samples, 0.02%)</title><rect x="405.1" y="291.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="408.1" y="302.0"></text>
</g>
<g>
<title>LinkResolver::resolve_static_call_or_null(LinkInfo const&amp;) (1 samples, 0.02%)</title><rect x="405.1" y="275.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="408.1" y="286.0"></text>
</g>
<g>
<title>LinkResolver::resolve_method(LinkInfo const&amp;, Bytecodes::Code, Thread*) (1 samples, 0.02%)</title><rect x="405.1" y="259.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="408.1" y="270.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 0.02%)</title><rect x="405.1" y="243.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="408.1" y="254.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.269] (1 samples, 0.02%)</title><rect x="405.1" y="227.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="408.1" y="238.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.05%)</title><rect x="405.4" y="483.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="408.4" y="494.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.05%)</title><rect x="405.4" y="467.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="408.4" y="478.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.05%)</title><rect x="405.4" y="451.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="408.4" y="462.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.05%)</title><rect x="405.4" y="435.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="408.4" y="446.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.05%)</title><rect x="405.4" y="419.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="408.4" y="430.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.05%)</title><rect x="405.4" y="403.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="408.4" y="414.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.05%)</title><rect x="405.4" y="387.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="408.4" y="398.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.05%)</title><rect x="405.4" y="371.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="408.4" y="382.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.05%)</title><rect x="405.4" y="355.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="408.4" y="366.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.05%)</title><rect x="405.4" y="339.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="408.4" y="350.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.05%)</title><rect x="405.4" y="323.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="408.4" y="334.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.02%)</title><rect x="405.4" y="307.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="408.4" y="318.0"></text>
</g>
<g>
<title>Parse::do_get_xxx(Node*, ciField*, bool) (1 samples, 0.02%)</title><rect x="405.4" y="291.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="408.4" y="302.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.02%)</title><rect x="405.4" y="275.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="408.4" y="286.0"></text>
</g>
<g>
<title>TypeInstPtr::add_offset(long) const (1 samples, 0.02%)</title><rect x="405.4" y="259.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="408.4" y="270.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.02%)</title><rect x="405.4" y="243.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="408.4" y="254.0"></text>
</g>
<g>
<title>Parse::return_current(Node*) (1 samples, 0.02%)</title><rect x="405.7" y="307.0" width="0.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="408.7" y="318.0"></text>
</g>
<g>
<title>Parse::call_register_finalizer() (1 samples, 0.02%)</title><rect x="405.7" y="291.0" width="0.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="408.7" y="302.0"></text>
</g>
<g>
<title>LoadKlassNode::make(PhaseGVN&amp;, Node*, Node*, Node*, TypePtr const*, TypeKlassPtr const*) (1 samples, 0.02%)</title><rect x="405.7" y="275.0" width="0.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="408.7" y="286.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.02%)</title><rect x="405.7" y="259.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="408.7" y="270.0"></text>
</g>
<g>
<title>LoadNode::Ideal(PhaseGVN*, bool) (1 samples, 0.02%)</title><rect x="405.7" y="243.0" width="0.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="408.7" y="254.0"></text>
</g>
<g>
<title>MemNode::find_previous_store(PhaseTransform*) (1 samples, 0.02%)</title><rect x="405.7" y="227.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="408.7" y="238.0"></text>
</g>
<g>
<title>LoadNode::find_previous_arraycopy(PhaseTransform*, Node*, Node*&amp;, bool) const (1 samples, 0.02%)</title><rect x="405.7" y="211.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="408.7" y="222.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.02%)</title><rect x="405.9" y="691.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="408.9" y="702.0"></text>
</g>
<g>
<title>Parse::do_put_xxx(Node*, ciField*, bool) (1 samples, 0.02%)</title><rect x="405.9" y="675.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="408.9" y="686.0"></text>
</g>
<g>
<title>GraphKit::access_store_at(Node*, Node*, Node*, TypePtr const*, Node*, Type const*, BasicType, unsigned long) (1 samples, 0.02%)</title><rect x="405.9" y="659.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="408.9" y="670.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.02%)</title><rect x="405.9" y="643.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="408.9" y="654.0"></text>
</g>
<g>
<title>ModRefBarrierSetC2::store_at_resolved(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.02%)</title><rect x="405.9" y="627.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="408.9" y="638.0"></text>
</g>
<g>
<title>G1BarrierSetC2::pre_barrier(GraphKit*, bool, Node*, Node*, Node*, unsigned int, Node*, TypeOopPtr const*, Node*, BasicType) const (1 samples, 0.02%)</title><rect x="405.9" y="611.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="408.9" y="622.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.02%)</title><rect x="405.9" y="595.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="408.9" y="606.0"></text>
</g>
<g>
<title>AddPNode::Ideal(PhaseGVN*, bool) (1 samples, 0.02%)</title><rect x="405.9" y="579.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="408.9" y="590.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.02%)</title><rect x="405.9" y="563.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="408.9" y="574.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (3 samples, 0.07%)</title><rect x="406.2" y="771.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="409.2" y="782.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.07%)</title><rect x="406.2" y="755.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="409.2" y="766.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.07%)</title><rect x="406.2" y="739.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="409.2" y="750.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.07%)</title><rect x="406.2" y="723.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="409.2" y="734.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.07%)</title><rect x="406.2" y="707.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="409.2" y="718.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.07%)</title><rect x="406.2" y="691.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="409.2" y="702.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.07%)</title><rect x="406.2" y="675.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="409.2" y="686.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.07%)</title><rect x="406.2" y="659.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="409.2" y="670.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.07%)</title><rect x="406.2" y="643.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="409.2" y="654.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.07%)</title><rect x="406.2" y="627.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="409.2" y="638.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.07%)</title><rect x="406.2" y="611.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="409.2" y="622.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.07%)</title><rect x="406.2" y="595.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="409.2" y="606.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.07%)</title><rect x="406.2" y="579.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="409.2" y="590.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.05%)</title><rect x="406.2" y="563.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="409.2" y="574.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.05%)</title><rect x="406.2" y="547.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="409.2" y="558.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.05%)</title><rect x="406.2" y="531.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="409.2" y="542.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.05%)</title><rect x="406.2" y="515.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="409.2" y="526.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.05%)</title><rect x="406.2" y="499.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="409.2" y="510.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="406.2" y="483.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="409.2" y="494.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="406.2" y="467.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="409.2" y="478.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="406.2" y="451.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="409.2" y="462.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="406.2" y="435.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="409.2" y="446.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="406.2" y="419.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="409.2" y="430.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="406.2" y="403.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="409.2" y="414.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="406.2" y="387.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="409.2" y="398.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="406.2" y="371.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="409.2" y="382.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="406.2" y="355.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="409.2" y="366.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="406.2" y="339.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="409.2" y="350.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="406.2" y="323.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="409.2" y="334.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="406.2" y="307.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="409.2" y="318.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="406.2" y="291.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="409.2" y="302.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="406.2" y="275.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="409.2" y="286.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="406.2" y="259.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="409.2" y="270.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="406.2" y="243.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="409.2" y="254.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="406.2" y="227.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="409.2" y="238.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="406.2" y="211.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="409.2" y="222.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="406.2" y="195.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="409.2" y="206.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="406.2" y="179.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="409.2" y="190.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="406.2" y="163.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="409.2" y="174.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="406.2" y="147.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="409.2" y="158.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="406.2" y="131.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="409.2" y="142.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="406.2" y="115.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="409.2" y="126.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="406.2" y="99.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="409.2" y="110.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="406.2" y="83.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="409.2" y="94.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.02%)</title><rect x="406.2" y="67.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="409.2" y="78.0"></text>
</g>
<g>
<title>GraphKit::null_check_common(Node*, BasicType, bool, Node**, bool) (1 samples, 0.02%)</title><rect x="406.2" y="51.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="409.2" y="62.0"></text>
</g>
<g>
<title>Type::meet_helper(Type const*, bool) const (1 samples, 0.02%)</title><rect x="406.2" y="35.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="409.2" y="46.0"></text>
</g>
<g>
<title>Parse::do_if(BoolTest::mask, Node*) (1 samples, 0.02%)</title><rect x="406.5" y="483.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="409.5" y="494.0"></text>
</g>
<g>
<title>Parse::merge_common(Parse::Block*, int) (1 samples, 0.02%)</title><rect x="406.5" y="467.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="409.5" y="478.0"></text>
</g>
<g>
<title>Parse::ensure_phi(int, bool) (1 samples, 0.02%)</title><rect x="406.5" y="451.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="409.5" y="462.0"></text>
</g>
<g>
<title>PhiNode::make(Node*, Node*, Type const*, TypePtr const*) (1 samples, 0.02%)</title><rect x="406.5" y="435.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="409.5" y="446.0"></text>
</g>
<g>
<title>Node::Node(unsigned int) (1 samples, 0.02%)</title><rect x="406.5" y="419.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="409.5" y="430.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="406.8" y="563.0" width="0.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="409.8" y="574.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="406.8" y="547.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="409.8" y="558.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="406.8" y="531.0" width="0.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="409.8" y="542.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="406.8" y="515.0" width="0.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="409.8" y="526.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="406.8" y="499.0" width="0.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="409.8" y="510.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="406.8" y="483.0" width="0.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="409.8" y="494.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="406.8" y="467.0" width="0.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="409.8" y="478.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="406.8" y="451.0" width="0.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="409.8" y="462.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="406.8" y="435.0" width="0.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="409.8" y="446.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="406.8" y="419.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="409.8" y="430.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="406.8" y="403.0" width="0.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="409.8" y="414.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="406.8" y="387.0" width="0.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="409.8" y="398.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="406.8" y="371.0" width="0.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="409.8" y="382.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_declared_method_holder() (1 samples, 0.02%)</title><rect x="406.8" y="355.0" width="0.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="409.8" y="366.0"></text>
</g>
<g>
<title>[tid=25364] (1 samples, 0.02%)</title><rect x="407.0" y="1011.0" width="0.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="410.0" y="1022.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.02%)</title><rect x="407.0" y="995.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="410.0" y="1006.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.02%)</title><rect x="407.0" y="979.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="410.0" y="990.0"></text>
</g>
<g>
<title>JavaThread::run() (1 samples, 0.02%)</title><rect x="407.0" y="963.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="410.0" y="974.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (1 samples, 0.02%)</title><rect x="407.0" y="947.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="410.0" y="958.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (1 samples, 0.02%)</title><rect x="407.0" y="931.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="410.0" y="942.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (1 samples, 0.02%)</title><rect x="407.0" y="915.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="410.0" y="926.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (1 samples, 0.02%)</title><rect x="407.0" y="899.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="410.0" y="910.0"></text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*) (1 samples, 0.02%)</title><rect x="407.0" y="883.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="410.0" y="894.0"></text>
</g>
<g>
<title>Compilation::compile_method() (1 samples, 0.02%)</title><rect x="407.0" y="867.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="410.0" y="878.0"></text>
</g>
<g>
<title>Compilation::compile_java_method() (1 samples, 0.02%)</title><rect x="407.0" y="851.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="410.0" y="862.0"></text>
</g>
<g>
<title>Compilation::build_hir() [clone .part.93] (1 samples, 0.02%)</title><rect x="407.0" y="835.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="410.0" y="846.0"></text>
</g>
<g>
<title>IR::IR(Compilation*, ciMethod*, int) (1 samples, 0.02%)</title><rect x="407.0" y="819.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="410.0" y="830.0"></text>
</g>
<g>
<title>IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool) (1 samples, 0.02%)</title><rect x="407.0" y="803.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="410.0" y="814.0"></text>
</g>
<g>
<title>GraphBuilder::GraphBuilder(Compilation*, IRScope*) (1 samples, 0.02%)</title><rect x="407.0" y="787.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="410.0" y="798.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (1 samples, 0.02%)</title><rect x="407.0" y="771.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="410.0" y="782.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (1 samples, 0.02%)</title><rect x="407.0" y="755.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="410.0" y="766.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (1 samples, 0.02%)</title><rect x="407.0" y="739.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="410.0" y="750.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.02%)</title><rect x="407.0" y="723.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="410.0" y="734.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.02%)</title><rect x="407.0" y="707.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="410.0" y="718.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (1 samples, 0.02%)</title><rect x="407.0" y="691.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="410.0" y="702.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (1 samples, 0.02%)</title><rect x="407.0" y="675.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="410.0" y="686.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (1 samples, 0.02%)</title><rect x="407.0" y="659.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="410.0" y="670.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.02%)</title><rect x="407.0" y="643.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="410.0" y="654.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.02%)</title><rect x="407.0" y="627.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="410.0" y="638.0"></text>
</g>
<g>
<title>GraphBuilder::push_scope(ciMethod*, BlockBegin*) (1 samples, 0.02%)</title><rect x="407.0" y="611.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="410.0" y="622.0"></text>
</g>
<g>
<title>BlockListBuilder::BlockListBuilder(Compilation*, IRScope*, int) (1 samples, 0.02%)</title><rect x="407.0" y="595.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="410.0" y="606.0"></text>
</g>
<g>
<title>BlockListBuilder::set_leaders() (1 samples, 0.02%)</title><rect x="407.0" y="579.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="410.0" y="590.0"></text>
</g>
<g>
<title>ciMethod::bci_block_start() (1 samples, 0.02%)</title><rect x="407.0" y="563.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="410.0" y="574.0"></text>
</g>
<g>
<title>MethodLiveness::compute_liveness() (1 samples, 0.02%)</title><rect x="407.0" y="547.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="410.0" y="558.0"></text>
</g>
<g>
<title>MethodLiveness::init_basic_blocks() (1 samples, 0.02%)</title><rect x="407.0" y="531.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="410.0" y="542.0"></text>
</g>
<g>
<title>ciMethod::get_method_blocks() (1 samples, 0.02%)</title><rect x="407.0" y="515.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="410.0" y="526.0"></text>
</g>
<g>
<title>ciMethodBlocks::ciMethodBlocks(Arena*, ciMethod*) (1 samples, 0.02%)</title><rect x="407.0" y="499.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="410.0" y="510.0"></text>
</g>
<g>
<title>ciMethodBlocks::do_analysis() (1 samples, 0.02%)</title><rect x="407.0" y="483.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="410.0" y="494.0"></text>
</g>
<g>
<title>[tid=25367] (4 samples, 0.09%)</title><rect x="407.3" y="1011.0" width="1.1" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="410.3" y="1022.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.05%)</title><rect x="407.3" y="995.0" width="0.5" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="410.3" y="1006.0"></text>
</g>
<g>
<title>__pthread_cleanup_push (1 samples, 0.02%)</title><rect x="407.3" y="979.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="410.3" y="990.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (1 samples, 0.02%)</title><rect x="407.6" y="979.0" width="0.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="410.6" y="990.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="407.6" y="963.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="410.6" y="974.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="407.6" y="947.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="410.6" y="958.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.02%)</title><rect x="407.6" y="931.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="410.6" y="942.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.02%)</title><rect x="407.6" y="915.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="410.6" y="926.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.02%)</title><rect x="407.6" y="899.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="410.6" y="910.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.02%)</title><rect x="407.6" y="883.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="410.6" y="894.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="407.6" y="867.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="410.6" y="878.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.02%)</title><rect x="407.6" y="851.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="410.6" y="862.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="407.6" y="835.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="410.6" y="846.0"></text>
</g>
<g>
<title>start_thread (2 samples, 0.05%)</title><rect x="407.8" y="995.0" width="0.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="410.8" y="1006.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (2 samples, 0.05%)</title><rect x="407.8" y="979.0" width="0.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="410.8" y="990.0"></text>
</g>
<g>
<title>WatcherThread::run() (2 samples, 0.05%)</title><rect x="407.8" y="963.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="410.8" y="974.0"></text>
</g>
<g>
<title>WatcherThread::sleep() const (2 samples, 0.05%)</title><rect x="407.8" y="947.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="410.8" y="958.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (2 samples, 0.05%)</title><rect x="407.8" y="931.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="410.8" y="942.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (2 samples, 0.05%)</title><rect x="407.8" y="915.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="410.8" y="926.0"></text>
</g>
<g>
<title>__lll_unlock_wake (2 samples, 0.05%)</title><rect x="407.8" y="899.0" width="0.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="410.8" y="910.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.05%)</title><rect x="407.8" y="883.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="410.8" y="894.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.05%)</title><rect x="407.8" y="867.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="410.8" y="878.0"></text>
</g>
<g>
<title>[tid=25388] (8 samples, 0.18%)</title><rect x="408.4" y="1011.0" width="2.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="411.4" y="1022.0"></text>
</g>
<g>
<title>start_thread (8 samples, 0.18%)</title><rect x="408.4" y="995.0" width="2.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="411.4" y="1006.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (8 samples, 0.18%)</title><rect x="408.4" y="979.0" width="2.1" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="411.4" y="990.0"></text>
</g>
<g>
<title>GangWorker::loop() (8 samples, 0.18%)</title><rect x="408.4" y="963.0" width="2.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="411.4" y="974.0"></text>
</g>
<g>
<title>G1CMRemarkTask::work(unsigned int) (1 samples, 0.02%)</title><rect x="408.4" y="947.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="411.4" y="958.0"></text>
</g>
<g>
<title>G1CMTask::do_marking_step(double, bool, bool) (1 samples, 0.02%)</title><rect x="408.4" y="931.0" width="0.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="411.4" y="942.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.02%)</title><rect x="408.4" y="915.0" width="0.2" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="411.4" y="926.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (7 samples, 0.16%)</title><rect x="408.6" y="947.0" width="1.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="411.6" y="958.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (3 samples, 0.07%)</title><rect x="408.6" y="931.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="411.6" y="942.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (3 samples, 0.07%)</title><rect x="408.6" y="915.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="411.6" y="926.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (2 samples, 0.05%)</title><rect x="408.9" y="899.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="411.9" y="910.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (1 samples, 0.02%)</title><rect x="409.2" y="883.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="412.2" y="894.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (3 samples, 0.07%)</title><rect x="409.5" y="931.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="412.5" y="942.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (3 samples, 0.07%)</title><rect x="409.5" y="915.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="412.5" y="926.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (3 samples, 0.07%)</title><rect x="409.5" y="899.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="412.5" y="910.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (3 samples, 0.07%)</title><rect x="409.5" y="883.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="412.5" y="894.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (3 samples, 0.07%)</title><rect x="409.5" y="867.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="412.5" y="878.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (3 samples, 0.07%)</title><rect x="409.5" y="851.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="412.5" y="862.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (3 samples, 0.07%)</title><rect x="409.5" y="835.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="412.5" y="846.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (1 samples, 0.02%)</title><rect x="410.3" y="931.0" width="0.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="413.3" y="942.0"></text>
</g>
<g>
<title>G1ParCopyClosure&lt;(G1Barrier)0, (G1Mark)0&gt;::do_oop(oopDesc**) (1 samples, 0.02%)</title><rect x="410.3" y="915.0" width="0.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="413.3" y="926.0"></text>
</g>
<g>
<title>[tid=25389] (11 samples, 0.25%)</title><rect x="410.5" y="1011.0" width="3.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="413.5" y="1022.0"></text>
</g>
<g>
<title>start_thread (11 samples, 0.25%)</title><rect x="410.5" y="995.0" width="3.0" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="413.5" y="1006.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (11 samples, 0.25%)</title><rect x="410.5" y="979.0" width="3.0" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="413.5" y="990.0"></text>
</g>
<g>
<title>GangWorker::loop() (11 samples, 0.25%)</title><rect x="410.5" y="963.0" width="3.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="413.5" y="974.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (11 samples, 0.25%)</title><rect x="410.5" y="947.0" width="3.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="413.5" y="958.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (8 samples, 0.18%)</title><rect x="410.5" y="931.0" width="2.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="413.5" y="942.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (7 samples, 0.16%)</title><rect x="410.5" y="915.0" width="1.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="413.5" y="926.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (4 samples, 0.09%)</title><rect x="411.3" y="899.0" width="1.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="414.3" y="910.0"></text>
</g>
<g>
<title>ParallelTaskTerminator::offer_termination(TerminatorTerminator*) (1 samples, 0.02%)</title><rect x="412.4" y="915.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="415.4" y="926.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="412.4" y="899.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="415.4" y="910.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="412.4" y="883.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="415.4" y="894.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="412.4" y="867.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="415.4" y="878.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="412.4" y="851.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="415.4" y="862.0"></text>
</g>
<g>
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="412.4" y="835.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="415.4" y="846.0"></text>
</g>
<g>
<title>call_timer_fn (1 samples, 0.02%)</title><rect x="412.4" y="819.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="415.4" y="830.0"></text>
</g>
<g>
<title>tcp_delack_timer (1 samples, 0.02%)</title><rect x="412.4" y="803.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="415.4" y="814.0"></text>
</g>
<g>
<title>tcp_delack_timer_handler (1 samples, 0.02%)</title><rect x="412.4" y="787.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="415.4" y="798.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (1 samples, 0.02%)</title><rect x="412.4" y="771.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="415.4" y="782.0"></text>
</g>
<g>
<title>__ip_queue_xmit (1 samples, 0.02%)</title><rect x="412.4" y="755.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="415.4" y="766.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.02%)</title><rect x="412.4" y="739.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="415.4" y="750.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.02%)</title><rect x="412.4" y="723.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="415.4" y="734.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (1 samples, 0.02%)</title><rect x="412.4" y="707.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="415.4" y="718.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (3 samples, 0.07%)</title><rect x="412.7" y="931.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="415.7" y="942.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (3 samples, 0.07%)</title><rect x="412.7" y="915.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="415.7" y="926.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (3 samples, 0.07%)</title><rect x="412.7" y="899.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="415.7" y="910.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (3 samples, 0.07%)</title><rect x="412.7" y="883.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="415.7" y="894.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (3 samples, 0.07%)</title><rect x="412.7" y="867.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="415.7" y="878.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (3 samples, 0.07%)</title><rect x="412.7" y="851.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="415.7" y="862.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (2 samples, 0.05%)</title><rect x="413.0" y="835.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="416.0" y="846.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (1 samples, 0.02%)</title><rect x="413.2" y="819.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="416.2" y="830.0"></text>
</g>
<g>
<title>[tid=25390] (8 samples, 0.18%)</title><rect x="413.5" y="1011.0" width="2.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="416.5" y="1022.0"></text>
</g>
<g>
<title>start_thread (8 samples, 0.18%)</title><rect x="413.5" y="995.0" width="2.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="416.5" y="1006.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (8 samples, 0.18%)</title><rect x="413.5" y="979.0" width="2.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="416.5" y="990.0"></text>
</g>
<g>
<title>GangWorker::loop() (8 samples, 0.18%)</title><rect x="413.5" y="963.0" width="2.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="416.5" y="974.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (8 samples, 0.18%)</title><rect x="413.5" y="947.0" width="2.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="416.5" y="958.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (5 samples, 0.11%)</title><rect x="413.5" y="931.0" width="1.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="416.5" y="942.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (5 samples, 0.11%)</title><rect x="413.5" y="915.0" width="1.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="416.5" y="926.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (3 samples, 0.07%)</title><rect x="414.0" y="899.0" width="0.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="417.0" y="910.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (1 samples, 0.02%)</title><rect x="414.6" y="883.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="417.6" y="894.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (3 samples, 0.07%)</title><rect x="414.9" y="931.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="417.9" y="942.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (3 samples, 0.07%)</title><rect x="414.9" y="915.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="417.9" y="926.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (3 samples, 0.07%)</title><rect x="414.9" y="899.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="417.9" y="910.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (3 samples, 0.07%)</title><rect x="414.9" y="883.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="417.9" y="894.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (3 samples, 0.07%)</title><rect x="414.9" y="867.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="417.9" y="878.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (3 samples, 0.07%)</title><rect x="414.9" y="851.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="417.9" y="862.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (3 samples, 0.07%)</title><rect x="414.9" y="835.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="417.9" y="846.0"></text>
</g>
<g>
<title>[worker-0 tid=25395] (575 samples, 13.16%)</title><rect x="415.7" y="1011.0" width="155.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="418.7" y="1022.0">[worker-0 tid=25395]</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.05%)</title><rect x="415.7" y="995.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="418.7" y="1006.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (2 samples, 0.05%)</title><rect x="415.7" y="979.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="418.7" y="990.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.97] (1 samples, 0.02%)</title><rect x="415.7" y="963.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="418.7" y="974.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="415.7" y="947.0" width="0.2" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="418.7" y="958.0"></text>
</g>
<g>
<title>ObjectSynchronizer::omAlloc(Thread*) (1 samples, 0.02%)</title><rect x="415.9" y="963.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="418.9" y="974.0"></text>
</g>
<g>
<title>java/lang/Thread.run (573 samples, 13.12%)</title><rect x="416.2" y="995.0" width="154.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="419.2" y="1006.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (573 samples, 13.12%)</title><rect x="416.2" y="979.0" width="154.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="419.2" y="990.0">java/util/concurrent..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (573 samples, 13.12%)</title><rect x="416.2" y="963.0" width="154.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="419.2" y="974.0">java/util/concurrent..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (188 samples, 4.30%)</title><rect x="416.2" y="947.0" width="50.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="419.2" y="958.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (187 samples, 4.28%)</title><rect x="416.5" y="931.0" width="50.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="419.5" y="942.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.dequeue (1 samples, 0.02%)</title><rect x="417.3" y="915.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="420.3" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (142 samples, 3.25%)</title><rect x="417.6" y="915.0" width="38.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="420.6" y="926.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.checkInterruptWhileWaiting (1 samples, 0.02%)</title><rect x="418.6" y="899.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="421.6" y="910.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (1 samples, 0.02%)</title><rect x="418.6" y="883.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="421.6" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.02%)</title><rect x="418.6" y="867.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="421.6" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (2 samples, 0.05%)</title><rect x="418.9" y="899.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="421.9" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2 samples, 0.05%)</title><rect x="418.9" y="883.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="421.9" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.05%)</title><rect x="418.9" y="867.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="421.9" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (22 samples, 0.50%)</title><rect x="419.4" y="899.0" width="6.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="422.4" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (22 samples, 0.50%)</title><rect x="419.4" y="883.0" width="6.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="422.4" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (21 samples, 0.48%)</title><rect x="419.7" y="867.0" width="5.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="422.7" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (21 samples, 0.48%)</title><rect x="419.7" y="851.0" width="5.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="422.7" y="862.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (20 samples, 0.46%)</title><rect x="420.0" y="835.0" width="5.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="423.0" y="846.0"></text>
</g>
<g>
<title>__pthread_cond_signal (20 samples, 0.46%)</title><rect x="420.0" y="819.0" width="5.4" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="423.0" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (15 samples, 0.34%)</title><rect x="421.3" y="803.0" width="4.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="424.3" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (15 samples, 0.34%)</title><rect x="421.3" y="787.0" width="4.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="424.3" y="798.0"></text>
</g>
<g>
<title>__x64_sys_futex (14 samples, 0.32%)</title><rect x="421.6" y="771.0" width="3.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="424.6" y="782.0"></text>
</g>
<g>
<title>do_futex (14 samples, 0.32%)</title><rect x="421.6" y="755.0" width="3.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="424.6" y="766.0"></text>
</g>
<g>
<title>futex_wake (14 samples, 0.32%)</title><rect x="421.6" y="739.0" width="3.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="424.6" y="750.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.02%)</title><rect x="421.9" y="723.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="424.9" y="734.0"></text>
</g>
<g>
<title>wake_up_q (12 samples, 0.27%)</title><rect x="422.1" y="723.0" width="3.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="425.1" y="734.0"></text>
</g>
<g>
<title>try_to_wake_up (12 samples, 0.27%)</title><rect x="422.1" y="707.0" width="3.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="425.1" y="718.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (12 samples, 0.27%)</title><rect x="422.1" y="691.0" width="3.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="425.1" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.isOnSyncQueue (1 samples, 0.02%)</title><rect x="425.4" y="899.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="428.4" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.findNodeFromTail (1 samples, 0.02%)</title><rect x="425.4" y="883.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="428.4" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (112 samples, 2.56%)</title><rect x="425.7" y="899.0" width="30.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="428.7" y="910.0">ja..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (112 samples, 2.56%)</title><rect x="425.7" y="883.0" width="30.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="428.7" y="894.0">jd..</text>
</g>
<g>
<title>Unsafe_Park (46 samples, 1.05%)</title><rect x="425.9" y="867.0" width="12.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="428.9" y="878.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (1 samples, 0.02%)</title><rect x="425.9" y="851.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="428.9" y="862.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (4 samples, 0.09%)</title><rect x="426.2" y="851.0" width="1.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="429.2" y="862.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (9 samples, 0.21%)</title><rect x="427.3" y="851.0" width="2.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="430.3" y="862.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (4 samples, 0.09%)</title><rect x="427.6" y="835.0" width="1.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="430.6" y="846.0"></text>
</g>
<g>
<title>__tls_get_addr_slow (1 samples, 0.02%)</title><rect x="428.4" y="819.0" width="0.2" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="431.4" y="830.0"></text>
</g>
<g>
<title>Monitor::unlock() (2 samples, 0.05%)</title><rect x="428.6" y="835.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="431.6" y="846.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="429.2" y="835.0" width="0.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="432.2" y="846.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (1 samples, 0.02%)</title><rect x="429.4" y="835.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="432.4" y="846.0"></text>
</g>
<g>
<title>Thread::is_interrupted(Thread*, bool) (1 samples, 0.02%)</title><rect x="429.7" y="851.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="432.7" y="862.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.02%)</title><rect x="430.0" y="851.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="433.0" y="862.0"></text>
</g>
<g>
<title>__lll_unlock_wake (24 samples, 0.55%)</title><rect x="430.3" y="851.0" width="6.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="433.3" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 0.25%)</title><rect x="433.8" y="835.0" width="2.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="436.8" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (11 samples, 0.25%)</title><rect x="433.8" y="819.0" width="2.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="436.8" y="830.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.09%)</title><rect x="435.7" y="803.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="438.7" y="814.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.07%)</title><rect x="435.9" y="787.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="438.9" y="798.0"></text>
</g>
<g>
<title>futex_wake (3 samples, 0.07%)</title><rect x="435.9" y="771.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="438.9" y="782.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.02%)</title><rect x="436.2" y="755.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="439.2" y="766.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.0 (1 samples, 0.02%)</title><rect x="436.2" y="739.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="439.2" y="750.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.02%)</title><rect x="436.5" y="755.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="439.5" y="766.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (2 samples, 0.05%)</title><rect x="436.7" y="851.0" width="0.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="439.7" y="862.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (3 samples, 0.07%)</title><rect x="437.3" y="851.0" width="0.8" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="440.3" y="862.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (1 samples, 0.02%)</title><rect x="438.1" y="851.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="441.1" y="862.0"></text>
</g>
<g>
<title>[unknown] (64 samples, 1.46%)</title><rect x="438.4" y="867.0" width="17.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="441.4" y="878.0"></text>
</g>
<g>
<title>.annobin_pthread_cond_wait.c (1 samples, 0.02%)</title><rect x="438.4" y="851.0" width="0.2" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="441.4" y="862.0"></text>
</g>
<g>
<title>__condvar_dec_grefs (1 samples, 0.02%)</title><rect x="438.6" y="851.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="441.6" y="862.0"></text>
</g>
<g>
<title>__pthread_cond_wait (57 samples, 1.30%)</title><rect x="438.9" y="851.0" width="15.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="441.9" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (33 samples, 0.76%)</title><rect x="445.4" y="835.0" width="8.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="448.4" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (33 samples, 0.76%)</title><rect x="445.4" y="819.0" width="8.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="448.4" y="830.0"></text>
</g>
<g>
<title>__x64_sys_futex (28 samples, 0.64%)</title><rect x="446.7" y="803.0" width="7.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="449.7" y="814.0"></text>
</g>
<g>
<title>do_futex (28 samples, 0.64%)</title><rect x="446.7" y="787.0" width="7.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="449.7" y="798.0"></text>
</g>
<g>
<title>futex_wait (27 samples, 0.62%)</title><rect x="447.0" y="771.0" width="7.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="450.0" y="782.0"></text>
</g>
<g>
<title>futex_wait_queue_me (19 samples, 0.43%)</title><rect x="448.9" y="755.0" width="5.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="451.9" y="766.0"></text>
</g>
<g>
<title>plist_add (2 samples, 0.05%)</title><rect x="449.4" y="739.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="452.4" y="750.0"></text>
</g>
<g>
<title>__list_add_valid (1 samples, 0.02%)</title><rect x="449.7" y="723.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="452.7" y="734.0"></text>
</g>
<g>
<title>schedule (15 samples, 0.34%)</title><rect x="450.0" y="739.0" width="4.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="453.0" y="750.0"></text>
</g>
<g>
<title>__sched_text_start (15 samples, 0.34%)</title><rect x="450.0" y="723.0" width="4.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="453.0" y="734.0"></text>
</g>
<g>
<title>finish_task_switch (13 samples, 0.30%)</title><rect x="450.5" y="707.0" width="3.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="453.5" y="718.0"></text>
</g>
<g>
<title>futex_wait_setup (1 samples, 0.02%)</title><rect x="454.0" y="755.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="457.0" y="766.0"></text>
</g>
<g>
<title>get_futex_value_locked (1 samples, 0.02%)</title><rect x="454.0" y="739.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="457.0" y="750.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.02%)</title><rect x="454.3" y="851.0" width="0.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="457.3" y="862.0"></text>
</g>
<g>
<title>pthread_mutex_trylock (3 samples, 0.07%)</title><rect x="454.6" y="851.0" width="0.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="457.6" y="862.0"></text>
</g>
<g>
<title>update_get_addr (1 samples, 0.02%)</title><rect x="455.4" y="851.0" width="0.2" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="458.4" y="862.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.02%)</title><rect x="455.6" y="867.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="458.6" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.02%)</title><rect x="455.9" y="915.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="458.9" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.02%)</title><rect x="455.9" y="899.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="458.9" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (1 samples, 0.02%)</title><rect x="455.9" y="883.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="458.9" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (2 samples, 0.05%)</title><rect x="456.2" y="915.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="459.2" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (2 samples, 0.05%)</title><rect x="456.2" y="899.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="459.2" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (2 samples, 0.05%)</title><rect x="456.2" y="883.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="459.2" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2 samples, 0.05%)</title><rect x="456.2" y="867.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="459.2" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.05%)</title><rect x="456.2" y="851.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="459.2" y="862.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.02%)</title><rect x="456.4" y="835.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="459.4" y="846.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.02%)</title><rect x="456.4" y="819.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="459.4" y="830.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.02%)</title><rect x="456.4" y="803.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="459.4" y="814.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.02%)</title><rect x="456.4" y="787.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="459.4" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (38 samples, 0.87%)</title><rect x="456.7" y="915.0" width="10.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="459.7" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (37 samples, 0.85%)</title><rect x="457.0" y="899.0" width="10.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="460.0" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (36 samples, 0.82%)</title><rect x="457.0" y="883.0" width="9.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="460.0" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (36 samples, 0.82%)</title><rect x="457.0" y="867.0" width="9.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="460.0" y="878.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (34 samples, 0.78%)</title><rect x="457.5" y="851.0" width="9.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="460.5" y="862.0"></text>
</g>
<g>
<title>Unsafe_Unpark (4 samples, 0.09%)</title><rect x="457.5" y="835.0" width="1.1" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="460.5" y="846.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.02%)</title><rect x="457.5" y="819.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="460.5" y="830.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (2 samples, 0.05%)</title><rect x="457.8" y="819.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="460.8" y="830.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (1 samples, 0.02%)</title><rect x="458.3" y="819.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="461.3" y="830.0"></text>
</g>
<g>
<title>__pthread_cond_signal (30 samples, 0.69%)</title><rect x="458.6" y="835.0" width="8.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="461.6" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (22 samples, 0.50%)</title><rect x="460.8" y="819.0" width="5.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="463.8" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (22 samples, 0.50%)</title><rect x="460.8" y="803.0" width="5.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="463.8" y="814.0"></text>
</g>
<g>
<title>__x64_sys_futex (18 samples, 0.41%)</title><rect x="461.6" y="787.0" width="4.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="464.6" y="798.0"></text>
</g>
<g>
<title>do_futex (18 samples, 0.41%)</title><rect x="461.6" y="771.0" width="4.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="464.6" y="782.0"></text>
</g>
<g>
<title>futex_wake (18 samples, 0.41%)</title><rect x="461.6" y="755.0" width="4.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="464.6" y="766.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="461.6" y="739.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="464.6" y="750.0"></text>
</g>
<g>
<title>wake_up_q (17 samples, 0.39%)</title><rect x="461.9" y="739.0" width="4.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="464.9" y="750.0"></text>
</g>
<g>
<title>try_to_wake_up (17 samples, 0.39%)</title><rect x="461.9" y="723.0" width="4.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="464.9" y="734.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (17 samples, 0.39%)</title><rect x="461.9" y="707.0" width="4.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="464.9" y="718.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="466.4" y="787.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="469.4" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.02%)</title><rect x="466.7" y="883.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="469.7" y="894.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer$$Lambda$65/1115085888.run (385 samples, 8.81%)</title><rect x="467.0" y="947.0" width="104.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="470.0" y="958.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.lambda$executeAsync$3 (385 samples, 8.81%)</title><rect x="467.0" y="931.0" width="104.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="470.0" y="942.0">ru/mail/poli..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (301 samples, 6.89%)</title><rect x="467.0" y="915.0" width="81.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="470.0" y="926.0">one/nio/h..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (6 samples, 0.14%)</title><rect x="467.0" y="899.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="470.0" y="910.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.02%)</title><rect x="467.0" y="883.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="470.0" y="894.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (5 samples, 0.11%)</title><rect x="467.3" y="883.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="470.3" y="894.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.02%)</title><rect x="467.3" y="867.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="470.3" y="878.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (4 samples, 0.09%)</title><rect x="467.5" y="867.0" width="1.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="470.5" y="878.0"></text>
</g>
<g>
<title>gettimeofday (4 samples, 0.09%)</title><rect x="467.5" y="851.0" width="1.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="470.5" y="862.0"></text>
</g>
<g>
<title>[vdso] (4 samples, 0.09%)</title><rect x="467.5" y="835.0" width="1.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="470.5" y="846.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (295 samples, 6.75%)</title><rect x="468.6" y="899.0" width="79.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="471.6" y="910.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (13 samples, 0.30%)</title><rect x="468.6" y="883.0" width="3.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="471.6" y="894.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="470.5" y="867.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="473.5" y="878.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (5 samples, 0.11%)</title><rect x="470.8" y="867.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="473.8" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (5 samples, 0.11%)</title><rect x="470.8" y="851.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="473.8" y="862.0"></text>
</g>
<g>
<title>java/lang/String.charAt (5 samples, 0.11%)</title><rect x="470.8" y="835.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="473.8" y="846.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (282 samples, 6.45%)</title><rect x="472.1" y="883.0" width="76.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="475.1" y="894.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/Session.write (282 samples, 6.45%)</title><rect x="472.1" y="867.0" width="76.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="475.1" y="878.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (278 samples, 6.36%)</title><rect x="472.9" y="851.0" width="75.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="475.9" y="862.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (278 samples, 6.36%)</title><rect x="472.9" y="835.0" width="75.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="475.9" y="846.0">one/nio/..</text>
</g>
<g>
<title>.annobin_send.c (275 samples, 6.29%)</title><rect x="472.9" y="819.0" width="74.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="475.9" y="830.0">.annobin..</text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="475.4" y="803.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="478.4" y="814.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="475.4" y="787.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="478.4" y="798.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="475.4" y="771.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="478.4" y="782.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="475.4" y="755.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="478.4" y="766.0"></text>
</g>
<g>
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="475.4" y="739.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="478.4" y="750.0"></text>
</g>
<g>
<title>call_timer_fn (1 samples, 0.02%)</title><rect x="475.4" y="723.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="478.4" y="734.0"></text>
</g>
<g>
<title>tcp_delack_timer (1 samples, 0.02%)</title><rect x="475.4" y="707.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="478.4" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (265 samples, 6.07%)</title><rect x="475.6" y="803.0" width="71.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="478.6" y="814.0">entry_SY..</text>
</g>
<g>
<title>do_syscall_64 (265 samples, 6.07%)</title><rect x="475.6" y="787.0" width="71.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="478.6" y="798.0">do_sysca..</text>
</g>
<g>
<title>__x64_sys_sendto (263 samples, 6.02%)</title><rect x="476.2" y="771.0" width="71.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="479.2" y="782.0">__x64_sy..</text>
</g>
<g>
<title>__sys_sendto (263 samples, 6.02%)</title><rect x="476.2" y="755.0" width="71.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="479.2" y="766.0">__sys_se..</text>
</g>
<g>
<title>fput_many (1 samples, 0.02%)</title><rect x="476.2" y="739.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="479.2" y="750.0"></text>
</g>
<g>
<title>import_single_range (1 samples, 0.02%)</title><rect x="476.4" y="739.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="479.4" y="750.0"></text>
</g>
<g>
<title>sock_sendmsg (257 samples, 5.88%)</title><rect x="476.7" y="739.0" width="69.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="479.7" y="750.0">sock_se..</text>
</g>
<g>
<title>security_socket_sendmsg (5 samples, 0.11%)</title><rect x="476.7" y="723.0" width="1.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="479.7" y="734.0"></text>
</g>
<g>
<title>sock_has_perm (4 samples, 0.09%)</title><rect x="477.0" y="707.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="480.0" y="718.0"></text>
</g>
<g>
<title>avc_has_perm (3 samples, 0.07%)</title><rect x="477.2" y="691.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="480.2" y="702.0"></text>
</g>
<g>
<title>tcp_sendmsg (252 samples, 5.77%)</title><rect x="478.1" y="723.0" width="68.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="481.1" y="734.0">tcp_sen..</text>
</g>
<g>
<title>release_sock (1 samples, 0.02%)</title><rect x="478.1" y="707.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="481.1" y="718.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.02%)</title><rect x="478.1" y="691.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="481.1" y="702.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (251 samples, 5.75%)</title><rect x="478.3" y="707.0" width="67.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="481.3" y="718.0">tcp_sen..</text>
</g>
<g>
<title>__check_object_size (7 samples, 0.16%)</title><rect x="478.9" y="691.0" width="1.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="481.9" y="702.0"></text>
</g>
<g>
<title>__check_heap_object (1 samples, 0.02%)</title><rect x="479.7" y="675.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="482.7" y="686.0"></text>
</g>
<g>
<title>__virt_addr_valid (3 samples, 0.07%)</title><rect x="479.9" y="675.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="482.9" y="686.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (220 samples, 5.04%)</title><rect x="480.8" y="691.0" width="59.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="483.8" y="702.0">__tcp_..</text>
</g>
<g>
<title>tcp_write_xmit (220 samples, 5.04%)</title><rect x="480.8" y="675.0" width="59.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="483.8" y="686.0">tcp_wr..</text>
</g>
<g>
<title>__tcp_transmit_skb (211 samples, 4.83%)</title><rect x="481.6" y="659.0" width="57.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="484.6" y="670.0">__tcp_..</text>
</g>
<g>
<title>__ip_queue_xmit (200 samples, 4.58%)</title><rect x="482.9" y="643.0" width="54.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="485.9" y="654.0">__ip_..</text>
</g>
<g>
<title>__sk_dst_check (2 samples, 0.05%)</title><rect x="483.5" y="627.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="486.5" y="638.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.02%)</title><rect x="483.7" y="611.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="486.7" y="622.0"></text>
</g>
<g>
<title>ip_local_out (43 samples, 0.98%)</title><rect x="484.0" y="627.0" width="11.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="487.0" y="638.0"></text>
</g>
<g>
<title>__ip_local_out (43 samples, 0.98%)</title><rect x="484.0" y="611.0" width="11.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="487.0" y="622.0"></text>
</g>
<g>
<title>nf_hook_slow (43 samples, 0.98%)</title><rect x="484.0" y="595.0" width="11.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="487.0" y="606.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (13 samples, 0.30%)</title><rect x="484.5" y="579.0" width="3.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="487.5" y="590.0"></text>
</g>
<g>
<title>iptable_filter_hook	[iptable_filter] (2 samples, 0.05%)</title><rect x="488.0" y="579.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="491.0" y="590.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (3 samples, 0.07%)</title><rect x="488.6" y="579.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="491.6" y="590.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (3 samples, 0.07%)</title><rect x="488.6" y="563.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="491.6" y="574.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag	[nf_defrag_ipv4] (1 samples, 0.02%)</title><rect x="489.4" y="579.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="492.4" y="590.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (18 samples, 0.41%)</title><rect x="489.7" y="579.0" width="4.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="492.7" y="590.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get	[nf_conntrack] (8 samples, 0.18%)</title><rect x="489.7" y="563.0" width="2.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="492.7" y="574.0"></text>
</g>
<g>
<title>get_l4proto	[nf_conntrack] (1 samples, 0.02%)</title><rect x="491.8" y="563.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="494.8" y="574.0"></text>
</g>
<g>
<title>hash_conntrack_raw	[nf_conntrack] (2 samples, 0.05%)</title><rect x="492.1" y="563.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="495.1" y="574.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet	[nf_conntrack] (5 samples, 0.11%)</title><rect x="492.6" y="563.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="495.6" y="574.0"></text>
</g>
<g>
<title>nf_ct_seq_offset	[nf_conntrack] (2 samples, 0.05%)</title><rect x="493.5" y="547.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="496.5" y="558.0"></text>
</g>
<g>
<title>nf_ct_get_tuple	[nf_conntrack] (2 samples, 0.05%)</title><rect x="494.0" y="563.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="497.0" y="574.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn	[nf_nat] (2 samples, 0.05%)</title><rect x="494.5" y="579.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="497.5" y="590.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn	[nf_nat] (1 samples, 0.02%)</title><rect x="494.8" y="563.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="497.8" y="574.0"></text>
</g>
<g>
<title>selinux_ipv4_output (2 samples, 0.05%)</title><rect x="495.1" y="579.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="498.1" y="590.0"></text>
</g>
<g>
<title>netlbl_enabled (1 samples, 0.02%)</title><rect x="495.3" y="563.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="498.3" y="574.0"></text>
</g>
<g>
<title>ip_output (153 samples, 3.50%)</title><rect x="495.6" y="627.0" width="41.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="498.6" y="638.0">ip_..</text>
</g>
<g>
<title>ip_finish_output2 (134 samples, 3.07%)</title><rect x="496.4" y="611.0" width="36.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="499.4" y="622.0">ip_..</text>
</g>
<g>
<title>__dev_queue_xmit (12 samples, 0.27%)</title><rect x="497.8" y="595.0" width="3.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="500.8" y="606.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (7 samples, 0.16%)</title><rect x="498.6" y="579.0" width="1.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="501.6" y="590.0"></text>
</g>
<g>
<title>loopback_xmit (7 samples, 0.16%)</title><rect x="498.6" y="563.0" width="1.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="501.6" y="574.0"></text>
</g>
<g>
<title>eth_type_trans (3 samples, 0.07%)</title><rect x="498.6" y="547.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="501.6" y="558.0"></text>
</g>
<g>
<title>netif_rx (4 samples, 0.09%)</title><rect x="499.4" y="547.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="502.4" y="558.0"></text>
</g>
<g>
<title>netif_rx_internal (3 samples, 0.07%)</title><rect x="499.7" y="531.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="502.7" y="542.0"></text>
</g>
<g>
<title>enqueue_to_backlog (1 samples, 0.02%)</title><rect x="499.9" y="515.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="502.9" y="526.0"></text>
</g>
<g>
<title>ktime_get_with_offset (1 samples, 0.02%)</title><rect x="500.2" y="515.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="503.2" y="526.0"></text>
</g>
<g>
<title>netdev_pick_tx (1 samples, 0.02%)</title><rect x="500.5" y="579.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="503.5" y="590.0"></text>
</g>
<g>
<title>validate_xmit_skb (1 samples, 0.02%)</title><rect x="500.7" y="579.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="503.7" y="590.0"></text>
</g>
<g>
<title>netif_skb_features (1 samples, 0.02%)</title><rect x="500.7" y="563.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="503.7" y="574.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (117 samples, 2.68%)</title><rect x="501.0" y="595.0" width="31.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="504.0" y="606.0">__..</text>
</g>
<g>
<title>do_softirq.part.0 (117 samples, 2.68%)</title><rect x="501.0" y="579.0" width="31.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="504.0" y="590.0">do..</text>
</g>
<g>
<title>do_softirq_own_stack (114 samples, 2.61%)</title><rect x="501.8" y="563.0" width="30.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="504.8" y="574.0">do..</text>
</g>
<g>
<title>__softirqentry_text_start (114 samples, 2.61%)</title><rect x="501.8" y="547.0" width="30.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="504.8" y="558.0">__..</text>
</g>
<g>
<title>net_rx_action (113 samples, 2.59%)</title><rect x="502.1" y="531.0" width="30.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="505.1" y="542.0">ne..</text>
</g>
<g>
<title>__kfree_skb_flush (1 samples, 0.02%)</title><rect x="502.1" y="515.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="505.1" y="526.0"></text>
</g>
<g>
<title>process_backlog (112 samples, 2.56%)</title><rect x="502.4" y="515.0" width="30.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="505.4" y="526.0">pr..</text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="502.9" y="499.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="505.9" y="510.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (109 samples, 2.49%)</title><rect x="503.2" y="499.0" width="29.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="506.2" y="510.0">__..</text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="503.2" y="483.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="506.2" y="494.0"></text>
</g>
<g>
<title>ip_rcv (108 samples, 2.47%)</title><rect x="503.4" y="483.0" width="29.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="506.4" y="494.0">ip..</text>
</g>
<g>
<title>ip_local_deliver (82 samples, 1.88%)</title><rect x="504.0" y="467.0" width="22.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="507.0" y="478.0">i..</text>
</g>
<g>
<title>ip_local_deliver_finish (61 samples, 1.40%)</title><rect x="504.3" y="451.0" width="16.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="507.3" y="462.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (61 samples, 1.40%)</title><rect x="504.3" y="435.0" width="16.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="507.3" y="446.0"></text>
</g>
<g>
<title>raw_local_deliver (1 samples, 0.02%)</title><rect x="504.5" y="419.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="507.5" y="430.0"></text>
</g>
<g>
<title>tcp_v4_rcv (59 samples, 1.35%)</title><rect x="504.8" y="419.0" width="15.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="507.8" y="430.0"></text>
</g>
<g>
<title>__inet_lookup_established (11 samples, 0.25%)</title><rect x="505.3" y="403.0" width="3.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="508.3" y="414.0"></text>
</g>
<g>
<title>inet_ehashfn (2 samples, 0.05%)</title><rect x="507.8" y="387.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="510.8" y="398.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="508.3" y="403.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="511.3" y="414.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (44 samples, 1.01%)</title><rect x="508.6" y="403.0" width="11.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="511.6" y="414.0"></text>
</g>
<g>
<title>tcp_rcv_established (44 samples, 1.01%)</title><rect x="508.6" y="387.0" width="11.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="511.6" y="398.0"></text>
</g>
<g>
<title>sk_reset_timer (8 samples, 0.18%)</title><rect x="508.6" y="371.0" width="2.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="511.6" y="382.0"></text>
</g>
<g>
<title>mod_timer (8 samples, 0.18%)</title><rect x="508.6" y="355.0" width="2.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="511.6" y="366.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (8 samples, 0.18%)</title><rect x="508.6" y="339.0" width="2.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="511.6" y="350.0"></text>
</g>
<g>
<title>tcp_ack (21 samples, 0.48%)</title><rect x="510.7" y="371.0" width="5.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="513.7" y="382.0"></text>
</g>
<g>
<title>__kfree_skb (5 samples, 0.11%)</title><rect x="512.1" y="355.0" width="1.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="515.1" y="366.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.02%)</title><rect x="512.1" y="339.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="515.1" y="350.0"></text>
</g>
<g>
<title>skb_release_data (4 samples, 0.09%)</title><rect x="512.4" y="339.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="515.4" y="350.0"></text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.02%)</title><rect x="513.4" y="355.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="516.4" y="366.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (1 samples, 0.02%)</title><rect x="513.7" y="355.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="516.7" y="366.0"></text>
</g>
<g>
<title>rb_erase (1 samples, 0.02%)</title><rect x="514.0" y="355.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="517.0" y="366.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (3 samples, 0.07%)</title><rect x="514.2" y="355.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="517.2" y="366.0"></text>
</g>
<g>
<title>tcp_newly_delivered (1 samples, 0.02%)</title><rect x="515.1" y="355.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="518.1" y="366.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (4 samples, 0.09%)</title><rect x="515.3" y="355.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="518.3" y="366.0"></text>
</g>
<g>
<title>tcp_check_space (1 samples, 0.02%)</title><rect x="516.4" y="371.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="519.4" y="382.0"></text>
</g>
<g>
<title>tcp_data_queue (14 samples, 0.32%)</title><rect x="516.7" y="371.0" width="3.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="519.7" y="382.0"></text>
</g>
<g>
<title>sk_forced_mem_schedule (1 samples, 0.02%)</title><rect x="517.5" y="355.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="520.5" y="366.0"></text>
</g>
<g>
<title>sock_def_readable (9 samples, 0.21%)</title><rect x="517.8" y="355.0" width="2.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="520.8" y="366.0"></text>
</g>
<g>
<title>__wake_up_common_lock (8 samples, 0.18%)</title><rect x="518.0" y="339.0" width="2.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="521.0" y="350.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (8 samples, 0.18%)</title><rect x="518.0" y="323.0" width="2.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="521.0" y="334.0"></text>
</g>
<g>
<title>tcp_queue_rcv (1 samples, 0.02%)</title><rect x="520.2" y="355.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="523.2" y="366.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (1 samples, 0.02%)</title><rect x="520.5" y="403.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="523.5" y="414.0"></text>
</g>
<g>
<title>nf_hook_slow (20 samples, 0.46%)</title><rect x="520.7" y="451.0" width="5.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="523.7" y="462.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (15 samples, 0.34%)</title><rect x="520.7" y="435.0" width="4.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="523.7" y="446.0"></text>
</g>
<g>
<title>conntrack_mt	[xt_conntrack] (1 samples, 0.02%)</title><rect x="524.0" y="419.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="527.0" y="430.0"></text>
</g>
<g>
<title>conntrack_mt_v3	[xt_conntrack] (2 samples, 0.05%)</title><rect x="524.2" y="419.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="527.2" y="430.0"></text>
</g>
<g>
<title>ipv4_confirm	[nf_conntrack] (4 samples, 0.09%)</title><rect x="524.8" y="435.0" width="1.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="527.8" y="446.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn	[nf_nat] (1 samples, 0.02%)</title><rect x="525.9" y="435.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="528.9" y="446.0"></text>
</g>
<g>
<title>ip_rcv_finish (2 samples, 0.05%)</title><rect x="526.1" y="467.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="529.1" y="478.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.0 (2 samples, 0.05%)</title><rect x="526.1" y="451.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="529.1" y="462.0"></text>
</g>
<g>
<title>nf_hook_slow (22 samples, 0.50%)</title><rect x="526.7" y="467.0" width="5.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="529.7" y="478.0"></text>
</g>
<g>
<title>ip_sabotage_in	[br_netfilter] (1 samples, 0.02%)</title><rect x="526.9" y="451.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="529.9" y="462.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (15 samples, 0.34%)</title><rect x="527.2" y="451.0" width="4.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="530.2" y="462.0"></text>
</g>
<g>
<title>iptable_raw_hook	[iptable_raw] (1 samples, 0.02%)</title><rect x="531.3" y="451.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="534.3" y="462.0"></text>
</g>
<g>
<title>ipv4_conntrack_in	[nf_conntrack] (1 samples, 0.02%)</title><rect x="531.5" y="451.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="534.5" y="462.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (1 samples, 0.02%)</title><rect x="531.8" y="451.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="534.8" y="462.0"></text>
</g>
<g>
<title>nf_nat_ipv4_in	[nf_nat] (2 samples, 0.05%)</title><rect x="532.1" y="451.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="535.1" y="462.0"></text>
</g>
<g>
<title>nf_nat_inet_fn	[nf_nat] (1 samples, 0.02%)</title><rect x="532.3" y="435.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="535.3" y="446.0"></text>
</g>
<g>
<title>ip_finish_output (2 samples, 0.05%)</title><rect x="532.6" y="611.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="535.6" y="622.0"></text>
</g>
<g>
<title>nf_hook_slow (14 samples, 0.32%)</title><rect x="533.2" y="611.0" width="3.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="536.2" y="622.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (5 samples, 0.11%)</title><rect x="533.7" y="595.0" width="1.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="536.7" y="606.0"></text>
</g>
<g>
<title>selinux_ip_postroute (4 samples, 0.09%)</title><rect x="535.0" y="595.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="538.0" y="606.0"></text>
</g>
<g>
<title>selinux_peerlbl_enabled (2 samples, 0.05%)</title><rect x="535.6" y="579.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="538.6" y="590.0"></text>
</g>
<g>
<title>selinux_ipv4_postroute (3 samples, 0.07%)</title><rect x="536.1" y="595.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="539.1" y="606.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (2 samples, 0.05%)</title><rect x="536.9" y="643.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="539.9" y="654.0"></text>
</g>
<g>
<title>skb_clone (3 samples, 0.07%)</title><rect x="537.5" y="643.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="540.5" y="654.0"></text>
</g>
<g>
<title>tcp_v4_send_check (1 samples, 0.02%)</title><rect x="538.3" y="643.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="541.3" y="654.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (5 samples, 0.11%)</title><rect x="538.6" y="659.0" width="1.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="541.6" y="670.0"></text>
</g>
<g>
<title>sk_reset_timer (5 samples, 0.11%)</title><rect x="538.6" y="643.0" width="1.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="541.6" y="654.0"></text>
</g>
<g>
<title>mod_timer (4 samples, 0.09%)</title><rect x="538.8" y="627.0" width="1.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="541.8" y="638.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.07%)</title><rect x="539.1" y="611.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="542.1" y="622.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.02%)</title><rect x="539.9" y="659.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="542.9" y="670.0"></text>
</g>
<g>
<title>_copy_from_iter_full (3 samples, 0.07%)</title><rect x="540.2" y="691.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="543.2" y="702.0"></text>
</g>
<g>
<title>copyin (3 samples, 0.07%)</title><rect x="540.2" y="675.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="543.2" y="686.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (2 samples, 0.05%)</title><rect x="540.4" y="659.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="543.4" y="670.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (13 samples, 0.30%)</title><rect x="541.0" y="691.0" width="3.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="544.0" y="702.0"></text>
</g>
<g>
<title>__alloc_skb (13 samples, 0.30%)</title><rect x="541.0" y="675.0" width="3.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="544.0" y="686.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (6 samples, 0.14%)</title><rect x="541.5" y="659.0" width="1.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="544.5" y="670.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (6 samples, 0.14%)</title><rect x="541.5" y="643.0" width="1.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="544.5" y="654.0"></text>
</g>
<g>
<title>__slab_alloc (2 samples, 0.05%)</title><rect x="542.6" y="627.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="545.6" y="638.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (5 samples, 0.11%)</title><rect x="543.1" y="659.0" width="1.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="546.1" y="670.0"></text>
</g>
<g>
<title>should_failslab (2 samples, 0.05%)</title><rect x="544.0" y="643.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="547.0" y="654.0"></text>
</g>
<g>
<title>skb_entail (1 samples, 0.02%)</title><rect x="544.5" y="691.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="547.5" y="702.0"></text>
</g>
<g>
<title>tcp_push (1 samples, 0.02%)</title><rect x="544.8" y="691.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="547.8" y="702.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (1 samples, 0.02%)</title><rect x="545.0" y="691.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="548.0" y="702.0"></text>
</g>
<g>
<title>tcp_send_mss (2 samples, 0.05%)</title><rect x="545.3" y="691.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="548.3" y="702.0"></text>
</g>
<g>
<title>tcp_current_mss (2 samples, 0.05%)</title><rect x="545.3" y="675.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="548.3" y="686.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.02%)</title><rect x="545.6" y="659.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="548.6" y="670.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.02%)</title><rect x="545.8" y="691.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="548.8" y="702.0"></text>
</g>
<g>
<title>sockfd_lookup_light (4 samples, 0.09%)</title><rect x="546.1" y="739.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="549.1" y="750.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.09%)</title><rect x="546.1" y="723.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="549.1" y="734.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.07%)</title><rect x="546.4" y="707.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="549.4" y="718.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.07%)</title><rect x="547.2" y="819.0" width="0.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="550.2" y="830.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.07%)</title><rect x="547.2" y="803.0" width="0.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="550.2" y="814.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (3 samples, 0.07%)</title><rect x="547.2" y="787.0" width="0.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="550.2" y="798.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (2 samples, 0.05%)</title><rect x="547.2" y="771.0" width="0.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="550.2" y="782.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.02%)</title><rect x="547.7" y="771.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="550.7" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.listen (1 samples, 0.02%)</title><rect x="548.0" y="851.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="551.0" y="862.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.listen (1 samples, 0.02%)</title><rect x="548.0" y="835.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="551.0" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer$$Lambda$85/1955586341.get (84 samples, 1.92%)</title><rect x="548.3" y="915.0" width="22.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="551.3" y="926.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.delete (1 samples, 0.02%)</title><rect x="548.3" y="899.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="551.3" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.lambda$entity$2 (83 samples, 1.90%)</title><rect x="548.5" y="899.0" width="22.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="551.5" y="910.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.delete (83 samples, 1.90%)</title><rect x="548.5" y="883.0" width="22.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="551.5" y="894.0">r..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.02%)</title><rect x="549.1" y="867.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="552.1" y="878.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.02%)</title><rect x="549.1" y="851.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="552.1" y="862.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="549.1" y="835.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="552.1" y="846.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="549.1" y="819.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="552.1" y="830.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.02%)</title><rect x="549.1" y="803.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="552.1" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.remove (80 samples, 1.83%)</title><rect x="549.4" y="867.0" width="21.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="552.4" y="878.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.remove (79 samples, 1.81%)</title><rect x="549.6" y="851.0" width="21.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="552.6" y="862.0">r..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.lock (8 samples, 0.18%)</title><rect x="549.6" y="835.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="552.6" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (8 samples, 0.18%)</title><rect x="549.6" y="819.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="552.6" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (8 samples, 0.18%)</title><rect x="549.6" y="803.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="552.6" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (8 samples, 0.18%)</title><rect x="549.6" y="787.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="552.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (8 samples, 0.18%)</title><rect x="549.6" y="771.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="552.6" y="782.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (7 samples, 0.16%)</title><rect x="549.9" y="755.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="552.9" y="766.0"></text>
</g>
<g>
<title>Unsafe_Park (2 samples, 0.05%)</title><rect x="549.9" y="739.0" width="0.5" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="552.9" y="750.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.02%)</title><rect x="549.9" y="723.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="552.9" y="734.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.02%)</title><rect x="550.2" y="723.0" width="0.2" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="553.2" y="734.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.11%)</title><rect x="550.4" y="739.0" width="1.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="553.4" y="750.0"></text>
</g>
<g>
<title>__pthread_cond_wait (5 samples, 0.11%)</title><rect x="550.4" y="723.0" width="1.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="553.4" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="551.5" y="707.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="554.5" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="551.5" y="691.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="554.5" y="702.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.02%)</title><rect x="551.5" y="675.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="554.5" y="686.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.02%)</title><rect x="551.5" y="659.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="554.5" y="670.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.02%)</title><rect x="551.5" y="643.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="554.5" y="654.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.02%)</title><rect x="551.5" y="627.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="554.5" y="638.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="551.5" y="611.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="554.5" y="622.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.02%)</title><rect x="551.5" y="595.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="554.5" y="606.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="551.5" y="579.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="554.5" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.unlock (2 samples, 0.05%)</title><rect x="551.8" y="835.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="554.8" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.05%)</title><rect x="551.8" y="819.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="554.8" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.05%)</title><rect x="551.8" y="803.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="554.8" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.05%)</title><rect x="551.8" y="787.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="554.8" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.05%)</title><rect x="551.8" y="771.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="554.8" y="782.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 0.05%)</title><rect x="551.8" y="755.0" width="0.5" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="554.8" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.05%)</title><rect x="551.8" y="739.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="554.8" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.05%)</title><rect x="551.8" y="723.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="554.8" y="734.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.05%)</title><rect x="551.8" y="707.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="554.8" y="718.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.05%)</title><rect x="551.8" y="691.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="554.8" y="702.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.05%)</title><rect x="551.8" y="675.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="554.8" y="686.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.05%)</title><rect x="551.8" y="659.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="554.8" y="670.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.05%)</title><rect x="551.8" y="643.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="554.8" y="654.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.05%)</title><rect x="551.8" y="627.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="554.8" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.remove (69 samples, 1.58%)</title><rect x="552.3" y="835.0" width="18.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="555.3" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (66 samples, 1.51%)</title><rect x="552.3" y="819.0" width="17.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="555.3" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (66 samples, 1.51%)</title><rect x="552.3" y="803.0" width="17.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="555.3" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.05%)</title><rect x="552.6" y="787.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="555.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (3 samples, 0.07%)</title><rect x="553.1" y="787.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="556.1" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (2 samples, 0.05%)</title><rect x="553.1" y="771.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="556.1" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (1 samples, 0.02%)</title><rect x="553.1" y="755.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="556.1" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (1 samples, 0.02%)</title><rect x="553.1" y="739.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="556.1" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.02%)</title><rect x="553.1" y="723.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="556.1" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.02%)</title><rect x="553.1" y="707.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="556.1" y="718.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.02%)</title><rect x="553.1" y="691.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="556.1" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (1 samples, 0.02%)</title><rect x="553.4" y="755.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="556.4" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.02%)</title><rect x="553.4" y="739.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="556.4" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (1 samples, 0.02%)</title><rect x="553.7" y="771.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="556.7" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (60 samples, 1.37%)</title><rect x="554.0" y="787.0" width="16.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="557.0" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (60 samples, 1.37%)</title><rect x="554.0" y="771.0" width="16.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="557.0" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (28 samples, 0.64%)</title><rect x="562.6" y="755.0" width="7.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="565.6" y="766.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (26 samples, 0.60%)</title><rect x="562.6" y="739.0" width="7.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="565.6" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.base (2 samples, 0.05%)</title><rect x="566.4" y="723.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="569.4" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (5 samples, 0.11%)</title><rect x="566.9" y="723.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="569.9" y="734.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (3 samples, 0.07%)</title><rect x="567.5" y="707.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="570.5" y="718.0"></text>
</g>
<g>
<title>jdk/internal/util/ArraysSupport.vectorizedMismatch (3 samples, 0.07%)</title><rect x="568.3" y="723.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="571.3" y="734.0"></text>
</g>
<g>
<title>vtable stub (2 samples, 0.05%)</title><rect x="569.1" y="723.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="572.1" y="734.0"></text>
</g>
<g>
<title>jdk/internal/util/ArraysSupport.vectorizedMismatch (2 samples, 0.05%)</title><rect x="569.6" y="739.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="572.6" y="750.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.02%)</title><rect x="570.2" y="819.0" width="0.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="573.2" y="830.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.02%)</title><rect x="570.2" y="803.0" width="0.2" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="573.2" y="814.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.02%)</title><rect x="570.2" y="787.0" width="0.2" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="573.2" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Value.getData (1 samples, 0.02%)</title><rect x="570.4" y="819.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="573.4" y="830.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (1 samples, 0.02%)</title><rect x="570.4" y="803.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="573.4" y="814.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (1 samples, 0.02%)</title><rect x="570.4" y="787.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="573.4" y="798.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (1 samples, 0.02%)</title><rect x="570.4" y="771.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="573.4" y="782.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="570.4" y="755.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="573.4" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Value.tombstone (1 samples, 0.02%)</title><rect x="570.7" y="819.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="573.7" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Value.&lt;init&gt; (1 samples, 0.02%)</title><rect x="570.7" y="803.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="573.7" y="814.0"></text>
</g>
<g>
<title>[worker-1 tid=25394] (573 samples, 13.12%)</title><rect x="571.0" y="1011.0" width="154.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="574.0" y="1022.0">[worker-1 tid=25394]</text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.02%)</title><rect x="571.0" y="995.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="574.0" y="1006.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.02%)</title><rect x="571.2" y="995.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="574.2" y="1006.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.02%)</title><rect x="571.2" y="979.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="574.2" y="990.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.02%)</title><rect x="571.2" y="963.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="574.2" y="974.0"></text>
</g>
<g>
<title>[unknown_Java] (4 samples, 0.09%)</title><rect x="571.5" y="995.0" width="1.1" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="574.5" y="1006.0"></text>
</g>
<g>
<title>java/lang/Thread.run (567 samples, 12.98%)</title><rect x="572.6" y="995.0" width="153.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="575.6" y="1006.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (567 samples, 12.98%)</title><rect x="572.6" y="979.0" width="153.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="575.6" y="990.0">java/util/concurren..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (567 samples, 12.98%)</title><rect x="572.6" y="963.0" width="153.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="575.6" y="974.0">java/util/concurren..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (2 samples, 0.05%)</title><rect x="572.6" y="947.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="575.6" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.05%)</title><rect x="572.6" y="931.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="575.6" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.tryRelease (1 samples, 0.02%)</title><rect x="572.9" y="915.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="575.9" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.setState (1 samples, 0.02%)</title><rect x="572.9" y="899.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="575.9" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (145 samples, 3.32%)</title><rect x="573.1" y="947.0" width="39.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="576.1" y="958.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (145 samples, 3.32%)</title><rect x="573.1" y="931.0" width="39.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="576.1" y="942.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.dequeue (1 samples, 0.02%)</title><rect x="573.4" y="915.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="576.4" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (105 samples, 2.40%)</title><rect x="573.7" y="915.0" width="28.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="576.7" y="926.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.02%)</title><rect x="574.2" y="899.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="577.2" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.02%)</title><rect x="574.2" y="883.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="577.2" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.02%)</title><rect x="574.2" y="867.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="577.2" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (17 samples, 0.39%)</title><rect x="574.5" y="899.0" width="4.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="577.5" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (17 samples, 0.39%)</title><rect x="574.5" y="883.0" width="4.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="577.5" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (16 samples, 0.37%)</title><rect x="574.7" y="867.0" width="4.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="577.7" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (16 samples, 0.37%)</title><rect x="574.7" y="851.0" width="4.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="577.7" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (1 samples, 0.02%)</title><rect x="574.7" y="835.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="577.7" y="846.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (15 samples, 0.34%)</title><rect x="575.0" y="835.0" width="4.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="578.0" y="846.0"></text>
</g>
<g>
<title>__pthread_cond_signal (15 samples, 0.34%)</title><rect x="575.0" y="819.0" width="4.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="578.0" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (15 samples, 0.34%)</title><rect x="575.0" y="803.0" width="4.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="578.0" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (15 samples, 0.34%)</title><rect x="575.0" y="787.0" width="4.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="578.0" y="798.0"></text>
</g>
<g>
<title>__x64_sys_futex (14 samples, 0.32%)</title><rect x="575.3" y="771.0" width="3.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="578.3" y="782.0"></text>
</g>
<g>
<title>do_futex (14 samples, 0.32%)</title><rect x="575.3" y="755.0" width="3.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="578.3" y="766.0"></text>
</g>
<g>
<title>futex_wake (14 samples, 0.32%)</title><rect x="575.3" y="739.0" width="3.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="578.3" y="750.0"></text>
</g>
<g>
<title>mark_wake_futex (3 samples, 0.07%)</title><rect x="575.3" y="723.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="578.3" y="734.0"></text>
</g>
<g>
<title>__unqueue_futex (2 samples, 0.05%)</title><rect x="575.6" y="707.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="578.6" y="718.0"></text>
</g>
<g>
<title>plist_del (1 samples, 0.02%)</title><rect x="575.8" y="691.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="578.8" y="702.0"></text>
</g>
<g>
<title>wake_up_q (11 samples, 0.25%)</title><rect x="576.1" y="723.0" width="3.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="579.1" y="734.0"></text>
</g>
<g>
<title>try_to_wake_up (11 samples, 0.25%)</title><rect x="576.1" y="707.0" width="3.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="579.1" y="718.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (11 samples, 0.25%)</title><rect x="576.1" y="691.0" width="3.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="579.1" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (85 samples, 1.95%)</title><rect x="579.1" y="899.0" width="22.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="582.1" y="910.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (85 samples, 1.95%)</title><rect x="579.1" y="883.0" width="22.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="582.1" y="894.0">j..</text>
</g>
<g>
<title>Unsafe_Park (29 samples, 0.66%)</title><rect x="579.1" y="867.0" width="7.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="582.1" y="878.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (4 samples, 0.09%)</title><rect x="579.9" y="851.0" width="1.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="582.9" y="862.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.07%)</title><rect x="580.1" y="835.0" width="0.9" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="583.1" y="846.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (4 samples, 0.09%)</title><rect x="581.0" y="851.0" width="1.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="584.0" y="862.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.229] (1 samples, 0.02%)</title><rect x="582.0" y="851.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="585.0" y="862.0"></text>
</g>
<g>
<title>__lll_unlock_wake (9 samples, 0.21%)</title><rect x="582.3" y="851.0" width="2.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="585.3" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.09%)</title><rect x="583.4" y="835.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="586.4" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.09%)</title><rect x="583.4" y="819.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="586.4" y="830.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.05%)</title><rect x="583.9" y="803.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="586.9" y="814.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.05%)</title><rect x="583.9" y="787.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="586.9" y="798.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.05%)</title><rect x="583.9" y="771.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="586.9" y="782.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="584.5" y="835.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="587.5" y="846.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="584.5" y="819.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="587.5" y="830.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="584.5" y="803.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="587.5" y="814.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.02%)</title><rect x="584.7" y="851.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="587.7" y="862.0"></text>
</g>
<g>
<title>__tls_get_addr (4 samples, 0.09%)</title><rect x="585.0" y="851.0" width="1.1" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="588.0" y="862.0"></text>
</g>
<g>
<title>_init (2 samples, 0.05%)</title><rect x="586.1" y="851.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="589.1" y="862.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.02%)</title><rect x="586.6" y="851.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="589.6" y="862.0"></text>
</g>
<g>
<title>[unknown] (55 samples, 1.26%)</title><rect x="586.9" y="867.0" width="14.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="589.9" y="878.0"></text>
</g>
<g>
<title>.annobin_pthread_cond_wait.c (2 samples, 0.05%)</title><rect x="586.9" y="851.0" width="0.5" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="589.9" y="862.0"></text>
</g>
<g>
<title>__condvar_dec_grefs (1 samples, 0.02%)</title><rect x="587.4" y="851.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="590.4" y="862.0"></text>
</g>
<g>
<title>__pthread_cond_wait (47 samples, 1.08%)</title><rect x="587.7" y="851.0" width="12.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="590.7" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (34 samples, 0.78%)</title><rect x="591.2" y="835.0" width="9.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="594.2" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (34 samples, 0.78%)</title><rect x="591.2" y="819.0" width="9.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="594.2" y="830.0"></text>
</g>
<g>
<title>__x64_sys_futex (25 samples, 0.57%)</title><rect x="593.7" y="803.0" width="6.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="596.7" y="814.0"></text>
</g>
<g>
<title>do_futex (23 samples, 0.53%)</title><rect x="594.2" y="787.0" width="6.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="597.2" y="798.0"></text>
</g>
<g>
<title>futex_wait (23 samples, 0.53%)</title><rect x="594.2" y="771.0" width="6.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="597.2" y="782.0"></text>
</g>
<g>
<title>drop_futex_key_refs.isra.0 (1 samples, 0.02%)</title><rect x="595.5" y="755.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="598.5" y="766.0"></text>
</g>
<g>
<title>futex_wait_queue_me (11 samples, 0.25%)</title><rect x="595.8" y="755.0" width="3.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="598.8" y="766.0"></text>
</g>
<g>
<title>plist_add (1 samples, 0.02%)</title><rect x="595.8" y="739.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="598.8" y="750.0"></text>
</g>
<g>
<title>__list_add_valid (1 samples, 0.02%)</title><rect x="595.8" y="723.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="598.8" y="734.0"></text>
</g>
<g>
<title>schedule (10 samples, 0.23%)</title><rect x="596.1" y="739.0" width="2.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="599.1" y="750.0"></text>
</g>
<g>
<title>__sched_text_start (9 samples, 0.21%)</title><rect x="596.4" y="723.0" width="2.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="599.4" y="734.0"></text>
</g>
<g>
<title>finish_task_switch (9 samples, 0.21%)</title><rect x="596.4" y="707.0" width="2.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="599.4" y="718.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="598.5" y="691.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="601.5" y="702.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="598.5" y="675.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="601.5" y="686.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="598.5" y="659.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="601.5" y="670.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="598.5" y="643.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="601.5" y="654.0"></text>
</g>
<g>
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="598.5" y="627.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="601.5" y="638.0"></text>
</g>
<g>
<title>call_timer_fn (1 samples, 0.02%)</title><rect x="598.5" y="611.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="601.5" y="622.0"></text>
</g>
<g>
<title>tcp_delack_timer (1 samples, 0.02%)</title><rect x="598.5" y="595.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="601.5" y="606.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="598.5" y="579.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="601.5" y="590.0"></text>
</g>
<g>
<title>futex_wait_setup (6 samples, 0.14%)</title><rect x="598.8" y="755.0" width="1.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="601.8" y="766.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.02%)</title><rect x="599.3" y="739.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="602.3" y="750.0"></text>
</g>
<g>
<title>get_futex_value_locked (3 samples, 0.07%)</title><rect x="599.6" y="739.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="602.6" y="750.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.02%)</title><rect x="600.4" y="851.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="603.4" y="862.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.02%)</title><rect x="600.7" y="851.0" width="0.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="603.7" y="862.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (1 samples, 0.02%)</title><rect x="600.9" y="851.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="603.9" y="862.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.02%)</title><rect x="601.2" y="851.0" width="0.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="604.2" y="862.0"></text>
</g>
<g>
<title>_dl_update_slotinfo (1 samples, 0.02%)</title><rect x="601.5" y="851.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="604.5" y="862.0"></text>
</g>
<g>
<title>_dl_update_slotinfo (1 samples, 0.02%)</title><rect x="601.8" y="867.0" width="0.2" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="604.8" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (6 samples, 0.14%)</title><rect x="602.0" y="915.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="605.0" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (6 samples, 0.14%)</title><rect x="602.0" y="899.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="605.0" y="910.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (1 samples, 0.02%)</title><rect x="602.0" y="883.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="605.0" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (3 samples, 0.07%)</title><rect x="602.3" y="883.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="605.3" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2 samples, 0.05%)</title><rect x="602.3" y="867.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="605.3" y="878.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (1 samples, 0.02%)</title><rect x="602.3" y="851.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="605.3" y="862.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (1 samples, 0.02%)</title><rect x="602.3" y="835.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="605.3" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.02%)</title><rect x="602.6" y="851.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="605.6" y="862.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.02%)</title><rect x="602.6" y="835.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="605.6" y="846.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="602.6" y="819.0" width="0.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="605.6" y="830.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.02%)</title><rect x="602.6" y="803.0" width="0.2" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="605.6" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.shouldParkAfterFailedAcquire (1 samples, 0.02%)</title><rect x="602.8" y="867.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="605.8" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (2 samples, 0.05%)</title><rect x="603.1" y="883.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="606.1" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (2 samples, 0.05%)</title><rect x="603.1" y="867.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="606.1" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (2 samples, 0.05%)</title><rect x="603.1" y="851.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="606.1" y="862.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (2 samples, 0.05%)</title><rect x="603.1" y="835.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="606.1" y="846.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (2 samples, 0.05%)</title><rect x="603.1" y="819.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="606.1" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (32 samples, 0.73%)</title><rect x="603.6" y="915.0" width="8.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="606.6" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (32 samples, 0.73%)</title><rect x="603.6" y="899.0" width="8.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="606.6" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (32 samples, 0.73%)</title><rect x="603.6" y="883.0" width="8.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="606.6" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (32 samples, 0.73%)</title><rect x="603.6" y="867.0" width="8.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="606.6" y="878.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (31 samples, 0.71%)</title><rect x="603.9" y="851.0" width="8.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="606.9" y="862.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.02%)</title><rect x="603.9" y="835.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="606.9" y="846.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.05%)</title><rect x="604.2" y="835.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="607.2" y="846.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.02%)</title><rect x="604.2" y="819.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="607.2" y="830.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.02%)</title><rect x="604.5" y="819.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="607.5" y="830.0"></text>
</g>
<g>
<title>__pthread_cond_signal (28 samples, 0.64%)</title><rect x="604.7" y="835.0" width="7.6" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="607.7" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (24 samples, 0.55%)</title><rect x="605.8" y="819.0" width="6.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="608.8" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (24 samples, 0.55%)</title><rect x="605.8" y="803.0" width="6.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="608.8" y="814.0"></text>
</g>
<g>
<title>__x64_sys_futex (22 samples, 0.50%)</title><rect x="606.3" y="787.0" width="6.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="609.3" y="798.0"></text>
</g>
<g>
<title>do_futex (22 samples, 0.50%)</title><rect x="606.3" y="771.0" width="6.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="609.3" y="782.0"></text>
</g>
<g>
<title>futex_wake (22 samples, 0.50%)</title><rect x="606.3" y="755.0" width="6.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="609.3" y="766.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="606.6" y="739.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="609.6" y="750.0"></text>
</g>
<g>
<title>mark_wake_futex (2 samples, 0.05%)</title><rect x="606.9" y="739.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="609.9" y="750.0"></text>
</g>
<g>
<title>__unqueue_futex (1 samples, 0.02%)</title><rect x="607.2" y="723.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="610.2" y="734.0"></text>
</g>
<g>
<title>wake_up_q (18 samples, 0.41%)</title><rect x="607.4" y="739.0" width="4.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="610.4" y="750.0"></text>
</g>
<g>
<title>try_to_wake_up (18 samples, 0.41%)</title><rect x="607.4" y="723.0" width="4.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="610.4" y="734.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (18 samples, 0.41%)</title><rect x="607.4" y="707.0" width="4.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="610.4" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer$$Lambda$65/1115085888.run (420 samples, 9.61%)</title><rect x="612.3" y="947.0" width="113.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="615.3" y="958.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.lambda$executeAsync$3 (420 samples, 9.61%)</title><rect x="612.3" y="931.0" width="113.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="615.3" y="942.0">ru/mail/polis/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (315 samples, 7.21%)</title><rect x="612.3" y="915.0" width="85.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="615.3" y="926.0">one/nio/ht..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (3 samples, 0.07%)</title><rect x="612.3" y="899.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="615.3" y="910.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.07%)</title><rect x="612.3" y="883.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="615.3" y="894.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.05%)</title><rect x="612.3" y="867.0" width="0.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="615.3" y="878.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.02%)</title><rect x="612.8" y="867.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="615.8" y="878.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.02%)</title><rect x="612.8" y="851.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="615.8" y="862.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.02%)</title><rect x="612.8" y="835.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="615.8" y="846.0"></text>
</g>
<g>
<title>java/lang/CharacterData.of (1 samples, 0.02%)</title><rect x="612.8" y="819.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="615.8" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (309 samples, 7.07%)</title><rect x="613.1" y="899.0" width="83.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="616.1" y="910.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (3 samples, 0.07%)</title><rect x="613.1" y="883.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="616.1" y="894.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.02%)</title><rect x="613.6" y="867.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="616.6" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (1 samples, 0.02%)</title><rect x="613.6" y="851.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="616.6" y="862.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.02%)</title><rect x="613.6" y="835.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="616.6" y="846.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (306 samples, 7.00%)</title><rect x="613.9" y="883.0" width="82.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="616.9" y="894.0">one/nio/n..</text>
</g>
<g>
<title>one/nio/net/Session.write (306 samples, 7.00%)</title><rect x="613.9" y="867.0" width="82.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="616.9" y="878.0">one/nio/n..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (304 samples, 6.96%)</title><rect x="614.2" y="851.0" width="82.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="617.2" y="862.0">one/nio/n..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (304 samples, 6.96%)</title><rect x="614.2" y="835.0" width="82.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="617.2" y="846.0">one/nio/n..</text>
</g>
<g>
<title>.annobin_send.c (294 samples, 6.73%)</title><rect x="614.7" y="819.0" width="79.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="617.7" y="830.0">.annobin_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (281 samples, 6.43%)</title><rect x="618.2" y="803.0" width="75.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="621.2" y="814.0">entry_SY..</text>
</g>
<g>
<title>do_syscall_64 (281 samples, 6.43%)</title><rect x="618.2" y="787.0" width="75.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="621.2" y="798.0">do_sysca..</text>
</g>
<g>
<title>__x64_sys_sendto (275 samples, 6.29%)</title><rect x="619.9" y="771.0" width="74.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="622.9" y="782.0">__x64_sy..</text>
</g>
<g>
<title>__sys_sendto (275 samples, 6.29%)</title><rect x="619.9" y="755.0" width="74.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="622.9" y="766.0">__sys_se..</text>
</g>
<g>
<title>fput_many (3 samples, 0.07%)</title><rect x="620.4" y="739.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="623.4" y="750.0"></text>
</g>
<g>
<title>sock_sendmsg (267 samples, 6.11%)</title><rect x="621.2" y="739.0" width="72.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="624.2" y="750.0">sock_sen..</text>
</g>
<g>
<title>security_socket_sendmsg (6 samples, 0.14%)</title><rect x="621.2" y="723.0" width="1.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="624.2" y="734.0"></text>
</g>
<g>
<title>sock_has_perm (6 samples, 0.14%)</title><rect x="621.2" y="707.0" width="1.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="624.2" y="718.0"></text>
</g>
<g>
<title>avc_has_perm (3 samples, 0.07%)</title><rect x="622.0" y="691.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="625.0" y="702.0"></text>
</g>
<g>
<title>tcp_sendmsg (261 samples, 5.97%)</title><rect x="622.8" y="723.0" width="70.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="625.8" y="734.0">tcp_send..</text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.02%)</title><rect x="622.8" y="707.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="625.8" y="718.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.02%)</title><rect x="622.8" y="691.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="625.8" y="702.0"></text>
</g>
<g>
<title>release_sock (3 samples, 0.07%)</title><rect x="623.1" y="707.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="626.1" y="718.0"></text>
</g>
<g>
<title>__release_sock (2 samples, 0.05%)</title><rect x="623.1" y="691.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="626.1" y="702.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (2 samples, 0.05%)</title><rect x="623.1" y="675.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="626.1" y="686.0"></text>
</g>
<g>
<title>tcp_rcv_established (2 samples, 0.05%)</title><rect x="623.1" y="659.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="626.1" y="670.0"></text>
</g>
<g>
<title>tcp_ack (2 samples, 0.05%)</title><rect x="623.1" y="643.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="626.1" y="654.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.02%)</title><rect x="623.6" y="691.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="626.6" y="702.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (257 samples, 5.88%)</title><rect x="623.9" y="707.0" width="69.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="626.9" y="718.0">tcp_sen..</text>
</g>
<g>
<title>__check_object_size (3 samples, 0.07%)</title><rect x="624.2" y="691.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="627.2" y="702.0"></text>
</g>
<g>
<title>check_stack_object (2 samples, 0.05%)</title><rect x="624.4" y="675.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="627.4" y="686.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (233 samples, 5.33%)</title><rect x="625.0" y="691.0" width="62.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="628.0" y="702.0">__tcp_..</text>
</g>
<g>
<title>tcp_write_xmit (232 samples, 5.31%)</title><rect x="625.3" y="675.0" width="62.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="628.3" y="686.0">tcp_wr..</text>
</g>
<g>
<title>__tcp_transmit_skb (225 samples, 5.15%)</title><rect x="626.6" y="659.0" width="60.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="629.6" y="670.0">__tcp_..</text>
</g>
<g>
<title>__ip_queue_xmit (221 samples, 5.06%)</title><rect x="626.9" y="643.0" width="59.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="629.9" y="654.0">__ip_q..</text>
</g>
<g>
<title>__sk_dst_check (3 samples, 0.07%)</title><rect x="627.1" y="627.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="630.1" y="638.0"></text>
</g>
<g>
<title>ipv4_dst_check (3 samples, 0.07%)</title><rect x="627.1" y="611.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="630.1" y="622.0"></text>
</g>
<g>
<title>ip_local_out (54 samples, 1.24%)</title><rect x="628.0" y="627.0" width="14.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="631.0" y="638.0"></text>
</g>
<g>
<title>__ip_local_out (53 samples, 1.21%)</title><rect x="628.2" y="611.0" width="14.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="631.2" y="622.0"></text>
</g>
<g>
<title>ip_send_check (1 samples, 0.02%)</title><rect x="628.5" y="595.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="631.5" y="606.0"></text>
</g>
<g>
<title>nf_hook_slow (51 samples, 1.17%)</title><rect x="628.8" y="595.0" width="13.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="631.8" y="606.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (19 samples, 0.43%)</title><rect x="628.8" y="579.0" width="5.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="631.8" y="590.0"></text>
</g>
<g>
<title>iptable_filter_hook	[iptable_filter] (1 samples, 0.02%)</title><rect x="633.9" y="579.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="636.9" y="590.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (4 samples, 0.09%)</title><rect x="634.2" y="579.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="637.2" y="590.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (4 samples, 0.09%)</title><rect x="634.2" y="563.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="637.2" y="574.0"></text>
</g>
<g>
<title>iptable_raw_hook	[iptable_raw] (2 samples, 0.05%)</title><rect x="635.2" y="579.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="638.2" y="590.0"></text>
</g>
<g>
<title>iptable_security_hook	[iptable_security] (1 samples, 0.02%)</title><rect x="635.8" y="579.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="638.8" y="590.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag	[nf_defrag_ipv4] (1 samples, 0.02%)</title><rect x="636.1" y="579.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="639.1" y="590.0"></text>
</g>
<g>
<title>ipv4_conntrack_local	[nf_conntrack] (1 samples, 0.02%)</title><rect x="636.3" y="579.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="639.3" y="590.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (20 samples, 0.46%)</title><rect x="636.6" y="579.0" width="5.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="639.6" y="590.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get	[nf_conntrack] (7 samples, 0.16%)</title><rect x="636.6" y="563.0" width="1.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="639.6" y="574.0"></text>
</g>
<g>
<title>get_l4proto	[nf_conntrack] (2 samples, 0.05%)</title><rect x="638.5" y="563.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="641.5" y="574.0"></text>
</g>
<g>
<title>hash_conntrack_raw	[nf_conntrack] (2 samples, 0.05%)</title><rect x="639.0" y="563.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="642.0" y="574.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet	[nf_conntrack] (7 samples, 0.16%)</title><rect x="639.6" y="563.0" width="1.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="642.6" y="574.0"></text>
</g>
<g>
<title>nf_ct_seq_offset	[nf_conntrack] (2 samples, 0.05%)</title><rect x="640.9" y="547.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="643.9" y="558.0"></text>
</g>
<g>
<title>nf_ct_get_tuple	[nf_conntrack] (2 samples, 0.05%)</title><rect x="641.5" y="563.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="644.5" y="574.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn	[nf_nat] (2 samples, 0.05%)</title><rect x="642.0" y="579.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="645.0" y="590.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn	[nf_nat] (1 samples, 0.02%)</title><rect x="642.3" y="563.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="645.3" y="574.0"></text>
</g>
<g>
<title>ip_output (163 samples, 3.73%)</title><rect x="642.5" y="627.0" width="44.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="645.5" y="638.0">ip_o..</text>
</g>
<g>
<title>ip_finish_output2 (147 samples, 3.36%)</title><rect x="642.8" y="611.0" width="39.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="645.8" y="622.0">ip_..</text>
</g>
<g>
<title>__dev_queue_xmit (11 samples, 0.25%)</title><rect x="645.2" y="595.0" width="3.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="648.2" y="606.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (7 samples, 0.16%)</title><rect x="646.0" y="579.0" width="1.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="649.0" y="590.0"></text>
</g>
<g>
<title>loopback_xmit (7 samples, 0.16%)</title><rect x="646.0" y="563.0" width="1.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="649.0" y="574.0"></text>
</g>
<g>
<title>netif_rx (4 samples, 0.09%)</title><rect x="646.6" y="547.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="649.6" y="558.0"></text>
</g>
<g>
<title>netif_rx_internal (4 samples, 0.09%)</title><rect x="646.6" y="531.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="649.6" y="542.0"></text>
</g>
<g>
<title>enqueue_to_backlog (3 samples, 0.07%)</title><rect x="646.6" y="515.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="649.6" y="526.0"></text>
</g>
<g>
<title>ktime_get_with_offset (1 samples, 0.02%)</title><rect x="647.4" y="515.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="650.4" y="526.0"></text>
</g>
<g>
<title>sk_free (1 samples, 0.02%)</title><rect x="647.7" y="547.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="650.7" y="558.0"></text>
</g>
<g>
<title>validate_xmit_skb (1 samples, 0.02%)</title><rect x="647.9" y="579.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="650.9" y="590.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (127 samples, 2.91%)</title><rect x="648.2" y="595.0" width="34.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="651.2" y="606.0">__..</text>
</g>
<g>
<title>do_softirq.part.0 (127 samples, 2.91%)</title><rect x="648.2" y="579.0" width="34.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="651.2" y="590.0">do..</text>
</g>
<g>
<title>do_softirq_own_stack (124 samples, 2.84%)</title><rect x="649.0" y="563.0" width="33.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="652.0" y="574.0">do..</text>
</g>
<g>
<title>__softirqentry_text_start (124 samples, 2.84%)</title><rect x="649.0" y="547.0" width="33.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="652.0" y="558.0">__..</text>
</g>
<g>
<title>net_rx_action (119 samples, 2.72%)</title><rect x="650.1" y="531.0" width="32.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="653.1" y="542.0">ne..</text>
</g>
<g>
<title>process_backlog (118 samples, 2.70%)</title><rect x="650.4" y="515.0" width="31.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="653.4" y="526.0">pr..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (116 samples, 2.66%)</title><rect x="650.9" y="499.0" width="31.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="653.9" y="510.0">__..</text>
</g>
<g>
<title>__netif_receive_skb_core (3 samples, 0.07%)</title><rect x="651.2" y="483.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="654.2" y="494.0"></text>
</g>
<g>
<title>ip_rcv (112 samples, 2.56%)</title><rect x="652.0" y="483.0" width="30.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="655.0" y="494.0">ip..</text>
</g>
<g>
<title>ip_local_deliver (81 samples, 1.85%)</title><rect x="652.0" y="467.0" width="21.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="655.0" y="478.0">i..</text>
</g>
<g>
<title>ip_local_deliver_finish (72 samples, 1.65%)</title><rect x="652.3" y="451.0" width="19.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="655.3" y="462.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (72 samples, 1.65%)</title><rect x="652.3" y="435.0" width="19.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="655.3" y="446.0"></text>
</g>
<g>
<title>raw_local_deliver (2 samples, 0.05%)</title><rect x="652.3" y="419.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="655.3" y="430.0"></text>
</g>
<g>
<title>tcp_v4_rcv (70 samples, 1.60%)</title><rect x="652.8" y="419.0" width="18.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="655.8" y="430.0"></text>
</g>
<g>
<title>__inet_lookup_established (5 samples, 0.11%)</title><rect x="653.3" y="403.0" width="1.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="656.3" y="414.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="654.7" y="403.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="657.7" y="414.0"></text>
</g>
<g>
<title>sock_put (1 samples, 0.02%)</title><rect x="655.0" y="403.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="658.0" y="414.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (61 samples, 1.40%)</title><rect x="655.2" y="403.0" width="16.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="658.2" y="414.0"></text>
</g>
<g>
<title>ipv4_dst_check (2 samples, 0.05%)</title><rect x="655.2" y="387.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="658.2" y="398.0"></text>
</g>
<g>
<title>tcp_rcv_established (59 samples, 1.35%)</title><rect x="655.8" y="387.0" width="15.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="658.8" y="398.0"></text>
</g>
<g>
<title>sk_reset_timer (8 samples, 0.18%)</title><rect x="656.0" y="371.0" width="2.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="659.0" y="382.0"></text>
</g>
<g>
<title>mod_timer (7 samples, 0.16%)</title><rect x="656.3" y="355.0" width="1.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="659.3" y="366.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (6 samples, 0.14%)</title><rect x="656.6" y="339.0" width="1.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="659.6" y="350.0"></text>
</g>
<g>
<title>tcp_ack (17 samples, 0.39%)</title><rect x="658.2" y="371.0" width="4.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="661.2" y="382.0"></text>
</g>
<g>
<title>__kfree_skb (6 samples, 0.14%)</title><rect x="659.6" y="355.0" width="1.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="662.6" y="366.0"></text>
</g>
<g>
<title>__slab_free (2 samples, 0.05%)</title><rect x="659.6" y="339.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="662.6" y="350.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.02%)</title><rect x="660.1" y="339.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="663.1" y="350.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.02%)</title><rect x="660.4" y="339.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="663.4" y="350.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.02%)</title><rect x="660.4" y="323.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="663.4" y="334.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.05%)</title><rect x="660.6" y="339.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="663.6" y="350.0"></text>
</g>
<g>
<title>kmem_cache_free (2 samples, 0.05%)</title><rect x="661.2" y="355.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="664.2" y="366.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.02%)</title><rect x="661.4" y="339.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="664.4" y="350.0"></text>
</g>
<g>
<title>ktime_get_seconds (1 samples, 0.02%)</title><rect x="661.7" y="355.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="664.7" y="366.0"></text>
</g>
<g>
<title>tcp_rack_update_reo_wnd (1 samples, 0.02%)</title><rect x="662.0" y="355.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="665.0" y="366.0"></text>
</g>
<g>
<title>tcp_rate_skb_delivered (1 samples, 0.02%)</title><rect x="662.3" y="355.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="665.3" y="366.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.02%)</title><rect x="662.5" y="355.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="665.5" y="366.0"></text>
</g>
<g>
<title>tcp_check_space (2 samples, 0.05%)</title><rect x="662.8" y="371.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="665.8" y="382.0"></text>
</g>
<g>
<title>tcp_data_queue (30 samples, 0.69%)</title><rect x="663.3" y="371.0" width="8.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="666.3" y="382.0"></text>
</g>
<g>
<title>dst_release (2 samples, 0.05%)</title><rect x="663.9" y="355.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="666.9" y="366.0"></text>
</g>
<g>
<title>sock_def_readable (23 samples, 0.53%)</title><rect x="664.4" y="355.0" width="6.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="667.4" y="366.0"></text>
</g>
<g>
<title>__wake_up_common_lock (19 samples, 0.43%)</title><rect x="665.5" y="339.0" width="5.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="668.5" y="350.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (18 samples, 0.41%)</title><rect x="665.8" y="323.0" width="4.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="668.8" y="334.0"></text>
</g>
<g>
<title>tcp_event_data_recv (1 samples, 0.02%)</title><rect x="670.6" y="355.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="673.6" y="366.0"></text>
</g>
<g>
<title>tcp_queue_rcv (2 samples, 0.05%)</title><rect x="670.9" y="355.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="673.9" y="366.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.02%)</title><rect x="671.4" y="371.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="674.4" y="382.0"></text>
</g>
<g>
<title>nf_hook_slow (8 samples, 0.18%)</title><rect x="671.7" y="451.0" width="2.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="674.7" y="462.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (6 samples, 0.14%)</title><rect x="671.7" y="435.0" width="1.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="674.7" y="446.0"></text>
</g>
<g>
<title>conntrack_mt	[xt_conntrack] (2 samples, 0.05%)</title><rect x="672.5" y="419.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="675.5" y="430.0"></text>
</g>
<g>
<title>conntrack_mt_v3	[xt_conntrack] (1 samples, 0.02%)</title><rect x="673.1" y="419.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="676.1" y="430.0"></text>
</g>
<g>
<title>iptable_security_hook	[iptable_security] (2 samples, 0.05%)</title><rect x="673.3" y="435.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="676.3" y="446.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (1 samples, 0.02%)</title><rect x="673.9" y="467.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="676.9" y="478.0"></text>
</g>
<g>
<title>nf_hook_slow (30 samples, 0.69%)</title><rect x="674.1" y="467.0" width="8.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="677.1" y="478.0"></text>
</g>
<g>
<title>ip_sabotage_in	[br_netfilter] (1 samples, 0.02%)</title><rect x="674.1" y="451.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="677.1" y="462.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (22 samples, 0.50%)</title><rect x="674.4" y="451.0" width="6.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="677.4" y="462.0"></text>
</g>
<g>
<title>iptable_raw_hook	[iptable_raw] (1 samples, 0.02%)</title><rect x="680.4" y="451.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="683.4" y="462.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag	[nf_defrag_ipv4] (2 samples, 0.05%)</title><rect x="680.6" y="451.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="683.6" y="462.0"></text>
</g>
<g>
<title>ipv4_conntrack_in	[nf_conntrack] (2 samples, 0.05%)</title><rect x="681.2" y="451.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="684.2" y="462.0"></text>
</g>
<g>
<title>nf_nat_ipv4_in	[nf_nat] (2 samples, 0.05%)</title><rect x="681.7" y="451.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="684.7" y="462.0"></text>
</g>
<g>
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="682.2" y="531.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="685.2" y="542.0"></text>
</g>
<g>
<title>ip_finish_output (2 samples, 0.05%)</title><rect x="682.5" y="611.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="685.5" y="622.0"></text>
</g>
<g>
<title>nf_hook_slow (13 samples, 0.30%)</title><rect x="683.1" y="611.0" width="3.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="686.1" y="622.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (3 samples, 0.07%)</title><rect x="683.3" y="595.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="686.3" y="606.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (1 samples, 0.02%)</title><rect x="684.1" y="595.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="687.1" y="606.0"></text>
</g>
<g>
<title>ipv4_confirm	[nf_conntrack] (3 samples, 0.07%)</title><rect x="684.4" y="595.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="687.4" y="606.0"></text>
</g>
<g>
<title>nf_confirm	[nf_conntrack] (2 samples, 0.05%)</title><rect x="685.2" y="595.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="688.2" y="606.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events	[nf_conntrack] (1 samples, 0.02%)</title><rect x="685.5" y="579.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="688.5" y="590.0"></text>
</g>
<g>
<title>nf_nat_ipv4_out	[nf_nat] (1 samples, 0.02%)</title><rect x="685.8" y="595.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="688.8" y="606.0"></text>
</g>
<g>
<title>nf_nat_inet_fn	[nf_nat] (1 samples, 0.02%)</title><rect x="685.8" y="579.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="688.8" y="590.0"></text>
</g>
<g>
<title>selinux_ip_postroute (1 samples, 0.02%)</title><rect x="686.0" y="595.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="689.0" y="606.0"></text>
</g>
<g>
<title>selinux_ipv4_postroute (1 samples, 0.02%)</title><rect x="686.3" y="595.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="689.3" y="606.0"></text>
</g>
<g>
<title>__skb_clone (2 samples, 0.05%)</title><rect x="686.6" y="643.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="689.6" y="654.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.02%)</title><rect x="687.1" y="643.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="690.1" y="654.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (2 samples, 0.05%)</title><rect x="687.4" y="659.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="690.4" y="670.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.05%)</title><rect x="687.4" y="643.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="690.4" y="654.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.05%)</title><rect x="687.4" y="627.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="690.4" y="638.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.05%)</title><rect x="687.4" y="611.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="690.4" y="622.0"></text>
</g>
<g>
<title>_copy_from_iter_full (5 samples, 0.11%)</title><rect x="687.9" y="691.0" width="1.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="690.9" y="702.0"></text>
</g>
<g>
<title>copyin (3 samples, 0.07%)</title><rect x="688.2" y="675.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="691.2" y="686.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (3 samples, 0.07%)</title><rect x="688.2" y="659.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="691.2" y="670.0"></text>
</g>
<g>
<title>iov_iter_advance (1 samples, 0.02%)</title><rect x="689.0" y="675.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="692.0" y="686.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (7 samples, 0.16%)</title><rect x="689.3" y="691.0" width="1.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="692.3" y="702.0"></text>
</g>
<g>
<title>__alloc_skb (6 samples, 0.14%)</title><rect x="689.5" y="675.0" width="1.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="692.5" y="686.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (4 samples, 0.09%)</title><rect x="689.8" y="659.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="692.8" y="670.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (3 samples, 0.07%)</title><rect x="690.1" y="643.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="693.1" y="654.0"></text>
</g>
<g>
<title>__slab_alloc (1 samples, 0.02%)</title><rect x="690.6" y="627.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="693.6" y="638.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.02%)</title><rect x="690.9" y="659.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="693.9" y="670.0"></text>
</g>
<g>
<title>skb_entail (3 samples, 0.07%)</title><rect x="691.2" y="691.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="694.2" y="702.0"></text>
</g>
<g>
<title>tcp_send_mss (3 samples, 0.07%)</title><rect x="692.0" y="691.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="695.0" y="702.0"></text>
</g>
<g>
<title>tcp_current_mss (2 samples, 0.05%)</title><rect x="692.2" y="675.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="695.2" y="686.0"></text>
</g>
<g>
<title>tcp_tx_timestamp (2 samples, 0.05%)</title><rect x="692.8" y="691.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="695.8" y="702.0"></text>
</g>
<g>
<title>sockfd_lookup_light (3 samples, 0.07%)</title><rect x="693.3" y="739.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="696.3" y="750.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.02%)</title><rect x="693.3" y="723.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="696.3" y="734.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.05%)</title><rect x="693.6" y="723.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="696.6" y="734.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.02%)</title><rect x="693.9" y="707.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="696.9" y="718.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.14%)</title><rect x="694.1" y="819.0" width="1.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="697.1" y="830.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.14%)</title><rect x="694.1" y="803.0" width="1.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="697.1" y="814.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (5 samples, 0.11%)</title><rect x="694.1" y="787.0" width="1.4" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="697.1" y="798.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.02%)</title><rect x="694.4" y="771.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="697.4" y="782.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (3 samples, 0.07%)</title><rect x="694.7" y="771.0" width="0.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="697.7" y="782.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.02%)</title><rect x="694.7" y="755.0" width="0.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="697.7" y="766.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (2 samples, 0.05%)</title><rect x="694.9" y="755.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="697.9" y="766.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.02%)</title><rect x="695.5" y="787.0" width="0.2" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="698.5" y="798.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.05%)</title><rect x="695.7" y="819.0" width="0.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="698.7" y="830.0"></text>
</g>
<g>
<title>one/nio/net/Session.listen (1 samples, 0.02%)</title><rect x="696.3" y="851.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="699.3" y="862.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.listen (1 samples, 0.02%)</title><rect x="696.3" y="835.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="699.3" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.07%)</title><rect x="696.6" y="899.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="699.6" y="910.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.02%)</title><rect x="697.1" y="883.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="700.1" y="894.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.02%)</title><rect x="697.1" y="867.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="700.1" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer$$Lambda$62/2080080204.get (1 samples, 0.02%)</title><rect x="697.4" y="915.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="700.4" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.lambda$entity$1 (1 samples, 0.02%)</title><rect x="697.4" y="899.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="700.4" y="910.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.02%)</title><rect x="697.4" y="883.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="700.4" y="894.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.02%)</title><rect x="697.4" y="867.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="700.4" y="878.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="697.4" y="851.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="700.4" y="862.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="697.4" y="835.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="700.4" y="846.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="697.4" y="819.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="700.4" y="830.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.02%)</title><rect x="697.4" y="803.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="700.4" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer$$Lambda$85/1955586341.get (104 samples, 2.38%)</title><rect x="697.6" y="915.0" width="28.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="700.6" y="926.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.lambda$entity$2 (104 samples, 2.38%)</title><rect x="697.6" y="899.0" width="28.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="700.6" y="910.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.delete (104 samples, 2.38%)</title><rect x="697.6" y="883.0" width="28.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="700.6" y="894.0">ru..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (6 samples, 0.14%)</title><rect x="698.2" y="867.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="701.2" y="878.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (6 samples, 0.14%)</title><rect x="698.2" y="851.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="701.2" y="862.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (6 samples, 0.14%)</title><rect x="698.2" y="835.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="701.2" y="846.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (6 samples, 0.14%)</title><rect x="698.2" y="819.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="701.2" y="830.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.05%)</title><rect x="698.4" y="803.0" width="0.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="701.4" y="814.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="699.0" y="803.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="702.0" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.02%)</title><rect x="699.0" y="787.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="702.0" y="798.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.05%)</title><rect x="699.3" y="803.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="702.3" y="814.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.05%)</title><rect x="699.3" y="787.0" width="0.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="702.3" y="798.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.02%)</title><rect x="699.5" y="771.0" width="0.3" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="702.5" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.remove (96 samples, 2.20%)</title><rect x="699.8" y="867.0" width="25.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="702.8" y="878.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.remove (96 samples, 2.20%)</title><rect x="699.8" y="851.0" width="25.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="702.8" y="862.0">r..</text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicBoolean.get (1 samples, 0.02%)</title><rect x="699.8" y="835.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="702.8" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.lock (3 samples, 0.07%)</title><rect x="700.1" y="835.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="703.1" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (3 samples, 0.07%)</title><rect x="700.1" y="819.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="703.1" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (3 samples, 0.07%)</title><rect x="700.1" y="803.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="703.1" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (3 samples, 0.07%)</title><rect x="700.1" y="787.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="703.1" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (3 samples, 0.07%)</title><rect x="700.1" y="771.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="703.1" y="782.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (3 samples, 0.07%)</title><rect x="700.1" y="755.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="703.1" y="766.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.02%)</title><rect x="700.1" y="739.0" width="0.2" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="703.1" y="750.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.02%)</title><rect x="700.1" y="723.0" width="0.2" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="703.1" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="700.1" y="707.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="703.1" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="700.1" y="691.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="703.1" y="702.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.02%)</title><rect x="700.1" y="675.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="703.1" y="686.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.02%)</title><rect x="700.1" y="659.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="703.1" y="670.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.02%)</title><rect x="700.1" y="643.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="703.1" y="654.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.02%)</title><rect x="700.1" y="627.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="703.1" y="638.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.05%)</title><rect x="700.3" y="739.0" width="0.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="703.3" y="750.0"></text>
</g>
<g>
<title>__pthread_cond_wait (2 samples, 0.05%)</title><rect x="700.3" y="723.0" width="0.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="703.3" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="700.6" y="707.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="703.6" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="700.6" y="691.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="703.6" y="702.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.02%)</title><rect x="700.6" y="675.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="703.6" y="686.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.02%)</title><rect x="700.6" y="659.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="703.6" y="670.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.02%)</title><rect x="700.6" y="643.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="703.6" y="654.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.02%)</title><rect x="700.6" y="627.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="703.6" y="638.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="700.6" y="611.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="703.6" y="622.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.02%)</title><rect x="700.6" y="595.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="703.6" y="606.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="700.6" y="579.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="703.6" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.unlock (3 samples, 0.07%)</title><rect x="700.9" y="835.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="703.9" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.07%)</title><rect x="700.9" y="819.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="703.9" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 0.07%)</title><rect x="700.9" y="803.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="703.9" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.07%)</title><rect x="700.9" y="787.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="703.9" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.07%)</title><rect x="700.9" y="771.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="703.9" y="782.0"></text>
</g>
<g>
<title>__pthread_cond_signal (3 samples, 0.07%)</title><rect x="700.9" y="755.0" width="0.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="703.9" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.05%)</title><rect x="701.1" y="739.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="704.1" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.05%)</title><rect x="701.1" y="723.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="704.1" y="734.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.05%)</title><rect x="701.1" y="707.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="704.1" y="718.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.05%)</title><rect x="701.1" y="691.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="704.1" y="702.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.05%)</title><rect x="701.1" y="675.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="704.1" y="686.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.02%)</title><rect x="701.1" y="659.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="704.1" y="670.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.02%)</title><rect x="701.4" y="659.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="704.4" y="670.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.02%)</title><rect x="701.4" y="643.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="704.4" y="654.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="701.4" y="627.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="704.4" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.remove (88 samples, 2.01%)</title><rect x="701.7" y="835.0" width="23.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="704.7" y="846.0">r..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (86 samples, 1.97%)</title><rect x="701.7" y="819.0" width="23.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="704.7" y="830.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (86 samples, 1.97%)</title><rect x="701.7" y="803.0" width="23.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="704.7" y="814.0">j..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.05%)</title><rect x="703.0" y="787.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="706.0" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (2 samples, 0.05%)</title><rect x="703.6" y="787.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="706.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (2 samples, 0.05%)</title><rect x="703.6" y="771.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="706.6" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.05%)</title><rect x="703.6" y="755.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="706.6" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.02%)</title><rect x="703.8" y="739.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="706.8" y="750.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.02%)</title><rect x="703.8" y="723.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="706.8" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (77 samples, 1.76%)</title><rect x="704.1" y="787.0" width="20.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="707.1" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (76 samples, 1.74%)</title><rect x="704.4" y="771.0" width="20.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="707.4" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (47 samples, 1.08%)</title><rect x="712.2" y="755.0" width="12.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="715.2" y="766.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (45 samples, 1.03%)</title><rect x="712.5" y="739.0" width="12.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="715.5" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.base (5 samples, 0.11%)</title><rect x="718.7" y="723.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="721.7" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (8 samples, 0.18%)</title><rect x="720.1" y="723.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="723.1" y="734.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (4 samples, 0.09%)</title><rect x="721.1" y="707.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="724.1" y="718.0"></text>
</g>
<g>
<title>jdk/internal/util/ArraysSupport.vectorizedMismatch (7 samples, 0.16%)</title><rect x="722.2" y="723.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="725.2" y="734.0"></text>
</g>
<g>
<title>vtable stub (2 samples, 0.05%)</title><rect x="724.1" y="723.0" width="0.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="727.1" y="734.0"></text>
</g>
<g>
<title>jdk/internal/util/ArraysSupport.vectorizedMismatch (1 samples, 0.02%)</title><rect x="724.6" y="739.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="727.6" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Value.getData (2 samples, 0.05%)</title><rect x="724.9" y="819.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="727.9" y="830.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (2 samples, 0.05%)</title><rect x="724.9" y="803.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="727.9" y="814.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (2 samples, 0.05%)</title><rect x="724.9" y="787.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="727.9" y="798.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (1 samples, 0.02%)</title><rect x="725.2" y="771.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="728.2" y="782.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="725.2" y="755.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="728.2" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.setToFlush (1 samples, 0.02%)</title><rect x="725.5" y="835.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="728.5" y="846.0"></text>
</g>
<g>
<title>[worker-2 tid=25392] (573 samples, 13.12%)</title><rect x="725.7" y="1011.0" width="154.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="728.7" y="1022.0">[worker-2 tid=25392]</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.02%)</title><rect x="725.7" y="995.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="728.7" y="1006.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.02%)</title><rect x="725.7" y="979.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="728.7" y="990.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.97] (1 samples, 0.02%)</title><rect x="725.7" y="963.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="728.7" y="974.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (1 samples, 0.02%)</title><rect x="725.7" y="947.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="728.7" y="958.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.02%)</title><rect x="725.7" y="931.0" width="0.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="728.7" y="942.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.05%)</title><rect x="726.0" y="995.0" width="0.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="729.0" y="1006.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (2 samples, 0.05%)</title><rect x="726.0" y="979.0" width="0.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="729.0" y="990.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.05%)</title><rect x="726.0" y="963.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="729.0" y="974.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.05%)</title><rect x="726.0" y="947.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="729.0" y="958.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.05%)</title><rect x="726.0" y="931.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="729.0" y="942.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.05%)</title><rect x="726.0" y="915.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="729.0" y="926.0"></text>
</g>
<g>
<title>futex_wait (2 samples, 0.05%)</title><rect x="726.0" y="899.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="729.0" y="910.0"></text>
</g>
<g>
<title>__hrtimer_init (2 samples, 0.05%)</title><rect x="726.0" y="883.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="729.0" y="894.0"></text>
</g>
<g>
<title>java/lang/Thread.run (570 samples, 13.05%)</title><rect x="726.5" y="995.0" width="154.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="729.5" y="1006.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (570 samples, 13.05%)</title><rect x="726.5" y="979.0" width="154.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="729.5" y="990.0">java/util/concurren..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (570 samples, 13.05%)</title><rect x="726.5" y="963.0" width="154.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="729.5" y="974.0">java/util/concurren..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.lock (1 samples, 0.02%)</title><rect x="726.5" y="947.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="729.5" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.02%)</title><rect x="726.5" y="931.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="729.5" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.tryAcquire (1 samples, 0.02%)</title><rect x="726.5" y="915.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="729.5" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (1 samples, 0.02%)</title><rect x="726.5" y="899.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="729.5" y="910.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.02%)</title><rect x="726.5" y="883.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="729.5" y="894.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (1 samples, 0.02%)</title><rect x="726.5" y="867.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="729.5" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (155 samples, 3.55%)</title><rect x="726.8" y="947.0" width="41.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="729.8" y="958.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (150 samples, 3.43%)</title><rect x="727.9" y="931.0" width="40.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="730.9" y="942.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.dequeue (1 samples, 0.02%)</title><rect x="728.4" y="915.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="731.4" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (112 samples, 2.56%)</title><rect x="728.7" y="915.0" width="30.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="731.7" y="926.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (17 samples, 0.39%)</title><rect x="729.5" y="899.0" width="4.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="732.5" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (17 samples, 0.39%)</title><rect x="729.5" y="883.0" width="4.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="732.5" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (14 samples, 0.32%)</title><rect x="730.3" y="867.0" width="3.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="733.3" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (14 samples, 0.32%)</title><rect x="730.3" y="851.0" width="3.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="733.3" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (1 samples, 0.02%)</title><rect x="730.3" y="835.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="733.3" y="846.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (13 samples, 0.30%)</title><rect x="730.6" y="835.0" width="3.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="733.6" y="846.0"></text>
</g>
<g>
<title>__pthread_cond_signal (13 samples, 0.30%)</title><rect x="730.6" y="819.0" width="3.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="733.6" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (13 samples, 0.30%)</title><rect x="730.6" y="803.0" width="3.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="733.6" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (13 samples, 0.30%)</title><rect x="730.6" y="787.0" width="3.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="733.6" y="798.0"></text>
</g>
<g>
<title>__x64_sys_futex (12 samples, 0.27%)</title><rect x="730.9" y="771.0" width="3.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="733.9" y="782.0"></text>
</g>
<g>
<title>do_futex (12 samples, 0.27%)</title><rect x="730.9" y="755.0" width="3.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="733.9" y="766.0"></text>
</g>
<g>
<title>futex_wake (12 samples, 0.27%)</title><rect x="730.9" y="739.0" width="3.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="733.9" y="750.0"></text>
</g>
<g>
<title>hash_futex (2 samples, 0.05%)</title><rect x="730.9" y="723.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="733.9" y="734.0"></text>
</g>
<g>
<title>wake_up_q (10 samples, 0.23%)</title><rect x="731.4" y="723.0" width="2.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="734.4" y="734.0"></text>
</g>
<g>
<title>try_to_wake_up (10 samples, 0.23%)</title><rect x="731.4" y="707.0" width="2.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="734.4" y="718.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (9 samples, 0.21%)</title><rect x="731.7" y="691.0" width="2.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="734.7" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (92 samples, 2.11%)</title><rect x="734.1" y="899.0" width="24.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="737.1" y="910.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (92 samples, 2.11%)</title><rect x="734.1" y="883.0" width="24.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="737.1" y="894.0">j..</text>
</g>
<g>
<title>Unsafe_Park (35 samples, 0.80%)</title><rect x="734.6" y="867.0" width="9.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="737.6" y="878.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.02%)</title><rect x="734.9" y="851.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="737.9" y="862.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (6 samples, 0.14%)</title><rect x="735.2" y="851.0" width="1.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="738.2" y="862.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.02%)</title><rect x="735.7" y="835.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="738.7" y="846.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.02%)</title><rect x="736.0" y="835.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="739.0" y="846.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.05%)</title><rect x="736.3" y="835.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="739.3" y="846.0"></text>
</g>
<g>
<title>Thread::is_interrupted(Thread*, bool) (1 samples, 0.02%)</title><rect x="736.8" y="851.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="739.8" y="862.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.02%)</title><rect x="737.1" y="851.0" width="0.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="740.1" y="862.0"></text>
</g>
<g>
<title>__lll_unlock_wake (23 samples, 0.53%)</title><rect x="737.3" y="851.0" width="6.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="740.3" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (12 samples, 0.27%)</title><rect x="740.3" y="835.0" width="3.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="743.3" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (12 samples, 0.27%)</title><rect x="740.3" y="819.0" width="3.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="743.3" y="830.0"></text>
</g>
<g>
<title>__x64_sys_futex (3 samples, 0.07%)</title><rect x="742.7" y="803.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="745.7" y="814.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.02%)</title><rect x="743.3" y="787.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="746.3" y="798.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.02%)</title><rect x="743.3" y="771.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="746.3" y="782.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.02%)</title><rect x="743.3" y="755.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="746.3" y="766.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (2 samples, 0.05%)</title><rect x="743.6" y="851.0" width="0.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="746.6" y="862.0"></text>
</g>
<g>
<title>[unknown] (55 samples, 1.26%)</title><rect x="744.1" y="867.0" width="14.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="747.1" y="878.0"></text>
</g>
<g>
<title>__condvar_dec_grefs (1 samples, 0.02%)</title><rect x="744.1" y="851.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="747.1" y="862.0"></text>
</g>
<g>
<title>__pthread_cond_wait (51 samples, 1.17%)</title><rect x="744.4" y="851.0" width="13.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="747.4" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (36 samples, 0.82%)</title><rect x="748.4" y="835.0" width="9.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="751.4" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (36 samples, 0.82%)</title><rect x="748.4" y="819.0" width="9.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="751.4" y="830.0"></text>
</g>
<g>
<title>__x64_sys_futex (30 samples, 0.69%)</title><rect x="750.0" y="803.0" width="8.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="753.0" y="814.0"></text>
</g>
<g>
<title>do_futex (28 samples, 0.64%)</title><rect x="750.6" y="787.0" width="7.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="753.6" y="798.0"></text>
</g>
<g>
<title>futex_wait (25 samples, 0.57%)</title><rect x="751.4" y="771.0" width="6.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="754.4" y="782.0"></text>
</g>
<g>
<title>futex_wait_queue_me (17 samples, 0.39%)</title><rect x="752.2" y="755.0" width="4.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="755.2" y="766.0"></text>
</g>
<g>
<title>plist_add (2 samples, 0.05%)</title><rect x="752.7" y="739.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="755.7" y="750.0"></text>
</g>
<g>
<title>schedule (13 samples, 0.30%)</title><rect x="753.3" y="739.0" width="3.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="756.3" y="750.0"></text>
</g>
<g>
<title>__sched_text_start (11 samples, 0.25%)</title><rect x="753.8" y="723.0" width="3.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="756.8" y="734.0"></text>
</g>
<g>
<title>finish_task_switch (9 samples, 0.21%)</title><rect x="754.4" y="707.0" width="2.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="757.4" y="718.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="756.5" y="691.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="759.5" y="702.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="756.5" y="675.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="759.5" y="686.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="756.5" y="659.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="759.5" y="670.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="756.5" y="643.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="759.5" y="654.0"></text>
</g>
<g>
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="756.5" y="627.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="759.5" y="638.0"></text>
</g>
<g>
<title>futex_wait_setup (5 samples, 0.11%)</title><rect x="756.8" y="755.0" width="1.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="759.8" y="766.0"></text>
</g>
<g>
<title>get_futex_key (2 samples, 0.05%)</title><rect x="756.8" y="739.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="759.8" y="750.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.0 (1 samples, 0.02%)</title><rect x="757.1" y="723.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="760.1" y="734.0"></text>
</g>
<g>
<title>get_futex_value_locked (2 samples, 0.05%)</title><rect x="757.3" y="739.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="760.3" y="750.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.02%)</title><rect x="757.9" y="739.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="760.9" y="750.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (3 samples, 0.07%)</title><rect x="758.1" y="851.0" width="0.8" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="761.1" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (2 samples, 0.05%)</title><rect x="758.9" y="915.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="761.9" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (2 samples, 0.05%)</title><rect x="758.9" y="899.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="761.9" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (2 samples, 0.05%)</title><rect x="758.9" y="883.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="761.9" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1 samples, 0.02%)</title><rect x="759.5" y="915.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="762.5" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1 samples, 0.02%)</title><rect x="759.5" y="899.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="762.5" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (1 samples, 0.02%)</title><rect x="759.5" y="883.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="762.5" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (1 samples, 0.02%)</title><rect x="759.5" y="867.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="762.5" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (1 samples, 0.02%)</title><rect x="759.5" y="851.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="762.5" y="862.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.02%)</title><rect x="759.5" y="835.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="762.5" y="846.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (1 samples, 0.02%)</title><rect x="759.5" y="819.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="762.5" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (32 samples, 0.73%)</title><rect x="759.8" y="915.0" width="8.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="762.8" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (32 samples, 0.73%)</title><rect x="759.8" y="899.0" width="8.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="762.8" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (31 samples, 0.71%)</title><rect x="760.0" y="883.0" width="8.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="763.0" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (31 samples, 0.71%)</title><rect x="760.0" y="867.0" width="8.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="763.0" y="878.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (30 samples, 0.69%)</title><rect x="760.3" y="851.0" width="8.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="763.3" y="862.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.02%)</title><rect x="760.6" y="835.0" width="0.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="763.6" y="846.0"></text>
</g>
<g>
<title>Unsafe_Unpark (3 samples, 0.07%)</title><rect x="760.8" y="835.0" width="0.8" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="763.8" y="846.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.02%)</title><rect x="760.8" y="819.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="763.8" y="830.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.02%)</title><rect x="761.1" y="819.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="764.1" y="830.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_lock (1 samples, 0.02%)</title><rect x="761.4" y="819.0" width="0.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="764.4" y="830.0"></text>
</g>
<g>
<title>__pthread_cond_signal (25 samples, 0.57%)</title><rect x="761.6" y="835.0" width="6.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="764.6" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (20 samples, 0.46%)</title><rect x="763.0" y="819.0" width="5.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="766.0" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (20 samples, 0.46%)</title><rect x="763.0" y="803.0" width="5.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="766.0" y="814.0"></text>
</g>
<g>
<title>__x64_sys_futex (20 samples, 0.46%)</title><rect x="763.0" y="787.0" width="5.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="766.0" y="798.0"></text>
</g>
<g>
<title>do_futex (20 samples, 0.46%)</title><rect x="763.0" y="771.0" width="5.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="766.0" y="782.0"></text>
</g>
<g>
<title>futex_wake (20 samples, 0.46%)</title><rect x="763.0" y="755.0" width="5.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="766.0" y="766.0"></text>
</g>
<g>
<title>_raw_spin_lock (2 samples, 0.05%)</title><rect x="763.3" y="739.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="766.3" y="750.0"></text>
</g>
<g>
<title>mark_wake_futex (2 samples, 0.05%)</title><rect x="763.8" y="739.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="766.8" y="750.0"></text>
</g>
<g>
<title>wake_up_q (15 samples, 0.34%)</title><rect x="764.3" y="739.0" width="4.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="767.3" y="750.0"></text>
</g>
<g>
<title>try_to_wake_up (15 samples, 0.34%)</title><rect x="764.3" y="723.0" width="4.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="767.3" y="734.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (15 samples, 0.34%)</title><rect x="764.3" y="707.0" width="4.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="767.3" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.lambda$executeAsync$3 (1 samples, 0.02%)</title><rect x="768.4" y="931.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="771.4" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer$$Lambda$65/1115085888.run (414 samples, 9.48%)</title><rect x="768.7" y="947.0" width="111.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="771.7" y="958.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.lambda$executeAsync$3 (414 samples, 9.48%)</title><rect x="768.7" y="931.0" width="111.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="771.7" y="942.0">ru/mail/polis..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (314 samples, 7.19%)</title><rect x="768.7" y="915.0" width="84.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="771.7" y="926.0">one/nio/ht..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (7 samples, 0.16%)</title><rect x="768.7" y="899.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="771.7" y="910.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (7 samples, 0.16%)</title><rect x="768.7" y="883.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="771.7" y="894.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (2 samples, 0.05%)</title><rect x="769.5" y="867.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="772.5" y="878.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.02%)</title><rect x="770.0" y="867.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="773.0" y="878.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.02%)</title><rect x="770.0" y="851.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="773.0" y="862.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.02%)</title><rect x="770.0" y="835.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="773.0" y="846.0"></text>
</g>
<g>
<title>java/lang/CharacterData.of (1 samples, 0.02%)</title><rect x="770.0" y="819.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="773.0" y="830.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.02%)</title><rect x="770.3" y="867.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="773.3" y="878.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.02%)</title><rect x="770.3" y="851.0" width="0.3" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="773.3" y="862.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (304 samples, 6.96%)</title><rect x="770.6" y="899.0" width="82.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="773.6" y="910.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (9 samples, 0.21%)</title><rect x="770.6" y="883.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="773.6" y="894.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.05%)</title><rect x="771.6" y="867.0" width="0.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="774.6" y="878.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (3 samples, 0.07%)</title><rect x="772.2" y="867.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="775.2" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (3 samples, 0.07%)</title><rect x="772.2" y="851.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="775.2" y="862.0"></text>
</g>
<g>
<title>java/lang/String.charAt (3 samples, 0.07%)</title><rect x="772.2" y="835.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="775.2" y="846.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (295 samples, 6.75%)</title><rect x="773.0" y="883.0" width="79.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="776.0" y="894.0">one/nio/n..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.&lt;init&gt; (1 samples, 0.02%)</title><rect x="773.0" y="867.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="776.0" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer$$Lambda$85/1955586341.get (1 samples, 0.02%)</title><rect x="773.0" y="851.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="776.0" y="862.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (294 samples, 6.73%)</title><rect x="773.3" y="867.0" width="79.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="776.3" y="878.0">one/nio/n..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (293 samples, 6.71%)</title><rect x="773.3" y="851.0" width="79.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="776.3" y="862.0">one/nio/n..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (293 samples, 6.71%)</title><rect x="773.3" y="835.0" width="79.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="776.3" y="846.0">one/nio/n..</text>
</g>
<g>
<title>.annobin_send.c (282 samples, 6.45%)</title><rect x="773.8" y="819.0" width="76.2" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="776.8" y="830.0">.annobin..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (276 samples, 6.32%)</title><rect x="775.4" y="803.0" width="74.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="778.4" y="814.0">entry_SY..</text>
</g>
<g>
<title>do_syscall_64 (276 samples, 6.32%)</title><rect x="775.4" y="787.0" width="74.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="778.4" y="798.0">do_sysca..</text>
</g>
<g>
<title>__x64_sys_sendto (274 samples, 6.27%)</title><rect x="776.0" y="771.0" width="74.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="779.0" y="782.0">__x64_sy..</text>
</g>
<g>
<title>__sys_sendto (274 samples, 6.27%)</title><rect x="776.0" y="755.0" width="74.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="779.0" y="766.0">__sys_se..</text>
</g>
<g>
<title>import_single_range (1 samples, 0.02%)</title><rect x="776.8" y="739.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="779.8" y="750.0"></text>
</g>
<g>
<title>sock_sendmsg (267 samples, 6.11%)</title><rect x="777.0" y="739.0" width="72.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="780.0" y="750.0">sock_sen..</text>
</g>
<g>
<title>security_socket_sendmsg (3 samples, 0.07%)</title><rect x="777.0" y="723.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="780.0" y="734.0"></text>
</g>
<g>
<title>sock_has_perm (3 samples, 0.07%)</title><rect x="777.0" y="707.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="780.0" y="718.0"></text>
</g>
<g>
<title>avc_has_perm (2 samples, 0.05%)</title><rect x="777.3" y="691.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="780.3" y="702.0"></text>
</g>
<g>
<title>tcp_sendmsg (264 samples, 6.04%)</title><rect x="777.9" y="723.0" width="71.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="780.9" y="734.0">tcp_send..</text>
</g>
<g>
<title>tcp_sendmsg_locked (263 samples, 6.02%)</title><rect x="778.1" y="707.0" width="71.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="781.1" y="718.0">tcp_send..</text>
</g>
<g>
<title>__tcp_push_pending_frames (243 samples, 5.56%)</title><rect x="778.9" y="691.0" width="65.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="781.9" y="702.0">__tcp_p..</text>
</g>
<g>
<title>tcp_write_xmit (243 samples, 5.56%)</title><rect x="778.9" y="675.0" width="65.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="781.9" y="686.0">tcp_wri..</text>
</g>
<g>
<title>__tcp_transmit_skb (229 samples, 5.24%)</title><rect x="780.3" y="659.0" width="61.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="783.3" y="670.0">__tcp_..</text>
</g>
<g>
<title>__ip_queue_xmit (222 samples, 5.08%)</title><rect x="781.1" y="643.0" width="60.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="784.1" y="654.0">__ip_q..</text>
</g>
<g>
<title>ip_local_out (60 samples, 1.37%)</title><rect x="781.1" y="627.0" width="16.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="784.1" y="638.0"></text>
</g>
<g>
<title>__ip_local_out (58 samples, 1.33%)</title><rect x="781.6" y="611.0" width="15.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="784.6" y="622.0"></text>
</g>
<g>
<title>nf_hook_slow (58 samples, 1.33%)</title><rect x="781.6" y="595.0" width="15.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="784.6" y="606.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="781.6" y="579.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="784.6" y="590.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (25 samples, 0.57%)</title><rect x="781.9" y="579.0" width="6.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="784.9" y="590.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (6 samples, 0.14%)</title><rect x="788.7" y="579.0" width="1.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="791.7" y="590.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (4 samples, 0.09%)</title><rect x="789.2" y="563.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="792.2" y="574.0"></text>
</g>
<g>
<title>iptable_raw_hook	[iptable_raw] (2 samples, 0.05%)</title><rect x="790.3" y="579.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="793.3" y="590.0"></text>
</g>
<g>
<title>ipv4_conntrack_local	[nf_conntrack] (3 samples, 0.07%)</title><rect x="790.8" y="579.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="793.8" y="590.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (17 samples, 0.39%)</title><rect x="791.6" y="579.0" width="4.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="794.6" y="590.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get	[nf_conntrack] (7 samples, 0.16%)</title><rect x="791.9" y="563.0" width="1.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="794.9" y="574.0"></text>
</g>
<g>
<title>hash_conntrack_raw	[nf_conntrack] (1 samples, 0.02%)</title><rect x="793.8" y="563.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="796.8" y="574.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet	[nf_conntrack] (7 samples, 0.16%)</title><rect x="794.1" y="563.0" width="1.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="797.1" y="574.0"></text>
</g>
<g>
<title>nf_ct_seq_offset	[nf_conntrack] (1 samples, 0.02%)</title><rect x="795.7" y="547.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="798.7" y="558.0"></text>
</g>
<g>
<title>nf_ct_get_tuple	[nf_conntrack] (1 samples, 0.02%)</title><rect x="795.9" y="563.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="798.9" y="574.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn	[nf_nat] (1 samples, 0.02%)</title><rect x="796.2" y="579.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="799.2" y="590.0"></text>
</g>
<g>
<title>selinux_ipv4_output (3 samples, 0.07%)</title><rect x="796.5" y="579.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="799.5" y="590.0"></text>
</g>
<g>
<title>netlbl_enabled (2 samples, 0.05%)</title><rect x="796.8" y="563.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="799.8" y="574.0"></text>
</g>
<g>
<title>ip_output (161 samples, 3.69%)</title><rect x="797.3" y="627.0" width="43.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="800.3" y="638.0">ip_o..</text>
</g>
<g>
<title>ip_finish_output2 (147 samples, 3.36%)</title><rect x="798.4" y="611.0" width="39.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="801.4" y="622.0">ip_..</text>
</g>
<g>
<title>__dev_queue_xmit (10 samples, 0.23%)</title><rect x="799.2" y="595.0" width="2.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="802.2" y="606.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.05%)</title><rect x="800.0" y="579.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="803.0" y="590.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (4 samples, 0.09%)</title><rect x="800.5" y="579.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="803.5" y="590.0"></text>
</g>
<g>
<title>loopback_xmit (3 samples, 0.07%)</title><rect x="800.8" y="563.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="803.8" y="574.0"></text>
</g>
<g>
<title>netif_rx (2 samples, 0.05%)</title><rect x="800.8" y="547.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="803.8" y="558.0"></text>
</g>
<g>
<title>netif_rx_internal (2 samples, 0.05%)</title><rect x="800.8" y="531.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="803.8" y="542.0"></text>
</g>
<g>
<title>enqueue_to_backlog (2 samples, 0.05%)</title><rect x="800.8" y="515.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="803.8" y="526.0"></text>
</g>
<g>
<title>tcp_wfree (1 samples, 0.02%)</title><rect x="801.3" y="547.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="804.3" y="558.0"></text>
</g>
<g>
<title>validate_xmit_skb (1 samples, 0.02%)</title><rect x="801.6" y="579.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="804.6" y="590.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (134 samples, 3.07%)</title><rect x="801.9" y="595.0" width="36.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="804.9" y="606.0">__l..</text>
</g>
<g>
<title>do_softirq.part.0 (134 samples, 3.07%)</title><rect x="801.9" y="579.0" width="36.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="804.9" y="590.0">do_..</text>
</g>
<g>
<title>do_softirq_own_stack (133 samples, 3.04%)</title><rect x="802.2" y="563.0" width="35.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="805.2" y="574.0">do_..</text>
</g>
<g>
<title>__softirqentry_text_start (133 samples, 3.04%)</title><rect x="802.2" y="547.0" width="35.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="805.2" y="558.0">__s..</text>
</g>
<g>
<title>net_rx_action (130 samples, 2.98%)</title><rect x="803.0" y="531.0" width="35.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="806.0" y="542.0">net..</text>
</g>
<g>
<title>process_backlog (129 samples, 2.95%)</title><rect x="803.2" y="515.0" width="34.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="806.2" y="526.0">pr..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (127 samples, 2.91%)</title><rect x="803.8" y="499.0" width="34.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="806.8" y="510.0">__..</text>
</g>
<g>
<title>__netif_receive_skb_core (2 samples, 0.05%)</title><rect x="804.0" y="483.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="807.0" y="494.0"></text>
</g>
<g>
<title>ip_rcv (124 samples, 2.84%)</title><rect x="804.6" y="483.0" width="33.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="807.6" y="494.0">ip..</text>
</g>
<g>
<title>ip_local_deliver (93 samples, 2.13%)</title><rect x="804.6" y="467.0" width="25.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="807.6" y="478.0">i..</text>
</g>
<g>
<title>ip_local_deliver_finish (77 samples, 1.76%)</title><rect x="804.9" y="451.0" width="20.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="807.9" y="462.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (76 samples, 1.74%)</title><rect x="805.1" y="435.0" width="20.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="808.1" y="446.0"></text>
</g>
<g>
<title>tcp_v4_rcv (75 samples, 1.72%)</title><rect x="805.4" y="419.0" width="20.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="808.4" y="430.0"></text>
</g>
<g>
<title>__inet_lookup_established (9 samples, 0.21%)</title><rect x="806.2" y="403.0" width="2.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="809.2" y="414.0"></text>
</g>
<g>
<title>inet_ehashfn (1 samples, 0.02%)</title><rect x="808.4" y="387.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="811.4" y="398.0"></text>
</g>
<g>
<title>_raw_spin_lock (2 samples, 0.05%)</title><rect x="808.6" y="403.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="811.6" y="414.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.02%)</title><rect x="809.2" y="403.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="812.2" y="414.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (1 samples, 0.02%)</title><rect x="809.2" y="387.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="812.2" y="398.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (1 samples, 0.02%)</title><rect x="809.2" y="371.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="812.2" y="382.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (60 samples, 1.37%)</title><rect x="809.5" y="403.0" width="16.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="812.5" y="414.0"></text>
</g>
<g>
<title>tcp_rcv_established (60 samples, 1.37%)</title><rect x="809.5" y="387.0" width="16.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="812.5" y="398.0"></text>
</g>
<g>
<title>sk_reset_timer (7 samples, 0.16%)</title><rect x="810.0" y="371.0" width="1.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="813.0" y="382.0"></text>
</g>
<g>
<title>mod_timer (7 samples, 0.16%)</title><rect x="810.0" y="355.0" width="1.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="813.0" y="366.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (5 samples, 0.11%)</title><rect x="810.3" y="339.0" width="1.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="813.3" y="350.0"></text>
</g>
<g>
<title>lock_timer_base (1 samples, 0.02%)</title><rect x="811.6" y="339.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="814.6" y="350.0"></text>
</g>
<g>
<title>tcp_ack (20 samples, 0.46%)</title><rect x="811.9" y="371.0" width="5.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="814.9" y="382.0"></text>
</g>
<g>
<title>__kfree_skb (7 samples, 0.16%)</title><rect x="812.7" y="355.0" width="1.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="815.7" y="366.0"></text>
</g>
<g>
<title>__slab_free (3 samples, 0.07%)</title><rect x="812.7" y="339.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="815.7" y="350.0"></text>
</g>
<g>
<title>kfree (2 samples, 0.05%)</title><rect x="813.5" y="339.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="816.5" y="350.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.02%)</title><rect x="814.0" y="339.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="817.0" y="350.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.02%)</title><rect x="814.3" y="339.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="817.3" y="350.0"></text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.02%)</title><rect x="814.6" y="355.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="817.6" y="366.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.02%)</title><rect x="814.9" y="355.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="817.9" y="366.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.02%)</title><rect x="815.1" y="355.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="818.1" y="366.0"></text>
</g>
<g>
<title>put_cpu_partial (1 samples, 0.02%)</title><rect x="815.1" y="339.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="818.1" y="350.0"></text>
</g>
<g>
<title>rb_erase (1 samples, 0.02%)</title><rect x="815.4" y="355.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="818.4" y="366.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (1 samples, 0.02%)</title><rect x="815.7" y="355.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="818.7" y="366.0"></text>
</g>
<g>
<title>tcp_newly_delivered (1 samples, 0.02%)</title><rect x="815.9" y="355.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="818.9" y="366.0"></text>
</g>
<g>
<title>tcp_rack_update_reo_wnd (1 samples, 0.02%)</title><rect x="816.2" y="355.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="819.2" y="366.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (3 samples, 0.07%)</title><rect x="816.5" y="355.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="819.5" y="366.0"></text>
</g>
<g>
<title>tcp_check_space (4 samples, 0.09%)</title><rect x="817.3" y="371.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="820.3" y="382.0"></text>
</g>
<g>
<title>tcp_data_queue (26 samples, 0.60%)</title><rect x="818.4" y="371.0" width="7.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="821.4" y="382.0"></text>
</g>
<g>
<title>sock_def_readable (23 samples, 0.53%)</title><rect x="818.9" y="355.0" width="6.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="821.9" y="366.0"></text>
</g>
<g>
<title>__wake_up_common_lock (20 samples, 0.46%)</title><rect x="819.7" y="339.0" width="5.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="822.7" y="350.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (20 samples, 0.46%)</title><rect x="819.7" y="323.0" width="5.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="822.7" y="334.0"></text>
</g>
<g>
<title>tcp_event_data_recv (1 samples, 0.02%)</title><rect x="825.1" y="355.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="828.1" y="366.0"></text>
</g>
<g>
<title>tcp_urg (1 samples, 0.02%)</title><rect x="825.4" y="371.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="828.4" y="382.0"></text>
</g>
<g>
<title>nf_hook_slow (15 samples, 0.34%)</title><rect x="825.7" y="451.0" width="4.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="828.7" y="462.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (9 samples, 0.21%)</title><rect x="825.7" y="435.0" width="2.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="828.7" y="446.0"></text>
</g>
<g>
<title>conntrack_mt	[xt_conntrack] (1 samples, 0.02%)</title><rect x="827.8" y="419.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="830.8" y="430.0"></text>
</g>
<g>
<title>iptable_filter_hook	[iptable_filter] (2 samples, 0.05%)</title><rect x="828.1" y="435.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="831.1" y="446.0"></text>
</g>
<g>
<title>iptable_security_hook	[iptable_security] (1 samples, 0.02%)</title><rect x="828.6" y="435.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="831.6" y="446.0"></text>
</g>
<g>
<title>nf_confirm	[nf_conntrack] (1 samples, 0.02%)</title><rect x="828.9" y="435.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="831.9" y="446.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events	[nf_conntrack] (1 samples, 0.02%)</title><rect x="828.9" y="419.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="831.9" y="430.0"></text>
</g>
<g>
<title>nf_nat_inet_fn	[nf_nat] (2 samples, 0.05%)</title><rect x="829.2" y="435.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="832.2" y="446.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (2 samples, 0.05%)</title><rect x="829.7" y="467.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="832.7" y="478.0"></text>
</g>
<g>
<title>ip_rcv_finish (2 samples, 0.05%)</title><rect x="830.2" y="467.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="833.2" y="478.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.0 (1 samples, 0.02%)</title><rect x="830.5" y="451.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="833.5" y="462.0"></text>
</g>
<g>
<title>nf_hook_slow (27 samples, 0.62%)</title><rect x="830.8" y="467.0" width="7.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="833.8" y="478.0"></text>
</g>
<g>
<title>ip_sabotage_in	[br_netfilter] (2 samples, 0.05%)</title><rect x="831.1" y="451.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="834.1" y="462.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (20 samples, 0.46%)</title><rect x="831.6" y="451.0" width="5.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="834.6" y="462.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag	[nf_defrag_ipv4] (2 samples, 0.05%)</title><rect x="837.0" y="451.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="840.0" y="462.0"></text>
</g>
<g>
<title>ipv4_conntrack_in	[nf_conntrack] (1 samples, 0.02%)</title><rect x="837.5" y="451.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="840.5" y="462.0"></text>
</g>
<g>
<title>nf_nat_ipv4_in	[nf_nat] (1 samples, 0.02%)</title><rect x="837.8" y="451.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="840.8" y="462.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn	[nf_nat] (1 samples, 0.02%)</title><rect x="837.8" y="435.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="840.8" y="446.0"></text>
</g>
<g>
<title>ip_finish_output (3 samples, 0.07%)</title><rect x="838.1" y="611.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="841.1" y="622.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.02%)</title><rect x="838.6" y="595.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="841.6" y="606.0"></text>
</g>
<g>
<title>nf_hook_slow (7 samples, 0.16%)</title><rect x="838.9" y="611.0" width="1.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="841.9" y="622.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (4 samples, 0.09%)</title><rect x="838.9" y="595.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="841.9" y="606.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (1 samples, 0.02%)</title><rect x="840.0" y="595.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="843.0" y="606.0"></text>
</g>
<g>
<title>nf_confirm	[nf_conntrack] (1 samples, 0.02%)</title><rect x="840.2" y="595.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="843.2" y="606.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events	[nf_conntrack] (1 samples, 0.02%)</title><rect x="840.2" y="579.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="843.2" y="590.0"></text>
</g>
<g>
<title>selinux_ip_postroute (1 samples, 0.02%)</title><rect x="840.5" y="595.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="843.5" y="606.0"></text>
</g>
<g>
<title>skb_push (1 samples, 0.02%)</title><rect x="840.8" y="627.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="843.8" y="638.0"></text>
</g>
<g>
<title>__skb_clone (2 samples, 0.05%)</title><rect x="841.1" y="643.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="844.1" y="654.0"></text>
</g>
<g>
<title>__copy_skb_header (1 samples, 0.02%)</title><rect x="841.3" y="627.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="844.3" y="638.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (2 samples, 0.05%)</title><rect x="841.6" y="643.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="844.6" y="654.0"></text>
</g>
<g>
<title>ktime_get (4 samples, 0.09%)</title><rect x="842.1" y="659.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="845.1" y="670.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.05%)</title><rect x="842.7" y="643.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="845.7" y="654.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (4 samples, 0.09%)</title><rect x="843.2" y="659.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="846.2" y="670.0"></text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.07%)</title><rect x="843.5" y="643.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="846.5" y="654.0"></text>
</g>
<g>
<title>mod_timer (3 samples, 0.07%)</title><rect x="843.5" y="627.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="846.5" y="638.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="844.0" y="611.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="847.0" y="622.0"></text>
</g>
<g>
<title>tcp_small_queue_check.isra.0 (1 samples, 0.02%)</title><rect x="844.3" y="659.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="847.3" y="670.0"></text>
</g>
<g>
<title>_copy_from_iter_full (3 samples, 0.07%)</title><rect x="844.6" y="691.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="847.6" y="702.0"></text>
</g>
<g>
<title>copyin (2 samples, 0.05%)</title><rect x="844.8" y="675.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="847.8" y="686.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.02%)</title><rect x="845.1" y="659.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="848.1" y="670.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (7 samples, 0.16%)</title><rect x="845.4" y="691.0" width="1.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="848.4" y="702.0"></text>
</g>
<g>
<title>__alloc_skb (6 samples, 0.14%)</title><rect x="845.6" y="675.0" width="1.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="848.6" y="686.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (2 samples, 0.05%)</title><rect x="845.6" y="659.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="848.6" y="670.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (2 samples, 0.05%)</title><rect x="845.6" y="643.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="848.6" y="654.0"></text>
</g>
<g>
<title>__slab_alloc (1 samples, 0.02%)</title><rect x="845.9" y="627.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="848.9" y="638.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (4 samples, 0.09%)</title><rect x="846.2" y="659.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="849.2" y="670.0"></text>
</g>
<g>
<title>__slab_alloc (1 samples, 0.02%)</title><rect x="847.0" y="643.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="850.0" y="654.0"></text>
</g>
<g>
<title>tcp_push (1 samples, 0.02%)</title><rect x="847.3" y="691.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="850.3" y="702.0"></text>
</g>
<g>
<title>tcp_send_mss (5 samples, 0.11%)</title><rect x="847.5" y="691.0" width="1.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="850.5" y="702.0"></text>
</g>
<g>
<title>tcp_current_mss (4 samples, 0.09%)</title><rect x="847.8" y="675.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="850.8" y="686.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.05%)</title><rect x="848.3" y="659.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="851.3" y="670.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.02%)</title><rect x="848.9" y="691.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="851.9" y="702.0"></text>
</g>
<g>
<title>sockfd_lookup_light (3 samples, 0.07%)</title><rect x="849.2" y="739.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="852.2" y="750.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.07%)</title><rect x="849.2" y="723.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="852.2" y="734.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.05%)</title><rect x="849.4" y="707.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="852.4" y="718.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.05%)</title><rect x="850.0" y="819.0" width="0.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="853.0" y="830.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.16%)</title><rect x="850.5" y="819.0" width="1.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="853.5" y="830.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.16%)</title><rect x="850.5" y="803.0" width="1.9" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="853.5" y="814.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (6 samples, 0.14%)</title><rect x="850.5" y="787.0" width="1.6" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="853.5" y="798.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.02%)</title><rect x="851.0" y="771.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="854.0" y="782.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (2 samples, 0.05%)</title><rect x="851.3" y="771.0" width="0.6" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="854.3" y="782.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.02%)</title><rect x="851.9" y="771.0" width="0.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="854.9" y="782.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (1 samples, 0.02%)</title><rect x="851.9" y="755.0" width="0.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="854.9" y="766.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.02%)</title><rect x="852.1" y="787.0" width="0.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="855.1" y="798.0"></text>
</g>
<g>
<title>one/nio/net/Session.listen (1 samples, 0.02%)</title><rect x="852.4" y="851.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="855.4" y="862.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.listen (1 samples, 0.02%)</title><rect x="852.4" y="835.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="855.4" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.05%)</title><rect x="852.7" y="899.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="855.7" y="910.0"></text>
</g>
<g>
<title>one/nio/server/Server.incRequestsProcessed (1 samples, 0.02%)</title><rect x="853.2" y="899.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="856.2" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.incrementAndGet (1 samples, 0.02%)</title><rect x="853.2" y="883.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="856.2" y="894.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer$$Lambda$62/2080080204.get (1 samples, 0.02%)</title><rect x="853.5" y="915.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="856.5" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.lambda$entity$1 (1 samples, 0.02%)</title><rect x="853.5" y="899.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="856.5" y="910.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.02%)</title><rect x="853.5" y="883.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="856.5" y="894.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.02%)</title><rect x="853.5" y="867.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="856.5" y="878.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="853.5" y="851.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="856.5" y="862.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="853.5" y="835.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="856.5" y="846.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="853.5" y="819.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="856.5" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.02%)</title><rect x="853.5" y="803.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="856.5" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.02%)</title><rect x="853.5" y="787.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="856.5" y="798.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.02%)</title><rect x="853.5" y="771.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="856.5" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer$$Lambda$85/1955586341.get (99 samples, 2.27%)</title><rect x="853.7" y="915.0" width="26.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="856.7" y="926.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.lambda$entity$2 (99 samples, 2.27%)</title><rect x="853.7" y="899.0" width="26.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="856.7" y="910.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.delete (99 samples, 2.27%)</title><rect x="853.7" y="883.0" width="26.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="856.7" y="894.0">r..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.09%)</title><rect x="853.7" y="867.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="856.7" y="878.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.07%)</title><rect x="854.0" y="851.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="857.0" y="862.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.07%)</title><rect x="854.0" y="835.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="857.0" y="846.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.07%)</title><rect x="854.0" y="819.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="857.0" y="830.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.02%)</title><rect x="854.6" y="803.0" width="0.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="857.6" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.remove (95 samples, 2.17%)</title><rect x="854.8" y="867.0" width="25.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="857.8" y="878.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.remove (95 samples, 2.17%)</title><rect x="854.8" y="851.0" width="25.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="857.8" y="862.0">r..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.lock (6 samples, 0.14%)</title><rect x="854.8" y="835.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="857.8" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (6 samples, 0.14%)</title><rect x="854.8" y="819.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="857.8" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (3 samples, 0.07%)</title><rect x="854.8" y="803.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="857.8" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (3 samples, 0.07%)</title><rect x="854.8" y="787.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="857.8" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (3 samples, 0.07%)</title><rect x="854.8" y="771.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="857.8" y="782.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (3 samples, 0.07%)</title><rect x="854.8" y="755.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="857.8" y="766.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.02%)</title><rect x="854.8" y="739.0" width="0.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="857.8" y="750.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.02%)</title><rect x="854.8" y="723.0" width="0.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="857.8" y="734.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.05%)</title><rect x="855.1" y="739.0" width="0.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="858.1" y="750.0"></text>
</g>
<g>
<title>__pthread_cond_wait (2 samples, 0.05%)</title><rect x="855.1" y="723.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="858.1" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquire (3 samples, 0.07%)</title><rect x="855.6" y="803.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="858.6" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.setExclusiveOwnerThread (3 samples, 0.07%)</title><rect x="855.6" y="787.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="858.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.unlock (5 samples, 0.11%)</title><rect x="856.4" y="835.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="859.4" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (5 samples, 0.11%)</title><rect x="856.4" y="819.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="859.4" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (5 samples, 0.11%)</title><rect x="856.4" y="803.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="859.4" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (5 samples, 0.11%)</title><rect x="856.4" y="787.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="859.4" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (5 samples, 0.11%)</title><rect x="856.4" y="771.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="859.4" y="782.0"></text>
</g>
<g>
<title>__pthread_cond_signal (5 samples, 0.11%)</title><rect x="856.4" y="755.0" width="1.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="859.4" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.07%)</title><rect x="857.0" y="739.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="860.0" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.07%)</title><rect x="857.0" y="723.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="860.0" y="734.0"></text>
</g>
<g>
<title>__x64_sys_futex (3 samples, 0.07%)</title><rect x="857.0" y="707.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="860.0" y="718.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.07%)</title><rect x="857.0" y="691.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="860.0" y="702.0"></text>
</g>
<g>
<title>futex_wake (3 samples, 0.07%)</title><rect x="857.0" y="675.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="860.0" y="686.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.02%)</title><rect x="857.0" y="659.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="860.0" y="670.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.05%)</title><rect x="857.3" y="659.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="860.3" y="670.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.05%)</title><rect x="857.3" y="643.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="860.3" y="654.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.05%)</title><rect x="857.3" y="627.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="860.3" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.remove (82 samples, 1.88%)</title><rect x="857.8" y="835.0" width="22.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="860.8" y="846.0">r..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (82 samples, 1.88%)</title><rect x="857.8" y="819.0" width="22.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="860.8" y="830.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (82 samples, 1.88%)</title><rect x="857.8" y="803.0" width="22.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="860.8" y="814.0">j..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.02%)</title><rect x="859.1" y="787.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="862.1" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (1 samples, 0.02%)</title><rect x="859.4" y="787.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="862.4" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (1 samples, 0.02%)</title><rect x="859.4" y="771.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="862.4" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (75 samples, 1.72%)</title><rect x="859.7" y="787.0" width="20.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="862.7" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (74 samples, 1.69%)</title><rect x="860.0" y="771.0" width="19.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="863.0" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (39 samples, 0.89%)</title><rect x="869.4" y="755.0" width="10.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="872.4" y="766.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (36 samples, 0.82%)</title><rect x="869.7" y="739.0" width="9.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="872.7" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.base (3 samples, 0.07%)</title><rect x="876.2" y="723.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="879.2" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (2 samples, 0.05%)</title><rect x="877.0" y="723.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="880.0" y="734.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (1 samples, 0.02%)</title><rect x="877.2" y="707.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="880.2" y="718.0"></text>
</g>
<g>
<title>jdk/internal/util/ArraysSupport.vectorizedMismatch (7 samples, 0.16%)</title><rect x="877.5" y="723.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="880.5" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.02%)</title><rect x="879.4" y="739.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="882.4" y="750.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (1 samples, 0.02%)</title><rect x="879.4" y="723.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="882.4" y="734.0"></text>
</g>
<g>
<title>jdk/internal/util/ArraysSupport.vectorizedMismatch (1 samples, 0.02%)</title><rect x="879.7" y="739.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="882.7" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.setToFlush (2 samples, 0.05%)</title><rect x="879.9" y="835.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="882.9" y="846.0"></text>
</g>
<g>
<title>[worker-3 tid=25393] (573 samples, 13.12%)</title><rect x="880.5" y="1011.0" width="154.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="883.5" y="1022.0">[worker-3 tid=25393]</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.07%)</title><rect x="880.5" y="995.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="883.5" y="1006.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (3 samples, 0.07%)</title><rect x="880.5" y="979.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="883.5" y="990.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.02%)</title><rect x="880.5" y="963.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="883.5" y="974.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.02%)</title><rect x="880.5" y="947.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="883.5" y="958.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.97] (2 samples, 0.05%)</title><rect x="880.8" y="963.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="883.8" y="974.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (2 samples, 0.05%)</title><rect x="880.8" y="947.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="883.8" y="958.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.02%)</title><rect x="880.8" y="931.0" width="0.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="883.8" y="942.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.02%)</title><rect x="881.0" y="931.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="884.0" y="942.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="881.0" y="915.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="884.0" y="926.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="881.0" y="899.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="884.0" y="910.0"></text>
</g>
<g>
<title>java/lang/Thread.run (570 samples, 13.05%)</title><rect x="881.3" y="995.0" width="153.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="884.3" y="1006.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (570 samples, 13.05%)</title><rect x="881.3" y="979.0" width="153.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="884.3" y="990.0">java/util/concurren..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (570 samples, 13.05%)</title><rect x="881.3" y="963.0" width="153.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="884.3" y="974.0">java/util/concurren..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (158 samples, 3.62%)</title><rect x="881.3" y="947.0" width="42.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="884.3" y="958.0">java..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (156 samples, 3.57%)</title><rect x="881.8" y="931.0" width="42.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="884.8" y="942.0">java..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.dequeue (2 samples, 0.05%)</title><rect x="882.4" y="915.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="885.4" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicInteger.get (1 samples, 0.02%)</title><rect x="882.9" y="915.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="885.9" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (1 samples, 0.02%)</title><rect x="882.9" y="899.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="885.9" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (119 samples, 2.72%)</title><rect x="883.2" y="915.0" width="32.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="886.2" y="926.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.checkInterruptWhileWaiting (1 samples, 0.02%)</title><rect x="883.5" y="899.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="886.5" y="910.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (1 samples, 0.02%)</title><rect x="883.5" y="883.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="886.5" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.02%)</title><rect x="883.5" y="867.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="886.5" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (4 samples, 0.09%)</title><rect x="883.7" y="899.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="886.7" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (4 samples, 0.09%)</title><rect x="883.7" y="883.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="886.7" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (4 samples, 0.09%)</title><rect x="883.7" y="867.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="886.7" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (24 samples, 0.55%)</title><rect x="884.8" y="899.0" width="6.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="887.8" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (24 samples, 0.55%)</title><rect x="884.8" y="883.0" width="6.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="887.8" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (23 samples, 0.53%)</title><rect x="885.1" y="867.0" width="6.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="888.1" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (23 samples, 0.53%)</title><rect x="885.1" y="851.0" width="6.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="888.1" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (3 samples, 0.07%)</title><rect x="885.1" y="835.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="888.1" y="846.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (20 samples, 0.46%)</title><rect x="885.9" y="835.0" width="5.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="888.9" y="846.0"></text>
</g>
<g>
<title>Unsafe_Unpark (4 samples, 0.09%)</title><rect x="885.9" y="819.0" width="1.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="888.9" y="830.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.02%)</title><rect x="885.9" y="803.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="888.9" y="814.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="886.2" y="803.0" width="0.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="889.2" y="814.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (2 samples, 0.05%)</title><rect x="886.4" y="803.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="889.4" y="814.0"></text>
</g>
<g>
<title>__pthread_cond_signal (16 samples, 0.37%)</title><rect x="887.0" y="819.0" width="4.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="890.0" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (12 samples, 0.27%)</title><rect x="888.0" y="803.0" width="3.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="891.0" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (12 samples, 0.27%)</title><rect x="888.0" y="787.0" width="3.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="891.0" y="798.0"></text>
</g>
<g>
<title>__x64_sys_futex (10 samples, 0.23%)</title><rect x="888.6" y="771.0" width="2.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="891.6" y="782.0"></text>
</g>
<g>
<title>do_futex (10 samples, 0.23%)</title><rect x="888.6" y="755.0" width="2.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="891.6" y="766.0"></text>
</g>
<g>
<title>futex_wake (10 samples, 0.23%)</title><rect x="888.6" y="739.0" width="2.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="891.6" y="750.0"></text>
</g>
<g>
<title>wake_up_q (9 samples, 0.21%)</title><rect x="888.9" y="723.0" width="2.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="891.9" y="734.0"></text>
</g>
<g>
<title>try_to_wake_up (9 samples, 0.21%)</title><rect x="888.9" y="707.0" width="2.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="891.9" y="718.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (9 samples, 0.21%)</title><rect x="888.9" y="691.0" width="2.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="891.9" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (89 samples, 2.04%)</title><rect x="891.3" y="899.0" width="24.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="894.3" y="910.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (89 samples, 2.04%)</title><rect x="891.3" y="883.0" width="24.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="894.3" y="894.0">j..</text>
</g>
<g>
<title>Unsafe_Park (30 samples, 0.69%)</title><rect x="891.6" y="867.0" width="8.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="894.6" y="878.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (1 samples, 0.02%)</title><rect x="891.6" y="851.0" width="0.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="894.6" y="862.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (1 samples, 0.02%)</title><rect x="891.8" y="851.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="894.8" y="862.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.02%)</title><rect x="892.1" y="851.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="895.1" y="862.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (6 samples, 0.14%)</title><rect x="892.4" y="851.0" width="1.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="895.4" y="862.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (3 samples, 0.07%)</title><rect x="892.6" y="835.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="895.6" y="846.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="892.9" y="819.0" width="0.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="895.9" y="830.0"></text>
</g>
<g>
<title>__tls_get_addr_slow (1 samples, 0.02%)</title><rect x="893.2" y="819.0" width="0.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="896.2" y="830.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.05%)</title><rect x="893.4" y="835.0" width="0.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="896.4" y="846.0"></text>
</g>
<g>
<title>__lll_unlock_wake (18 samples, 0.41%)</title><rect x="894.0" y="851.0" width="4.8" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="897.0" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.23%)</title><rect x="896.1" y="835.0" width="2.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="899.1" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (10 samples, 0.23%)</title><rect x="896.1" y="819.0" width="2.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="899.1" y="830.0"></text>
</g>
<g>
<title>__x64_sys_futex (5 samples, 0.11%)</title><rect x="897.5" y="803.0" width="1.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="900.5" y="814.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.05%)</title><rect x="898.3" y="787.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="901.3" y="798.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.02%)</title><rect x="898.6" y="771.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="901.6" y="782.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="898.8" y="851.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="901.8" y="862.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.02%)</title><rect x="899.1" y="851.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="902.1" y="862.0"></text>
</g>
<g>
<title>pthread_mutex_trylock (1 samples, 0.02%)</title><rect x="899.4" y="851.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="902.4" y="862.0"></text>
</g>
<g>
<title>[unknown] (57 samples, 1.30%)</title><rect x="899.7" y="867.0" width="15.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="902.7" y="878.0"></text>
</g>
<g>
<title>__condvar_dec_grefs (1 samples, 0.02%)</title><rect x="899.7" y="851.0" width="0.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="902.7" y="862.0"></text>
</g>
<g>
<title>__pthread_cond_wait (47 samples, 1.08%)</title><rect x="899.9" y="851.0" width="12.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="902.9" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (34 samples, 0.78%)</title><rect x="903.4" y="835.0" width="9.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="906.4" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (34 samples, 0.78%)</title><rect x="903.4" y="819.0" width="9.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="906.4" y="830.0"></text>
</g>
<g>
<title>__x64_sys_futex (33 samples, 0.76%)</title><rect x="903.7" y="803.0" width="8.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="906.7" y="814.0"></text>
</g>
<g>
<title>do_futex (32 samples, 0.73%)</title><rect x="904.0" y="787.0" width="8.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="907.0" y="798.0"></text>
</g>
<g>
<title>futex_wait (30 samples, 0.69%)</title><rect x="904.5" y="771.0" width="8.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="907.5" y="782.0"></text>
</g>
<g>
<title>drop_futex_key_refs.isra.0 (1 samples, 0.02%)</title><rect x="906.1" y="755.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="909.1" y="766.0"></text>
</g>
<g>
<title>futex_wait_queue_me (16 samples, 0.37%)</title><rect x="906.4" y="755.0" width="4.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="909.4" y="766.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.02%)</title><rect x="907.5" y="739.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="910.5" y="750.0"></text>
</g>
<g>
<title>schedule (11 samples, 0.25%)</title><rect x="907.8" y="739.0" width="2.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="910.8" y="750.0"></text>
</g>
<g>
<title>__sched_text_start (10 samples, 0.23%)</title><rect x="908.0" y="723.0" width="2.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="911.0" y="734.0"></text>
</g>
<g>
<title>finish_task_switch (10 samples, 0.23%)</title><rect x="908.0" y="707.0" width="2.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="911.0" y="718.0"></text>
</g>
<g>
<title>futex_wait_setup (7 samples, 0.16%)</title><rect x="910.7" y="755.0" width="1.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="913.7" y="766.0"></text>
</g>
<g>
<title>get_futex_key (2 samples, 0.05%)</title><rect x="911.5" y="739.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="914.5" y="750.0"></text>
</g>
<g>
<title>get_futex_value_locked (2 samples, 0.05%)</title><rect x="912.1" y="739.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="915.1" y="750.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (5 samples, 0.11%)</title><rect x="912.6" y="851.0" width="1.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="915.6" y="862.0"></text>
</g>
<g>
<title>_dl_update_slotinfo (2 samples, 0.05%)</title><rect x="914.0" y="851.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="917.0" y="862.0"></text>
</g>
<g>
<title>pthread_mutex_trylock (2 samples, 0.05%)</title><rect x="914.5" y="851.0" width="0.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="917.5" y="862.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.02%)</title><rect x="915.1" y="867.0" width="0.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="918.1" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (6 samples, 0.14%)</title><rect x="915.3" y="915.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="918.3" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (6 samples, 0.14%)</title><rect x="915.3" y="899.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="918.3" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (4 samples, 0.09%)</title><rect x="915.3" y="883.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="918.3" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (4 samples, 0.09%)</title><rect x="915.3" y="867.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="918.3" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (4 samples, 0.09%)</title><rect x="915.3" y="851.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="918.3" y="862.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.05%)</title><rect x="915.9" y="835.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="918.9" y="846.0"></text>
</g>
<g>
<title>Unsafe_Park (2 samples, 0.05%)</title><rect x="915.9" y="819.0" width="0.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="918.9" y="830.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.02%)</title><rect x="915.9" y="803.0" width="0.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="918.9" y="814.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="915.9" y="787.0" width="0.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="918.9" y="798.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.02%)</title><rect x="916.1" y="803.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="919.1" y="814.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="916.1" y="787.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="919.1" y="798.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="916.1" y="771.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="919.1" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (2 samples, 0.05%)</title><rect x="916.4" y="883.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="919.4" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (2 samples, 0.05%)</title><rect x="916.4" y="867.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="919.4" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (2 samples, 0.05%)</title><rect x="916.4" y="851.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="919.4" y="862.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (2 samples, 0.05%)</title><rect x="916.4" y="835.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="919.4" y="846.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (2 samples, 0.05%)</title><rect x="916.4" y="819.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="919.4" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (26 samples, 0.60%)</title><rect x="916.9" y="915.0" width="7.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="919.9" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (26 samples, 0.60%)</title><rect x="916.9" y="899.0" width="7.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="919.9" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (25 samples, 0.57%)</title><rect x="917.2" y="883.0" width="6.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="920.2" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (24 samples, 0.55%)</title><rect x="917.5" y="867.0" width="6.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="920.5" y="878.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (23 samples, 0.53%)</title><rect x="917.8" y="851.0" width="6.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="920.8" y="862.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.02%)</title><rect x="917.8" y="835.0" width="0.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="920.8" y="846.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.05%)</title><rect x="918.0" y="835.0" width="0.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="921.0" y="846.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.02%)</title><rect x="918.0" y="819.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="921.0" y="830.0"></text>
</g>
<g>
<title>java_lang_Thread::park_event(oopDesc*) (1 samples, 0.02%)</title><rect x="918.3" y="819.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="921.3" y="830.0"></text>
</g>
<g>
<title>__pthread_cond_signal (20 samples, 0.46%)</title><rect x="918.6" y="835.0" width="5.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="921.6" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (18 samples, 0.41%)</title><rect x="919.1" y="819.0" width="4.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="922.1" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (18 samples, 0.41%)</title><rect x="919.1" y="803.0" width="4.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="922.1" y="814.0"></text>
</g>
<g>
<title>__x64_sys_futex (16 samples, 0.37%)</title><rect x="919.6" y="787.0" width="4.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="922.6" y="798.0"></text>
</g>
<g>
<title>do_futex (15 samples, 0.34%)</title><rect x="919.9" y="771.0" width="4.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="922.9" y="782.0"></text>
</g>
<g>
<title>futex_wake (15 samples, 0.34%)</title><rect x="919.9" y="755.0" width="4.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="922.9" y="766.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="919.9" y="739.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="922.9" y="750.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.02%)</title><rect x="920.2" y="739.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="923.2" y="750.0"></text>
</g>
<g>
<title>wake_up_q (13 samples, 0.30%)</title><rect x="920.5" y="739.0" width="3.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="923.5" y="750.0"></text>
</g>
<g>
<title>try_to_wake_up (13 samples, 0.30%)</title><rect x="920.5" y="723.0" width="3.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="923.5" y="734.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (13 samples, 0.30%)</title><rect x="920.5" y="707.0" width="3.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="923.5" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer$$Lambda$65/1115085888.run (412 samples, 9.43%)</title><rect x="924.0" y="947.0" width="111.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="927.0" y="958.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.lambda$executeAsync$3 (412 samples, 9.43%)</title><rect x="924.0" y="931.0" width="111.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="927.0" y="942.0">ru/mail/polis..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (325 samples, 7.44%)</title><rect x="924.2" y="915.0" width="87.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="927.2" y="926.0">one/nio/ht..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.05%)</title><rect x="924.2" y="899.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="927.2" y="910.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.05%)</title><rect x="924.2" y="883.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="927.2" y="894.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.02%)</title><rect x="924.5" y="867.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="927.5" y="878.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.02%)</title><rect x="924.5" y="851.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="927.5" y="862.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (321 samples, 7.35%)</title><rect x="924.8" y="899.0" width="86.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="927.8" y="910.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (13 samples, 0.30%)</title><rect x="924.8" y="883.0" width="3.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="927.8" y="894.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (5 samples, 0.11%)</title><rect x="926.9" y="867.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="929.9" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (5 samples, 0.11%)</title><rect x="926.9" y="851.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="929.9" y="862.0"></text>
</g>
<g>
<title>java/lang/String.charAt (5 samples, 0.11%)</title><rect x="926.9" y="835.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="929.9" y="846.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (308 samples, 7.05%)</title><rect x="928.3" y="883.0" width="83.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="931.3" y="894.0">one/nio/n..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.&lt;init&gt; (1 samples, 0.02%)</title><rect x="928.3" y="867.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="931.3" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer$$Lambda$85/1955586341.get (1 samples, 0.02%)</title><rect x="928.3" y="851.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="931.3" y="862.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (307 samples, 7.03%)</title><rect x="928.6" y="867.0" width="82.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="931.6" y="878.0">one/nio/n..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (303 samples, 6.94%)</title><rect x="929.4" y="851.0" width="81.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="932.4" y="862.0">one/nio/n..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (302 samples, 6.91%)</title><rect x="929.6" y="835.0" width="81.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="932.6" y="846.0">one/nio/n..</text>
</g>
<g>
<title>.annobin_send.c (294 samples, 6.73%)</title><rect x="929.9" y="819.0" width="79.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="932.9" y="830.0">.annobin_..</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="936.1" y="803.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="939.1" y="814.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (270 samples, 6.18%)</title><rect x="936.4" y="803.0" width="72.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="939.4" y="814.0">entry_SY..</text>
</g>
<g>
<title>do_syscall_64 (270 samples, 6.18%)</title><rect x="936.4" y="787.0" width="72.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="939.4" y="798.0">do_sysca..</text>
</g>
<g>
<title>__x64_sys_sendto (267 samples, 6.11%)</title><rect x="937.2" y="771.0" width="72.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="940.2" y="782.0">__x64_sy..</text>
</g>
<g>
<title>__sys_sendto (265 samples, 6.07%)</title><rect x="937.7" y="755.0" width="71.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="940.7" y="766.0">__sys_se..</text>
</g>
<g>
<title>fput_many (1 samples, 0.02%)</title><rect x="938.3" y="739.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="941.3" y="750.0"></text>
</g>
<g>
<title>import_single_range (1 samples, 0.02%)</title><rect x="938.6" y="739.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="941.6" y="750.0"></text>
</g>
<g>
<title>sock_sendmsg (255 samples, 5.84%)</title><rect x="938.8" y="739.0" width="68.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="941.8" y="750.0">sock_se..</text>
</g>
<g>
<title>inet_sendmsg (2 samples, 0.05%)</title><rect x="938.8" y="723.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="941.8" y="734.0"></text>
</g>
<g>
<title>security_socket_sendmsg (6 samples, 0.14%)</title><rect x="939.4" y="723.0" width="1.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="942.4" y="734.0"></text>
</g>
<g>
<title>sock_has_perm (6 samples, 0.14%)</title><rect x="939.4" y="707.0" width="1.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="942.4" y="718.0"></text>
</g>
<g>
<title>tcp_sendmsg (247 samples, 5.65%)</title><rect x="941.0" y="723.0" width="66.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="944.0" y="734.0">tcp_sen..</text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="941.3" y="707.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="944.3" y="718.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.02%)</title><rect x="941.5" y="707.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="944.5" y="718.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.02%)</title><rect x="941.5" y="691.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="944.5" y="702.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.05%)</title><rect x="941.8" y="707.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="944.8" y="718.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.02%)</title><rect x="942.1" y="691.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="945.1" y="702.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (242 samples, 5.54%)</title><rect x="942.3" y="707.0" width="65.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="945.3" y="718.0">tcp_sen..</text>
</g>
<g>
<title>__check_object_size (4 samples, 0.09%)</title><rect x="943.7" y="691.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="946.7" y="702.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.02%)</title><rect x="944.2" y="675.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="947.2" y="686.0"></text>
</g>
<g>
<title>check_stack_object (1 samples, 0.02%)</title><rect x="944.5" y="675.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="947.5" y="686.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (219 samples, 5.01%)</title><rect x="944.8" y="691.0" width="59.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="947.8" y="702.0">__tcp_..</text>
</g>
<g>
<title>tcp_write_xmit (218 samples, 4.99%)</title><rect x="945.0" y="675.0" width="58.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="948.0" y="686.0">tcp_wr..</text>
</g>
<g>
<title>__tcp_transmit_skb (205 samples, 4.69%)</title><rect x="945.8" y="659.0" width="55.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="948.8" y="670.0">__tcp..</text>
</g>
<g>
<title>__ip_queue_xmit (197 samples, 4.51%)</title><rect x="946.7" y="643.0" width="53.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="949.7" y="654.0">__ip_..</text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.02%)</title><rect x="946.9" y="627.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="949.9" y="638.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.02%)</title><rect x="946.9" y="611.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="949.9" y="622.0"></text>
</g>
<g>
<title>ip_local_out (53 samples, 1.21%)</title><rect x="947.2" y="627.0" width="14.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="950.2" y="638.0"></text>
</g>
<g>
<title>__ip_local_out (53 samples, 1.21%)</title><rect x="947.2" y="611.0" width="14.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="950.2" y="622.0"></text>
</g>
<g>
<title>ip_send_check (1 samples, 0.02%)</title><rect x="948.0" y="595.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="951.0" y="606.0"></text>
</g>
<g>
<title>nf_hook_slow (49 samples, 1.12%)</title><rect x="948.3" y="595.0" width="13.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="951.3" y="606.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (13 samples, 0.30%)</title><rect x="948.3" y="579.0" width="3.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="951.3" y="590.0"></text>
</g>
<g>
<title>iptable_filter_hook	[iptable_filter] (1 samples, 0.02%)</title><rect x="951.8" y="579.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="954.8" y="590.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (6 samples, 0.14%)</title><rect x="952.1" y="579.0" width="1.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="955.1" y="590.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (5 samples, 0.11%)</title><rect x="952.3" y="563.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="955.3" y="574.0"></text>
</g>
<g>
<title>iptable_security_hook	[iptable_security] (4 samples, 0.09%)</title><rect x="953.7" y="579.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="956.7" y="590.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag	[nf_defrag_ipv4] (1 samples, 0.02%)</title><rect x="954.8" y="579.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="957.8" y="590.0"></text>
</g>
<g>
<title>ipv4_conntrack_local	[nf_conntrack] (1 samples, 0.02%)</title><rect x="955.0" y="579.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="958.0" y="590.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (16 samples, 0.37%)</title><rect x="955.3" y="579.0" width="4.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="958.3" y="590.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get	[nf_conntrack] (4 samples, 0.09%)</title><rect x="955.8" y="563.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="958.8" y="574.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="956.6" y="547.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="959.6" y="558.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="956.6" y="531.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="959.6" y="542.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="956.6" y="515.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="959.6" y="526.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="956.6" y="499.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="959.6" y="510.0"></text>
</g>
<g>
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="956.6" y="483.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="959.6" y="494.0"></text>
</g>
<g>
<title>get_l4proto	[nf_conntrack] (2 samples, 0.05%)</title><rect x="956.9" y="563.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="959.9" y="574.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet	[nf_conntrack] (6 samples, 0.14%)</title><rect x="957.5" y="563.0" width="1.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="960.5" y="574.0"></text>
</g>
<g>
<title>__nf_ct_refresh_acct	[nf_conntrack] (1 samples, 0.02%)</title><rect x="958.5" y="547.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="961.5" y="558.0"></text>
</g>
<g>
<title>nf_ct_seq_offset	[nf_conntrack] (1 samples, 0.02%)</title><rect x="958.8" y="547.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="961.8" y="558.0"></text>
</g>
<g>
<title>nf_ct_get_tuple	[nf_conntrack] (2 samples, 0.05%)</title><rect x="959.1" y="563.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="962.1" y="574.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn	[nf_nat] (5 samples, 0.11%)</title><rect x="959.6" y="579.0" width="1.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="962.6" y="590.0"></text>
</g>
<g>
<title>nf_nat_inet_fn	[nf_nat] (1 samples, 0.02%)</title><rect x="960.4" y="563.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="963.4" y="574.0"></text>
</g>
<g>
<title>nf_nat_packet	[nf_nat] (1 samples, 0.02%)</title><rect x="960.7" y="563.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="963.7" y="574.0"></text>
</g>
<g>
<title>selinux_ipv4_output (2 samples, 0.05%)</title><rect x="961.0" y="579.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="964.0" y="590.0"></text>
</g>
<g>
<title>ip_output (142 samples, 3.25%)</title><rect x="961.5" y="627.0" width="38.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="964.5" y="638.0">ip_..</text>
</g>
<g>
<title>ip_finish_output2 (126 samples, 2.88%)</title><rect x="962.3" y="611.0" width="34.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="965.3" y="622.0">ip..</text>
</g>
<g>
<title>__dev_queue_xmit (10 samples, 0.23%)</title><rect x="964.2" y="595.0" width="2.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="967.2" y="606.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (5 samples, 0.11%)</title><rect x="964.7" y="579.0" width="1.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="967.7" y="590.0"></text>
</g>
<g>
<title>loopback_xmit (4 samples, 0.09%)</title><rect x="965.0" y="563.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="968.0" y="574.0"></text>
</g>
<g>
<title>netif_rx (2 samples, 0.05%)</title><rect x="965.0" y="547.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="968.0" y="558.0"></text>
</g>
<g>
<title>netif_rx_internal (2 samples, 0.05%)</title><rect x="965.0" y="531.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="968.0" y="542.0"></text>
</g>
<g>
<title>enqueue_to_backlog (1 samples, 0.02%)</title><rect x="965.3" y="515.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="968.3" y="526.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (1 samples, 0.02%)</title><rect x="965.6" y="547.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="968.6" y="558.0"></text>
</g>
<g>
<title>tcp_wfree (1 samples, 0.02%)</title><rect x="965.8" y="547.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="968.8" y="558.0"></text>
</g>
<g>
<title>netdev_pick_tx (2 samples, 0.05%)</title><rect x="966.1" y="579.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="969.1" y="590.0"></text>
</g>
<g>
<title>validate_xmit_skb (1 samples, 0.02%)</title><rect x="966.6" y="579.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="969.6" y="590.0"></text>
</g>
<g>
<title>netif_skb_features (1 samples, 0.02%)</title><rect x="966.6" y="563.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="969.6" y="574.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (109 samples, 2.49%)</title><rect x="966.9" y="595.0" width="29.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="969.9" y="606.0">__..</text>
</g>
<g>
<title>do_softirq.part.0 (108 samples, 2.47%)</title><rect x="967.2" y="579.0" width="29.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="970.2" y="590.0">do..</text>
</g>
<g>
<title>do_softirq_own_stack (106 samples, 2.43%)</title><rect x="967.7" y="563.0" width="28.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="970.7" y="574.0">do..</text>
</g>
<g>
<title>__softirqentry_text_start (106 samples, 2.43%)</title><rect x="967.7" y="547.0" width="28.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="970.7" y="558.0">__..</text>
</g>
<g>
<title>net_rx_action (102 samples, 2.33%)</title><rect x="968.5" y="531.0" width="27.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="971.5" y="542.0">n..</text>
</g>
<g>
<title>__kfree_skb_flush (1 samples, 0.02%)</title><rect x="968.5" y="515.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="971.5" y="526.0"></text>
</g>
<g>
<title>process_backlog (101 samples, 2.31%)</title><rect x="968.8" y="515.0" width="27.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="971.8" y="526.0">p..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (100 samples, 2.29%)</title><rect x="969.1" y="499.0" width="27.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="972.1" y="510.0">_..</text>
</g>
<g>
<title>__netif_receive_skb_core (3 samples, 0.07%)</title><rect x="969.1" y="483.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="972.1" y="494.0"></text>
</g>
<g>
<title>ip_rcv (97 samples, 2.22%)</title><rect x="969.9" y="483.0" width="26.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="972.9" y="494.0">i..</text>
</g>
<g>
<title>ip_local_deliver (72 samples, 1.65%)</title><rect x="970.4" y="467.0" width="19.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="973.4" y="478.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (52 samples, 1.19%)</title><rect x="970.7" y="451.0" width="14.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="973.7" y="462.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (51 samples, 1.17%)</title><rect x="971.0" y="435.0" width="13.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="974.0" y="446.0"></text>
</g>
<g>
<title>raw_local_deliver (2 samples, 0.05%)</title><rect x="971.0" y="419.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="974.0" y="430.0"></text>
</g>
<g>
<title>tcp_v4_rcv (49 samples, 1.12%)</title><rect x="971.5" y="419.0" width="13.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="974.5" y="430.0"></text>
</g>
<g>
<title>_raw_spin_lock (2 samples, 0.05%)</title><rect x="972.6" y="403.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="975.6" y="414.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (2 samples, 0.05%)</title><rect x="973.1" y="403.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="976.1" y="414.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (2 samples, 0.05%)</title><rect x="973.1" y="387.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="976.1" y="398.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (1 samples, 0.02%)</title><rect x="973.4" y="371.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="976.4" y="382.0"></text>
</g>
<g>
<title>selinux_peerlbl_enabled (1 samples, 0.02%)</title><rect x="973.4" y="355.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="976.4" y="366.0"></text>
</g>
<g>
<title>netlbl_enabled (1 samples, 0.02%)</title><rect x="973.4" y="339.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="976.4" y="350.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (41 samples, 0.94%)</title><rect x="973.7" y="403.0" width="11.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="976.7" y="414.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.02%)</title><rect x="973.7" y="387.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="976.7" y="398.0"></text>
</g>
<g>
<title>tcp_rcv_established (40 samples, 0.92%)</title><rect x="973.9" y="387.0" width="10.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="976.9" y="398.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.05%)</title><rect x="974.5" y="371.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="977.5" y="382.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.05%)</title><rect x="974.5" y="355.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="977.5" y="366.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="974.5" y="339.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="977.5" y="350.0"></text>
</g>
<g>
<title>lock_timer_base (1 samples, 0.02%)</title><rect x="974.7" y="339.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="977.7" y="350.0"></text>
</g>
<g>
<title>tcp_ack (18 samples, 0.41%)</title><rect x="975.0" y="371.0" width="4.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="978.0" y="382.0"></text>
</g>
<g>
<title>__kfree_skb (6 samples, 0.14%)</title><rect x="976.4" y="355.0" width="1.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="979.4" y="366.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.02%)</title><rect x="976.4" y="339.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="979.4" y="350.0"></text>
</g>
<g>
<title>skb_release_data (5 samples, 0.11%)</title><rect x="976.6" y="339.0" width="1.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="979.6" y="350.0"></text>
</g>
<g>
<title>__list_del_entry_valid (1 samples, 0.02%)</title><rect x="978.0" y="355.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="981.0" y="366.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (3 samples, 0.07%)</title><rect x="978.3" y="355.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="981.3" y="366.0"></text>
</g>
<g>
<title>tcp_rate_skb_delivered (2 samples, 0.05%)</title><rect x="979.1" y="355.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="982.1" y="366.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (1 samples, 0.02%)</title><rect x="979.6" y="355.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="982.6" y="366.0"></text>
</g>
<g>
<title>tcp_check_space (2 samples, 0.05%)</title><rect x="979.9" y="371.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="982.9" y="382.0"></text>
</g>
<g>
<title>tcp_data_queue (16 samples, 0.37%)</title><rect x="980.4" y="371.0" width="4.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="983.4" y="382.0"></text>
</g>
<g>
<title>sock_def_readable (15 samples, 0.34%)</title><rect x="980.4" y="355.0" width="4.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="983.4" y="366.0"></text>
</g>
<g>
<title>__wake_up_common_lock (12 samples, 0.27%)</title><rect x="981.2" y="339.0" width="3.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="984.2" y="350.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (12 samples, 0.27%)</title><rect x="981.2" y="323.0" width="3.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="984.2" y="334.0"></text>
</g>
<g>
<title>tcp_event_data_recv (1 samples, 0.02%)</title><rect x="984.5" y="355.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="987.5" y="366.0"></text>
</g>
<g>
<title>nf_hook_slow (19 samples, 0.43%)</title><rect x="984.7" y="451.0" width="5.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="987.7" y="462.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (16 samples, 0.37%)</title><rect x="984.7" y="435.0" width="4.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="987.7" y="446.0"></text>
</g>
<g>
<title>conntrack_mt	[xt_conntrack] (4 samples, 0.09%)</title><rect x="987.7" y="419.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="990.7" y="430.0"></text>
</g>
<g>
<title>conntrack_mt_v3	[xt_conntrack] (1 samples, 0.02%)</title><rect x="988.8" y="419.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="991.8" y="430.0"></text>
</g>
<g>
<title>iptable_filter_hook	[iptable_filter] (1 samples, 0.02%)</title><rect x="989.1" y="435.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="992.1" y="446.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (1 samples, 0.02%)</title><rect x="989.3" y="435.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="992.3" y="446.0"></text>
</g>
<g>
<title>nf_confirm	[nf_conntrack] (1 samples, 0.02%)</title><rect x="989.6" y="435.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="992.6" y="446.0"></text>
</g>
<g>
<title>nf_hook_slow (23 samples, 0.53%)</title><rect x="989.9" y="467.0" width="6.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="992.9" y="478.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (16 samples, 0.37%)</title><rect x="990.9" y="451.0" width="4.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="993.9" y="462.0"></text>
</g>
<g>
<title>iptable_raw_hook	[iptable_raw] (2 samples, 0.05%)</title><rect x="995.3" y="451.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="998.3" y="462.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag	[nf_defrag_ipv4] (1 samples, 0.02%)</title><rect x="995.8" y="451.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="998.8" y="462.0"></text>
</g>
<g>
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="996.1" y="531.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="999.1" y="542.0"></text>
</g>
<g>
<title>call_timer_fn (1 samples, 0.02%)</title><rect x="996.1" y="515.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="999.1" y="526.0"></text>
</g>
<g>
<title>tcp_delack_timer (1 samples, 0.02%)</title><rect x="996.1" y="499.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="999.1" y="510.0"></text>
</g>
<g>
<title>tcp_delack_timer_handler (1 samples, 0.02%)</title><rect x="996.1" y="483.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="999.1" y="494.0"></text>
</g>
<g>
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="996.3" y="611.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="999.3" y="622.0"></text>
</g>
<g>
<title>nf_hook_slow (12 samples, 0.27%)</title><rect x="996.6" y="611.0" width="3.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="999.6" y="622.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (4 samples, 0.09%)</title><rect x="996.6" y="595.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="999.6" y="606.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="997.4" y="579.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1000.4" y="590.0"></text>
</g>
<g>
<title>do_softirq.part.0 (1 samples, 0.02%)</title><rect x="997.4" y="563.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1000.4" y="574.0"></text>
</g>
<g>
<title>do_softirq_own_stack (1 samples, 0.02%)</title><rect x="997.4" y="547.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1000.4" y="558.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="997.4" y="531.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1000.4" y="542.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="997.4" y="515.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1000.4" y="526.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="997.4" y="499.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1000.4" y="510.0"></text>
</g>
<g>
<title>ipv4_confirm	[nf_conntrack] (1 samples, 0.02%)</title><rect x="997.7" y="595.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1000.7" y="606.0"></text>
</g>
<g>
<title>nf_confirm	[nf_conntrack] (6 samples, 0.14%)</title><rect x="998.0" y="595.0" width="1.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1001.0" y="606.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events	[nf_conntrack] (4 samples, 0.09%)</title><rect x="998.5" y="579.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1001.5" y="590.0"></text>
</g>
<g>
<title>selinux_ip_postroute (1 samples, 0.02%)</title><rect x="999.6" y="595.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1002.6" y="606.0"></text>
</g>
<g>
<title>selinux_peerlbl_enabled (1 samples, 0.02%)</title><rect x="999.6" y="579.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1002.6" y="590.0"></text>
</g>
<g>
<title>__skb_clone (3 samples, 0.07%)</title><rect x="999.9" y="643.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1002.9" y="654.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (1 samples, 0.02%)</title><rect x="1000.7" y="643.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1003.7" y="654.0"></text>
</g>
<g>
<title>tcp_v4_send_check (1 samples, 0.02%)</title><rect x="1000.9" y="643.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1003.9" y="654.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.02%)</title><rect x="1001.2" y="659.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1004.2" y="670.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.02%)</title><rect x="1001.2" y="643.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1004.2" y="654.0"></text>
</g>
<g>
<title>tcp_chrono_stop (1 samples, 0.02%)</title><rect x="1001.5" y="659.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1004.5" y="670.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (6 samples, 0.14%)</title><rect x="1001.8" y="659.0" width="1.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1004.8" y="670.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.05%)</title><rect x="1002.8" y="643.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1005.8" y="654.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.05%)</title><rect x="1002.8" y="627.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1005.8" y="638.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.05%)</title><rect x="1002.8" y="611.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1005.8" y="622.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (2 samples, 0.05%)</title><rect x="1003.4" y="659.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1006.4" y="670.0"></text>
</g>
<g>
<title>_copy_from_iter_full (2 samples, 0.05%)</title><rect x="1003.9" y="691.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1006.9" y="702.0"></text>
</g>
<g>
<title>copyin (1 samples, 0.02%)</title><rect x="1004.2" y="675.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1007.2" y="686.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.02%)</title><rect x="1004.2" y="659.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1007.2" y="670.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (4 samples, 0.09%)</title><rect x="1004.5" y="691.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1007.5" y="702.0"></text>
</g>
<g>
<title>__alloc_skb (3 samples, 0.07%)</title><rect x="1004.7" y="675.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1007.7" y="686.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (1 samples, 0.02%)</title><rect x="1005.0" y="659.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1008.0" y="670.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.02%)</title><rect x="1005.0" y="643.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1008.0" y="654.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.02%)</title><rect x="1005.3" y="659.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1008.3" y="670.0"></text>
</g>
<g>
<title>should_failslab (1 samples, 0.02%)</title><rect x="1005.3" y="643.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1008.3" y="654.0"></text>
</g>
<g>
<title>skb_entail (1 samples, 0.02%)</title><rect x="1005.5" y="691.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1008.5" y="702.0"></text>
</g>
<g>
<title>sock_zerocopy_put (1 samples, 0.02%)</title><rect x="1005.8" y="691.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1008.8" y="702.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (1 samples, 0.02%)</title><rect x="1006.1" y="691.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1009.1" y="702.0"></text>
</g>
<g>
<title>tcp_send_mss (4 samples, 0.09%)</title><rect x="1006.3" y="691.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1009.3" y="702.0"></text>
</g>
<g>
<title>tcp_current_mss (4 samples, 0.09%)</title><rect x="1006.3" y="675.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1009.3" y="686.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1006.9" y="659.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1009.9" y="670.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1006.9" y="643.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1009.9" y="654.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="1006.9" y="627.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1009.9" y="638.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1006.9" y="611.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1009.9" y="622.0"></text>
</g>
<g>
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="1006.9" y="595.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1009.9" y="606.0"></text>
</g>
<g>
<title>call_timer_fn (1 samples, 0.02%)</title><rect x="1006.9" y="579.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1009.9" y="590.0"></text>
</g>
<g>
<title>tcp_delack_timer (1 samples, 0.02%)</title><rect x="1006.9" y="563.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1009.9" y="574.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="1006.9" y="547.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1009.9" y="558.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.02%)</title><rect x="1007.2" y="659.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1010.2" y="670.0"></text>
</g>
<g>
<title>tcp_tx_timestamp (1 samples, 0.02%)</title><rect x="1007.4" y="691.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1010.4" y="702.0"></text>
</g>
<g>
<title>sockfd_lookup_light (6 samples, 0.14%)</title><rect x="1007.7" y="739.0" width="1.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1010.7" y="750.0"></text>
</g>
<g>
<title>__fget_light (6 samples, 0.14%)</title><rect x="1007.7" y="723.0" width="1.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1010.7" y="734.0"></text>
</g>
<g>
<title>__fget (5 samples, 0.11%)</title><rect x="1008.0" y="707.0" width="1.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1011.0" y="718.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.05%)</title><rect x="1009.3" y="819.0" width="0.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1012.3" y="830.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.11%)</title><rect x="1009.9" y="819.0" width="1.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1012.9" y="830.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.11%)</title><rect x="1009.9" y="803.0" width="1.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1012.9" y="814.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (4 samples, 0.09%)</title><rect x="1009.9" y="787.0" width="1.0" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="1012.9" y="798.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.02%)</title><rect x="1009.9" y="771.0" width="0.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1012.9" y="782.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (3 samples, 0.07%)</title><rect x="1010.1" y="771.0" width="0.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1013.1" y="782.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.02%)</title><rect x="1010.7" y="755.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1013.7" y="766.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.02%)</title><rect x="1010.9" y="787.0" width="0.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1013.9" y="798.0"></text>
</g>
<g>
<title>one/nio/net/Session.listen (1 samples, 0.02%)</title><rect x="1011.2" y="851.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1014.2" y="862.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.listen (1 samples, 0.02%)</title><rect x="1011.2" y="835.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1014.2" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.05%)</title><rect x="1011.5" y="899.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1014.5" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer$$Lambda$62/2080080204.get (1 samples, 0.02%)</title><rect x="1012.0" y="915.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1015.0" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.lambda$entity$1 (1 samples, 0.02%)</title><rect x="1012.0" y="899.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1015.0" y="910.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.02%)</title><rect x="1012.0" y="883.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1015.0" y="894.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.02%)</title><rect x="1012.0" y="867.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1015.0" y="878.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1012.0" y="851.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1015.0" y="862.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1012.0" y="835.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1015.0" y="846.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1012.0" y="819.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1015.0" y="830.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1012.0" y="803.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1015.0" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer$$Lambda$85/1955586341.get (85 samples, 1.95%)</title><rect x="1012.3" y="915.0" width="22.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1015.3" y="926.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.lambda$entity$2 (85 samples, 1.95%)</title><rect x="1012.3" y="899.0" width="22.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1015.3" y="910.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.delete (85 samples, 1.95%)</title><rect x="1012.3" y="883.0" width="22.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1015.3" y="894.0">r..</text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.02%)</title><rect x="1012.6" y="867.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1015.6" y="878.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1 samples, 0.02%)</title><rect x="1012.6" y="851.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1015.6" y="862.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (1 samples, 0.02%)</title><rect x="1012.6" y="835.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1015.6" y="846.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (8 samples, 0.18%)</title><rect x="1012.8" y="867.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1015.8" y="878.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (8 samples, 0.18%)</title><rect x="1012.8" y="851.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1015.8" y="862.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (8 samples, 0.18%)</title><rect x="1012.8" y="835.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1015.8" y="846.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (8 samples, 0.18%)</title><rect x="1012.8" y="819.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1015.8" y="830.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.02%)</title><rect x="1013.1" y="803.0" width="0.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1016.1" y="814.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (3 samples, 0.07%)</title><rect x="1013.4" y="803.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1016.4" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.02%)</title><rect x="1013.4" y="787.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1016.4" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.02%)</title><rect x="1013.4" y="771.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1016.4" y="782.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.02%)</title><rect x="1013.4" y="755.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1016.4" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.05%)</title><rect x="1013.6" y="787.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1016.6" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.05%)</title><rect x="1013.6" y="771.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1016.6" y="782.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (2 samples, 0.05%)</title><rect x="1013.6" y="755.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1016.6" y="766.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (2 samples, 0.05%)</title><rect x="1014.2" y="803.0" width="0.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1017.2" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.setToFlush (1 samples, 0.02%)</title><rect x="1014.7" y="803.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1017.7" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.remove (75 samples, 1.72%)</title><rect x="1015.0" y="867.0" width="20.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1018.0" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.remove (75 samples, 1.72%)</title><rect x="1015.0" y="851.0" width="20.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1018.0" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.lock (9 samples, 0.21%)</title><rect x="1015.3" y="835.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1018.3" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (9 samples, 0.21%)</title><rect x="1015.3" y="819.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1018.3" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (3 samples, 0.07%)</title><rect x="1015.3" y="803.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1018.3" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (3 samples, 0.07%)</title><rect x="1015.3" y="787.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1018.3" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (3 samples, 0.07%)</title><rect x="1015.3" y="771.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1018.3" y="782.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (3 samples, 0.07%)</title><rect x="1015.3" y="755.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1018.3" y="766.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.02%)</title><rect x="1015.3" y="739.0" width="0.2" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="1018.3" y="750.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.02%)</title><rect x="1015.3" y="723.0" width="0.2" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1018.3" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="1015.3" y="707.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1018.3" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="1015.3" y="691.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1018.3" y="702.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.02%)</title><rect x="1015.3" y="675.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1018.3" y="686.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.02%)</title><rect x="1015.3" y="659.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1018.3" y="670.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.02%)</title><rect x="1015.3" y="643.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1018.3" y="654.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.02%)</title><rect x="1015.3" y="627.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1018.3" y="638.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.05%)</title><rect x="1015.5" y="739.0" width="0.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1018.5" y="750.0"></text>
</g>
<g>
<title>__condvar_dec_grefs (1 samples, 0.02%)</title><rect x="1015.5" y="723.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1018.5" y="734.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.02%)</title><rect x="1015.8" y="723.0" width="0.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="1018.8" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="1015.8" y="707.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1018.8" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="1015.8" y="691.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1018.8" y="702.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.02%)</title><rect x="1015.8" y="675.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1018.8" y="686.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.02%)</title><rect x="1015.8" y="659.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1018.8" y="670.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.02%)</title><rect x="1015.8" y="643.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1018.8" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (1 samples, 0.02%)</title><rect x="1016.1" y="803.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1019.1" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquire (5 samples, 0.11%)</title><rect x="1016.3" y="803.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1019.3" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.setExclusiveOwnerThread (3 samples, 0.07%)</title><rect x="1016.6" y="787.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1019.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (1 samples, 0.02%)</title><rect x="1017.4" y="787.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1020.4" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.02%)</title><rect x="1017.4" y="771.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1020.4" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/VarForm.getMemberName (1 samples, 0.02%)</title><rect x="1017.4" y="755.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1020.4" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.unlock (5 samples, 0.11%)</title><rect x="1017.7" y="835.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1020.7" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (5 samples, 0.11%)</title><rect x="1017.7" y="819.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1020.7" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (5 samples, 0.11%)</title><rect x="1017.7" y="803.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1020.7" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (5 samples, 0.11%)</title><rect x="1017.7" y="787.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1020.7" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (5 samples, 0.11%)</title><rect x="1017.7" y="771.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1020.7" y="782.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.02%)</title><rect x="1017.7" y="755.0" width="0.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1020.7" y="766.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_lock (1 samples, 0.02%)</title><rect x="1017.7" y="739.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1020.7" y="750.0"></text>
</g>
<g>
<title>__pthread_cond_signal (4 samples, 0.09%)</title><rect x="1018.0" y="755.0" width="1.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1021.0" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.07%)</title><rect x="1018.2" y="739.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1021.2" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.07%)</title><rect x="1018.2" y="723.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1021.2" y="734.0"></text>
</g>
<g>
<title>__x64_sys_futex (3 samples, 0.07%)</title><rect x="1018.2" y="707.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1021.2" y="718.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.07%)</title><rect x="1018.2" y="691.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1021.2" y="702.0"></text>
</g>
<g>
<title>futex_wake (3 samples, 0.07%)</title><rect x="1018.2" y="675.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1021.2" y="686.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.02%)</title><rect x="1018.2" y="659.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1021.2" y="670.0"></text>
</g>
<g>
<title>__unqueue_futex (1 samples, 0.02%)</title><rect x="1018.2" y="643.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1021.2" y="654.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.05%)</title><rect x="1018.5" y="659.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1021.5" y="670.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.05%)</title><rect x="1018.5" y="643.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1021.5" y="654.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.05%)</title><rect x="1018.5" y="627.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1021.5" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.remove (60 samples, 1.37%)</title><rect x="1019.0" y="835.0" width="16.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1022.0" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (59 samples, 1.35%)</title><rect x="1019.0" y="819.0" width="16.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1022.0" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (59 samples, 1.35%)</title><rect x="1019.0" y="803.0" width="16.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1022.0" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (1 samples, 0.02%)</title><rect x="1019.3" y="787.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1022.3" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (1 samples, 0.02%)</title><rect x="1019.3" y="771.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1022.3" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.02%)</title><rect x="1019.3" y="755.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1022.3" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.02%)</title><rect x="1019.3" y="739.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1022.3" y="750.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.02%)</title><rect x="1019.3" y="723.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1022.3" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.02%)</title><rect x="1019.3" y="707.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1022.3" y="718.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (1 samples, 0.02%)</title><rect x="1019.3" y="691.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1022.3" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (57 samples, 1.30%)</title><rect x="1019.6" y="787.0" width="15.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1022.6" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (57 samples, 1.30%)</title><rect x="1019.6" y="771.0" width="15.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1022.6" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (28 samples, 0.64%)</title><rect x="1027.4" y="755.0" width="7.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1030.4" y="766.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (27 samples, 0.62%)</title><rect x="1027.4" y="739.0" width="7.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1030.4" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.base (3 samples, 0.07%)</title><rect x="1031.7" y="723.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1034.7" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (2 samples, 0.05%)</title><rect x="1032.5" y="723.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1035.5" y="734.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (2 samples, 0.05%)</title><rect x="1032.5" y="707.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1035.5" y="718.0"></text>
</g>
<g>
<title>jdk/internal/util/ArraysSupport.vectorizedMismatch (2 samples, 0.05%)</title><rect x="1033.1" y="723.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1036.1" y="734.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1033.4" y="707.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1036.4" y="718.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1033.4" y="691.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1036.4" y="702.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="1033.4" y="675.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1036.4" y="686.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1033.4" y="659.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1036.4" y="670.0"></text>
</g>
<g>
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="1033.4" y="643.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1036.4" y="654.0"></text>
</g>
<g>
<title>vtable stub (4 samples, 0.09%)</title><rect x="1033.6" y="723.0" width="1.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1036.6" y="734.0"></text>
</g>
<g>
<title>jdk/internal/util/ArraysSupport.vectorizedMismatch (1 samples, 0.02%)</title><rect x="1034.7" y="739.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1037.7" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Value.getData (1 samples, 0.02%)</title><rect x="1035.0" y="819.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1038.0" y="830.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (1 samples, 0.02%)</title><rect x="1035.0" y="803.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1038.0" y="814.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (1 samples, 0.02%)</title><rect x="1035.0" y="787.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1038.0" y="798.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="1035.0" y="771.0" width="0.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1038.0" y="782.0"></text>
</g>
<g>
<title>[worker-4 tid=25396] (573 samples, 13.12%)</title><rect x="1035.2" y="1011.0" width="154.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1038.2" y="1022.0">[worker-4 tid=25396]</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.05%)</title><rect x="1035.2" y="995.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1038.2" y="1006.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (2 samples, 0.05%)</title><rect x="1035.2" y="979.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1038.2" y="990.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.02%)</title><rect x="1035.2" y="963.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1038.2" y="974.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.02%)</title><rect x="1035.2" y="947.0" width="0.3" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="1038.2" y="958.0"></text>
</g>
<g>
<title>ObjectSynchronizer::omAlloc(Thread*) (1 samples, 0.02%)</title><rect x="1035.5" y="963.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1038.5" y="974.0"></text>
</g>
<g>
<title>[not_walkable_Java] (1 samples, 0.02%)</title><rect x="1035.8" y="995.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1038.8" y="1006.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.02%)</title><rect x="1035.8" y="979.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1038.8" y="990.0"></text>
</g>
<g>
<title>[unknown_Java] (1 samples, 0.02%)</title><rect x="1036.1" y="995.0" width="0.2" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1039.1" y="1006.0"></text>
</g>
<g>
<title>java/lang/Thread.run (569 samples, 13.02%)</title><rect x="1036.3" y="995.0" width="153.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1039.3" y="1006.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (569 samples, 13.02%)</title><rect x="1036.3" y="979.0" width="153.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1039.3" y="990.0">java/util/concurren..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (569 samples, 13.02%)</title><rect x="1036.3" y="963.0" width="153.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1039.3" y="974.0">java/util/concurren..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (1 samples, 0.02%)</title><rect x="1036.3" y="947.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1039.3" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.02%)</title><rect x="1036.3" y="931.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1039.3" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (166 samples, 3.80%)</title><rect x="1036.6" y="947.0" width="44.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1039.6" y="958.0">java..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (166 samples, 3.80%)</title><rect x="1036.6" y="931.0" width="44.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1039.6" y="942.0">java..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.dequeue (1 samples, 0.02%)</title><rect x="1036.9" y="915.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1039.9" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicInteger.get (1 samples, 0.02%)</title><rect x="1037.1" y="915.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1040.1" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (128 samples, 2.93%)</title><rect x="1037.4" y="915.0" width="34.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1040.4" y="926.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.checkInterruptWhileWaiting (1 samples, 0.02%)</title><rect x="1037.9" y="899.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1040.9" y="910.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (1 samples, 0.02%)</title><rect x="1037.9" y="883.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1040.9" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.02%)</title><rect x="1037.9" y="867.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1040.9" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (3 samples, 0.07%)</title><rect x="1038.2" y="899.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1041.2" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (3 samples, 0.07%)</title><rect x="1038.2" y="883.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1041.2" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (3 samples, 0.07%)</title><rect x="1038.2" y="867.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1041.2" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (15 samples, 0.34%)</title><rect x="1039.0" y="899.0" width="4.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1042.0" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (15 samples, 0.34%)</title><rect x="1039.0" y="883.0" width="4.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1042.0" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (14 samples, 0.32%)</title><rect x="1039.3" y="867.0" width="3.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1042.3" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (14 samples, 0.32%)</title><rect x="1039.3" y="851.0" width="3.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1042.3" y="862.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (14 samples, 0.32%)</title><rect x="1039.3" y="835.0" width="3.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1042.3" y="846.0"></text>
</g>
<g>
<title>__pthread_cond_signal (14 samples, 0.32%)</title><rect x="1039.3" y="819.0" width="3.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1042.3" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (13 samples, 0.30%)</title><rect x="1039.6" y="803.0" width="3.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1042.6" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (13 samples, 0.30%)</title><rect x="1039.6" y="787.0" width="3.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1042.6" y="798.0"></text>
</g>
<g>
<title>__x64_sys_futex (12 samples, 0.27%)</title><rect x="1039.8" y="771.0" width="3.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1042.8" y="782.0"></text>
</g>
<g>
<title>do_futex (12 samples, 0.27%)</title><rect x="1039.8" y="755.0" width="3.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1042.8" y="766.0"></text>
</g>
<g>
<title>futex_wake (12 samples, 0.27%)</title><rect x="1039.8" y="739.0" width="3.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1042.8" y="750.0"></text>
</g>
<g>
<title>mark_wake_futex (2 samples, 0.05%)</title><rect x="1039.8" y="723.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1042.8" y="734.0"></text>
</g>
<g>
<title>__unqueue_futex (2 samples, 0.05%)</title><rect x="1039.8" y="707.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1042.8" y="718.0"></text>
</g>
<g>
<title>wake_up_q (10 samples, 0.23%)</title><rect x="1040.4" y="723.0" width="2.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1043.4" y="734.0"></text>
</g>
<g>
<title>try_to_wake_up (9 samples, 0.21%)</title><rect x="1040.6" y="707.0" width="2.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1043.6" y="718.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (9 samples, 0.21%)</title><rect x="1040.6" y="691.0" width="2.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1043.6" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (107 samples, 2.45%)</title><rect x="1043.1" y="899.0" width="28.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1046.1" y="910.0">ja..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (107 samples, 2.45%)</title><rect x="1043.1" y="883.0" width="28.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1046.1" y="894.0">jd..</text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.02%)</title><rect x="1043.6" y="867.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1046.6" y="878.0"></text>
</g>
<g>
<title>Unsafe_Park (44 samples, 1.01%)</title><rect x="1043.9" y="867.0" width="11.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1046.9" y="878.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.02%)</title><rect x="1044.4" y="851.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1047.4" y="862.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (11 samples, 0.25%)</title><rect x="1044.7" y="851.0" width="3.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1047.7" y="862.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (5 samples, 0.11%)</title><rect x="1045.8" y="835.0" width="1.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1048.8" y="846.0"></text>
</g>
<g>
<title>update_get_addr (1 samples, 0.02%)</title><rect x="1046.9" y="819.0" width="0.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1049.9" y="830.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.02%)</title><rect x="1047.1" y="835.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1050.1" y="846.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="1047.4" y="835.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1050.4" y="846.0"></text>
</g>
<g>
<title>Thread::is_interrupted(Thread*, bool) (1 samples, 0.02%)</title><rect x="1047.7" y="851.0" width="0.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1050.7" y="862.0"></text>
</g>
<g>
<title>__lll_unlock_wake (22 samples, 0.50%)</title><rect x="1047.9" y="851.0" width="6.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1050.9" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.21%)</title><rect x="1051.4" y="835.0" width="2.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1054.4" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (9 samples, 0.21%)</title><rect x="1051.4" y="819.0" width="2.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1054.4" y="830.0"></text>
</g>
<g>
<title>__x64_sys_futex (6 samples, 0.14%)</title><rect x="1052.3" y="803.0" width="1.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1055.3" y="814.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.09%)</title><rect x="1052.8" y="787.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1055.8" y="798.0"></text>
</g>
<g>
<title>futex_wake (3 samples, 0.07%)</title><rect x="1053.1" y="771.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1056.1" y="782.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.02%)</title><rect x="1053.6" y="755.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1056.6" y="766.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.0 (1 samples, 0.02%)</title><rect x="1053.6" y="739.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1056.6" y="750.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="1053.9" y="851.0" width="0.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1056.9" y="862.0"></text>
</g>
<g>
<title>_init (1 samples, 0.02%)</title><rect x="1054.1" y="851.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1057.1" y="862.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (1 samples, 0.02%)</title><rect x="1054.4" y="851.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1057.4" y="862.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (2 samples, 0.05%)</title><rect x="1054.7" y="851.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1057.7" y="862.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (2 samples, 0.05%)</title><rect x="1055.2" y="851.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1058.2" y="862.0"></text>
</g>
<g>
<title>[unknown] (60 samples, 1.37%)</title><rect x="1055.8" y="867.0" width="16.2" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1058.8" y="878.0"></text>
</g>
<g>
<title>__condvar_dec_grefs (1 samples, 0.02%)</title><rect x="1055.8" y="851.0" width="0.2" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1058.8" y="862.0"></text>
</g>
<g>
<title>__pthread_cond_wait (55 samples, 1.26%)</title><rect x="1056.0" y="851.0" width="14.9" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1059.0" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (34 samples, 0.78%)</title><rect x="1061.7" y="835.0" width="9.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1064.7" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (34 samples, 0.78%)</title><rect x="1061.7" y="819.0" width="9.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1064.7" y="830.0"></text>
</g>
<g>
<title>__x64_sys_futex (31 samples, 0.71%)</title><rect x="1062.5" y="803.0" width="8.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1065.5" y="814.0"></text>
</g>
<g>
<title>do_futex (29 samples, 0.66%)</title><rect x="1063.1" y="787.0" width="7.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1066.1" y="798.0"></text>
</g>
<g>
<title>futex_wait (29 samples, 0.66%)</title><rect x="1063.1" y="771.0" width="7.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1066.1" y="782.0"></text>
</g>
<g>
<title>drop_futex_key_refs.isra.0 (1 samples, 0.02%)</title><rect x="1064.4" y="755.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1067.4" y="766.0"></text>
</g>
<g>
<title>futex_wait_queue_me (14 samples, 0.32%)</title><rect x="1064.7" y="755.0" width="3.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1067.7" y="766.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.02%)</title><rect x="1065.5" y="739.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1068.5" y="750.0"></text>
</g>
<g>
<title>schedule (10 samples, 0.23%)</title><rect x="1065.8" y="739.0" width="2.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1068.8" y="750.0"></text>
</g>
<g>
<title>__sched_text_start (10 samples, 0.23%)</title><rect x="1065.8" y="723.0" width="2.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1068.8" y="734.0"></text>
</g>
<g>
<title>finish_task_switch (8 samples, 0.18%)</title><rect x="1066.3" y="707.0" width="2.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1069.3" y="718.0"></text>
</g>
<g>
<title>futex_wait_setup (9 samples, 0.21%)</title><rect x="1068.5" y="755.0" width="2.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1071.5" y="766.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="1069.0" y="739.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1072.0" y="750.0"></text>
</g>
<g>
<title>get_futex_key (2 samples, 0.05%)</title><rect x="1069.3" y="739.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1072.3" y="750.0"></text>
</g>
<g>
<title>get_futex_value_locked (3 samples, 0.07%)</title><rect x="1069.8" y="739.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1072.8" y="750.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.02%)</title><rect x="1070.6" y="739.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1073.6" y="750.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.05%)</title><rect x="1070.9" y="851.0" width="0.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1073.9" y="862.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.02%)</title><rect x="1071.4" y="851.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1074.4" y="862.0"></text>
</g>
<g>
<title>pthread_mutex_trylock (1 samples, 0.02%)</title><rect x="1071.7" y="851.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1074.7" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1 samples, 0.02%)</title><rect x="1072.0" y="915.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1075.0" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1 samples, 0.02%)</title><rect x="1072.0" y="899.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1075.0" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (1 samples, 0.02%)</title><rect x="1072.0" y="883.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1075.0" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.02%)</title><rect x="1072.0" y="867.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1075.0" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.02%)</title><rect x="1072.0" y="851.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1075.0" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (34 samples, 0.78%)</title><rect x="1072.2" y="915.0" width="9.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1075.2" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (34 samples, 0.78%)</title><rect x="1072.2" y="899.0" width="9.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1075.2" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (34 samples, 0.78%)</title><rect x="1072.2" y="883.0" width="9.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1075.2" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (33 samples, 0.76%)</title><rect x="1072.5" y="867.0" width="8.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1075.5" y="878.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (33 samples, 0.76%)</title><rect x="1072.5" y="851.0" width="8.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1075.5" y="862.0"></text>
</g>
<g>
<title>Unsafe_Unpark (5 samples, 0.11%)</title><rect x="1072.5" y="835.0" width="1.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1075.5" y="846.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.02%)</title><rect x="1072.8" y="819.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1075.8" y="830.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.229] (1 samples, 0.02%)</title><rect x="1073.1" y="819.0" width="0.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1076.1" y="830.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.02%)</title><rect x="1073.3" y="819.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1076.3" y="830.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (1 samples, 0.02%)</title><rect x="1073.6" y="819.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1076.6" y="830.0"></text>
</g>
<g>
<title>__pthread_cond_signal (27 samples, 0.62%)</title><rect x="1073.9" y="835.0" width="7.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1076.9" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (23 samples, 0.53%)</title><rect x="1074.9" y="819.0" width="6.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1077.9" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (23 samples, 0.53%)</title><rect x="1074.9" y="803.0" width="6.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1077.9" y="814.0"></text>
</g>
<g>
<title>__x64_sys_futex (21 samples, 0.48%)</title><rect x="1075.5" y="787.0" width="5.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1078.5" y="798.0"></text>
</g>
<g>
<title>do_futex (21 samples, 0.48%)</title><rect x="1075.5" y="771.0" width="5.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1078.5" y="782.0"></text>
</g>
<g>
<title>futex_wake (21 samples, 0.48%)</title><rect x="1075.5" y="755.0" width="5.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1078.5" y="766.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.02%)</title><rect x="1076.0" y="739.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1079.0" y="750.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.0 (1 samples, 0.02%)</title><rect x="1076.0" y="723.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1079.0" y="734.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.02%)</title><rect x="1076.3" y="739.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1079.3" y="750.0"></text>
</g>
<g>
<title>wake_q_add_safe (1 samples, 0.02%)</title><rect x="1076.6" y="739.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1079.6" y="750.0"></text>
</g>
<g>
<title>wake_up_q (16 samples, 0.37%)</title><rect x="1076.8" y="739.0" width="4.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1079.8" y="750.0"></text>
</g>
<g>
<title>try_to_wake_up (16 samples, 0.37%)</title><rect x="1076.8" y="723.0" width="4.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1079.8" y="734.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (16 samples, 0.37%)</title><rect x="1076.8" y="707.0" width="4.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1079.8" y="718.0"></text>
</g>
<g>
<title>_dl_update_slotinfo (1 samples, 0.02%)</title><rect x="1081.2" y="835.0" width="0.2" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1084.2" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer$$Lambda$65/1115085888.run (402 samples, 9.20%)</title><rect x="1081.4" y="947.0" width="108.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1084.4" y="958.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.lambda$executeAsync$3 (402 samples, 9.20%)</title><rect x="1081.4" y="931.0" width="108.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1084.4" y="942.0">ru/mail/polis..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (304 samples, 6.96%)</title><rect x="1081.7" y="915.0" width="82.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1084.7" y="926.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (304 samples, 6.96%)</title><rect x="1081.7" y="899.0" width="82.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1084.7" y="910.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (8 samples, 0.18%)</title><rect x="1081.7" y="883.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1084.7" y="894.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="1082.8" y="867.0" width="0.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1085.8" y="878.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (3 samples, 0.07%)</title><rect x="1083.0" y="867.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1086.0" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (3 samples, 0.07%)</title><rect x="1083.0" y="851.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1086.0" y="862.0"></text>
</g>
<g>
<title>java/lang/String.charAt (3 samples, 0.07%)</title><rect x="1083.0" y="835.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1086.0" y="846.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (296 samples, 6.78%)</title><rect x="1083.9" y="883.0" width="79.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1086.9" y="894.0">one/nio/n..</text>
</g>
<g>
<title>one/nio/net/Session.write (296 samples, 6.78%)</title><rect x="1083.9" y="867.0" width="79.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1086.9" y="878.0">one/nio/n..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (292 samples, 6.68%)</title><rect x="1084.9" y="851.0" width="78.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1087.9" y="862.0">one/nio/n..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (292 samples, 6.68%)</title><rect x="1084.9" y="835.0" width="78.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1087.9" y="846.0">one/nio/n..</text>
</g>
<g>
<title>.annobin_send.c (281 samples, 6.43%)</title><rect x="1085.5" y="819.0" width="75.9" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1088.5" y="830.0">.annobin..</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="1088.4" y="803.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1091.4" y="814.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (269 samples, 6.16%)</title><rect x="1088.7" y="803.0" width="72.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1091.7" y="814.0">entry_SY..</text>
</g>
<g>
<title>do_syscall_64 (269 samples, 6.16%)</title><rect x="1088.7" y="787.0" width="72.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1091.7" y="798.0">do_sysca..</text>
</g>
<g>
<title>__x64_sys_sendto (265 samples, 6.07%)</title><rect x="1089.8" y="771.0" width="71.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1092.8" y="782.0">__x64_sy..</text>
</g>
<g>
<title>__sys_sendto (265 samples, 6.07%)</title><rect x="1089.8" y="755.0" width="71.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1092.8" y="766.0">__sys_se..</text>
</g>
<g>
<title>sock_sendmsg (255 samples, 5.84%)</title><rect x="1090.6" y="739.0" width="68.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1093.6" y="750.0">sock_se..</text>
</g>
<g>
<title>security_socket_sendmsg (10 samples, 0.23%)</title><rect x="1090.6" y="723.0" width="2.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1093.6" y="734.0"></text>
</g>
<g>
<title>sock_has_perm (8 samples, 0.18%)</title><rect x="1091.1" y="707.0" width="2.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1094.1" y="718.0"></text>
</g>
<g>
<title>avc_has_perm (2 samples, 0.05%)</title><rect x="1092.8" y="691.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1095.8" y="702.0"></text>
</g>
<g>
<title>tcp_sendmsg (245 samples, 5.61%)</title><rect x="1093.3" y="723.0" width="66.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1096.3" y="734.0">tcp_sen..</text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.02%)</title><rect x="1093.6" y="707.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1096.6" y="718.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.02%)</title><rect x="1093.6" y="691.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1096.6" y="702.0"></text>
</g>
<g>
<title>release_sock (4 samples, 0.09%)</title><rect x="1093.8" y="707.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1096.8" y="718.0"></text>
</g>
<g>
<title>__release_sock (1 samples, 0.02%)</title><rect x="1094.7" y="691.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1097.7" y="702.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="1094.7" y="675.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1097.7" y="686.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="1094.7" y="659.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1097.7" y="670.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.02%)</title><rect x="1094.7" y="643.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1097.7" y="654.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (239 samples, 5.47%)</title><rect x="1094.9" y="707.0" width="64.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1097.9" y="718.0">tcp_sen..</text>
</g>
<g>
<title>__check_object_size (4 samples, 0.09%)</title><rect x="1094.9" y="691.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1097.9" y="702.0"></text>
</g>
<g>
<title>__check_heap_object (1 samples, 0.02%)</title><rect x="1094.9" y="675.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1097.9" y="686.0"></text>
</g>
<g>
<title>__virt_addr_valid (3 samples, 0.07%)</title><rect x="1095.2" y="675.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1098.2" y="686.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (221 samples, 5.06%)</title><rect x="1096.0" y="691.0" width="59.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1099.0" y="702.0">__tcp_..</text>
</g>
<g>
<title>tcp_write_xmit (220 samples, 5.04%)</title><rect x="1096.3" y="675.0" width="59.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1099.3" y="686.0">tcp_wr..</text>
</g>
<g>
<title>__tcp_transmit_skb (213 samples, 4.88%)</title><rect x="1096.6" y="659.0" width="57.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1099.6" y="670.0">__tcp_..</text>
</g>
<g>
<title>__ip_queue_xmit (205 samples, 4.69%)</title><rect x="1097.4" y="643.0" width="55.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1100.4" y="654.0">__ip_..</text>
</g>
<g>
<title>ip_local_out (45 samples, 1.03%)</title><rect x="1097.4" y="627.0" width="12.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1100.4" y="638.0"></text>
</g>
<g>
<title>__ip_local_out (45 samples, 1.03%)</title><rect x="1097.4" y="611.0" width="12.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1100.4" y="622.0"></text>
</g>
<g>
<title>ip_send_check (1 samples, 0.02%)</title><rect x="1097.4" y="595.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1100.4" y="606.0"></text>
</g>
<g>
<title>nf_hook_slow (44 samples, 1.01%)</title><rect x="1097.6" y="595.0" width="11.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1100.6" y="606.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (10 samples, 0.23%)</title><rect x="1098.2" y="579.0" width="2.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1101.2" y="590.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="1100.6" y="563.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1103.6" y="574.0"></text>
</g>
<g>
<title>do_softirq.part.0 (1 samples, 0.02%)</title><rect x="1100.6" y="547.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1103.6" y="558.0"></text>
</g>
<g>
<title>do_softirq_own_stack (1 samples, 0.02%)</title><rect x="1100.6" y="531.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1103.6" y="542.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1100.6" y="515.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1103.6" y="526.0"></text>
</g>
<g>
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="1100.6" y="499.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1103.6" y="510.0"></text>
</g>
<g>
<title>iptable_filter_hook	[iptable_filter] (1 samples, 0.02%)</title><rect x="1100.9" y="579.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1103.9" y="590.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (7 samples, 0.16%)</title><rect x="1101.1" y="579.0" width="1.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1104.1" y="590.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (6 samples, 0.14%)</title><rect x="1101.4" y="563.0" width="1.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1104.4" y="574.0"></text>
</g>
<g>
<title>iptable_raw_hook	[iptable_raw] (1 samples, 0.02%)</title><rect x="1103.0" y="579.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1106.0" y="590.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (19 samples, 0.43%)</title><rect x="1103.3" y="579.0" width="5.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1106.3" y="590.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get	[nf_conntrack] (10 samples, 0.23%)</title><rect x="1103.6" y="563.0" width="2.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1106.6" y="574.0"></text>
</g>
<g>
<title>hash_conntrack_raw	[nf_conntrack] (1 samples, 0.02%)</title><rect x="1106.3" y="563.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1109.3" y="574.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet	[nf_conntrack] (6 samples, 0.14%)</title><rect x="1106.5" y="563.0" width="1.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1109.5" y="574.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.02%)</title><rect x="1107.4" y="547.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1110.4" y="558.0"></text>
</g>
<g>
<title>nf_ct_seq_offset	[nf_conntrack] (2 samples, 0.05%)</title><rect x="1107.6" y="547.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1110.6" y="558.0"></text>
</g>
<g>
<title>nf_ct_get_tuple	[nf_conntrack] (1 samples, 0.02%)</title><rect x="1108.2" y="563.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1111.2" y="574.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn	[nf_nat] (4 samples, 0.09%)</title><rect x="1108.4" y="579.0" width="1.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1111.4" y="590.0"></text>
</g>
<g>
<title>nf_nat_inet_fn	[nf_nat] (2 samples, 0.05%)</title><rect x="1109.0" y="563.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1112.0" y="574.0"></text>
</g>
<g>
<title>ip_output (160 samples, 3.66%)</title><rect x="1109.5" y="627.0" width="43.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1112.5" y="638.0">ip_o..</text>
</g>
<g>
<title>ip_finish_output2 (140 samples, 3.20%)</title><rect x="1110.1" y="611.0" width="37.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1113.1" y="622.0">ip_..</text>
</g>
<g>
<title>__dev_queue_xmit (14 samples, 0.32%)</title><rect x="1111.9" y="595.0" width="3.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1114.9" y="606.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (8 samples, 0.18%)</title><rect x="1113.6" y="579.0" width="2.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1116.6" y="590.0"></text>
</g>
<g>
<title>loopback_xmit (8 samples, 0.18%)</title><rect x="1113.6" y="563.0" width="2.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1116.6" y="574.0"></text>
</g>
<g>
<title>eth_type_trans (2 samples, 0.05%)</title><rect x="1113.6" y="547.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1116.6" y="558.0"></text>
</g>
<g>
<title>netif_rx (5 samples, 0.11%)</title><rect x="1114.1" y="547.0" width="1.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1117.1" y="558.0"></text>
</g>
<g>
<title>netif_rx_internal (5 samples, 0.11%)</title><rect x="1114.1" y="531.0" width="1.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1117.1" y="542.0"></text>
</g>
<g>
<title>enqueue_to_backlog (1 samples, 0.02%)</title><rect x="1114.6" y="515.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1117.6" y="526.0"></text>
</g>
<g>
<title>ktime_get_with_offset (2 samples, 0.05%)</title><rect x="1114.9" y="515.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1117.9" y="526.0"></text>
</g>
<g>
<title>tcp_wfree (1 samples, 0.02%)</title><rect x="1115.5" y="547.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1118.5" y="558.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (119 samples, 2.72%)</title><rect x="1115.7" y="595.0" width="32.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1118.7" y="606.0">__..</text>
</g>
<g>
<title>do_softirq.part.0 (119 samples, 2.72%)</title><rect x="1115.7" y="579.0" width="32.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1118.7" y="590.0">do..</text>
</g>
<g>
<title>do_softirq_own_stack (119 samples, 2.72%)</title><rect x="1115.7" y="563.0" width="32.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1118.7" y="574.0">do..</text>
</g>
<g>
<title>__softirqentry_text_start (119 samples, 2.72%)</title><rect x="1115.7" y="547.0" width="32.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1118.7" y="558.0">__..</text>
</g>
<g>
<title>net_rx_action (117 samples, 2.68%)</title><rect x="1116.3" y="531.0" width="31.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1119.3" y="542.0">ne..</text>
</g>
<g>
<title>__kfree_skb_flush (1 samples, 0.02%)</title><rect x="1117.6" y="515.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1120.6" y="526.0"></text>
</g>
<g>
<title>process_backlog (111 samples, 2.54%)</title><rect x="1117.9" y="515.0" width="30.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1120.9" y="526.0">pr..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (110 samples, 2.52%)</title><rect x="1118.2" y="499.0" width="29.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1121.2" y="510.0">__..</text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1118.2" y="483.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1121.2" y="494.0"></text>
</g>
<g>
<title>ip_rcv (109 samples, 2.49%)</title><rect x="1118.4" y="483.0" width="29.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1121.4" y="494.0">ip..</text>
</g>
<g>
<title>ip_local_deliver (88 samples, 2.01%)</title><rect x="1118.4" y="467.0" width="23.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1121.4" y="478.0">i..</text>
</g>
<g>
<title>ip_local_deliver_finish (69 samples, 1.58%)</title><rect x="1119.0" y="451.0" width="18.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1122.0" y="462.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (69 samples, 1.58%)</title><rect x="1119.0" y="435.0" width="18.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1122.0" y="446.0"></text>
</g>
<g>
<title>tcp_v4_rcv (67 samples, 1.53%)</title><rect x="1119.5" y="419.0" width="18.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1122.5" y="430.0"></text>
</g>
<g>
<title>__inet_lookup_established (7 samples, 0.16%)</title><rect x="1120.0" y="403.0" width="1.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1123.0" y="414.0"></text>
</g>
<g>
<title>inet_ehashfn (1 samples, 0.02%)</title><rect x="1121.7" y="387.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1124.7" y="398.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="1121.9" y="403.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1124.9" y="414.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.02%)</title><rect x="1122.2" y="403.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1125.2" y="414.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (1 samples, 0.02%)</title><rect x="1122.2" y="387.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1125.2" y="398.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (55 samples, 1.26%)</title><rect x="1122.5" y="403.0" width="14.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1125.5" y="414.0"></text>
</g>
<g>
<title>tcp_rcv_established (55 samples, 1.26%)</title><rect x="1122.5" y="387.0" width="14.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1125.5" y="398.0"></text>
</g>
<g>
<title>sk_reset_timer (5 samples, 0.11%)</title><rect x="1123.0" y="371.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1126.0" y="382.0"></text>
</g>
<g>
<title>mod_timer (5 samples, 0.11%)</title><rect x="1123.0" y="355.0" width="1.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1126.0" y="366.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (5 samples, 0.11%)</title><rect x="1123.0" y="339.0" width="1.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1126.0" y="350.0"></text>
</g>
<g>
<title>tcp_ack (23 samples, 0.53%)</title><rect x="1124.4" y="371.0" width="6.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1127.4" y="382.0"></text>
</g>
<g>
<title>__kfree_skb (5 samples, 0.11%)</title><rect x="1126.5" y="355.0" width="1.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1129.5" y="366.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.02%)</title><rect x="1126.5" y="339.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1129.5" y="350.0"></text>
</g>
<g>
<title>skb_release_data (4 samples, 0.09%)</title><rect x="1126.8" y="339.0" width="1.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1129.8" y="350.0"></text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.02%)</title><rect x="1127.9" y="355.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1130.9" y="366.0"></text>
</g>
<g>
<title>kmem_cache_free (2 samples, 0.05%)</title><rect x="1128.2" y="355.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1131.2" y="366.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (2 samples, 0.05%)</title><rect x="1128.7" y="355.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1131.7" y="366.0"></text>
</g>
<g>
<title>tcp_rate_gen (1 samples, 0.02%)</title><rect x="1129.2" y="355.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1132.2" y="366.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.02%)</title><rect x="1129.5" y="355.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1132.5" y="366.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (3 samples, 0.07%)</title><rect x="1129.8" y="355.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1132.8" y="366.0"></text>
</g>
<g>
<title>tcp_check_space (2 samples, 0.05%)</title><rect x="1130.6" y="371.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1133.6" y="382.0"></text>
</g>
<g>
<title>tcp_data_queue (21 samples, 0.48%)</title><rect x="1131.1" y="371.0" width="5.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1134.1" y="382.0"></text>
</g>
<g>
<title>dst_release (2 samples, 0.05%)</title><rect x="1131.1" y="355.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1134.1" y="366.0"></text>
</g>
<g>
<title>sock_def_readable (17 samples, 0.39%)</title><rect x="1131.7" y="355.0" width="4.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1134.7" y="366.0"></text>
</g>
<g>
<title>__wake_up_common_lock (13 samples, 0.30%)</title><rect x="1132.7" y="339.0" width="3.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1135.7" y="350.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (12 samples, 0.27%)</title><rect x="1133.0" y="323.0" width="3.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1136.0" y="334.0"></text>
</g>
<g>
<title>tcp_event_data_recv (1 samples, 0.02%)</title><rect x="1136.3" y="355.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1139.3" y="366.0"></text>
</g>
<g>
<title>tcp_queue_rcv (1 samples, 0.02%)</title><rect x="1136.5" y="355.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1139.5" y="366.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (2 samples, 0.05%)</title><rect x="1136.8" y="371.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1139.8" y="382.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.05%)</title><rect x="1136.8" y="355.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1139.8" y="366.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.02%)</title><rect x="1137.1" y="339.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1140.1" y="350.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (1 samples, 0.02%)</title><rect x="1137.3" y="403.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1140.3" y="414.0"></text>
</g>
<g>
<title>nf_hook_slow (17 samples, 0.39%)</title><rect x="1137.6" y="451.0" width="4.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1140.6" y="462.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (12 samples, 0.27%)</title><rect x="1138.4" y="435.0" width="3.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1141.4" y="446.0"></text>
</g>
<g>
<title>conntrack_mt_v3	[xt_conntrack] (2 samples, 0.05%)</title><rect x="1141.1" y="419.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1144.1" y="430.0"></text>
</g>
<g>
<title>ipv4_confirm	[nf_conntrack] (1 samples, 0.02%)</title><rect x="1141.7" y="435.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1144.7" y="446.0"></text>
</g>
<g>
<title>nf_confirm	[nf_conntrack] (1 samples, 0.02%)</title><rect x="1141.9" y="435.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1144.9" y="446.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events	[nf_conntrack] (1 samples, 0.02%)</title><rect x="1141.9" y="419.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1144.9" y="430.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1142.2" y="467.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1145.2" y="478.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.0 (1 samples, 0.02%)</title><rect x="1142.2" y="451.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1145.2" y="462.0"></text>
</g>
<g>
<title>nf_hook_slow (20 samples, 0.46%)</title><rect x="1142.5" y="467.0" width="5.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1145.5" y="478.0"></text>
</g>
<g>
<title>ip_sabotage_in	[br_netfilter] (1 samples, 0.02%)</title><rect x="1142.5" y="451.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1145.5" y="462.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (14 samples, 0.32%)</title><rect x="1142.7" y="451.0" width="3.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1145.7" y="462.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag	[nf_defrag_ipv4] (3 samples, 0.07%)</title><rect x="1146.5" y="451.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1149.5" y="462.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (2 samples, 0.05%)</title><rect x="1147.3" y="451.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1150.3" y="462.0"></text>
</g>
<g>
<title>ip_finish_output (2 samples, 0.05%)</title><rect x="1147.9" y="611.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1150.9" y="622.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.02%)</title><rect x="1148.1" y="595.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1151.1" y="606.0"></text>
</g>
<g>
<title>nf_hook_slow (16 samples, 0.37%)</title><rect x="1148.4" y="611.0" width="4.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1151.4" y="622.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (8 samples, 0.18%)</title><rect x="1148.9" y="595.0" width="2.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1151.9" y="606.0"></text>
</g>
<g>
<title>ipv4_confirm	[nf_conntrack] (1 samples, 0.02%)</title><rect x="1151.1" y="595.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1154.1" y="606.0"></text>
</g>
<g>
<title>nf_confirm	[nf_conntrack] (1 samples, 0.02%)</title><rect x="1151.4" y="595.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1154.4" y="606.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events	[nf_conntrack] (1 samples, 0.02%)</title><rect x="1151.4" y="579.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1154.4" y="590.0"></text>
</g>
<g>
<title>nf_nat_ipv4_out	[nf_nat] (2 samples, 0.05%)</title><rect x="1151.6" y="595.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1154.6" y="606.0"></text>
</g>
<g>
<title>selinux_ip_postroute (2 samples, 0.05%)</title><rect x="1152.2" y="595.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1155.2" y="606.0"></text>
</g>
<g>
<title>__skb_clone (1 samples, 0.02%)</title><rect x="1152.7" y="643.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1155.7" y="654.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (2 samples, 0.05%)</title><rect x="1153.0" y="643.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1156.0" y="654.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (1 samples, 0.02%)</title><rect x="1153.5" y="643.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1156.5" y="654.0"></text>
</g>
<g>
<title>tcp_v4_send_check (1 samples, 0.02%)</title><rect x="1153.8" y="643.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1156.8" y="654.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (4 samples, 0.09%)</title><rect x="1154.1" y="659.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1157.1" y="670.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.02%)</title><rect x="1154.1" y="643.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1157.1" y="654.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.02%)</title><rect x="1154.1" y="627.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1157.1" y="638.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="1154.1" y="611.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1157.1" y="622.0"></text>
</g>
<g>
<title>tcp_rearm_rto (3 samples, 0.07%)</title><rect x="1154.3" y="643.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1157.3" y="654.0"></text>
</g>
<g>
<title>rb_first (1 samples, 0.02%)</title><rect x="1154.9" y="627.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1157.9" y="638.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (2 samples, 0.05%)</title><rect x="1155.2" y="659.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1158.2" y="670.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.02%)</title><rect x="1155.4" y="643.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1158.4" y="654.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.02%)</title><rect x="1155.4" y="627.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1158.4" y="638.0"></text>
</g>
<g>
<title>_copy_from_iter_full (3 samples, 0.07%)</title><rect x="1155.7" y="691.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1158.7" y="702.0"></text>
</g>
<g>
<title>copyin (3 samples, 0.07%)</title><rect x="1155.7" y="675.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1158.7" y="686.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.02%)</title><rect x="1156.2" y="659.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1159.2" y="670.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (6 samples, 0.14%)</title><rect x="1156.5" y="691.0" width="1.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1159.5" y="702.0"></text>
</g>
<g>
<title>__alloc_skb (6 samples, 0.14%)</title><rect x="1156.5" y="675.0" width="1.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1159.5" y="686.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (3 samples, 0.07%)</title><rect x="1157.0" y="659.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1160.0" y="670.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (3 samples, 0.07%)</title><rect x="1157.0" y="643.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1160.0" y="654.0"></text>
</g>
<g>
<title>__slab_alloc (1 samples, 0.02%)</title><rect x="1157.6" y="627.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1160.6" y="638.0"></text>
</g>
<g>
<title>ksize (1 samples, 0.02%)</title><rect x="1157.9" y="659.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1160.9" y="670.0"></text>
</g>
<g>
<title>sock_zerocopy_put (1 samples, 0.02%)</title><rect x="1158.1" y="691.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1161.1" y="702.0"></text>
</g>
<g>
<title>tcp_push (1 samples, 0.02%)</title><rect x="1158.4" y="691.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1161.4" y="702.0"></text>
</g>
<g>
<title>tcp_send_mss (2 samples, 0.05%)</title><rect x="1158.7" y="691.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1161.7" y="702.0"></text>
</g>
<g>
<title>tcp_current_mss (2 samples, 0.05%)</title><rect x="1158.7" y="675.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1161.7" y="686.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.02%)</title><rect x="1158.9" y="659.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1161.9" y="670.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.02%)</title><rect x="1159.2" y="691.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1162.2" y="702.0"></text>
</g>
<g>
<title>sockfd_lookup_light (7 samples, 0.16%)</title><rect x="1159.5" y="739.0" width="1.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1162.5" y="750.0"></text>
</g>
<g>
<title>__fget_light (7 samples, 0.16%)</title><rect x="1159.5" y="723.0" width="1.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1162.5" y="734.0"></text>
</g>
<g>
<title>__fget (4 samples, 0.09%)</title><rect x="1160.3" y="707.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1163.3" y="718.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.18%)</title><rect x="1161.4" y="819.0" width="2.1" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1164.4" y="830.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.18%)</title><rect x="1161.4" y="803.0" width="2.1" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1164.4" y="814.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (6 samples, 0.14%)</title><rect x="1161.4" y="787.0" width="1.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1164.4" y="798.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="1161.4" y="771.0" width="0.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1164.4" y="782.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (4 samples, 0.09%)</title><rect x="1161.6" y="771.0" width="1.1" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="1164.6" y="782.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.02%)</title><rect x="1161.9" y="755.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1164.9" y="766.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (2 samples, 0.05%)</title><rect x="1162.2" y="755.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1165.2" y="766.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.02%)</title><rect x="1162.7" y="771.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1165.7" y="782.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.02%)</title><rect x="1163.0" y="787.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1166.0" y="798.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.02%)</title><rect x="1163.3" y="787.0" width="0.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1166.3" y="798.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.02%)</title><rect x="1163.5" y="819.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1166.5" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer$$Lambda$62/2080080204.get (2 samples, 0.05%)</title><rect x="1163.8" y="915.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1166.8" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.lambda$entity$1 (2 samples, 0.05%)</title><rect x="1163.8" y="899.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1166.8" y="910.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.05%)</title><rect x="1163.8" y="883.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1166.8" y="894.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.05%)</title><rect x="1163.8" y="867.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1166.8" y="878.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.05%)</title><rect x="1163.8" y="851.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1166.8" y="862.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.05%)</title><rect x="1163.8" y="835.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1166.8" y="846.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.05%)</title><rect x="1163.8" y="819.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1166.8" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.02%)</title><rect x="1163.8" y="803.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1166.8" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.02%)</title><rect x="1163.8" y="787.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1166.8" y="798.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.02%)</title><rect x="1163.8" y="771.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1166.8" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.02%)</title><rect x="1164.1" y="803.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1167.1" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.02%)</title><rect x="1164.1" y="787.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1167.1" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer$$Lambda$85/1955586341.get (95 samples, 2.17%)</title><rect x="1164.3" y="915.0" width="25.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1167.3" y="926.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.lambda$entity$2 (95 samples, 2.17%)</title><rect x="1164.3" y="899.0" width="25.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1167.3" y="910.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.delete (94 samples, 2.15%)</title><rect x="1164.6" y="883.0" width="25.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1167.6" y="894.0">r..</text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.02%)</title><rect x="1165.2" y="867.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1168.2" y="878.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1 samples, 0.02%)</title><rect x="1165.2" y="851.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1168.2" y="862.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (1 samples, 0.02%)</title><rect x="1165.2" y="835.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1168.2" y="846.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (5 samples, 0.11%)</title><rect x="1165.4" y="867.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1168.4" y="878.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (5 samples, 0.11%)</title><rect x="1165.4" y="851.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1168.4" y="862.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (5 samples, 0.11%)</title><rect x="1165.4" y="835.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1168.4" y="846.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 0.11%)</title><rect x="1165.4" y="819.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1168.4" y="830.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.05%)</title><rect x="1165.4" y="803.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1168.4" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.02%)</title><rect x="1165.4" y="787.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1168.4" y="798.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.02%)</title><rect x="1165.4" y="771.0" width="0.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1168.4" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.02%)</title><rect x="1165.7" y="787.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1168.7" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.02%)</title><rect x="1165.7" y="771.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1168.7" y="782.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.02%)</title><rect x="1165.7" y="755.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1168.7" y="766.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.05%)</title><rect x="1166.0" y="803.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1169.0" y="814.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.05%)</title><rect x="1166.0" y="787.0" width="0.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1169.0" y="798.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.02%)</title><rect x="1166.2" y="771.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1169.2" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.setToFlush (1 samples, 0.02%)</title><rect x="1166.5" y="803.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1169.5" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.remove (86 samples, 1.97%)</title><rect x="1166.8" y="867.0" width="23.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1169.8" y="878.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.remove (86 samples, 1.97%)</title><rect x="1166.8" y="851.0" width="23.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1169.8" y="862.0">r..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.lock (8 samples, 0.18%)</title><rect x="1166.8" y="835.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1169.8" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (8 samples, 0.18%)</title><rect x="1166.8" y="819.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1169.8" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (4 samples, 0.09%)</title><rect x="1166.8" y="803.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1169.8" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (4 samples, 0.09%)</title><rect x="1166.8" y="787.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1169.8" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (4 samples, 0.09%)</title><rect x="1166.8" y="771.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1169.8" y="782.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (4 samples, 0.09%)</title><rect x="1166.8" y="755.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1169.8" y="766.0"></text>
</g>
<g>
<title>Unsafe_Park (3 samples, 0.07%)</title><rect x="1166.8" y="739.0" width="0.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1169.8" y="750.0"></text>
</g>
<g>
<title>__lll_unlock_wake (3 samples, 0.07%)</title><rect x="1166.8" y="723.0" width="0.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1169.8" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="1167.3" y="707.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1170.3" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="1167.3" y="691.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1170.3" y="702.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="1167.6" y="739.0" width="0.3" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="1170.6" y="750.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.02%)</title><rect x="1167.6" y="723.0" width="0.3" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1170.6" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (1 samples, 0.02%)</title><rect x="1167.9" y="803.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1170.9" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquire (3 samples, 0.07%)</title><rect x="1168.1" y="803.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1171.1" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.setExclusiveOwnerThread (2 samples, 0.05%)</title><rect x="1168.1" y="787.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1171.1" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (1 samples, 0.02%)</title><rect x="1168.7" y="787.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1171.7" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.02%)</title><rect x="1168.7" y="771.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1171.7" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.unlock (5 samples, 0.11%)</title><rect x="1168.9" y="835.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1171.9" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (5 samples, 0.11%)</title><rect x="1168.9" y="819.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1171.9" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (5 samples, 0.11%)</title><rect x="1168.9" y="803.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1171.9" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (5 samples, 0.11%)</title><rect x="1168.9" y="787.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1171.9" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (5 samples, 0.11%)</title><rect x="1168.9" y="771.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1171.9" y="782.0"></text>
</g>
<g>
<title>__pthread_cond_signal (5 samples, 0.11%)</title><rect x="1168.9" y="755.0" width="1.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1171.9" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.07%)</title><rect x="1169.5" y="739.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1172.5" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.07%)</title><rect x="1169.5" y="723.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1172.5" y="734.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.02%)</title><rect x="1170.0" y="707.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1173.0" y="718.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.02%)</title><rect x="1170.0" y="691.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1173.0" y="702.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.02%)</title><rect x="1170.0" y="675.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1173.0" y="686.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.02%)</title><rect x="1170.0" y="659.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1173.0" y="670.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.02%)</title><rect x="1170.0" y="643.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1173.0" y="654.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="1170.0" y="627.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1173.0" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.remove (73 samples, 1.67%)</title><rect x="1170.3" y="835.0" width="19.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1173.3" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (71 samples, 1.63%)</title><rect x="1170.3" y="819.0" width="19.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1173.3" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (71 samples, 1.63%)</title><rect x="1170.3" y="803.0" width="19.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1173.3" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (4 samples, 0.09%)</title><rect x="1171.6" y="787.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1174.6" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.02%)</title><rect x="1171.6" y="771.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1174.6" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (1 samples, 0.02%)</title><rect x="1171.9" y="771.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1174.9" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (1 samples, 0.02%)</title><rect x="1171.9" y="755.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1174.9" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (1 samples, 0.02%)</title><rect x="1171.9" y="739.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1174.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (1 samples, 0.02%)</title><rect x="1171.9" y="723.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1174.9" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.02%)</title><rect x="1171.9" y="707.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1174.9" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.02%)</title><rect x="1171.9" y="691.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1174.9" y="702.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.02%)</title><rect x="1171.9" y="675.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1174.9" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (2 samples, 0.05%)</title><rect x="1172.2" y="771.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1175.2" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.02%)</title><rect x="1172.4" y="755.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1175.4" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.02%)</title><rect x="1172.4" y="739.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1175.4" y="750.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.02%)</title><rect x="1172.4" y="723.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1175.4" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (62 samples, 1.42%)</title><rect x="1172.7" y="787.0" width="16.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1175.7" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (62 samples, 1.42%)</title><rect x="1172.7" y="771.0" width="16.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1175.7" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (39 samples, 0.89%)</title><rect x="1178.9" y="755.0" width="10.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1181.9" y="766.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (38 samples, 0.87%)</title><rect x="1178.9" y="739.0" width="10.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1181.9" y="750.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_virtual_call_C(JavaThread*) (1 samples, 0.02%)</title><rect x="1184.6" y="723.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1187.6" y="734.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.02%)</title><rect x="1184.6" y="707.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1187.6" y="718.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_sub_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.02%)</title><rect x="1184.6" y="691.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1187.6" y="702.0"></text>
</g>
<g>
<title>Method::bcp_from(int) const (1 samples, 0.02%)</title><rect x="1184.6" y="675.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1187.6" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.base (2 samples, 0.05%)</title><rect x="1184.9" y="723.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1187.9" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (11 samples, 0.25%)</title><rect x="1185.4" y="723.0" width="3.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1188.4" y="734.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (7 samples, 0.16%)</title><rect x="1186.5" y="707.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1189.5" y="718.0"></text>
</g>
<g>
<title>jdk/internal/util/ArraysSupport.vectorizedMismatch (2 samples, 0.05%)</title><rect x="1188.4" y="723.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1191.4" y="734.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.02%)</title><rect x="1188.9" y="723.0" width="0.3" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="1191.9" y="734.0"></text>
</g>
<g>
<title>jdk/internal/util/ArraysSupport.vectorizedMismatch (1 samples, 0.02%)</title><rect x="1189.2" y="739.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1192.2" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Value.getData (1 samples, 0.02%)</title><rect x="1189.5" y="819.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1192.5" y="830.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (1 samples, 0.02%)</title><rect x="1189.5" y="803.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1192.5" y="814.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (1 samples, 0.02%)</title><rect x="1189.5" y="787.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1192.5" y="798.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="1189.5" y="771.0" width="0.2" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1192.5" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Value.isRemoved (1 samples, 0.02%)</title><rect x="1189.7" y="819.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1192.7" y="830.0"></text>
</g>
</g>
</svg>
