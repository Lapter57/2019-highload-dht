<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="326" onload="init(evt)" viewBox="0 0 1200 326" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="309"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="309"> </text>
<g id="frames">
<g>
<title>all (3,760 samples, 100.00%)</title><rect x="10.0" y="275.0" width="1180.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="13.0" y="286.0">all</text>
</g>
<g>
<title>[Attach Listener tid=26421] (1 samples, 0.03%)</title><rect x="10.0" y="259.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="13.0" y="270.0"></text>
</g>
<g>
<title>[not_walkable] (1 samples, 0.03%)</title><rect x="10.0" y="243.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="13.0" y="254.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.03%)</title><rect x="10.0" y="227.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="13.0" y="238.0"></text>
</g>
<g>
<title>[NIO Acceptor 0.0.0.0:8080 tid=25374] (235 samples, 6.25%)</title><rect x="10.3" y="259.0" width="73.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="13.3" y="270.0">[NIO Acc..</text>
</g>
<g>
<title>one/nio/server/AcceptorThread.run (235 samples, 6.25%)</title><rect x="10.3" y="243.0" width="73.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="13.3" y="254.0">one/nio/..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.createSession (235 samples, 6.25%)</title><rect x="10.3" y="227.0" width="73.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="13.3" y="238.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.createSession (235 samples, 6.25%)</title><rect x="10.3" y="211.0" width="73.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.3" y="222.0">ru/mail/..</text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.StorageSession (1 samples, 0.03%)</title><rect x="10.3" y="195.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="13.3" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/StorageSession.&lt;init&gt; (234 samples, 6.22%)</title><rect x="10.6" y="195.0" width="73.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.6" y="206.0">ru/mail/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.&lt;init&gt; (234 samples, 6.22%)</title><rect x="10.6" y="179.0" width="73.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.6" y="190.0">one/nio/..</text>
</g>
<g>
<title>byte[] (78 samples, 2.07%)</title><rect x="10.6" y="163.0" width="24.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="13.6" y="174.0">b..</text>
</g>
<g>
<title>byte[] (156 samples, 4.15%)</title><rect x="35.1" y="163.0" width="49.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="38.1" y="174.0">byte[]</text>
</g>
<g>
<title>[NIO Selector #0 tid=25370] (395 samples, 10.51%)</title><rect x="84.1" y="259.0" width="123.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="87.1" y="270.0">[NIO Selector #..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (395 samples, 10.51%)</title><rect x="84.1" y="243.0" width="123.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="87.1" y="254.0">one/nio/server/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (26 samples, 0.69%)</title><rect x="84.1" y="227.0" width="8.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="87.1" y="238.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (26 samples, 0.69%)</title><rect x="84.1" y="211.0" width="8.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="87.1" y="222.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (369 samples, 9.81%)</title><rect x="92.2" y="227.0" width="115.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="95.2" y="238.0">one/nio/net/Se..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (369 samples, 9.81%)</title><rect x="92.2" y="211.0" width="115.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="95.2" y="222.0">one/nio/http/H..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (366 samples, 9.73%)</title><rect x="92.2" y="195.0" width="114.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="95.2" y="206.0">one/nio/http/H..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (114 samples, 3.03%)</title><rect x="92.2" y="179.0" width="35.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="95.2" y="190.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (114 samples, 3.03%)</title><rect x="92.2" y="163.0" width="35.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="95.2" y="174.0">one..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (81 samples, 2.15%)</title><rect x="92.2" y="147.0" width="25.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="95.2" y="158.0">R..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (28 samples, 0.74%)</title><rect x="92.2" y="131.0" width="8.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="95.2" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (28 samples, 0.74%)</title><rect x="92.2" y="115.0" width="8.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="95.2" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (28 samples, 0.74%)</title><rect x="92.2" y="99.0" width="8.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="95.2" y="110.0"></text>
</g>
<g>
<title>java.lang.String (15 samples, 0.40%)</title><rect x="92.2" y="83.0" width="4.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="95.2" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (13 samples, 0.35%)</title><rect x="96.9" y="83.0" width="4.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="99.9" y="94.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.35%)</title><rect x="96.9" y="67.0" width="4.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="99.9" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.entity (53 samples, 1.41%)</title><rect x="101.0" y="131.0" width="16.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="104.0" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (17 samples, 0.45%)</title><rect x="101.0" y="115.0" width="5.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="104.0" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (17 samples, 0.45%)</title><rect x="101.0" y="99.0" width="5.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="104.0" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer$$Lambda$85/1955586341.get$Lambda (17 samples, 0.45%)</title><rect x="101.0" y="83.0" width="5.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="104.0" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.AsyncHttpServer$$Lambda$85 (17 samples, 0.45%)</title><rect x="101.0" y="67.0" width="5.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="104.0" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.executeAsync (36 samples, 0.96%)</title><rect x="106.3" y="115.0" width="11.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="109.3" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (12 samples, 0.32%)</title><rect x="106.3" y="99.0" width="3.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="109.3" y="110.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (12 samples, 0.32%)</title><rect x="106.3" y="83.0" width="3.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="109.3" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer$$Lambda$65/1115085888.get$Lambda (12 samples, 0.32%)</title><rect x="106.3" y="67.0" width="3.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="109.3" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.AsyncHttpServer$$Lambda$65 (12 samples, 0.32%)</title><rect x="106.3" y="51.0" width="3.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="109.3" y="62.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (24 samples, 0.64%)</title><rect x="110.1" y="99.0" width="7.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="113.1" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (24 samples, 0.64%)</title><rect x="110.1" y="83.0" width="7.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="113.1" y="94.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (24 samples, 0.64%)</title><rect x="110.1" y="67.0" width="7.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="113.1" y="78.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (33 samples, 0.88%)</title><rect x="117.6" y="147.0" width="10.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="120.6" y="158.0"></text>
</g>
<g>
<title>java/lang/String.substring (33 samples, 0.88%)</title><rect x="117.6" y="131.0" width="10.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="120.6" y="142.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (33 samples, 0.88%)</title><rect x="117.6" y="115.0" width="10.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="120.6" y="126.0"></text>
</g>
<g>
<title>java.lang.String (13 samples, 0.35%)</title><rect x="117.6" y="99.0" width="4.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="120.6" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (20 samples, 0.53%)</title><rect x="121.7" y="99.0" width="6.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="124.7" y="110.0"></text>
</g>
<g>
<title>byte[] (20 samples, 0.53%)</title><rect x="121.7" y="83.0" width="6.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="124.7" y="94.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (178 samples, 4.73%)</title><rect x="128.0" y="179.0" width="55.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="131.0" y="190.0">one/n..</text>
</g>
<g>
<title>one.nio.http.Request (19 samples, 0.51%)</title><rect x="128.0" y="163.0" width="6.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="131.0" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (45 samples, 1.20%)</title><rect x="134.0" y="163.0" width="14.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="137.0" y="174.0"></text>
</g>
<g>
<title>java.lang.String[] (43 samples, 1.14%)</title><rect x="134.0" y="147.0" width="13.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="137.0" y="158.0"></text>
</g>
<g>
<title>java.lang.String[] (2 samples, 0.05%)</title><rect x="147.5" y="147.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="150.5" y="158.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (114 samples, 3.03%)</title><rect x="148.1" y="163.0" width="35.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="151.1" y="174.0">one..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (114 samples, 3.03%)</title><rect x="148.1" y="147.0" width="35.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="151.1" y="158.0">one..</text>
</g>
<g>
<title>char[] (49 samples, 1.30%)</title><rect x="148.1" y="131.0" width="15.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="151.1" y="142.0"></text>
</g>
<g>
<title>char[] (6 samples, 0.16%)</title><rect x="163.5" y="131.0" width="1.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="166.5" y="142.0"></text>
</g>
<g>
<title>java.lang.String (12 samples, 0.32%)</title><rect x="165.3" y="131.0" width="3.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="168.3" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (47 samples, 1.25%)</title><rect x="169.1" y="131.0" width="14.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="172.1" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (47 samples, 1.25%)</title><rect x="169.1" y="115.0" width="14.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="172.1" y="126.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (47 samples, 1.25%)</title><rect x="169.1" y="99.0" width="14.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="172.1" y="110.0"></text>
</g>
<g>
<title>byte[] (47 samples, 1.25%)</title><rect x="169.1" y="83.0" width="14.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="172.1" y="94.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (74 samples, 1.97%)</title><rect x="183.9" y="179.0" width="23.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="186.9" y="190.0">o..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (74 samples, 1.97%)</title><rect x="183.9" y="163.0" width="23.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="186.9" y="174.0">o..</text>
</g>
<g>
<title>char[] (31 samples, 0.82%)</title><rect x="183.9" y="147.0" width="9.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="186.9" y="158.0"></text>
</g>
<g>
<title>java.lang.String (16 samples, 0.43%)</title><rect x="193.6" y="147.0" width="5.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="196.6" y="158.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (27 samples, 0.72%)</title><rect x="198.6" y="147.0" width="8.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="201.6" y="158.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (27 samples, 0.72%)</title><rect x="198.6" y="131.0" width="8.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="201.6" y="142.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (27 samples, 0.72%)</title><rect x="198.6" y="115.0" width="8.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="201.6" y="126.0"></text>
</g>
<g>
<title>byte[] (27 samples, 0.72%)</title><rect x="198.6" y="99.0" width="8.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="201.6" y="110.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (3 samples, 0.08%)</title><rect x="207.1" y="195.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="210.1" y="206.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (3 samples, 0.08%)</title><rect x="207.1" y="179.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="210.1" y="190.0"></text>
</g>
<g>
<title>one/nio/net/SocketClosedException.&lt;init&gt; (3 samples, 0.08%)</title><rect x="207.1" y="163.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="210.1" y="174.0"></text>
</g>
<g>
<title>java/net/SocketException.&lt;init&gt; (3 samples, 0.08%)</title><rect x="207.1" y="147.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="210.1" y="158.0"></text>
</g>
<g>
<title>java/io/IOException.&lt;init&gt; (3 samples, 0.08%)</title><rect x="207.1" y="131.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="210.1" y="142.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (3 samples, 0.08%)</title><rect x="207.1" y="115.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="210.1" y="126.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (3 samples, 0.08%)</title><rect x="207.1" y="99.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="210.1" y="110.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (3 samples, 0.08%)</title><rect x="207.1" y="83.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="210.1" y="94.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (3 samples, 0.08%)</title><rect x="207.1" y="67.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="210.1" y="78.0"></text>
</g>
<g>
<title>int[] (1 samples, 0.03%)</title><rect x="207.1" y="51.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="210.1" y="62.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.03%)</title><rect x="207.4" y="51.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="210.4" y="62.0"></text>
</g>
<g>
<title>long[] (1 samples, 0.03%)</title><rect x="207.7" y="51.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="210.7" y="62.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=25371] (350 samples, 9.31%)</title><rect x="208.0" y="259.0" width="109.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="211.0" y="270.0">[NIO Selector..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (350 samples, 9.31%)</title><rect x="208.0" y="243.0" width="109.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="211.0" y="254.0">one/nio/serve..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (20 samples, 0.53%)</title><rect x="208.0" y="227.0" width="6.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="211.0" y="238.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (20 samples, 0.53%)</title><rect x="208.0" y="211.0" width="6.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="211.0" y="222.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (330 samples, 8.78%)</title><rect x="214.3" y="227.0" width="103.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="217.3" y="238.0">one/nio/net/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (330 samples, 8.78%)</title><rect x="214.3" y="211.0" width="103.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="217.3" y="222.0">one/nio/http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (329 samples, 8.75%)</title><rect x="214.3" y="195.0" width="103.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="217.3" y="206.0">one/nio/http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (96 samples, 2.55%)</title><rect x="214.3" y="179.0" width="30.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="217.3" y="190.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (96 samples, 2.55%)</title><rect x="214.3" y="163.0" width="30.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="217.3" y="174.0">on..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (53 samples, 1.41%)</title><rect x="214.3" y="147.0" width="16.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="217.3" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (21 samples, 0.56%)</title><rect x="214.3" y="131.0" width="6.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="217.3" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (21 samples, 0.56%)</title><rect x="214.3" y="115.0" width="6.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="217.3" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (21 samples, 0.56%)</title><rect x="214.3" y="99.0" width="6.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="217.3" y="110.0"></text>
</g>
<g>
<title>java.lang.String (10 samples, 0.27%)</title><rect x="214.3" y="83.0" width="3.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="217.3" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (11 samples, 0.29%)</title><rect x="217.4" y="83.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="220.4" y="94.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.29%)</title><rect x="217.4" y="67.0" width="3.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="220.4" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.entity (32 samples, 0.85%)</title><rect x="220.9" y="131.0" width="10.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="223.9" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (12 samples, 0.32%)</title><rect x="220.9" y="115.0" width="3.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="223.9" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (12 samples, 0.32%)</title><rect x="220.9" y="99.0" width="3.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="223.9" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer$$Lambda$85/1955586341.get$Lambda (12 samples, 0.32%)</title><rect x="220.9" y="83.0" width="3.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="223.9" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.AsyncHttpServer$$Lambda$85 (12 samples, 0.32%)</title><rect x="220.9" y="67.0" width="3.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="223.9" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.executeAsync (20 samples, 0.53%)</title><rect x="224.7" y="115.0" width="6.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="227.7" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (9 samples, 0.24%)</title><rect x="224.7" y="99.0" width="2.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="227.7" y="110.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (9 samples, 0.24%)</title><rect x="224.7" y="83.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="227.7" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer$$Lambda$65/1115085888.get$Lambda (9 samples, 0.24%)</title><rect x="224.7" y="67.0" width="2.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="227.7" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.AsyncHttpServer$$Lambda$65 (9 samples, 0.24%)</title><rect x="224.7" y="51.0" width="2.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="227.7" y="62.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (11 samples, 0.29%)</title><rect x="227.5" y="99.0" width="3.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="230.5" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (11 samples, 0.29%)</title><rect x="227.5" y="83.0" width="3.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="230.5" y="94.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (11 samples, 0.29%)</title><rect x="227.5" y="67.0" width="3.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="230.5" y="78.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (43 samples, 1.14%)</title><rect x="230.9" y="147.0" width="13.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="233.9" y="158.0"></text>
</g>
<g>
<title>java/lang/String.substring (43 samples, 1.14%)</title><rect x="230.9" y="131.0" width="13.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="233.9" y="142.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (43 samples, 1.14%)</title><rect x="230.9" y="115.0" width="13.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="233.9" y="126.0"></text>
</g>
<g>
<title>java.lang.String (23 samples, 0.61%)</title><rect x="230.9" y="99.0" width="7.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="233.9" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (20 samples, 0.53%)</title><rect x="238.2" y="99.0" width="6.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="241.2" y="110.0"></text>
</g>
<g>
<title>byte[] (20 samples, 0.53%)</title><rect x="238.2" y="83.0" width="6.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="241.2" y="94.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (152 samples, 4.04%)</title><rect x="244.4" y="179.0" width="47.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="247.4" y="190.0">one/..</text>
</g>
<g>
<title>one.nio.http.Request (26 samples, 0.69%)</title><rect x="244.4" y="163.0" width="8.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="247.4" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (47 samples, 1.25%)</title><rect x="252.6" y="163.0" width="14.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="255.6" y="174.0"></text>
</g>
<g>
<title>java.lang.String[] (40 samples, 1.06%)</title><rect x="252.6" y="147.0" width="12.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="255.6" y="158.0"></text>
</g>
<g>
<title>java.lang.String[] (7 samples, 0.19%)</title><rect x="265.1" y="147.0" width="2.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="268.1" y="158.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (79 samples, 2.10%)</title><rect x="267.3" y="163.0" width="24.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="270.3" y="174.0">o..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (79 samples, 2.10%)</title><rect x="267.3" y="147.0" width="24.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="270.3" y="158.0">o..</text>
</g>
<g>
<title>char[] (38 samples, 1.01%)</title><rect x="267.3" y="131.0" width="12.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="270.3" y="142.0"></text>
</g>
<g>
<title>char[] (3 samples, 0.08%)</title><rect x="279.3" y="131.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="282.3" y="142.0"></text>
</g>
<g>
<title>java.lang.String (11 samples, 0.29%)</title><rect x="280.2" y="131.0" width="3.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="283.2" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (27 samples, 0.72%)</title><rect x="283.7" y="131.0" width="8.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="286.7" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (27 samples, 0.72%)</title><rect x="283.7" y="115.0" width="8.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="286.7" y="126.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (27 samples, 0.72%)</title><rect x="283.7" y="99.0" width="8.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="286.7" y="110.0"></text>
</g>
<g>
<title>byte[] (27 samples, 0.72%)</title><rect x="283.7" y="83.0" width="8.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="286.7" y="94.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (81 samples, 2.15%)</title><rect x="292.1" y="179.0" width="25.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="295.1" y="190.0">o..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (81 samples, 2.15%)</title><rect x="292.1" y="163.0" width="25.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="295.1" y="174.0">o..</text>
</g>
<g>
<title>char[] (35 samples, 0.93%)</title><rect x="292.1" y="147.0" width="11.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="295.1" y="158.0"></text>
</g>
<g>
<title>java.lang.String (25 samples, 0.66%)</title><rect x="303.1" y="147.0" width="7.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="306.1" y="158.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (21 samples, 0.56%)</title><rect x="311.0" y="147.0" width="6.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="314.0" y="158.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (21 samples, 0.56%)</title><rect x="311.0" y="131.0" width="6.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="314.0" y="142.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (21 samples, 0.56%)</title><rect x="311.0" y="115.0" width="6.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="314.0" y="126.0"></text>
</g>
<g>
<title>byte[] (21 samples, 0.56%)</title><rect x="311.0" y="99.0" width="6.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="314.0" y="110.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (1 samples, 0.03%)</title><rect x="317.6" y="195.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="320.6" y="206.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (1 samples, 0.03%)</title><rect x="317.6" y="179.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="320.6" y="190.0"></text>
</g>
<g>
<title>one/nio/net/SocketClosedException.&lt;init&gt; (1 samples, 0.03%)</title><rect x="317.6" y="163.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="320.6" y="174.0"></text>
</g>
<g>
<title>java/net/SocketException.&lt;init&gt; (1 samples, 0.03%)</title><rect x="317.6" y="147.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="320.6" y="158.0"></text>
</g>
<g>
<title>java/io/IOException.&lt;init&gt; (1 samples, 0.03%)</title><rect x="317.6" y="131.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="320.6" y="142.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (1 samples, 0.03%)</title><rect x="317.6" y="115.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="320.6" y="126.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (1 samples, 0.03%)</title><rect x="317.6" y="99.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="320.6" y="110.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1 samples, 0.03%)</title><rect x="317.6" y="83.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="320.6" y="94.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1 samples, 0.03%)</title><rect x="317.6" y="67.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="320.6" y="78.0"></text>
</g>
<g>
<title>long[] (1 samples, 0.03%)</title><rect x="317.6" y="51.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="320.6" y="62.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=25372] (418 samples, 11.12%)</title><rect x="317.9" y="259.0" width="131.1" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="320.9" y="270.0">[NIO Selector #2..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (418 samples, 11.12%)</title><rect x="317.9" y="243.0" width="131.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="320.9" y="254.0">one/nio/server/S..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (31 samples, 0.82%)</title><rect x="317.9" y="227.0" width="9.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="320.9" y="238.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (31 samples, 0.82%)</title><rect x="317.9" y="211.0" width="9.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="320.9" y="222.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (387 samples, 10.29%)</title><rect x="327.6" y="227.0" width="121.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="330.6" y="238.0">one/nio/net/Ses..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (387 samples, 10.29%)</title><rect x="327.6" y="211.0" width="121.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="330.6" y="222.0">one/nio/http/Ht..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (387 samples, 10.29%)</title><rect x="327.6" y="195.0" width="121.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="330.6" y="206.0">one/nio/http/Ht..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (122 samples, 3.24%)</title><rect x="327.6" y="179.0" width="38.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="330.6" y="190.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (122 samples, 3.24%)</title><rect x="327.6" y="163.0" width="38.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="330.6" y="174.0">one..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (81 samples, 2.15%)</title><rect x="327.6" y="147.0" width="25.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="330.6" y="158.0">R..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (31 samples, 0.82%)</title><rect x="327.6" y="131.0" width="9.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="330.6" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (31 samples, 0.82%)</title><rect x="327.6" y="115.0" width="9.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="330.6" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (31 samples, 0.82%)</title><rect x="327.6" y="99.0" width="9.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="330.6" y="110.0"></text>
</g>
<g>
<title>java.lang.String (20 samples, 0.53%)</title><rect x="327.6" y="83.0" width="6.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="330.6" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (11 samples, 0.29%)</title><rect x="333.9" y="83.0" width="3.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="336.9" y="94.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.29%)</title><rect x="333.9" y="67.0" width="3.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="336.9" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.entity (50 samples, 1.33%)</title><rect x="337.3" y="131.0" width="15.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="340.3" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (18 samples, 0.48%)</title><rect x="337.3" y="115.0" width="5.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="340.3" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (18 samples, 0.48%)</title><rect x="337.3" y="99.0" width="5.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="340.3" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer$$Lambda$85/1955586341.get$Lambda (18 samples, 0.48%)</title><rect x="337.3" y="83.0" width="5.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="340.3" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.AsyncHttpServer$$Lambda$85 (18 samples, 0.48%)</title><rect x="337.3" y="67.0" width="5.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="340.3" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.executeAsync (32 samples, 0.85%)</title><rect x="343.0" y="115.0" width="10.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="346.0" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (12 samples, 0.32%)</title><rect x="343.0" y="99.0" width="3.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="346.0" y="110.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (12 samples, 0.32%)</title><rect x="343.0" y="83.0" width="3.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="346.0" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer$$Lambda$65/1115085888.get$Lambda (12 samples, 0.32%)</title><rect x="343.0" y="67.0" width="3.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="346.0" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.AsyncHttpServer$$Lambda$65 (12 samples, 0.32%)</title><rect x="343.0" y="51.0" width="3.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="346.0" y="62.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (20 samples, 0.53%)</title><rect x="346.7" y="99.0" width="6.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="349.7" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (20 samples, 0.53%)</title><rect x="346.7" y="83.0" width="6.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="349.7" y="94.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (20 samples, 0.53%)</title><rect x="346.7" y="67.0" width="6.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="349.7" y="78.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (41 samples, 1.09%)</title><rect x="353.0" y="147.0" width="12.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="356.0" y="158.0"></text>
</g>
<g>
<title>java/lang/String.substring (41 samples, 1.09%)</title><rect x="353.0" y="131.0" width="12.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="356.0" y="142.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (41 samples, 1.09%)</title><rect x="353.0" y="115.0" width="12.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="356.0" y="126.0"></text>
</g>
<g>
<title>java.lang.String (19 samples, 0.51%)</title><rect x="353.0" y="99.0" width="6.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="356.0" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (22 samples, 0.59%)</title><rect x="359.0" y="99.0" width="6.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="362.0" y="110.0"></text>
</g>
<g>
<title>byte[] (22 samples, 0.59%)</title><rect x="359.0" y="83.0" width="6.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="362.0" y="94.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (179 samples, 4.76%)</title><rect x="365.9" y="179.0" width="56.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="368.9" y="190.0">one/ni..</text>
</g>
<g>
<title>one.nio.http.Request (35 samples, 0.93%)</title><rect x="365.9" y="163.0" width="11.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="368.9" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (53 samples, 1.41%)</title><rect x="376.9" y="163.0" width="16.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="379.9" y="174.0"></text>
</g>
<g>
<title>java.lang.String[] (47 samples, 1.25%)</title><rect x="376.9" y="147.0" width="14.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="379.9" y="158.0"></text>
</g>
<g>
<title>java.lang.String[] (6 samples, 0.16%)</title><rect x="391.6" y="147.0" width="1.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="394.6" y="158.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (91 samples, 2.42%)</title><rect x="393.5" y="163.0" width="28.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="396.5" y="174.0">on..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (91 samples, 2.42%)</title><rect x="393.5" y="147.0" width="28.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="396.5" y="158.0">on..</text>
</g>
<g>
<title>char[] (48 samples, 1.28%)</title><rect x="393.5" y="131.0" width="15.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="396.5" y="142.0"></text>
</g>
<g>
<title>char[] (3 samples, 0.08%)</title><rect x="408.6" y="131.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="411.6" y="142.0"></text>
</g>
<g>
<title>java.lang.String (13 samples, 0.35%)</title><rect x="409.5" y="131.0" width="4.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="412.5" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (27 samples, 0.72%)</title><rect x="413.6" y="131.0" width="8.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="416.6" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (27 samples, 0.72%)</title><rect x="413.6" y="115.0" width="8.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="416.6" y="126.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (27 samples, 0.72%)</title><rect x="413.6" y="99.0" width="8.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="416.6" y="110.0"></text>
</g>
<g>
<title>byte[] (26 samples, 0.69%)</title><rect x="413.6" y="83.0" width="8.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="416.6" y="94.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.03%)</title><rect x="421.7" y="83.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="424.7" y="94.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (86 samples, 2.29%)</title><rect x="422.1" y="179.0" width="26.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="425.1" y="190.0">o..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (86 samples, 2.29%)</title><rect x="422.1" y="163.0" width="26.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="425.1" y="174.0">o..</text>
</g>
<g>
<title>char[] (43 samples, 1.14%)</title><rect x="422.1" y="147.0" width="13.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="425.1" y="158.0"></text>
</g>
<g>
<title>char[] (4 samples, 0.11%)</title><rect x="435.6" y="147.0" width="1.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="438.6" y="158.0"></text>
</g>
<g>
<title>java.lang.String (15 samples, 0.40%)</title><rect x="436.8" y="147.0" width="4.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="439.8" y="158.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (24 samples, 0.64%)</title><rect x="441.5" y="147.0" width="7.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="444.5" y="158.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (24 samples, 0.64%)</title><rect x="441.5" y="131.0" width="7.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="444.5" y="142.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (24 samples, 0.64%)</title><rect x="441.5" y="115.0" width="7.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="444.5" y="126.0"></text>
</g>
<g>
<title>byte[] (24 samples, 0.64%)</title><rect x="441.5" y="99.0" width="7.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="444.5" y="110.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=25373] (354 samples, 9.41%)</title><rect x="449.0" y="259.0" width="111.1" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="452.0" y="270.0">[NIO Selector..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (354 samples, 9.41%)</title><rect x="449.0" y="243.0" width="111.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="452.0" y="254.0">one/nio/serve..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (23 samples, 0.61%)</title><rect x="449.0" y="227.0" width="7.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="452.0" y="238.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (23 samples, 0.61%)</title><rect x="449.0" y="211.0" width="7.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="452.0" y="222.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (331 samples, 8.80%)</title><rect x="456.3" y="227.0" width="103.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="459.3" y="238.0">one/nio/net/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (331 samples, 8.80%)</title><rect x="456.3" y="211.0" width="103.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="459.3" y="222.0">one/nio/http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (331 samples, 8.80%)</title><rect x="456.3" y="195.0" width="103.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="459.3" y="206.0">one/nio/http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (100 samples, 2.66%)</title><rect x="456.3" y="179.0" width="31.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="459.3" y="190.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (100 samples, 2.66%)</title><rect x="456.3" y="163.0" width="31.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="459.3" y="174.0">on..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (69 samples, 1.84%)</title><rect x="456.3" y="147.0" width="21.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="459.3" y="158.0">R..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (23 samples, 0.61%)</title><rect x="456.3" y="131.0" width="7.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="459.3" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (23 samples, 0.61%)</title><rect x="456.3" y="115.0" width="7.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="459.3" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (23 samples, 0.61%)</title><rect x="456.3" y="99.0" width="7.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="459.3" y="110.0"></text>
</g>
<g>
<title>java.lang.String (10 samples, 0.27%)</title><rect x="456.3" y="83.0" width="3.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="459.3" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (13 samples, 0.35%)</title><rect x="459.4" y="83.0" width="4.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="462.4" y="94.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.35%)</title><rect x="459.4" y="67.0" width="4.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="462.4" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.entity (46 samples, 1.22%)</title><rect x="463.5" y="131.0" width="14.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="466.5" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (10 samples, 0.27%)</title><rect x="463.5" y="115.0" width="3.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="466.5" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (10 samples, 0.27%)</title><rect x="463.5" y="99.0" width="3.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="466.5" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer$$Lambda$85/1955586341.get$Lambda (10 samples, 0.27%)</title><rect x="463.5" y="83.0" width="3.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="466.5" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.AsyncHttpServer$$Lambda$85 (10 samples, 0.27%)</title><rect x="463.5" y="67.0" width="3.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="466.5" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.executeAsync (36 samples, 0.96%)</title><rect x="466.6" y="115.0" width="11.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="469.6" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (16 samples, 0.43%)</title><rect x="466.6" y="99.0" width="5.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="469.6" y="110.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (16 samples, 0.43%)</title><rect x="466.6" y="83.0" width="5.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="469.6" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer$$Lambda$65/1115085888.get$Lambda (16 samples, 0.43%)</title><rect x="466.6" y="67.0" width="5.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="469.6" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.AsyncHttpServer$$Lambda$65 (16 samples, 0.43%)</title><rect x="466.6" y="51.0" width="5.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="469.6" y="62.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (20 samples, 0.53%)</title><rect x="471.6" y="99.0" width="6.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="474.6" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (20 samples, 0.53%)</title><rect x="471.6" y="83.0" width="6.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="474.6" y="94.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (20 samples, 0.53%)</title><rect x="471.6" y="67.0" width="6.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="474.6" y="78.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (31 samples, 0.82%)</title><rect x="477.9" y="147.0" width="9.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="480.9" y="158.0"></text>
</g>
<g>
<title>java/lang/String.substring (31 samples, 0.82%)</title><rect x="477.9" y="131.0" width="9.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="480.9" y="142.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (31 samples, 0.82%)</title><rect x="477.9" y="115.0" width="9.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="480.9" y="126.0"></text>
</g>
<g>
<title>java.lang.String (13 samples, 0.35%)</title><rect x="477.9" y="99.0" width="4.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="480.9" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (18 samples, 0.48%)</title><rect x="482.0" y="99.0" width="5.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="485.0" y="110.0"></text>
</g>
<g>
<title>byte[] (18 samples, 0.48%)</title><rect x="482.0" y="83.0" width="5.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="485.0" y="94.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (173 samples, 4.60%)</title><rect x="487.6" y="179.0" width="54.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="490.6" y="190.0">one/n..</text>
</g>
<g>
<title>one.nio.http.Request (26 samples, 0.69%)</title><rect x="487.6" y="163.0" width="8.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="490.6" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (50 samples, 1.33%)</title><rect x="495.8" y="163.0" width="15.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="498.8" y="174.0"></text>
</g>
<g>
<title>java.lang.String[] (48 samples, 1.28%)</title><rect x="495.8" y="147.0" width="15.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="498.8" y="158.0"></text>
</g>
<g>
<title>java.lang.String[] (2 samples, 0.05%)</title><rect x="510.9" y="147.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="513.9" y="158.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (97 samples, 2.58%)</title><rect x="511.5" y="163.0" width="30.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="514.5" y="174.0">on..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (97 samples, 2.58%)</title><rect x="511.5" y="147.0" width="30.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="514.5" y="158.0">on..</text>
</g>
<g>
<title>char[] (54 samples, 1.44%)</title><rect x="511.5" y="131.0" width="16.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="514.5" y="142.0"></text>
</g>
<g>
<title>char[] (4 samples, 0.11%)</title><rect x="528.4" y="131.0" width="1.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="531.4" y="142.0"></text>
</g>
<g>
<title>java.lang.String (15 samples, 0.40%)</title><rect x="529.7" y="131.0" width="4.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="532.7" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (24 samples, 0.64%)</title><rect x="534.4" y="131.0" width="7.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="537.4" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (24 samples, 0.64%)</title><rect x="534.4" y="115.0" width="7.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="537.4" y="126.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (24 samples, 0.64%)</title><rect x="534.4" y="99.0" width="7.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="537.4" y="110.0"></text>
</g>
<g>
<title>byte[] (23 samples, 0.61%)</title><rect x="534.4" y="83.0" width="7.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="537.4" y="94.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.03%)</title><rect x="541.6" y="83.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="544.6" y="94.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (58 samples, 1.54%)</title><rect x="541.9" y="179.0" width="18.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="544.9" y="190.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (58 samples, 1.54%)</title><rect x="541.9" y="163.0" width="18.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="544.9" y="174.0"></text>
</g>
<g>
<title>char[] (24 samples, 0.64%)</title><rect x="541.9" y="147.0" width="7.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="544.9" y="158.0"></text>
</g>
<g>
<title>java.lang.String (14 samples, 0.37%)</title><rect x="549.5" y="147.0" width="4.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="552.5" y="158.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (20 samples, 0.53%)</title><rect x="553.9" y="147.0" width="6.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="556.9" y="158.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (20 samples, 0.53%)</title><rect x="553.9" y="131.0" width="6.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="556.9" y="142.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (20 samples, 0.53%)</title><rect x="553.9" y="115.0" width="6.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="556.9" y="126.0"></text>
</g>
<g>
<title>byte[] (20 samples, 0.53%)</title><rect x="553.9" y="99.0" width="6.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="556.9" y="110.0"></text>
</g>
<g>
<title>[flusher-4 tid=25678] (135 samples, 3.59%)</title><rect x="560.1" y="259.0" width="42.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="563.1" y="270.0">[flu..</text>
</g>
<g>
<title>java/lang/Thread.run (135 samples, 3.59%)</title><rect x="560.1" y="243.0" width="42.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="563.1" y="254.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (135 samples, 3.59%)</title><rect x="560.1" y="227.0" width="42.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="563.1" y="238.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (135 samples, 3.59%)</title><rect x="560.1" y="211.0" width="42.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="563.1" y="222.0">java..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao$FlushingTask.run (135 samples, 3.59%)</title><rect x="560.1" y="195.0" width="42.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="563.1" y="206.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.flushAndLoad (135 samples, 3.59%)</title><rect x="560.1" y="179.0" width="42.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="563.1" y="190.0">ru/m..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.info (1 samples, 0.03%)</title><rect x="560.1" y="163.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="563.1" y="174.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (1 samples, 0.03%)</title><rect x="560.1" y="147.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="563.1" y="158.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.03%)</title><rect x="560.1" y="131.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="563.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.flush (134 samples, 3.56%)</title><rect x="560.5" y="163.0" width="42.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="563.5" y="174.0">ru/m..</text>
</g>
<g>
<title>java/lang/Long.valueOf (5 samples, 0.13%)</title><rect x="560.5" y="147.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="563.5" y="158.0"></text>
</g>
<g>
<title>java.lang.Long (5 samples, 0.13%)</title><rect x="560.5" y="131.0" width="1.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="563.5" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (38 samples, 1.01%)</title><rect x="562.0" y="147.0" width="12.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="565.0" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (20 samples, 0.53%)</title><rect x="562.0" y="131.0" width="6.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="565.0" y="142.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (18 samples, 0.48%)</title><rect x="568.3" y="131.0" width="5.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="571.3" y="142.0"></text>
</g>
<g>
<title>byte[] (17 samples, 0.45%)</title><rect x="568.3" y="115.0" width="5.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="571.3" y="126.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.03%)</title><rect x="573.6" y="115.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="576.6" y="126.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (4 samples, 0.11%)</title><rect x="574.0" y="147.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="577.0" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (4 samples, 0.11%)</title><rect x="574.0" y="131.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="577.0" y="142.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (4 samples, 0.11%)</title><rect x="574.0" y="115.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="577.0" y="126.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (4 samples, 0.11%)</title><rect x="574.0" y="99.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="577.0" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (4 samples, 0.11%)</title><rect x="574.0" y="83.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="577.0" y="94.0"></text>
</g>
<g>
<title>java.lang.Object[] (4 samples, 0.11%)</title><rect x="574.0" y="67.0" width="1.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="577.0" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (24 samples, 0.64%)</title><rect x="575.2" y="147.0" width="7.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="578.2" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (24 samples, 0.64%)</title><rect x="575.2" y="131.0" width="7.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="578.2" y="142.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (24 samples, 0.64%)</title><rect x="575.2" y="115.0" width="7.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="578.2" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Value.getData (63 samples, 1.68%)</title><rect x="582.7" y="147.0" width="19.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="585.7" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (63 samples, 1.68%)</title><rect x="582.7" y="131.0" width="19.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="585.7" y="142.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (63 samples, 1.68%)</title><rect x="582.7" y="115.0" width="19.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="585.7" y="126.0"></text>
</g>
<g>
<title>[worker-0 tid=25395] (365 samples, 9.71%)</title><rect x="602.5" y="259.0" width="114.6" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="605.5" y="270.0">[worker-0 tid=..</text>
</g>
<g>
<title>java/lang/Thread.run (365 samples, 9.71%)</title><rect x="602.5" y="243.0" width="114.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="605.5" y="254.0">java/lang/Thre..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (365 samples, 9.71%)</title><rect x="602.5" y="227.0" width="114.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="605.5" y="238.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (365 samples, 9.71%)</title><rect x="602.5" y="211.0" width="114.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="605.5" y="222.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (25 samples, 0.66%)</title><rect x="602.5" y="195.0" width="7.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="605.5" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (25 samples, 0.66%)</title><rect x="602.5" y="179.0" width="7.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="605.5" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (24 samples, 0.64%)</title><rect x="602.5" y="163.0" width="7.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="605.5" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (24 samples, 0.64%)</title><rect x="602.5" y="147.0" width="7.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="605.5" y="158.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (24 samples, 0.64%)</title><rect x="602.5" y="131.0" width="7.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="605.5" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1 samples, 0.03%)</title><rect x="610.0" y="163.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="613.0" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1 samples, 0.03%)</title><rect x="610.0" y="147.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="613.0" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (1 samples, 0.03%)</title><rect x="610.0" y="131.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="613.0" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (1 samples, 0.03%)</title><rect x="610.0" y="115.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="613.0" y="126.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (1 samples, 0.03%)</title><rect x="610.0" y="99.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="613.0" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer$$Lambda$65/1115085888.run (340 samples, 9.04%)</title><rect x="610.4" y="195.0" width="106.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="613.4" y="206.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.lambda$executeAsync$3 (340 samples, 9.04%)</title><rect x="610.4" y="179.0" width="106.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="613.4" y="190.0">ru/mail/polis..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (103 samples, 2.74%)</title><rect x="610.4" y="163.0" width="32.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="613.4" y="174.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (103 samples, 2.74%)</title><rect x="610.4" y="147.0" width="32.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="613.4" y="158.0">on..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (72 samples, 1.91%)</title><rect x="610.4" y="131.0" width="22.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="613.4" y="142.0">o..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (72 samples, 1.91%)</title><rect x="610.4" y="115.0" width="22.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="613.4" y="126.0">o..</text>
</g>
<g>
<title>byte[] (68 samples, 1.81%)</title><rect x="610.4" y="99.0" width="21.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="613.4" y="110.0">b..</text>
</g>
<g>
<title>byte[] (4 samples, 0.11%)</title><rect x="631.7" y="99.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="634.7" y="110.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (31 samples, 0.82%)</title><rect x="633.0" y="131.0" width="9.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="636.0" y="142.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (31 samples, 0.82%)</title><rect x="633.0" y="115.0" width="9.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="636.0" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer$$Lambda$85/1955586341.get (237 samples, 6.30%)</title><rect x="642.7" y="163.0" width="74.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="645.7" y="174.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.lambda$entity$2 (237 samples, 6.30%)</title><rect x="642.7" y="147.0" width="74.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="645.7" y="158.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.delete (237 samples, 6.30%)</title><rect x="642.7" y="131.0" width="74.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="645.7" y="142.0">ru/mail/..</text>
</g>
<g>
<title>java/lang/String.getBytes (24 samples, 0.64%)</title><rect x="642.7" y="115.0" width="7.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="645.7" y="126.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (24 samples, 0.64%)</title><rect x="642.7" y="99.0" width="7.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="645.7" y="110.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (24 samples, 0.64%)</title><rect x="642.7" y="83.0" width="7.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="645.7" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (24 samples, 0.64%)</title><rect x="642.7" y="67.0" width="7.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="645.7" y="78.0"></text>
</g>
<g>
<title>byte[] (24 samples, 0.64%)</title><rect x="642.7" y="51.0" width="7.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="645.7" y="62.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (44 samples, 1.17%)</title><rect x="650.2" y="115.0" width="13.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="653.2" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (44 samples, 1.17%)</title><rect x="650.2" y="99.0" width="13.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="653.2" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (44 samples, 1.17%)</title><rect x="650.2" y="83.0" width="13.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="653.2" y="94.0"></text>
</g>
<g>
<title>one.nio.http.Response (15 samples, 0.40%)</title><rect x="664.0" y="115.0" width="4.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="667.0" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (92 samples, 2.45%)</title><rect x="668.7" y="115.0" width="28.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="671.7" y="126.0">on..</text>
</g>
<g>
<title>byte[] (46 samples, 1.22%)</title><rect x="668.7" y="99.0" width="14.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="671.7" y="110.0"></text>
</g>
<g>
<title>java.lang.String[] (27 samples, 0.72%)</title><rect x="683.2" y="99.0" width="8.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="686.2" y="110.0"></text>
</g>
<g>
<title>java.lang.String (19 samples, 0.51%)</title><rect x="691.6" y="99.0" width="6.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="694.6" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.remove (62 samples, 1.65%)</title><rect x="697.6" y="115.0" width="19.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="700.6" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.remove (62 samples, 1.65%)</title><rect x="697.6" y="99.0" width="19.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="700.6" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.lock (1 samples, 0.03%)</title><rect x="697.6" y="83.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="700.6" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.03%)</title><rect x="697.6" y="67.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="700.6" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (1 samples, 0.03%)</title><rect x="697.6" y="51.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="700.6" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (1 samples, 0.03%)</title><rect x="697.6" y="35.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="700.6" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.remove (61 samples, 1.62%)</title><rect x="697.9" y="83.0" width="19.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="700.9" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (8 samples, 0.21%)</title><rect x="697.9" y="67.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="700.9" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (8 samples, 0.21%)</title><rect x="697.9" y="51.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="700.9" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Index (2 samples, 0.05%)</title><rect x="697.9" y="35.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="700.9" y="46.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Node (6 samples, 0.16%)</title><rect x="698.5" y="35.0" width="1.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="701.5" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.of (27 samples, 0.72%)</title><rect x="700.4" y="67.0" width="8.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="703.4" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Row (27 samples, 0.72%)</title><rect x="700.4" y="51.0" width="8.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="703.4" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Value.getData (10 samples, 0.27%)</title><rect x="708.9" y="67.0" width="3.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="711.9" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (10 samples, 0.27%)</title><rect x="708.9" y="51.0" width="3.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="711.9" y="62.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (10 samples, 0.27%)</title><rect x="708.9" y="35.0" width="3.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="711.9" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Value.tombstone (16 samples, 0.43%)</title><rect x="712.0" y="67.0" width="5.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="715.0" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Value (16 samples, 0.43%)</title><rect x="712.0" y="51.0" width="5.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="715.0" y="62.0"></text>
</g>
<g>
<title>[worker-1 tid=25394] (367 samples, 9.76%)</title><rect x="717.1" y="259.0" width="115.1" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="720.1" y="270.0">[worker-1 tid=..</text>
</g>
<g>
<title>java/lang/Thread.run (367 samples, 9.76%)</title><rect x="717.1" y="243.0" width="115.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="720.1" y="254.0">java/lang/Thre..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (367 samples, 9.76%)</title><rect x="717.1" y="227.0" width="115.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="720.1" y="238.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (367 samples, 9.76%)</title><rect x="717.1" y="211.0" width="115.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="720.1" y="222.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (17 samples, 0.45%)</title><rect x="717.1" y="195.0" width="5.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="720.1" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (17 samples, 0.45%)</title><rect x="717.1" y="179.0" width="5.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="720.1" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (17 samples, 0.45%)</title><rect x="717.1" y="163.0" width="5.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="720.1" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (17 samples, 0.45%)</title><rect x="717.1" y="147.0" width="5.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="720.1" y="158.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (17 samples, 0.45%)</title><rect x="717.1" y="131.0" width="5.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="720.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer$$Lambda$65/1115085888.run (350 samples, 9.31%)</title><rect x="722.4" y="195.0" width="109.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="725.4" y="206.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.lambda$executeAsync$3 (350 samples, 9.31%)</title><rect x="722.4" y="179.0" width="109.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="725.4" y="190.0">ru/mail/polis..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (109 samples, 2.90%)</title><rect x="722.4" y="163.0" width="34.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="725.4" y="174.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (109 samples, 2.90%)</title><rect x="722.4" y="147.0" width="34.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="725.4" y="158.0">on..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (66 samples, 1.76%)</title><rect x="722.4" y="131.0" width="20.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="725.4" y="142.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (66 samples, 1.76%)</title><rect x="722.4" y="115.0" width="20.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="725.4" y="126.0"></text>
</g>
<g>
<title>byte[] (64 samples, 1.70%)</title><rect x="722.4" y="99.0" width="20.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="725.4" y="110.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.05%)</title><rect x="742.5" y="99.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="745.5" y="110.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (43 samples, 1.14%)</title><rect x="743.1" y="131.0" width="13.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="746.1" y="142.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (43 samples, 1.14%)</title><rect x="743.1" y="115.0" width="13.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="746.1" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer$$Lambda$85/1955586341.get (241 samples, 6.41%)</title><rect x="756.6" y="163.0" width="75.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="759.6" y="174.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.lambda$entity$2 (241 samples, 6.41%)</title><rect x="756.6" y="147.0" width="75.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="759.6" y="158.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.delete (241 samples, 6.41%)</title><rect x="756.6" y="131.0" width="75.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="759.6" y="142.0">ru/mail/..</text>
</g>
<g>
<title>java/lang/String.getBytes (17 samples, 0.45%)</title><rect x="756.6" y="115.0" width="5.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="759.6" y="126.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (17 samples, 0.45%)</title><rect x="756.6" y="99.0" width="5.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="759.6" y="110.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (17 samples, 0.45%)</title><rect x="756.6" y="83.0" width="5.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="759.6" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (17 samples, 0.45%)</title><rect x="756.6" y="67.0" width="5.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="759.6" y="78.0"></text>
</g>
<g>
<title>byte[] (17 samples, 0.45%)</title><rect x="756.6" y="51.0" width="5.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="759.6" y="62.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (50 samples, 1.33%)</title><rect x="761.9" y="115.0" width="15.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="764.9" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (50 samples, 1.33%)</title><rect x="761.9" y="99.0" width="15.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="764.9" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (50 samples, 1.33%)</title><rect x="761.9" y="83.0" width="15.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="764.9" y="94.0"></text>
</g>
<g>
<title>one.nio.http.Response (22 samples, 0.59%)</title><rect x="777.6" y="115.0" width="6.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="780.6" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (82 samples, 2.18%)</title><rect x="784.5" y="115.0" width="25.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="787.5" y="126.0">o..</text>
</g>
<g>
<title>byte[] (35 samples, 0.93%)</title><rect x="784.5" y="99.0" width="11.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="787.5" y="110.0"></text>
</g>
<g>
<title>java.lang.String[] (23 samples, 0.61%)</title><rect x="795.5" y="99.0" width="7.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="798.5" y="110.0"></text>
</g>
<g>
<title>java.lang.String (24 samples, 0.64%)</title><rect x="802.7" y="99.0" width="7.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="805.7" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.remove (70 samples, 1.86%)</title><rect x="810.3" y="115.0" width="21.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="813.3" y="126.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.remove (70 samples, 1.86%)</title><rect x="810.3" y="99.0" width="21.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="813.3" y="110.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.remove (70 samples, 1.86%)</title><rect x="810.3" y="83.0" width="21.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="813.3" y="94.0">r..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (5 samples, 0.13%)</title><rect x="810.3" y="67.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="813.3" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (5 samples, 0.13%)</title><rect x="810.3" y="51.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="813.3" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Index (2 samples, 0.05%)</title><rect x="810.3" y="35.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="813.3" y="46.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Node (3 samples, 0.08%)</title><rect x="810.9" y="35.0" width="0.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="813.9" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.of (30 samples, 0.80%)</title><rect x="811.8" y="67.0" width="9.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="814.8" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Row (30 samples, 0.80%)</title><rect x="811.8" y="51.0" width="9.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="814.8" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Value.getData (14 samples, 0.37%)</title><rect x="821.2" y="67.0" width="4.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="824.2" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (14 samples, 0.37%)</title><rect x="821.2" y="51.0" width="4.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="824.2" y="62.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (14 samples, 0.37%)</title><rect x="821.2" y="35.0" width="4.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="824.2" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Value.tombstone (21 samples, 0.56%)</title><rect x="825.6" y="67.0" width="6.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="828.6" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Value (21 samples, 0.56%)</title><rect x="825.6" y="51.0" width="6.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="828.6" y="62.0"></text>
</g>
<g>
<title>[worker-2 tid=25392] (408 samples, 10.85%)</title><rect x="832.2" y="259.0" width="128.1" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="835.2" y="270.0">[worker-2 tid=25..</text>
</g>
<g>
<title>java/lang/Thread.run (408 samples, 10.85%)</title><rect x="832.2" y="243.0" width="128.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="835.2" y="254.0">java/lang/Thread..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (408 samples, 10.85%)</title><rect x="832.2" y="227.0" width="128.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="835.2" y="238.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (408 samples, 10.85%)</title><rect x="832.2" y="211.0" width="128.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="835.2" y="222.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (30 samples, 0.80%)</title><rect x="832.2" y="195.0" width="9.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="835.2" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (30 samples, 0.80%)</title><rect x="832.2" y="179.0" width="9.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="835.2" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (30 samples, 0.80%)</title><rect x="832.2" y="163.0" width="9.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="835.2" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (30 samples, 0.80%)</title><rect x="832.2" y="147.0" width="9.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="835.2" y="158.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (30 samples, 0.80%)</title><rect x="832.2" y="131.0" width="9.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="835.2" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer$$Lambda$65/1115085888.run (378 samples, 10.05%)</title><rect x="841.6" y="195.0" width="118.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="844.6" y="206.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.lambda$executeAsync$3 (378 samples, 10.05%)</title><rect x="841.6" y="179.0" width="118.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="844.6" y="190.0">ru/mail/polis/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (113 samples, 3.01%)</title><rect x="841.6" y="163.0" width="35.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="844.6" y="174.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (113 samples, 3.01%)</title><rect x="841.6" y="147.0" width="35.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="844.6" y="158.0">one..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (76 samples, 2.02%)</title><rect x="841.6" y="131.0" width="23.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="844.6" y="142.0">o..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (76 samples, 2.02%)</title><rect x="841.6" y="115.0" width="23.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="844.6" y="126.0">o..</text>
</g>
<g>
<title>byte[] (70 samples, 1.86%)</title><rect x="841.6" y="99.0" width="22.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="844.6" y="110.0">b..</text>
</g>
<g>
<title>byte[] (6 samples, 0.16%)</title><rect x="863.6" y="99.0" width="1.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="866.6" y="110.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (37 samples, 0.98%)</title><rect x="865.5" y="131.0" width="11.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="868.5" y="142.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (37 samples, 0.98%)</title><rect x="865.5" y="115.0" width="11.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="868.5" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer$$Lambda$85/1955586341.get (265 samples, 7.05%)</title><rect x="877.1" y="163.0" width="83.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="880.1" y="174.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.lambda$entity$2 (265 samples, 7.05%)</title><rect x="877.1" y="147.0" width="83.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="880.1" y="158.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.delete (265 samples, 7.05%)</title><rect x="877.1" y="131.0" width="83.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="880.1" y="142.0">ru/mail/p..</text>
</g>
<g>
<title>java/lang/String.getBytes (22 samples, 0.59%)</title><rect x="877.1" y="115.0" width="6.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="880.1" y="126.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (22 samples, 0.59%)</title><rect x="877.1" y="99.0" width="6.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="880.1" y="110.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (22 samples, 0.59%)</title><rect x="877.1" y="83.0" width="6.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="880.1" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (22 samples, 0.59%)</title><rect x="877.1" y="67.0" width="6.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="880.1" y="78.0"></text>
</g>
<g>
<title>byte[] (22 samples, 0.59%)</title><rect x="877.1" y="51.0" width="6.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="880.1" y="62.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (50 samples, 1.33%)</title><rect x="884.0" y="115.0" width="15.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="887.0" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (50 samples, 1.33%)</title><rect x="884.0" y="99.0" width="15.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="887.0" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (50 samples, 1.33%)</title><rect x="884.0" y="83.0" width="15.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="887.0" y="94.0"></text>
</g>
<g>
<title>one.nio.http.Response (22 samples, 0.59%)</title><rect x="899.7" y="115.0" width="6.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="902.7" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (109 samples, 2.90%)</title><rect x="906.6" y="115.0" width="34.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="909.6" y="126.0">on..</text>
</g>
<g>
<title>byte[] (39 samples, 1.04%)</title><rect x="906.6" y="99.0" width="12.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="909.6" y="110.0"></text>
</g>
<g>
<title>java.lang.String[] (47 samples, 1.25%)</title><rect x="918.9" y="99.0" width="14.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="921.9" y="110.0"></text>
</g>
<g>
<title>java.lang.String (23 samples, 0.61%)</title><rect x="933.6" y="99.0" width="7.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="936.6" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.remove (62 samples, 1.65%)</title><rect x="940.8" y="115.0" width="19.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="943.8" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.remove (62 samples, 1.65%)</title><rect x="940.8" y="99.0" width="19.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="943.8" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.lock (1 samples, 0.03%)</title><rect x="940.8" y="83.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="943.8" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.03%)</title><rect x="940.8" y="67.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="943.8" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (1 samples, 0.03%)</title><rect x="940.8" y="51.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="943.8" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (1 samples, 0.03%)</title><rect x="940.8" y="35.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="943.8" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.remove (61 samples, 1.62%)</title><rect x="941.1" y="83.0" width="19.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="944.1" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (6 samples, 0.16%)</title><rect x="941.1" y="67.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="944.1" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (6 samples, 0.16%)</title><rect x="941.1" y="51.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="944.1" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Index (3 samples, 0.08%)</title><rect x="941.1" y="35.0" width="1.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="944.1" y="46.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Node (3 samples, 0.08%)</title><rect x="942.1" y="35.0" width="0.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="945.1" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.of (30 samples, 0.80%)</title><rect x="943.0" y="67.0" width="9.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="946.0" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Row (30 samples, 0.80%)</title><rect x="943.0" y="51.0" width="9.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="946.0" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Value.getData (7 samples, 0.19%)</title><rect x="952.4" y="67.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="955.4" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (7 samples, 0.19%)</title><rect x="952.4" y="51.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="955.4" y="62.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (7 samples, 0.19%)</title><rect x="952.4" y="35.0" width="2.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="955.4" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Value.tombstone (18 samples, 0.48%)</title><rect x="954.6" y="67.0" width="5.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="957.6" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Value (18 samples, 0.48%)</title><rect x="954.6" y="51.0" width="5.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="957.6" y="62.0"></text>
</g>
<g>
<title>[worker-3 tid=25393] (399 samples, 10.61%)</title><rect x="960.3" y="259.0" width="125.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="963.3" y="270.0">[worker-3 tid=2..</text>
</g>
<g>
<title>java/lang/Thread.run (399 samples, 10.61%)</title><rect x="960.3" y="243.0" width="125.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="963.3" y="254.0">java/lang/Threa..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (399 samples, 10.61%)</title><rect x="960.3" y="227.0" width="125.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="963.3" y="238.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (399 samples, 10.61%)</title><rect x="960.3" y="211.0" width="125.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="963.3" y="222.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (19 samples, 0.51%)</title><rect x="960.3" y="195.0" width="5.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="963.3" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (19 samples, 0.51%)</title><rect x="960.3" y="179.0" width="5.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="963.3" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (19 samples, 0.51%)</title><rect x="960.3" y="163.0" width="5.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="963.3" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (19 samples, 0.51%)</title><rect x="960.3" y="147.0" width="5.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="963.3" y="158.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (19 samples, 0.51%)</title><rect x="960.3" y="131.0" width="5.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="963.3" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer$$Lambda$65/1115085888.run (380 samples, 10.11%)</title><rect x="966.2" y="195.0" width="119.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="969.2" y="206.0">ru/mail/polis/s..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.lambda$executeAsync$3 (380 samples, 10.11%)</title><rect x="966.2" y="179.0" width="119.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="969.2" y="190.0">ru/mail/polis/s..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (108 samples, 2.87%)</title><rect x="966.2" y="163.0" width="33.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="969.2" y="174.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (108 samples, 2.87%)</title><rect x="966.2" y="147.0" width="33.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="969.2" y="158.0">on..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (76 samples, 2.02%)</title><rect x="966.2" y="131.0" width="23.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="969.2" y="142.0">o..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (76 samples, 2.02%)</title><rect x="966.2" y="115.0" width="23.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="969.2" y="126.0">o..</text>
</g>
<g>
<title>byte[] (74 samples, 1.97%)</title><rect x="966.2" y="99.0" width="23.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="969.2" y="110.0">b..</text>
</g>
<g>
<title>byte[] (2 samples, 0.05%)</title><rect x="989.5" y="99.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="992.5" y="110.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (32 samples, 0.85%)</title><rect x="990.1" y="131.0" width="10.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="993.1" y="142.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (32 samples, 0.85%)</title><rect x="990.1" y="115.0" width="10.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="993.1" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer$$Lambda$85/1955586341.get (272 samples, 7.23%)</title><rect x="1000.1" y="163.0" width="85.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1003.1" y="174.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.lambda$entity$2 (272 samples, 7.23%)</title><rect x="1000.1" y="147.0" width="85.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1003.1" y="158.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.delete (272 samples, 7.23%)</title><rect x="1000.1" y="131.0" width="85.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1003.1" y="142.0">ru/mail/po..</text>
</g>
<g>
<title>java/lang/String.getBytes (25 samples, 0.66%)</title><rect x="1000.1" y="115.0" width="7.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1003.1" y="126.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (25 samples, 0.66%)</title><rect x="1000.1" y="99.0" width="7.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1003.1" y="110.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (25 samples, 0.66%)</title><rect x="1000.1" y="83.0" width="7.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1003.1" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (25 samples, 0.66%)</title><rect x="1000.1" y="67.0" width="7.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1003.1" y="78.0"></text>
</g>
<g>
<title>byte[] (25 samples, 0.66%)</title><rect x="1000.1" y="51.0" width="7.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1003.1" y="62.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (39 samples, 1.04%)</title><rect x="1008.0" y="115.0" width="12.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1011.0" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (39 samples, 1.04%)</title><rect x="1008.0" y="99.0" width="12.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1011.0" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (39 samples, 1.04%)</title><rect x="1008.0" y="83.0" width="12.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1011.0" y="94.0"></text>
</g>
<g>
<title>one.nio.http.Response (14 samples, 0.37%)</title><rect x="1020.2" y="115.0" width="4.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1023.2" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (104 samples, 2.77%)</title><rect x="1024.6" y="115.0" width="32.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1027.6" y="126.0">on..</text>
</g>
<g>
<title>byte[] (56 samples, 1.49%)</title><rect x="1024.6" y="99.0" width="17.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1027.6" y="110.0"></text>
</g>
<g>
<title>java.lang.String[] (22 samples, 0.59%)</title><rect x="1042.2" y="99.0" width="6.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1045.2" y="110.0"></text>
</g>
<g>
<title>java.lang.String (26 samples, 0.69%)</title><rect x="1049.1" y="99.0" width="8.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1052.1" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.remove (90 samples, 2.39%)</title><rect x="1057.2" y="115.0" width="28.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1060.2" y="126.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.remove (90 samples, 2.39%)</title><rect x="1057.2" y="99.0" width="28.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1060.2" y="110.0">ru..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.lock (2 samples, 0.05%)</title><rect x="1057.2" y="83.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1060.2" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.05%)</title><rect x="1057.2" y="67.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1060.2" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (2 samples, 0.05%)</title><rect x="1057.2" y="51.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1060.2" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (2 samples, 0.05%)</title><rect x="1057.2" y="35.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1060.2" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.remove (88 samples, 2.34%)</title><rect x="1057.9" y="83.0" width="27.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1060.9" y="94.0">r..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (12 samples, 0.32%)</title><rect x="1057.9" y="67.0" width="3.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1060.9" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (12 samples, 0.32%)</title><rect x="1057.9" y="51.0" width="3.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1060.9" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Index (2 samples, 0.05%)</title><rect x="1057.9" y="35.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1060.9" y="46.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Node (10 samples, 0.27%)</title><rect x="1058.5" y="35.0" width="3.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1061.5" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.of (31 samples, 0.82%)</title><rect x="1061.6" y="67.0" width="9.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1064.6" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Row (31 samples, 0.82%)</title><rect x="1061.6" y="51.0" width="9.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1064.6" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Value.getData (13 samples, 0.35%)</title><rect x="1071.4" y="67.0" width="4.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1074.4" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (13 samples, 0.35%)</title><rect x="1071.4" y="51.0" width="4.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1074.4" y="62.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (13 samples, 0.35%)</title><rect x="1071.4" y="35.0" width="4.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1074.4" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Value.tombstone (32 samples, 0.85%)</title><rect x="1075.5" y="67.0" width="10.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1078.5" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Value (32 samples, 0.85%)</title><rect x="1075.5" y="51.0" width="10.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1078.5" y="62.0"></text>
</g>
<g>
<title>[worker-4 tid=25396] (333 samples, 8.86%)</title><rect x="1085.5" y="259.0" width="104.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1088.5" y="270.0">[worker-4 ti..</text>
</g>
<g>
<title>java/lang/Thread.run (333 samples, 8.86%)</title><rect x="1085.5" y="243.0" width="104.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1088.5" y="254.0">java/lang/Th..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (333 samples, 8.86%)</title><rect x="1085.5" y="227.0" width="104.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1088.5" y="238.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (333 samples, 8.86%)</title><rect x="1085.5" y="211.0" width="104.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1088.5" y="222.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (12 samples, 0.32%)</title><rect x="1085.5" y="195.0" width="3.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1088.5" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (12 samples, 0.32%)</title><rect x="1085.5" y="179.0" width="3.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1088.5" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (11 samples, 0.29%)</title><rect x="1085.5" y="163.0" width="3.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1088.5" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (11 samples, 0.29%)</title><rect x="1085.5" y="147.0" width="3.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1088.5" y="158.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (11 samples, 0.29%)</title><rect x="1085.5" y="131.0" width="3.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1088.5" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1 samples, 0.03%)</title><rect x="1088.9" y="163.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1091.9" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1 samples, 0.03%)</title><rect x="1088.9" y="147.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1091.9" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (1 samples, 0.03%)</title><rect x="1088.9" y="131.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1091.9" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (1 samples, 0.03%)</title><rect x="1088.9" y="115.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1091.9" y="126.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (1 samples, 0.03%)</title><rect x="1088.9" y="99.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1091.9" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer$$Lambda$65/1115085888.run (321 samples, 8.54%)</title><rect x="1089.3" y="195.0" width="100.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1092.3" y="206.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.lambda$executeAsync$3 (321 samples, 8.54%)</title><rect x="1089.3" y="179.0" width="100.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1092.3" y="190.0">ru/mail/poli..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (117 samples, 3.11%)</title><rect x="1089.3" y="163.0" width="36.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1092.3" y="174.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (117 samples, 3.11%)</title><rect x="1089.3" y="147.0" width="36.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1092.3" y="158.0">one..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (80 samples, 2.13%)</title><rect x="1089.3" y="131.0" width="25.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1092.3" y="142.0">o..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (80 samples, 2.13%)</title><rect x="1089.3" y="115.0" width="25.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1092.3" y="126.0">o..</text>
</g>
<g>
<title>byte[] (72 samples, 1.91%)</title><rect x="1089.3" y="99.0" width="22.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1092.3" y="110.0">b..</text>
</g>
<g>
<title>byte[] (8 samples, 0.21%)</title><rect x="1111.9" y="99.0" width="2.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1114.9" y="110.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (37 samples, 0.98%)</title><rect x="1114.4" y="131.0" width="11.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1117.4" y="142.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (37 samples, 0.98%)</title><rect x="1114.4" y="115.0" width="11.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1117.4" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer$$Lambda$85/1955586341.get (204 samples, 5.43%)</title><rect x="1126.0" y="163.0" width="64.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1129.0" y="174.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.lambda$entity$2 (204 samples, 5.43%)</title><rect x="1126.0" y="147.0" width="64.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1129.0" y="158.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.delete (204 samples, 5.43%)</title><rect x="1126.0" y="131.0" width="64.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1129.0" y="142.0">ru/mail..</text>
</g>
<g>
<title>java/lang/String.getBytes (27 samples, 0.72%)</title><rect x="1126.0" y="115.0" width="8.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1129.0" y="126.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (27 samples, 0.72%)</title><rect x="1126.0" y="99.0" width="8.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1129.0" y="110.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (27 samples, 0.72%)</title><rect x="1126.0" y="83.0" width="8.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1129.0" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (27 samples, 0.72%)</title><rect x="1126.0" y="67.0" width="8.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1129.0" y="78.0"></text>
</g>
<g>
<title>byte[] (27 samples, 0.72%)</title><rect x="1126.0" y="51.0" width="8.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1129.0" y="62.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (44 samples, 1.17%)</title><rect x="1134.5" y="115.0" width="13.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1137.5" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (44 samples, 1.17%)</title><rect x="1134.5" y="99.0" width="13.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1137.5" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (44 samples, 1.17%)</title><rect x="1134.5" y="83.0" width="13.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1137.5" y="94.0"></text>
</g>
<g>
<title>one.nio.http.Response (10 samples, 0.27%)</title><rect x="1148.3" y="115.0" width="3.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1151.3" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (74 samples, 1.97%)</title><rect x="1151.4" y="115.0" width="23.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1154.4" y="126.0">o..</text>
</g>
<g>
<title>byte[] (34 samples, 0.90%)</title><rect x="1151.4" y="99.0" width="10.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1154.4" y="110.0"></text>
</g>
<g>
<title>java.lang.String[] (27 samples, 0.72%)</title><rect x="1162.1" y="99.0" width="8.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1165.1" y="110.0"></text>
</g>
<g>
<title>java.lang.String (13 samples, 0.35%)</title><rect x="1170.5" y="99.0" width="4.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1173.5" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.remove (49 samples, 1.30%)</title><rect x="1174.6" y="115.0" width="15.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1177.6" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.remove (49 samples, 1.30%)</title><rect x="1174.6" y="99.0" width="15.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1177.6" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.lock (1 samples, 0.03%)</title><rect x="1174.6" y="83.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1177.6" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.03%)</title><rect x="1174.6" y="67.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1177.6" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (1 samples, 0.03%)</title><rect x="1174.6" y="51.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1177.6" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (1 samples, 0.03%)</title><rect x="1174.6" y="35.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1177.6" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.remove (48 samples, 1.28%)</title><rect x="1174.9" y="83.0" width="15.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1177.9" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (6 samples, 0.16%)</title><rect x="1174.9" y="67.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1177.9" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (6 samples, 0.16%)</title><rect x="1174.9" y="51.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1177.9" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Index (2 samples, 0.05%)</title><rect x="1174.9" y="35.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1177.9" y="46.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Node (4 samples, 0.11%)</title><rect x="1175.6" y="35.0" width="1.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1178.6" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.of (20 samples, 0.53%)</title><rect x="1176.8" y="67.0" width="6.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1179.8" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Row (20 samples, 0.53%)</title><rect x="1176.8" y="51.0" width="6.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1179.8" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Value.getData (7 samples, 0.19%)</title><rect x="1183.1" y="67.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1186.1" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (7 samples, 0.19%)</title><rect x="1183.1" y="51.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1186.1" y="62.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (7 samples, 0.19%)</title><rect x="1183.1" y="35.0" width="2.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1186.1" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Value.tombstone (15 samples, 0.40%)</title><rect x="1185.3" y="67.0" width="4.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1188.3" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Value (15 samples, 0.40%)</title><rect x="1185.3" y="51.0" width="4.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1188.3" y="62.0"></text>
</g>
</g>
</svg>
