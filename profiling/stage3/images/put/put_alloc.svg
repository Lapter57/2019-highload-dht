<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="326" onload="init(evt)" viewBox="0 0 1200 326" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="309"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="309"> </text>
<g id="frames">
<g>
<title>all (4,383 samples, 100.00%)</title><rect x="10.0" y="275.0" width="1180.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="13.0" y="286.0">all</text>
</g>
<g>
<title>[NIO Acceptor 0.0.0.0:8080 tid=25374] (611 samples, 13.94%)</title><rect x="10.0" y="259.0" width="164.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="13.0" y="270.0">[NIO Acceptor 0.0.0.0..</text>
</g>
<g>
<title>one/nio/server/AcceptorThread.run (611 samples, 13.94%)</title><rect x="10.0" y="243.0" width="164.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="13.0" y="254.0">one/nio/server/Accept..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.acceptNonBlocking (1 samples, 0.02%)</title><rect x="10.0" y="227.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.0" y="238.0"></text>
</g>
<g>
<title>one.nio.net.NativeSocket (1 samples, 0.02%)</title><rect x="10.0" y="211.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="13.0" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.createSession (610 samples, 13.92%)</title><rect x="10.3" y="227.0" width="164.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.3" y="238.0">ru/mail/polis/service..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.createSession (610 samples, 13.92%)</title><rect x="10.3" y="211.0" width="164.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="13.3" y="222.0">ru/mail/polis/service..</text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.StorageSession (1 samples, 0.02%)</title><rect x="10.3" y="195.0" width="0.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="13.3" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/StorageSession.&lt;init&gt; (609 samples, 13.89%)</title><rect x="10.5" y="195.0" width="164.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.5" y="206.0">ru/mail/polis/service..</text>
</g>
<g>
<title>one/nio/http/HttpSession.&lt;init&gt; (609 samples, 13.89%)</title><rect x="10.5" y="179.0" width="164.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.5" y="190.0">one/nio/http/HttpSess..</text>
</g>
<g>
<title>byte[] (202 samples, 4.61%)</title><rect x="10.5" y="163.0" width="54.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="13.5" y="174.0">byte[]</text>
</g>
<g>
<title>byte[] (407 samples, 9.29%)</title><rect x="64.9" y="163.0" width="109.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="67.9" y="174.0">byte[]</text>
</g>
<g>
<title>[NIO Selector #0 tid=25370] (379 samples, 8.65%)</title><rect x="174.5" y="259.0" width="102.0" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="177.5" y="270.0">[NIO Selecto..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (379 samples, 8.65%)</title><rect x="174.5" y="243.0" width="102.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="177.5" y="254.0">one/nio/serv..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (17 samples, 0.39%)</title><rect x="174.5" y="227.0" width="4.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="177.5" y="238.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (17 samples, 0.39%)</title><rect x="174.5" y="211.0" width="4.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="177.5" y="222.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (362 samples, 8.26%)</title><rect x="179.1" y="227.0" width="97.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="182.1" y="238.0">one/nio/net..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (362 samples, 8.26%)</title><rect x="179.1" y="211.0" width="97.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="182.1" y="222.0">one/nio/htt..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (362 samples, 8.26%)</title><rect x="179.1" y="195.0" width="97.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="182.1" y="206.0">one/nio/htt..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (83 samples, 1.89%)</title><rect x="179.1" y="179.0" width="22.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="182.1" y="190.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (83 samples, 1.89%)</title><rect x="179.1" y="163.0" width="22.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="182.1" y="174.0">o..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (60 samples, 1.37%)</title><rect x="179.1" y="147.0" width="16.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="182.1" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (15 samples, 0.34%)</title><rect x="179.1" y="131.0" width="4.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="182.1" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (15 samples, 0.34%)</title><rect x="179.1" y="115.0" width="4.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="182.1" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (15 samples, 0.34%)</title><rect x="179.1" y="99.0" width="4.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="182.1" y="110.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.14%)</title><rect x="179.1" y="83.0" width="1.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="182.1" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (9 samples, 0.21%)</title><rect x="180.7" y="83.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="183.7" y="94.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.21%)</title><rect x="180.7" y="67.0" width="2.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="183.7" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.entity (45 samples, 1.03%)</title><rect x="183.1" y="131.0" width="12.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="186.1" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (14 samples, 0.32%)</title><rect x="183.1" y="115.0" width="3.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="186.1" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (14 samples, 0.32%)</title><rect x="183.1" y="99.0" width="3.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="186.1" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer$$Lambda$62/2080080204.get$Lambda (14 samples, 0.32%)</title><rect x="183.1" y="83.0" width="3.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="186.1" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.AsyncHttpServer$$Lambda$62 (14 samples, 0.32%)</title><rect x="183.1" y="67.0" width="3.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="186.1" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.executeAsync (31 samples, 0.71%)</title><rect x="186.9" y="115.0" width="8.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="189.9" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (18 samples, 0.41%)</title><rect x="186.9" y="99.0" width="4.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="189.9" y="110.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (18 samples, 0.41%)</title><rect x="186.9" y="83.0" width="4.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="189.9" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer$$Lambda$65/1115085888.get$Lambda (18 samples, 0.41%)</title><rect x="186.9" y="67.0" width="4.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="189.9" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.AsyncHttpServer$$Lambda$65 (18 samples, 0.41%)</title><rect x="186.9" y="51.0" width="4.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="189.9" y="62.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (13 samples, 0.30%)</title><rect x="191.7" y="99.0" width="3.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="194.7" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (13 samples, 0.30%)</title><rect x="191.7" y="83.0" width="3.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="194.7" y="94.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (13 samples, 0.30%)</title><rect x="191.7" y="67.0" width="3.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="194.7" y="78.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (23 samples, 0.52%)</title><rect x="195.2" y="147.0" width="6.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="198.2" y="158.0"></text>
</g>
<g>
<title>java/lang/String.substring (23 samples, 0.52%)</title><rect x="195.2" y="131.0" width="6.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="198.2" y="142.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (23 samples, 0.52%)</title><rect x="195.2" y="115.0" width="6.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="198.2" y="126.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.11%)</title><rect x="195.2" y="99.0" width="1.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="198.2" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (18 samples, 0.41%)</title><rect x="196.6" y="99.0" width="4.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="199.6" y="110.0"></text>
</g>
<g>
<title>byte[] (18 samples, 0.41%)</title><rect x="196.6" y="83.0" width="4.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="199.6" y="94.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (120 samples, 2.74%)</title><rect x="201.4" y="179.0" width="32.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="204.4" y="190.0">on..</text>
</g>
<g>
<title>one.nio.http.Request (19 samples, 0.43%)</title><rect x="201.4" y="163.0" width="5.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="204.4" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (24 samples, 0.55%)</title><rect x="206.5" y="163.0" width="6.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="209.5" y="174.0"></text>
</g>
<g>
<title>java.lang.String[] (24 samples, 0.55%)</title><rect x="206.5" y="147.0" width="6.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="209.5" y="158.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (77 samples, 1.76%)</title><rect x="213.0" y="163.0" width="20.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="216.0" y="174.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (77 samples, 1.76%)</title><rect x="213.0" y="147.0" width="20.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="216.0" y="158.0"></text>
</g>
<g>
<title>char[] (39 samples, 0.89%)</title><rect x="213.0" y="131.0" width="10.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="216.0" y="142.0"></text>
</g>
<g>
<title>java.lang.String (13 samples, 0.30%)</title><rect x="223.5" y="131.0" width="3.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="226.5" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (25 samples, 0.57%)</title><rect x="227.0" y="131.0" width="6.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="230.0" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (25 samples, 0.57%)</title><rect x="227.0" y="115.0" width="6.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="230.0" y="126.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (25 samples, 0.57%)</title><rect x="227.0" y="99.0" width="6.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="230.0" y="110.0"></text>
</g>
<g>
<title>byte[] (25 samples, 0.57%)</title><rect x="227.0" y="83.0" width="6.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="230.0" y="94.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (22 samples, 0.50%)</title><rect x="233.7" y="179.0" width="5.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="236.7" y="190.0"></text>
</g>
<g>
<title>byte[] (22 samples, 0.50%)</title><rect x="233.7" y="163.0" width="5.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="236.7" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (25 samples, 0.57%)</title><rect x="239.6" y="179.0" width="6.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="242.6" y="190.0"></text>
</g>
<g>
<title>java/lang/String.substring (25 samples, 0.57%)</title><rect x="239.6" y="163.0" width="6.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="242.6" y="174.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (25 samples, 0.57%)</title><rect x="239.6" y="147.0" width="6.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="242.6" y="158.0"></text>
</g>
<g>
<title>java.lang.String (16 samples, 0.37%)</title><rect x="239.6" y="131.0" width="4.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="242.6" y="142.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (9 samples, 0.21%)</title><rect x="244.0" y="131.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="247.0" y="142.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.21%)</title><rect x="244.0" y="115.0" width="2.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="247.0" y="126.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (112 samples, 2.56%)</title><rect x="246.4" y="179.0" width="30.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="249.4" y="190.0">on..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (112 samples, 2.56%)</title><rect x="246.4" y="163.0" width="30.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="249.4" y="174.0">on..</text>
</g>
<g>
<title>char[] (54 samples, 1.23%)</title><rect x="246.4" y="147.0" width="14.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="249.4" y="158.0"></text>
</g>
<g>
<title>java.lang.String (22 samples, 0.50%)</title><rect x="260.9" y="147.0" width="5.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="263.9" y="158.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (36 samples, 0.82%)</title><rect x="266.8" y="147.0" width="9.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="269.8" y="158.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (36 samples, 0.82%)</title><rect x="266.8" y="131.0" width="9.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="269.8" y="142.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (36 samples, 0.82%)</title><rect x="266.8" y="115.0" width="9.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="269.8" y="126.0"></text>
</g>
<g>
<title>byte[] (36 samples, 0.82%)</title><rect x="266.8" y="99.0" width="9.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="269.8" y="110.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=25371] (373 samples, 8.51%)</title><rect x="276.5" y="259.0" width="100.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="279.5" y="270.0">[NIO Selecto..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (373 samples, 8.51%)</title><rect x="276.5" y="243.0" width="100.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="279.5" y="254.0">one/nio/serv..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (20 samples, 0.46%)</title><rect x="276.5" y="227.0" width="5.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="279.5" y="238.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (20 samples, 0.46%)</title><rect x="276.5" y="211.0" width="5.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="279.5" y="222.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (353 samples, 8.05%)</title><rect x="281.9" y="227.0" width="95.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="284.9" y="238.0">one/nio/net..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (353 samples, 8.05%)</title><rect x="281.9" y="211.0" width="95.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="284.9" y="222.0">one/nio/htt..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (353 samples, 8.05%)</title><rect x="281.9" y="195.0" width="95.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="284.9" y="206.0">one/nio/htt..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (89 samples, 2.03%)</title><rect x="281.9" y="179.0" width="24.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="284.9" y="190.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (89 samples, 2.03%)</title><rect x="281.9" y="163.0" width="24.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="284.9" y="174.0">o..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (67 samples, 1.53%)</title><rect x="281.9" y="147.0" width="18.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="284.9" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (24 samples, 0.55%)</title><rect x="281.9" y="131.0" width="6.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="284.9" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (24 samples, 0.55%)</title><rect x="281.9" y="115.0" width="6.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="284.9" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (24 samples, 0.55%)</title><rect x="281.9" y="99.0" width="6.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="284.9" y="110.0"></text>
</g>
<g>
<title>java.lang.String (10 samples, 0.23%)</title><rect x="281.9" y="83.0" width="2.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="284.9" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (14 samples, 0.32%)</title><rect x="284.6" y="83.0" width="3.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="287.6" y="94.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.32%)</title><rect x="284.6" y="67.0" width="3.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="287.6" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.entity (43 samples, 0.98%)</title><rect x="288.4" y="131.0" width="11.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="291.4" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (13 samples, 0.30%)</title><rect x="288.4" y="115.0" width="3.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="291.4" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (13 samples, 0.30%)</title><rect x="288.4" y="99.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="291.4" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer$$Lambda$62/2080080204.get$Lambda (13 samples, 0.30%)</title><rect x="288.4" y="83.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="291.4" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.AsyncHttpServer$$Lambda$62 (13 samples, 0.30%)</title><rect x="288.4" y="67.0" width="3.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="291.4" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.executeAsync (30 samples, 0.68%)</title><rect x="291.9" y="115.0" width="8.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="294.9" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (19 samples, 0.43%)</title><rect x="291.9" y="99.0" width="5.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="294.9" y="110.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (19 samples, 0.43%)</title><rect x="291.9" y="83.0" width="5.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="294.9" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer$$Lambda$65/1115085888.get$Lambda (19 samples, 0.43%)</title><rect x="291.9" y="67.0" width="5.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="294.9" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.AsyncHttpServer$$Lambda$65 (19 samples, 0.43%)</title><rect x="291.9" y="51.0" width="5.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="294.9" y="62.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (11 samples, 0.25%)</title><rect x="297.0" y="99.0" width="3.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="300.0" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (11 samples, 0.25%)</title><rect x="297.0" y="83.0" width="3.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="300.0" y="94.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (11 samples, 0.25%)</title><rect x="297.0" y="67.0" width="3.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="300.0" y="78.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (22 samples, 0.50%)</title><rect x="300.0" y="147.0" width="5.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="303.0" y="158.0"></text>
</g>
<g>
<title>java/lang/String.substring (22 samples, 0.50%)</title><rect x="300.0" y="131.0" width="5.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="303.0" y="142.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (22 samples, 0.50%)</title><rect x="300.0" y="115.0" width="5.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="303.0" y="126.0"></text>
</g>
<g>
<title>java.lang.String (10 samples, 0.23%)</title><rect x="300.0" y="99.0" width="2.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="303.0" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (12 samples, 0.27%)</title><rect x="302.6" y="99.0" width="3.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="305.6" y="110.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.27%)</title><rect x="302.6" y="83.0" width="3.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="305.6" y="94.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (125 samples, 2.85%)</title><rect x="305.9" y="179.0" width="33.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="308.9" y="190.0">on..</text>
</g>
<g>
<title>one.nio.http.Request (19 samples, 0.43%)</title><rect x="305.9" y="163.0" width="5.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="308.9" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (34 samples, 0.78%)</title><rect x="311.0" y="163.0" width="9.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="314.0" y="174.0"></text>
</g>
<g>
<title>java.lang.String[] (34 samples, 0.78%)</title><rect x="311.0" y="147.0" width="9.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="314.0" y="158.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (72 samples, 1.64%)</title><rect x="320.1" y="163.0" width="19.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="323.1" y="174.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (72 samples, 1.64%)</title><rect x="320.1" y="147.0" width="19.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="323.1" y="158.0"></text>
</g>
<g>
<title>char[] (30 samples, 0.68%)</title><rect x="320.1" y="131.0" width="8.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="323.1" y="142.0"></text>
</g>
<g>
<title>java.lang.String (11 samples, 0.25%)</title><rect x="328.2" y="131.0" width="3.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="331.2" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (31 samples, 0.71%)</title><rect x="331.2" y="131.0" width="8.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="334.2" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (31 samples, 0.71%)</title><rect x="331.2" y="115.0" width="8.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="334.2" y="126.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (31 samples, 0.71%)</title><rect x="331.2" y="99.0" width="8.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="334.2" y="110.0"></text>
</g>
<g>
<title>byte[] (31 samples, 0.71%)</title><rect x="331.2" y="83.0" width="8.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="334.2" y="94.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (17 samples, 0.39%)</title><rect x="339.5" y="179.0" width="4.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="342.5" y="190.0"></text>
</g>
<g>
<title>byte[] (17 samples, 0.39%)</title><rect x="339.5" y="163.0" width="4.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="342.5" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (20 samples, 0.46%)</title><rect x="344.1" y="179.0" width="5.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="347.1" y="190.0"></text>
</g>
<g>
<title>java/lang/String.substring (20 samples, 0.46%)</title><rect x="344.1" y="163.0" width="5.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="347.1" y="174.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (20 samples, 0.46%)</title><rect x="344.1" y="147.0" width="5.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="347.1" y="158.0"></text>
</g>
<g>
<title>java.lang.String (14 samples, 0.32%)</title><rect x="344.1" y="131.0" width="3.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="347.1" y="142.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (6 samples, 0.14%)</title><rect x="347.9" y="131.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="350.9" y="142.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.14%)</title><rect x="347.9" y="115.0" width="1.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="350.9" y="126.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (102 samples, 2.33%)</title><rect x="349.5" y="179.0" width="27.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="352.5" y="190.0">o..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (102 samples, 2.33%)</title><rect x="349.5" y="163.0" width="27.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="352.5" y="174.0">o..</text>
</g>
<g>
<title>char[] (44 samples, 1.00%)</title><rect x="349.5" y="147.0" width="11.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="352.5" y="158.0"></text>
</g>
<g>
<title>java.lang.String (26 samples, 0.59%)</title><rect x="361.3" y="147.0" width="7.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="364.3" y="158.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (32 samples, 0.73%)</title><rect x="368.3" y="147.0" width="8.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="371.3" y="158.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (32 samples, 0.73%)</title><rect x="368.3" y="131.0" width="8.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="371.3" y="142.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (32 samples, 0.73%)</title><rect x="368.3" y="115.0" width="8.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="371.3" y="126.0"></text>
</g>
<g>
<title>byte[] (32 samples, 0.73%)</title><rect x="368.3" y="99.0" width="8.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="371.3" y="110.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=25372] (367 samples, 8.37%)</title><rect x="376.9" y="259.0" width="98.9" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="379.9" y="270.0">[NIO Selecto..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (367 samples, 8.37%)</title><rect x="376.9" y="243.0" width="98.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="379.9" y="254.0">one/nio/serv..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (18 samples, 0.41%)</title><rect x="376.9" y="227.0" width="4.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="379.9" y="238.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (18 samples, 0.41%)</title><rect x="376.9" y="211.0" width="4.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="379.9" y="222.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (349 samples, 7.96%)</title><rect x="381.8" y="227.0" width="94.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="384.8" y="238.0">one/nio/net..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (349 samples, 7.96%)</title><rect x="381.8" y="211.0" width="94.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="384.8" y="222.0">one/nio/htt..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (349 samples, 7.96%)</title><rect x="381.8" y="195.0" width="94.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="384.8" y="206.0">one/nio/htt..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (91 samples, 2.08%)</title><rect x="381.8" y="179.0" width="24.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="384.8" y="190.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (91 samples, 2.08%)</title><rect x="381.8" y="163.0" width="24.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="384.8" y="174.0">o..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (53 samples, 1.21%)</title><rect x="381.8" y="147.0" width="14.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="384.8" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (15 samples, 0.34%)</title><rect x="381.8" y="131.0" width="4.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="384.8" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (15 samples, 0.34%)</title><rect x="381.8" y="115.0" width="4.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="384.8" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (15 samples, 0.34%)</title><rect x="381.8" y="99.0" width="4.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="384.8" y="110.0"></text>
</g>
<g>
<title>java.lang.String (9 samples, 0.21%)</title><rect x="381.8" y="83.0" width="2.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="384.8" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (6 samples, 0.14%)</title><rect x="384.2" y="83.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="387.2" y="94.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.14%)</title><rect x="384.2" y="67.0" width="1.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="387.2" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.entity (38 samples, 0.87%)</title><rect x="385.8" y="131.0" width="10.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="388.8" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (12 samples, 0.27%)</title><rect x="385.8" y="115.0" width="3.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="388.8" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (12 samples, 0.27%)</title><rect x="385.8" y="99.0" width="3.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="388.8" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer$$Lambda$62/2080080204.get$Lambda (12 samples, 0.27%)</title><rect x="385.8" y="83.0" width="3.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="388.8" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.AsyncHttpServer$$Lambda$62 (12 samples, 0.27%)</title><rect x="385.8" y="67.0" width="3.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="388.8" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.executeAsync (26 samples, 0.59%)</title><rect x="389.1" y="115.0" width="7.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="392.1" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (14 samples, 0.32%)</title><rect x="389.1" y="99.0" width="3.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="392.1" y="110.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (14 samples, 0.32%)</title><rect x="389.1" y="83.0" width="3.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="392.1" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer$$Lambda$65/1115085888.get$Lambda (14 samples, 0.32%)</title><rect x="389.1" y="67.0" width="3.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="392.1" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.AsyncHttpServer$$Lambda$65 (14 samples, 0.32%)</title><rect x="389.1" y="51.0" width="3.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="392.1" y="62.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (12 samples, 0.27%)</title><rect x="392.8" y="99.0" width="3.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="395.8" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (12 samples, 0.27%)</title><rect x="392.8" y="83.0" width="3.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="395.8" y="94.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (12 samples, 0.27%)</title><rect x="392.8" y="67.0" width="3.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="395.8" y="78.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (38 samples, 0.87%)</title><rect x="396.1" y="147.0" width="10.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="399.1" y="158.0"></text>
</g>
<g>
<title>java/lang/String.substring (38 samples, 0.87%)</title><rect x="396.1" y="131.0" width="10.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="399.1" y="142.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (38 samples, 0.87%)</title><rect x="396.1" y="115.0" width="10.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="399.1" y="126.0"></text>
</g>
<g>
<title>java.lang.String (13 samples, 0.30%)</title><rect x="396.1" y="99.0" width="3.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="399.1" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (25 samples, 0.57%)</title><rect x="399.6" y="99.0" width="6.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="402.6" y="110.0"></text>
</g>
<g>
<title>byte[] (25 samples, 0.57%)</title><rect x="399.6" y="83.0" width="6.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="402.6" y="94.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (111 samples, 2.53%)</title><rect x="406.3" y="179.0" width="29.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="409.3" y="190.0">on..</text>
</g>
<g>
<title>one.nio.http.Request (12 samples, 0.27%)</title><rect x="406.3" y="163.0" width="3.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="409.3" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (28 samples, 0.64%)</title><rect x="409.5" y="163.0" width="7.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="412.5" y="174.0"></text>
</g>
<g>
<title>java.lang.String[] (28 samples, 0.64%)</title><rect x="409.5" y="147.0" width="7.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="412.5" y="158.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (71 samples, 1.62%)</title><rect x="417.1" y="163.0" width="19.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="420.1" y="174.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (71 samples, 1.62%)</title><rect x="417.1" y="147.0" width="19.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="420.1" y="158.0"></text>
</g>
<g>
<title>char[] (36 samples, 0.82%)</title><rect x="417.1" y="131.0" width="9.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="420.1" y="142.0"></text>
</g>
<g>
<title>java.lang.String (10 samples, 0.23%)</title><rect x="426.8" y="131.0" width="2.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="429.8" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (25 samples, 0.57%)</title><rect x="429.4" y="131.0" width="6.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="432.4" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (25 samples, 0.57%)</title><rect x="429.4" y="115.0" width="6.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="432.4" y="126.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (25 samples, 0.57%)</title><rect x="429.4" y="99.0" width="6.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="432.4" y="110.0"></text>
</g>
<g>
<title>byte[] (25 samples, 0.57%)</title><rect x="429.4" y="83.0" width="6.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="432.4" y="94.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (11 samples, 0.25%)</title><rect x="436.2" y="179.0" width="2.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="439.2" y="190.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.25%)</title><rect x="436.2" y="163.0" width="2.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="439.2" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (30 samples, 0.68%)</title><rect x="439.1" y="179.0" width="8.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="442.1" y="190.0"></text>
</g>
<g>
<title>java/lang/String.substring (30 samples, 0.68%)</title><rect x="439.1" y="163.0" width="8.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="442.1" y="174.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (30 samples, 0.68%)</title><rect x="439.1" y="147.0" width="8.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="442.1" y="158.0"></text>
</g>
<g>
<title>java.lang.String (15 samples, 0.34%)</title><rect x="439.1" y="131.0" width="4.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="442.1" y="142.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (15 samples, 0.34%)</title><rect x="443.2" y="131.0" width="4.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="446.2" y="142.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.34%)</title><rect x="443.2" y="115.0" width="4.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="446.2" y="126.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (106 samples, 2.42%)</title><rect x="447.2" y="179.0" width="28.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="450.2" y="190.0">on..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (106 samples, 2.42%)</title><rect x="447.2" y="163.0" width="28.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="450.2" y="174.0">on..</text>
</g>
<g>
<title>char[] (55 samples, 1.25%)</title><rect x="447.2" y="147.0" width="14.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="450.2" y="158.0"></text>
</g>
<g>
<title>java.lang.String (20 samples, 0.46%)</title><rect x="462.0" y="147.0" width="5.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="465.0" y="158.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (31 samples, 0.71%)</title><rect x="467.4" y="147.0" width="8.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="470.4" y="158.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (31 samples, 0.71%)</title><rect x="467.4" y="131.0" width="8.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="470.4" y="142.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (31 samples, 0.71%)</title><rect x="467.4" y="115.0" width="8.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="470.4" y="126.0"></text>
</g>
<g>
<title>byte[] (31 samples, 0.71%)</title><rect x="467.4" y="99.0" width="8.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="470.4" y="110.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=25373] (363 samples, 8.28%)</title><rect x="475.8" y="259.0" width="97.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="478.8" y="270.0">[NIO Select..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (363 samples, 8.28%)</title><rect x="475.8" y="243.0" width="97.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="478.8" y="254.0">one/nio/ser..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (21 samples, 0.48%)</title><rect x="475.8" y="227.0" width="5.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="478.8" y="238.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (21 samples, 0.48%)</title><rect x="475.8" y="211.0" width="5.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="478.8" y="222.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (342 samples, 7.80%)</title><rect x="481.4" y="227.0" width="92.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="484.4" y="238.0">one/nio/net..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (342 samples, 7.80%)</title><rect x="481.4" y="211.0" width="92.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="484.4" y="222.0">one/nio/htt..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (342 samples, 7.80%)</title><rect x="481.4" y="195.0" width="92.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="484.4" y="206.0">one/nio/htt..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (72 samples, 1.64%)</title><rect x="481.4" y="179.0" width="19.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="484.4" y="190.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (72 samples, 1.64%)</title><rect x="481.4" y="163.0" width="19.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="484.4" y="174.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (53 samples, 1.21%)</title><rect x="481.4" y="147.0" width="14.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="484.4" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (19 samples, 0.43%)</title><rect x="481.4" y="131.0" width="5.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="484.4" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (19 samples, 0.43%)</title><rect x="481.4" y="115.0" width="5.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="484.4" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (19 samples, 0.43%)</title><rect x="481.4" y="99.0" width="5.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="484.4" y="110.0"></text>
</g>
<g>
<title>java.lang.String (11 samples, 0.25%)</title><rect x="481.4" y="83.0" width="3.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="484.4" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (8 samples, 0.18%)</title><rect x="484.4" y="83.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="487.4" y="94.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.18%)</title><rect x="484.4" y="67.0" width="2.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="487.4" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.entity (34 samples, 0.78%)</title><rect x="486.5" y="131.0" width="9.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="489.5" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (12 samples, 0.27%)</title><rect x="486.5" y="115.0" width="3.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="489.5" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (12 samples, 0.27%)</title><rect x="486.5" y="99.0" width="3.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="489.5" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer$$Lambda$62/2080080204.get$Lambda (12 samples, 0.27%)</title><rect x="486.5" y="83.0" width="3.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="489.5" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.AsyncHttpServer$$Lambda$62 (12 samples, 0.27%)</title><rect x="486.5" y="67.0" width="3.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="489.5" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.executeAsync (22 samples, 0.50%)</title><rect x="489.8" y="115.0" width="5.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="492.8" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (11 samples, 0.25%)</title><rect x="489.8" y="99.0" width="2.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="492.8" y="110.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (11 samples, 0.25%)</title><rect x="489.8" y="83.0" width="2.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="492.8" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer$$Lambda$65/1115085888.get$Lambda (11 samples, 0.25%)</title><rect x="489.8" y="67.0" width="2.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="492.8" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.AsyncHttpServer$$Lambda$65 (11 samples, 0.25%)</title><rect x="489.8" y="51.0" width="2.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="492.8" y="62.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (11 samples, 0.25%)</title><rect x="492.7" y="99.0" width="3.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="495.7" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (11 samples, 0.25%)</title><rect x="492.7" y="83.0" width="3.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="495.7" y="94.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (11 samples, 0.25%)</title><rect x="492.7" y="67.0" width="3.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="495.7" y="78.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (19 samples, 0.43%)</title><rect x="495.7" y="147.0" width="5.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="498.7" y="158.0"></text>
</g>
<g>
<title>java/lang/String.substring (19 samples, 0.43%)</title><rect x="495.7" y="131.0" width="5.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="498.7" y="142.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (19 samples, 0.43%)</title><rect x="495.7" y="115.0" width="5.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="498.7" y="126.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.07%)</title><rect x="495.7" y="99.0" width="0.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="498.7" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (16 samples, 0.37%)</title><rect x="496.5" y="99.0" width="4.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="499.5" y="110.0"></text>
</g>
<g>
<title>byte[] (16 samples, 0.37%)</title><rect x="496.5" y="83.0" width="4.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="499.5" y="94.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (129 samples, 2.94%)</title><rect x="500.8" y="179.0" width="34.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="503.8" y="190.0">on..</text>
</g>
<g>
<title>one.nio.http.Request (12 samples, 0.27%)</title><rect x="500.8" y="163.0" width="3.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="503.8" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (35 samples, 0.80%)</title><rect x="504.0" y="163.0" width="9.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="507.0" y="174.0"></text>
</g>
<g>
<title>java.lang.String[] (35 samples, 0.80%)</title><rect x="504.0" y="147.0" width="9.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="507.0" y="158.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (82 samples, 1.87%)</title><rect x="513.4" y="163.0" width="22.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="516.4" y="174.0">o..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (82 samples, 1.87%)</title><rect x="513.4" y="147.0" width="22.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="516.4" y="158.0">o..</text>
</g>
<g>
<title>char[] (35 samples, 0.80%)</title><rect x="513.4" y="131.0" width="9.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="516.4" y="142.0"></text>
</g>
<g>
<title>java.lang.String (18 samples, 0.41%)</title><rect x="522.9" y="131.0" width="4.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="525.9" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (29 samples, 0.66%)</title><rect x="527.7" y="131.0" width="7.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="530.7" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (29 samples, 0.66%)</title><rect x="527.7" y="115.0" width="7.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="530.7" y="126.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (29 samples, 0.66%)</title><rect x="527.7" y="99.0" width="7.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="530.7" y="110.0"></text>
</g>
<g>
<title>byte[] (29 samples, 0.66%)</title><rect x="527.7" y="83.0" width="7.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="530.7" y="94.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (18 samples, 0.41%)</title><rect x="535.5" y="179.0" width="4.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="538.5" y="190.0"></text>
</g>
<g>
<title>byte[] (18 samples, 0.41%)</title><rect x="535.5" y="163.0" width="4.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="538.5" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (15 samples, 0.34%)</title><rect x="540.4" y="179.0" width="4.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="543.4" y="190.0"></text>
</g>
<g>
<title>java/lang/String.substring (15 samples, 0.34%)</title><rect x="540.4" y="163.0" width="4.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="543.4" y="174.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (15 samples, 0.34%)</title><rect x="540.4" y="147.0" width="4.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="543.4" y="158.0"></text>
</g>
<g>
<title>java.lang.String (11 samples, 0.25%)</title><rect x="540.4" y="131.0" width="2.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="543.4" y="142.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4 samples, 0.09%)</title><rect x="543.3" y="131.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="546.3" y="142.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.09%)</title><rect x="543.3" y="115.0" width="1.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="546.3" y="126.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (108 samples, 2.46%)</title><rect x="544.4" y="179.0" width="29.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="547.4" y="190.0">on..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (108 samples, 2.46%)</title><rect x="544.4" y="163.0" width="29.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="547.4" y="174.0">on..</text>
</g>
<g>
<title>char[] (51 samples, 1.16%)</title><rect x="544.4" y="147.0" width="13.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="547.4" y="158.0"></text>
</g>
<g>
<title>java.lang.String (23 samples, 0.52%)</title><rect x="558.1" y="147.0" width="6.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="561.1" y="158.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (34 samples, 0.78%)</title><rect x="564.3" y="147.0" width="9.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="567.3" y="158.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (34 samples, 0.78%)</title><rect x="564.3" y="131.0" width="9.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="567.3" y="142.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (34 samples, 0.78%)</title><rect x="564.3" y="115.0" width="9.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="567.3" y="126.0"></text>
</g>
<g>
<title>byte[] (34 samples, 0.78%)</title><rect x="564.3" y="99.0" width="9.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="567.3" y="110.0"></text>
</g>
<g>
<title>[flusher-0 tid=25487] (36 samples, 0.82%)</title><rect x="573.5" y="259.0" width="9.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="576.5" y="270.0"></text>
</g>
<g>
<title>java/lang/Thread.run (36 samples, 0.82%)</title><rect x="573.5" y="243.0" width="9.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="576.5" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (36 samples, 0.82%)</title><rect x="573.5" y="227.0" width="9.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="576.5" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (36 samples, 0.82%)</title><rect x="573.5" y="211.0" width="9.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="576.5" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao$FlushingTask.run (36 samples, 0.82%)</title><rect x="573.5" y="195.0" width="9.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="576.5" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.flushAndLoad (36 samples, 0.82%)</title><rect x="573.5" y="179.0" width="9.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="576.5" y="190.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.info (1 samples, 0.02%)</title><rect x="573.5" y="163.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="576.5" y="174.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (1 samples, 0.02%)</title><rect x="573.5" y="147.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="576.5" y="158.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.02%)</title><rect x="573.5" y="131.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="576.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.flush (35 samples, 0.80%)</title><rect x="573.8" y="163.0" width="9.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="576.8" y="174.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (10 samples, 0.23%)</title><rect x="573.8" y="147.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="576.8" y="158.0"></text>
</g>
<g>
<title>java.lang.Long (10 samples, 0.23%)</title><rect x="573.8" y="131.0" width="2.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="576.8" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (24 samples, 0.55%)</title><rect x="576.4" y="147.0" width="6.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="579.4" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (10 samples, 0.23%)</title><rect x="576.4" y="131.0" width="2.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="579.4" y="142.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (14 samples, 0.32%)</title><rect x="579.1" y="131.0" width="3.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="582.1" y="142.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.30%)</title><rect x="579.1" y="115.0" width="3.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="582.1" y="126.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.02%)</title><rect x="582.6" y="115.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="585.6" y="126.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.02%)</title><rect x="582.9" y="147.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="585.9" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.02%)</title><rect x="582.9" y="131.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="585.9" y="142.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.02%)</title><rect x="582.9" y="115.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="585.9" y="126.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.02%)</title><rect x="582.9" y="99.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="585.9" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.02%)</title><rect x="582.9" y="83.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="585.9" y="94.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.02%)</title><rect x="582.9" y="67.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="585.9" y="78.0"></text>
</g>
<g>
<title>[flusher-1 tid=25512] (32 samples, 0.73%)</title><rect x="583.2" y="259.0" width="8.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="586.2" y="270.0"></text>
</g>
<g>
<title>java/lang/Thread.run (32 samples, 0.73%)</title><rect x="583.2" y="243.0" width="8.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="586.2" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (32 samples, 0.73%)</title><rect x="583.2" y="227.0" width="8.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="586.2" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (32 samples, 0.73%)</title><rect x="583.2" y="211.0" width="8.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="586.2" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao$FlushingTask.run (32 samples, 0.73%)</title><rect x="583.2" y="195.0" width="8.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="586.2" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.flushAndLoad (32 samples, 0.73%)</title><rect x="583.2" y="179.0" width="8.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="586.2" y="190.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.info (1 samples, 0.02%)</title><rect x="583.2" y="163.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="586.2" y="174.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (1 samples, 0.02%)</title><rect x="583.2" y="147.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="586.2" y="158.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.02%)</title><rect x="583.2" y="131.0" width="0.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="586.2" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.flush (31 samples, 0.71%)</title><rect x="583.4" y="163.0" width="8.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="586.4" y="174.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (9 samples, 0.21%)</title><rect x="583.4" y="147.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="586.4" y="158.0"></text>
</g>
<g>
<title>java.lang.Long (9 samples, 0.21%)</title><rect x="583.4" y="131.0" width="2.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="586.4" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (21 samples, 0.48%)</title><rect x="585.9" y="147.0" width="5.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="588.9" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (9 samples, 0.21%)</title><rect x="585.9" y="131.0" width="2.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="588.9" y="142.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (12 samples, 0.27%)</title><rect x="588.3" y="131.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="591.3" y="142.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.27%)</title><rect x="588.3" y="115.0" width="3.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="591.3" y="126.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.02%)</title><rect x="591.5" y="147.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="594.5" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.02%)</title><rect x="591.5" y="131.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="594.5" y="142.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.02%)</title><rect x="591.5" y="115.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="594.5" y="126.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.02%)</title><rect x="591.5" y="99.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="594.5" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.02%)</title><rect x="591.5" y="83.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="594.5" y="94.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.02%)</title><rect x="591.5" y="67.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="594.5" y="78.0"></text>
</g>
<g>
<title>[flusher-4 tid=25678] (31 samples, 0.71%)</title><rect x="591.8" y="259.0" width="8.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="594.8" y="270.0"></text>
</g>
<g>
<title>java/lang/Thread.run (31 samples, 0.71%)</title><rect x="591.8" y="243.0" width="8.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="594.8" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (31 samples, 0.71%)</title><rect x="591.8" y="227.0" width="8.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="594.8" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (31 samples, 0.71%)</title><rect x="591.8" y="211.0" width="8.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="594.8" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao$FlushingTask.run (31 samples, 0.71%)</title><rect x="591.8" y="195.0" width="8.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="594.8" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.flushAndLoad (31 samples, 0.71%)</title><rect x="591.8" y="179.0" width="8.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="594.8" y="190.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.info (1 samples, 0.02%)</title><rect x="591.8" y="163.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="594.8" y="174.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (1 samples, 0.02%)</title><rect x="591.8" y="147.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="594.8" y="158.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.02%)</title><rect x="591.8" y="131.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="594.8" y="142.0"></text>
</g>
<g>
<title>java/nio/file/Path.of (1 samples, 0.02%)</title><rect x="592.1" y="163.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="595.1" y="174.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixFileSystem.getPath (1 samples, 0.02%)</title><rect x="592.1" y="147.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="595.1" y="158.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1 samples, 0.02%)</title><rect x="592.1" y="131.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="595.1" y="142.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.02%)</title><rect x="592.1" y="115.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="595.1" y="126.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.02%)</title><rect x="592.1" y="99.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="595.1" y="110.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.02%)</title><rect x="592.1" y="83.0" width="0.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="595.1" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.flush (29 samples, 0.66%)</title><rect x="592.3" y="163.0" width="7.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="595.3" y="174.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (6 samples, 0.14%)</title><rect x="592.3" y="147.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="595.3" y="158.0"></text>
</g>
<g>
<title>java.lang.Long (6 samples, 0.14%)</title><rect x="592.3" y="131.0" width="1.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="595.3" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (21 samples, 0.48%)</title><rect x="593.9" y="147.0" width="5.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="596.9" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (9 samples, 0.21%)</title><rect x="593.9" y="131.0" width="2.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="596.9" y="142.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (12 samples, 0.27%)</title><rect x="596.4" y="131.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="599.4" y="142.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.25%)</title><rect x="596.4" y="115.0" width="2.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="599.4" y="126.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.02%)</title><rect x="599.3" y="115.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="602.3" y="126.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.05%)</title><rect x="599.6" y="147.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="602.6" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.05%)</title><rect x="599.6" y="131.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="602.6" y="142.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.05%)</title><rect x="599.6" y="115.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="602.6" y="126.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.05%)</title><rect x="599.6" y="99.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="602.6" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.05%)</title><rect x="599.6" y="83.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="602.6" y="94.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.05%)</title><rect x="599.6" y="67.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="602.6" y="78.0"></text>
</g>
<g>
<title>[tid=25364] (1 samples, 0.02%)</title><rect x="600.1" y="259.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="603.1" y="270.0"></text>
</g>
<g>
<title>[not_walkable] (1 samples, 0.02%)</title><rect x="600.1" y="243.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="603.1" y="254.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.02%)</title><rect x="600.1" y="227.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="603.1" y="238.0"></text>
</g>
<g>
<title>[worker-0 tid=25395] (452 samples, 10.31%)</title><rect x="600.4" y="259.0" width="121.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="603.4" y="270.0">[worker-0 tid=2..</text>
</g>
<g>
<title>java/lang/Thread.run (452 samples, 10.31%)</title><rect x="600.4" y="243.0" width="121.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="603.4" y="254.0">java/lang/Threa..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (452 samples, 10.31%)</title><rect x="600.4" y="227.0" width="121.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="603.4" y="238.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (452 samples, 10.31%)</title><rect x="600.4" y="211.0" width="121.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="603.4" y="222.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (27 samples, 0.62%)</title><rect x="600.4" y="195.0" width="7.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="603.4" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (27 samples, 0.62%)</title><rect x="600.4" y="179.0" width="7.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="603.4" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (26 samples, 0.59%)</title><rect x="600.4" y="163.0" width="7.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="603.4" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (26 samples, 0.59%)</title><rect x="600.4" y="147.0" width="7.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="603.4" y="158.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (26 samples, 0.59%)</title><rect x="600.4" y="131.0" width="7.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="603.4" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1 samples, 0.02%)</title><rect x="607.4" y="163.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="610.4" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1 samples, 0.02%)</title><rect x="607.4" y="147.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="610.4" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (1 samples, 0.02%)</title><rect x="607.4" y="131.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="610.4" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (1 samples, 0.02%)</title><rect x="607.4" y="115.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="610.4" y="126.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (1 samples, 0.02%)</title><rect x="607.4" y="99.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="610.4" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer$$Lambda$65/1115085888.run (425 samples, 9.70%)</title><rect x="607.7" y="195.0" width="114.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="610.7" y="206.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.lambda$executeAsync$3 (425 samples, 9.70%)</title><rect x="607.7" y="179.0" width="114.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="610.7" y="190.0">ru/mail/polis/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (111 samples, 2.53%)</title><rect x="607.7" y="163.0" width="29.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="610.7" y="174.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (111 samples, 2.53%)</title><rect x="607.7" y="147.0" width="29.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="610.7" y="158.0">on..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (76 samples, 1.73%)</title><rect x="607.7" y="131.0" width="20.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="610.7" y="142.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (76 samples, 1.73%)</title><rect x="607.7" y="115.0" width="20.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="610.7" y="126.0"></text>
</g>
<g>
<title>byte[] (76 samples, 1.73%)</title><rect x="607.7" y="99.0" width="20.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="610.7" y="110.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (35 samples, 0.80%)</title><rect x="628.1" y="131.0" width="9.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="631.1" y="142.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (35 samples, 0.80%)</title><rect x="628.1" y="115.0" width="9.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="631.1" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer$$Lambda$62/2080080204.get (314 samples, 7.16%)</title><rect x="637.6" y="163.0" width="84.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="640.6" y="174.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.lambda$entity$1 (314 samples, 7.16%)</title><rect x="637.6" y="147.0" width="84.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="640.6" y="158.0">ru/mail/po..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (54 samples, 1.23%)</title><rect x="637.6" y="131.0" width="14.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="640.6" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (54 samples, 1.23%)</title><rect x="637.6" y="115.0" width="14.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="640.6" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (54 samples, 1.23%)</title><rect x="637.6" y="99.0" width="14.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="640.6" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.upsert (260 samples, 5.93%)</title><rect x="652.1" y="131.0" width="70.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="655.1" y="142.0">ru/mail..</text>
</g>
<g>
<title>java/lang/String.getBytes (30 samples, 0.68%)</title><rect x="652.1" y="115.0" width="8.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="655.1" y="126.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (30 samples, 0.68%)</title><rect x="652.1" y="99.0" width="8.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="655.1" y="110.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (30 samples, 0.68%)</title><rect x="652.1" y="83.0" width="8.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="655.1" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (30 samples, 0.68%)</title><rect x="652.1" y="67.0" width="8.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="655.1" y="78.0"></text>
</g>
<g>
<title>byte[] (30 samples, 0.68%)</title><rect x="652.1" y="51.0" width="8.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="655.1" y="62.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (43 samples, 0.98%)</title><rect x="660.2" y="115.0" width="11.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="663.2" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (43 samples, 0.98%)</title><rect x="660.2" y="99.0" width="11.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="663.2" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (43 samples, 0.98%)</title><rect x="660.2" y="83.0" width="11.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="663.2" y="94.0"></text>
</g>
<g>
<title>one.nio.http.Response (29 samples, 0.66%)</title><rect x="671.7" y="115.0" width="7.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="674.7" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (91 samples, 2.08%)</title><rect x="679.6" y="115.0" width="24.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="682.6" y="126.0">o..</text>
</g>
<g>
<title>byte[] (33 samples, 0.75%)</title><rect x="679.6" y="99.0" width="8.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="682.6" y="110.0"></text>
</g>
<g>
<title>java.lang.String[] (32 samples, 0.73%)</title><rect x="688.4" y="99.0" width="8.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="691.4" y="110.0"></text>
</g>
<g>
<title>java.lang.String (26 samples, 0.59%)</title><rect x="697.1" y="99.0" width="7.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="700.1" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.upsert (67 samples, 1.53%)</title><rect x="704.1" y="115.0" width="18.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="707.1" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.upsert (67 samples, 1.53%)</title><rect x="704.1" y="99.0" width="18.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="707.1" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.lock (1 samples, 0.02%)</title><rect x="704.1" y="83.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="707.1" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.02%)</title><rect x="704.1" y="67.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="707.1" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (1 samples, 0.02%)</title><rect x="704.1" y="51.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="707.1" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (1 samples, 0.02%)</title><rect x="704.1" y="35.0" width="0.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="707.1" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.upsert (66 samples, 1.51%)</title><rect x="704.3" y="83.0" width="17.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="707.3" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (10 samples, 0.23%)</title><rect x="704.3" y="67.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="707.3" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (10 samples, 0.23%)</title><rect x="704.3" y="51.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="707.3" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Index (2 samples, 0.05%)</title><rect x="704.3" y="35.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="707.3" y="46.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Node (8 samples, 0.18%)</title><rect x="704.9" y="35.0" width="2.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="707.9" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.of (33 samples, 0.75%)</title><rect x="707.0" y="67.0" width="8.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="710.0" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Row (33 samples, 0.75%)</title><rect x="707.0" y="51.0" width="8.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="710.0" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Value.of (23 samples, 0.52%)</title><rect x="715.9" y="67.0" width="6.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="718.9" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Value (23 samples, 0.52%)</title><rect x="715.9" y="51.0" width="6.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="718.9" y="62.0"></text>
</g>
<g>
<title>[worker-1 tid=25394] (439 samples, 10.02%)</title><rect x="722.1" y="259.0" width="118.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="725.1" y="270.0">[worker-1 tid=..</text>
</g>
<g>
<title>java/lang/Thread.run (439 samples, 10.02%)</title><rect x="722.1" y="243.0" width="118.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="725.1" y="254.0">java/lang/Thre..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (439 samples, 10.02%)</title><rect x="722.1" y="227.0" width="118.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="725.1" y="238.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (439 samples, 10.02%)</title><rect x="722.1" y="211.0" width="118.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="725.1" y="222.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (22 samples, 0.50%)</title><rect x="722.1" y="195.0" width="5.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="725.1" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (22 samples, 0.50%)</title><rect x="722.1" y="179.0" width="5.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="725.1" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (22 samples, 0.50%)</title><rect x="722.1" y="163.0" width="5.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="725.1" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (22 samples, 0.50%)</title><rect x="722.1" y="147.0" width="5.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="725.1" y="158.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (22 samples, 0.50%)</title><rect x="722.1" y="131.0" width="5.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="725.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer$$Lambda$65/1115085888.run (417 samples, 9.51%)</title><rect x="728.0" y="195.0" width="112.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="731.0" y="206.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.lambda$executeAsync$3 (417 samples, 9.51%)</title><rect x="728.0" y="179.0" width="112.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="731.0" y="190.0">ru/mail/polis/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (120 samples, 2.74%)</title><rect x="728.0" y="163.0" width="32.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="731.0" y="174.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (120 samples, 2.74%)</title><rect x="728.0" y="147.0" width="32.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="731.0" y="158.0">on..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (82 samples, 1.87%)</title><rect x="728.0" y="131.0" width="22.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="731.0" y="142.0">o..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (82 samples, 1.87%)</title><rect x="728.0" y="115.0" width="22.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="731.0" y="126.0">o..</text>
</g>
<g>
<title>byte[] (82 samples, 1.87%)</title><rect x="728.0" y="99.0" width="22.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="731.0" y="110.0">b..</text>
</g>
<g>
<title>one/nio/net/Session.write (38 samples, 0.87%)</title><rect x="750.1" y="131.0" width="10.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="753.1" y="142.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (38 samples, 0.87%)</title><rect x="750.1" y="115.0" width="10.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="753.1" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer$$Lambda$62/2080080204.get (297 samples, 6.78%)</title><rect x="760.3" y="163.0" width="80.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="763.3" y="174.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.lambda$entity$1 (297 samples, 6.78%)</title><rect x="760.3" y="147.0" width="80.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="763.3" y="158.0">ru/mail/p..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (44 samples, 1.00%)</title><rect x="760.3" y="131.0" width="11.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="763.3" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (44 samples, 1.00%)</title><rect x="760.3" y="115.0" width="11.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="763.3" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (44 samples, 1.00%)</title><rect x="760.3" y="99.0" width="11.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="763.3" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.upsert (253 samples, 5.77%)</title><rect x="772.2" y="131.0" width="68.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="775.2" y="142.0">ru/mail..</text>
</g>
<g>
<title>java/lang/String.getBytes (19 samples, 0.43%)</title><rect x="772.2" y="115.0" width="5.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="775.2" y="126.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (19 samples, 0.43%)</title><rect x="772.2" y="99.0" width="5.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="775.2" y="110.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (19 samples, 0.43%)</title><rect x="772.2" y="83.0" width="5.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="775.2" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (19 samples, 0.43%)</title><rect x="772.2" y="67.0" width="5.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="775.2" y="78.0"></text>
</g>
<g>
<title>byte[] (19 samples, 0.43%)</title><rect x="772.2" y="51.0" width="5.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="775.2" y="62.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (49 samples, 1.12%)</title><rect x="777.3" y="115.0" width="13.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="780.3" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (49 samples, 1.12%)</title><rect x="777.3" y="99.0" width="13.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="780.3" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (49 samples, 1.12%)</title><rect x="777.3" y="83.0" width="13.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="780.3" y="94.0"></text>
</g>
<g>
<title>one.nio.http.Response (24 samples, 0.55%)</title><rect x="790.5" y="115.0" width="6.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="793.5" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (94 samples, 2.14%)</title><rect x="796.9" y="115.0" width="25.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="799.9" y="126.0">o..</text>
</g>
<g>
<title>byte[] (40 samples, 0.91%)</title><rect x="796.9" y="99.0" width="10.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="799.9" y="110.0"></text>
</g>
<g>
<title>java.lang.String[] (32 samples, 0.73%)</title><rect x="807.7" y="99.0" width="8.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="810.7" y="110.0"></text>
</g>
<g>
<title>java.lang.String (22 samples, 0.50%)</title><rect x="816.3" y="99.0" width="5.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="819.3" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.upsert (67 samples, 1.53%)</title><rect x="822.2" y="115.0" width="18.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="825.2" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.upsert (67 samples, 1.53%)</title><rect x="822.2" y="99.0" width="18.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="825.2" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.lock (1 samples, 0.02%)</title><rect x="822.2" y="83.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="825.2" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.02%)</title><rect x="822.2" y="67.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="825.2" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (1 samples, 0.02%)</title><rect x="822.2" y="51.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="825.2" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (1 samples, 0.02%)</title><rect x="822.2" y="35.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="825.2" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.upsert (66 samples, 1.51%)</title><rect x="822.5" y="83.0" width="17.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="825.5" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (8 samples, 0.18%)</title><rect x="822.5" y="67.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="825.5" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (8 samples, 0.18%)</title><rect x="822.5" y="51.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="825.5" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Index (2 samples, 0.05%)</title><rect x="822.5" y="35.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="825.5" y="46.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Node (6 samples, 0.14%)</title><rect x="823.1" y="35.0" width="1.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="826.1" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.of (33 samples, 0.75%)</title><rect x="824.7" y="67.0" width="8.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="827.7" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Row (33 samples, 0.75%)</title><rect x="824.7" y="51.0" width="8.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="827.7" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Value.of (25 samples, 0.57%)</title><rect x="833.6" y="67.0" width="6.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="836.6" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Value (25 samples, 0.57%)</title><rect x="833.6" y="51.0" width="6.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="836.6" y="62.0"></text>
</g>
<g>
<title>[worker-2 tid=25392] (435 samples, 9.92%)</title><rect x="840.3" y="259.0" width="117.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="843.3" y="270.0">[worker-2 tid=..</text>
</g>
<g>
<title>java/lang/Thread.run (435 samples, 9.92%)</title><rect x="840.3" y="243.0" width="117.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="843.3" y="254.0">java/lang/Thre..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (435 samples, 9.92%)</title><rect x="840.3" y="227.0" width="117.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="843.3" y="238.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (435 samples, 9.92%)</title><rect x="840.3" y="211.0" width="117.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="843.3" y="222.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (20 samples, 0.46%)</title><rect x="840.3" y="195.0" width="5.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="843.3" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (20 samples, 0.46%)</title><rect x="840.3" y="179.0" width="5.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="843.3" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (20 samples, 0.46%)</title><rect x="840.3" y="163.0" width="5.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="843.3" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (20 samples, 0.46%)</title><rect x="840.3" y="147.0" width="5.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="843.3" y="158.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (20 samples, 0.46%)</title><rect x="840.3" y="131.0" width="5.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="843.3" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer$$Lambda$65/1115085888.run (415 samples, 9.47%)</title><rect x="845.7" y="195.0" width="111.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="848.7" y="206.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.lambda$executeAsync$3 (415 samples, 9.47%)</title><rect x="845.7" y="179.0" width="111.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="848.7" y="190.0">ru/mail/polis..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (108 samples, 2.46%)</title><rect x="845.7" y="163.0" width="29.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="848.7" y="174.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (108 samples, 2.46%)</title><rect x="845.7" y="147.0" width="29.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="848.7" y="158.0">on..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (69 samples, 1.57%)</title><rect x="845.7" y="131.0" width="18.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="848.7" y="142.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (69 samples, 1.57%)</title><rect x="845.7" y="115.0" width="18.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="848.7" y="126.0"></text>
</g>
<g>
<title>byte[] (69 samples, 1.57%)</title><rect x="845.7" y="99.0" width="18.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="848.7" y="110.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (39 samples, 0.89%)</title><rect x="864.2" y="131.0" width="10.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="867.2" y="142.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (39 samples, 0.89%)</title><rect x="864.2" y="115.0" width="10.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="867.2" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer$$Lambda$62/2080080204.get (307 samples, 7.00%)</title><rect x="874.7" y="163.0" width="82.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="877.7" y="174.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.lambda$entity$1 (307 samples, 7.00%)</title><rect x="874.7" y="147.0" width="82.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="877.7" y="158.0">ru/mail/p..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (49 samples, 1.12%)</title><rect x="874.7" y="131.0" width="13.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="877.7" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (49 samples, 1.12%)</title><rect x="874.7" y="115.0" width="13.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="877.7" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (49 samples, 1.12%)</title><rect x="874.7" y="99.0" width="13.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="877.7" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.upsert (258 samples, 5.89%)</title><rect x="887.9" y="131.0" width="69.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="890.9" y="142.0">ru/mail..</text>
</g>
<g>
<title>java/lang/String.getBytes (23 samples, 0.52%)</title><rect x="887.9" y="115.0" width="6.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="890.9" y="126.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (23 samples, 0.52%)</title><rect x="887.9" y="99.0" width="6.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="890.9" y="110.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (23 samples, 0.52%)</title><rect x="887.9" y="83.0" width="6.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="890.9" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (23 samples, 0.52%)</title><rect x="887.9" y="67.0" width="6.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="890.9" y="78.0"></text>
</g>
<g>
<title>byte[] (23 samples, 0.52%)</title><rect x="887.9" y="51.0" width="6.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="890.9" y="62.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (44 samples, 1.00%)</title><rect x="894.1" y="115.0" width="11.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="897.1" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (44 samples, 1.00%)</title><rect x="894.1" y="99.0" width="11.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="897.1" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (44 samples, 1.00%)</title><rect x="894.1" y="83.0" width="11.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="897.1" y="94.0"></text>
</g>
<g>
<title>one.nio.http.Response (16 samples, 0.37%)</title><rect x="906.0" y="115.0" width="4.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="909.0" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (103 samples, 2.35%)</title><rect x="910.3" y="115.0" width="27.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="913.3" y="126.0">o..</text>
</g>
<g>
<title>byte[] (43 samples, 0.98%)</title><rect x="910.3" y="99.0" width="11.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="913.3" y="110.0"></text>
</g>
<g>
<title>java.lang.String[] (35 samples, 0.80%)</title><rect x="921.9" y="99.0" width="9.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="924.9" y="110.0"></text>
</g>
<g>
<title>java.lang.String (25 samples, 0.57%)</title><rect x="931.3" y="99.0" width="6.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="934.3" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.upsert (72 samples, 1.64%)</title><rect x="938.0" y="115.0" width="19.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="941.0" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.upsert (72 samples, 1.64%)</title><rect x="938.0" y="99.0" width="19.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="941.0" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.lock (2 samples, 0.05%)</title><rect x="938.0" y="83.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="941.0" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.05%)</title><rect x="938.0" y="67.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="941.0" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (2 samples, 0.05%)</title><rect x="938.0" y="51.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="941.0" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (2 samples, 0.05%)</title><rect x="938.0" y="35.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="941.0" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.upsert (70 samples, 1.60%)</title><rect x="938.5" y="83.0" width="18.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="941.5" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (11 samples, 0.25%)</title><rect x="938.5" y="67.0" width="3.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="941.5" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (11 samples, 0.25%)</title><rect x="938.5" y="51.0" width="3.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="941.5" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Index (7 samples, 0.16%)</title><rect x="938.5" y="35.0" width="1.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="941.5" y="46.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Node (4 samples, 0.09%)</title><rect x="940.4" y="35.0" width="1.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="943.4" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.of (31 samples, 0.71%)</title><rect x="941.5" y="67.0" width="8.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="944.5" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Row (31 samples, 0.71%)</title><rect x="941.5" y="51.0" width="8.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="944.5" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Value.of (28 samples, 0.64%)</title><rect x="949.9" y="67.0" width="7.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="952.9" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Value (28 samples, 0.64%)</title><rect x="949.9" y="51.0" width="7.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="952.9" y="62.0"></text>
</g>
<g>
<title>[worker-3 tid=25393] (426 samples, 9.72%)</title><rect x="957.4" y="259.0" width="114.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="960.4" y="270.0">[worker-3 tid=..</text>
</g>
<g>
<title>java/lang/Thread.run (426 samples, 9.72%)</title><rect x="957.4" y="243.0" width="114.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="960.4" y="254.0">java/lang/Thre..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (426 samples, 9.72%)</title><rect x="957.4" y="227.0" width="114.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="960.4" y="238.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (426 samples, 9.72%)</title><rect x="957.4" y="211.0" width="114.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="960.4" y="222.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (26 samples, 0.59%)</title><rect x="957.4" y="195.0" width="7.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="960.4" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (26 samples, 0.59%)</title><rect x="957.4" y="179.0" width="7.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="960.4" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (25 samples, 0.57%)</title><rect x="957.4" y="163.0" width="6.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="960.4" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (25 samples, 0.57%)</title><rect x="957.4" y="147.0" width="6.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="960.4" y="158.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (25 samples, 0.57%)</title><rect x="957.4" y="131.0" width="6.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="960.4" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1 samples, 0.02%)</title><rect x="964.1" y="163.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="967.1" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1 samples, 0.02%)</title><rect x="964.1" y="147.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="967.1" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (1 samples, 0.02%)</title><rect x="964.1" y="131.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="967.1" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (1 samples, 0.02%)</title><rect x="964.1" y="115.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="967.1" y="126.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (1 samples, 0.02%)</title><rect x="964.1" y="99.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="967.1" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer$$Lambda$65/1115085888.run (400 samples, 9.13%)</title><rect x="964.4" y="195.0" width="107.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="967.4" y="206.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.lambda$executeAsync$3 (400 samples, 9.13%)</title><rect x="964.4" y="179.0" width="107.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="967.4" y="190.0">ru/mail/polis..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (109 samples, 2.49%)</title><rect x="964.4" y="163.0" width="29.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="967.4" y="174.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (109 samples, 2.49%)</title><rect x="964.4" y="147.0" width="29.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="967.4" y="158.0">on..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (71 samples, 1.62%)</title><rect x="964.4" y="131.0" width="19.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="967.4" y="142.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (71 samples, 1.62%)</title><rect x="964.4" y="115.0" width="19.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="967.4" y="126.0"></text>
</g>
<g>
<title>byte[] (71 samples, 1.62%)</title><rect x="964.4" y="99.0" width="19.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="967.4" y="110.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (38 samples, 0.87%)</title><rect x="983.5" y="131.0" width="10.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="986.5" y="142.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (38 samples, 0.87%)</title><rect x="983.5" y="115.0" width="10.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="986.5" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer$$Lambda$62/2080080204.get (291 samples, 6.64%)</title><rect x="993.7" y="163.0" width="78.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="996.7" y="174.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.lambda$entity$1 (291 samples, 6.64%)</title><rect x="993.7" y="147.0" width="78.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="996.7" y="158.0">ru/mail/p..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (45 samples, 1.03%)</title><rect x="993.7" y="131.0" width="12.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="996.7" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (45 samples, 1.03%)</title><rect x="993.7" y="115.0" width="12.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="996.7" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (45 samples, 1.03%)</title><rect x="993.7" y="99.0" width="12.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="996.7" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.upsert (246 samples, 5.61%)</title><rect x="1005.9" y="131.0" width="66.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1008.9" y="142.0">ru/mail..</text>
</g>
<g>
<title>java/lang/String.getBytes (13 samples, 0.30%)</title><rect x="1005.9" y="115.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1008.9" y="126.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (13 samples, 0.30%)</title><rect x="1005.9" y="99.0" width="3.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1008.9" y="110.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (13 samples, 0.30%)</title><rect x="1005.9" y="83.0" width="3.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1008.9" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (13 samples, 0.30%)</title><rect x="1005.9" y="67.0" width="3.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1008.9" y="78.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.30%)</title><rect x="1005.9" y="51.0" width="3.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1008.9" y="62.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (50 samples, 1.14%)</title><rect x="1009.4" y="115.0" width="13.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1012.4" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (50 samples, 1.14%)</title><rect x="1009.4" y="99.0" width="13.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1012.4" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (50 samples, 1.14%)</title><rect x="1009.4" y="83.0" width="13.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1012.4" y="94.0"></text>
</g>
<g>
<title>one.nio.http.Response (24 samples, 0.55%)</title><rect x="1022.8" y="115.0" width="6.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1025.8" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (88 samples, 2.01%)</title><rect x="1029.3" y="115.0" width="23.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1032.3" y="126.0">o..</text>
</g>
<g>
<title>byte[] (42 samples, 0.96%)</title><rect x="1029.3" y="99.0" width="11.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1032.3" y="110.0"></text>
</g>
<g>
<title>java.lang.String[] (27 samples, 0.62%)</title><rect x="1040.6" y="99.0" width="7.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1043.6" y="110.0"></text>
</g>
<g>
<title>java.lang.String (19 samples, 0.43%)</title><rect x="1047.9" y="99.0" width="5.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1050.9" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.upsert (71 samples, 1.62%)</title><rect x="1053.0" y="115.0" width="19.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1056.0" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.upsert (71 samples, 1.62%)</title><rect x="1053.0" y="99.0" width="19.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1056.0" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.lock (1 samples, 0.02%)</title><rect x="1053.0" y="83.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1056.0" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.02%)</title><rect x="1053.0" y="67.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1056.0" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (1 samples, 0.02%)</title><rect x="1053.0" y="51.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1056.0" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (1 samples, 0.02%)</title><rect x="1053.0" y="35.0" width="0.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1056.0" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.upsert (70 samples, 1.60%)</title><rect x="1053.2" y="83.0" width="18.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1056.2" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (6 samples, 0.14%)</title><rect x="1053.2" y="67.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1056.2" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (6 samples, 0.14%)</title><rect x="1053.2" y="51.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1056.2" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Index (1 samples, 0.02%)</title><rect x="1053.2" y="35.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1056.2" y="46.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Node (5 samples, 0.11%)</title><rect x="1053.5" y="35.0" width="1.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1056.5" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.of (33 samples, 0.75%)</title><rect x="1054.9" y="67.0" width="8.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1057.9" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Row (33 samples, 0.75%)</title><rect x="1054.9" y="51.0" width="8.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1057.9" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Value.of (31 samples, 0.71%)</title><rect x="1063.7" y="67.0" width="8.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1066.7" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Value (31 samples, 0.71%)</title><rect x="1063.7" y="51.0" width="8.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1066.7" y="62.0"></text>
</g>
<g>
<title>[worker-4 tid=25396] (438 samples, 9.99%)</title><rect x="1072.1" y="259.0" width="117.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1075.1" y="270.0">[worker-4 tid=..</text>
</g>
<g>
<title>java/lang/Thread.run (438 samples, 9.99%)</title><rect x="1072.1" y="243.0" width="117.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1075.1" y="254.0">java/lang/Thre..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (438 samples, 9.99%)</title><rect x="1072.1" y="227.0" width="117.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1075.1" y="238.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (438 samples, 9.99%)</title><rect x="1072.1" y="211.0" width="117.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1075.1" y="222.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (23 samples, 0.52%)</title><rect x="1072.1" y="195.0" width="6.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1075.1" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (23 samples, 0.52%)</title><rect x="1072.1" y="179.0" width="6.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1075.1" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (23 samples, 0.52%)</title><rect x="1072.1" y="163.0" width="6.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1075.1" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (23 samples, 0.52%)</title><rect x="1072.1" y="147.0" width="6.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1075.1" y="158.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (23 samples, 0.52%)</title><rect x="1072.1" y="131.0" width="6.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1075.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer$$Lambda$65/1115085888.run (415 samples, 9.47%)</title><rect x="1078.3" y="195.0" width="111.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1081.3" y="206.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.lambda$executeAsync$3 (415 samples, 9.47%)</title><rect x="1078.3" y="179.0" width="111.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1081.3" y="190.0">ru/mail/polis..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (120 samples, 2.74%)</title><rect x="1078.3" y="163.0" width="32.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1081.3" y="174.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (120 samples, 2.74%)</title><rect x="1078.3" y="147.0" width="32.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1081.3" y="158.0">on..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (86 samples, 1.96%)</title><rect x="1078.3" y="131.0" width="23.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1081.3" y="142.0">o..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (86 samples, 1.96%)</title><rect x="1078.3" y="115.0" width="23.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1081.3" y="126.0">o..</text>
</g>
<g>
<title>byte[] (86 samples, 1.96%)</title><rect x="1078.3" y="99.0" width="23.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1081.3" y="110.0">b..</text>
</g>
<g>
<title>one/nio/net/Session.write (34 samples, 0.78%)</title><rect x="1101.4" y="131.0" width="9.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1104.4" y="142.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (34 samples, 0.78%)</title><rect x="1101.4" y="115.0" width="9.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1104.4" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer$$Lambda$62/2080080204.get (295 samples, 6.73%)</title><rect x="1110.6" y="163.0" width="79.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1113.6" y="174.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.lambda$entity$1 (295 samples, 6.73%)</title><rect x="1110.6" y="147.0" width="79.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1113.6" y="158.0">ru/mail/p..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (55 samples, 1.25%)</title><rect x="1110.6" y="131.0" width="14.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1113.6" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (55 samples, 1.25%)</title><rect x="1110.6" y="115.0" width="14.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1113.6" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (55 samples, 1.25%)</title><rect x="1110.6" y="99.0" width="14.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1113.6" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/AsyncHttpServer.upsert (240 samples, 5.48%)</title><rect x="1125.4" y="131.0" width="64.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1128.4" y="142.0">ru/mail..</text>
</g>
<g>
<title>java/lang/String.getBytes (25 samples, 0.57%)</title><rect x="1125.4" y="115.0" width="6.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1128.4" y="126.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (25 samples, 0.57%)</title><rect x="1125.4" y="99.0" width="6.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1128.4" y="110.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (25 samples, 0.57%)</title><rect x="1125.4" y="83.0" width="6.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1128.4" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (25 samples, 0.57%)</title><rect x="1125.4" y="67.0" width="6.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1128.4" y="78.0"></text>
</g>
<g>
<title>byte[] (25 samples, 0.57%)</title><rect x="1125.4" y="51.0" width="6.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1128.4" y="62.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (38 samples, 0.87%)</title><rect x="1132.1" y="115.0" width="10.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1135.1" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (38 samples, 0.87%)</title><rect x="1132.1" y="99.0" width="10.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1135.1" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (38 samples, 0.87%)</title><rect x="1132.1" y="83.0" width="10.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1135.1" y="94.0"></text>
</g>
<g>
<title>one.nio.http.Response (21 samples, 0.48%)</title><rect x="1142.3" y="115.0" width="5.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1145.3" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (90 samples, 2.05%)</title><rect x="1148.0" y="115.0" width="24.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1151.0" y="126.0">o..</text>
</g>
<g>
<title>byte[] (34 samples, 0.78%)</title><rect x="1148.0" y="99.0" width="9.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1151.0" y="110.0"></text>
</g>
<g>
<title>java.lang.String[] (28 samples, 0.64%)</title><rect x="1157.2" y="99.0" width="7.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1160.2" y="110.0"></text>
</g>
<g>
<title>java.lang.String (28 samples, 0.64%)</title><rect x="1164.7" y="99.0" width="7.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1167.7" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.upsert (66 samples, 1.51%)</title><rect x="1172.2" y="115.0" width="17.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1175.2" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.upsert (66 samples, 1.51%)</title><rect x="1172.2" y="99.0" width="17.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1175.2" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.lock (1 samples, 0.02%)</title><rect x="1172.2" y="83.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1175.2" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.02%)</title><rect x="1172.2" y="67.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1175.2" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (1 samples, 0.02%)</title><rect x="1172.2" y="51.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1175.2" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (1 samples, 0.02%)</title><rect x="1172.2" y="35.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1175.2" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.upsert (65 samples, 1.48%)</title><rect x="1172.5" y="83.0" width="17.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1175.5" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (14 samples, 0.32%)</title><rect x="1172.5" y="67.0" width="3.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1175.5" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (14 samples, 0.32%)</title><rect x="1172.5" y="51.0" width="3.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1175.5" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Index (4 samples, 0.09%)</title><rect x="1172.5" y="35.0" width="1.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1175.5" y="46.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Node (10 samples, 0.23%)</title><rect x="1173.6" y="35.0" width="2.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1176.6" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.of (26 samples, 0.59%)</title><rect x="1176.3" y="67.0" width="7.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1179.3" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Row (26 samples, 0.59%)</title><rect x="1176.3" y="51.0" width="7.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1179.3" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Value.of (25 samples, 0.57%)</title><rect x="1183.3" y="67.0" width="6.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1186.3" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Value (25 samples, 0.57%)</title><rect x="1183.3" y="51.0" width="6.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1186.3" y="62.0"></text>
</g>
</g>
</svg>
